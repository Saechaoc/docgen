{
  "intro": [
    {
      "id": "AGENTS.md#0",
      "vector": {
        "repository": 0.06757373783994859,
        "guidelines": 0.1013606067599229,
        "project": 0.033786868919974296,
        "structure": 0.033786868919974296,
        "module": 0.06757373783994859,
        "organization": 0.033786868919974296,
        "spec": 0.06757373783994859,
        "md": 0.033786868919974296,
        "captures": 0.033786868919974296,
        "the": 0.27029495135979437,
        "end": 0.06757373783994859,
        "to": 0.1013606067599229,
        "architecture": 0.033786868919974296,
        "component": 0.06757373783994859,
        "contracts": 0.033786868919974296,
        "and": 0.43922929595966587,
        "must": 0.033786868919974296,
        "be": 0.033786868919974296,
        "updated": 0.033786868919974296,
        "whenever": 0.033786868919974296,
        "responsibilities": 0.033786868919974296,
        "shift": 0.033786868919974296,
        "place": 0.033786868919974296,
        "python": 0.2027212135198458,
        "source": 0.033786868919974296,
        "in": 0.16893434459987147,
        "a": 0.23650808243982008,
        "docgen": 0.16893434459987147,
        "package": 0.033786868919974296,
        "create": 0.033786868919974296,
        "it": 0.033786868919974296,
        "when": 0.06757373783994859,
        "implementation": 0.033786868919974296,
        "starts": 0.033786868919974296,
        "with": 0.16893434459987147,
        "clear": 0.033786868919974296,
        "submodules": 0.033786868919974296,
        "for": 0.1013606067599229,
        "orchestrator": 0.1013606067599229,
        "analyzers": 0.033786868919974296,
        "runners": 0.033786868919974296,
        "stores": 0.033786868919974296,
        "avoid": 0.06757373783994859,
        "leaving": 0.033786868919974296,
        "logic": 0.033786868919974296,
        "repo": 0.06757373783994859,
        "root": 0.033786868919974296,
        "mirror": 0.033786868919974296,
        "runtime": 0.033786868919974296,
        "modules": 0.06757373783994859,
        "under": 0.1013606067599229,
        "tests": 0.2027212135198458,
        "using": 0.033786868919974296,
        "test_": 0.033786868919974296,
        "py": 0.1013606067599229,
        "co": 0.033786868919974296,
        "locate": 0.033786868919974296,
        "fixtures": 0.06757373783994859,
        "_fixtures": 0.033786868919974296,
        "so": 0.13514747567989718,
        "imports": 0.06757373783994859,
        "stay": 0.06757373783994859,
        "clean": 0.033786868919974296,
        "reusable": 0.033786868919974296,
        "keep": 0.13514747567989718,
        "throwaway": 0.033786868919974296,
        "experiments": 0.033786868919974296,
        "inside": 0.033786868919974296,
        "an": 0.06757373783994859,
        "ignored": 0.033786868919974296,
        "sandbox": 0.033786868919974296,
        "directory": 0.033786868919974296,
        "scans": 0.033786868919974296,
        "remain": 0.033786868919974296,
        "focused": 0.033786868919974296,
        "on": 0.06757373783994859,
        "production": 0.033786868919974296,
        "code": 0.033786868919974296,
        "paths": 0.033786868919974296,
        "build": 0.033786868919974296,
        "test": 0.06757373783994859,
        "development": 0.033786868919974296,
        "commands": 0.033786868919974296,
        "m": 0.16893434459987147,
        "venv": 0.1013606067599229,
        "followed": 0.033786868919974296,
        "by": 0.033786868919974296,
        "scripts": 0.06757373783994859,
        "activate": 0.033786868919974296,
        "aligns": 0.033786868919974296,
        "local": 0.033786868919974296,
        "shells": 0.033786868919974296,
        "pycharm": 0.033786868919974296,
        "interpreter": 0.033786868919974296,
        "settings": 0.033786868919974296,
        "pip": 0.033786868919974296,
        "install": 0.033786868919974296,
        "e": 0.033786868919974296,
        "dev": 0.033786868919974296,
        "after": 0.06757373783994859,
        "pyproject": 0.033786868919974296,
        "toml": 0.033786868919974296,
        "is": 0.1013606067599229,
        "committed": 0.033786868919974296,
        "exposes": 0.033786868919974296,
        "cli": 0.033786868919974296,
        "plugins": 0.033786868919974296,
        "editable": 0.033786868919974296,
        "form": 0.033786868919974296,
        "without": 0.033786868919974296,
        "repeated": 0.033786868919974296,
        "reinstalls": 0.033786868919974296,
        "pytest": 0.06757373783994859,
        "runs": 0.033786868919974296,
        "full": 0.033786868919974296,
        "suite": 0.033786868919974296,
        "append": 0.033786868919974296,
        "k": 0.033786868919974296,
        "pattern": 0.033786868919974296,
        "iterate": 0.033786868919974296,
        "single": 0.06757373783994859,
        "analyzer": 0.06757373783994859,
        "or": 0.06757373783994859,
        "pipeline": 0.1013606067599229,
        "stage": 0.033786868919974296,
        "mypy": 0.033786868919974296,
        "ruff": 0.033786868919974296,
        "check": 0.033786868919974296,
        "catch": 0.033786868919974296,
        "type": 0.033786868919974296,
        "drift": 0.033786868919974296,
        "lint": 0.033786868919974296,
        "violations": 0.033786868919974296,
        "before": 0.06757373783994859,
        "readme": 0.06757373783994859,
        "generation": 0.06757373783994859,
        "attempted": 0.033786868919974296,
        "coding": 0.033786868919974296,
        "style": 0.033786868919974296,
        "naming": 0.033786868919974296,
        "conventions": 0.033786868919974296,
        "follow": 0.06757373783994859,
        "pep": 0.033786868919974296,
        "8": 0.033786868919974296,
        "4": 0.033786868919974296,
        "space": 0.033786868919974296,
        "indents": 0.033786868919974296,
        "explicit": 0.033786868919974296,
        "example": 0.033786868919974296,
        "from": 0.033786868919974296,
        "import": 0.033786868919974296,
        "static": 0.033786868919974296,
        "tooling": 0.033786868919974296,
        "can": 0.033786868919974296,
        "trace": 0.033786868919974296,
        "dependencies": 0.033786868919974296,
        "name": 0.033786868919974296,
        "their": 0.033786868919974296,
        "roles": 0.033786868919974296,
        "prompt_builder": 0.033786868919974296,
        "functions": 0.033786868919974296,
        "snake_case": 0.033786868919974296,
        "descriptive": 0.06757373783994859,
        "nouns": 0.033786868919974296,
        "first": 0.033786868919974296,
        "build_prompt_section": 0.033786868919974296,
        "run": 0.033786868919974296,
        "black": 0.033786868919974296,
        "commits": 0.06757373783994859,
        "manual": 0.033786868919974296,
        "reformatting": 0.033786868919974296,
        "unless": 0.033786868919974296,
        "formatter": 0.033786868919974296,
        "cannot": 0.033786868919974296,
        "resolve": 0.033786868919974296,
        "construct": 0.033786868919974296,
        "testing": 0.06757373783994859,
        "default": 0.033786868919974296,
        "harness": 0.033786868919974296,
        "every": 0.033786868919974296,
        "needs": 0.033786868919974296,
        "unit": 0.033786868919974296,
        "coverage": 0.033786868919974296,
        "plus": 0.033786868919974296,
        "integration": 0.06757373783994859,
        "case": 0.033786868919974296,
        "that": 0.06757373783994859,
        "walks": 0.033786868919974296,
        "snapshot": 0.033786868919974296,
        "through": 0.033786868919974296,
        "use": 0.033786868919974296,
        "names": 0.033786868919974296,
        "such": 0.033786868919974296,
        "as": 0.033786868919974296,
        "test_prompt_builder_handles_missing_signals": 0.033786868919974296,
        "arrange": 0.033786868919974296,
        "act": 0.033786868919974296,
        "assert": 0.033786868919974296,
        "comments": 0.033786868919974296,
        "minimal": 0.033786868919974296,
        "but": 0.033786868919974296,
        "intentional": 0.033786868919974296,
        "store": 0.033786868919974296,
        "regression": 0.033786868919974296,
        "generated": 0.033786868919974296,
        "slices": 0.033786868919974296,
        "data": 0.033786868919974296,
        "update": 0.033786868919974296,
        "them": 0.033786868919974296,
        "helper": 0.033786868919974296,
        "diffs": 0.033786868919974296,
        "reviewable": 0.033786868919974296,
        "commit": 0.033786868919974296,
        "pull": 0.033786868919974296,
        "request": 0.033786868919974296,
        "conventional": 0.033786868919974296,
        "feat": 0.033786868919974296,
        "fix": 0.033786868919974296,
        "docs": 0.033786868919974296,
        "subject": 0.033786868919974296,
        "lines": 0.033786868919974296,
        "72": 0.033786868919974296,
        "characters": 0.033786868919974296,
        "explain": 0.033786868919974296,
        "broader": 0.033786868919974296,
        "scope": 0.033786868919974296,
        "body": 0.033786868919974296,
        "multiple": 0.033786868919974296,
        "subsystems": 0.033786868919974296,
        "change": 0.033786868919974296,
        "bundle": 0.033786868919974296,
        "related": 0.033786868919974296,
        "work": 0.033786868919974296,
        "into": 0.033786868919974296,
        "pr": 0.033786868919974296,
        "includes": 0.033786868919974296,
        "summary": 0.033786868919974296,
        "notes": 0.033786868919974296,
        "links": 0.033786868919974296
      },
      "text": "# Repository Guidelines ## Project Structure & Module Organization - `spec/spec.md` captures the end-to-end architecture, component contracts, and must be updated whenever responsibilities shift. - Place Python source in a `docgen/` package (create it when implementation starts) with clear submodules for orchestrator, analyzers, runners, and stores; avoid leaving logic in the repo root. - Mirror runtime modules under `tests/` using `test_<module>.py`; co-locate fixtures in `tests/_fixtures/` so imports stay clean and reusable. - Keep throwaway experiments inside an ignored `sandbox/` directory so repository scans remain focused on production code paths. ## Build, Test, and Development Commands - `python -m venv .venv` followed by `.\\\\.venv\\\\Scripts\\\\activate` aligns local shells with the PyCharm interpreter settings. - `python -m pip install -e .[dev]` (after a `pyproject.toml` is committed) exposes the CLI and plugins in editable form without repeated reinstalls. - `python -m pytest` runs the full suite; append `-k <pattern>` to iterate on a single analyzer or pipeline stage. - `python -m mypy docgen` and `python -m ruff check docgen tests` catch type drift and lint violations before README generation is attempted. ## Coding Style & Naming Conventions - Follow PEP 8 with 4-space indents and explicit imports (for example, `from docgen.orchestrator import Pipeline`) so static tooling can trace dependencies. - Name modules after their roles (`orchestrator.py`, `prompt_builder.py`) and keep functions snake_case with descriptive nouns first (`build_prompt_section`). - Run `black docgen tests` before commits; avoid manual reformatting unless the formatter cannot resolve a construct. ## Testing Guidelines - Pytest is the default harness; every analyzer or pipeline component needs unit coverage plus an integration case under `tests/integration/` that walks a repo snapshot through generation. - Use descriptive test names such as `test_prompt_builder_handles_missing_signals` and keep Arrange-Act-Assert comments minimal but intentional. - Store regression fixtures for generated README slices under `tests/data/` and update them with helper scripts so diffs stay reviewable. ## Commit & Pull Request Guidelines - Follow Conventional Commits (`feat:`, `fix:`, `docs:`); keep subject lines <=72 characters and explain broader scope in the body when multiple subsystems change. - Bundle related work into a single PR that includes a summary, testing notes, and links to",
      "metadata": {
        "path": "AGENTS.md",
        "tags": [
          "docs"
        ],
        "hash": "dfeeea63c97ae7cb3036fbb0312edaee5f377b31178db6fbde6c843da7ceb8d2"
      }
    },
    {
      "id": "AGENTS.md#1",
      "vector": {
        "readme": 0.1270001270001905,
        "slices": 0.06350006350009525,
        "under": 0.06350006350009525,
        "tests": 0.06350006350009525,
        "data": 0.06350006350009525,
        "and": 0.4445004445006667,
        "update": 0.06350006350009525,
        "them": 0.06350006350009525,
        "with": 0.06350006350009525,
        "helper": 0.06350006350009525,
        "scripts": 0.06350006350009525,
        "so": 0.06350006350009525,
        "diffs": 0.06350006350009525,
        "stay": 0.06350006350009525,
        "reviewable": 0.06350006350009525,
        "commit": 0.1270001270001905,
        "pull": 0.06350006350009525,
        "request": 0.06350006350009525,
        "guidelines": 0.06350006350009525,
        "follow": 0.06350006350009525,
        "conventional": 0.06350006350009525,
        "commits": 0.06350006350009525,
        "feat": 0.06350006350009525,
        "fix": 0.06350006350009525,
        "docs": 0.1270001270001905,
        "keep": 0.1270001270001905,
        "subject": 0.06350006350009525,
        "lines": 0.06350006350009525,
        "72": 0.06350006350009525,
        "characters": 0.06350006350009525,
        "explain": 0.06350006350009525,
        "broader": 0.06350006350009525,
        "scope": 0.06350006350009525,
        "in": 0.254000254000381,
        "the": 0.31750031750047625,
        "body": 0.06350006350009525,
        "when": 0.1270001270001905,
        "multiple": 0.06350006350009525,
        "subsystems": 0.06350006350009525,
        "change": 0.06350006350009525,
        "bundle": 0.06350006350009525,
        "related": 0.06350006350009525,
        "work": 0.1270001270001905,
        "into": 0.06350006350009525,
        "a": 0.254000254000381,
        "single": 0.06350006350009525,
        "pr": 0.1270001270001905,
        "that": 0.06350006350009525,
        "includes": 0.06350006350009525,
        "summary": 0.06350006350009525,
        "testing": 0.06350006350009525,
        "notes": 0.1270001270001905,
        "links": 0.06350006350009525,
        "to": 0.06350006350009525,
        "relevant": 0.06350006350009525,
        "issues": 0.06350006350009525,
        "or": 0.06350006350009525,
        "spec": 0.06350006350009525,
        "sections": 0.06350006350009525,
        "attach": 0.06350006350009525,
        "before": 0.1270001270001905,
        "after": 0.06350006350009525,
        "excerpts": 0.06350006350009525,
        "altering": 0.06350006350009525,
        "generation": 0.06350006350009525,
        "output": 0.06350006350009525,
        "run": 0.06350006350009525,
        "lint": 0.06350006350009525,
        "type": 0.06350006350009525,
        "check": 0.06350006350009525,
        "test": 0.06350006350009525,
        "commands": 0.06350006350009525,
        "opening": 0.06350006350009525,
        "paste": 0.06350006350009525,
        "condensed": 0.06350006350009525,
        "results": 0.06350006350009525,
        "description": 0.06350006350009525,
        "for": 0.06350006350009525,
        "quick": 0.06350006350009525,
        "verification": 0.06350006350009525,
        "environment": 0.1270001270001905,
        "tooling": 0.06350006350009525,
        "reuse": 0.06350006350009525,
        "local": 0.1270001270001905,
        "venv": 0.06350006350009525,
        "seeded": 0.06350006350009525,
        "by": 0.1270001270001905,
        "pycharm": 0.06350006350009525,
        "do": 0.06350006350009525,
        "not": 0.06350006350009525,
        "artifacts": 0.06350006350009525,
        "store": 0.06350006350009525,
        "secrets": 0.06350006350009525,
        "env": 0.06350006350009525,
        "consumed": 0.06350006350009525,
        "llm": 0.06350006350009525,
        "runner": 0.06350006350009525,
        "large": 0.06350006350009525,
        "model": 0.06350006350009525,
        "weights": 0.06350006350009525,
        "outside": 0.06350006350009525,
        "repository": 0.06350006350009525,
        "document": 0.06350006350009525,
        "their": 0.06350006350009525,
        "locations": 0.06350006350009525,
        "models": 0.06350006350009525,
        "md": 0.06350006350009525,
        "once": 0.06350006350009525,
        "integration": 0.06350006350009525,
        "begins": 0.06350006350009525
      },
      "text": "README slices under `tests/data/` and update them with helper scripts so diffs stay reviewable. ## Commit & Pull Request Guidelines - Follow Conventional Commits (`feat:`, `fix:`, `docs:`); keep subject lines <=72 characters and explain broader scope in the body when multiple subsystems change. - Bundle related work into a single PR that includes a summary, testing notes, and links to relevant issues or spec sections; attach before/after README excerpts when altering generation output. - Run lint, type-check, and test commands before opening a PR and paste condensed results in the description for quick verification. ## Environment & Tooling Notes - Reuse the local `.venv` seeded by PyCharm; do not commit environment artifacts and store secrets in a `.env` consumed by the local LLM runner. - Keep large model weights outside the repository and document their locations in `docs/models.md` once integration work begins.",
      "metadata": {
        "path": "AGENTS.md",
        "tags": [
          "docs"
        ],
        "hash": "dfeeea63c97ae7cb3036fbb0312edaee5f377b31178db6fbde6c843da7ceb8d2"
      }
    },
    {
      "id": "README_before.md#0",
      "vector": {
        "docgen": 0.6611099775215866,
        "begin": 0.12592571000411173,
        "badges": 0.06296285500205587,
        "build": 0.15740713750513965,
        "status": 0.031481427501027934,
        "https": 0.0944442825030838,
        "img": 0.0944442825030838,
        "shields": 0.0944442825030838,
        "io": 0.0944442825030838,
        "badge": 0.0944442825030838,
        "pending": 0.031481427501027934,
        "lightgrey": 0.0944442825030838,
        "svg": 0.0944442825030838,
        "coverage": 0.06296285500205587,
        "review": 0.031481427501027934,
        "needed": 0.031481427501027934,
        "license": 0.12592571000411173,
        "tbd": 0.031481427501027934,
        "end": 0.0944442825030838,
        "toc": 0.06296285500205587,
        "table": 0.031481427501027934,
        "of": 0.031481427501027934,
        "contents": 0.031481427501027934,
        "features": 0.12592571000411173,
        "architecture": 0.06296285500205587,
        "high": 0.06296285500205587,
        "level": 0.06296285500205587,
        "flow": 0.06296285500205587,
        "component": 0.06296285500205587,
        "responsibilities": 0.06296285500205587,
        "artifacts": 0.06296285500205587,
        "and": 0.2833328475092514,
        "data": 0.06296285500205587,
        "stores": 0.06296285500205587,
        "pipeline": 0.06296285500205587,
        "sequence": 0.12592571000411173,
        "init": 0.0944442825030838,
        "patch": 0.06296285500205587,
        "update": 0.0944442825030838,
        "api": 0.06296285500205587,
        "signal": 0.06296285500205587,
        "extraction": 0.06296285500205587,
        "quick": 0.06296285500205587,
        "start": 0.06296285500205587,
        "configuration": 0.06296285500205587,
        "test": 0.06296285500205587,
        "deployment": 0.06296285500205587,
        "troubleshooting": 0.06296285500205587,
        "faq": 0.06296285500205587,
        "intro": 0.06296285500205587,
        "is": 0.031481427501027934,
        "a": 0.0944442825030838,
        "local": 0.0944442825030838,
        "first": 0.031481427501027934,
        "readme": 0.06296285500205587,
        "generator": 0.031481427501027934,
        "for": 0.0944442825030838,
        "polyglot": 0.031481427501027934,
        "repositories": 0.031481427501027934,
        "it": 0.031481427501027934,
        "scans": 0.031481427501027934,
        "every": 0.06296285500205587,
        "tracked": 0.031481427501027934,
        "file": 0.031481427501027934,
        "publishes": 0.031481427501027934,
        "analyzer": 0.06296285500205587,
        "signals": 0.0944442825030838,
        "retrieves": 0.031481427501027934,
        "grounded": 0.031481427501027934,
        "context": 0.06296285500205587,
        "guides": 0.031481427501027934,
        "llm": 0.06296285500205587,
        "through": 0.031481427501027934,
        "templated": 0.031481427501027934,
        "sections": 0.031481427501027934,
        "to": 0.031481427501027934,
        "produce": 0.031481427501027934,
        "or": 0.031481427501027934,
        "documentation": 0.031481427501027934,
        "this": 0.031481427501027934,
        "overview": 0.031481427501027934,
        "reflects": 0.031481427501027934,
        "complete": 0.031481427501027934,
        "pass": 0.031481427501027934,
        "across": 0.031481427501027934,
        "tests": 0.031481427501027934,
        "spec": 0.031481427501027934,
        "docs": 0.06296285500205587,
        "so": 0.031481427501027934,
        "contributors": 0.031481427501027934,
        "understand": 0.031481427501027934,
        "abstraction": 0.031481427501027934,
        "before": 0.031481427501027934,
        "running": 0.031481427501027934,
        "repository": 0.06296285500205587,
        "manifest": 0.031481427501027934,
        "caching": 0.031481427501027934,
        "repo_scanner": 0.031481427501027934,
        "py": 0.15740713750513965,
        "walks": 0.031481427501027934,
        "the": 0.031481427501027934,
        "tree": 0.031481427501027934,
        "respects": 0.031481427501027934,
        "gitignore": 0.031481427501027934,
        "yml": 0.031481427501027934,
        "hashes": 0.031481427501027934,
        "files": 0.031481427501027934,
        "persists": 0.031481427501027934,
        "manifest_cache": 0.031481427501027934,
        "json": 0.06296285500205587,
        "incremental": 0.031481427501027934,
        "runs": 0.031481427501027934,
        "plugin": 0.031481427501027934,
        "system": 0.031481427501027934,
        "analyzers": 0.031481427501027934,
        "discover": 0.031481427501027934,
        "language": 0.031481427501027934,
        "dependency": 0.031481427501027934,
        "entrypoint": 0.031481427501027934,
        "pattern": 0.031481427501027934,
        "structure": 0.031481427501027934,
        "that": 0.031481427501027934,
        "describe": 0.031481427501027934,
        "frameworks": 0.031481427501027934,
        "commands": 0.06296285500205587,
        "apis": 0.031481427501027934,
        "entities": 0.031481427501027934,
        "topology": 0.031481427501027934,
        "template": 0.031481427501027934,
        "driven": 0.031481427501027934,
        "prompting": 0.06296285500205587,
        "builder": 0.031481427501027934,
        "merges": 0.031481427501027934,
        "with": 0.031481427501027934,
        "jinja": 0.031481427501027934,
        "templates": 0.031481427501027934,
        "validates": 0.031481427501027934,
        "applies": 0.031481427501027934,
        "style": 0.031481427501027934,
        "presets": 0.031481427501027934,
        "injects": 0.031481427501027934,
        "retrieved": 0.031481427501027934,
        "per": 0.031481427501027934,
        "section": 0.06296285500205587,
        "lightweight": 0.031481427501027934,
        "rag": 0.06296285500205587,
        "index": 0.031481427501027934,
        "indexer": 0.031481427501027934,
        "embedder": 0.031481427501027934,
        "store": 0.031481427501027934,
        "embed": 0.031481427501027934,
        "source": 0.031481427501027934,
        "excerpts": 0.031481427501027934,
        "into": 0.031481427501027934,
        "embeddings": 0.031481427501027934,
        "scoped": 0.031481427501027934,
        "retrieval": 0.031481427501027934,
        "enforcement": 0.031481427501027934
      },
      "text": "# docgen <!-- docgen:begin:badges --> [![Build Status](https://img.shields.io/badge/build-pending-lightgrey.svg)](#) [![Coverage](https://img.shields.io/badge/coverage-review--needed-lightgrey.svg)](#) [![License](https://img.shields.io/badge/license-tbd-lightgrey.svg)](#) <!-- docgen:end:badges --> <!-- docgen:begin:toc --> ## Table of Contents - [Features](#features) - [Architecture](#architecture) - [High-Level Flow](#high-level-flow) - [Component Responsibilities](#component-responsibilities) - [Artifacts and Data Stores](#artifacts-and-data-stores) - [Pipeline Sequence (`docgen init`)](#pipeline-sequence-docgen-init) - [Patch Sequence (`docgen update`)](#patch-sequence-docgen-update) - [API Signal Extraction](#api-signal-extraction) - [Quick Start](#quick-start) - [Configuration](#configuration) - [Build & Test](#build-test) - [Deployment](#deployment) - [Troubleshooting](#troubleshooting) - [FAQ](#faq) - [License](#license) <!-- docgen:end:toc --> <!-- docgen:begin:intro --> docgen is a local-first README generator for polyglot repositories. It scans every tracked file, publishes analyzer signals, retrieves grounded context, and guides a local LLM through templated sections to produce or update documentation. This overview reflects a complete pass across `docgen/`, `tests/`, `spec/`, and `docs/` so contributors understand every abstraction before running `docgen init`. <!-- docgen:end:intro --> ## Features <!-- docgen:begin:features --> - **Repository manifest & caching** - `docgen/repo_scanner.py` walks the tree, respects `.gitignore`/`.docgen.yml`, hashes files, and persists `manifest_cache.json` for incremental runs. - **Analyzer plugin system** - `docgen/analyzers/*` discover language, build, dependency, entrypoint, pattern, and structure signals that describe frameworks, commands, APIs, entities, and repository topology. - **Template-driven prompting** - `docgen/prompting/builder.py` merges signals with Jinja templates, validates commands, applies style presets, and injects retrieved context per section. - **Lightweight RAG index** - `docgen/rag/indexer.py`, `embedder.py`, and `store.py` embed README/docs/source excerpts into `.docgen/embeddings.json` for section-scoped retrieval. - **Local LLM enforcement** -",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#1",
      "vector": {
        "docgen": 0.48261708906584017,
        "prompting": 0.06434894520877868,
        "builder": 0.03217447260438934,
        "py": 0.3217447260438934,
        "merges": 0.03217447260438934,
        "signals": 0.03217447260438934,
        "with": 0.06434894520877868,
        "jinja": 0.06434894520877868,
        "templates": 0.06434894520877868,
        "validates": 0.03217447260438934,
        "commands": 0.03217447260438934,
        "applies": 0.03217447260438934,
        "style": 0.03217447260438934,
        "presets": 0.03217447260438934,
        "and": 0.2252213082307254,
        "injects": 0.03217447260438934,
        "retrieved": 0.03217447260438934,
        "context": 0.03217447260438934,
        "per": 0.03217447260438934,
        "section": 0.06434894520877868,
        "lightweight": 0.03217447260438934,
        "rag": 0.1608723630219467,
        "index": 0.03217447260438934,
        "indexer": 0.03217447260438934,
        "embedder": 0.03217447260438934,
        "store": 0.03217447260438934,
        "embed": 0.03217447260438934,
        "readme": 0.09652341781316803,
        "docs": 0.03217447260438934,
        "source": 0.03217447260438934,
        "excerpts": 0.03217447260438934,
        "into": 0.03217447260438934,
        "embeddings": 0.06434894520877868,
        "json": 0.06434894520877868,
        "for": 0.03217447260438934,
        "scoped": 0.03217447260438934,
        "retrieval": 0.03217447260438934,
        "local": 0.06434894520877868,
        "llm": 0.19304683562633607,
        "enforcement": 0.03217447260438934,
        "runner": 0.06434894520877868,
        "targets": 0.03217447260438934,
        "loopback": 0.03217447260438934,
        "model": 0.06434894520877868,
        "or": 0.06434894520877868,
        "ollama": 0.03217447260438934,
        "blocks": 0.03217447260438934,
        "remote": 0.03217447260438934,
        "hosts": 0.03217447260438934,
        "exposes": 0.03217447260438934,
        "configurable": 0.03217447260438934,
        "temperature": 0.03217447260438934,
        "token": 0.03217447260438934,
        "limits": 0.03217447260438934,
        "post": 0.2252213082307254,
        "processing": 0.09652341781316803,
        "contract": 0.03217447260438934,
        "postproc": 0.03217447260438934,
        "add": 0.03217447260438934,
        "badges": 0.06434894520877868,
        "rebuild": 0.03217447260438934,
        "the": 0.1608723630219467,
        "toc": 0.06434894520877868,
        "lint": 0.06434894520877868,
        "markdown": 0.03217447260438934,
        "validate": 0.03217447260438934,
        "links": 0.06434894520877868,
        "manage": 0.03217447260438934,
        "markers": 0.03217447260438934,
        "compute": 0.03217447260438934,
        "scorecards": 0.03217447260438934,
        "saved": 0.03217447260438934,
        "to": 0.09652341781316803,
        "scorecard": 0.06434894520877868,
        "git": 0.1608723630219467,
        "aware": 0.03217447260438934,
        "publishing": 0.06434894520877868,
        "diff": 0.03217447260438934,
        "maps": 0.03217447260438934,
        "changed": 0.03217447260438934,
        "files": 0.03217447260438934,
        "sections": 0.03217447260438934,
        "while": 0.03217447260438934,
        "publisher": 0.06434894520877868,
        "commits": 0.03217447260438934,
        "opens": 0.03217447260438934,
        "prs": 0.03217447260438934,
        "generated": 0.03217447260438934,
        "deltas": 0.03217447260438934,
        "via": 0.03217447260438934,
        "github": 0.03217447260438934,
        "cli": 0.19304683562633607,
        "resilient": 0.03217447260438934,
        "ux": 0.03217447260438934,
        "failsafe": 0.03217447260438934,
        "provide": 0.03217447260438934,
        "verbose": 0.03217447260438934,
        "logging": 0.03217447260438934,
        "hooks": 0.03217447260438934,
        "dry": 0.03217447260438934,
        "run": 0.03217447260438934,
        "preview": 0.03217447260438934,
        "support": 0.03217447260438934,
        "fallback": 0.03217447260438934,
        "stubs": 0.03217447260438934,
        "when": 0.03217447260438934,
        "pipeline": 0.06434894520877868,
        "cannot": 0.03217447260438934,
        "complete": 0.03217447260438934,
        "end": 0.09652341781316803,
        "features": 0.03217447260438934,
        "architecture": 0.06434894520877868,
        "begin": 0.03217447260438934,
        "high": 0.03217447260438934,
        "level": 0.03217447260438934,
        "flow": 0.03217447260438934,
        "orchestrator": 0.09652341781316803,
        "coordinates": 0.03217447260438934,
        "described": 0.03217447260438934,
        "in": 0.03217447260438934,
        "spec": 0.06434894520877868,
        "md": 0.06434894520877868,
        "composing": 0.03217447260438934,
        "scanners": 0.03217447260438934,
        "analyzers": 0.06434894520877868,
        "services": 0.03217447260438934,
        "mermaid": 0.03217447260438934,
        "flowchart": 0.03217447260438934,
        "lr": 0.03217447260438934,
        "init": 0.03217447260438934,
        "update": 0.03217447260438934,
        "orc": 0.2573957808351147,
        "scan": 0.06434894520877868,
        "reposcanner": 0.03217447260438934,
        "n": 0.2252213082307254,
        "manifest": 0.03217447260438934,
        "ana": 0.06434894520877868,
        "language": 0.03217447260438934,
        "build": 0.03217447260438934,
        "etc": 0.03217447260438934,
        "ragindexer": 0.03217447260438934,
        "prompt": 0.1608723630219467,
        "promptbuilder": 0.03217447260438934,
        "llmrunner": 0.03217447260438934,
        "commit": 0.03217447260438934,
        "pr": 0.03217447260438934,
        "output": 0.06434894520877868,
        "artifacts": 0.03217447260438934,
        "component": 0.03217447260438934,
        "responsibilities": 0.03217447260438934,
        "layer": 0.03217447260438934,
        "key": 0.03217447260438934
      },
      "text": "- `docgen/prompting/builder.py` merges signals with Jinja templates, validates commands, applies style presets, and injects retrieved context per section. - **Lightweight RAG index** - `docgen/rag/indexer.py`, `embedder.py`, and `store.py` embed README/docs/source excerpts into `.docgen/embeddings.json` for section-scoped retrieval. - **Local LLM enforcement** - `docgen/llm/runner.py` targets loopback Model Runner or Ollama, blocks remote hosts, and exposes configurable temperature/token limits. - **Post-processing contract** - `docgen/postproc/*` add badges, rebuild the ToC, lint markdown, validate links, manage markers, and compute scorecards saved to `.docgen/scorecard.json`. - **Git-aware publishing** - `docgen/git/diff.py` maps changed files to sections while `docgen/git/publisher.py` commits or opens PRs with generated README deltas via the GitHub CLI. - **Resilient CLI UX** - `docgen/cli.py` and `docgen/failsafe.py` provide verbose logging hooks, dry-run preview support, and fallback stubs when the LLM pipeline cannot complete. <!-- docgen:end:features --> ## Architecture <!-- docgen:begin:architecture --> ### High-Level Flow The orchestrator (`docgen/orchestrator.py`) coordinates the end-to-end pipeline described in `spec/spec.md`, composing scanners, analyzers, prompting, RAG, post-processing, and publishing services. ```mermaid flowchart LR CLI[\"CLI (docgen init/update)\"] Orc[\"Orchestrator\"] Scan[\"RepoScanner\\n(manifest)\"] Ana[\"Analyzers\\n(language/build/etc)\"] RAG[\"RAGIndexer\\n(embeddings)\"] Prompt[\"PromptBuilder\\n(Jinja templates)\"] LLM[\"LLMRunner\\n(local model)\"] Post[\"Post-Processing\\n(lint, ToC, badges, links, scorecard)\"] Git[\"Publisher\\n(commit/PR)\"] Output[\"README.md + .docgen artifacts\"] CLI --> Orc Orc --> Scan Orc --> Ana Orc --> RAG Orc --> Prompt Prompt --> LLM LLM --> Prompt Prompt --> Orc Orc --> Post Post --> Output Post --> Git ``` ### Component Responsibilities | Layer | Key",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#2",
      "vector": {
        "orc": 0.2960684541064695,
        "scan": 0.042295493443781355,
        "ana": 0.042295493443781355,
        "rag": 0.12688648033134406,
        "prompt": 0.16918197377512542,
        "llm": 0.16918197377512542,
        "post": 0.16918197377512542,
        "output": 0.042295493443781355,
        "git": 0.042295493443781355,
        "component": 0.042295493443781355,
        "responsibilities": 0.042295493443781355,
        "layer": 0.042295493443781355,
        "key": 0.042295493443781355,
        "modules": 0.08459098688756271,
        "purpose": 0.042295493443781355,
        "cli": 0.12688648033134406,
        "logging": 0.08459098688756271,
        "docgen": 0.46525042788159493,
        "py": 0.42295493443781357,
        "parses": 0.08459098688756271,
        "subcommands": 0.042295493443781355,
        "wires": 0.042295493443781355,
        "verbose": 0.042295493443781355,
        "and": 0.33836394755025084,
        "configures": 0.042295493443781355,
        "namespaced": 0.042295493443781355,
        "loggers": 0.042295493443781355,
        "configuration": 0.042295493443781355,
        "config": 0.042295493443781355,
        "yml": 0.042295493443781355,
        "into": 0.042295493443781355,
        "docgenconfig": 0.042295493443781355,
        "llmconfig": 0.042295493443781355,
        "publishconfig": 0.042295493443781355,
        "analyzerconfig": 0.042295493443781355,
        "ciconfig": 0.042295493443781355,
        "with": 0.042295493443781355,
        "a": 0.042295493443781355,
        "handwritten": 0.042295493443781355,
        "yaml": 0.042295493443781355,
        "fallback": 0.042295493443781355,
        "repository": 0.042295493443781355,
        "scanning": 0.042295493443781355,
        "repo_scanner": 0.042295493443781355,
        "builds": 0.08459098688756271,
        "repomanifest": 0.042295493443781355,
        "of": 0.08459098688756271,
        "filemeta": 0.042295493443781355,
        "entries": 0.042295493443781355,
        "enforces": 0.042295493443781355,
        "ignore": 0.042295493443781355,
        "rules": 0.042295493443781355,
        "infers": 0.042295493443781355,
        "file": 0.042295493443781355,
        "roles": 0.042295493443781355,
        "caches": 0.042295493443781355,
        "hashes": 0.042295493443781355,
        "in": 0.042295493443781355,
        "manifest_cache": 0.042295493443781355,
        "json": 0.042295493443781355,
        "analyzer": 0.042295493443781355,
        "plugins": 0.042295493443781355,
        "analyzers": 0.042295493443781355,
        "emit": 0.042295493443781355,
        "signal": 0.042295493443781355,
        "objects": 0.042295493443781355,
        "for": 0.042295493443781355,
        "languages": 0.042295493443781355,
        "frameworks": 0.042295493443781355,
        "build": 0.042295493443781355,
        "tools": 0.042295493443781355,
        "dependencies": 0.042295493443781355,
        "entrypoints": 0.042295493443781355,
        "structural": 0.042295493443781355,
        "api": 0.042295493443781355,
        "routes": 0.042295493443781355,
        "entities": 0.042295493443781355,
        "patterns": 0.042295493443781355,
        "monorepo": 0.042295493443781355,
        "hints": 0.042295493443781355,
        "prompting": 0.08459098688756271,
        "builder": 0.042295493443781355,
        "templates": 0.08459098688756271,
        "groups": 0.042295493443781355,
        "signals": 0.042295493443781355,
        "retrieves": 0.042295493443781355,
        "context": 0.08459098688756271,
        "renders": 0.042295493443781355,
        "section": 0.08459098688756271,
        "performs": 0.042295493443781355,
        "command": 0.042295493443781355,
        "validation": 0.042295493443781355,
        "estimates": 0.042295493443781355,
        "token": 0.042295493443781355,
        "budgets": 0.042295493443781355,
        "retrieval": 0.042295493443781355,
        "indexer": 0.042295493443781355,
        "embedder": 0.042295493443781355,
        "store": 0.042295493443781355,
        "constants": 0.042295493443781355,
        "chunks": 0.042295493443781355,
        "readme": 0.042295493443781355,
        "docs": 0.042295493443781355,
        "source": 0.042295493443781355,
        "files": 0.042295493443781355,
        "computes": 0.042295493443781355,
        "bag": 0.042295493443781355,
        "words": 0.042295493443781355,
        "embeddings": 0.042295493443781355,
        "persists": 0.042295493443781355,
        "per": 0.042295493443781355,
        "prunes": 0.042295493443781355,
        "stale": 0.042295493443781355,
        "vectors": 0.042295493443781355,
        "runtime": 0.042295493443781355,
        "runner": 0.042295493443781355,
        "chooses": 0.042295493443781355,
        "http": 0.042295493443781355,
        "or": 0.042295493443781355,
        "execution": 0.042295493443781355,
        "openai": 0.042295493443781355,
        "compatible": 0.042295493443781355,
        "payloads": 0.042295493443781355,
        "restricts": 0.042295493443781355,
        "to": 0.042295493443781355,
        "loopback": 0.042295493443781355,
        "hosts": 0.042295493443781355,
        "normalizes": 0.042295493443781355,
        "responses": 0.042295493443781355,
        "processing": 0.042295493443781355,
        "postproc": 0.042295493443781355,
        "manages": 0.042295493443781355,
        "markers": 0.042295493443781355,
        "regenerates": 0.042295493443781355,
        "toc": 0.042295493443781355,
        "applies": 0.042295493443781355,
        "badges": 0.042295493443781355,
        "lints": 0.042295493443781355,
        "markdown": 0.042295493443781355,
        "validates": 0.042295493443781355,
        "links": 0.042295493443781355
      },
      "text": "--> Orc Orc --> Scan Orc --> Ana Orc --> RAG Orc --> Prompt Prompt --> LLM LLM --> Prompt Prompt --> Orc Orc --> Post Post --> Output Post --> Git ``` ### Component Responsibilities | Layer | Key modules | Purpose | | --- | --- | --- | | CLI & Logging | `docgen/cli.py`, `docgen/logging.py` | Parses subcommands, wires `--verbose`, and configures namespaced loggers. | | Configuration | `docgen/config.py` | Parses `.docgen.yml` into `DocGenConfig`, `LLMConfig`, `PublishConfig`, `AnalyzerConfig`, and `CIConfig`, with a handwritten YAML fallback. | | Repository scanning | `docgen/repo_scanner.py` | Builds `RepoManifest` of `FileMeta` entries, enforces ignore rules, infers file roles, and caches hashes in `.docgen/manifest_cache.json`. | | Analyzer plugins | `docgen/analyzers/*` | Emit `Signal` objects for languages, frameworks, build tools, dependencies, entrypoints, structural modules, API routes, entities, patterns, and monorepo hints. | | Prompting | `docgen/prompting/builder.py`, `templates/` | Groups signals, retrieves context, renders section templates, performs command validation, and estimates token budgets. | | Retrieval (RAG) | `docgen/rag/indexer.py`, `embedder.py`, `store.py`, `constants.py` | Chunks README/docs/source files, computes bag-of-words embeddings, persists context per section, and prunes stale vectors. | | LLM runtime | `docgen/llm/runner.py` | Chooses HTTP or CLI execution, builds OpenAI-compatible payloads, restricts to loopback hosts, and normalizes responses. | | Post-processing | `docgen/postproc/*` | Manages markers, regenerates ToC, applies badges, lints markdown, validates links, and",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#3",
      "vector": {
        "vectors": 0.08497185773241747,
        "llm": 0.12745778659862622,
        "runtime": 0.08497185773241747,
        "docgen": 0.4248592886620874,
        "runner": 0.08497185773241747,
        "py": 0.16994371546483494,
        "chooses": 0.042485928866208736,
        "http": 0.042485928866208736,
        "or": 0.12745778659862622,
        "cli": 0.16994371546483494,
        "execution": 0.042485928866208736,
        "builds": 0.042485928866208736,
        "openai": 0.042485928866208736,
        "compatible": 0.042485928866208736,
        "payloads": 0.042485928866208736,
        "restricts": 0.042485928866208736,
        "to": 0.08497185773241747,
        "loopback": 0.042485928866208736,
        "hosts": 0.042485928866208736,
        "and": 0.3398874309296699,
        "normalizes": 0.042485928866208736,
        "responses": 0.042485928866208736,
        "post": 0.08497185773241747,
        "processing": 0.08497185773241747,
        "postproc": 0.042485928866208736,
        "manages": 0.042485928866208736,
        "markers": 0.042485928866208736,
        "regenerates": 0.042485928866208736,
        "toc": 0.042485928866208736,
        "applies": 0.042485928866208736,
        "badges": 0.042485928866208736,
        "lints": 0.042485928866208736,
        "markdown": 0.042485928866208736,
        "validates": 0.042485928866208736,
        "links": 0.042485928866208736,
        "records": 0.042485928866208736,
        "readme": 0.08497185773241747,
        "quality": 0.08497185773241747,
        "metrics": 0.042485928866208736,
        "git": 0.2124296443310437,
        "integration": 0.042485928866208736,
        "diff": 0.042485928866208736,
        "publisher": 0.08497185773241747,
        "maps": 0.042485928866208736,
        "file": 0.08497185773241747,
        "diffs": 0.042485928866208736,
        "affected": 0.042485928866208736,
        "sections": 0.08497185773241747,
        "handles": 0.042485928866208736,
        "staged": 0.042485928866208736,
        "changes": 0.042485928866208736,
        "pushes": 0.042485928866208736,
        "commits": 0.08497185773241747,
        "prs": 0.08497185773241747,
        "with": 0.08497185773241747,
        "optional": 0.042485928866208736,
        "labels": 0.042485928866208736,
        "safety": 0.042485928866208736,
        "nets": 0.042485928866208736,
        "failsafe": 0.042485928866208736,
        "generates": 0.042485928866208736,
        "placeholder": 0.042485928866208736,
        "full": 0.042485928866208736,
        "stubs": 0.08497185773241747,
        "when": 0.042485928866208736,
        "prompting": 0.08497185773241747,
        "fails": 0.042485928866208736,
        "reference": 0.042485928866208736,
        "material": 0.042485928866208736,
        "spec": 0.16994371546483494,
        "md": 0.16994371546483494,
        "feature_order": 0.042485928866208736,
        "feature_checklist": 0.042485928866208736,
        "docs": 0.042485928866208736,
        "ci": 0.08497185773241747,
        "agents": 0.042485928866208736,
        "capture": 0.042485928866208736,
        "architectural": 0.042485928866208736,
        "contracts": 0.042485928866208736,
        "delivery": 0.042485928866208736,
        "roadmap": 0.042485928866208736,
        "feature": 0.042485928866208736,
        "status": 0.042485928866208736,
        "playbooks": 0.042485928866208736,
        "agent": 0.042485928866208736,
        "guidance": 0.042485928866208736,
        "tests": 0.08497185773241747,
        "mirroring": 0.042485928866208736,
        "modules": 0.042485928866208736,
        "pytest": 0.042485928866208736,
        "suite": 0.042485928866208736,
        "covering": 0.042485928866208736,
        "orchestrator": 0.08497185773241747,
        "analyzers": 0.042485928866208736,
        "workflows": 0.042485928866208736,
        "helpers": 0.042485928866208736,
        "artifacts": 0.042485928866208736,
        "data": 0.042485928866208736,
        "stores": 0.042485928866208736,
        "manifest_cache": 0.042485928866208736,
        "json": 0.12745778659862622,
        "cache": 0.042485928866208736,
        "of": 0.08497185773241747,
        "sizes": 0.042485928866208736,
        "mtimes": 0.042485928866208736,
        "hashes": 0.042485928866208736,
        "for": 0.042485928866208736,
        "fast": 0.042485928866208736,
        "re": 0.042485928866208736,
        "scans": 0.042485928866208736,
        "embeddings": 0.042485928866208736,
        "persisted": 0.042485928866208736,
        "embedding": 0.042485928866208736,
        "keyed": 0.042485928866208736,
        "by": 0.08497185773241747,
        "section": 0.042485928866208736,
        "tag": 0.042485928866208736,
        "via": 0.042485928866208736,
        "embeddingstore": 0.042485928866208736,
        "scorecard": 0.042485928866208736,
        "output": 0.042485928866208736,
        "readmescorecard": 0.042485928866208736,
        "evaluate": 0.042485928866208736,
        "tracking": 0.042485928866208736,
        "coverage": 0.042485928866208736,
        "link": 0.042485928866208736,
        "health": 0.042485928866208736,
        "quick": 0.042485928866208736,
        "start": 0.042485928866208736,
        "metadata": 0.042485928866208736,
        "branches": 0.042485928866208736,
        "created": 0.042485928866208736,
        "summaries": 0.042485928866208736,
        "from": 0.042485928866208736,
        "diffanalyzer": 0.042485928866208736,
        "pipeline": 0.042485928866208736,
        "sequence": 0.042485928866208736,
        "init": 0.042485928866208736,
        "mermaid": 0.042485928866208736,
        "sequencediagram": 0.042485928866208736,
        "participant": 0.25491557319725244,
        "dev": 0.042485928866208736,
        "as": 0.25491557319725244,
        "developer": 0.042485928866208736,
        "orc": 0.042485928866208736,
        "scan": 0.042485928866208736,
        "reposcanner": 0.042485928866208736,
        "ana": 0.042485928866208736,
        "analyzer": 0.042485928866208736,
        "plugins": 0.042485928866208736,
        "rag": 0.042485928866208736
      },
      "text": "vectors. | | LLM runtime | `docgen/llm/runner.py` | Chooses HTTP or CLI execution, builds OpenAI-compatible payloads, restricts to loopback hosts, and normalizes responses. | | Post-processing | `docgen/postproc/*` | Manages markers, regenerates ToC, applies badges, lints markdown, validates links, and records README quality metrics. | | Git integration | `docgen/git/diff.py`, `docgen/git/publisher.py` | Maps file diffs to affected sections, handles staged changes, and pushes commits or PRs with optional labels. | | Safety nets | `docgen/failsafe.py` | Generates placeholder sections or full README stubs when prompting fails. | | Reference material | `spec/spec.md`, `spec/feature_order.md`, `spec/feature_checklist.md`, `docs/ci/*`, `AGENTS.md` | Capture architectural contracts, delivery roadmap, feature status, CI playbooks, and agent guidance. | | Tests | `tests/` mirroring runtime modules | Pytest suite covering CLI, orchestrator, analyzers, prompting, git workflows, LLM runner stubs, and post-processing helpers. | ### Artifacts and Data Stores - `.docgen/manifest_cache.json` - cache of file sizes, mtimes, and hashes for fast re-scans. - `.docgen/embeddings.json` - persisted embedding vectors keyed by section/tag via `EmbeddingStore`. - `.docgen/scorecard.json` - output of `ReadmeScorecard.evaluate`, tracking coverage, link health, and quick-start quality. - Git metadata - branches/commits/PRs created by `Publisher` with summaries from `DiffAnalyzer`. ### Pipeline Sequence (`docgen init`) ```mermaid sequenceDiagram participant Dev as Developer participant CLI as docgen CLI participant Orc as Orchestrator participant Scan as RepoScanner participant Ana as Analyzer plugins participant RAG as",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#4",
      "vector": {
        "branches": 0.01984580179179854,
        "commits": 0.01984580179179854,
        "prs": 0.01984580179179854,
        "created": 0.01984580179179854,
        "by": 0.01984580179179854,
        "publisher": 0.03969160358359708,
        "with": 0.01984580179179854,
        "summaries": 0.01984580179179854,
        "from": 0.01984580179179854,
        "diffanalyzer": 0.03969160358359708,
        "pipeline": 0.01984580179179854,
        "sequence": 0.03969160358359708,
        "docgen": 0.11907481075079124,
        "init": 0.03969160358359708,
        "mermaid": 0.03969160358359708,
        "sequencediagram": 0.03969160358359708,
        "participant": 0.4167618376277693,
        "dev": 0.07938320716719416,
        "as": 0.4167618376277693,
        "developer": 0.03969160358359708,
        "cli": 0.15876641433438832,
        "orc": 0.6152198555457548,
        "orchestrator": 0.03969160358359708,
        "scan": 0.15876641433438832,
        "reposcanner": 0.03969160358359708,
        "ana": 0.11907481075079124,
        "analyzer": 0.03969160358359708,
        "plugins": 0.03969160358359708,
        "rag": 0.11907481075079124,
        "ragindexer": 0.03969160358359708,
        "prompt": 0.17861221612618686,
        "promptbuilder": 0.03969160358359708,
        "llm": 0.05953740537539562,
        "llmrunner": 0.01984580179179854,
        "post": 0.15876641433438832,
        "processing": 0.03969160358359708,
        "fs": 0.03969160358359708,
        "filesystem": 0.01984580179179854,
        "run_init": 0.01984580179179854,
        "path": 0.03969160358359708,
        "repomanifest": 0.03969160358359708,
        "filemeta": 0.01984580179179854,
        "analyze": 0.03969160358359708,
        "manifest": 0.0992290089589927,
        "signal": 0.03969160358359708,
        "build": 0.05953740537539562,
        "contexts": 0.03969160358359708,
        "per": 0.01984580179179854,
        "section": 0.07938320716719416,
        "signals": 0.01984580179179854,
        "invoke": 0.01984580179179854,
        "system": 0.01984580179179854,
        "markdown": 0.05953740537539562,
        "full": 0.01984580179179854,
        "readme": 0.07938320716719416,
        "draft": 0.01984580179179854,
        "lint": 0.03969160358359708,
        "toc": 0.03969160358359708,
        "badges": 0.03969160358359708,
        "links": 0.01984580179179854,
        "scorecard": 0.03969160358359708,
        "final": 0.03969160358359708,
        "quality": 0.01984580179179854,
        "report": 0.01984580179179854,
        "write": 0.01984580179179854,
        "md": 0.01984580179179854,
        "git": 0.01984580179179854,
        "optional": 0.01984580179179854,
        "commit": 0.05953740537539562,
        "publish": 0.01984580179179854,
        "mode": 0.01984580179179854,
        "patch": 0.01984580179179854,
        "update": 0.03969160358359708,
        "ci": 0.01984580179179854,
        "diff": 0.0992290089589927,
        "mark": 0.05953740537539562,
        "markermanager": 0.01984580179179854,
        "pub": 0.03969160358359708,
        "base": 0.05953740537539562,
        "ref": 0.01984580179179854,
        "run_update": 0.01984580179179854,
        "compute": 0.01984580179179854,
        "repo": 0.01984580179179854,
        "diffresult": 0.01984580179179854,
        "changed_files": 0.01984580179179854,
        "sections": 0.05953740537539562,
        "context": 0.01984580179179854,
        "snippets": 0.01984580179179854,
        "render_sections": 0.01984580179179854,
        "new": 0.01984580179179854,
        "bodies": 0.01984580179179854,
        "replace": 0.01984580179179854,
        "patched": 0.01984580179179854,
        "link": 0.01984580179179854,
        "check": 0.01984580179179854
      },
      "text": "branches/commits/PRs created by `Publisher` with summaries from `DiffAnalyzer`. ### Pipeline Sequence (`docgen init`) ```mermaid sequenceDiagram participant Dev as Developer participant CLI as docgen CLI participant Orc as Orchestrator participant Scan as RepoScanner participant Ana as Analyzer plugins participant RAG as RAGIndexer participant Prompt as PromptBuilder participant LLM as LLMRunner participant Post as Post-processing participant FS as Filesystem Dev->>CLI: docgen init . CLI->>Orc: run_init(path) Orc->>Scan: scan() Scan-->>Orc: RepoManifest(FileMeta[]) Orc->>Ana: analyze(manifest) Ana-->>Orc: Signal[] Orc->>RAG: build(manifest) RAG-->>Orc: contexts per section Orc->>Prompt: build(manifest, signals, contexts) Prompt->>LLM: invoke(system, prompt) LLM-->>Prompt: section markdown Prompt-->>Orc: full README draft Orc->>Post: lint -> toc -> badges -> links -> scorecard Post-->>Orc: final markdown + quality report Orc->>FS: write README.md Orc->>Git: optional commit (publish mode \"commit\") ``` ### Patch Sequence (`docgen update`) ```mermaid sequenceDiagram participant Dev as Developer/CI participant CLI as docgen CLI participant Orc as Orchestrator participant Diff as DiffAnalyzer participant Scan as RepoScanner participant Ana as Analyzer plugins participant RAG as RAGIndexer participant Prompt as PromptBuilder participant Mark as MarkerManager participant Post as Post-processing participant Pub as Publisher Dev->>CLI: docgen update --diff-base <ref> CLI->>Orc: run_update(path, base) Orc->>Diff: compute(repo, base) Diff-->>Orc: DiffResult(changed_files, sections) Orc->>Scan: scan() Scan-->>Orc: RepoManifest Orc->>Ana: analyze(manifest) Ana-->>Orc: Signal[] Orc->>RAG: build(manifest, sections) RAG-->>Orc: context snippets Orc->>Prompt: render_sections(sections) Prompt-->>Orc: new section bodies Orc->>Mark: replace(markdown, section) Mark-->>Orc: patched README Orc->>Post: lint/toc/badges/link check/scorecard Post-->>Orc: final README + diff Orc->>Pub: commit",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#5",
      "vector": {
        "base": 0.03639372626234195,
        "diff": 0.0727874525246839,
        "orc": 0.5095121676727873,
        "diffresult": 0.03639372626234195,
        "changed_files": 0.03639372626234195,
        "sections": 0.1455749050493678,
        "scan": 0.10918117878702585,
        "repomanifest": 0.03639372626234195,
        "ana": 0.0727874525246839,
        "analyze": 0.03639372626234195,
        "manifest": 0.10918117878702585,
        "signal": 0.1455749050493678,
        "rag": 0.0727874525246839,
        "build": 0.0727874525246839,
        "context": 0.03639372626234195,
        "snippets": 0.03639372626234195,
        "prompt": 0.0727874525246839,
        "render_sections": 0.03639372626234195,
        "new": 0.03639372626234195,
        "section": 0.0727874525246839,
        "bodies": 0.03639372626234195,
        "mark": 0.0727874525246839,
        "replace": 0.03639372626234195,
        "markdown": 0.03639372626234195,
        "patched": 0.03639372626234195,
        "readme": 0.0727874525246839,
        "post": 0.1455749050493678,
        "lint": 0.03639372626234195,
        "toc": 0.03639372626234195,
        "badges": 0.03639372626234195,
        "link": 0.03639372626234195,
        "check": 0.03639372626234195,
        "scorecard": 0.03639372626234195,
        "final": 0.03639372626234195,
        "pub": 0.03639372626234195,
        "commit": 0.03639372626234195,
        "or": 0.03639372626234195,
        "pr": 0.03639372626234195,
        "branch": 0.03639372626234195,
        "title": 0.03639372626234195,
        "body": 0.03639372626234195,
        "api": 0.2911498100987356,
        "extraction": 0.03639372626234195,
        "structureanalyzer": 0.03639372626234195,
        "inspects": 0.03639372626234195,
        "source": 0.03639372626234195,
        "files": 0.0727874525246839,
        "for": 0.03639372626234195,
        "fastapi": 0.10918117878702585,
        "decorators": 0.03639372626234195,
        "express": 0.03639372626234195,
        "route": 0.03639372626234195,
        "calls": 0.0727874525246839,
        "and": 0.3275435363610775,
        "pydantic": 0.03639372626234195,
        "orm": 0.03639372626234195,
        "entities": 0.03639372626234195,
        "each": 0.03639372626234195,
        "match": 0.03639372626234195,
        "emits": 0.03639372626234195,
        "metadata": 0.03639372626234195,
        "such": 0.03639372626234195,
        "as": 0.18196863131170973,
        "handler": 0.03639372626234195,
        "names": 0.03639372626234195,
        "http": 0.03639372626234195,
        "verbs": 0.03639372626234195,
        "detected": 0.03639372626234195,
        "external": 0.0727874525246839,
        "requests": 0.0727874525246839,
        "session": 0.0727874525246839,
        "db": 0.1455749050493678,
        "assembled": 0.03639372626234195,
        "sequence": 0.03639372626234195,
        "steps": 0.03639372626234195,
        "that": 0.0727874525246839,
        "downstream": 0.03639372626234195,
        "templates": 0.03639372626234195,
        "render": 0.03639372626234195,
        "diagrams": 0.03639372626234195,
        "mermaid": 0.03639372626234195,
        "sequencediagram": 0.03639372626234195,
        "participant": 0.1455749050493678,
        "client": 0.10918117878702585,
        "endpoint": 0.03639372626234195,
        "auth": 0.10918117878702585,
        "service": 0.03639372626234195,
        "database": 0.03639372626234195,
        "login": 0.03639372626234195,
        "token": 0.03639372626234195,
        "response": 0.0727874525246839,
        "write": 0.03639372626234195,
        "ack": 0.03639372626234195,
        "authenticated": 0.03639372626234195,
        "other": 0.03639372626234195,
        "analyzers": 0.0727874525246839,
        "complement": 0.03639372626234195,
        "these": 0.03639372626234195,
        "signals": 0.03639372626234195,
        "entrypointanalyzer": 0.03639372626234195,
        "ranks": 0.03639372626234195,
        "executable": 0.03639372626234195,
        "commands": 0.0727874525246839,
        "uvicorn": 0.03639372626234195,
        "django": 0.03639372626234195,
        "runserver": 0.03639372626234195,
        "npm": 0.03639372626234195,
        "dev": 0.03639372626234195,
        "spring": 0.03639372626234195,
        "boot": 0.03639372626234195,
        "bootrun": 0.03639372626234195,
        "buildanalyzer": 0.03639372626234195,
        "pairs": 0.03639372626234195,
        "with": 0.03639372626234195,
        "reproducible": 0.03639372626234195,
        "test": 0.03639372626234195,
        "os": 0.03639372626234195,
        "aware": 0.03639372626234195,
        "scripts": 0.0727874525246839,
        "dependencyanalyzer": 0.03639372626234195,
        "patternanalyzer": 0.03639372626234195,
        "languageanalyzer": 0.03639372626234195,
        "describe": 0.03639372626234195,
        "frameworks": 0.03639372626234195,
        "docker": 0.03639372626234195,
        "k8s": 0.03639372626234195,
        "ci": 0.03639372626234195,
        "layouts": 0.03639372626234195,
        "monorepo": 0.03639372626234195,
        "hints": 0.03639372626234195,
        "feed": 0.03639372626234195,
        "the": 0.03639372626234195,
        "features": 0.03639372626234195,
        "architecture": 0.0727874525246839,
        "quick": 0.0727874525246839,
        "start": 0.0727874525246839,
        "tests": 0.1455749050493678,
        "under": 0.03639372626234195,
        "prompting": 0.03639372626234195,
        "git": 0.03639372626234195,
        "assert": 0.03639372626234195,
        "accuracy": 0.03639372626234195,
        "command": 0.03639372626234195,
        "selection": 0.03639372626234195,
        "publishing": 0.03639372626234195,
        "behavior": 0.03639372626234195,
        "docgen": 0.0727874525246839,
        "end": 0.03639372626234195,
        "begin": 0.03639372626234195,
        "quickstart": 0.03639372626234195,
        "1": 0.03639372626234195,
        "create": 0.03639372626234195,
        "a": 0.03639372626234195,
        "virtual": 0.03639372626234195,
        "environment": 0.03639372626234195,
        "activate": 0.0727874525246839,
        "it": 0.03639372626234195,
        "windows": 0.03639372626234195,
        "python": 0.0727874525246839,
        "m": 0.0727874525246839,
        "venv": 0.18196863131170973,
        "then": 0.03639372626234195,
        "macos": 0.03639372626234195,
        "linux": 0.03639372626234195
      },
      "text": "base) Diff-->>Orc: DiffResult(changed_files, sections) Orc->>Scan: scan() Scan-->>Orc: RepoManifest Orc->>Ana: analyze(manifest) Ana-->>Orc: Signal[] Orc->>RAG: build(manifest, sections) RAG-->>Orc: context snippets Orc->>Prompt: render_sections(sections) Prompt-->>Orc: new section bodies Orc->>Mark: replace(markdown, section) Mark-->>Orc: patched README Orc->>Post: lint/toc/badges/link check/scorecard Post-->>Orc: final README + diff Orc->>Pub: commit or PR (branch, title, body) ``` ### API Signal Extraction `StructureAnalyzer` inspects source files for FastAPI decorators, Express route calls, and Pydantic/ORM entities. Each match emits `Signal` metadata such as handler names, HTTP verbs, detected external calls (`requests`, `session`, `db`), and assembled `sequence` steps that downstream templates render as diagrams. ```mermaid sequenceDiagram participant Client participant API as FastAPI endpoint participant Auth as External service participant DB as Database Client->>API: POST /login API->>Auth: requests.post() Auth-->>API: token/response API->>DB: session.write() DB-->>API: ack API-->>Client: Authenticated response ``` Other analyzers complement these signals: - `EntryPointAnalyzer` ranks executable commands (FastAPI `uvicorn`, Django `runserver`, npm `dev`, Spring Boot `bootRun`). - `BuildAnalyzer` pairs manifest files with reproducible build/test commands and OS-aware scripts. - `DependencyAnalyzer`, `PatternAnalyzer`, and `LanguageAnalyzer` describe frameworks, Docker/K8s/CI layouts, and monorepo hints that feed the features, architecture, and quick-start sections. - Tests under `tests/analyzers/`, `tests/prompting/`, and `tests/git/` assert signal accuracy, command selection, and publishing behavior. <!-- docgen:end:architecture --> ## Quick Start <!-- docgen:begin:quickstart --> 1. Create a virtual environment and activate it: - Windows: `python -m venv .venv` then `.\\.venv\\Scripts\\activate` - macOS/Linux: `python -m venv .venv`",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#6",
      "vector": {
        "tests": 0.04214497519610896,
        "git": 0.04214497519610896,
        "assert": 0.04214497519610896,
        "signal": 0.04214497519610896,
        "accuracy": 0.04214497519610896,
        "command": 0.04214497519610896,
        "selection": 0.04214497519610896,
        "and": 0.16857990078443583,
        "publishing": 0.04214497519610896,
        "behavior": 0.04214497519610896,
        "docgen": 0.5057397023533075,
        "end": 0.08428995039221791,
        "architecture": 0.04214497519610896,
        "quick": 0.04214497519610896,
        "start": 0.04214497519610896,
        "begin": 0.08428995039221791,
        "quickstart": 0.08428995039221791,
        "1": 0.04214497519610896,
        "create": 0.04214497519610896,
        "a": 0.08428995039221791,
        "virtual": 0.04214497519610896,
        "environment": 0.04214497519610896,
        "activate": 0.12643492558832686,
        "it": 0.04214497519610896,
        "windows": 0.04214497519610896,
        "python": 0.2528698511766537,
        "m": 0.2528698511766537,
        "venv": 0.2528698511766537,
        "then": 0.08428995039221791,
        "scripts": 0.04214497519610896,
        "macos": 0.04214497519610896,
        "linux": 0.04214497519610896,
        "source": 0.04214497519610896,
        "bin": 0.04214497519610896,
        "2": 0.08428995039221791,
        "install": 0.12643492558832686,
        "dependencies": 0.04214497519610896,
        "in": 0.04214497519610896,
        "editable": 0.04214497519610896,
        "mode": 0.08428995039221791,
        "includes": 0.04214497519610896,
        "cli": 0.12643492558832686,
        "entry": 0.04214497519610896,
        "point": 0.04214497519610896,
        "test": 0.04214497519610896,
        "tooling": 0.04214497519610896,
        "bash": 0.12643492558832686,
        "pip": 0.12643492558832686,
        "upgrade": 0.04214497519610896,
        "e": 0.04214497519610896,
        "dev": 0.04214497519610896,
        "3": 0.04214497519610896,
        "configure": 0.04214497519610896,
        "yml": 0.08428995039221791,
        "with": 0.08428995039221791,
        "local": 0.04214497519610896,
        "llm": 0.08428995039221791,
        "runner": 0.12643492558832686,
        "details": 0.04214497519610896,
        "see": 0.04214497519610896,
        "configuration": 0.12643492558832686,
        "below": 0.04214497519610896,
        "4": 0.04214497519610896,
        "generate": 0.04214497519610896,
        "an": 0.04214497519610896,
        "initial": 0.04214497519610896,
        "readme": 0.12643492558832686,
        "from": 0.04214497519610896,
        "the": 0.04214497519610896,
        "repository": 0.04214497519610896,
        "root": 0.04214497519610896,
        "init": 0.04214497519610896,
        "5": 0.04214497519610896,
        "after": 0.04214497519610896,
        "subsequent": 0.04214497519610896,
        "changes": 0.04214497519610896,
        "refresh": 0.04214497519610896,
        "documentation": 0.04214497519610896,
        "update": 0.08428995039221791,
        "diff": 0.04214497519610896,
        "base": 0.04214497519610896,
        "origin": 0.04214497519610896,
        "main": 0.04214497519610896,
        "6": 0.04214497519610896,
        "use": 0.04214497519610896,
        "dry": 0.04214497519610896,
        "run": 0.04214497519610896,
        "to": 0.04214497519610896,
        "preview": 0.04214497519610896,
        "diffs": 0.04214497519610896,
        "or": 0.16857990078443583,
        "verbose": 0.04214497519610896,
        "for": 0.04214497519610896,
        "deeper": 0.04214497519610896,
        "logs": 0.04214497519610896,
        "while": 0.04214497519610896,
        "iterating": 0.04214497519610896,
        "on": 0.04214497519610896,
        "analyzers": 0.08428995039221791,
        "config": 0.04214497519610896,
        "py": 0.04214497519610896,
        "loads": 0.04214497519610896,
        "into": 0.04214497519610896,
        "strongly": 0.04214497519610896,
        "typed": 0.04214497519610896,
        "dataclasses": 0.04214497519610896,
        "provides": 0.04214497519610896,
        "minimal": 0.04214497519610896,
        "yaml": 0.08428995039221791,
        "parser": 0.04214497519610896,
        "when": 0.04214497519610896,
        "pyyaml": 0.04214497519610896,
        "is": 0.04214497519610896,
        "absent": 0.04214497519610896,
        "common": 0.04214497519610896,
        "fields": 0.04214497519610896,
        "ollama": 0.04214497519610896,
        "model": 0.08428995039221791,
        "llama3": 0.04214497519610896,
        "8b": 0.04214497519610896,
        "instruct": 0.04214497519610896,
        "base_url": 0.04214497519610896,
        "http": 0.04214497519610896,
        "localhost": 0.04214497519610896,
        "12434": 0.04214497519610896,
        "engines": 0.04214497519610896,
        "v1": 0.04214497519610896,
        "temperature": 0.04214497519610896,
        "0": 0.04214497519610896,
        "max_tokens": 0.04214497519610896,
        "2048": 0.04214497519610896,
        "style": 0.04214497519610896,
        "comprehensive": 0.04214497519610896,
        "concise": 0.04214497519610896,
        "template_pack": 0.04214497519610896,
        "null": 0.04214497519610896,
        "optional": 0.04214497519610896,
        "alt": 0.04214497519610896,
        "templates": 0.08428995039221791,
        "under": 0.04214497519610896,
        "prompting": 0.04214497519610896,
        "publish": 0.04214497519610896,
        "pr": 0.08428995039221791,
        "commit": 0.04214497519610896,
        "branch_prefix": 0.04214497519610896,
        "labels": 0.04214497519610896,
        "docs": 0.08428995039221791,
        "auto": 0.04214497519610896,
        "update_existing": 0.04214497519610896,
        "false": 0.04214497519610896,
        "enabled": 0.04214497519610896,
        "subset": 0.04214497519610896,
        "of": 0.04214497519610896,
        "plugin": 0.04214497519610896,
        "names": 0.04214497519610896,
        "empty": 0.04214497519610896,
        "uses": 0.04214497519610896,
        "all": 0.04214497519610896,
        "built": 0.04214497519610896,
        "ins": 0.04214497519610896,
        "exclude_paths": 0.08428995039221791,
        "sandbox": 0.08428995039221791,
        "ci": 0.04214497519610896,
        "watched_globs": 0.04214497519610896
      },
      "text": "`tests/git/` assert signal accuracy, command selection, and publishing behavior. <!-- docgen:end:architecture --> ## Quick Start <!-- docgen:begin:quickstart --> 1. Create a virtual environment and activate it: - Windows: `python -m venv .venv` then `.\\.venv\\Scripts\\activate` - macOS/Linux: `python -m venv .venv` then `source .venv/bin/activate` 2. Install dependencies in editable mode (includes CLI entry point and test tooling): ```bash python -m pip install --upgrade pip python -m pip install -e .[dev] ``` 3. Configure `.docgen.yml` with local LLM runner details (see Configuration below). 4. Generate an initial README from the repository root: ```bash python -m docgen.cli init . ``` 5. After subsequent changes, refresh documentation with: ```bash python -m docgen.cli update --diff-base origin/main ``` 6. Use `--dry-run` to preview diffs or `--verbose` for deeper logs while iterating on analyzers. <!-- docgen:end:quickstart --> ## Configuration <!-- docgen:begin:configuration --> `docgen/config.py` loads `.docgen.yml` into strongly typed dataclasses and provides a minimal YAML parser when PyYAML is absent. Common fields: ```yaml llm: runner: \"ollama\" # or \"model-runner\" model: \"llama3:8b-instruct\" base_url: \"http://localhost:12434/engines/v1\" temperature: 0.2 max_tokens: 2048 readme: style: \"comprehensive\" # or \"concise\" template_pack: null # optional alt templates under docgen/prompting/templates/ publish: mode: \"pr\" # \"pr\" or \"commit\" branch_prefix: \"docgen/readme-update\" labels: [\"docs:auto\"] update_existing: false analyzers: enabled: [] # subset of plugin names, empty uses all built-ins exclude_paths: - \"sandbox/\" ci: watched_globs: - \"docgen/**\" - \"docs/**\" exclude_paths: - \"sandbox/\"",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#7",
      "vector": {
        "templates": 0.12058018065872111,
        "under": 0.12058018065872111,
        "docgen": 0.5225141161877915,
        "prompting": 0.08038678710581408,
        "publish": 0.04019339355290704,
        "mode": 0.08038678710581408,
        "pr": 0.16077357421162816,
        "or": 0.12058018065872111,
        "commit": 0.04019339355290704,
        "branch_prefix": 0.04019339355290704,
        "readme": 0.08038678710581408,
        "update": 0.12058018065872111,
        "labels": 0.04019339355290704,
        "docs": 0.24116036131744223,
        "auto": 0.04019339355290704,
        "update_existing": 0.04019339355290704,
        "false": 0.04019339355290704,
        "analyzers": 0.12058018065872111,
        "enabled": 0.04019339355290704,
        "subset": 0.04019339355290704,
        "of": 0.04019339355290704,
        "plugin": 0.04019339355290704,
        "names": 0.04019339355290704,
        "empty": 0.04019339355290704,
        "uses": 0.04019339355290704,
        "all": 0.04019339355290704,
        "built": 0.04019339355290704,
        "ins": 0.04019339355290704,
        "exclude_paths": 0.12058018065872111,
        "sandbox": 0.08038678710581408,
        "ci": 0.24116036131744223,
        "watched_globs": 0.08038678710581408,
        "highlights": 0.04019339355290704,
        "llmconfig": 0.04019339355290704,
        "supports": 0.04019339355290704,
        "env": 0.04019339355290704,
        "overrides": 0.08038678710581408,
        "docgen_llm_model": 0.04019339355290704,
        "docgen_llm_base_url": 0.04019339355290704,
        "docgen_llm_api_key": 0.04019339355290704,
        "and": 0.12058018065872111,
        "enforces": 0.04019339355290704,
        "loopback": 0.04019339355290704,
        "urls": 0.04019339355290704,
        "publishconfig": 0.04019339355290704,
        "toggles": 0.04019339355290704,
        "automatic": 0.04019339355290704,
        "commits": 0.04019339355290704,
        "creation": 0.04019339355290704,
        "publisher": 0.04019339355290704,
        "relies": 0.04019339355290704,
        "on": 0.04019339355290704,
        "the": 0.16077357421162816,
        "github": 0.12058018065872111,
        "cli": 0.08038678710581408,
        "when": 0.12058018065872111,
        "analyzerconfig": 0.04019339355290704,
        "removes": 0.04019339355290704,
        "noisy": 0.04019339355290704,
        "directories": 0.04019339355290704,
        "from": 0.04019339355290704,
        "analysis": 0.04019339355290704,
        "without": 0.04019339355290704,
        "editing": 0.04019339355290704,
        "gitignore": 0.04019339355290704,
        "template": 0.04019339355290704,
        "can": 0.04019339355290704,
        "live": 0.04019339355290704,
        "are": 0.04019339355290704,
        "picked": 0.04019339355290704,
        "up": 0.04019339355290704,
        "automatically": 0.04019339355290704,
        "present": 0.04019339355290704,
        "watchers": 0.04019339355290704,
        "skip": 0.04019339355290704,
        "updates": 0.04019339355290704,
        "changed": 0.04019339355290704,
        "files": 0.04019339355290704,
        "do": 0.04019339355290704,
        "not": 0.04019339355290704,
        "match": 0.04019339355290704,
        "aligning": 0.04019339355290704,
        "with": 0.04019339355290704,
        "workflow": 0.04019339355290704,
        "in": 0.12058018065872111,
        "yml": 0.08038678710581408,
        "end": 0.08038678710581408,
        "configuration": 0.04019339355290704,
        "build": 0.04019339355290704,
        "test": 0.08038678710581408,
        "begin": 0.08038678710581408,
        "build_and_test": 0.08038678710581408,
        "format": 0.04019339355290704,
        "lint": 0.04019339355290704,
        "bash": 0.16077357421162816,
        "black": 0.04019339355290704,
        "tests": 0.12058018065872111,
        "python": 0.2009669677645352,
        "m": 0.2009669677645352,
        "ruff": 0.04019339355290704,
        "check": 0.08038678710581408,
        "type": 0.04019339355290704,
        "core": 0.04019339355290704,
        "modules": 0.08038678710581408,
        "mypy": 0.04019339355290704,
        "run": 0.04019339355290704,
        "full": 0.04019339355290704,
        "suite": 0.04019339355290704,
        "mirrors": 0.04019339355290704,
        "runtime": 0.04019339355290704,
        "orchestrator": 0.08038678710581408,
        "git": 0.04019339355290704,
        "rag": 0.04019339355290704,
        "post": 0.04019339355290704,
        "processing": 0.04019339355290704,
        "pytest": 0.12058018065872111,
        "target": 0.04019339355290704,
        "specific": 0.04019339355290704,
        "areas": 0.04019339355290704,
        "while": 0.04019339355290704,
        "iterating": 0.04019339355290704,
        "k": 0.04019339355290704,
        "test_structure": 0.04019339355290704,
        "py": 0.04019339355290704,
        "regenerate": 0.04019339355290704,
        "fixtures": 0.04019339355290704,
        "inspect": 0.04019339355290704,
        "scorecards": 0.04019339355290704,
        "stored": 0.04019339355290704,
        "to": 0.04019339355290704,
        "validate": 0.04019339355290704,
        "generated": 0.04019339355290704,
        "content": 0.04019339355290704,
        "deployment": 0.08038678710581408,
        "actions": 0.08038678710581408,
        "recipe": 0.04019339355290704,
        "documented": 0.04019339355290704,
        "md": 0.04019339355290704,
        "installs": 0.04019339355290704,
        "package": 0.04019339355290704,
        "editable": 0.04019339355290704
      },
      "text": "templates under docgen/prompting/templates/ publish: mode: \"pr\" # \"pr\" or \"commit\" branch_prefix: \"docgen/readme-update\" labels: [\"docs:auto\"] update_existing: false analyzers: enabled: [] # subset of plugin names, empty uses all built-ins exclude_paths: - \"sandbox/\" ci: watched_globs: - \"docgen/**\" - \"docs/**\" exclude_paths: - \"sandbox/\" ``` Highlights: - `LLMConfig` supports env overrides (`DOCGEN_LLM_MODEL`, `DOCGEN_LLM_BASE_URL`, `DOCGEN_LLM_API_KEY`) and enforces loopback URLs. - `PublishConfig` toggles automatic commits or PR creation; `Publisher` relies on the GitHub CLI when `mode=\"pr\"`. - `AnalyzerConfig.exclude_paths` removes noisy directories from analysis without editing `.gitignore`. - Template overrides can live under `docs/templates/` and are picked up automatically when present. - CI watchers skip updates when changed files do not match `ci.watched_globs`, aligning with the workflow in `docs/ci/docgen-update.yml`. <!-- docgen:end:configuration --> ## Build & Test <!-- docgen:begin:build_and_test --> - Format and lint: ```bash black docgen tests python -m ruff check docgen tests ``` - Type-check core modules: ```bash python -m mypy docgen ``` - Run the full test suite (mirrors runtime modules: CLI, orchestrator, analyzers, prompting, git, RAG, post-processing): ```bash python -m pytest ``` - Target specific areas while iterating: ```bash python -m pytest -k orchestrator python -m pytest tests/analyzers/test_structure.py ``` - Regenerate README fixtures or inspect scorecards stored under `.docgen/` to validate generated content. <!-- docgen:end:build_and_test --> ## Deployment <!-- docgen:begin:deployment --> - GitHub Actions recipe: `docs/ci/docgen-update.yml` (documented in `docs/ci/github-actions.md`) installs the package in editable",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#8",
      "vector": {
        "python": 0.040555355282690636,
        "m": 0.040555355282690636,
        "pytest": 0.040555355282690636,
        "tests": 0.040555355282690636,
        "analyzers": 0.040555355282690636,
        "test_structure": 0.040555355282690636,
        "py": 0.08111071056538127,
        "regenerate": 0.040555355282690636,
        "readme": 0.12166606584807191,
        "fixtures": 0.040555355282690636,
        "or": 0.24333213169614382,
        "inspect": 0.08111071056538127,
        "scorecards": 0.040555355282690636,
        "stored": 0.040555355282690636,
        "under": 0.040555355282690636,
        "docgen": 0.48666426339228763,
        "to": 0.20277677641345318,
        "validate": 0.040555355282690636,
        "generated": 0.08111071056538127,
        "content": 0.040555355282690636,
        "end": 0.08111071056538127,
        "build_and_test": 0.040555355282690636,
        "deployment": 0.12166606584807191,
        "begin": 0.08111071056538127,
        "github": 0.12166606584807191,
        "actions": 0.08111071056538127,
        "recipe": 0.040555355282690636,
        "docs": 0.12166606584807191,
        "ci": 0.12166606584807191,
        "update": 0.16222142113076254,
        "yml": 0.040555355282690636,
        "documented": 0.040555355282690636,
        "in": 0.12166606584807191,
        "md": 0.040555355282690636,
        "installs": 0.040555355282690636,
        "the": 0.40555355282690636,
        "package": 0.040555355282690636,
        "editable": 0.040555355282690636,
        "mode": 0.08111071056538127,
        "runs": 0.040555355282690636,
        "and": 0.16222142113076254,
        "optionally": 0.040555355282690636,
        "commits": 0.08111071056538127,
        "changes": 0.040555355282690636,
        "back": 0.040555355282690636,
        "branch": 0.040555355282690636,
        "self": 0.040555355282690636,
        "hosted": 0.040555355282690636,
        "runners": 0.040555355282690636,
        "are": 0.12166606584807191,
        "recommended": 0.040555355282690636,
        "so": 0.040555355282690636,
        "workflow": 0.040555355282690636,
        "can": 0.08111071056538127,
        "reach": 0.040555355282690636,
        "your": 0.040555355282690636,
        "local": 0.08111071056538127,
        "inference": 0.040555355282690636,
        "endpoint": 0.040555355282690636,
        "docgen_llm_base_url": 0.040555355282690636,
        "same": 0.040555355282690636,
        "settings": 0.040555355282690636,
        "apply": 0.040555355282690636,
        "when": 0.12166606584807191,
        "running": 0.040555355282690636,
        "cd": 0.040555355282690636,
        "pipelines": 0.040555355282690636,
        "outside": 0.040555355282690636,
        "publisher": 0.040555355282690636,
        "push": 0.040555355282690636,
        "directly": 0.040555355282690636,
        "publish": 0.040555355282690636,
        "commit": 0.040555355282690636,
        "for": 0.040555355282690636,
        "bootstrap": 0.040555355282690636,
        "scenarios": 0.040555355282690636,
        "open": 0.040555355282690636,
        "prs": 0.040555355282690636,
        "with": 0.040555355282690636,
        "labeled": 0.040555355282690636,
        "summaries": 0.040555355282690636,
        "gh": 0.040555355282690636,
        "cli": 0.040555355282690636,
        "credentials": 0.040555355282690636,
        "available": 0.040555355282690636,
        "troubleshooting": 0.08111071056538127,
        "use": 0.040555355282690636,
        "verbose": 0.040555355282690636,
        "surface": 0.040555355282690636,
        "analyzer": 0.08111071056538127,
        "selection": 0.040555355282690636,
        "prompt": 0.08111071056538127,
        "generation": 0.040555355282690636,
        "post": 0.040555355282690636,
        "processing": 0.040555355282690636,
        "diagnostics": 0.040555355282690636,
        "emitted": 0.040555355282690636,
        "by": 0.040555355282690636,
        "get_logger": 0.040555355282690636,
        "orchestrator": 0.040555355282690636,
        "if": 0.040555355282690636,
        "already": 0.040555355282690636,
        "exists": 0.040555355282690636,
        "init": 0.040555355282690636,
        "will": 0.040555355282690636,
        "abort": 0.040555355282690636,
        "switch": 0.040555355282690636,
        "remove": 0.040555355282690636,
        "file": 0.040555355282690636,
        "before": 0.08111071056538127,
        "re": 0.040555355282690636,
        "initialising": 0.040555355282690636,
        "empty": 0.040555355282690636,
        "failing": 0.040555355282690636,
        "sections": 0.040555355282690636,
        "trigger": 0.040555355282690636,
        "fallback": 0.040555355282690636,
        "stubs": 0.040555355282690636,
        "from": 0.040555355282690636,
        "failsafe": 0.040555355282690636,
        "raised": 0.040555355282690636,
        "reason": 0.040555355282690636,
        "rerun": 0.040555355282690636,
        "once": 0.040555355282690636,
        "underlying": 0.040555355282690636,
        "issue": 0.040555355282690636,
        "is": 0.08111071056538127,
        "fixed": 0.040555355282690636,
        "link": 0.040555355282690636,
        "validation": 0.040555355282690636,
        "issues": 0.040555355282690636,
        "logged": 0.040555355282690636,
        "as": 0.040555355282690636,
        "warnings": 0.040555355282690636,
        "relative": 0.040555355282690636,
        "paths": 0.040555355282690636,
        "add": 0.040555355282690636,
        "missing": 0.040555355282690636,
        "files": 0.040555355282690636,
        "committing": 0.040555355282690636,
        "clear": 0.040555355282690636,
        "manifest_cache": 0.040555355282690636,
        "json": 0.08111071056538127,
        "embeddings": 0.040555355282690636,
        "refactoring": 0.040555355282690636,
        "large": 0.040555355282690636,
        "parts": 0.040555355282690636,
        "of": 0.040555355282690636,
        "repo": 0.040555355282690636,
        "structure": 0.040555355282690636,
        "force": 0.040555355282690636,
        "a": 0.08111071056538127,
        "fresh": 0.040555355282690636,
        "scan": 0.040555355282690636,
        "ensure": 0.040555355282690636,
        "model": 0.040555355282690636,
        "runner": 0.040555355282690636,
        "reachable": 0.040555355282690636,
        "at": 0.040555355282690636,
        "loopback": 0.040555355282690636,
        "url": 0.040555355282690636,
        "remote": 0.040555355282690636
      },
      "text": "python -m pytest tests/analyzers/test_structure.py ``` - Regenerate README fixtures or inspect scorecards stored under `.docgen/` to validate generated content. <!-- docgen:end:build_and_test --> ## Deployment <!-- docgen:begin:deployment --> - GitHub Actions recipe: `docs/ci/docgen-update.yml` (documented in `docs/ci/github-actions.md`) installs the package in editable mode, runs `docgen update`, and optionally commits README changes back to the branch. - Self-hosted runners are recommended so the workflow can reach your local inference endpoint (`DOCGEN_LLM_BASE_URL`). The same settings apply when running in CI/CD pipelines outside GitHub. - `Publisher` can push commits directly (`publish.mode: commit`) for bootstrap scenarios or open PRs with labeled summaries when `gh` CLI credentials are available. <!-- docgen:end:deployment --> ## Troubleshooting <!-- docgen:begin:troubleshooting --> - Use `--verbose` to surface analyzer selection, prompt generation, and post-processing diagnostics emitted by `get_logger(\"orchestrator\")`. - If the README already exists, `docgen init` will abort; switch to `docgen update` or remove the file before re-initialising. - Empty or failing sections trigger fallback stubs from `docgen/failsafe.py`; inspect the raised reason and rerun once the underlying analyzer or prompt issue is fixed. - Link validation issues are logged as warnings. Update relative paths or add missing files before committing generated docs. - Clear `.docgen/manifest_cache.json` and `.docgen/embeddings.json` when refactoring large parts of the repo structure to force a fresh scan. - Ensure the local model runner is reachable at a loopback URL; remote",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#9",
      "vector": {
        "paths": 0.03782347372361169,
        "or": 0.26476431606528184,
        "add": 0.11347042117083507,
        "missing": 0.03782347372361169,
        "files": 0.03782347372361169,
        "before": 0.03782347372361169,
        "committing": 0.03782347372361169,
        "generated": 0.03782347372361169,
        "docs": 0.03782347372361169,
        "clear": 0.03782347372361169,
        "docgen": 0.4538816846833403,
        "manifest_cache": 0.03782347372361169,
        "json": 0.07564694744722338,
        "and": 0.11347042117083507,
        "embeddings": 0.03782347372361169,
        "when": 0.07564694744722338,
        "refactoring": 0.03782347372361169,
        "large": 0.03782347372361169,
        "parts": 0.03782347372361169,
        "of": 0.03782347372361169,
        "the": 0.3404112635125052,
        "repo": 0.03782347372361169,
        "structure": 0.03782347372361169,
        "to": 0.03782347372361169,
        "force": 0.03782347372361169,
        "a": 0.4538816846833403,
        "fresh": 0.03782347372361169,
        "scan": 0.03782347372361169,
        "ensure": 0.03782347372361169,
        "local": 0.07564694744722338,
        "model": 0.07564694744722338,
        "runner": 0.07564694744722338,
        "is": 0.07564694744722338,
        "reachable": 0.03782347372361169,
        "at": 0.03782347372361169,
        "loopback": 0.07564694744722338,
        "url": 0.03782347372361169,
        "remote": 0.07564694744722338,
        "hosts": 0.07564694744722338,
        "are": 0.07564694744722338,
        "intentionally": 0.03782347372361169,
        "rejected": 0.03782347372361169,
        "by": 0.03782347372361169,
        "llmrunner": 0.07564694744722338,
        "for": 0.03782347372361169,
        "security": 0.03782347372361169,
        "end": 0.11347042117083507,
        "troubleshooting": 0.03782347372361169,
        "faq": 0.11347042117083507,
        "begin": 0.07564694744722338,
        "q": 0.15129389489444675,
        "how": 0.03782347372361169,
        "this": 0.07564694744722338,
        "readme": 0.03782347372361169,
        "maintained": 0.03782347372361169,
        "generate": 0.03782347372361169,
        "with": 0.03782347372361169,
        "init": 0.03782347372361169,
        "keep": 0.03782347372361169,
        "it": 0.03782347372361169,
        "current": 0.03782347372361169,
        "via": 0.07564694744722338,
        "update": 0.03782347372361169,
        "optionally": 0.03782347372361169,
        "in": 0.15129389489444675,
        "ci": 0.03782347372361169,
        "using": 0.03782347372361169,
        "provided": 0.03782347372361169,
        "workflow": 0.03782347372361169,
        "what": 0.03782347372361169,
        "happens": 0.03782347372361169,
        "if": 0.03782347372361169,
        "analyzers": 0.11347042117083507,
        "miss": 0.03782347372361169,
        "framework": 0.03782347372361169,
        "command": 0.03782347372361169,
        "signals": 0.03782347372361169,
        "pluggable": 0.03782347372361169,
        "custom": 0.03782347372361169,
        "analyzer": 0.03782347372361169,
        "entry": 0.03782347372361169,
        "point": 0.03782347372361169,
        "group": 0.03782347372361169,
        "extend": 0.03782347372361169,
        "existing": 0.03782347372361169,
        "utilities": 0.03782347372361169,
        "under": 0.03782347372361169,
        "utils": 0.03782347372361169,
        "py": 0.03782347372361169,
        "can": 0.03782347372361169,
        "use": 0.03782347372361169,
        "llm": 0.03782347372361169,
        "endpoint": 0.03782347372361169,
        "no": 0.03782347372361169,
        "enforces": 0.03782347372361169,
        "internal": 0.03782347372361169,
        "supply": 0.03782347372361169,
        "ollama": 0.03782347372361169,
        "instance": 0.03782347372361169,
        "instead": 0.03782347372361169,
        "where": 0.03782347372361169,
        "do": 0.03782347372361169,
        "i": 0.03782347372361169,
        "report": 0.03782347372361169,
        "issues": 0.03782347372361169,
        "propose": 0.03782347372361169,
        "enhancements": 0.03782347372361169,
        "file": 0.03782347372361169,
        "an": 0.03782347372361169,
        "issue": 0.03782347372361169,
        "open": 0.03782347372361169,
        "discussion": 0.03782347372361169,
        "repository": 0.03782347372361169,
        "reference": 0.03782347372361169,
        "relevant": 0.03782347372361169,
        "sections": 0.03782347372361169,
        "spec": 0.15129389489444675,
        "md": 0.11347042117083507,
        "feature_order": 0.07564694744722338,
        "describing": 0.03782347372361169,
        "change": 0.03782347372361169,
        "license": 0.15129389489444675,
        "licensing": 0.03782347372361169,
        "information": 0.03782347372361169,
        "once": 0.03782347372361169,
        "project": 0.03782347372361169,
        "selects": 0.03782347372361169,
        "track": 0.03782347372361169,
        "candidate": 0.03782347372361169,
        "licenses": 0.03782347372361169,
        "alongside": 0.03782347372361169,
        "roadmap": 0.03782347372361169
      },
      "text": "paths or add missing files before committing generated docs. - Clear `.docgen/manifest_cache.json` and `.docgen/embeddings.json` when refactoring large parts of the repo structure to force a fresh scan. - Ensure the local model runner is reachable at a loopback URL; remote hosts are intentionally rejected by `LLMRunner` for security. <!-- docgen:end:troubleshooting --> ## FAQ <!-- docgen:begin:faq --> **Q: How is this README maintained?** A: Generate with `docgen init` and keep it current via `docgen update` (optionally in CI using the provided workflow). **Q: What happens if analyzers miss a framework or command?** A: Signals are pluggable\u2014add a custom analyzer via the `docgen.analyzers` entry-point group or extend the existing utilities under `docgen/analyzers/utils.py`. **Q: Can docgen use a remote LLM endpoint?** A: No. `LLMRunner` enforces loopback/`.internal` hosts; supply a local model runner or Ollama instance instead. **Q: Where do I report issues or propose enhancements?** A: File an issue or open a discussion in this repository and reference the relevant sections in `spec/spec.md` or `spec/feature_order.md` when describing the change. <!-- docgen:end:faq --> ## License <!-- docgen:begin:license --> Add licensing information once the project selects a license. Track candidate licenses alongside the roadmap in `spec/feature_order.md`. <!-- docgen:end:license -->",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "docs/ci/docgen-update.yml#0",
      "vector": {
        "name": 0.2773500981126145,
        "docgen": 0.1849000654084097,
        "update": 0.2311250817605121,
        "on": 0.09245003270420485,
        "push": 0.046225016352102424,
        "branches": 0.09245003270420485,
        "main": 0.13867504905630726,
        "pull_request": 0.13867504905630726,
        "jobs": 0.046225016352102424,
        "readme": 0.1849000654084097,
        "runs": 0.046225016352102424,
        "self": 0.046225016352102424,
        "hosted": 0.046225016352102424,
        "steps": 0.09245003270420485,
        "uses": 0.13867504905630726,
        "actions": 0.2311250817605121,
        "checkout": 0.046225016352102424,
        "v4": 0.09245003270420485,
        "with": 0.13867504905630726,
        "fetch": 0.046225016352102424,
        "depth": 0.046225016352102424,
        "0": 0.046225016352102424,
        "setup": 0.046225016352102424,
        "python": 0.2311250817605121,
        "v5": 0.046225016352102424,
        "version": 0.046225016352102424,
        "3": 0.046225016352102424,
        "11": 0.046225016352102424,
        "cache": 0.09245003270420485,
        "path": 0.046225016352102424,
        "pip": 0.2773500981126145,
        "key": 0.046225016352102424,
        "runner": 0.09245003270420485,
        "os": 0.09245003270420485,
        "hashfiles": 0.046225016352102424,
        "pyproject": 0.046225016352102424,
        "toml": 0.046225016352102424,
        "restore": 0.046225016352102424,
        "keys": 0.046225016352102424,
        "install": 0.13867504905630726,
        "dependencies": 0.046225016352102424,
        "run": 0.2311250817605121,
        "m": 0.13867504905630726,
        "upgrade": 0.046225016352102424,
        "e": 0.046225016352102424,
        "dev": 0.046225016352102424,
        "determine": 0.046225016352102424,
        "diff": 0.1849000654084097,
        "base": 0.2773500981126145,
        "id": 0.046225016352102424,
        "if": 0.09245003270420485,
        "github": 0.2311250817605121,
        "event_name": 0.046225016352102424,
        "then": 0.09245003270420485,
        "echo": 0.09245003270420485,
        "event": 0.046225016352102424,
        "sha": 0.046225016352102424,
        "github_output": 0.09245003270420485,
        "else": 0.046225016352102424,
        "origin": 0.046225016352102424,
        "fi": 0.09245003270420485,
        "env": 0.046225016352102424,
        "docgen_llm_base_url": 0.046225016352102424,
        "http": 0.046225016352102424,
        "localhost": 0.046225016352102424,
        "12434": 0.046225016352102424,
        "engines": 0.046225016352102424,
        "v1": 0.046225016352102424,
        "cli": 0.046225016352102424,
        "outputs": 0.046225016352102424,
        "commit": 0.09245003270420485,
        "md": 0.09245003270420485,
        "optional": 0.046225016352102424,
        "git": 0.1849000654084097,
        "status": 0.046225016352102424,
        "short": 0.046225016352102424,
        "grep": 0.046225016352102424,
        "q": 0.046225016352102424,
        "config": 0.09245003270420485,
        "user": 0.09245003270420485,
        "email": 0.046225016352102424,
        "users": 0.046225016352102424,
        "noreply": 0.046225016352102424,
        "com": 0.046225016352102424,
        "am": 0.046225016352102424,
        "docs": 0.046225016352102424,
        "via": 0.046225016352102424
      },
      "text": "name: docgen-update on: push: branches: [ main ] pull_request: branches: [ main ] jobs: update-readme: runs-on: self-hosted steps: - uses: actions/checkout@v4 with: fetch-depth: 0 - uses: actions/setup-python@v5 with: python-version: '3.11' - uses: actions/cache@v4 with: path: ~/.cache/pip key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }} restore-keys: ${{ runner.os }}-pip- - name: Install dependencies run: | python -m pip install --upgrade pip python -m pip install -e .[dev] - name: Determine diff base id: diff run: | if [ \"${{ github.event_name }}\" = \"pull_request\" ]; then echo \"base=${{ github.event.pull_request.base.sha }}\" >> \"$GITHUB_OUTPUT\" else echo \"base=origin/main\" >> \"$GITHUB_OUTPUT\" fi - name: Run docgen update env: DOCGEN_LLM_BASE_URL: http://localhost:12434/engines/v1 run: python -m docgen.cli update --diff-base ${{ steps.diff.outputs.base }} - name: Commit README.md (optional) run: | if git status --short | grep -q README.md; then git config user.name \"github-actions\" git config user.email \"github-actions@users.noreply.github.com\" git commit -am \"docs: update README via docgen\" fi",
      "metadata": {
        "path": "docs/ci/docgen-update.yml",
        "tags": [
          "docs"
        ],
        "hash": "f3bf5ea7b740892011a0aa14cb06b4bb27a4f3ea348599d85003a66032594538"
      }
    },
    {
      "id": "docs/ci/github-actions.md#0",
      "vector": {
        "github": 0.25925925925925924,
        "actions": 0.2222222222222222,
        "integration": 0.037037037037037035,
        "the": 0.1111111111111111,
        "workflow": 0.037037037037037035,
        "below": 0.037037037037037035,
        "runs": 0.07407407407407407,
        "docgen": 0.25925925925925924,
        "update": 0.2222222222222222,
        "on": 0.1111111111111111,
        "pushes": 0.037037037037037035,
        "and": 0.037037037037037035,
        "pull": 0.037037037037037035,
        "requests": 0.037037037037037035,
        "it": 0.037037037037037035,
        "assumes": 0.037037037037037035,
        "a": 0.037037037037037035,
        "self": 0.07407407407407407,
        "hosted": 0.1111111111111111,
        "runner": 0.14814814814814814,
        "or": 0.037037037037037035,
        "with": 0.14814814814814814,
        "network": 0.037037037037037035,
        "access": 0.07407407407407407,
        "to": 0.037037037037037035,
        "your": 0.037037037037037035,
        "local": 0.07407407407407407,
        "model": 0.037037037037037035,
        "runtime": 0.037037037037037035,
        "job": 0.037037037037037035,
        "skips": 0.037037037037037035,
        "early": 0.037037037037037035,
        "when": 0.037037037037037035,
        "no": 0.037037037037037035,
        "files": 0.037037037037037035,
        "match": 0.037037037037037035,
        "yml": 0.037037037037037035,
        "s": 0.037037037037037035,
        "ci": 0.037037037037037035,
        "watched_globs": 0.037037037037037035,
        "entries": 0.037037037037037035,
        "so": 0.037037037037037035,
        "that": 0.037037037037037035,
        "purely": 0.037037037037037035,
        "documentation": 0.037037037037037035,
        "only": 0.037037037037037035,
        "changes": 0.037037037037037035,
        "do": 0.037037037037037035,
        "not": 0.037037037037037035,
        "trigger": 0.037037037037037035,
        "generator": 0.037037037037037035,
        "yaml": 0.037037037037037035,
        "name": 0.3333333333333333,
        "push": 0.037037037037037035,
        "branches": 0.07407407407407407,
        "main": 0.1111111111111111,
        "pull_request": 0.1111111111111111,
        "jobs": 0.037037037037037035,
        "readme": 0.14814814814814814,
        "requires": 0.037037037037037035,
        "llm": 0.037037037037037035,
        "steps": 0.07407407407407407,
        "checkout": 0.07407407407407407,
        "repository": 0.037037037037037035,
        "uses": 0.1111111111111111,
        "v4": 0.07407407407407407,
        "fetch": 0.037037037037037035,
        "depth": 0.037037037037037035,
        "0": 0.037037037037037035,
        "set": 0.037037037037037035,
        "up": 0.037037037037037035,
        "python": 0.2222222222222222,
        "setup": 0.037037037037037035,
        "v5": 0.037037037037037035,
        "version": 0.037037037037037035,
        "3": 0.037037037037037035,
        "11": 0.037037037037037035,
        "cache": 0.1111111111111111,
        "pip": 0.25925925925925924,
        "dependencies": 0.037037037037037035,
        "path": 0.037037037037037035,
        "key": 0.037037037037037035,
        "os": 0.07407407407407407,
        "hashfiles": 0.037037037037037035,
        "pyproject": 0.037037037037037035,
        "toml": 0.037037037037037035,
        "restore": 0.037037037037037035,
        "keys": 0.037037037037037035,
        "install": 0.1111111111111111,
        "in": 0.037037037037037035,
        "editable": 0.037037037037037035,
        "mode": 0.037037037037037035,
        "run": 0.18518518518518517,
        "m": 0.1111111111111111,
        "upgrade": 0.037037037037037035,
        "e": 0.037037037037037035,
        "dev": 0.037037037037037035,
        "determine": 0.037037037037037035,
        "diff": 0.14814814814814814,
        "base": 0.2222222222222222,
        "id": 0.037037037037037035,
        "if": 0.1111111111111111,
        "event_name": 0.037037037037037035,
        "then": 0.07407407407407407,
        "echo": 0.07407407407407407,
        "event": 0.037037037037037035,
        "sha": 0.037037037037037035,
        "github_output": 0.07407407407407407,
        "else": 0.037037037037037035,
        "origin": 0.037037037037037035,
        "fi": 0.07407407407407407,
        "env": 0.037037037037037035,
        "docgen_llm_base_url": 0.037037037037037035,
        "http": 0.037037037037037035,
        "localhost": 0.037037037037037035,
        "12434": 0.037037037037037035,
        "engines": 0.037037037037037035,
        "v1": 0.037037037037037035,
        "cli": 0.037037037037037035,
        "outputs": 0.037037037037037035,
        "commit": 0.07407407407407407,
        "updates": 0.037037037037037035,
        "any": 0.037037037037037035,
        "git": 0.14814814814814814,
        "status": 0.037037037037037035,
        "short": 0.037037037037037035,
        "grep": 0.037037037037037035,
        "q": 0.037037037037037035,
        "md": 0.037037037037037035,
        "config": 0.07407407407407407,
        "user": 0.07407407407407407,
        "email": 0.037037037037037035,
        "users": 0.037037037037037035,
        "noreply": 0.037037037037037035,
        "com": 0.037037037037037035,
        "am": 0.037037037037037035,
        "docs": 0.037037037037037035,
        "via": 0.037037037037037035
      },
      "text": "# GitHub Actions Integration The workflow below runs `docgen update` on pushes and pull requests. It assumes a self-hosted runner (or GitHub-hosted runner with network access to your local model runtime). The job skips early when no files match `.docgen.yml`'s `ci.watched_globs` entries so that purely documentation-only changes do not trigger the generator. ```yaml name: docgen-update on: push: branches: [ main ] pull_request: branches: [ main ] jobs: update-readme: runs-on: self-hosted # requires local LLM access steps: - name: Checkout repository uses: actions/checkout@v4 with: fetch-depth: 0 - name: Set up Python uses: actions/setup-python@v5 with: python-version: '3.11' - name: Cache pip dependencies uses: actions/cache@v4 with: path: ~/.cache/pip key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }} restore-keys: ${{ runner.os }}-pip- - name: Install docgen in editable mode run: | python -m pip install --upgrade pip python -m pip install -e .[dev] - name: Determine diff base id: diff run: | if [ \"${{ github.event_name }}\" = \"pull_request\" ]; then echo \"base=${{ github.event.pull_request.base.sha }}\" >> \"$GITHUB_OUTPUT\" else echo \"base=origin/main\" >> \"$GITHUB_OUTPUT\" fi - name: Run docgen update env: DOCGEN_LLM_BASE_URL: http://localhost:12434/engines/v1 run: | python -m docgen.cli update --diff-base ${{ steps.diff.outputs.base }} - name: Commit README updates (if any) run: | if git status --short | grep -q README.md; then git config user.name \"github-actions\" git config user.email \"github-actions@users.noreply.github.com\" git commit -am \"docs: update README via docgen\" fi -",
      "metadata": {
        "path": "docs/ci/github-actions.md",
        "tags": [
          "docs"
        ],
        "hash": "518fe87441e7f08aadb0ed175d54a5ce3c227af17677678096af6df070190e59"
      }
    },
    {
      "id": "docs/ci/github-actions.md#1",
      "vector": {
        "diff": 0.1363988678940947,
        "base": 0.1363988678940947,
        "steps": 0.06819943394704735,
        "outputs": 0.06819943394704735,
        "name": 0.2727977357881894,
        "commit": 0.1363988678940947,
        "readme": 0.4091966036822841,
        "updates": 0.06819943394704735,
        "if": 0.20459830184114206,
        "any": 0.06819943394704735,
        "run": 0.06819943394704735,
        "git": 0.2727977357881894,
        "status": 0.06819943394704735,
        "short": 0.06819943394704735,
        "grep": 0.06819943394704735,
        "q": 0.06819943394704735,
        "md": 0.1363988678940947,
        "then": 0.06819943394704735,
        "config": 0.1363988678940947,
        "user": 0.1363988678940947,
        "github": 0.2727977357881894,
        "actions": 0.20459830184114206,
        "email": 0.06819943394704735,
        "users": 0.06819943394704735,
        "noreply": 0.06819943394704735,
        "com": 0.06819943394704735,
        "am": 0.06819943394704735,
        "docs": 0.06819943394704735,
        "update": 0.06819943394704735,
        "via": 0.06819943394704735,
        "docgen": 0.06819943394704735,
        "fi": 0.06819943394704735,
        "upload": 0.1363988678940947,
        "artifact": 0.1363988678940947,
        "success": 0.06819943394704735,
        "uses": 0.06819943394704735,
        "v4": 0.06819943394704735,
        "with": 0.1363988678940947,
        "generated": 0.06819943394704735,
        "path": 0.06819943394704735,
        "note": 0.06819943394704735,
        "the": 0.20459830184114206,
        "workflow": 0.06819943394704735,
        "relies": 0.06819943394704735,
        "on": 0.06819943394704735,
        "docgen_llm_base_url": 0.06819943394704735,
        "pointing": 0.06819943394704735,
        "to": 0.20459830184114206,
        "a": 0.06819943394704735,
        "local": 0.06819943394704735,
        "or": 0.1363988678940947,
        "private": 0.1363988678940947,
        "inference": 0.06819943394704735,
        "endpoint": 0.06819943394704735,
        "for": 0.06819943394704735,
        "hosted": 0.06819943394704735,
        "runners": 0.06819943394704735,
        "you": 0.06819943394704735,
        "will": 0.06819943394704735,
        "need": 0.06819943394704735,
        "expose": 0.06819943394704735,
        "runner": 0.06819943394704735,
        "within": 0.06819943394704735,
        "your": 0.06819943394704735,
        "network": 0.06819943394704735,
        "switch": 0.06819943394704735,
        "ollama": 0.06819943394704735,
        "cli": 0.06819943394704735,
        "appropriate": 0.06819943394704735,
        "caching": 0.06819943394704735
      },
      "text": "--diff-base ${{ steps.diff.outputs.base }} - name: Commit README updates (if any) run: | if git status --short | grep -q README.md; then git config user.name \"github-actions\" git config user.email \"github-actions@users.noreply.github.com\" git commit -am \"docs: update README via docgen\" fi - name: Upload README artifact if: success() uses: actions/upload-artifact@v4 with: name: generated-readme path: README.md ``` > **Note:** the workflow relies on `DOCGEN_LLM_BASE_URL` pointing to a local or > private inference endpoint. For GitHub-hosted runners you will need to expose > the runner within your private network or switch to the `ollama` CLI with > appropriate caching. ```",
      "metadata": {
        "path": "docs/ci/github-actions.md",
        "tags": [
          "docs"
        ],
        "hash": "518fe87441e7f08aadb0ed175d54a5ce3c227af17677678096af6df070190e59"
      }
    },
    {
      "id": "spec/feature_checklist.md#0",
      "vector": {
        "intelligent": 0.03809696588797296,
        "readme": 0.1142908976639189,
        "generator": 0.03809696588797296,
        "feature": 0.03809696588797296,
        "checklist": 0.03809696588797296,
        "status": 0.03809696588797296,
        "legend": 0.03809696588797296,
        "not": 0.03809696588797296,
        "started": 0.03809696588797296,
        "in": 0.03809696588797296,
        "progress": 0.03809696588797296,
        "done": 0.03809696588797296,
        "scope": 0.03809696588797296,
        "tags": 0.03809696588797296,
        "mvp": 0.4571635906556756,
        "required": 0.03809696588797296,
        "for": 0.1142908976639189,
        "proof": 0.03809696588797296,
        "of": 0.07619393177594593,
        "concept": 0.03809696588797296,
        "next": 0.19048482943986483,
        "nice": 0.03809696588797296,
        "to": 0.1142908976639189,
        "have": 0.03809696588797296,
        "soon": 0.03809696588797296,
        "stretch": 0.1142908976639189,
        "later": 0.03809696588797296,
        "1": 0.07619393177594593,
        "core": 0.03809696588797296,
        "workflows": 0.03809696588797296,
        "x": 0.6095514542075674,
        "docgen": 0.15238786355189185,
        "init": 0.03809696588797296,
        "initialize": 0.03809696588797296,
        "repos": 0.03809696588797296,
        "without": 0.07619393177594593,
        "docs": 0.1142908976639189,
        "update": 0.03809696588797296,
        "detect": 0.03809696588797296,
        "changes": 0.03809696588797296,
        "on": 0.03809696588797296,
        "commit": 0.03809696588797296,
        "pr": 0.03809696588797296,
        "and": 0.03809696588797296,
        "patch": 0.03809696588797296,
        "affected": 0.03809696588797296,
        "sections": 0.03809696588797296,
        "regenerate": 0.03809696588797296,
        "manual": 0.03809696588797296,
        "full": 0.03809696588797296,
        "partial": 0.03809696588797296,
        "regeneration": 0.03809696588797296,
        "dry": 0.07619393177594593,
        "run": 0.07619393177594593,
        "mode": 0.07619393177594593,
        "preview": 0.03809696588797296,
        "diffs": 0.03809696588797296,
        "writing": 0.03809696588797296,
        "service": 0.03809696588797296,
        "fastapi": 0.07619393177594593,
        "endpoints": 0.03809696588797296,
        "ci": 0.07619393177594593,
        "bots": 0.03809696588797296,
        "2": 0.03809696588797296,
        "repository": 0.03809696588797296,
        "scanning": 0.03809696588797296,
        "indexing": 0.03809696588797296,
        "walk": 0.03809696588797296,
        "filesystem": 0.03809696588797296,
        "with": 0.03809696588797296,
        "ignore": 0.03809696588797296,
        "rules": 0.03809696588797296,
        "gitignore": 0.03809696588797296,
        "yml": 0.03809696588797296,
        "build": 0.07619393177594593,
        "normalized": 0.03809696588797296,
        "manifest": 0.07619393177594593,
        "files": 0.07619393177594593,
        "roles": 0.03809696588797296,
        "src": 0.03809696588797296,
        "test": 0.03809696588797296,
        "config": 0.07619393177594593,
        "infra": 0.03809696588797296,
        "hash": 0.03809696588797296,
        "cache": 0.03809696588797296,
        "file": 0.03809696588797296,
        "metadata": 0.03809696588797296,
        "speed": 0.03809696588797296,
        "subsequent": 0.03809696588797296,
        "runs": 0.03809696588797296,
        "entrypoint": 0.07619393177594593,
        "detection": 0.07619393177594593,
        "e": 0.03809696588797296,
        "g": 0.03809696588797296,
        "main": 0.03809696588797296,
        "springbootapplication": 0.03809696588797296,
        "app": 0.03809696588797296,
        "monorepo": 0.07619393177594593,
        "module": 0.03809696588797296,
        "3": 0.03809696588797296,
        "analyzers": 0.19048482943986483,
        "plugin": 0.03809696588797296,
        "based": 0.03809696588797296,
        "language": 0.03809696588797296,
        "python": 0.03809696588797296,
        "java": 0.03809696588797296,
        "node": 0.03809696588797296,
        "js": 0.03809696588797296,
        "tier": 0.03809696588797296,
        "poetry": 0.03809696588797296,
        "setuptools": 0.03809696588797296,
        "maven": 0.03809696588797296,
        "gradle": 0.03809696588797296,
        "npm": 0.03809696588797296,
        "pnpm": 0.03809696588797296,
        "yarn": 0.03809696588797296,
        "dependency": 0.03809696588797296,
        "from": 0.03809696588797296,
        "pattern": 0.03809696588797296,
        "docker": 0.03809696588797296,
        "k8s": 0.03809696588797296,
        "layout": 0.03809696588797296,
        "tree": 0.03809696588797296,
        "sitter": 0.03809696588797296,
        "powered": 0.03809696588797296,
        "symbol": 0.03809696588797296,
        "extraction": 0.03809696588797296,
        "flagged": 0.03809696588797296,
        "4": 0.03809696588797296,
        "knowledge": 0.03809696588797296,
        "store": 0.03809696588797296,
        "rag": 0.03809696588797296,
        "local": 0.03809696588797296,
        "embedding": 0.03809696588797296,
        "model": 0.03809696588797296,
        "chunking": 0.03809696588797296,
        "strategy": 0.03809696588797296,
        "index": 0.03809696588797296,
        "top": 0.03809696588797296,
        "n": 0.03809696588797296,
        "source": 0.03809696588797296,
        "headers": 0.03809696588797296,
        "comments": 0.03809696588797296
      },
      "text": "# Intelligent README Generator \u2014 Feature Checklist > Status legend: \u2610 Not started \u00b7 \u25d0 In progress \u00b7 \u2714 Done > Scope tags: **[MVP]** required for proof\u2011of\u2011concept, **[NEXT]** nice\u2011to\u2011have soon, **[STRETCH]** later ## 1) Core Workflows - [x] **docgen init** \u2014 Initialize README for repos without docs **[MVP]** - [x] **docgen update** \u2014 Detect changes on commit/PR and patch affected sections **[MVP]** - [ ] **docgen regenerate** \u2014 Manual full/partial regeneration **[MVP]** - [x] Dry\u2011run mode (`--dry-run`) to preview diffs without writing **[NEXT]** - [x] Service mode (FastAPI) endpoints for CI/bots **[STRETCH]** ## 2) Repository Scanning & Indexing - [x] Walk filesystem with ignore rules (`.gitignore`, `.docgen.yml`) **[MVP]** - [x] Build normalized manifest of files, roles (src/test/docs/config/infra) **[MVP]** - [x] Hash & cache file metadata to speed subsequent runs **[MVP]** - [x] Entrypoint detection (e.g., `main()`, `@SpringBootApplication`, FastAPI app) **[NEXT]** - [x] Monorepo module detection **[NEXT]** ## 3) Analyzers (Plugin\u2011based) - [x] Language analyzers: Python, Java, Node.js (Tier\u20111) **[MVP]** - [x] Build analyzers: Poetry/Setuptools, Maven/Gradle, npm/pnpm/yarn **[MVP]** - [x] Dependency analyzers from manifest files **[MVP]** - [x] Pattern analyzers: Docker/K8s, CI config, monorepo layout **[NEXT]** - [x] Tree\u2011sitter powered symbol/entrypoint extraction (flagged) **[STRETCH]** ## 4) Knowledge Store (RAG) - [x] Local embedding model + chunking strategy **[MVP]** - [x] Index `README`, `/docs`, top N source headers & comments **[MVP]** -",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_checklist.md#1",
      "vector": {
        "ci": 0.03943615033625495,
        "config": 0.0788723006725099,
        "monorepo": 0.03943615033625495,
        "layout": 0.03943615033625495,
        "next": 0.3154892026900396,
        "x": 0.6309784053800792,
        "tree": 0.03943615033625495,
        "sitter": 0.03943615033625495,
        "powered": 0.03943615033625495,
        "symbol": 0.03943615033625495,
        "entrypoint": 0.03943615033625495,
        "extraction": 0.03943615033625495,
        "flagged": 0.03943615033625495,
        "stretch": 0.0788723006725099,
        "4": 0.03943615033625495,
        "knowledge": 0.0788723006725099,
        "store": 0.03943615033625495,
        "rag": 0.03943615033625495,
        "local": 0.0788723006725099,
        "embedding": 0.03943615033625495,
        "model": 0.0788723006725099,
        "chunking": 0.03943615033625495,
        "strategy": 0.03943615033625495,
        "mvp": 0.3943615033625495,
        "index": 0.03943615033625495,
        "readme": 0.03943615033625495,
        "docs": 0.0788723006725099,
        "top": 0.0788723006725099,
        "n": 0.03943615033625495,
        "source": 0.03943615033625495,
        "headers": 0.03943615033625495,
        "comments": 0.03943615033625495,
        "section": 0.19718075168127475,
        "scoped": 0.03943615033625495,
        "retrieval": 0.03943615033625495,
        "k": 0.03943615033625495,
        "per": 0.0788723006725099,
        "lightweight": 0.03943615033625495,
        "graph": 0.03943615033625495,
        "of": 0.03943615033625495,
        "modules": 0.03943615033625495,
        "services": 0.03943615033625495,
        "signals": 0.03943615033625495,
        "5": 0.03943615033625495,
        "prompting": 0.03943615033625495,
        "templates": 0.11830845100876484,
        "jinja2": 0.03943615033625495,
        "intro": 0.03943615033625495,
        "features": 0.03943615033625495,
        "architecture": 0.0788723006725099,
        "quickstart": 0.03943615033625495,
        "build": 0.0788723006725099,
        "test": 0.03943615033625495,
        "deployment": 0.03943615033625495,
        "troubleshooting": 0.03943615033625495,
        "faq": 0.03943615033625495,
        "license": 0.0788723006725099,
        "guardrailed": 0.03943615033625495,
        "system": 0.03943615033625495,
        "prompt": 0.03943615033625495,
        "no": 0.03943615033625495,
        "speculation": 0.03943615033625495,
        "cite": 0.03943615033625495,
        "repo": 0.03943615033625495,
        "facts": 0.03943615033625495,
        "only": 0.03943615033625495,
        "token": 0.03943615033625495,
        "budgeting": 0.03943615033625495,
        "streaming": 0.03943615033625495,
        "by": 0.03943615033625495,
        "generation": 0.03943615033625495,
        "template": 0.03943615033625495,
        "override": 0.03943615033625495,
        "mechanism": 0.03943615033625495,
        "j2": 0.03943615033625495,
        "style": 0.03943615033625495,
        "presets": 0.03943615033625495,
        "concise": 0.03943615033625495,
        "vs": 0.03943615033625495,
        "comprehensive": 0.03943615033625495,
        "mermaid": 0.03943615033625495,
        "js": 0.03943615033625495,
        "diagrams": 0.03943615033625495,
        "for": 0.0788723006725099,
        "flow": 0.03943615033625495,
        "sections": 0.0788723006725099,
        "where": 0.03943615033625495,
        "appropriate": 0.03943615033625495,
        "6": 0.03943615033625495,
        "llm": 0.03943615033625495,
        "runner": 0.0788723006725099,
        "http": 0.03943615033625495,
        "adapter": 0.0788723006725099,
        "host": 0.03943615033625495,
        "container": 0.03943615033625495,
        "defaults": 0.0788723006725099,
        "env": 0.03943615033625495,
        "api": 0.03943615033625495,
        "key": 0.03943615033625495,
        "overrides": 0.03943615033625495,
        "llama": 0.03943615033625495,
        "cpp": 0.03943615033625495,
        "structured": 0.03943615033625495,
        "outputs": 0.03943615033625495,
        "tool": 0.03943615033625495,
        "use": 0.03943615033625495,
        "compatibility": 0.03943615033625495,
        "7": 0.03943615033625495,
        "post": 0.03943615033625495,
        "processing": 0.03943615033625495,
        "markdown": 0.03943615033625495,
        "lint": 0.03943615033625495,
        "heading": 0.03943615033625495,
        "hierarchy": 0.03943615033625495,
        "code": 0.03943615033625495,
        "fences": 0.03943615033625495,
        "line": 0.03943615033625495,
        "length": 0.03943615033625495,
        "auto": 0.03943615033625495,
        "toc": 0.03943615033625495,
        "level": 0.03943615033625495,
        "3": 0.03943615033625495,
        "badges": 0.03943615033625495,
        "coverage": 0.03943615033625495,
        "with": 0.03943615033625495,
        "safe": 0.03943615033625495,
        "link": 0.03943615033625495,
        "validator": 0.03943615033625495,
        "relative": 0.03943615033625495,
        "absolute": 0.03943615033625495,
        "managed": 0.03943615033625495,
        "markers": 0.03943615033625495,
        "idempotent": 0.03943615033625495,
        "patching": 0.03943615033625495,
        "docgen": 0.03943615033625495,
        "begin": 0.03943615033625495,
        "end": 0.03943615033625495,
        "8": 0.03943615033625495,
        "git": 0.03943615033625495,
        "integration": 0.03943615033625495,
        "diff": 0.03943615033625495,
        "detection": 0.03943615033625495,
        "map": 0.03943615033625495,
        "changed": 0.03943615033625495,
        "files": 0.03943615033625495,
        "impacted": 0.03943615033625495
      },
      "text": "CI config, monorepo layout **[NEXT]** - [x] Tree\u2011sitter powered symbol/entrypoint extraction (flagged) **[STRETCH]** ## 4) Knowledge Store (RAG) - [x] Local embedding model + chunking strategy **[MVP]** - [x] Index `README`, `/docs`, top N source headers & comments **[MVP]** - [x] Section\u2011scoped retrieval (top\u2011k per section) **[MVP]** - [ ] Lightweight knowledge graph of modules/services/signals **[NEXT]** ## 5) Prompting & Templates - [x] Jinja2 templates per section (intro, features, architecture, quickstart, config, build/test, deployment, troubleshooting, FAQ, license) **[MVP]** - [ ] Guardrailed system prompt (\u201cno speculation; cite repo facts only\u201d) **[MVP]** - [ ] Token budgeting & streaming section-by-section generation **[MVP]** - [x] Template override mechanism (`docs/templates/*.j2`) **[NEXT]** - [x] Style presets: concise vs comprehensive **[NEXT]** - [x] Mermaid.js diagrams for architecture/flow sections where appropriate **[NEXT]** ## 6) Local LLM Runner - [x] Model Runner HTTP adapter (host/container defaults, env/API key overrides) **[MVP]** - [x] llama.cpp adapter **[NEXT]** - [ ] Structured outputs / tool\u2011use compatibility **[STRETCH]** ## 7) Post\u2011Processing - [x] Markdown lint: heading hierarchy, code fences, line length **[MVP]** - [x] Auto ToC (\u2264 level 3) **[MVP]** - [x] Badges (build, coverage, license) with safe defaults **[NEXT]** - [x] Link validator (relative/absolute) **[NEXT]** - [x] Managed markers for idempotent patching (`<!-- docgen:begin:end -->`) **[MVP]** ## 8) Git Integration - [x] Diff detection (map changed files \u2192 impacted sections)",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_checklist.md#2",
      "vector": {
        "x": 0.6172133998483676,
        "badges": 0.03857583749052298,
        "build": 0.07715167498104596,
        "coverage": 0.03857583749052298,
        "license": 0.03857583749052298,
        "with": 0.07715167498104596,
        "safe": 0.03857583749052298,
        "defaults": 0.03857583749052298,
        "next": 0.3086066999241838,
        "link": 0.03857583749052298,
        "validator": 0.03857583749052298,
        "relative": 0.03857583749052298,
        "absolute": 0.03857583749052298,
        "managed": 0.03857583749052298,
        "markers": 0.03857583749052298,
        "for": 0.11572751247156893,
        "idempotent": 0.03857583749052298,
        "patching": 0.03857583749052298,
        "docgen": 0.07715167498104596,
        "begin": 0.03857583749052298,
        "end": 0.03857583749052298,
        "mvp": 0.4629100498862757,
        "8": 0.03857583749052298,
        "git": 0.03857583749052298,
        "integration": 0.07715167498104596,
        "diff": 0.03857583749052298,
        "detection": 0.03857583749052298,
        "map": 0.03857583749052298,
        "changed": 0.03857583749052298,
        "files": 0.03857583749052298,
        "impacted": 0.03857583749052298,
        "sections": 0.03857583749052298,
        "branch": 0.03857583749052298,
        "pr": 0.07715167498104596,
        "creation": 0.03857583749052298,
        "summary": 0.03857583749052298,
        "of": 0.03857583749052298,
        "readme": 0.11572751247156893,
        "deltas": 0.03857583749052298,
        "commit": 0.03857583749052298,
        "mode": 0.03857583749052298,
        "init": 0.03857583749052298,
        "or": 0.03857583749052298,
        "small": 0.03857583749052298,
        "changes": 0.07715167498104596,
        "configurable": 0.03857583749052298,
        "prevent": 0.03857583749052298,
        "loops": 0.03857583749052298,
        "on": 0.07715167498104596,
        "only": 0.07715167498104596,
        "9": 0.03857583749052298,
        "configuration": 0.03857583749052298,
        "parse": 0.03857583749052298,
        "yml": 0.03857583749052298,
        "llm": 0.03857583749052298,
        "style": 0.03857583749052298,
        "analyzers": 0.03857583749052298,
        "publish": 0.03857583749052298,
        "path": 0.03857583749052298,
        "exclusions": 0.03857583749052298,
        "watched_globs": 0.03857583749052298,
        "ci": 0.11572751247156893,
        "triggers": 0.03857583749052298,
        "per": 0.07715167498104596,
        "section": 0.03857583749052298,
        "off": 0.03857583749052298,
        "toggles": 0.03857583749052298,
        "and": 0.11572751247156893,
        "titles": 0.03857583749052298,
        "10": 0.03857583749052298,
        "github": 0.03857583749052298,
        "actions": 0.03857583749052298,
        "example": 0.03857583749052298,
        "workflow": 0.03857583749052298,
        "gitlab": 0.03857583749052298,
        "bitbucket": 0.03857583749052298,
        "pipelines": 0.03857583749052298,
        "samples": 0.03857583749052298,
        "labeling": 0.03857583749052298,
        "docs": 0.03857583749052298,
        "auto": 0.03857583749052298,
        "update": 0.03857583749052298,
        "behavior": 0.03857583749052298,
        "11": 0.03857583749052298,
        "security": 0.03857583749052298,
        "privacy": 0.03857583749052298,
        "local": 0.03857583749052298,
        "models": 0.03857583749052298,
        "never": 0.03857583749052298,
        "exfiltrate": 0.03857583749052298,
        "code": 0.03857583749052298,
        "respect": 0.03857583749052298,
        "gitignore": 0.03857583749052298,
        "exclude": 0.03857583749052298,
        "large": 0.03857583749052298,
        "binaries": 0.03857583749052298,
        "secrets": 0.03857583749052298,
        "optional": 0.03857583749052298,
        "simple": 0.03857583749052298,
        "secret": 0.03857583749052298,
        "scanner": 0.03857583749052298,
        "gate": 0.03857583749052298,
        "12": 0.03857583749052298,
        "multi": 0.03857583749052298,
        "language": 0.03857583749052298,
        "project": 0.03857583749052298,
        "types": 0.03857583749052298,
        "tier": 0.07715167498104596,
        "1": 0.03857583749052298,
        "python": 0.03857583749052298,
        "poetry": 0.03857583749052298,
        "setuptools": 0.03857583749052298,
        "java": 0.03857583749052298,
        "maven": 0.03857583749052298,
        "gradle": 0.03857583749052298,
        "spring": 0.03857583749052298,
        "boot": 0.03857583749052298,
        "node": 0.03857583749052298,
        "js": 0.03857583749052298,
        "npm": 0.03857583749052298,
        "pnpm": 0.03857583749052298,
        "express": 0.03857583749052298,
        "2": 0.03857583749052298,
        "go": 0.03857583749052298,
        "rust": 0.03857583749052298,
        "ruby": 0.03857583749052298,
        "php": 0.03857583749052298,
        "stretch": 0.03857583749052298,
        "framework": 0.03857583749052298,
        "aware": 0.03857583749052298,
        "quickstart": 0.03857583749052298,
        "commands": 0.03857583749052298,
        "system": 0.03857583749052298,
        "13": 0.03857583749052298,
        "quality": 0.03857583749052298,
        "gates": 0.03857583749052298,
        "evaluation": 0.03857583749052298,
        "command": 0.03857583749052298,
        "validation": 0.03857583749052298,
        "existence": 0.03857583749052298,
        "checks": 0.07715167498104596,
        "no": 0.03857583749052298,
        "hallucination": 0.03857583749052298,
        "reject": 0.03857583749052298,
        "facts": 0.03857583749052298,
        "not": 0.03857583749052298
      },
      "text": "[x] Badges (build, coverage, license) with safe defaults **[NEXT]** - [x] Link validator (relative/absolute) **[NEXT]** - [x] Managed markers for idempotent patching (`<!-- docgen:begin:end -->`) **[MVP]** ## 8) Git Integration - [x] Diff detection (map changed files \u2192 impacted sections) **[MVP]** - [x] Branch + PR creation with summary of README deltas **[MVP]** - [x] Commit mode for init or small changes (configurable) **[NEXT]** - [x] Prevent loops on README\u2011only changes **[MVP]** ## 9) Configuration - [x] Parse `.docgen.yml` (LLM, readme style, analyzers, publish) **[MVP]** - [x] Path exclusions & `watched_globs` for CI triggers **[MVP]** - [ ] Per-section on/off toggles and titles **[NEXT]** ## 10) CI Integration - [x] GitHub Actions example workflow **[MVP]** - [ ] GitLab CI and Bitbucket Pipelines samples **[NEXT]** - [x] Labeling (`docs:auto`) and PR update behavior **[NEXT]** ## 11) Security & Privacy - [x] Local-only models; never exfiltrate code **[MVP]** - [ ] Respect `.gitignore`; exclude large binaries/secrets **[MVP]** - [ ] Optional simple secret scanner gate **[NEXT]** ## 12) Multi\u2011Language & Project Types - [x] Tier\u20111: Python (Poetry/Setuptools), Java (Maven/Gradle/Spring Boot), Node.js (npm/pnpm/Express/Next) **[MVP]** - [ ] Tier\u20112: Go, Rust, Ruby, PHP **[STRETCH]** - [x] Framework\u2011aware quickstart commands per build system **[MVP]** ## 13) Quality Gates & Evaluation - [x] Command validation (existence checks) **[MVP]** - [x] No-hallucination checks: reject facts not",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_checklist.md#3",
      "vector": {
        "npm": 0.052999894000318,
        "pnpm": 0.052999894000318,
        "express": 0.052999894000318,
        "next": 0.211999576001272,
        "mvp": 0.476999046002862,
        "tier": 0.052999894000318,
        "2": 0.052999894000318,
        "go": 0.052999894000318,
        "rust": 0.052999894000318,
        "ruby": 0.052999894000318,
        "php": 0.052999894000318,
        "stretch": 0.052999894000318,
        "x": 0.5829988340034981,
        "framework": 0.052999894000318,
        "aware": 0.052999894000318,
        "quickstart": 0.052999894000318,
        "commands": 0.052999894000318,
        "per": 0.105999788000636,
        "build": 0.052999894000318,
        "system": 0.052999894000318,
        "13": 0.052999894000318,
        "quality": 0.052999894000318,
        "gates": 0.052999894000318,
        "evaluation": 0.052999894000318,
        "command": 0.052999894000318,
        "validation": 0.052999894000318,
        "existence": 0.052999894000318,
        "checks": 0.105999788000636,
        "no": 0.052999894000318,
        "hallucination": 0.052999894000318,
        "reject": 0.052999894000318,
        "facts": 0.052999894000318,
        "not": 0.052999894000318,
        "in": 0.052999894000318,
        "signals": 0.052999894000318,
        "rag": 0.105999788000636,
        "readme": 0.105999788000636,
        "scorecard": 0.052999894000318,
        "coverage": 0.052999894000318,
        "buildability": 0.052999894000318,
        "link": 0.052999894000318,
        "validity": 0.052999894000318,
        "diff": 0.052999894000318,
        "alignment": 0.052999894000318,
        "lint": 0.105999788000636,
        "14": 0.052999894000318,
        "performance": 0.052999894000318,
        "caching": 0.052999894000318,
        "persist": 0.052999894000318,
        "analyzer": 0.105999788000636,
        "outputs": 0.052999894000318,
        "embeddings": 0.052999894000318,
        "under": 0.052999894000318,
        "docgen": 0.052999894000318,
        "incremental": 0.052999894000318,
        "refresh": 0.052999894000318,
        "changed": 0.052999894000318,
        "files": 0.052999894000318,
        "only": 0.052999894000318,
        "15": 0.052999894000318,
        "error": 0.052999894000318,
        "handling": 0.052999894000318,
        "ux": 0.052999894000318,
        "fail": 0.052999894000318,
        "safe": 0.052999894000318,
        "stub": 0.052999894000318,
        "generation": 0.052999894000318,
        "when": 0.052999894000318,
        "evidence": 0.052999894000318,
        "is": 0.052999894000318,
        "insufficient": 0.052999894000318,
        "clear": 0.052999894000318,
        "run": 0.052999894000318,
        "logs": 0.052999894000318,
        "pr": 0.052999894000318,
        "body": 0.052999894000318,
        "with": 0.052999894000318,
        "rationale": 0.052999894000318,
        "sections": 0.052999894000318,
        "updated": 0.052999894000318,
        "because": 0.052999894000318,
        "helpful": 0.052999894000318,
        "cli": 0.052999894000318,
        "errors": 0.052999894000318,
        "and": 0.105999788000636,
        "verbose": 0.052999894000318,
        "flag": 0.052999894000318,
        "works": 0.052999894000318,
        "pre": 0.052999894000318,
        "post": 0.052999894000318,
        "subcommand": 0.052999894000318,
        "16": 0.052999894000318,
        "extensibility": 0.052999894000318,
        "abc": 0.052999894000318,
        "plugin": 0.052999894000318,
        "discovery": 0.052999894000318,
        "template": 0.052999894000318,
        "packs": 0.052999894000318,
        "org": 0.052999894000318,
        "style": 0.105999788000636,
        "definition": 0.052999894000318,
        "of": 0.052999894000318,
        "done": 0.052999894000318,
        "section": 0.052999894000318,
        "passing": 0.052999894000318,
        "unit": 0.052999894000318,
        "integration": 0.052999894000318,
        "tests": 0.052999894000318,
        "for": 0.052999894000318,
        "core": 0.052999894000318,
        "logic": 0.052999894000318,
        "golden": 0.052999894000318,
        "regression": 0.052999894000318,
        "test": 0.052999894000318,
        "s": 0.052999894000318,
        "meets": 0.052999894000318,
        "requirements": 0.052999894000318
      },
      "text": "(npm/pnpm/Express/Next) **[MVP]** - [ ] Tier\u20112: Go, Rust, Ruby, PHP **[STRETCH]** - [x] Framework\u2011aware quickstart commands per build system **[MVP]** ## 13) Quality Gates & Evaluation - [x] Command validation (existence checks) **[MVP]** - [x] No-hallucination checks: reject facts not in signals/RAG **[MVP]** - [x] README scorecard (coverage, buildability, link validity, diff alignment, lint) **[NEXT]** ## 14) Performance & Caching - [x] Persist analyzer outputs & embeddings under `.docgen/` **[MVP]** - [x] Incremental RAG refresh (changed files only) **[NEXT]** ## 15) Error Handling & UX - [x] Fail-safe stub generation when evidence is insufficient **[MVP]** - [x] Clear run logs + PR body with rationale (\u201csections updated because\u2026\u201d) **[MVP]** - [x] Helpful CLI errors and `--verbose` flag (works pre/post subcommand) **[MVP]** ## 16) Extensibility - [x] Analyzer ABC and plugin discovery **[MVP]** - [x] Template packs (org\u2011style) **[NEXT]** --- ### Definition of Done (per section) - [ ] Passing unit & integration tests for core logic - [ ] Golden README regression test(s) - [ ] Meets lint/style requirements",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_order.md#0",
      "vector": {
        "docgen": 0.25491557319725244,
        "development": 0.042485928866208736,
        "roadmap": 0.042485928866208736,
        "phase": 0.12745778659862622,
        "0": 0.042485928866208736,
        "bootstrap": 0.042485928866208736,
        "the": 0.042485928866208736,
        "skeleton": 0.08497185773241747,
        "1": 0.3398874309296699,
        "project": 0.042485928866208736,
        "cli": 0.042485928866208736,
        "config": 0.08497185773241747,
        "loader": 0.042485928866208736,
        "yml": 0.042485928866208736,
        "models": 0.042485928866208736,
        "done": 0.3823733597958786,
        "covers": 0.3823733597958786,
        "commands": 0.042485928866208736,
        "scaffolding": 0.042485928866208736,
        "9": 0.042485928866208736,
        "parse": 0.042485928866208736,
        "16": 0.08497185773241747,
        "analyzer": 0.08497185773241747,
        "abc": 0.08497185773241747,
        "2": 0.2124296443310437,
        "plugin": 0.08497185773241747,
        "discovery": 0.08497185773241747,
        "init": 0.16994371546483494,
        "happy": 0.042485928866208736,
        "path": 0.042485928866208736,
        "single": 0.042485928866208736,
        "repo": 0.12745778659862622,
        "local": 0.08497185773241747,
        "scanner": 0.042485928866208736,
        "manifest": 0.08497185773241747,
        "roles": 0.042485928866208736,
        "hashing": 0.042485928866208736,
        "ignores": 0.08497185773241747,
        "walk": 0.042485928866208736,
        "fs": 0.042485928866208736,
        "cache": 0.042485928866208736,
        "tier": 0.042485928866208736,
        "analyzers": 0.12745778659862622,
        "python": 0.042485928866208736,
        "java": 0.042485928866208736,
        "node": 0.042485928866208736,
        "build": 0.08497185773241747,
        "dependency": 0.042485928866208736,
        "3": 0.08497185773241747,
        "language": 0.042485928866208736,
        "deps": 0.042485928866208736,
        "templates": 0.12745778659862622,
        "prompt": 0.12745778659862622,
        "builder": 0.08497185773241747,
        "section": 0.12745778659862622,
        "by": 0.042485928866208736,
        "guardrailed": 0.042485928866208736,
        "system": 0.042485928866208736,
        "partial": 0.042485928866208736,
        "guardrails": 0.08497185773241747,
        "unused": 0.042485928866208736,
        "5": 0.08497185773241747,
        "jinja2": 0.042485928866208736,
        "token": 0.042485928866208736,
        "budget": 0.042485928866208736,
        "4": 0.042485928866208736,
        "llm": 0.042485928866208736,
        "runner": 0.042485928866208736,
        "ollama": 0.08497185773241747,
        "adapter": 0.042485928866208736,
        "6": 0.08497185773241747,
        "post": 0.042485928866208736,
        "processor": 0.042485928866208736,
        "managed": 0.042485928866208736,
        "markers": 0.12745778659862622,
        "toc": 0.08497185773241747,
        "markdown": 0.042485928866208736,
        "lint": 0.08497185773241747,
        "7": 0.042485928866208736,
        "git": 0.08497185773241747,
        "publisher": 0.08497185773241747,
        "commit": 0.08497185773241747,
        "mode": 0.08497185773241747,
        "for": 0.08497185773241747,
        "only": 0.042485928866208736,
        "8": 0.08497185773241747,
        "end": 0.08497185773241747,
        "to": 0.042485928866208736,
        "milestone": 0.042485928866208736,
        "generates": 0.042485928866208736,
        "a": 0.08497185773241747,
        "clean": 0.042485928866208736,
        "readme": 0.042485928866208736,
        "with": 0.042485928866208736,
        "no": 0.042485928866208736,
        "docs": 0.042485928866208736,
        "update": 0.08497185773241747,
        "on": 0.042485928866208736,
        "change": 0.08497185773241747,
        "pr": 0.042485928866208736,
        "workflow": 0.042485928866208736,
        "diff": 0.08497185773241747,
        "detection": 0.042485928866208736,
        "mapping": 0.08497185773241747,
        "patching": 0.042485928866208736,
        "inside": 0.042485928866208736,
        "prevent": 0.042485928866208736,
        "loops": 0.042485928866208736
      },
      "text": "# DocGen Development Roadmap ## Phase 0 \u2014 Bootstrap the skeleton 1. **Project skeleton + CLI (`docgen`) + config loader (`.docgen.yml`) + models** \u2014 \u2714 Done * Covers: 1 (commands scaffolding), 9 (parse config), 16 (Analyzer ABC) 2. **Analyzer plugin ABC & discovery** \u2014 \u2714 Done * Covers: 16 (plugin discovery) ## Phase 1 \u2014 \"Init\" happy-path (single repo, local) 1. **Repo scanner & manifest (roles, hashing, ignores)** \u2014 \u2714 Done * Covers: 2 (walk FS, manifest, cache, ignores) 2. **Tier-1 analyzers (Python, Java, Node) + build analyzers + dependency analyzers** \u2014 \u2714 Done * Covers: 3 (language/build/deps) 3. **Templates + prompt builder (section-by-section) + guardrailed system prompt** \u2014 \u25d0 Partial (templates/prompt builder done; guardrails unused) * Covers: 5 (Jinja2 templates, guardrails, token budget) 4. **Local LLM runner (Ollama adapter)** \u2014 \u2714 Done * Covers: 6 (Ollama) 5. **Post-processor: managed markers, ToC, markdown lint** \u2014 \u2714 Done * Covers: 7 (markers, ToC, lint) 6. **Git publisher: commit mode (for init only)** \u2014 \u2714 Done * Covers: 8 (commit mode), 1 (`docgen init` end-to-end) \u2705 **Milestone**: `docgen init` generates a clean README for a repo with no docs. ## Phase 2 \u2014 Update-on-change (PR workflow) 1. **Diff detection + change\u2192section mapping + patching inside markers** \u2014 \u2714 Done * Covers: 8 (diff mapping, prevent loops), 1 (`docgen update`) 2. **Git publisher:",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/feature_order.md#1",
      "vector": {
        "readme": 0.09035079029052513,
        "for": 0.045175395145262566,
        "a": 0.09035079029052513,
        "repo": 0.09035079029052513,
        "with": 0.1355261854357877,
        "no": 0.18070158058105026,
        "docs": 0.09035079029052513,
        "phase": 0.22587697572631282,
        "2": 0.22587697572631282,
        "update": 0.18070158058105026,
        "on": 0.045175395145262566,
        "change": 0.09035079029052513,
        "pr": 0.22587697572631282,
        "workflow": 0.045175395145262566,
        "1": 0.22587697572631282,
        "diff": 0.09035079029052513,
        "detection": 0.045175395145262566,
        "section": 0.1355261854357877,
        "mapping": 0.09035079029052513,
        "patching": 0.045175395145262566,
        "inside": 0.045175395145262566,
        "markers": 0.045175395145262566,
        "done": 0.36140316116210053,
        "covers": 0.36140316116210053,
        "8": 0.09035079029052513,
        "prevent": 0.045175395145262566,
        "loops": 0.045175395145262566,
        "docgen": 0.1355261854357877,
        "git": 0.045175395145262566,
        "publisher": 0.045175395145262566,
        "branch": 0.09035079029052513,
        "delta": 0.045175395145262566,
        "summary": 0.045175395145262566,
        "10": 0.09035079029052513,
        "labeling": 0.045175395145262566,
        "later": 0.045175395145262566,
        "milestone": 0.09035079029052513,
        "opens": 0.045175395145262566,
        "updating": 0.045175395145262566,
        "only": 0.09035079029052513,
        "impacted": 0.045175395145262566,
        "sections": 0.045175395145262566,
        "3": 0.045175395145262566,
        "minimal": 0.045175395145262566,
        "rag": 0.09035079029052513,
        "accuracy": 0.045175395145262566,
        "lite": 0.045175395145262566,
        "embed": 0.045175395145262566,
        "top": 0.045175395145262566,
        "n": 0.045175395145262566,
        "source": 0.045175395145262566,
        "headers": 0.045175395145262566,
        "scoped": 0.045175395145262566,
        "retrieval": 0.09035079029052513,
        "4": 0.09035079029052513,
        "local": 0.09035079029052513,
        "embedding": 0.045175395145262566,
        "index": 0.045175395145262566,
        "sources": 0.045175395145262566,
        "per": 0.045175395145262566,
        "hallucination": 0.1355261854357877,
        "command": 0.1355261854357877,
        "existence": 0.045175395145262566,
        "checks": 0.045175395145262566,
        "partial": 0.045175395145262566,
        "validation": 0.09035079029052513,
        "guard": 0.045175395145262566,
        "not": 0.045175395145262566,
        "implemented": 0.045175395145262566,
        "13": 0.045175395145262566,
        "outputs": 0.045175395145262566,
        "grounded": 0.045175395145262566,
        "in": 0.045175395145262566,
        "facts": 0.045175395145262566,
        "targeted": 0.045175395145262566,
        "context": 0.045175395145262566,
        "hardening": 0.045175395145262566,
        "dx": 0.045175395145262566,
        "error": 0.045175395145262566,
        "handling": 0.045175395145262566,
        "clear": 0.045175395145262566,
        "logs": 0.09035079029052513,
        "verbose": 0.045175395145262566,
        "fail": 0.09035079029052513,
        "safe": 0.09035079029052513,
        "stubs": 0.045175395145262566,
        "15": 0.045175395145262566,
        "cli": 0.045175395145262566,
        "ux": 0.045175395145262566,
        "security": 0.045175395145262566,
        "gitignore": 0.045175395145262566,
        "respect": 0.045175395145262566,
        "path": 0.045175395145262566,
        "excludes": 0.09035079029052513,
        "enforcement": 0.045175395145262566,
        "11": 0.045175395145262566,
        "privacy": 0.045175395145262566,
        "5": 0.09035079029052513,
        "ci": 0.045175395145262566,
        "integration": 0.045175395145262566,
        "config": 0.09035079029052513,
        "polish": 0.045175395145262566,
        "github": 0.045175395145262566,
        "actions": 0.09035079029052513,
        "sample": 0.045175395145262566,
        "push": 0.045175395145262566,
        "trigger": 0.045175395145262566,
        "calling": 0.045175395145262566,
        "gh": 0.045175395145262566,
        "refinements": 0.045175395145262566,
        "watched": 0.045175395145262566,
        "globs": 0.045175395145262566,
        "style": 0.09035079029052513,
        "preset": 0.045175395145262566,
        "concise": 0.045175395145262566,
        "comprehensive": 0.045175395145262566,
        "9": 0.045175395145262566,
        "watched_globs": 0.045175395145262566,
        "presets": 0.045175395145262566,
        "6": 0.045175395145262566,
        "multi": 0.045175395145262566,
        "language": 0.045175395145262566,
        "breadth": 0.045175395145262566
      },
      "text": "README for a repo with no docs. ## Phase 2 \u2014 Update-on-change (PR workflow) 1. **Diff detection + change\u2192section mapping + patching inside markers** \u2014 \u2714 Done * Covers: 8 (diff mapping, prevent loops), 1 (`docgen update`) 2. **Git publisher: branch + PR with delta summary** \u2014 \u2714 Done * Covers: 8 (branch/PR), 10 (labeling later) \u2705 **Milestone**: `docgen update` opens a PR updating only impacted sections. ## Phase 3 \u2014 Minimal RAG & accuracy 1. **RAG Lite: embed README/docs/top N source headers; section-scoped retrieval** \u2014 \u2714 Done * Covers: 4 (local embedding, index sources, per-section retrieval) 2. **No-hallucination & command existence checks** \u2014 \u25d0 Partial (command validation done; no-hallucination guard not implemented) * Covers: 13 (command validation, no-hallucination) \u2705 **Milestone**: outputs grounded in repo facts with targeted context. ## Phase 4 \u2014 Hardening & DX 1. **Error handling, clear logs, `--verbose`, fail-safe stubs** \u2014 \u2714 Done * Covers: 15 (fail-safe, logs, CLI UX) 2. **Security: .gitignore respect, path excludes, local-only enforcement** \u2014 \u2714 Done * Covers: 11 (privacy, excludes) ## Phase 5 \u2014 CI integration & config polish 1. **GitHub Actions sample (push/PR trigger calling `docgen update`)** \u2014 \u2714 Done * Covers: 10 (GH Actions) 2. **Config refinements: watched globs, style preset (concise/comprehensive)** \u2014 \u2714 Done * Covers: 9 (watched_globs), 5 (style presets) ## Phase 6 \u2014 Multi-language breadth",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/feature_order.md#2",
      "vector": {
        "github": 0.046274481338274755,
        "actions": 0.09254896267654951,
        "sample": 0.046274481338274755,
        "push": 0.046274481338274755,
        "pr": 0.18509792535309902,
        "trigger": 0.046274481338274755,
        "calling": 0.046274481338274755,
        "docgen": 0.13882344401482424,
        "update": 0.046274481338274755,
        "done": 0.32392136936792326,
        "covers": 0.41647033204447276,
        "10": 0.09254896267654951,
        "gh": 0.046274481338274755,
        "2": 0.23137240669137377,
        "config": 0.09254896267654951,
        "refinements": 0.046274481338274755,
        "watched": 0.046274481338274755,
        "globs": 0.046274481338274755,
        "style": 0.09254896267654951,
        "preset": 0.046274481338274755,
        "concise": 0.046274481338274755,
        "comprehensive": 0.046274481338274755,
        "9": 0.046274481338274755,
        "watched_globs": 0.046274481338274755,
        "5": 0.09254896267654951,
        "presets": 0.046274481338274755,
        "phase": 0.13882344401482424,
        "6": 0.09254896267654951,
        "multi": 0.046274481338274755,
        "language": 0.046274481338274755,
        "breadth": 0.046274481338274755,
        "framework": 0.13882344401482424,
        "smarts": 0.046274481338274755,
        "1": 0.23137240669137377,
        "entrypoint": 0.046274481338274755,
        "detection": 0.046274481338274755,
        "main": 0.046274481338274755,
        "spring": 0.046274481338274755,
        "boot": 0.046274481338274755,
        "fastapi": 0.09254896267654951,
        "aware": 0.09254896267654951,
        "quick": 0.046274481338274755,
        "start": 0.046274481338274755,
        "entrypoints": 0.046274481338274755,
        "12": 0.046274481338274755,
        "commands": 0.046274481338274755,
        "pattern": 0.09254896267654951,
        "analyzers": 0.09254896267654951,
        "docker": 0.046274481338274755,
        "k8s": 0.046274481338274755,
        "ci": 0.046274481338274755,
        "monorepo": 0.046274481338274755,
        "layout": 0.046274481338274755,
        "3": 0.13882344401482424,
        "7": 0.13882344401482424,
        "quality": 0.046274481338274755,
        "gates": 0.046274481338274755,
        "performance": 0.046274481338274755,
        "readme": 0.09254896267654951,
        "scorecard": 0.13882344401482424,
        "link": 0.09254896267654951,
        "validator": 0.09254896267654951,
        "badges": 0.09254896267654951,
        "13": 0.046274481338274755,
        "artifact": 0.09254896267654951,
        "embedding": 0.046274481338274755,
        "caching": 0.046274481338274755,
        "in": 0.046274481338274755,
        "incremental": 0.09254896267654951,
        "rag": 0.09254896267654951,
        "refresh": 0.09254896267654951,
        "partial": 0.046274481338274755,
        "embeddings": 0.046274481338274755,
        "cached": 0.046274481338274755,
        "no": 0.046274481338274755,
        "analyzer": 0.046274481338274755,
        "store": 0.046274481338274755,
        "14": 0.046274481338274755,
        "persist": 0.046274481338274755,
        "outputs": 0.046274481338274755,
        "8": 0.046274481338274755,
        "nice": 0.046274481338274755,
        "to": 0.09254896267654951,
        "have": 0.046274481338274755,
        "stretch": 0.046274481338274755,
        "dry": 0.09254896267654951,
        "run": 0.09254896267654951,
        "mode": 0.13882344401482424,
        "labeling": 0.09254896267654951,
        "updates": 0.09254896267654951,
        "commit": 0.046274481338274755,
        "policy": 0.046274481338274755,
        "tuning": 0.046274481338274755,
        "template": 0.13882344401482424,
        "overrides": 0.046274481338274755,
        "docs": 0.046274481338274755,
        "templates": 0.046274481338274755,
        "j2": 0.046274481338274755,
        "org": 0.046274481338274755,
        "packs": 0.09254896267654951,
        "override": 0.046274481338274755,
        "16": 0.046274481338274755,
        "service": 0.09254896267654951,
        "llama": 0.09254896267654951,
        "cpp": 0.09254896267654951,
        "adapter": 0.046274481338274755,
        "tree": 0.09254896267654951,
        "sitter": 0.09254896267654951,
        "extraction": 0.046274481338274755,
        "not": 0.046274481338274755,
        "started": 0.046274481338274755,
        "why": 0.046274481338274755,
        "this": 0.046274481338274755,
        "order": 0.046274481338274755,
        "fastest": 0.046274481338274755,
        "path": 0.046274481338274755,
        "value": 0.046274481338274755,
        "get": 0.046274481338274755,
        "init": 0.046274481338274755,
        "producing": 0.046274481338274755,
        "a": 0.046274481338274755,
        "solid": 0.046274481338274755,
        "before": 0.046274481338274755,
        "adding": 0.046274481338274755,
        "diffing": 0.046274481338274755
      },
      "text": "**GitHub Actions sample (push/PR trigger calling `docgen update`)** \u2014 \u2714 Done * Covers: 10 (GH Actions) 2. **Config refinements: watched globs, style preset (concise/comprehensive)** \u2014 \u2714 Done * Covers: 9 (watched_globs), 5 (style presets) ## Phase 6 \u2014 Multi-language breadth & framework smarts 1. **Entrypoint detection (main, Spring Boot, FastAPI) + framework-aware Quick Start** \u2014 \u2714 Done * Covers: 2 (entrypoints), 12 (framework-aware commands) 2. **Pattern analyzers (Docker/K8s, CI config, monorepo layout)** \u2014 \u2714 Done * Covers: 3 (pattern analyzers) ## Phase 7 \u2014 Quality gates & performance 1. **README scorecard + link validator + badges** \u2014 \u2714 Done * Covers: 13 (scorecard), 7 (link validator), 7 (badges) 2. **Artifact & embedding caching in `.docgen/` + incremental RAG refresh** \u2014 \u25d0 Partial (embeddings/scorecard cached; no analyzer artifact store) * Covers: 14 (persist outputs, incremental refresh) ## Phase 8 \u2014 \"Nice to have\" & stretch 1. **Dry-run mode, PR labeling/updates, commit/PR policy tuning** \u2014 \u2714 Done * Covers: 1 (dry-run), 10 (labeling/PR updates) 2. **Template overrides (`docs/templates/*.j2`) & org template packs** \u2014 \u2714 Done * Covers: 5 (override), 16 (template packs) 3. **Service mode (FastAPI), llama.cpp adapter, tree-sitter extraction** \u2014 \u2610 Not started * Covers: 1 (service mode), 6 (llama.cpp), 3 (tree-sitter) ## Why this order * **Fastest path to value**: get `docgen init` producing a solid README before adding diffing/RAG.",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/feature_order.md#3",
      "vector": {
        "3": 0.18333969940564226,
        "service": 0.18333969940564226,
        "mode": 0.18333969940564226,
        "fastapi": 0.09166984970282113,
        "llama": 0.18333969940564226,
        "cpp": 0.18333969940564226,
        "adapter": 0.09166984970282113,
        "tree": 0.18333969940564226,
        "sitter": 0.18333969940564226,
        "extraction": 0.09166984970282113,
        "not": 0.09166984970282113,
        "started": 0.09166984970282113,
        "covers": 0.09166984970282113,
        "1": 0.09166984970282113,
        "6": 0.09166984970282113,
        "why": 0.09166984970282113,
        "this": 0.09166984970282113,
        "order": 0.09166984970282113,
        "fastest": 0.09166984970282113,
        "path": 0.09166984970282113,
        "to": 0.18333969940564226,
        "value": 0.09166984970282113,
        "get": 0.09166984970282113,
        "docgen": 0.09166984970282113,
        "init": 0.09166984970282113,
        "producing": 0.09166984970282113,
        "a": 0.09166984970282113,
        "solid": 0.09166984970282113,
        "readme": 0.09166984970282113,
        "before": 0.09166984970282113,
        "adding": 0.09166984970282113,
        "diffing": 0.09166984970282113,
        "rag": 0.18333969940564226,
        "contain": 0.09166984970282113,
        "risk": 0.09166984970282113,
        "early": 0.09166984970282113,
        "section": 0.09166984970282113,
        "markers": 0.09166984970282113,
        "lint": 0.09166984970282113,
        "and": 0.2750095491084634,
        "commit": 0.09166984970282113,
        "publishing": 0.09166984970282113,
        "ensure": 0.09166984970282113,
        "safe": 0.09166984970282113,
        "idempotent": 0.09166984970282113,
        "edits": 0.09166984970282113,
        "accuracy": 0.09166984970282113,
        "next": 0.09166984970282113,
        "add": 0.09166984970282113,
        "validation": 0.09166984970282113,
        "avoid": 0.09166984970282113,
        "hallucinations": 0.09166984970282113,
        "once": 0.09166984970282113,
        "the": 0.18333969940564226,
        "pipeline": 0.09166984970282113,
        "works": 0.09166984970282113,
        "scale": 0.09166984970282113,
        "breadth": 0.09166984970282113,
        "later": 0.09166984970282113,
        "only": 0.09166984970282113,
        "after": 0.09166984970282113,
        "core": 0.09166984970282113,
        "loop": 0.09166984970282113,
        "is": 0.09166984970282113,
        "robust": 0.09166984970282113,
        "do": 0.09166984970282113,
        "we": 0.09166984970282113,
        "widen": 0.09166984970282113,
        "language": 0.09166984970282113,
        "framework": 0.09166984970282113,
        "coverage": 0.09166984970282113,
        "polish": 0.09166984970282113,
        "last": 0.09166984970282113,
        "ci": 0.09166984970282113,
        "caching": 0.09166984970282113,
        "quality": 0.09166984970282113,
        "gates": 0.09166984970282113,
        "refine": 0.09166984970282113,
        "dev": 0.09166984970282113,
        "experience": 0.09166984970282113,
        "performance": 0.09166984970282113
      },
      "text": "3. **Service mode (FastAPI), llama.cpp adapter, tree-sitter extraction** \u2014 \u2610 Not started * Covers: 1 (service mode), 6 (llama.cpp), 3 (tree-sitter) ## Why this order * **Fastest path to value**: get `docgen init` producing a solid README before adding diffing/RAG. * **Contain risk early**: section markers, lint, and commit publishing ensure safe/idempotent edits. * **Accuracy next**: add RAG + validation to avoid hallucinations once the pipeline works. * **Scale breadth later**: only after the core loop is robust do we widen language/framework coverage. * **Polish last**: CI, caching, and quality gates refine dev experience and performance.",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/jira_stories.md#0",
      "vector": {
        "docgen": 0.15037641213512565,
        "jira": 0.05012547071170855,
        "stories": 0.1002509414234171,
        "remaining": 0.05012547071170855,
        "are": 0.1002509414234171,
        "ordered": 0.05012547071170855,
        "by": 0.1002509414234171,
        "the": 0.25062735355854276,
        "recommended": 0.05012547071170855,
        "completion": 0.05012547071170855,
        "sequence": 0.05012547071170855,
        "and": 0.3508782949819598,
        "formatted": 0.05012547071170855,
        "per": 0.05012547071170855,
        "prompt": 0.05012547071170855,
        "template": 0.05012547071170855,
        "guidance": 0.05012547071170855,
        "all": 0.05012547071170855,
        "prior": 0.05012547071170855,
        "milestones": 0.05012547071170855,
        "complete": 0.05012547071170855,
        "only": 0.05012547071170855,
        "work": 0.05012547071170855,
        "listed": 0.05012547071170855,
        "below": 0.05012547071170855,
        "remains": 0.05012547071170855,
        "story": 0.1002509414234171,
        "s": 0.15037641213512565,
        "032": 0.05012547071170855,
        "no": 0.05012547071170855,
        "hallucination": 0.05012547071170855,
        "validation": 0.15037641213512565,
        "status": 0.05012547071170855,
        "done": 0.05012547071170855,
        "text": 0.05012547071170855,
        "introduce": 0.05012547071170855,
        "a": 0.3508782949819598,
        "layer": 0.05012547071170855,
        "that": 0.1002509414234171,
        "rejects": 0.05012547071170855,
        "readme": 0.05012547071170855,
        "content": 0.15037641213512565,
        "containing": 0.05012547071170855,
        "facts": 0.05012547071170855,
        "not": 0.05012547071170855,
        "backed": 0.05012547071170855,
        "analyzer": 0.1002509414234171,
        "signals": 0.15037641213512565,
        "or": 0.2005018828468342,
        "rag": 0.1002509414234171,
        "context": 0.1002509414234171,
        "surfacing": 0.05012547071170855,
        "actionable": 0.05012547071170855,
        "errors": 0.05012547071170855,
        "to": 0.05012547071170855,
        "users": 0.05012547071170855,
        "dependencies": 0.05012547071170855,
        "already": 0.05012547071170855,
        "completed": 0.05012547071170855,
        "031": 0.05012547071170855,
        "guardrailed": 0.05012547071170855,
        "execution": 0.05012547071170855,
        "011": 0.05012547071170855,
        "contexts": 0.05012547071170855,
        "constraints": 0.05012547071170855,
        "must": 0.05012547071170855,
        "run": 0.05012547071170855,
        "after": 0.1002509414234171,
        "section": 0.1002509414234171,
        "rendering": 0.1002509414234171,
        "but": 0.05012547071170855,
        "before": 0.1002509414234171,
        "writing": 0.05012547071170855,
        "files": 0.05012547071170855,
        "publishing": 0.05012547071170855,
        "prs": 0.05012547071170855,
        "provide": 0.05012547071170855,
        "clear": 0.05012547071170855,
        "remediation": 0.05012547071170855,
        "logs": 0.1002509414234171,
        "referencing": 0.05012547071170855,
        "missing": 0.1002509414234171,
        "affected": 0.05012547071170855,
        "sections": 0.1002509414234171,
        "allow": 0.05012547071170855,
        "an": 0.05012547071170855,
        "opt": 0.05012547071170855,
        "out": 0.05012547071170855,
        "toggle": 0.05012547071170855,
        "in": 0.05012547071170855,
        "yml": 0.05012547071170855,
        "for": 0.05012547071170855,
        "edge": 0.05012547071170855,
        "cases": 0.05012547071170855,
        "non": 0.05012547071170855,
        "goals": 0.05012547071170855,
        "external": 0.05012547071170855,
        "api": 0.05012547071170855,
        "calls": 0.05012547071170855,
        "complex": 0.05012547071170855,
        "semantic": 0.05012547071170855,
        "similarity": 0.05012547071170855,
        "checks": 0.05012547071170855,
        "acceptance": 0.1002509414234171,
        "criteria": 0.05012547071170855,
        "validator": 0.1002509414234171,
        "cross": 0.05012547071170855,
        "references": 0.05012547071170855,
        "generated": 0.05012547071170855,
        "claims": 0.05012547071170855,
        "against": 0.05012547071170855,
        "available": 0.05012547071170855,
        "disallowed": 0.05012547071170855,
        "triggers": 0.05012547071170855,
        "failure": 0.05012547071170855,
        "path": 0.05012547071170855,
        "with": 0.1002509414234171,
        "stub": 0.05012547071170855,
        "fallback": 0.05012547071170855,
        "unit": 0.05012547071170855,
        "tests": 0.05012547071170855,
        "cover": 0.05012547071170855,
        "of": 0.1002509414234171,
        "grounded": 0.05012547071170855,
        "rejection": 0.05012547071170855,
        "injected": 0.05012547071170855,
        "hallucinations": 0.05012547071170855,
        "cli": 0.05012547071170855,
        "surfaces": 0.05012547071170855,
        "concise": 0.05012547071170855,
        "error": 0.05012547071170855,
        "messages": 0.05012547071170855,
        "verbose": 0.05012547071170855,
        "list": 0.05012547071170855,
        "offending": 0.05012547071170855,
        "evidence": 0.05012547071170855,
        "implementation": 0.1002509414234171,
        "plan": 0.05012547071170855,
        "create": 0.05012547071170855,
        "dedicated": 0.05012547071170855,
        "validators": 0.1002509414234171,
        "package": 0.05012547071170855,
        "lightweight": 0.05012547071170855,
        "validationissue": 0.05012547071170855,
        "dataclass": 0.05012547071170855,
        "protocol": 0.05012547071170855,
        "nohallucinationvalidator": 0.05012547071170855,
        "concrete": 0.05012547071170855,
        "orchestrator": 0.05012547071170855,
        "registers": 0.05012547071170855,
        "executes": 0.05012547071170855,
        "them": 0.05012547071170855,
        "post": 0.05012547071170855,
        "processing": 0.05012547071170855,
        "io": 0.05012547071170855,
        "add": 0.05012547071170855,
        "shared": 0.05012547071170855,
        "evidenceindex": 0.05012547071170855,
        "builder": 0.05012547071170855,
        "normalizes": 0.05012547071170855
      },
      "text": "# DocGen Jira Stories (Remaining) > Stories are ordered by the recommended completion sequence and formatted per the prompt template guidance. All prior milestones are complete; only the work listed below remains. --- ## Story S-032 \u2014 No-Hallucination Validation - **Status:** \u2714 Done - **Story Text:** Introduce a validation layer that rejects README content containing facts not backed by analyzer signals or RAG context, surfacing actionable errors to users. - **Dependencies already completed:** S-031 (guardrailed execution), S-011 (RAG contexts) - **Constraints:** - Validation must run after section rendering but before writing files or publishing PRs. - Provide clear remediation logs referencing the missing signals and affected sections. - Allow an opt-out toggle in `.docgen.yml` for edge cases. - **Non-Goals:** External API calls or complex semantic similarity checks. - **Acceptance Criteria:** - Validator cross-references generated claims against available signals/context; disallowed content triggers a failure path with stub fallback. - Unit tests cover acceptance of grounded content and rejection of injected hallucinations. - CLI surfaces concise error messages and `--verbose` logs list offending sections and missing evidence. - **Implementation Plan:** - Create a dedicated `docgen.validators` package with a lightweight `ValidationIssue` dataclass, a `Validator` protocol, and a `NoHallucinationValidator` concrete implementation. The orchestrator registers validators after section rendering and executes them before post-processing or IO. - Add a shared `EvidenceIndex` builder that normalizes analyzer",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#1",
      "vector": {
        "a": 0.37435064886346636,
        "dedicated": 0.04159451654038515,
        "docgen": 0.12478354962115545,
        "validators": 0.12478354962115545,
        "package": 0.04159451654038515,
        "with": 0.2495670992423109,
        "lightweight": 0.04159451654038515,
        "validationissue": 0.04159451654038515,
        "dataclass": 0.04159451654038515,
        "validator": 0.04159451654038515,
        "protocol": 0.04159451654038515,
        "and": 0.29116161578269606,
        "nohallucinationvalidator": 0.04159451654038515,
        "concrete": 0.04159451654038515,
        "implementation": 0.04159451654038515,
        "the": 0.4991341984846218,
        "orchestrator": 0.04159451654038515,
        "registers": 0.04159451654038515,
        "after": 0.04159451654038515,
        "section": 0.0831890330807703,
        "rendering": 0.04159451654038515,
        "executes": 0.04159451654038515,
        "them": 0.04159451654038515,
        "before": 0.04159451654038515,
        "post": 0.04159451654038515,
        "processing": 0.04159451654038515,
        "or": 0.04159451654038515,
        "io": 0.04159451654038515,
        "add": 0.0831890330807703,
        "shared": 0.04159451654038515,
        "evidenceindex": 0.04159451654038515,
        "builder": 0.0831890330807703,
        "that": 0.12478354962115545,
        "normalizes": 0.04159451654038515,
        "analyzer": 0.04159451654038515,
        "signals": 0.0831890330807703,
        "names": 0.04159451654038515,
        "kinds": 0.04159451654038515,
        "key": 0.04159451654038515,
        "attributes": 0.04159451654038515,
        "retrieved": 0.04159451654038515,
        "rag": 0.04159451654038515,
        "chunks": 0.04159451654038515,
        "path": 0.04159451654038515,
        "heading": 0.04159451654038515,
        "snippet": 0.04159451654038515,
        "persist": 0.04159451654038515,
        "normalized": 0.0831890330807703,
        "evidence": 0.0831890330807703,
        "in": 0.0831890330807703,
        "run": 0.04159451654038515,
        "context": 0.04159451654038515,
        "so": 0.04159451654038515,
        "verbose": 0.04159451654038515,
        "logging": 0.04159451654038515,
        "receive": 0.04159451654038515,
        "same": 0.04159451654038515,
        "data": 0.04159451654038515,
        "extend": 0.04159451654038515,
        "prompt": 0.04159451654038515,
        "to": 0.20797258270192576,
        "annotate": 0.04159451654038515,
        "each": 0.0831890330807703,
        "render": 0.04159451654038515,
        "sectionevidence": 0.04159451654038515,
        "metadata": 0.0831890330807703,
        "describing": 0.04159451654038515,
        "which": 0.04159451654038515,
        "chunk": 0.04159451654038515,
        "ids": 0.04159451654038515,
        "were": 0.04159451654038515,
        "injected": 0.04159451654038515,
        "this": 0.04159451654038515,
        "is": 0.04159451654038515,
        "stored": 0.04159451654038515,
        "alongside": 0.04159451654038515,
        "rendered": 0.0831890330807703,
        "markdown": 0.04159451654038515,
        "avoid": 0.04159451654038515,
        "re": 0.04159451654038515,
        "parsing": 0.04159451654038515,
        "prompts": 0.04159451654038515,
        "implement": 0.04159451654038515,
        "lexical": 0.04159451654038515,
        "matching": 0.04159451654038515,
        "heuristics": 0.04159451654038515,
        "split": 0.04159451654038515,
        "sections": 0.0831890330807703,
        "into": 0.04159451654038515,
        "sentences": 0.0831890330807703,
        "ignore": 0.04159451654038515,
        "boilerplate": 0.04159451654038515,
        "phrases": 0.04159451654038515,
        "require": 0.04159451654038515,
        "remaining": 0.04159451654038515,
        "sentence": 0.04159451654038515,
        "introduces": 0.04159451654038515,
        "facts": 0.04159451654038515,
        "numbers": 0.04159451654038515,
        "detected": 0.0831890330807703,
        "entities": 0.04159451654038515,
        "verbs": 0.04159451654038515,
        "direct": 0.04159451654038515,
        "objects": 0.04159451654038515,
        "have": 0.04159451654038515,
        "at": 0.04159451654038515,
        "least": 0.04159451654038515,
        "one": 0.04159451654038515,
        "overlapping": 0.04159451654038515,
        "n": 0.04159451654038515,
        "gram": 0.04159451654038515,
        "len": 0.04159451654038515,
        "3": 0.04159451654038515,
        "flag": 0.0831890330807703,
        "unmatched": 0.04159451654038515,
        "as": 0.04159451654038515,
        "hallucinations": 0.0831890330807703,
        "when": 0.04159451654038515,
        "are": 0.04159451654038515,
        "short": 0.04159451654038515,
        "circuit": 0.04159451654038515,
        "pipeline": 0.04159451654038515,
        "emit": 0.04159451654038515,
        "fail": 0.04159451654038515,
        "safe": 0.04159451654038515,
        "stubs": 0.04159451654038515,
        "for": 0.12478354962115545,
        "offending": 0.04159451654038515,
        "reuse": 0.04159451654038515,
        "existing": 0.04159451654038515,
        "stub": 0.04159451654038515,
        "generator": 0.04159451654038515,
        "bubble": 0.04159451654038515,
        "validationerror": 0.04159451654038515,
        "back": 0.04159451654038515,
        "cli": 0.0831890330807703,
        "actionable": 0.04159451654038515,
        "hints": 0.04159451654038515,
        "yml": 0.04159451654038515,
        "updates": 0.04159451654038515,
        "introduce": 0.04159451654038515,
        "validation": 0.0831890330807703,
        "map": 0.04159451654038515,
        "no_hallucination": 0.04159451654038515,
        "boolean": 0.04159451654038515,
        "default": 0.04159451654038515,
        "true": 0.04159451654038515,
        "respect": 0.04159451654038515,
        "repo": 0.04159451654038515,
        "level": 0.04159451654038515,
        "overrides": 0.04159451654038515,
        "while": 0.04159451654038515,
        "allowing": 0.04159451654038515,
        "docgen_validation_no_hallucination": 0.04159451654038515,
        "false": 0.04159451654038515,
        "disable": 0.04159451654038515,
        "check": 0.04159451654038515,
        "ci": 0.04159451654038515,
        "emergencies": 0.04159451654038515,
        "skip": 0.04159451654038515,
        "init": 0.04159451654038515,
        "update": 0.04159451654038515,
        "regenerate": 0.04159451654038515,
        "flips": 0.04159451654038515,
        "toggle": 0.04159451654038515
      },
      "text": "a dedicated `docgen.validators` package with a lightweight `ValidationIssue` dataclass, a `Validator` protocol, and a `NoHallucinationValidator` concrete implementation. The orchestrator registers validators after section rendering and executes them before post-processing or IO. - Add a shared `EvidenceIndex` builder that normalizes analyzer signals (names, kinds, key attributes) and retrieved RAG chunks (path, heading, snippet). Persist the normalized evidence in the run context so validators and verbose logging receive the same data. - Extend the prompt builder to annotate each section render with `SectionEvidence` metadata describing which signals and chunk IDs were injected. This metadata is stored alongside the rendered markdown to avoid re-parsing prompts. - Implement lexical matching heuristics: split rendered sections into sentences, ignore boilerplate phrases, and require each remaining sentence that introduces facts (numbers, detected entities, verbs with direct objects) to have at least one overlapping n-gram (len \u22653) with the normalized evidence. Flag unmatched sentences as hallucinations. - When hallucinations are detected, short-circuit the pipeline, emit fail-safe stubs for the offending sections (reuse existing stub generator), and bubble a `ValidationError` back to the CLI with actionable hints. - **`.docgen.yml` & CLI Updates:** - Introduce a `validation` map with a `no_hallucination` boolean (default `true`). Respect repo-level overrides while allowing `DOCGEN_VALIDATION_NO_HALLUCINATION=false` to disable the check in CI emergencies. - Add a `--skip-validation` flag for `docgen init|update|regenerate` that flips the toggle for",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#2",
      "vector": {
        "cli": 0.18856180831641267,
        "updates": 0.04714045207910317,
        "introduce": 0.04714045207910317,
        "a": 0.23570226039551584,
        "validation": 0.23570226039551584,
        "map": 0.04714045207910317,
        "with": 0.09428090415820634,
        "no_hallucination": 0.04714045207910317,
        "boolean": 0.04714045207910317,
        "default": 0.04714045207910317,
        "true": 0.04714045207910317,
        "respect": 0.04714045207910317,
        "repo": 0.09428090415820634,
        "level": 0.04714045207910317,
        "overrides": 0.04714045207910317,
        "while": 0.04714045207910317,
        "allowing": 0.04714045207910317,
        "docgen_validation_no_hallucination": 0.04714045207910317,
        "false": 0.04714045207910317,
        "to": 0.1414213562373095,
        "disable": 0.04714045207910317,
        "the": 0.4242640687119285,
        "check": 0.04714045207910317,
        "in": 0.1414213562373095,
        "ci": 0.04714045207910317,
        "emergencies": 0.04714045207910317,
        "add": 0.09428090415820634,
        "skip": 0.04714045207910317,
        "flag": 0.04714045207910317,
        "for": 0.18856180831641267,
        "docgen": 0.09428090415820634,
        "init": 0.04714045207910317,
        "update": 0.04714045207910317,
        "regenerate": 0.04714045207910317,
        "that": 0.1414213562373095,
        "flips": 0.04714045207910317,
        "toggle": 0.04714045207910317,
        "current": 0.04714045207910317,
        "execution": 0.04714045207910317,
        "only": 0.04714045207910317,
        "and": 0.282842712474619,
        "is": 0.04714045207910317,
        "surfaced": 0.04714045207910317,
        "run": 0.09428090415820634,
        "summary": 0.04714045207910317,
        "encourage": 0.04714045207910317,
        "re": 0.04714045207910317,
        "enabling": 0.04714045207910317,
        "logging": 0.09428090415820634,
        "ux": 0.04714045207910317,
        "errors": 0.04714045207910317,
        "show": 0.04714045207910317,
        "one": 0.04714045207910317,
        "line": 0.04714045207910317,
        "summaries": 0.04714045207910317,
        "per": 0.04714045207910317,
        "section": 0.04714045207910317,
        "quickstart": 0.04714045207910317,
        "references": 0.04714045207910317,
        "docker": 0.04714045207910317,
        "compose": 0.04714045207910317,
        "without": 0.09428090415820634,
        "supporting": 0.04714045207910317,
        "analyzer": 0.1414213562373095,
        "signal": 0.04714045207910317,
        "verbose": 0.09428090415820634,
        "prints": 0.04714045207910317,
        "offending": 0.04714045207910317,
        "sentence": 0.04714045207910317,
        "missing": 0.04714045207910317,
        "tokens": 0.04714045207910317,
        "short": 0.04714045207910317,
        "list": 0.04714045207910317,
        "of": 0.04714045207910317,
        "nearby": 0.04714045207910317,
        "evidence": 0.09428090415820634,
        "persist": 0.09428090415820634,
        "json": 0.04714045207910317,
        "report": 0.04714045207910317,
        "under": 0.04714045207910317,
        "capturing": 0.04714045207910317,
        "validator": 0.04714045207910317,
        "status": 0.09428090415820634,
        "issues": 0.04714045207910317,
        "selected": 0.04714045207910317,
        "forensic": 0.04714045207910317,
        "review": 0.04714045207910317,
        "testing": 0.04714045207910317,
        "strategy": 0.04714045207910317,
        "unit": 0.04714045207910317,
        "tests": 0.1414213562373095,
        "cover": 0.04714045207910317,
        "positive": 0.04714045207910317,
        "negative": 0.04714045207910317,
        "cases": 0.09428090415820634,
        "nohallucinationvalidator": 0.04714045207910317,
        "including": 0.04714045207910317,
        "edge": 0.04714045207910317,
        "such": 0.04714045207910317,
        "as": 0.04714045207910317,
        "citations": 0.04714045207910317,
        "using": 0.04714045207910317,
        "synonyms": 0.04714045207910317,
        "or": 0.04714045207910317,
        "pluralization": 0.04714045207910317,
        "bullet": 0.04714045207910317,
        "lists": 0.04714045207910317,
        "code": 0.04714045207910317,
        "blocks": 0.04714045207910317,
        "integration": 0.04714045207910317,
        "full": 0.04714045207910317,
        "on": 0.04714045207910317,
        "synthetic": 0.04714045207910317,
        "repos": 0.04714045207910317,
        "stored": 0.04714045207910317,
        "data": 0.04714045207910317,
        "confirm": 0.04714045207910317,
        "grounded": 0.04714045207910317,
        "readmes": 0.04714045207910317,
        "pass": 0.04714045207910317,
        "tampered": 0.04714045207910317,
        "outputs": 0.09428090415820634,
        "fail": 0.04714045207910317,
        "fast": 0.04714045207910317,
        "stub": 0.04714045207910317,
        "replacements": 0.04714045207910317,
        "regression": 0.04714045207910317,
        "fixtures": 0.04714045207910317,
        "asserting": 0.04714045207910317,
        "disabling": 0.04714045207910317,
        "via": 0.04714045207910317,
        "config": 0.04714045207910317,
        "leaves": 0.04714045207910317,
        "runs": 0.09428090415820634,
        "untouched": 0.04714045207910317,
        "enumerates": 0.04714045207910317,
        "flagged": 0.04714045207910317,
        "sentences": 0.04714045207910317,
        "story": 0.09428090415820634,
        "s": 0.1414213562373095,
        "033": 0.04714045207910317,
        "artifact": 0.04714045207910317,
        "persistence": 0.04714045207910317,
        "done": 0.04714045207910317,
        "text": 0.04714045207910317,
        "alongside": 0.04714045207910317,
        "embeddings": 0.04714045207910317,
        "so": 0.04714045207910317,
        "repeated": 0.04714045207910317,
        "can": 0.04714045207910317,
        "reuse": 0.04714045207910317,
        "structured": 0.04714045207910317,
        "signals": 0.04714045207910317,
        "reprocessing": 0.04714045207910317,
        "unchanged": 0.04714045207910317,
        "files": 0.04714045207910317,
        "dependencies": 0.04714045207910317,
        "already": 0.04714045207910317,
        "completed": 0.04714045207910317,
        "003": 0.04714045207910317,
        "scanner": 0.04714045207910317,
        "020": 0.04714045207910317,
        "embedding": 0.04714045207910317,
        "cache": 0.04714045207910317
      },
      "text": "& CLI Updates:** - Introduce a `validation` map with a `no_hallucination` boolean (default `true`). Respect repo-level overrides while allowing `DOCGEN_VALIDATION_NO_HALLUCINATION=false` to disable the check in CI emergencies. - Add a `--skip-validation` flag for `docgen init|update|regenerate` that flips the toggle for the current execution only and is surfaced in the run summary to encourage re-enabling. - **Logging & UX:** - CLI errors show one-line summaries per section (`quickstart: references docker compose without supporting analyzer signal`). `--verbose` prints the offending sentence, the missing tokens, and a short list of nearby evidence. - Persist a `validation.json` report under `.docgen/` capturing the validator status, issues, and selected evidence for forensic review. - **Testing Strategy:** - Unit tests cover positive/negative cases for the `NoHallucinationValidator`, including edge cases such as citations using synonyms or pluralization, bullet lists, and code blocks. - Integration tests run the full CLI on synthetic repos stored in `tests/data/validation/` to confirm grounded READMEs pass and tampered outputs fail fast with stub replacements. - Add regression fixtures asserting that disabling validation via config/CLI leaves runs untouched and that verbose logging enumerates flagged sentences. ## Story S-033 \u2014 Analyzer Artifact Persistence - **Status:** \u2714 Done - **Story Text:** Persist analyzer outputs alongside embeddings so repeated runs can reuse structured signals without reprocessing unchanged files. - **Dependencies already completed:** S-003 (Repo scanner), S-020 (embedding cache",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#3",
      "vector": {
        "story": 0.19975046777556893,
        "s": 0.2996257016633534,
        "033": 0.04993761694389223,
        "analyzer": 0.19975046777556893,
        "artifact": 0.09987523388778446,
        "persistence": 0.04993761694389223,
        "status": 0.09987523388778446,
        "done": 0.09987523388778446,
        "text": 0.09987523388778446,
        "persist": 0.04993761694389223,
        "outputs": 0.09987523388778446,
        "alongside": 0.04993761694389223,
        "embeddings": 0.04993761694389223,
        "so": 0.04993761694389223,
        "repeated": 0.04993761694389223,
        "runs": 0.09987523388778446,
        "can": 0.04993761694389223,
        "reuse": 0.04993761694389223,
        "structured": 0.04993761694389223,
        "signals": 0.09987523388778446,
        "without": 0.04993761694389223,
        "reprocessing": 0.04993761694389223,
        "unchanged": 0.09987523388778446,
        "files": 0.09987523388778446,
        "dependencies": 0.09987523388778446,
        "already": 0.09987523388778446,
        "completed": 0.09987523388778446,
        "003": 0.04993761694389223,
        "repo": 0.09987523388778446,
        "scanner": 0.04993761694389223,
        "020": 0.04993761694389223,
        "embedding": 0.04993761694389223,
        "cache": 0.09987523388778446,
        "groundwork": 0.09987523388778446,
        "constraints": 0.09987523388778446,
        "store": 0.04993761694389223,
        "artifacts": 0.04993761694389223,
        "under": 0.04993761694389223,
        "docgen": 0.04993761694389223,
        "with": 0.1498128508316767,
        "versioning": 0.04993761694389223,
        "to": 0.19975046777556893,
        "handle": 0.04993761694389223,
        "schema": 0.04993761694389223,
        "changes": 0.04993761694389223,
        "refresh": 0.04993761694389223,
        "results": 0.04993761694389223,
        "incrementally": 0.04993761694389223,
        "based": 0.09987523388778446,
        "on": 0.04993761694389223,
        "file": 0.04993761694389223,
        "hashes": 0.04993761694389223,
        "and": 0.2996257016633534,
        "invalidate": 0.04993761694389223,
        "when": 0.19975046777556893,
        "analyzers": 0.04993761694389223,
        "change": 0.04993761694389223,
        "keep": 0.04993761694389223,
        "storage": 0.04993761694389223,
        "format": 0.04993761694389223,
        "json": 0.04993761694389223,
        "serializable": 0.04993761694389223,
        "human": 0.04993761694389223,
        "auditable": 0.04993761694389223,
        "non": 0.09987523388778446,
        "goals": 0.1498128508316767,
        "remote": 0.04993761694389223,
        "backends": 0.04993761694389223,
        "or": 0.04993761694389223,
        "cross": 0.04993761694389223,
        "sharing": 0.04993761694389223,
        "acceptance": 0.04993761694389223,
        "criteria": 0.04993761694389223,
        "saved": 0.04993761694389223,
        "reloaded": 0.04993761694389223,
        "during": 0.04993761694389223,
        "orchestrator": 0.04993761694389223,
        "skipping": 0.04993761694389223,
        "recomputation": 0.04993761694389223,
        "inputs": 0.04993761694389223,
        "integration": 0.09987523388778446,
        "tests": 0.04993761694389223,
        "demonstrate": 0.04993761694389223,
        "speed": 0.04993761694389223,
        "up": 0.04993761694389223,
        "by": 0.09987523388778446,
        "reusing": 0.04993761694389223,
        "cached": 0.04993761694389223,
        "correct": 0.04993761694389223,
        "invalidation": 0.04993761694389223,
        "mutate": 0.04993761694389223,
        "documentation": 0.04993761694389223,
        "in": 0.04993761694389223,
        "spec": 0.09987523388778446,
        "md": 0.04993761694389223,
        "updated": 0.04993761694389223,
        "reflect": 0.04993761694389223,
        "caching": 0.04993761694389223,
        "behavior": 0.04993761694389223,
        "034": 0.04993761694389223,
        "service": 0.1498128508316767,
        "mode": 0.09987523388778446,
        "extended": 0.04993761694389223,
        "runtimes": 0.04993761694389223,
        "deliver": 0.04993761694389223,
        "fastapi": 0.09987523388778446,
        "llama": 0.09987523388778446,
        "cpp": 0.09987523388778446,
        "runtime": 0.04993761694389223,
        "adapter": 0.09987523388778446,
        "tree": 0.09987523388778446,
        "sitter": 0.09987523388778446,
        "powered": 0.04993761694389223,
        "symbol": 0.04993761694389223,
        "extraction": 0.04993761694389223,
        "round": 0.04993761694389223,
        "out": 0.04993761694389223,
        "stretch": 0.04993761694389223,
        "010": 0.04993761694389223,
        "git": 0.04993761694389223,
        "publishing": 0.04993761694389223,
        "infrastructure": 0.04993761694389223,
        "017": 0.04993761694389223,
        "entrypoint": 0.04993761694389223,
        "detection": 0.04993761694389223,
        "must": 0.04993761694389223,
        "expose": 0.04993761694389223,
        "endpoints": 0.04993761694389223,
        "for": 0.09987523388778446,
        "init": 0.04993761694389223,
        "update": 0.04993761694389223,
        "dry": 0.04993761694389223,
        "run": 0.04993761694389223,
        "authentication": 0.04993761694389223,
        "disabled": 0.04993761694389223,
        "default": 0.04993761694389223,
        "but": 0.04993761694389223,
        "ready": 0.04993761694389223,
        "future": 0.04993761694389223,
        "hardening": 0.04993761694389223,
        "hooks": 0.04993761694389223,
        "should": 0.04993761694389223,
        "mirror": 0.04993761694389223,
        "llmrunner": 0.04993761694389223,
        "interface": 0.04993761694389223,
        "enforce": 0.04993761694389223,
        "local": 0.04993761694389223,
        "execution": 0.04993761694389223,
        "paths": 0.04993761694389223,
        "limited": 0.04993761694389223,
        "supported": 0.04993761694389223,
        "languages": 0.04993761694389223,
        "python": 0.04993761694389223,
        "java": 0.04993761694389223,
        "typescript": 0.04993761694389223,
        "graceful": 0.04993761694389223,
        "degradation": 0.04993761694389223,
        "parsers": 0.04993761694389223,
        "unavailable": 0.04993761694389223,
        "production": 0.04993761694389223
      },
      "text": "## Story S-033 \u2014 Analyzer Artifact Persistence - **Status:** \u2714 Done - **Story Text:** Persist analyzer outputs alongside embeddings so repeated runs can reuse structured signals without reprocessing unchanged files. - **Dependencies already completed:** S-003 (Repo scanner), S-020 (embedding cache groundwork) - **Constraints:** - Store artifacts under `.docgen/` with versioning to handle schema changes. - Refresh analyzer results incrementally based on file hashes and invalidate when analyzers change. - Keep storage format JSON-serializable and human-auditable. - **Non-Goals:** Remote cache backends or cross-repo sharing. - **Acceptance Criteria:** - Analyzer outputs saved and reloaded during orchestrator runs, skipping recomputation when inputs unchanged. - Integration tests demonstrate speed-up by reusing cached signals and correct invalidation when files mutate. - Documentation in `spec/spec.md` updated to reflect artifact caching behavior. ## Story S-034 \u2014 Service Mode & Extended Runtimes - **Status:** \u2714 Done - **Story Text:** Deliver FastAPI-based service mode, llama.cpp runtime adapter, and tree-sitter powered symbol extraction to round out stretch goals. - **Dependencies already completed:** S-010 (Git publishing infrastructure), S-017 (entrypoint detection groundwork) - **Constraints:** - FastAPI service must expose endpoints for init/update/dry-run with authentication disabled by default but ready for future hardening hooks. - llama.cpp adapter should mirror `LLMRunner` interface and enforce local execution paths. - Tree-sitter integration limited to supported languages (Python/Java/TypeScript) with graceful degradation when parsers unavailable. - **Non-Goals:** Production",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#4",
      "vector": {
        "with": 0.21594472522460836,
        "authentication": 0.07198157507486945,
        "disabled": 0.07198157507486945,
        "by": 0.1439631501497389,
        "default": 0.07198157507486945,
        "but": 0.07198157507486945,
        "ready": 0.07198157507486945,
        "for": 0.1439631501497389,
        "future": 0.07198157507486945,
        "hardening": 0.07198157507486945,
        "hooks": 0.07198157507486945,
        "llama": 0.1439631501497389,
        "cpp": 0.1439631501497389,
        "adapter": 0.1439631501497389,
        "should": 0.07198157507486945,
        "mirror": 0.07198157507486945,
        "llmrunner": 0.07198157507486945,
        "interface": 0.07198157507486945,
        "and": 0.4318894504492167,
        "enforce": 0.07198157507486945,
        "local": 0.07198157507486945,
        "execution": 0.07198157507486945,
        "paths": 0.07198157507486945,
        "tree": 0.1439631501497389,
        "sitter": 0.1439631501497389,
        "integration": 0.07198157507486945,
        "limited": 0.07198157507486945,
        "to": 0.1439631501497389,
        "supported": 0.07198157507486945,
        "languages": 0.07198157507486945,
        "python": 0.07198157507486945,
        "java": 0.07198157507486945,
        "typescript": 0.07198157507486945,
        "graceful": 0.07198157507486945,
        "degradation": 0.07198157507486945,
        "when": 0.07198157507486945,
        "parsers": 0.07198157507486945,
        "unavailable": 0.07198157507486945,
        "non": 0.07198157507486945,
        "goals": 0.1439631501497389,
        "production": 0.07198157507486945,
        "deployment": 0.07198157507486945,
        "tooling": 0.07198157507486945,
        "or": 0.07198157507486945,
        "advanced": 0.07198157507486945,
        "queueing": 0.07198157507486945,
        "acceptance": 0.07198157507486945,
        "criteria": 0.07198157507486945,
        "service": 0.1439631501497389,
        "mode": 0.07198157507486945,
        "passes": 0.07198157507486945,
        "end": 0.1439631501497389,
        "tests": 0.21594472522460836,
        "invoking": 0.07198157507486945,
        "fastapi": 0.07198157507486945,
        "routes": 0.07198157507486945,
        "reusing": 0.07198157507486945,
        "orchestrator": 0.07198157507486945,
        "logic": 0.07198157507486945,
        "covered": 0.07198157507486945,
        "unit": 0.07198157507486945,
        "simulating": 0.07198157507486945,
        "cli": 0.07198157507486945,
        "shared": 0.07198157507486945,
        "configuration": 0.07198157507486945,
        "analyzer": 0.07198157507486945,
        "enriches": 0.07198157507486945,
        "signals": 0.07198157507486945,
        "symbol": 0.07198157507486945,
        "metadata": 0.07198157507486945,
        "associated": 0.07198157507486945,
        "validate": 0.07198157507486945,
        "extraction": 0.07198157507486945,
        "on": 0.07198157507486945,
        "fixtures": 0.07198157507486945,
        "updated": 0.07198157507486945,
        "documentation": 0.07198157507486945,
        "usage": 0.07198157507486945,
        "extended": 0.07198157507486945,
        "runtimes": 0.07198157507486945,
        "in": 0.1439631501497389,
        "docs": 0.07198157507486945,
        "spec": 0.1439631501497389,
        "md": 0.07198157507486945,
        "next": 0.07198157507486945,
        "actions": 0.07198157507486945,
        "execute": 0.07198157507486945,
        "the": 0.07198157507486945,
        "stories": 0.07198157507486945,
        "above": 0.07198157507486945,
        "sequentially": 0.07198157507486945,
        "upon": 0.07198157507486945,
        "completion": 0.07198157507486945,
        "reassess": 0.07198157507486945,
        "remaining": 0.07198157507486945,
        "stretch": 0.07198157507486945,
        "knowledge": 0.07198157507486945,
        "graph": 0.07198157507486945,
        "secret": 0.07198157507486945,
        "scanning": 0.07198157507486945,
        "if": 0.07198157507486945,
        "still": 0.07198157507486945,
        "scope": 0.07198157507486945
      },
      "text": "with authentication disabled by default but ready for future hardening hooks. - llama.cpp adapter should mirror `LLMRunner` interface and enforce local execution paths. - Tree-sitter integration limited to supported languages (Python/Java/TypeScript) with graceful degradation when parsers unavailable. - **Non-Goals:** Production deployment tooling or advanced queueing. - **Acceptance Criteria:** - Service mode passes end-to-end tests invoking FastAPI routes and reusing orchestrator logic. - llama.cpp adapter covered by unit tests simulating CLI and shared configuration. - Tree-sitter analyzer enriches signals with symbol metadata and associated tests validate extraction on fixtures. - Updated documentation for service usage and extended runtimes in `docs/` and `spec/spec.md`. --- **Next Actions:** Execute the stories above sequentially; upon completion reassess remaining stretch goals (knowledge graph, secret scanning) if still in scope.",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/prompt_template.md#0",
      "vector": {
        "below": 0.09417632186960222,
        "is": 0.09417632186960222,
        "a": 0.18835264373920443,
        "drop": 0.04708816093480111,
        "in": 0.18835264373920443,
        "prompt": 0.09417632186960222,
        "template": 0.09417632186960222,
        "you": 0.14126448280440332,
        "can": 0.04708816093480111,
        "reuse": 0.04708816093480111,
        "for": 0.18835264373920443,
        "each": 0.04708816093480111,
        "single": 0.09417632186960222,
        "story": 0.5179697702828122,
        "s": 0.18835264373920443,
        "001": 0.09417632186960222,
        "044": 0.04708816093480111,
        "followed": 0.04708816093480111,
        "by": 0.04708816093480111,
        "two": 0.04708816093480111,
        "filled": 0.04708816093480111,
        "examples": 0.04708816093480111,
        "and": 0.18835264373920443,
        "016": 0.04708816093480111,
        "one": 0.04708816093480111,
        "at": 0.09417632186960222,
        "time": 0.04708816093480111,
        "implementation": 0.04708816093480111,
        "use": 0.09417632186960222,
        "this": 0.09417632186960222,
        "exact": 0.04708816093480111,
        "structure": 0.04708816093480111,
        "every": 0.04708816093480111,
        "replace": 0.04708816093480111,
        "placeholders": 0.04708816093480111,
        "with": 0.04708816093480111,
        "your": 0.04708816093480111,
        "specifics": 0.04708816093480111,
        "before": 0.04708816093480111,
        "sending": 0.04708816093480111,
        "system": 0.04708816093480111,
        "role": 0.04708816093480111,
        "are": 0.04708816093480111,
        "principal": 0.04708816093480111,
        "python": 0.14126448280440332,
        "engineer": 0.04708816093480111,
        "implementing": 0.04708816093480111,
        "tightly": 0.04708816093480111,
        "scoped": 0.04708816093480111,
        "an": 0.04708816093480111,
        "existing": 0.04708816093480111,
        "repository": 0.04708816093480111,
        "must": 0.04708816093480111,
        "implement": 0.04708816093480111,
        "only": 0.04708816093480111,
        "the": 0.14126448280440332,
        "no": 0.14126448280440332,
        "scope": 0.04708816093480111,
        "drift": 0.04708816093480111,
        "future": 0.04708816093480111,
        "stories": 0.04708816093480111,
        "produce": 0.04708816093480111,
        "production": 0.04708816093480111,
        "grade": 0.04708816093480111,
        "cross": 0.04708816093480111,
        "platform": 0.04708816093480111,
        "code": 0.09417632186960222,
        "windows": 0.04708816093480111,
        "macos": 0.04708816093480111,
        "3": 0.09417632186960222,
        "11": 0.09417632186960222,
        "follow": 0.04708816093480111,
        "repo": 0.04708816093480111,
        "conventions": 0.04708816093480111,
        "poetry": 0.09417632186960222,
        "ruff": 0.09417632186960222,
        "black": 0.09417632186960222,
        "mypy": 0.09417632186960222,
        "strict": 0.09417632186960222,
        "pytest": 0.14126448280440332,
        "logging": 0.04708816093480111,
        "prints": 0.04708816093480111,
        "library": 0.04708816093480111,
        "type": 0.04708816093480111,
        "hints": 0.04708816093480111,
        "everywhere": 0.04708816093480111,
        "keep": 0.04708816093480111,
        "audio": 0.09417632186960222,
        "callbacks": 0.04708816093480111,
        "non": 0.09417632186960222,
        "blocking": 0.04708816093480111,
        "prefer": 0.04708816093480111,
        "ring": 0.04708816093480111,
        "buffers": 0.04708816093480111,
        "preallocated": 0.04708816093480111,
        "arrays": 0.04708816093480111,
        "avoid": 0.04708816093480111,
        "os": 0.04708816093480111,
        "specific": 0.04708816093480111,
        "imports": 0.04708816093480111,
        "module": 0.04708816093480111,
        "top": 0.04708816093480111,
        "level": 0.04708816093480111,
        "when": 0.04708816093480111,
        "something": 0.04708816093480111,
        "ambiguous": 0.04708816093480111,
        "make": 0.04708816093480111,
        "smallest": 0.04708816093480111,
        "reasonable": 0.04708816093480111,
        "assumption": 0.04708816093480111,
        "state": 0.04708816093480111,
        "it": 0.04708816093480111,
        "assumptions": 0.04708816093480111,
        "section": 0.04708816093480111,
        "proceed": 0.04708816093480111,
        "context": 0.04708816093480111,
        "id": 0.04708816093480111,
        "story_id": 0.04708816093480111,
        "title": 0.04708816093480111,
        "story_title": 0.04708816093480111,
        "text": 0.04708816093480111,
        "story_text": 0.04708816093480111,
        "dependencies": 0.04708816093480111,
        "already": 0.04708816093480111,
        "completed": 0.04708816093480111,
        "dependencies_list_or_none": 0.04708816093480111,
        "constraints": 0.04708816093480111,
        "from": 0.04708816093480111,
        "prd": 0.04708816093480111,
        "backlog": 0.04708816093480111,
        "key_constraints": 0.04708816093480111,
        "goals": 0.04708816093480111,
        "non_goals": 0.04708816093480111,
        "environment": 0.04708816093480111,
        "tooling": 0.04708816093480111,
        "fixed": 0.04708816093480111,
        "package": 0.04708816093480111,
        "manager": 0.04708816093480111,
        "linters": 0.04708816093480111,
        "formatters": 0.04708816093480111,
        "static": 0.04708816093480111,
        "typing": 0.04708816093480111,
        "tests": 0.04708816093480111,
        "cov": 0.04708816093480111,
        "ui": 0.04708816093480111,
        "pyside6": 0.04708816093480111,
        "if": 0.09417632186960222,
        "relevant": 0.09417632186960222,
        "to": 0.04708816093480111,
        "i": 0.04708816093480111,
        "o": 0.04708816093480111,
        "sounddevice": 0.04708816093480111,
        "portaudio": 0.04708816093480111
      },
      "text": "Below is a **drop\u2011in prompt template** you can reuse for **each single story (S\u2011001 \u2192 S\u2011044)**, followed by **two filled examples** (for S\u2011001 and S\u2011016). --- ## \ud83d\udd27 One\u2011Story\u2011At\u2011A\u2011Time Implementation Prompt (Template) > **Use this exact structure for every story.** Replace `{{\u2026}}` placeholders with your specifics before sending. --- **SYSTEM / ROLE** You are a **Principal Python engineer** implementing a single, tightly scoped story in an existing repository. You must: * Implement **only the story below** (no scope drift, no future stories). * Produce production\u2011grade, cross\u2011platform code (Windows/macOS), Python 3.11. * Follow repo conventions: Poetry, ruff, black, mypy (strict), pytest. * Use logging (no prints) in library code, and type hints everywhere. * Keep audio callbacks non\u2011blocking; prefer ring buffers and preallocated arrays. * Avoid OS\u2011specific imports at module top level. * When something is ambiguous, **make the smallest reasonable assumption**, state it in the *Assumptions* section, and proceed. --- ### Story Context * **Story ID:** {{STORY_ID}} * **Story Title:** {{STORY_TITLE}} * **Story Text:** {{STORY_TEXT}} * **Dependencies already completed:** {{DEPENDENCIES_LIST_OR_NONE}} * **Constraints from PRD/backlog:** {{KEY_CONSTRAINTS}} * **Non\u2011Goals for this story:** {{NON_GOALS}} ### Environment & Tooling (fixed) * **Python:** 3.11 * **Package manager:** Poetry * **Linters/formatters:** ruff, black * **Static typing:** mypy (strict) * **Tests:** pytest + pytest\u2011cov * **UI:** PySide6 (if relevant to story) * **Audio I/O:** sounddevice/PortAudio (if relevant)",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#1",
      "vector": {
        "non_goals": 0.05581455721859476,
        "environment": 0.05581455721859476,
        "tooling": 0.05581455721859476,
        "fixed": 0.05581455721859476,
        "python": 0.16744367165578428,
        "3": 0.11162911443718952,
        "11": 0.05581455721859476,
        "package": 0.05581455721859476,
        "manager": 0.05581455721859476,
        "poetry": 0.05581455721859476,
        "linters": 0.05581455721859476,
        "formatters": 0.05581455721859476,
        "ruff": 0.11162911443718952,
        "black": 0.11162911443718952,
        "static": 0.05581455721859476,
        "typing": 0.05581455721859476,
        "mypy": 0.11162911443718952,
        "strict": 0.05581455721859476,
        "tests": 0.11162911443718952,
        "pytest": 0.16744367165578428,
        "cov": 0.05581455721859476,
        "ui": 0.05581455721859476,
        "pyside6": 0.05581455721859476,
        "if": 0.2790727860929738,
        "relevant": 0.2790727860929738,
        "to": 0.16744367165578428,
        "story": 0.05581455721859476,
        "audio": 0.05581455721859476,
        "i": 0.11162911443718952,
        "o": 0.05581455721859476,
        "sounddevice": 0.05581455721859476,
        "portaudio": 0.05581455721859476,
        "ml": 0.05581455721859476,
        "runtime": 0.05581455721859476,
        "onnxruntime": 0.05581455721859476,
        "current": 0.05581455721859476,
        "repository": 0.05581455721859476,
        "snapshot": 0.05581455721859476,
        "paste": 0.11162911443718952,
        "fresh": 0.05581455721859476,
        "snapshots": 0.05581455721859476,
        "so": 0.05581455721859476,
        "the": 0.11162911443718952,
        "model": 0.05581455721859476,
        "does": 0.05581455721859476,
        "not": 0.05581455721859476,
        "hallucinate": 0.05581455721859476,
        "keep": 0.05581455721859476,
        "these": 0.05581455721859476,
        "short": 0.11162911443718952,
        "but": 0.05581455721859476,
        "sufficient": 0.05581455721859476,
        "root": 0.05581455721859476,
        "tree": 0.11162911443718952,
        "a": 0.05581455721859476,
        "git": 0.11162911443718952,
        "or": 0.11162911443718952,
        "ls": 0.05581455721859476,
        "files": 0.22325822887437904,
        "repo_tree": 0.05581455721859476,
        "key": 0.05581455721859476,
        "only": 0.05581455721859476,
        "sections": 0.11162911443718952,
        "path": 0.11162911443718952,
        "file1": 0.05581455721859476,
        "file1_relevant_snippet": 0.05581455721859476,
        "file2": 0.05581455721859476,
        "file2_relevant_snippet": 0.05581455721859476,
        "pinned": 0.05581455721859476,
        "pyproject": 0.05581455721859476,
        "toml": 0.11162911443718952,
        "parts": 0.05581455721859476,
        "pyproject_snippet": 0.05581455721859476,
        "acceptance": 0.05581455721859476,
        "criteria": 0.05581455721859476,
        "definition": 0.05581455721859476,
        "of": 0.16744367165578428,
        "done": 0.05581455721859476,
        "functional": 0.05581455721859476,
        "functional_doc": 0.05581455721859476,
        "quality": 0.05581455721859476,
        "pass": 0.05581455721859476,
        "passes": 0.05581455721859476,
        "with": 0.11162911443718952,
        "90": 0.05581455721859476,
        "coverage": 0.05581455721859476,
        "for": 0.05581455721859476,
        "new": 0.05581455721859476,
        "code": 0.05581455721859476,
        "cross": 0.05581455721859476,
        "platform": 0.05581455721859476,
        "no": 0.11162911443718952,
        "os": 0.05581455721859476,
        "specific": 0.05581455721859476,
        "breakage": 0.05581455721859476,
        "guarded": 0.05581455721859476,
        "imports": 0.05581455721859476,
        "where": 0.05581455721859476,
        "needed": 0.05581455721859476,
        "performance": 0.05581455721859476,
        "applicable": 0.05581455721859476,
        "perf_requirements": 0.05581455721859476,
        "docs": 0.11162911443718952,
        "inline": 0.05581455721859476,
        "docstrings": 0.05581455721859476,
        "readme": 0.05581455721859476,
        "module": 0.05581455721859476,
        "level": 0.05581455721859476,
        "updated": 0.05581455721859476,
        "user": 0.05581455721859476,
        "facing": 0.05581455721859476,
        "unrelated": 0.05581455721859476,
        "refactors": 0.05581455721859476,
        "minimal": 0.05581455721859476,
        "diff": 0.05581455721859476,
        "outside": 0.05581455721859476,
        "touched": 0.05581455721859476,
        "scope": 0.05581455721859476,
        "deliverables": 0.05581455721859476,
        "output": 0.05581455721859476,
        "contract": 0.05581455721859476,
        "return": 0.05581455721859476,
        "following": 0.05581455721859476,
        "in": 0.05581455721859476,
        "order": 0.05581455721859476,
        "exact": 0.11162911443718952,
        "headings": 0.05581455721859476,
        "1": 0.05581455721859476,
        "assumptions": 0.11162911443718952,
        "decisions": 0.05581455721859476,
        "bullet": 0.05581455721859476,
        "list": 0.05581455721859476,
        "any": 0.05581455721859476,
        "reasonable": 0.05581455721859476,
        "you": 0.11162911443718952,
        "made": 0.05581455721859476,
        "2": 0.05581455721859476,
        "planned": 0.05581455721859476,
        "changes": 0.05581455721859476,
        "tl": 0.05581455721859476,
        "dr": 0.05581455721859476,
        "summary": 0.05581455721859476,
        "what": 0.05581455721859476,
        "will": 0.05581455721859476,
        "add": 0.05581455721859476,
        "modify": 0.05581455721859476,
        "and": 0.11162911443718952,
        "why": 0.05581455721859476,
        "full": 0.05581455721859476,
        "test": 0.05581455721859476,
        "covering": 0.05581455721859476,
        "success": 0.05581455721859476,
        "edge": 0.05581455721859476,
        "cases": 0.05581455721859476,
        "error": 0.05581455721859476,
        "paths": 0.05581455721859476,
        "4": 0.05581455721859476,
        "validation": 0.05581455721859476,
        "steps": 0.05581455721859476,
        "local": 0.05581455721859476
      },
      "text": "{{NON_GOALS}} ### Environment & Tooling (fixed) * **Python:** 3.11 * **Package manager:** Poetry * **Linters/formatters:** ruff, black * **Static typing:** mypy (strict) * **Tests:** pytest + pytest\u2011cov * **UI:** PySide6 (if relevant to story) * **Audio I/O:** sounddevice/PortAudio (if relevant) * **ML runtime:** onnxruntime (if relevant) ### Current Repository Snapshot > Paste fresh snapshots so the model does not hallucinate. Keep these short but sufficient. * **Root tree (`tree -a -I .git` or `git ls-files`):** ``` {{REPO_TREE}} ``` * **Key files (paste only relevant sections):** * `{{PATH/TO/FILE1}}` ```python {{FILE1_RELEVANT_SNIPPET}} ``` * `{{PATH/TO/FILE2}}` ```python {{FILE2_RELEVANT_SNIPPET}} ``` * **Pinned pyproject.toml (relevant parts):** ```toml {{PYPROJECT_SNIPPET}} ``` ### Acceptance Criteria (Definition of Done) * Functional: {{FUNCTIONAL_DOC}} * Quality: **ruff/black/mypy** pass; **pytest** passes with **\u2265 90%** coverage for new code. * Cross\u2011platform: No OS\u2011specific breakage; guarded imports where needed. * Performance (if applicable): {{PERF_REQUIREMENTS}} * Docs: Inline docstrings; README or module\u2011level docs updated if user\u2011facing. * No unrelated refactors; minimal diff outside touched scope. ### Deliverables \u2014 **Output Contract** Return the following sections **in order**, with exact headings: 1. **Assumptions & Decisions** \u2013 bullet list of any reasonable assumptions you made. 2. **Planned Changes (TL;DR)** \u2013 short summary of what files you will add/modify and why. 3. **Tests** \u2013 full test files covering success, edge cases, and error paths. 4. **Validation Steps (Local)** \u2013 exact",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#2",
      "vector": {
        "of": 0.1487044791289829,
        "any": 0.04956815970966096,
        "reasonable": 0.04956815970966096,
        "assumptions": 0.04956815970966096,
        "you": 0.09913631941932192,
        "made": 0.04956815970966096,
        "2": 0.04956815970966096,
        "planned": 0.04956815970966096,
        "changes": 0.04956815970966096,
        "tl": 0.04956815970966096,
        "dr": 0.04956815970966096,
        "short": 0.04956815970966096,
        "summary": 0.04956815970966096,
        "what": 0.04956815970966096,
        "files": 0.1487044791289829,
        "will": 0.04956815970966096,
        "add": 0.04956815970966096,
        "modify": 0.04956815970966096,
        "and": 0.3965452776772877,
        "why": 0.04956815970966096,
        "3": 0.04956815970966096,
        "tests": 0.04956815970966096,
        "full": 0.04956815970966096,
        "test": 0.09913631941932192,
        "covering": 0.04956815970966096,
        "success": 0.04956815970966096,
        "edge": 0.04956815970966096,
        "cases": 0.04956815970966096,
        "error": 0.04956815970966096,
        "paths": 0.04956815970966096,
        "4": 0.04956815970966096,
        "validation": 0.04956815970966096,
        "steps": 0.04956815970966096,
        "local": 0.04956815970966096,
        "exact": 0.04956815970966096,
        "commands": 0.04956815970966096,
        "to": 0.09913631941932192,
        "run": 0.04956815970966096,
        "poetry": 0.04956815970966096,
        "install": 0.04956815970966096,
        "lint": 0.04956815970966096,
        "type": 0.04956815970966096,
        "expected": 0.04956815970966096,
        "outputs": 0.04956815970966096,
        "5": 0.04956815970966096,
        "conventional": 0.04956815970966096,
        "commit": 0.09913631941932192,
        "message": 0.09913631941932192,
        "a": 0.24784079854830482,
        "single": 0.04956815970966096,
        "with": 0.09913631941932192,
        "the": 0.24784079854830482,
        "story": 0.24784079854830482,
        "description": 0.04956815970966096,
        "ex": 0.04956815970966096,
        "s": 0.1487044791289829,
        "001": 0.1487044791289829,
        "implemented": 0.04956815970966096,
        "get": 0.04956815970966096,
        "customers": 0.04956815970966096,
        "endpoint": 0.04956815970966096,
        "implementation": 0.04956815970966096,
        "hints": 0.04956815970966096,
        "if": 0.1487044791289829,
        "helpful": 0.04956815970966096,
        "keep": 0.04956815970966096,
        "per": 0.04956815970966096,
        "frame": 0.04956815970966096,
        "allocations": 0.04956815970966096,
        "near": 0.04956815970966096,
        "zero": 0.04956815970966096,
        "in": 0.19827263883864385,
        "audio": 0.04956815970966096,
        "callbacks": 0.04956815970966096,
        "use": 0.04956815970966096,
        "dependency": 0.04956815970966096,
        "inversion": 0.04956815970966096,
        "define": 0.04956815970966096,
        "clear": 0.04956815970966096,
        "interfaces": 0.04956815970966096,
        "core": 0.1487044791289829,
        "or": 0.1487044791289829,
        "ml": 0.04956815970966096,
        "where": 0.04956815970966096,
        "specified": 0.04956815970966096,
        "backlog": 0.04956815970966096,
        "an": 0.04956815970966096,
        "external": 0.04956815970966096,
        "binary": 0.04956815970966096,
        "model": 0.04956815970966096,
        "is": 0.04956815970966096,
        "out": 0.04956815970966096,
        "scope": 0.04956815970966096,
        "for": 0.04956815970966096,
        "this": 0.09913631941932192,
        "provide": 0.04956815970966096,
        "deterministic": 0.04956815970966096,
        "stub": 0.04956815970966096,
        "todo": 0.04956815970966096,
        "feature": 0.04956815970966096,
        "flag": 0.04956815970966096,
        "important": 0.04956815970966096,
        "guardrails": 0.04956815970966096,
        "do": 0.1487044791289829,
        "not": 0.1487044791289829,
        "implement": 0.04956815970966096,
        "future": 0.04956815970966096,
        "stories": 0.04956815970966096,
        "introduce": 0.04956815970966096,
        "new": 0.04956815970966096,
        "dependencies": 0.04956815970966096,
        "without": 0.04956815970966096,
        "updating": 0.04956815970966096,
        "pyproject": 0.04956815970966096,
        "toml": 0.04956815970966096,
        "justifying": 0.04956815970966096,
        "them": 0.04956815970966096,
        "change": 0.04956815970966096,
        "licensing": 0.04956815970966096,
        "repo": 0.04956815970966096,
        "name": 0.04956815970966096,
        "ci": 0.04956815970966096,
        "workflows": 0.04956815970966096,
        "unless": 0.04956815970966096,
        "explicitly": 0.04956815970966096,
        "requested": 0.04956815970966096,
        "output": 0.04956815970966096,
        "would": 0.04956815970966096,
        "exceed": 0.04956815970966096,
        "limits": 0.04956815970966096,
        "split": 0.04956815970966096,
        "patch": 0.04956815970966096,
        "file": 0.04956815970966096,
        "contents": 0.04956815970966096,
        "by": 0.04956815970966096,
        "directory": 0.04956815970966096,
        "but": 0.04956815970966096,
        "still": 0.04956815970966096,
        "include": 0.04956815970966096,
        "all": 0.04956815970966096,
        "required": 0.04956815970966096,
        "example": 0.04956815970966096,
        "instantiation": 0.04956815970966096,
        "1": 0.04956815970966096,
        "initialize": 0.09913631941932192,
        "repository": 0.09913631941932192,
        "metadata": 0.04956815970966096,
        "copy": 0.04956815970966096,
        "adjust": 0.04956815970966096,
        "paste": 0.04956815970966096,
        "following": 0.04956815970966096,
        "as": 0.04956815970966096,
        "real": 0.04956815970966096,
        "prompt": 0.04956815970966096,
        "your": 0.04956815970966096,
        "llm": 0.04956815970966096,
        "id": 0.04956815970966096,
        "title": 0.04956815970966096
      },
      "text": "of any reasonable assumptions you made. 2. **Planned Changes (TL;DR)** \u2013 short summary of what files you will add/modify and why. 3. **Tests** \u2013 full test files covering success, edge cases, and error paths. 4. **Validation Steps (Local)** \u2013 exact commands to run (Poetry install, lint, type, test) and expected outputs. 5. **Conventional Commit Message** \u2013 a single commit with the story and a description, ex: \"S-001: Implemented the GET customers endpoint\" ### Implementation Hints (if helpful) * Keep per\u2011frame allocations near zero in audio callbacks. * Use dependency inversion: define clear interfaces in `core/` or `ml/` where specified in the backlog. * If an external binary or model is out of scope for this story, provide a deterministic stub with TODO and a feature flag. ### Important Guardrails * **Do not** implement future stories. * **Do not** introduce new dependencies without updating `pyproject.toml` and justifying them. * **Do not** change licensing, repo name, or CI workflows unless explicitly requested in this story. * If output would exceed message limits, **split the Patch and File Contents by directory** but still include all required files. --- ## \u2705 Example Instantiation #1 \u2014 S\u2011001 (Initialize repository & core metadata) > Copy, adjust, and paste the following as a real prompt to your LLM. **Story ID:** S\u2011001 **Story Title:** Initialize repository & core",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#3",
      "vector": {
        "include": 0.09611386626644254,
        "all": 0.04805693313322127,
        "required": 0.04805693313322127,
        "files": 0.04805693313322127,
        "example": 0.09611386626644254,
        "instantiation": 0.09611386626644254,
        "1": 0.09611386626644254,
        "s": 0.19222773253288508,
        "001": 0.09611386626644254,
        "initialize": 0.09611386626644254,
        "repository": 0.14417079939966382,
        "core": 0.09611386626644254,
        "metadata": 0.14417079939966382,
        "copy": 0.04805693313322127,
        "adjust": 0.04805693313322127,
        "and": 0.09611386626644254,
        "paste": 0.09611386626644254,
        "the": 0.19222773253288508,
        "following": 0.04805693313322127,
        "as": 0.09611386626644254,
        "a": 0.04805693313322127,
        "real": 0.04805693313322127,
        "prompt": 0.04805693313322127,
        "to": 0.04805693313322127,
        "your": 0.04805693313322127,
        "llm": 0.04805693313322127,
        "story": 0.28834159879932764,
        "id": 0.09611386626644254,
        "title": 0.09611386626644254,
        "text": 0.09611386626644254,
        "create": 0.04805693313322127,
        "poetry": 0.19222773253288508,
        "project": 0.09611386626644254,
        "voice": 0.09611386626644254,
        "xform": 0.09611386626644254,
        "add": 0.14417079939966382,
        "license": 0.04805693313322127,
        "apache": 0.04805693313322127,
        "2": 0.09611386626644254,
        "0": 0.14417079939966382,
        "readme": 0.14417079939966382,
        "with": 0.04805693313322127,
        "purpose": 0.09611386626644254,
        "install": 0.14417079939966382,
        "quickstart": 0.09611386626644254,
        "contributing": 0.04805693313322127,
        "editorconfig": 0.04805693313322127,
        "gitattributes": 0.04805693313322127,
        "gitignore": 0.09611386626644254,
        "pyproject": 0.09611386626644254,
        "toml": 0.09611386626644254,
        "python": 0.24028466566610635,
        "3": 0.14417079939966382,
        "11": 0.14417079939966382,
        "dependencies": 0.04805693313322127,
        "already": 0.04805693313322127,
        "completed": 0.04805693313322127,
        "none": 0.04805693313322127,
        "constraints": 0.04805693313322127,
        "use": 0.09611386626644254,
        "repo": 0.04805693313322127,
        "name": 0.09611386626644254,
        "keep": 0.09611386626644254,
        "docs": 0.04805693313322127,
        "concise": 0.04805693313322127,
        "but": 0.04805693313322127,
        "actionable": 0.04805693313322127,
        "non": 0.04805693313322127,
        "goals": 0.04805693313322127,
        "no": 0.14417079939966382,
        "code": 0.04805693313322127,
        "beyond": 0.04805693313322127,
        "scaffolding": 0.04805693313322127,
        "ci": 0.09611386626644254,
        "package": 0.04805693313322127,
        "layout": 0.04805693313322127,
        "yet": 0.09611386626644254,
        "current": 0.04805693313322127,
        "snapshot": 0.04805693313322127,
        "empty": 0.09611386626644254,
        "directory": 0.04805693313322127,
        "acceptance": 0.04805693313322127,
        "criteria": 0.04805693313322127,
        "definition": 0.04805693313322127,
        "of": 0.04805693313322127,
        "done": 0.04805693313322127,
        "succeeds": 0.04805693313322127,
        "on": 0.04805693313322127,
        "macos": 0.09611386626644254,
        "windows": 0.09611386626644254,
        "md": 0.04805693313322127,
        "includes": 0.04805693313322127,
        "instructions": 0.04805693313322127,
        "placeholder": 0.04805693313322127,
        "running": 0.04805693313322127,
        "run": 0.04805693313322127,
        "v": 0.04805693313322127,
        "prints": 0.04805693313322127,
        "x": 0.04805693313322127,
        "deliverables": 0.09611386626644254,
        "output": 0.04805693313322127,
        "contract": 0.04805693313322127,
        "then": 0.04805693313322127,
        "list": 0.04805693313322127,
        "from": 0.04805693313322127,
        "template": 0.04805693313322127,
        "implementation": 0.04805693313322127,
        "hints": 0.04805693313322127,
        "standard": 0.04805693313322127,
        "for": 0.04805693313322127,
        "version": 0.04805693313322127,
        "authors": 0.04805693313322127,
        "in": 0.04805693313322127,
        "important": 0.04805693313322127,
        "guardrails": 0.04805693313322127,
        "do": 0.04805693313322127,
        "not": 0.04805693313322127,
        "or": 0.04805693313322127,
        "tests": 0.04805693313322127,
        "succinct": 0.04805693313322127,
        "section": 0.04805693313322127,
        "headers": 0.04805693313322127,
        "placeholders": 0.04805693313322127,
        "016": 0.09611386626644254,
        "model": 0.09611386626644254,
        "registry": 0.09611386626644254,
        "provider": 0.09611386626644254,
        "detection": 0.09611386626644254,
        "implement": 0.04805693313322127,
        "ml": 0.04805693313322127,
        "runtime": 0.14417079939966382,
        "onnx_loader": 0.04805693313322127,
        "py": 0.04805693313322127,
        "that": 0.04805693313322127,
        "chooses": 0.04805693313322127,
        "best": 0.04805693313322127,
        "onnx": 0.04805693313322127,
        "ep": 0.04805693313322127,
        "at": 0.04805693313322127,
        "tensorrt": 0.04805693313322127,
        "directml": 0.04805693313322127
      },
      "text": "include all required files. --- ## \u2705 Example Instantiation #1 \u2014 S\u2011001 (Initialize repository & core metadata) > Copy, adjust, and paste the following as a real prompt to your LLM. **Story ID:** S\u2011001 **Story Title:** Initialize repository & core metadata **Story Text:** Create Poetry project `voice-xform`; add LICENSE (Apache\u20112.0), README with purpose/install/quickstart, CONTRIBUTING, .editorconfig, .gitattributes, .gitignore, pyproject.toml (Python 3.11). **Dependencies already completed:** none **Constraints:** Use Poetry; repo name `voice-xform`; Python 3.11; keep docs concise but actionable. **Non\u2011Goals:** No code beyond scaffolding; no CI; no package layout yet. **Current Repository Snapshot** *(empty directory)* ``` (Empty) ``` **Acceptance Criteria (Definition of Done)** * `poetry install` succeeds on macOS & Windows. * `README.md` includes purpose, install instructions, and placeholder quickstart. * Running `poetry run python -V` prints Python 3.11.x. **Deliverables \u2014 Output Contract** (then paste the **Deliverables** list from the template) **Implementation Hints** * Use standard `.gitignore` for Python + macOS + Windows. * Include project metadata (name, version `0.1.0`, authors) in `pyproject.toml`. **Important Guardrails** * Do not add CI or tests yet. * Keep README succinct; add section headers as placeholders. --- ## \u2705 Example Instantiation #2 \u2014 S\u2011016 (Model registry & provider detection) **Story ID:** S\u2011016 **Story Title:** Model registry & provider detection **Story Text:** Implement `ml/runtime/onnx_loader.py` that chooses the best ONNX Runtime EP at runtime (TensorRT > DirectML >",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#4",
      "vector": {
        "example": 0.045267873021259265,
        "instantiation": 0.045267873021259265,
        "2": 0.045267873021259265,
        "s": 0.22633936510629632,
        "016": 0.09053574604251853,
        "model": 0.18107149208503706,
        "registry": 0.18107149208503706,
        "provider": 0.18107149208503706,
        "detection": 0.09053574604251853,
        "story": 0.1358036190637778,
        "id": 0.045267873021259265,
        "title": 0.045267873021259265,
        "text": 0.045267873021259265,
        "implement": 0.09053574604251853,
        "ml": 0.1358036190637778,
        "runtime": 0.18107149208503706,
        "onnx_loader": 0.09053574604251853,
        "py": 0.2716072381275556,
        "that": 0.09053574604251853,
        "chooses": 0.045267873021259265,
        "the": 0.18107149208503706,
        "best": 0.045267873021259265,
        "onnx": 0.045267873021259265,
        "ep": 0.1358036190637778,
        "at": 0.09053574604251853,
        "tensorrt": 0.045267873021259265,
        "directml": 0.045267873021259265,
        "cpu": 0.09053574604251853,
        "mps": 0.045267873021259265,
        "coreml": 0.045267873021259265,
        "on": 0.22633936510629632,
        "macos": 0.1358036190637778,
        "for": 0.09053574604251853,
        "paths": 0.045267873021259265,
        "versioning": 0.045267873021259265,
        "provide": 0.045267873021259265,
        "tests": 0.1358036190637778,
        "monkeypatch": 0.09053574604251853,
        "availability": 0.1358036190637778,
        "dependencies": 0.09053574604251853,
        "already": 0.045267873021259265,
        "completed": 0.045267873021259265,
        "004": 0.045267873021259265,
        "package": 0.045267873021259265,
        "layout": 0.045267873021259265,
        "002": 0.045267873021259265,
        "tooling": 0.045267873021259265,
        "003": 0.045267873021259265,
        "ci": 0.045267873021259265,
        "constraints": 0.045267873021259265,
        "no": 0.18107149208503706,
        "gpu": 0.045267873021259265,
        "specific": 0.045267873021259265,
        "imports": 0.045267873021259265,
        "module": 0.045267873021259265,
        "top": 0.045267873021259265,
        "level": 0.045267873021259265,
        "log": 0.045267873021259265,
        "chosen": 0.045267873021259265,
        "and": 0.18107149208503706,
        "fallbacks": 0.045267873021259265,
        "non": 0.045267873021259265,
        "goals": 0.045267873021259265,
        "real": 0.045267873021259265,
        "files": 0.09053574604251853,
        "yet": 0.045267873021259265,
        "inference": 0.045267873021259265,
        "calls": 0.045267873021259265,
        "current": 0.045267873021259265,
        "repository": 0.045267873021259265,
        "snapshot": 0.045267873021259265,
        "voice": 0.09053574604251853,
        "xform": 0.09053574604251853,
        "app": 0.045267873021259265,
        "core": 0.045267873021259265,
        "version": 0.09053574604251853,
        "__init__": 0.09053574604251853,
        "empty": 0.045267873021259265,
        "placeholder": 0.045267873021259265,
        "pyproject": 0.09053574604251853,
        "toml": 0.1358036190637778,
        "key": 0.045267873021259265,
        "relevant": 0.045267873021259265,
        "parts": 0.045267873021259265,
        "tool": 0.09053574604251853,
        "poetry": 0.09053574604251853,
        "name": 0.045267873021259265,
        "0": 0.1358036190637778,
        "1": 0.09053574604251853,
        "python": 0.045267873021259265,
        "3": 0.045267873021259265,
        "11": 0.045267873021259265,
        "onnxruntime": 0.09053574604251853,
        "18": 0.045267873021259265,
        "acceptance": 0.045267873021259265,
        "criteria": 0.045267873021259265,
        "definition": 0.045267873021259265,
        "of": 0.045267873021259265,
        "done": 0.045267873021259265,
        "select_providers": 0.045267873021259265,
        "returns": 0.045267873021259265,
        "an": 0.045267873021259265,
        "ordered": 0.045267873021259265,
        "list": 0.1358036190637778,
        "based": 0.045267873021259265,
        "platform": 0.09053574604251853,
        "logs": 0.045267873021259265,
        "contain": 0.045267873021259265,
        "selected": 0.045267873021259265,
        "reason": 0.045267873021259265,
        "fallback": 0.045267873021259265,
        "simulate": 0.045267873021259265,
        "get_available_providers": 0.045267873021259265,
        "assert": 0.045267873021259265,
        "selection": 0.045267873021259265,
        "order": 0.045267873021259265,
        "across": 0.045267873021259265,
        "windows": 0.09053574604251853,
        "linux": 0.045267873021259265,
        "mypy": 0.045267873021259265,
        "ruff": 0.045267873021259265,
        "pytest": 0.045267873021259265,
        "pass": 0.045267873021259265,
        "deliverables": 0.09053574604251853,
        "output": 0.045267873021259265,
        "contract": 0.045267873021259265,
        "then": 0.045267873021259265,
        "paste": 0.045267873021259265,
        "from": 0.045267873021259265,
        "template": 0.045267873021259265,
        "implementation": 0.045267873021259265,
        "hints": 0.045267873021259265,
        "detect": 0.045267873021259265,
        "os": 0.045267873021259265,
        "with": 0.045267873021259265,
        "system": 0.045267873021259265,
        "prefer": 0.045267873021259265,
        "tensorrtexecutionprovider": 0.045267873021259265,
        "nvidia": 0.045267873021259265,
        "dmlexecutionprovider": 0.045267873021259265,
        "coremlexecutionprovider": 0.045267873021259265,
        "or": 0.045267873021259265,
        "mpsexecutionprovider": 0.045267873021259265,
        "else": 0.045267873021259265,
        "expose": 0.045267873021259265,
        "a": 0.045267873021259265,
        "helper": 0.045267873021259265,
        "create_session": 0.045267873021259265,
        "path": 0.045267873021259265,
        "str": 0.09053574604251853,
        "preferred": 0.045267873021259265,
        "none": 0.045267873021259265,
        "inferencesession": 0.045267873021259265,
        "important": 0.045267873021259265,
        "guardrails": 0.045267873021259265,
        "actual": 0.045267873021259265
      },
      "text": "--- ## \u2705 Example Instantiation #2 \u2014 S\u2011016 (Model registry & provider detection) **Story ID:** S\u2011016 **Story Title:** Model registry & provider detection **Story Text:** Implement `ml/runtime/onnx_loader.py` that chooses the best ONNX Runtime EP at runtime (TensorRT > DirectML > CPU; MPS/CoreML on macOS). Implement `ml/registry.py` for model paths/versioning. Provide tests that monkeypatch provider availability. **Dependencies already completed:** S\u2011004 (package layout), S\u2011002 (tooling), S\u2011003 (CI) **Constraints:** No GPU\u2011specific imports at module top level. Log chosen EP and fallbacks. **Non\u2011Goals:** No real model files yet; no inference calls. **Current Repository Snapshot** ``` voice-xform/ app/ core/ version.py ml/ __init__.py runtime/ __init__.py registry.py # (empty placeholder) tests/ pyproject.toml ``` **Key files:** `pyproject.toml` (relevant parts) ```toml [tool.poetry] name = \"voice-xform\" version = \"0.1.0\" [tool.poetry.dependencies] python = \"^3.11\" onnxruntime = \"^1.18.0\" ``` **Acceptance Criteria (Definition of Done)** * `onnx_loader.select_providers()` returns an ordered provider list based on platform and availability. * Logs contain the selected EP and reason for fallback. * Tests simulate availability (monkeypatch `onnxruntime.get_available_providers`) and assert selection order across Windows/macOS/Linux. * mypy/ruff/pytest pass. **Deliverables \u2014 Output Contract** (then paste the **Deliverables** list from the template) **Implementation Hints** * Detect OS with `platform.system()`. * Prefer `\"TensorrtExecutionProvider\"` on NVIDIA, `\"DmlExecutionProvider\"` on Windows, `\"CoreMLExecutionProvider\"` or `\"MPSExecutionProvider\"` on macOS, else CPU. * Expose a helper `create_session(path: str, preferred: list[str] | None) -> InferenceSession`. **Important Guardrails** * No actual",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#5",
      "vector": {
        "template": 0.08971226080325131,
        "implementation": 0.04485613040162566,
        "hints": 0.04485613040162566,
        "detect": 0.04485613040162566,
        "os": 0.04485613040162566,
        "with": 0.08971226080325131,
        "platform": 0.08971226080325131,
        "system": 0.08971226080325131,
        "prefer": 0.04485613040162566,
        "tensorrtexecutionprovider": 0.04485613040162566,
        "on": 0.17942452160650263,
        "nvidia": 0.04485613040162566,
        "dmlexecutionprovider": 0.04485613040162566,
        "windows": 0.08971226080325131,
        "coremlexecutionprovider": 0.04485613040162566,
        "or": 0.08971226080325131,
        "mpsexecutionprovider": 0.04485613040162566,
        "macos": 0.08971226080325131,
        "else": 0.04485613040162566,
        "cpu": 0.04485613040162566,
        "expose": 0.04485613040162566,
        "a": 0.26913678240975397,
        "helper": 0.04485613040162566,
        "create_session": 0.04485613040162566,
        "path": 0.04485613040162566,
        "str": 0.08971226080325131,
        "preferred": 0.04485613040162566,
        "list": 0.04485613040162566,
        "none": 0.04485613040162566,
        "inferencesession": 0.04485613040162566,
        "important": 0.04485613040162566,
        "guardrails": 0.04485613040162566,
        "no": 0.08971226080325131,
        "actual": 0.04485613040162566,
        "model": 0.04485613040162566,
        "downloads": 0.04485613040162566,
        "global": 0.04485613040162566,
        "provider": 0.04485613040162566,
        "checks": 0.08971226080325131,
        "at": 0.04485613040162566,
        "import": 0.04485613040162566,
        "time": 0.08971226080325131,
        "run": 0.17942452160650263,
        "inside": 0.04485613040162566,
        "functions": 0.04485613040162566,
        "verification": 0.04485613040162566,
        "checklist": 0.04485613040162566,
        "you": 0.13456839120487699,
        "this": 0.04485613040162566,
        "after": 0.04485613040162566,
        "each": 0.08971226080325131,
        "story": 0.26913678240975397,
        "locally": 0.04485613040162566,
        "and": 0.3139929128113796,
        "produce": 0.04485613040162566,
        "these": 0.04485613040162566,
        "commands": 0.04485613040162566,
        "in": 0.13456839120487699,
        "the": 0.4485613040162566,
        "validation": 0.04485613040162566,
        "steps": 0.04485613040162566,
        "section": 0.08971226080325131,
        "bash": 0.04485613040162566,
        "make": 0.04485613040162566,
        "all": 0.04485613040162566,
        "confirm": 0.04485613040162566,
        "tests": 0.08971226080325131,
        "pass": 0.04485613040162566,
        "coverage": 0.04485613040162566,
        "for": 0.13456839120487699,
        "new": 0.04485613040162566,
        "code": 0.04485613040162566,
        "95": 0.04485613040162566,
        "spot": 0.04485613040162566,
        "check": 0.04485613040162566,
        "specific": 0.04485613040162566,
        "issues": 0.08971226080325131,
        "if": 0.13456839120487699,
        "touches": 0.04485613040162566,
        "features": 0.04485613040162566,
        "command": 0.04485613040162566,
        "review": 0.08971226080325131,
        "do": 0.04485613040162566,
        "pr": 0.04485613040162566,
        "of": 0.04485613040162566,
        "diff": 0.04485613040162566,
        "fix": 0.04485613040162566,
        "any": 0.04485613040162566,
        "find": 0.04485613040162566,
        "tips": 0.04485613040162566,
        "working": 0.04485613040162566,
        "always": 0.04485613040162566,
        "update": 0.04485613040162566,
        "current": 0.04485613040162566,
        "repository": 0.04485613040162566,
        "snapshot": 0.04485613040162566,
        "before": 0.04485613040162566,
        "so": 0.04485613040162566,
        "llm": 0.08971226080325131,
        "is": 0.13456839120487699,
        "grounded": 0.04485613040162566,
        "reality": 0.04485613040162566,
        "keep": 0.04485613040162566,
        "acceptance": 0.08971226080325131,
        "criteria": 0.08971226080325131,
        "crisp": 0.04485613040162566,
        "testable": 0.04485613040162566,
        "output": 0.04485613040162566,
        "contract": 0.04485613040162566,
        "ensures": 0.04485613040162566,
        "get": 0.04485613040162566,
        "git": 0.04485613040162566,
        "apply": 0.04485613040162566,
        "able": 0.04485613040162566,
        "patch": 0.04485613040162566,
        "full": 0.04485613040162566,
        "file": 0.04485613040162566,
        "contents": 0.04485613040162566,
        "commit": 0.04485613040162566,
        "message": 0.04485613040162566,
        "every": 0.04485613040162566,
        "ui": 0.08971226080325131,
        "heavy": 0.04485613040162566,
        "add": 0.04485613040162566,
        "screenshots": 0.04485613040162566,
        "state": 0.04485613040162566,
        "diagrams": 0.04485613040162566,
        "to": 0.13456839120487699,
        "context": 0.04485613040162566,
        "steer": 0.04485613040162566,
        "layout": 0.04485613040162566,
        "naming": 0.04485613040162566,
        "performance": 0.04485613040162566,
        "sensitive": 0.04485613040162566,
        "put": 0.04485613040162566,
        "explicit": 0.04485613040162566,
        "budgets": 0.04485613040162566,
        "into": 0.04485613040162566,
        "ask": 0.04485613040162566,
        "print": 0.04485613040162566,
        "measured": 0.04485613040162566,
        "timings": 0.04485613040162566
      },
      "text": "template) **Implementation Hints** * Detect OS with `platform.system()`. * Prefer `\"TensorrtExecutionProvider\"` on NVIDIA, `\"DmlExecutionProvider\"` on Windows, `\"CoreMLExecutionProvider\"` or `\"MPSExecutionProvider\"` on macOS, else CPU. * Expose a helper `create_session(path: str, preferred: list[str] | None) -> InferenceSession`. **Important Guardrails** * No actual model downloads. * No global provider checks at import time; run checks inside functions. --- ## \ud83e\uddea Verification Checklist (You run this after each story) Run locally and produce these commands in the **Validation Steps** section: ```bash make all ``` * Confirm tests pass and coverage for new code \u2265 95%. * On Windows/macOS, spot\u2011check for platform\u2011specific issues if the story touches system features. * Run the command /review and do a PR review of the diff. Fix any issues you find. --- ## \ud83d\udcdd Tips for Working With the Template * Always **update the \u201cCurrent Repository Snapshot\u201d** before each story so the LLM is grounded in reality. * Keep **Acceptance Criteria** crisp and testable. * The **Output Contract** ensures you get a `git apply`\u2011able patch, full file contents, tests, and a commit message \u2014 every time. * If a story is UI\u2011heavy, add screenshots or UI state diagrams to the **Story Context** section to steer layout and naming. * If a story is performance\u2011sensitive, put explicit budgets into **Acceptance Criteria** and ask the LLM to print measured timings in",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#6",
      "vector": {
        "story": 0.3849001794597505,
        "is": 0.19245008972987526,
        "ui": 0.19245008972987526,
        "heavy": 0.09622504486493763,
        "add": 0.09622504486493763,
        "screenshots": 0.09622504486493763,
        "or": 0.09622504486493763,
        "state": 0.09622504486493763,
        "diagrams": 0.09622504486493763,
        "to": 0.28867513459481287,
        "the": 0.28867513459481287,
        "context": 0.19245008972987526,
        "section": 0.09622504486493763,
        "steer": 0.09622504486493763,
        "layout": 0.09622504486493763,
        "and": 0.28867513459481287,
        "naming": 0.09622504486493763,
        "if": 0.09622504486493763,
        "a": 0.09622504486493763,
        "performance": 0.09622504486493763,
        "sensitive": 0.09622504486493763,
        "put": 0.09622504486493763,
        "explicit": 0.09622504486493763,
        "budgets": 0.09622504486493763,
        "into": 0.09622504486493763,
        "acceptance": 0.19245008972987526,
        "criteria": 0.19245008972987526,
        "ask": 0.09622504486493763,
        "llm": 0.09622504486493763,
        "print": 0.09622504486493763,
        "measured": 0.09622504486493763,
        "timings": 0.09622504486493763,
        "in": 0.19245008972987526,
        "test": 0.09622504486493763,
        "logs": 0.09622504486493763,
        "use": 0.09622504486493763,
        "this": 0.09622504486493763,
        "template": 0.09622504486493763,
        "verbatim": 0.09622504486493763,
        "for": 0.09622504486493763,
        "s": 0.19245008972987526,
        "001": 0.09622504486493763,
        "through": 0.09622504486493763,
        "044": 0.09622504486493763,
        "by": 0.09622504486493763,
        "swapping": 0.09622504486493763,
        "relevant": 0.09622504486493763,
        "snapshot": 0.09622504486493763
      },
      "text": "story is UI\u2011heavy, add screenshots or UI state diagrams to the **Story Context** section to steer layout and naming. * If a story is performance\u2011sensitive, put explicit budgets into **Acceptance Criteria** and ask the LLM to print measured timings in test logs. --- Use this template verbatim for S\u2011001 through S\u2011044 by swapping in the relevant **Story Context**, **Snapshot**, and **Acceptance Criteria**.",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/spec.md#0",
      "vector": {
        "intelligent": 0.06696495301824251,
        "readme": 0.2008948590547275,
        "generator": 0.06696495301824251,
        "architecture": 0.13392990603648502,
        "spec": 0.06696495301824251,
        "python": 0.13392990603648502,
        "local": 0.2008948590547275,
        "llm": 0.2008948590547275,
        "1": 0.06696495301824251,
        "purpose": 0.06696495301824251,
        "scope": 0.06696495301824251,
        "build": 0.13392990603648502,
        "a": 0.3348247650912125,
        "based": 0.06696495301824251,
        "system": 0.06696495301824251,
        "that": 0.06696495301824251,
        "analyzes": 0.06696495301824251,
        "git": 0.3348247650912125,
        "repository": 0.06696495301824251,
        "structure": 0.06696495301824251,
        "code": 0.06696495301824251,
        "dependencies": 0.06696495301824251,
        "then": 0.06696495301824251,
        "generates": 0.06696495301824251,
        "and": 0.13392990603648502,
        "maintains": 0.06696495301824251,
        "high": 0.13392990603648502,
        "quality": 0.06696495301824251,
        "md": 0.06696495301824251,
        "using": 0.06696495301824251,
        "it": 0.06696495301824251,
        "initializes": 0.06696495301824251,
        "repos": 0.06696495301824251,
        "with": 0.06696495301824251,
        "no": 0.06696495301824251,
        "docs": 0.2008948590547275,
        "keeps": 0.06696495301824251,
        "up": 0.06696495301824251,
        "to": 0.06696495301824251,
        "date": 0.06696495301824251,
        "on": 0.06696495301824251,
        "commits": 0.06696495301824251,
        "prs": 0.06696495301824251,
        "supports": 0.06696495301824251,
        "multiple": 0.06696495301824251,
        "languages": 0.06696495301824251,
        "project": 0.06696495301824251,
        "types": 0.06696495301824251,
        "via": 0.06696495301824251,
        "analyzers": 0.13392990603648502,
        "non": 0.06696495301824251,
        "goals": 0.06696495301824251,
        "for": 0.06696495301824251,
        "the": 0.06696495301824251,
        "poc": 0.06696495301824251,
        "multi": 0.06696495301824251,
        "repo": 0.13392990603648502,
        "orchestration": 0.06696495301824251,
        "full": 0.06696495301824251,
        "website": 0.06696495301824251,
        "api": 0.06696495301824251,
        "reference": 0.06696495301824251,
        "extraction": 0.06696495301824251,
        "beyond": 0.06696495301824251,
        "summaries": 0.06696495301824251,
        "cloud": 0.06696495301824251,
        "llms": 0.06696495301824251,
        "2": 0.06696495301824251,
        "level": 0.06696495301824251,
        "at": 0.06696495301824251,
        "glance": 0.06696495301824251,
        "events": 0.06696495301824251,
        "event": 0.06696495301824251,
        "sources": 0.06696495301824251,
        "cli": 0.06696495301824251,
        "commands": 0.06696495301824251,
        "hooks": 0.06696495301824251,
        "webhooks": 0.06696495301824251,
        "ci": 0.06696495301824251,
        "commit": 0.13392990603648502,
        "pr": 0.13392990603648502,
        "orchestr": 0.06696495301824251,
        "async": 0.06696495301824251,
        "task": 0.06696495301824251,
        "graph": 0.13392990603648502,
        "scanner": 0.06696495301824251,
        "doc": 0.06696495301824251,
        "store": 0.06696495301824251,
        "indexer": 0.06696495301824251,
        "language": 0.06696495301824251,
        "artifacts": 0.06696495301824251,
        "fs": 0.06696495301824251,
        "deps": 0.06696495301824251,
        "cache": 0.06696495301824251,
        "versions": 0.06696495301824251,
        "knowledge": 0.06696495301824251,
        "embeddings": 0.06696495301824251,
        "prompt": 0.06696495301824251,
        "builder": 0.06696495301824251,
        "templates": 0.06696495301824251,
        "rag": 0.06696495301824251,
        "runner": 0.06696495301824251,
        "llama": 0.06696495301824251,
        "cpp": 0.06696495301824251,
        "ollama": 0.06696495301824251,
        "post": 0.06696495301824251,
        "processor": 0.06696495301824251,
        "lint": 0.06696495301824251,
        "toc": 0.06696495301824251,
        "badges": 0.06696495301824251,
        "links": 0.06696495301824251,
        "publisher": 0.06696495301824251,
        "branch": 0.06696495301824251
      },
      "text": "# Intelligent README Generator \u2014 Architecture & Spec (Python, Local LLM) ## 1) Purpose & Scope Build a Python-based system that **analyzes a Git repository** (structure, code, dependencies), then **generates and maintains a high-quality README.md** using a **local LLM**. It initializes repos with no docs and **keeps docs up to date** on commits/PRs. Supports **multiple languages/project types** via analyzers. Non-goals (for the POC): multi-repo orchestration, full website docs, API reference extraction (beyond README summaries), cloud LLMs. --- ## 2) High-Level Architecture (at a glance) ``` \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 Git Events \u2502 Event Sources \u2502 CLI commands, Git hooks, Webhooks/CI (commit/PR) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Orchestr \u2502 (Async task graph) \u2514\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Repo Scanner\u2502 \u2502 Analyzers \u2502 \u2502 Doc Store \u2502 \u2502 + Indexer \u2502 \u2502 (Language, \u2502 \u2502 (Artifacts, \u2502 \u2502 (Git, FS) \u2502 \u2502 Build, Deps) \u2502 \u2502 Cache, \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 Versions) \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 Knowledge Graph \u2502 \u2502 \u2502 \u2502 & Embeddings \u2502<\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 Prompt Builder \u2502 (Templates + RAG) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 Local LLM Runner \u2502 (llama.cpp/Ollama) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25b6\u2502 Post-Processor \u2502 (lint, ToC, badges, links) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Git Publisher \u2502 (branch/PR/commit) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 ``` --- ##",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#1",
      "vector": {
        "rag": 0.053074489243427524,
        "local": 0.053074489243427524,
        "llm": 0.053074489243427524,
        "runner": 0.053074489243427524,
        "llama": 0.053074489243427524,
        "cpp": 0.053074489243427524,
        "ollama": 0.053074489243427524,
        "post": 0.053074489243427524,
        "processor": 0.053074489243427524,
        "lint": 0.053074489243427524,
        "toc": 0.053074489243427524,
        "badges": 0.053074489243427524,
        "links": 0.053074489243427524,
        "git": 0.10614897848685505,
        "publisher": 0.053074489243427524,
        "branch": 0.053074489243427524,
        "pr": 0.053074489243427524,
        "commit": 0.053074489243427524,
        "3": 0.2653724462171376,
        "components": 0.053074489243427524,
        "responsibilities": 0.053074489243427524,
        "1": 0.053074489243427524,
        "orchestrator": 0.053074489243427524,
        "coordinates": 0.053074489243427524,
        "end": 0.10614897848685505,
        "to": 0.2122979569737101,
        "pipelines": 0.053074489243427524,
        "init": 0.053074489243427524,
        "update": 0.10614897848685505,
        "regenerate": 0.10614897848685505,
        "computes": 0.053074489243427524,
        "change": 0.10614897848685505,
        "impact": 0.053074489243427524,
        "from": 0.10614897848685505,
        "diff": 0.053074489243427524,
        "decides": 0.053074489243427524,
        "whether": 0.053074489243427524,
        "full": 0.053074489243427524,
        "readme": 0.053074489243427524,
        "or": 0.10614897848685505,
        "patch": 0.053074489243427524,
        "sections": 0.053074489243427524,
        "schedules": 0.053074489243427524,
        "tasks": 0.053074489243427524,
        "and": 0.15922346773028256,
        "caches": 0.053074489243427524,
        "intermediate": 0.053074489243427524,
        "results": 0.053074489243427524,
        "reuses": 0.053074489243427524,
        "analyzer": 0.10614897848685505,
        "outputs": 0.053074489243427524,
        "docgen": 0.2122979569737101,
        "analyzers": 0.2653724462171376,
        "cache": 0.053074489243427524,
        "json": 0.2122979569737101,
        "invalidating": 0.053074489243427524,
        "entries": 0.053074489243427524,
        "when": 0.10614897848685505,
        "file": 0.053074489243427524,
        "hashes": 0.053074489243427524,
        "signatures": 0.053074489243427524,
        "emits": 0.053074489243427524,
        "structured": 0.053074489243427524,
        "logs": 0.053074489243427524,
        "info": 0.053074489243427524,
        "by": 0.053074489243427524,
        "default": 0.053074489243427524,
        "debug": 0.053074489243427524,
        "with": 0.053074489243427524,
        "verbose": 0.053074489243427524,
        "respects": 0.053074489243427524,
        "yml": 0.053074489243427524,
        "ci": 0.053074489243427524,
        "watched_globs": 0.053074489243427524,
        "skip": 0.053074489243427524,
        "unrelated": 0.053074489243427524,
        "diffs": 0.053074489243427524,
        "substitutes": 0.053074489243427524,
        "fail": 0.053074489243427524,
        "safe": 0.053074489243427524,
        "stubs": 0.053074489243427524,
        "generation": 0.053074489243427524,
        "fails": 0.053074489243427524,
        "supports": 0.053074489243427524,
        "dry": 0.10614897848685505,
        "run": 0.15922346773028256,
        "previews": 0.053074489243427524,
        "records": 0.053074489243427524,
        "scorecards": 0.053074489243427524,
        "for": 0.053074489243427524,
        "each": 0.053074489243427524,
        "under": 0.053074489243427524,
        "2": 0.053074489243427524,
        "repo": 0.15922346773028256,
        "scanner": 0.053074489243427524,
        "indexer": 0.053074489243427524,
        "walks": 0.053074489243427524,
        "builds": 0.053074489243427524,
        "normalized": 0.053074489243427524,
        "manifest": 0.053074489243427524,
        "files": 0.10614897848685505,
        "sizes": 0.053074489243427524,
        "language": 0.10614897848685505,
        "tags": 0.053074489243427524,
        "path": 0.053074489243427524,
        "roles": 0.053074489243427524,
        "src": 0.053074489243427524,
        "test": 0.10614897848685505,
        "docs": 0.053074489243427524,
        "examples": 0.053074489243427524,
        "build": 0.15922346773028256,
        "dependency": 0.10614897848685505,
        "manifests": 0.053074489243427524,
        "e": 0.053074489243427524,
        "g": 0.053074489243427524,
        "pom": 0.053074489243427524,
        "xml": 0.053074489243427524,
        "gradle": 0.10614897848685505,
        "package": 0.053074489243427524,
        "requirements": 0.053074489243427524,
        "txt": 0.053074489243427524,
        "pyproject": 0.053074489243427524,
        "toml": 0.10614897848685505,
        "go": 0.15922346773028256,
        "mod": 0.053074489243427524,
        "cargo": 0.10614897848685505,
        "gemfile": 0.053074489243427524,
        "composer": 0.053074489243427524,
        "entrypoints": 0.10614897848685505,
        "clis": 0.053074489243427524,
        "services": 0.053074489243427524,
        "coverage": 0.053074489243427524,
        "artifacts": 0.053074489243427524,
        "if": 0.053074489243427524,
        "available": 0.053074489243427524,
        "stores": 0.053074489243427524,
        "a": 0.053074489243427524,
        "per": 0.053074489243427524,
        "index": 0.053074489243427524,
        "speed": 0.053074489243427524,
        "future": 0.053074489243427524,
        "runs": 0.053074489243427524,
        "plugin": 0.053074489243427524,
        "based": 0.053074489243427524,
        "detect": 0.053074489243427524,
        "idioms": 0.053074489243427524,
        "frameworks": 0.053074489243427524,
        "spring": 0.053074489243427524,
        "boot": 0.053074489243427524,
        "fastapi": 0.053074489243427524,
        "node": 0.053074489243427524,
        "express": 0.053074489243427524,
        "react": 0.053074489243427524,
        "next": 0.053074489243427524,
        "js": 0.053074489243427524,
        "http": 0.053074489243427524,
        "rust": 0.053074489243427524,
        "bin": 0.053074489243427524,
        "lib": 0.053074489243427524,
        "maven": 0.053074489243427524,
        "setuptools": 0.053074489243427524,
        "poetry": 0.053074489243427524,
        "npm": 0.053074489243427524,
        "pnpm": 0.053074489243427524,
        "yarn": 0.053074489243427524,
        "extract": 0.053074489243427524,
        "top": 0.053074489243427524,
        "level": 0.053074489243427524
      },
      "text": "+ RAG) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 Local LLM Runner \u2502 (llama.cpp/Ollama) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25b6\u2502 Post-Processor \u2502 (lint, ToC, badges, links) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Git Publisher \u2502 (branch/PR/commit) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 ``` --- ## 3) Components & Responsibilities ### 3.1 Orchestrator * Coordinates end-to-end pipelines (init, update, regenerate). * Computes *change impact* from Git diff; decides whether to regenerate full README or patch sections. * Schedules tasks and caches intermediate results. * Reuses analyzer outputs from `.docgen/analyzers/cache.json`, invalidating entries when file hashes or analyzer signatures change. * Emits structured logs (info by default, debug with `--verbose`), respects `.docgen.yml` `ci.watched_globs` to skip unrelated diffs, and substitutes fail-safe stubs when generation fails. * Supports dry-run previews (`docgen update --dry-run`) and records scorecards for each run under `.docgen/`. ### 3.2 Repo Scanner & Indexer * Walks repo; builds normalized manifest: * Files, sizes, language tags, path roles (src/test/docs/examples). * Build files & dependency manifests (e.g., `pom.xml`, `build.gradle`, `package.json`, `requirements.txt`, `pyproject.toml`, `go.mod`, `Cargo.toml`, `Gemfile`, `composer.json`). * Entrypoints (CLIs, services), test coverage artifacts if available. * Stores a per-repo index (JSON) to speed future runs. ### 3.3 Analyzers (Plugin-based) * **Language analyzers** (detect idioms, entrypoints, frameworks: Spring Boot, FastAPI, Node/Express, React, Next.js, Go HTTP, Rust bin/lib). * **Build analyzers** (Maven/Gradle, setuptools/Poetry, npm/pnpm/yarn, Go, Cargo). * **Dependency analyzers** (extract top-level",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#2",
      "vector": {
        "index": 0.0536828127095019,
        "json": 0.0536828127095019,
        "to": 0.1073656254190038,
        "speed": 0.0536828127095019,
        "future": 0.0536828127095019,
        "runs": 0.0536828127095019,
        "3": 0.2147312508380076,
        "analyzers": 0.3220968762570114,
        "plugin": 0.0536828127095019,
        "based": 0.0536828127095019,
        "language": 0.0536828127095019,
        "detect": 0.0536828127095019,
        "idioms": 0.0536828127095019,
        "entrypoints": 0.0536828127095019,
        "frameworks": 0.0536828127095019,
        "spring": 0.1073656254190038,
        "boot": 0.1073656254190038,
        "fastapi": 0.1073656254190038,
        "node": 0.1073656254190038,
        "express": 0.0536828127095019,
        "react": 0.0536828127095019,
        "next": 0.0536828127095019,
        "js": 0.0536828127095019,
        "go": 0.1073656254190038,
        "http": 0.0536828127095019,
        "rust": 0.0536828127095019,
        "bin": 0.0536828127095019,
        "lib": 0.0536828127095019,
        "build": 0.1073656254190038,
        "maven": 0.0536828127095019,
        "gradle": 0.0536828127095019,
        "setuptools": 0.0536828127095019,
        "poetry": 0.0536828127095019,
        "npm": 0.0536828127095019,
        "pnpm": 0.0536828127095019,
        "yarn": 0.0536828127095019,
        "cargo": 0.0536828127095019,
        "dependency": 0.0536828127095019,
        "extract": 0.0536828127095019,
        "top": 0.1073656254190038,
        "level": 0.0536828127095019,
        "libs": 0.0536828127095019,
        "notable": 0.0536828127095019,
        "transitive": 0.0536828127095019,
        "categories": 0.0536828127095019,
        "entrypoint": 0.0536828127095019,
        "infer": 0.0536828127095019,
        "run": 0.0536828127095019,
        "commands": 0.0536828127095019,
        "for": 0.1073656254190038,
        "django": 0.0536828127095019,
        "scripts": 0.1073656254190038,
        "pattern": 0.0536828127095019,
        "monorepo": 0.0536828127095019,
        "layout": 0.0536828127095019,
        "ci": 0.0536828127095019,
        "cd": 0.0536828127095019,
        "containerization": 0.0536828127095019,
        "k8s": 0.0536828127095019,
        "heuristics": 0.0536828127095019,
        "structure": 0.0536828127095019,
        "analyzer": 0.1610484381285057,
        "module": 0.0536828127095019,
        "topology": 0.0536828127095019,
        "detected": 0.0536828127095019,
        "entities": 0.1073656254190038,
        "dtos": 0.0536828127095019,
        "api": 0.0536828127095019,
        "endpoint": 0.0536828127095019,
        "sequences": 0.0536828127095019,
        "service": 0.0536828127095019,
        "interactions": 0.0536828127095019,
        "tree": 0.0536828127095019,
        "sitter": 0.0536828127095019,
        "symbol": 0.0536828127095019,
        "python": 0.0536828127095019,
        "java": 0.0536828127095019,
        "typescript": 0.0536828127095019,
        "extracts": 0.0536828127095019,
        "functions": 0.0536828127095019,
        "classes": 0.0536828127095019,
        "when": 0.0536828127095019,
        "parsers": 0.0536828127095019,
        "available": 0.0536828127095019,
        "and": 0.2147312508380076,
        "degrades": 0.0536828127095019,
        "gracefully": 0.0536828127095019,
        "otherwise": 0.0536828127095019,
        "each": 0.0536828127095019,
        "returns": 0.0536828127095019,
        "signals": 0.1073656254190038,
        "key": 0.1073656254190038,
        "facts": 0.0536828127095019,
        "the": 0.1073656254190038,
        "knowledge": 0.1073656254190038,
        "graph": 0.1610484381285057,
        "4": 0.0536828127095019,
        "embeddings": 0.1073656254190038,
        "rag": 0.0536828127095019,
        "of": 0.1073656254190038,
        "repo": 0.1073656254190038,
        "modules": 0.0536828127095019,
        "packages": 0.0536828127095019,
        "services": 0.0536828127095019,
        "configs": 0.0536828127095019,
        "tests": 0.0536828127095019,
        "docs": 0.1073656254190038,
        "lightweight": 0.0536828127095019,
        "embedding": 0.0536828127095019,
        "store": 0.0536828127095019,
        "e": 0.0536828127095019,
        "g": 0.0536828127095019,
        "faiss": 0.0536828127095019,
        "in": 0.0536828127095019,
        "memory": 0.0536828127095019,
        "chunks": 0.0536828127095019,
        "code": 0.0536828127095019,
        "comments": 0.0536828127095019,
        "readme": 0.1073656254190038,
        "fragments": 0.0536828127095019,
        "changelog": 0.0536828127095019,
        "issues": 0.0536828127095019,
        "optional": 0.0536828127095019,
        "commit": 0.0536828127095019,
        "messages": 0.1073656254190038,
        "provides": 0.0536828127095019,
        "context": 0.1073656254190038,
        "retrieval": 0.0536828127095019,
        "prompt": 0.1073656254190038,
        "building": 0.0536828127095019,
        "k": 0.0536828127095019,
        "by": 0.0536828127095019,
        "section": 0.1610484381285057,
        "persists": 0.0536828127095019,
        "under": 0.0536828127095019,
        "docgen": 0.0536828127095019,
        "refreshing": 0.0536828127095019,
        "only": 0.0536828127095019,
        "files": 0.0536828127095019,
        "whose": 0.0536828127095019,
        "hashes": 0.0536828127095019,
        "changed": 0.0536828127095019,
        "5": 0.0536828127095019,
        "builder": 0.0536828127095019,
        "aware": 0.0536828127095019,
        "jinja2": 0.0536828127095019,
        "templates": 0.0536828127095019,
        "with": 0.1073656254190038,
        "guardrails": 0.0536828127095019,
        "project": 0.0536828127095019,
        "intro": 0.0536828127095019,
        "features": 0.0536828127095019,
        "architecture": 0.0536828127095019,
        "overview": 0.0536828127095019,
        "quick": 0.0536828127095019,
        "start": 0.0536828127095019,
        "configuration": 0.0536828127095019,
        "test": 0.0536828127095019,
        "deployment": 0.0536828127095019,
        "troubleshooting": 0.0536828127095019,
        "faq": 0.0536828127095019,
        "roadmap": 0.0536828127095019,
        "contribution": 0.0536828127095019,
        "license": 0.0536828127095019,
        "badges": 0.0536828127095019,
        "dynamically": 0.0536828127095019,
        "injects": 0.0536828127095019,
        "retrieved": 0.0536828127095019,
        "per": 0.0536828127095019,
        "produces": 0.0536828127095019,
        "llm": 0.0536828127095019,
        "ready": 0.0536828127095019,
        "structured": 0.0536828127095019,
        "prompts": 0.0536828127095019,
        "system": 0.0536828127095019,
        "user": 0.0536828127095019,
        "token": 0.0536828127095019,
        "budgets": 0.0536828127095019,
        "honours": 0.0536828127095019,
        "style": 0.0536828127095019,
        "presets": 0.0536828127095019,
        "concise": 0.0536828127095019,
        "trims": 0.0536828127095019,
        "list": 0.0536828127095019,
        "heavy": 0.0536828127095019,
        "sections": 0.0536828127095019
      },
      "text": "index (JSON) to speed future runs. ### 3.3 Analyzers (Plugin-based) * **Language analyzers** (detect idioms, entrypoints, frameworks: Spring Boot, FastAPI, Node/Express, React, Next.js, Go HTTP, Rust bin/lib). * **Build analyzers** (Maven/Gradle, setuptools/Poetry, npm/pnpm/yarn, Go, Cargo). * **Dependency analyzers** (extract top-level libs & notable transitive categories). * **Entrypoint analyzers** (infer run commands for FastAPI, Django, Spring Boot, Node scripts). * **Pattern analyzers** (monorepo layout, CI/CD, containerization/K8s heuristics). * **Structure analyzer** (module topology, detected entities/DTOs, API endpoint sequences, service interactions). * **Tree-sitter symbol analyzer** (Python/Java/TypeScript) extracts functions/classes when parsers available and degrades gracefully otherwise. * Each analyzer returns **Signals** (key facts) to the knowledge graph. ### 3.4 Knowledge Graph & Embeddings (RAG) * Graph of Repo entities: modules, packages, services, scripts, configs, tests, docs. * Lightweight embedding store (e.g., `faiss`/in-memory) of **chunks**: code comments, README fragments, `docs/`, `CHANGELOG`, issues (optional), commit messages. * Provides **context retrieval** for prompt building (top-k by section) and persists embeddings under `.docgen/`, refreshing only the files whose hashes changed. ### 3.5 Prompt Builder * **Section-aware** Jinja2 templates with **guardrails**: * Project intro, key features, architecture overview, quick start, configuration, build/test, deployment, troubleshooting, FAQ, roadmap, contribution, license, badges. * Dynamically injects repo signals and retrieved context per section. * Produces **LLM-ready structured prompts** (system + user messages) with token budgets and honours `readme.style` presets (`concise` trims list-heavy sections,",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#3",
      "vector": {
        "start": 0.09690031662230184,
        "configuration": 0.09690031662230184,
        "build": 0.04845015831115092,
        "test": 0.04845015831115092,
        "deployment": 0.04845015831115092,
        "troubleshooting": 0.04845015831115092,
        "faq": 0.04845015831115092,
        "roadmap": 0.04845015831115092,
        "contribution": 0.04845015831115092,
        "license": 0.04845015831115092,
        "badges": 0.09690031662230184,
        "dynamically": 0.04845015831115092,
        "injects": 0.09690031662230184,
        "repo": 0.04845015831115092,
        "signals": 0.04845015831115092,
        "and": 0.4360514248003583,
        "retrieved": 0.04845015831115092,
        "context": 0.09690031662230184,
        "per": 0.04845015831115092,
        "section": 0.14535047493345277,
        "produces": 0.04845015831115092,
        "llm": 0.09690031662230184,
        "ready": 0.04845015831115092,
        "structured": 0.09690031662230184,
        "prompts": 0.04845015831115092,
        "system": 0.04845015831115092,
        "user": 0.04845015831115092,
        "messages": 0.04845015831115092,
        "with": 0.14535047493345277,
        "token": 0.04845015831115092,
        "budgets": 0.04845015831115092,
        "honours": 0.04845015831115092,
        "readme": 0.14535047493345277,
        "style": 0.14535047493345277,
        "presets": 0.04845015831115092,
        "concise": 0.04845015831115092,
        "trims": 0.04845015831115092,
        "list": 0.04845015831115092,
        "heavy": 0.04845015831115092,
        "sections": 0.14535047493345277,
        "comprehensive": 0.04845015831115092,
        "keeps": 0.04845015831115092,
        "full": 0.04845015831115092,
        "detail": 0.04845015831115092,
        "detected": 0.09690031662230184,
        "entrypoints": 0.04845015831115092,
        "infrastructure": 0.04845015831115092,
        "patterns": 0.04845015831115092,
        "into": 0.04845015831115092,
        "quick": 0.04845015831115092,
        "guidance": 0.04845015831115092,
        "e": 0.04845015831115092,
        "g": 0.04845015831115092,
        "uvicorn": 0.04845015831115092,
        "docker": 0.14535047493345277,
        "compose": 0.04845015831115092,
        "up": 0.04845015831115092,
        "generates": 0.04845015831115092,
        "mermaid": 0.04845015831115092,
        "sequence": 0.04845015831115092,
        "diagrams": 0.04845015831115092,
        "highlighting": 0.04845015831115092,
        "request": 0.04845015831115092,
        "flow": 0.04845015831115092,
        "across": 0.04845015831115092,
        "services": 0.04845015831115092,
        "when": 0.09690031662230184,
        "api": 0.09690031662230184,
        "endpoints": 0.04845015831115092,
        "are": 0.04845015831115092,
        "3": 0.09690031662230184,
        "6": 0.04845015831115092,
        "local": 0.14535047493345277,
        "runner": 0.14535047493345277,
        "pluggable": 0.04845015831115092,
        "runtime": 0.04845015831115092,
        "that": 0.04845015831115092,
        "prefers": 0.04845015831115092,
        "the": 0.04845015831115092,
        "model": 0.14535047493345277,
        "http": 0.14535047493345277,
        "endpoint": 0.04845015831115092,
        "host": 0.04845015831115092,
        "localhost": 0.04845015831115092,
        "12434": 0.04845015831115092,
        "engines": 0.09690031662230184,
        "v1": 0.09690031662230184,
        "container": 0.04845015831115092,
        "internal": 0.14535047493345277,
        "environment": 0.04845015831115092,
        "overrides": 0.04845015831115092,
        "an": 0.04845015831115092,
        "ollama": 0.04845015831115092,
        "cli": 0.09690031662230184,
        "fallback": 0.04845015831115092,
        "defaults": 0.04845015831115092,
        "to": 0.14535047493345277,
        "ai": 0.04845015831115092,
        "smollm2": 0.04845015831115092,
        "360m": 0.04845015831115092,
        "q4_k_m": 0.04845015831115092,
        "but": 0.04845015831115092,
        "respects": 0.04845015831115092,
        "docgen": 0.09690031662230184,
        "yml": 0.04845015831115092,
        "openai": 0.04845015831115092,
        "compatible": 0.04845015831115092,
        "env": 0.04845015831115092,
        "vars": 0.04845015831115092,
        "for": 0.14535047493345277,
        "alternate": 0.04845015831115092,
        "weights": 0.04845015831115092,
        "keys": 0.04845015831115092,
        "supports": 0.04845015831115092,
        "function": 0.04845015831115092,
        "calling": 0.04845015831115092,
        "outputs": 0.04845015831115092,
        "available": 0.04845015831115092,
        "streaming": 0.04845015831115092,
        "decode": 0.04845015831115092,
        "stop": 0.04845015831115092,
        "tokens": 0.04845015831115092,
        "by": 0.09690031662230184,
        "generation": 0.04845015831115092,
        "stay": 0.09690031662230184,
        "within": 0.04845015831115092,
        "limits": 0.04845015831115092,
        "validates": 0.09690031662230184,
        "ensure": 0.04845015831115092,
        "runners": 0.04845015831115092,
        "loopback": 0.04845015831115092,
        "hosts": 0.04845015831115092,
        "only": 0.09690031662230184,
        "includes": 0.04845015831115092,
        "a": 0.09690031662230184,
        "llamacpprunner": 0.04845015831115092,
        "adapter": 0.04845015831115092,
        "llama": 0.04845015831115092,
        "cpp": 0.04845015831115092,
        "binaries": 0.04845015831115092,
        "enforcing": 0.04845015831115092,
        "filesystem": 0.04845015831115092,
        "backed": 0.04845015831115092,
        "paths": 0.04845015831115092,
        "execution": 0.04845015831115092,
        "7": 0.04845015831115092,
        "post": 0.04845015831115092,
        "processor": 0.04845015831115092,
        "lints": 0.04845015831115092,
        "markdown": 0.04845015831115092,
        "builds": 0.04845015831115092,
        "toc": 0.04845015831115092,
        "adds": 0.04845015831115092,
        "shields": 0.04845015831115092,
        "normalizes": 0.04845015831115092,
        "heading": 0.04845015831115092,
        "hierarchy": 0.04845015831115092,
        "enforces": 0.04845015831115092,
        "guide": 0.04845015831115092,
        "contract": 0.04845015831115092,
        "required": 0.04845015831115092,
        "links": 0.04845015831115092,
        "relative": 0.04845015831115092,
        "absolute": 0.04845015831115092,
        "code": 0.04845015831115092,
        "block": 0.04845015831115092,
        "languages": 0.04845015831115092,
        "line": 0.04845015831115092,
        "length": 0.04845015831115092,
        "computes": 0.04845015831115092,
        "diff": 0.04845015831115092,
        "aware": 0.04845015831115092,
        "updates": 0.04845015831115092,
        "modifies": 0.04845015831115092,
        "impacted": 0.04845015831115092,
        "changes": 0.04845015831115092,
        "persists": 0.04845015831115092,
        "scorecard": 0.09690031662230184,
        "json": 0.04845015831115092
      },
      "text": "start, configuration, build/test, deployment, troubleshooting, FAQ, roadmap, contribution, license, badges. * Dynamically injects repo signals and retrieved context per section. * Produces **LLM-ready structured prompts** (system + user messages) with token budgets and honours `readme.style` presets (`concise` trims list-heavy sections, `comprehensive` keeps full detail). * Injects detected entrypoints and infrastructure patterns into Quick Start guidance (e.g., `uvicorn ...`, `docker compose up`). * Generates Mermaid sequence diagrams highlighting request flow across services when API endpoints are detected. ### 3.6 Local LLM Runner * Pluggable runtime that prefers the Docker Model Runner HTTP endpoint (host `http://localhost:12434/engines/v1`, container `http://model-runner.docker.internal/engines/v1`) with environment overrides and an `ollama` CLI fallback. * Defaults to `ai/smollm2:360M-Q4_K_M` but respects `.docgen.yml` and OpenAI-compatible env vars for alternate weights and API keys. * Supports **function calling style** for structured outputs when available. * Streaming decode with stop tokens; **section-by-section** generation to stay within context limits. * Validates configuration to ensure runners stay local (loopback/`*.internal` hosts only). * Includes a `LlamaCppRunner` adapter for local `llama.cpp` binaries, enforcing filesystem-backed model paths and CLI execution. ### 3.7 Post-Processor * Lints Markdown, builds ToC, adds shields/badges, normalizes heading hierarchy. * Enforces internal style guide and **README contract** (required sections). * Validates links (relative/absolute), code block languages, and line length. * Computes **diff-aware updates**: only modifies sections impacted by changes. * Persists a README scorecard (`.docgen/scorecard.json`)",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#4",
      "vector": {
        "shields": 0.04339630366027462,
        "badges": 0.08679260732054923,
        "normalizes": 0.08679260732054923,
        "heading": 0.04339630366027462,
        "hierarchy": 0.04339630366027462,
        "enforces": 0.04339630366027462,
        "internal": 0.04339630366027462,
        "style": 0.04339630366027462,
        "guide": 0.04339630366027462,
        "and": 0.6075482512438447,
        "readme": 0.13018891098082386,
        "contract": 0.04339630366027462,
        "required": 0.04339630366027462,
        "sections": 0.17358521464109847,
        "validates": 0.04339630366027462,
        "links": 0.04339630366027462,
        "relative": 0.04339630366027462,
        "absolute": 0.04339630366027462,
        "code": 0.04339630366027462,
        "block": 0.04339630366027462,
        "languages": 0.04339630366027462,
        "line": 0.04339630366027462,
        "length": 0.04339630366027462,
        "computes": 0.04339630366027462,
        "diff": 0.04339630366027462,
        "aware": 0.04339630366027462,
        "updates": 0.04339630366027462,
        "only": 0.04339630366027462,
        "modifies": 0.04339630366027462,
        "impacted": 0.04339630366027462,
        "by": 0.04339630366027462,
        "changes": 0.08679260732054923,
        "persists": 0.04339630366027462,
        "a": 0.13018891098082386,
        "scorecard": 0.08679260732054923,
        "docgen": 0.2169815183013731,
        "json": 0.17358521464109847,
        "capturing": 0.08679260732054923,
        "coverage": 0.08679260732054923,
        "quick": 0.04339630366027462,
        "start": 0.04339630366027462,
        "health": 0.04339630366027462,
        "link": 0.08679260732054923,
        "results": 0.04339630366027462,
        "adds": 0.04339630366027462,
        "build": 0.04339630366027462,
        "license": 0.04339630366027462,
        "with": 0.13018891098082386,
        "safe": 0.08679260732054923,
        "defaults": 0.04339630366027462,
        "reports": 0.04339630366027462,
        "warnings": 0.04339630366027462,
        "during": 0.04339630366027462,
        "post": 0.04339630366027462,
        "processing": 0.04339630366027462,
        "3": 0.13018891098082386,
        "8": 0.04339630366027462,
        "validation": 0.17358521464109847,
        "layer": 0.04339630366027462,
        "runs": 0.08679260732054923,
        "after": 0.04339630366027462,
        "section": 0.08679260732054923,
        "rendering": 0.04339630366027462,
        "before": 0.04339630366027462,
        "linting": 0.04339630366027462,
        "publishing": 0.04339630366027462,
        "to": 0.04339630366027462,
        "ensure": 0.04339630366027462,
        "generated": 0.08679260732054923,
        "claims": 0.04339630366027462,
        "are": 0.04339630366027462,
        "grounded": 0.04339630366027462,
        "analyzer": 0.08679260732054923,
        "signals": 0.04339630366027462,
        "metadata": 0.04339630366027462,
        "retrieved": 0.04339630366027462,
        "context": 0.04339630366027462,
        "into": 0.04339630366027462,
        "an": 0.04339630366027462,
        "evidence": 0.13018891098082386,
        "index": 0.04339630366027462,
        "used": 0.04339630366027462,
        "for": 0.13018891098082386,
        "token": 0.04339630366027462,
        "overlap": 0.04339630366027462,
        "checks": 0.04339630366027462,
        "default": 0.04339630366027462,
        "nohallucinationvalidator": 0.04339630366027462,
        "rejects": 0.04339630366027462,
        "sentences": 0.04339630366027462,
        "lacking": 0.04339630366027462,
        "supporting": 0.04339630366027462,
        "replaces": 0.04339630366027462,
        "offending": 0.04339630366027462,
        "fail": 0.04339630366027462,
        "stubs": 0.04339630366027462,
        "raises": 0.04339630366027462,
        "actionable": 0.04339630366027462,
        "errors": 0.04339630366027462,
        "writes": 0.04339630366027462,
        "validator": 0.04339630366027462,
        "status": 0.04339630366027462,
        "issues": 0.04339630366027462,
        "summaries": 0.04339630366027462,
        "auditability": 0.04339630366027462,
        "respects": 0.04339630366027462,
        "yml": 0.04339630366027462,
        "no_hallucination": 0.04339630366027462,
        "toggle": 0.04339630366027462,
        "docgen_validation_no_hallucination": 0.04339630366027462,
        "environment": 0.04339630366027462,
        "override": 0.04339630366027462,
        "cli": 0.04339630366027462,
        "skip": 0.04339630366027462,
        "flag": 0.04339630366027462,
        "one": 0.04339630366027462,
        "off": 0.04339630366027462,
        "bypasses": 0.04339630366027462,
        "9": 0.04339630366027462,
        "doc": 0.04339630366027462,
        "store": 0.04339630366027462,
        "artifacts": 0.08679260732054923,
        "versions": 0.04339630366027462,
        "keeps": 0.04339630366027462,
        "drafts": 0.04339630366027462,
        "logs": 0.04339630366027462,
        "prompts": 0.04339630366027462,
        "inputs": 0.04339630366027462,
        "outputs": 0.04339630366027462,
        "diffs": 0.04339630366027462,
        "under": 0.04339630366027462,
        "per": 0.04339630366027462,
        "repo": 0.04339630366027462,
        "supports": 0.04339630366027462,
        "rollback": 0.04339630366027462,
        "regression": 0.04339630366027462,
        "testing": 0.04339630366027462,
        "via": 0.04339630366027462,
        "golden": 0.04339630366027462,
        "readmes": 0.04339630366027462,
        "stores": 0.04339630366027462,
        "embedding": 0.04339630366027462,
        "cache": 0.08679260732054923,
        "embeddings": 0.04339630366027462,
        "analyzers": 0.04339630366027462,
        "schema": 0.04339630366027462,
        "versioning": 0.04339630366027462,
        "so": 0.04339630366027462,
        "subsequent": 0.04339630366027462,
        "reuse": 0.04339630366027462,
        "work": 0.04339630366027462,
        "when": 0.04339630366027462,
        "file": 0.04339630366027462,
        "hashes": 0.04339630366027462,
        "remain": 0.04339630366027462,
        "unchanged": 0.04339630366027462,
        "10": 0.04339630366027462,
        "git": 0.04339630366027462,
        "publisher": 0.04339630366027462,
        "creates": 0.04339630366027462,
        "branch": 0.04339630366027462,
        "e": 0.04339630366027462,
        "g": 0.04339630366027462,
        "update": 0.04339630366027462,
        "yyyymmdd": 0.04339630366027462,
        "pr": 0.08679260732054923,
        "body": 0.04339630366027462,
        "explains": 0.04339630366027462,
        "detected": 0.04339630366027462,
        "what": 0.04339630366027462,
        "were": 0.04339630366027462,
        "updated": 0.04339630366027462,
        "can": 0.04339630366027462,
        "commit": 0.04339630366027462
      },
      "text": "shields/badges, normalizes heading hierarchy. * Enforces internal style guide and **README contract** (required sections). * Validates links (relative/absolute), code block languages, and line length. * Computes **diff-aware updates**: only modifies sections impacted by changes. * Persists a README scorecard (`.docgen/scorecard.json`) capturing coverage, quick start health, and link results. * Adds build/coverage/license badges with safe defaults and reports link warnings during post-processing. ### 3.8 Validation Layer * Runs after section rendering and before linting/publishing to ensure generated claims are grounded. * Normalizes analyzer signals, section metadata, and retrieved context into an **Evidence Index** used for token overlap checks. * Default `NoHallucinationValidator` rejects sentences lacking supporting evidence, replaces offending sections with fail-safe stubs, and raises actionable errors. * Writes `.docgen/validation.json` capturing validator status, issues, and evidence summaries for auditability. * Respects `.docgen.yml` `validation.no_hallucination` toggle, `DOCGEN_VALIDATION_NO_HALLUCINATION` environment override, and CLI `--skip-validation` flag for one-off bypasses. ### 3.9 Doc Store (Artifacts & Versions) * Keeps generated drafts, logs, prompts, inputs/outputs, and diffs under `.docgen/` per repo. * Supports rollback and regression testing via \u201cgolden\u201d READMEs. * Stores embedding cache (`embeddings.json`) and analyzer artifacts (`analyzers/cache.json`) with schema versioning so subsequent runs reuse work when file hashes remain unchanged. ### 3.10 Git Publisher * Creates a branch (e.g., `docgen/readme-update-YYYYMMDD`) and a PR. * PR body explains detected changes and what sections were updated. * Can commit",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#5",
      "vector": {
        "with": 0.0746913686973271,
        "schema": 0.03734568434866355,
        "versioning": 0.03734568434866355,
        "so": 0.03734568434866355,
        "subsequent": 0.03734568434866355,
        "runs": 0.03734568434866355,
        "reuse": 0.03734568434866355,
        "work": 0.03734568434866355,
        "when": 0.0746913686973271,
        "file": 0.03734568434866355,
        "hashes": 0.03734568434866355,
        "remain": 0.03734568434866355,
        "unchanged": 0.03734568434866355,
        "3": 0.0746913686973271,
        "10": 0.03734568434866355,
        "git": 0.03734568434866355,
        "publisher": 0.03734568434866355,
        "creates": 0.03734568434866355,
        "a": 0.0746913686973271,
        "branch": 0.03734568434866355,
        "e": 0.0746913686973271,
        "g": 0.0746913686973271,
        "docgen": 0.0746913686973271,
        "readme": 0.03734568434866355,
        "update": 0.0746913686973271,
        "yyyymmdd": 0.03734568434866355,
        "and": 0.18672842174331777,
        "pr": 0.0746913686973271,
        "body": 0.03734568434866355,
        "explains": 0.03734568434866355,
        "detected": 0.03734568434866355,
        "changes": 0.03734568434866355,
        "what": 0.03734568434866355,
        "sections": 0.03734568434866355,
        "were": 0.03734568434866355,
        "updated": 0.03734568434866355,
        "can": 0.03734568434866355,
        "commit": 0.03734568434866355,
        "directly": 0.03734568434866355,
        "configurable": 0.03734568434866355,
        "on": 0.03734568434866355,
        "init": 0.0746913686973271,
        "for": 0.1493827373946542,
        "empty": 0.03734568434866355,
        "repos": 0.03734568434866355,
        "applies": 0.03734568434866355,
        "labels": 0.03734568434866355,
        "docs": 0.0746913686973271,
        "auto": 0.03734568434866355,
        "updates": 0.03734568434866355,
        "existing": 0.03734568434866355,
        "prs": 0.03734568434866355,
        "configured": 0.03734568434866355,
        "11": 0.03734568434866355,
        "service": 0.1493827373946542,
        "mode": 0.03734568434866355,
        "fastapi": 0.0746913686973271,
        "app": 0.03734568434866355,
        "exposes": 0.03734568434866355,
        "post": 0.03734568434866355,
        "endpoints": 0.03734568434866355,
        "plus": 0.03734568434866355,
        "health": 0.03734568434866355,
        "readiness": 0.03734568434866355,
        "reuses": 0.03734568434866355,
        "the": 0.11203705304599065,
        "orchestrator": 0.03734568434866355,
        "dependency": 0.03734568434866355,
        "executes": 0.03734568434866355,
        "operations": 0.03734568434866355,
        "in": 0.03734568434866355,
        "thread": 0.03734568434866355,
        "pools": 0.03734568434866355,
        "to": 0.03734568434866355,
        "keep": 0.03734568434866355,
        "event": 0.03734568434866355,
        "loop": 0.03734568434866355,
        "responsive": 0.03734568434866355,
        "cli": 0.0746913686973271,
        "host": 0.03734568434866355,
        "0": 0.1493827373946542,
        "port": 0.03734568434866355,
        "8000": 0.03734568434866355,
        "boots": 0.03734568434866355,
        "authentication": 0.03734568434866355,
        "hooks": 0.03734568434866355,
        "ready": 0.03734568434866355,
        "future": 0.03734568434866355,
        "hardening": 0.03734568434866355,
        "error": 0.03734568434866355,
        "handlers": 0.03734568434866355,
        "surface": 0.03734568434866355,
        "actionable": 0.03734568434866355,
        "json": 0.03734568434866355,
        "detail": 0.0746913686973271,
        "field": 0.03734568434866355,
        "common": 0.03734568434866355,
        "runtime": 0.03734568434866355,
        "issues": 0.03734568434866355,
        "4": 0.03734568434866355,
        "data": 0.03734568434866355,
        "model": 0.03734568434866355,
        "python": 0.0746913686973271,
        "pydantic": 0.03734568434866355,
        "dataclasses": 0.0746913686973271,
        "from": 0.0746913686973271,
        "import": 0.0746913686973271,
        "dataclass": 0.2614197904406449,
        "typing": 0.03734568434866355,
        "list": 0.1493827373946542,
        "dict": 0.1493827373946542,
        "optional": 0.0746913686973271,
        "class": 0.2240741060919813,
        "filemeta": 0.0746913686973271,
        "path": 0.03734568434866355,
        "str": 0.6348766339272804,
        "size": 0.03734568434866355,
        "int": 0.03734568434866355,
        "language": 0.03734568434866355,
        "role": 0.03734568434866355,
        "src": 0.03734568434866355,
        "test": 0.0746913686973271,
        "config": 0.03734568434866355,
        "build": 0.03734568434866355,
        "script": 0.03734568434866355,
        "infra": 0.03734568434866355,
        "other": 0.03734568434866355,
        "hash": 0.03734568434866355,
        "repomanifest": 0.0746913686973271,
        "root": 0.03734568434866355,
        "files": 0.03734568434866355,
        "detectors": 0.03734568434866355,
        "build_system": 0.03734568434866355,
        "maven": 0.03734568434866355,
        "framework": 0.0746913686973271,
        "spring": 0.03734568434866355,
        "boot": 0.03734568434866355,
        "dependency_files": 0.03734568434866355,
        "pom": 0.03734568434866355,
        "xml": 0.03734568434866355,
        "requirements": 0.03734568434866355,
        "txt": 0.03734568434866355,
        "signal": 0.0746913686973271,
        "kind": 0.03734568434866355,
        "db": 0.03734568434866355,
        "queue": 0.03734568434866355,
        "dep": 0.03734568434866355,
        "entrypoint": 0.03734568434866355,
        "name": 0.03734568434866355,
        "analysisresult": 0.03734568434866355,
        "manifest": 0.03734568434866355,
        "signals": 0.03734568434866355,
        "embedding_index_path": 0.03734568434866355,
        "sectionspec": 0.03734568434866355,
        "key": 0.03734568434866355,
        "intro": 0.03734568434866355,
        "features": 0.03734568434866355,
        "arch": 0.03734568434866355,
        "quickstart": 0.03734568434866355,
        "required": 0.03734568434866355,
        "bool": 0.03734568434866355,
        "sources": 0.03734568434866355,
        "preferred": 0.03734568434866355,
        "retrieval": 0.03734568434866355,
        "tags": 0.03734568434866355,
        "template_name": 0.03734568434866355,
        "readmedraft": 0.03734568434866355
      },
      "text": "with schema versioning so subsequent runs reuse work when file hashes remain unchanged. ### 3.10 Git Publisher * Creates a branch (e.g., `docgen/readme-update-YYYYMMDD`) and a PR. * PR body explains detected changes and what sections were updated. * Can commit directly (configurable) on init for empty repos. * Applies labels (e.g., `docs:auto`) and updates existing PRs when configured. ### 3.11 Service Mode (FastAPI) * FastAPI app exposes `/init` and `/update` POST endpoints plus `/health` for readiness. * Reuses the orchestrator dependency and executes operations in thread pools to keep the event loop responsive. * CLI `docgen service --host 0.0.0.0 --port 8000` boots the service with authentication hooks ready for future hardening. * Error handlers surface actionable JSON (`detail` field) for common runtime issues. --- ## 4) Data Model (Python `pydantic`/`dataclasses`) ```python from dataclasses import dataclass from typing import List, Dict, Optional @dataclass class FileMeta: path: str size: int language: Optional[str] role: str # src|test|docs|config|build|script|infra|other hash: str @dataclass class RepoManifest: root: str files: List[FileMeta] detectors: Dict[str, str] # {\"build_system\": \"maven\", \"framework\":\"spring-boot\", ...} dependency_files: Dict[str, str] # {\"pom.xml\": \"...\", \"requirements.txt\": \"...\"} @dataclass class Signal: kind: str # \"framework\",\"service\",\"cli\",\"db\",\"queue\",\"dep\",\"entrypoint\",\"test\" name: str detail: Dict[str, str] @dataclass class AnalysisResult: manifest: RepoManifest signals: List[Signal] embedding_index_path: str @dataclass class SectionSpec: key: str # \"intro\",\"features\",\"arch\",\"quickstart\",... required: bool sources: List[str] # preferred retrieval tags template_name: str @dataclass class ReadmeDraft:",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#6",
      "vector": {
        "class": 0.22011272658140596,
        "signal": 0.08804509063256238,
        "kind": 0.04402254531628119,
        "str": 0.6603381797442178,
        "framework": 0.04402254531628119,
        "service": 0.04402254531628119,
        "cli": 0.08804509063256238,
        "db": 0.04402254531628119,
        "queue": 0.04402254531628119,
        "dep": 0.04402254531628119,
        "entrypoint": 0.04402254531628119,
        "test": 0.04402254531628119,
        "name": 0.04402254531628119,
        "detail": 0.04402254531628119,
        "dict": 0.13206763594884358,
        "dataclass": 0.17609018126512477,
        "analysisresult": 0.04402254531628119,
        "manifest": 0.04402254531628119,
        "repomanifest": 0.04402254531628119,
        "signals": 0.04402254531628119,
        "list": 0.13206763594884358,
        "embedding_index_path": 0.04402254531628119,
        "sectionspec": 0.04402254531628119,
        "key": 0.04402254531628119,
        "intro": 0.08804509063256238,
        "features": 0.08804509063256238,
        "arch": 0.04402254531628119,
        "quickstart": 0.08804509063256238,
        "required": 0.04402254531628119,
        "bool": 0.04402254531628119,
        "sources": 0.04402254531628119,
        "preferred": 0.04402254531628119,
        "retrieval": 0.04402254531628119,
        "tags": 0.04402254531628119,
        "template_name": 0.04402254531628119,
        "readmedraft": 0.04402254531628119,
        "sections": 0.04402254531628119,
        "full_markdown": 0.04402254531628119,
        "updateplan": 0.04402254531628119,
        "strategy": 0.04402254531628119,
        "full": 0.04402254531628119,
        "patch": 0.04402254531628119,
        "changed_sections": 0.04402254531628119,
        "reasons": 0.04402254531628119,
        "section": 0.04402254531628119,
        "why": 0.04402254531628119,
        "5": 0.04402254531628119,
        "configuration": 0.08804509063256238,
        "docgen": 0.17609018126512477,
        "yml": 0.04402254531628119,
        "at": 0.04402254531628119,
        "repo": 0.04402254531628119,
        "root": 0.04402254531628119,
        "yaml": 0.04402254531628119,
        "llm": 0.04402254531628119,
        "runner": 0.04402254531628119,
        "ollama": 0.08804509063256238,
        "or": 0.13206763594884358,
        "llama": 0.04402254531628119,
        "cpp": 0.04402254531628119,
        "executable": 0.04402254531628119,
        "optional": 0.08804509063256238,
        "override": 0.04402254531628119,
        "for": 0.04402254531628119,
        "binaries": 0.04402254531628119,
        "model": 0.04402254531628119,
        "llama3": 0.04402254531628119,
        "8b": 0.04402254531628119,
        "instruct": 0.04402254531628119,
        "example": 0.04402254531628119,
        "local": 0.04402254531628119,
        "only": 0.08804509063256238,
        "max_tokens": 0.04402254531628119,
        "2048": 0.04402254531628119,
        "temperature": 0.04402254531628119,
        "0": 0.08804509063256238,
        "2": 0.04402254531628119,
        "readme": 0.13206763594884358,
        "style": 0.04402254531628119,
        "concise": 0.04402254531628119,
        "comprehensive": 0.04402254531628119,
        "template_pack": 0.04402254531628119,
        "enterprise": 0.04402254531628119,
        "bundle": 0.04402254531628119,
        "shipped": 0.04402254531628119,
        "with": 0.04402254531628119,
        "required_sections": 0.04402254531628119,
        "architecture": 0.04402254531628119,
        "build_and_test": 0.04402254531628119,
        "deployment": 0.04402254531628119,
        "troubleshooting": 0.04402254531628119,
        "faq": 0.04402254531628119,
        "license": 0.04402254531628119,
        "validation": 0.04402254531628119,
        "no_hallucination": 0.04402254531628119,
        "true": 0.08804509063256238,
        "set": 0.04402254531628119,
        "to": 0.08804509063256238,
        "false": 0.04402254531628119,
        "use": 0.04402254531628119,
        "docgen_validation_no_hallucination": 0.04402254531628119,
        "disable": 0.04402254531628119,
        "publish": 0.04402254531628119,
        "mode": 0.04402254531628119,
        "pr": 0.13206763594884358,
        "commit": 0.04402254531628119,
        "dry": 0.04402254531628119,
        "run": 0.04402254531628119,
        "branch_prefix": 0.04402254531628119,
        "labels": 0.04402254531628119,
        "docs": 0.04402254531628119,
        "auto": 0.04402254531628119,
        "update_existing": 0.04402254531628119,
        "refresh": 0.04402254531628119,
        "an": 0.04402254531628119,
        "existing": 0.04402254531628119,
        "instead": 0.04402254531628119,
        "of": 0.04402254531628119,
        "opening": 0.04402254531628119,
        "a": 0.04402254531628119,
        "new": 0.04402254531628119,
        "one": 0.04402254531628119,
        "analyzers": 0.04402254531628119,
        "enabled": 0.04402254531628119,
        "language": 0.04402254531628119,
        "build": 0.08804509063256238,
        "dependencies": 0.04402254531628119,
        "patterns": 0.04402254531628119,
        "exclude_paths": 0.04402254531628119,
        "git": 0.04402254531628119,
        "node_modules": 0.04402254531628119,
        "dist": 0.04402254531628119,
        "ci": 0.04402254531628119,
        "update": 0.04402254531628119,
        "if": 0.08804509063256238,
        "these": 0.04402254531628119,
        "paths": 0.04402254531628119,
        "change": 0.04402254531628119,
        "watched_globs": 0.04402254531628119,
        "src": 0.04402254531628119,
        "app": 0.04402254531628119,
        "cmd": 0.04402254531628119,
        "pom": 0.04402254531628119,
        "xml": 0.04402254531628119,
        "gradle": 0.04402254531628119,
        "package": 0.04402254531628119,
        "json": 0.04402254531628119,
        "requirements": 0.04402254531628119,
        "txt": 0.04402254531628119,
        "pyproject": 0.04402254531628119,
        "toml": 0.04402254531628119,
        "dockerfile": 0.04402254531628119,
        "no": 0.04402254531628119,
        "templates_dir": 0.04402254531628119,
        "is": 0.04402254531628119,
        "provided": 0.04402254531628119
      },
      "text": "class Signal: kind: str # \"framework\",\"service\",\"cli\",\"db\",\"queue\",\"dep\",\"entrypoint\",\"test\" name: str detail: Dict[str, str] @dataclass class AnalysisResult: manifest: RepoManifest signals: List[Signal] embedding_index_path: str @dataclass class SectionSpec: key: str # \"intro\",\"features\",\"arch\",\"quickstart\",... required: bool sources: List[str] # preferred retrieval tags template_name: str @dataclass class ReadmeDraft: sections: Dict[str, str] full_markdown: str @dataclass class UpdatePlan: strategy: str # \"full\"|\"patch\" changed_sections: List[str] reasons: Dict[str, str] # section->why ``` --- ## 5) Configuration (`.docgen.yml` at repo root) ```yaml llm: runner: \"ollama\" # or \"llama.cpp\" executable: \"ollama\" # optional override for CLI binaries model: \"llama3:8b-instruct\" # example; local only max_tokens: 2048 temperature: 0.2 readme: style: \"concise\" # or \"comprehensive\" template_pack: \"enterprise\" # optional bundle shipped with docgen required_sections: - intro - features - architecture - quickstart - configuration - build_and_test - deployment - troubleshooting - faq - license validation: no_hallucination: true # set to false or use DOCGEN_VALIDATION_NO_HALLUCINATION=0 to disable publish: mode: \"pr\" # \"commit\" | \"pr\" | \"dry-run\" branch_prefix: \"docgen/\" labels: - \"docs:auto\" update_existing: true # refresh an existing PR instead of opening a new one analyzers: enabled: - language - build - dependencies - patterns exclude_paths: - \".git/\" - \"node_modules/\" - \"dist/\" ci: # Only update README if these paths change watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" - \"requirements.txt\" - \"pyproject.toml\" - \"Dockerfile\" ``` > If no `readme.templates_dir` is provided, docgen",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#7",
      "vector": {
        "node_modules": 0.05006261743217589,
        "dist": 0.05006261743217589,
        "ci": 0.15018785229652767,
        "only": 0.10012523486435178,
        "update": 0.15018785229652767,
        "readme": 0.25031308716087947,
        "if": 0.15018785229652767,
        "these": 0.05006261743217589,
        "paths": 0.05006261743217589,
        "change": 0.05006261743217589,
        "watched_globs": 0.10012523486435178,
        "src": 0.10012523486435178,
        "app": 0.05006261743217589,
        "cmd": 0.05006261743217589,
        "pom": 0.10012523486435178,
        "xml": 0.10012523486435178,
        "build": 0.25031308716087947,
        "gradle": 0.10012523486435178,
        "package": 0.05006261743217589,
        "json": 0.05006261743217589,
        "requirements": 0.05006261743217589,
        "txt": 0.05006261743217589,
        "pyproject": 0.05006261743217589,
        "toml": 0.05006261743217589,
        "dockerfile": 0.10012523486435178,
        "no": 0.10012523486435178,
        "templates_dir": 0.05006261743217589,
        "is": 0.05006261743217589,
        "provided": 0.05006261743217589,
        "docgen": 0.25031308716087947,
        "automatically": 0.05006261743217589,
        "picks": 0.05006261743217589,
        "up": 0.05006261743217589,
        "docs": 0.05006261743217589,
        "templates": 0.10012523486435178,
        "bundles": 0.05006261743217589,
        "in": 0.10012523486435178,
        "the": 0.05006261743217589,
        "repository": 0.05006261743217589,
        "root": 0.05006261743217589,
        "and": 0.10012523486435178,
        "supports": 0.05006261743217589,
        "built": 0.05006261743217589,
        "template": 0.05006261743217589,
        "packs": 0.05006261743217589,
        "via": 0.10012523486435178,
        "template_pack": 0.05006261743217589,
        "6": 0.25031308716087947,
        "workflows": 0.05006261743217589,
        "1": 0.15018785229652767,
        "initialization": 0.05006261743217589,
        "repo": 0.05006261743217589,
        "without": 0.10012523486435178,
        "scan": 0.05006261743217589,
        "analyze": 0.05006261743217589,
        "manifest": 0.05006261743217589,
        "signals": 0.05006261743217589,
        "embeddings": 0.05006261743217589,
        "2": 0.15018785229652767,
        "prompt": 0.05006261743217589,
        "with": 0.10012523486435178,
        "default": 0.05006261743217589,
        "include": 0.05006261743217589,
        "getting": 0.05006261743217589,
        "started": 0.05006261743217589,
        "suggestions": 0.05006261743217589,
        "3": 0.15018785229652767,
        "generate": 0.10012523486435178,
        "sections": 0.20025046972870356,
        "sequentially": 0.05006261743217589,
        "streaming": 0.05006261743217589,
        "4": 0.10012523486435178,
        "post": 0.10012523486435178,
        "process": 0.10012523486435178,
        "toc": 0.05006261743217589,
        "badges": 0.05006261743217589,
        "status": 0.05006261743217589,
        "placeholder": 0.05006261743217589,
        "lint": 0.05006261743217589,
        "5": 0.10012523486435178,
        "publish": 0.05006261743217589,
        "direct": 0.05006261743217589,
        "commit": 0.10012523486435178,
        "md": 0.05006261743217589,
        "artifacts": 0.05006261743217589,
        "on": 0.05006261743217589,
        "pr": 0.10012523486435178,
        "detect": 0.05006261743217589,
        "changes": 0.05006261743217589,
        "git": 0.05006261743217589,
        "diff": 0.05006261743217589,
        "map": 0.05006261743217589,
        "files": 0.05006261743217589,
        "to": 0.15018785229652767,
        "using": 0.05006261743217589,
        "a": 0.05006261743217589,
        "rules": 0.05006261743217589,
        "matrix": 0.05006261743217589,
        "test": 0.05006261743217589,
        "quick": 0.05006261743217589,
        "start": 0.05006261743217589,
        "k8s": 0.05006261743217589,
        "deployment": 0.05006261743217589,
        "entrypoints": 0.05006261743217589,
        "architecture": 0.05006261743217589,
        "features": 0.05006261743217589,
        "decide": 0.05006261743217589,
        "updateplan": 0.05006261743217589,
        "patch": 0.05006261743217589,
        "impacted": 0.05006261743217589,
        "regenerate": 0.15018785229652767,
        "those": 0.05006261743217589,
        "skip": 0.05006261743217589,
        "changed": 0.05006261743217589,
        "file": 0.05006261743217589,
        "matches": 0.05006261743217589,
        "yml": 0.05006261743217589,
        "allows": 0.05006261743217589,
        "avoid": 0.05006261743217589,
        "unnecessary": 0.05006261743217589,
        "runs": 0.05006261743217589,
        "rag": 0.05006261743217589,
        "retrieval": 0.05006261743217589,
        "fetch": 0.05006261743217589,
        "top": 0.05006261743217589,
        "k": 0.05006261743217589,
        "chunks": 0.05006261743217589,
        "relevant": 0.05006261743217589,
        "each": 0.05006261743217589,
        "section": 0.10012523486435178,
        "open": 0.05006261743217589,
        "summary": 0.05006261743217589,
        "of": 0.05006261743217589,
        "deltas": 0.05006261743217589,
        "dry": 0.10012523486435178,
        "run": 0.10012523486435178,
        "support": 0.05006261743217589,
        "computes": 0.05006261743217589,
        "diffs": 0.05006261743217589,
        "scorecards": 0.05006261743217589,
        "writing": 0.05006261743217589,
        "or": 0.10012523486435178,
        "publishing": 0.05006261743217589,
        "manual": 0.05006261743217589,
        "full": 0.05006261743217589,
        "intro": 0.05006261743217589,
        "arch": 0.05006261743217589,
        "7": 0.05006261743217589,
        "contract": 0.05006261743217589
      },
      "text": "- \"node_modules/\" - \"dist/\" ci: # Only update README if these paths change watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" - \"requirements.txt\" - \"pyproject.toml\" - \"Dockerfile\" ``` > If no `readme.templates_dir` is provided, docgen automatically picks up `docs/templates/` bundles in the repository root and supports built-in template packs via `readme.template_pack`. --- ## 6) Workflows ### 6.1 Initialization (Repo without README) 1. **Scan & Analyze** \u2192 Manifest + Signals + Embeddings. 2. **Prompt Build** with default templates, include \u201cgetting started\u201d suggestions. 3. **Generate Sections** sequentially (streaming). 4. **Post-process** \u2192 ToC, badges (build status placeholder), lint. 5. **Publish**: direct commit `README.md` + `.docgen/` artifacts. ### 6.2 Update on Commit/PR 1. **Detect changes** via Git diff; map files to sections using a rules matrix: * `pom.xml`/`build.gradle` \u2192 *Build & Test*, *Quick Start*. * `Dockerfile`/`k8s` \u2192 *Deployment*. * `src/**` entrypoints \u2192 *Architecture*, *Features*. 2. **Decide UpdatePlan**: patch impacted sections; regenerate only those. 3. **Skip** if no changed file matches `.docgen.yml` `ci.watched_globs` (allows CI to avoid unnecessary runs). 4. **RAG retrieval**: fetch top-k chunks relevant to each section. 5. **Generate** \u2192 **Post-process** \u2192 **Open PR** with summary of deltas. 6. Dry-run support: `docgen update --dry-run` computes diffs and scorecards without writing or publishing. ### 6.3 Regenerate (Manual) * `docgen regenerate --full` or `--sections intro,arch`. --- ## 7) Section Contract",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#8",
      "vector": {
        "generate": 0.05923488777590923,
        "post": 0.11846977555181847,
        "process": 0.05923488777590923,
        "open": 0.05923488777590923,
        "pr": 0.05923488777590923,
        "with": 0.05923488777590923,
        "summary": 0.05923488777590923,
        "of": 0.05923488777590923,
        "deltas": 0.05923488777590923,
        "6": 0.11846977555181847,
        "dry": 0.11846977555181847,
        "run": 0.11846977555181847,
        "support": 0.11846977555181847,
        "docgen": 0.11846977555181847,
        "update": 0.05923488777590923,
        "computes": 0.05923488777590923,
        "diffs": 0.05923488777590923,
        "and": 0.11846977555181847,
        "scorecards": 0.05923488777590923,
        "without": 0.05923488777590923,
        "writing": 0.05923488777590923,
        "or": 0.1777046633277277,
        "publishing": 0.05923488777590923,
        "3": 0.05923488777590923,
        "regenerate": 0.11846977555181847,
        "manual": 0.05923488777590923,
        "full": 0.05923488777590923,
        "sections": 0.05923488777590923,
        "intro": 0.11846977555181847,
        "arch": 0.05923488777590923,
        "7": 0.05923488777590923,
        "section": 0.23693955110363693,
        "contract": 0.05923488777590923,
        "readme": 0.05923488777590923,
        "what": 0.05923488777590923,
        "why": 0.05923488777590923,
        "who": 0.05923488777590923,
        "it": 0.05923488777590923,
        "s": 0.05923488777590923,
        "for": 0.05923488777590923,
        "key": 0.05923488777590923,
        "features": 0.05923488777590923,
        "bullets": 0.05923488777590923,
        "grounded": 0.05923488777590923,
        "in": 0.05923488777590923,
        "real": 0.05923488777590923,
        "repo": 0.11846977555181847,
        "signals": 0.11846977555181847,
        "architecture": 0.05923488777590923,
        "overview": 0.05923488777590923,
        "diagram": 0.05923488777590923,
        "ascii": 0.05923488777590923,
        "components": 0.05923488777590923,
        "quick": 0.05923488777590923,
        "start": 0.05923488777590923,
        "minimal": 0.05923488777590923,
        "commands": 0.23693955110363693,
        "per": 0.11846977555181847,
        "build": 0.11846977555181847,
        "system": 0.11846977555181847,
        "configuration": 0.05923488777590923,
        "env": 0.05923488777590923,
        "vars": 0.05923488777590923,
        "files": 0.05923488777590923,
        "examples": 0.05923488777590923,
        "test": 0.05923488777590923,
        "coverage": 0.05923488777590923,
        "hint": 0.05923488777590923,
        "deployment": 0.05923488777590923,
        "container": 0.05923488777590923,
        "k8s": 0.05923488777590923,
        "instructions": 0.05923488777590923,
        "if": 0.1777046633277277,
        "detected": 0.1777046633277277,
        "troubleshooting": 0.05923488777590923,
        "common": 0.05923488777590923,
        "failures": 0.05923488777590923,
        "faq": 0.05923488777590923,
        "5": 0.05923488777590923,
        "10": 0.05923488777590923,
        "concise": 0.05923488777590923,
        "q": 0.05923488777590923,
        "a": 0.11846977555181847,
        "contributing": 0.11846977555181847,
        "md": 0.05923488777590923,
        "absent": 0.05923488777590923,
        "license": 0.05923488777590923,
        "templated": 0.05923488777590923,
        "each": 0.05923488777590923,
        "must": 0.05923488777590923,
        "be": 0.11846977555181847,
        "independently": 0.05923488777590923,
        "regenerable": 0.05923488777590923,
        "self": 0.05923488777590923,
        "contained": 0.05923488777590923,
        "8": 0.05923488777590923,
        "prompting": 0.05923488777590923,
        "strategy": 0.05923488777590923,
        "local": 0.05923488777590923,
        "llm": 0.05923488777590923,
        "message": 0.11846977555181847,
        "fixed": 0.05923488777590923,
        "guardrails": 0.05923488777590923,
        "you": 0.05923488777590923,
        "are": 0.05923488777590923,
        "senior": 0.05923488777590923,
        "dev": 0.05923488777590923,
        "doc": 0.05923488777590923,
        "writer": 0.05923488777590923,
        "precise": 0.05923488777590923,
        "cite": 0.05923488777590923,
        "facts": 0.05923488777590923,
        "only": 0.05923488777590923,
        "no": 0.05923488777590923,
        "speculation": 0.05923488777590923,
        "never": 0.05923488777590923,
        "invent": 0.05923488777590923,
        "prefer": 0.05923488777590923,
        "by": 0.05923488777590923,
        "analyzers": 0.05923488777590923,
        "user": 0.05923488777590923,
        "objective": 0.05923488777590923,
        "constraints": 0.05923488777590923,
        "tone": 0.05923488777590923,
        "length": 0.05923488777590923,
        "inject": 0.05923488777590923,
        "top": 0.05923488777590923,
        "k": 0.05923488777590923,
        "chunks": 0.05923488777590923,
        "rag": 0.05923488777590923,
        "provide": 0.05923488777590923,
        "style": 0.05923488777590923,
        "tokens": 0.05923488777590923,
        "headings": 0.05923488777590923,
        "code": 0.05923488777590923,
        "blocks": 0.05923488777590923,
        "tables": 0.05923488777590923,
        "filters": 0.05923488777590923,
        "refuse": 0.05923488777590923,
        "insufficient": 0.05923488777590923,
        "evidence": 0.05923488777590923,
        "fall": 0.05923488777590923,
        "back": 0.05923488777590923,
        "to": 0.05923488777590923,
        "template": 0.05923488777590923,
        "stubs": 0.05923488777590923,
        "9": 0.05923488777590923,
        "language": 0.05923488777590923,
        "project": 0.05923488777590923,
        "poc": 0.11846977555181847,
        "targets": 0.05923488777590923,
        "tier": 0.11846977555181847,
        "1": 0.05923488777590923,
        "python": 0.05923488777590923,
        "poetry": 0.05923488777590923,
        "setuptools": 0.05923488777590923,
        "java": 0.05923488777590923,
        "maven": 0.05923488777590923,
        "gradle": 0.05923488777590923,
        "spring": 0.05923488777590923,
        "boot": 0.05923488777590923,
        "node": 0.05923488777590923,
        "js": 0.05923488777590923,
        "npm": 0.05923488777590923,
        "pnpm": 0.05923488777590923,
        "express": 0.05923488777590923,
        "next": 0.05923488777590923,
        "2": 0.05923488777590923,
        "soon": 0.05923488777590923,
        "go": 0.05923488777590923,
        "modules": 0.05923488777590923
      },
      "text": "**Generate** \u2192 **Post-process** \u2192 **Open PR** with summary of deltas. 6. Dry-run support: `docgen update --dry-run` computes diffs and scorecards without writing or publishing. ### 6.3 Regenerate (Manual) * `docgen regenerate --full` or `--sections intro,arch`. --- ## 7) Section Contract (README) * **Intro**: what, why, who it\u2019s for * **Key Features**: bullets grounded in real repo signals * **Architecture**: overview diagram (ASCII) + components * **Quick Start**: minimal commands (per build system) * **Configuration**: env vars, files, examples * **Build & Test**: commands, coverage hint * **Deployment**: container/K8s instructions if detected * **Troubleshooting**: common failures * **FAQ**: 5\u201310 concise Q\\&A * **Contributing** (if `CONTRIBUTING.md` absent) * **License** (detected or templated) > Each section must be independently regenerable and self-contained. --- ## 8) Prompting Strategy (Local LLM) * **System message (fixed guardrails)**: * \u201cYou are a senior dev doc writer. Be precise. Cite repo facts only. No speculation.\u201d * \u201cNever invent commands. Prefer commands detected by analyzers.\u201d * **User message per section**: * Section objective + constraints (tone, length). * Inject **Signals** + **Top-k chunks** (RAG). * Provide **style tokens** (headings, code blocks, tables). * **Post-filters**: refuse if insufficient evidence; fall back to template stubs. --- ## 9) Language & Project Support (POC targets) * **Tier-1 (POC)**: Python (Poetry/Setuptools), Java (Maven/Gradle, Spring Boot), Node.js (npm/pnpm, Express/Next). * **Tier-2 (soon)**: Go (modules),",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#9",
      "vector": {
        "code": 0.0636929755298482,
        "blocks": 0.0318464877649241,
        "tables": 0.0318464877649241,
        "post": 0.0636929755298482,
        "filters": 0.0318464877649241,
        "refuse": 0.0318464877649241,
        "if": 0.0318464877649241,
        "insufficient": 0.0318464877649241,
        "evidence": 0.0318464877649241,
        "fall": 0.0318464877649241,
        "back": 0.0318464877649241,
        "to": 0.0318464877649241,
        "template": 0.0318464877649241,
        "stubs": 0.0636929755298482,
        "9": 0.0318464877649241,
        "language": 0.0636929755298482,
        "project": 0.0318464877649241,
        "support": 0.0318464877649241,
        "poc": 0.0636929755298482,
        "targets": 0.0318464877649241,
        "tier": 0.0636929755298482,
        "1": 0.0318464877649241,
        "python": 0.0955394632947723,
        "poetry": 0.0318464877649241,
        "setuptools": 0.0318464877649241,
        "java": 0.0318464877649241,
        "maven": 0.0318464877649241,
        "gradle": 0.0318464877649241,
        "spring": 0.0636929755298482,
        "boot": 0.0318464877649241,
        "node": 0.0318464877649241,
        "js": 0.0318464877649241,
        "npm": 0.0318464877649241,
        "pnpm": 0.0318464877649241,
        "express": 0.0318464877649241,
        "next": 0.0318464877649241,
        "2": 0.0318464877649241,
        "soon": 0.0318464877649241,
        "go": 0.0318464877649241,
        "modules": 0.0318464877649241,
        "rust": 0.0318464877649241,
        "cargo": 0.0318464877649241,
        "ruby": 0.0318464877649241,
        "bundler": 0.0318464877649241,
        "php": 0.0318464877649241,
        "composer": 0.0318464877649241,
        "detection": 0.0318464877649241,
        "via": 0.0318464877649241,
        "file": 0.0318464877649241,
        "heuristics": 0.0318464877649241,
        "optional": 0.0636929755298482,
        "tree": 0.0318464877649241,
        "sitter": 0.0318464877649241,
        "for": 0.0636929755298482,
        "function": 0.0318464877649241,
        "class": 0.0636929755298482,
        "extraction": 0.0318464877649241,
        "pluggable": 0.0318464877649241,
        "entry": 0.0318464877649241,
        "points": 0.0318464877649241,
        "main": 0.0636929755298482,
        "springbootapplication": 0.0318464877649241,
        "fastapi": 0.0636929755298482,
        "app": 0.1273859510596964,
        "bin": 0.0318464877649241,
        "cmd": 0.0318464877649241,
        "10": 0.0318464877649241,
        "interfaces": 0.0318464877649241,
        "skeleton": 0.0318464877649241,
        "docgen": 0.0318464877649241,
        "__init__": 0.0318464877649241,
        "py": 0.7961621941231025,
        "cli": 0.0955394632947723,
        "click": 0.0318464877649241,
        "typer": 0.0636929755298482,
        "failsafe": 0.0318464877649241,
        "fail": 0.0318464877649241,
        "safe": 0.0318464877649241,
        "readme": 0.0318464877649241,
        "logging": 0.0636929755298482,
        "configuration": 0.0318464877649241,
        "helpers": 0.0318464877649241,
        "orchestrator": 0.0318464877649241,
        "repo_scanner": 0.0318464877649241,
        "analyzers": 0.0318464877649241,
        "base": 0.0318464877649241,
        "analyzer": 0.0955394632947723,
        "abc": 0.1592324388246205,
        "build": 0.0318464877649241,
        "dependencies": 0.0318464877649241,
        "entrypoints": 0.0318464877649241,
        "patterns": 0.0318464877649241,
        "rag": 0.0318464877649241,
        "embedder": 0.0318464877649241,
        "local": 0.0318464877649241,
        "embedding": 0.0318464877649241,
        "model": 0.0318464877649241,
        "store": 0.0318464877649241,
        "prompting": 0.0318464877649241,
        "builder": 0.0318464877649241,
        "jinja2": 0.0318464877649241,
        "templates": 0.0636929755298482,
        "token": 0.0318464877649241,
        "mgmt": 0.0318464877649241,
        "constants": 0.0318464877649241,
        "j2": 0.0318464877649241,
        "per": 0.0318464877649241,
        "section": 0.0318464877649241,
        "llm": 0.0318464877649241,
        "runner": 0.0318464877649241,
        "adapter": 0.0318464877649241,
        "ollama": 0.0318464877649241,
        "llama": 0.0318464877649241,
        "cpp": 0.0318464877649241,
        "postproc": 0.0318464877649241,
        "lint": 0.0318464877649241,
        "links": 0.0318464877649241,
        "markers": 0.0318464877649241,
        "toc": 0.0318464877649241,
        "git": 0.0318464877649241,
        "diff": 0.0318464877649241,
        "publisher": 0.0318464877649241,
        "config": 0.0318464877649241,
        "models": 0.0636929755298482,
        "from": 0.0636929755298482,
        "import": 0.0636929755298482,
        "abstractmethod": 0.0955394632947723,
        "repomanifest": 0.0955394632947723,
        "signal": 0.0636929755298482,
        "def": 0.1592324388246205,
        "supports": 0.0318464877649241,
        "self": 0.0636929755298482,
        "manifest": 0.0636929755298482,
        "bool": 0.0955394632947723,
        "analyze": 0.0318464877649241,
        "list": 0.0318464877649241,
        "command": 0.0955394632947723,
        "init": 0.0318464877649241,
        "path": 0.0636929755298482,
        "str": 0.1592324388246205,
        "publish": 0.0318464877649241,
        "true": 0.0318464877649241,
        "update": 0.0318464877649241,
        "event": 0.0318464877649241,
        "commit": 0.0318464877649241,
        "diff_base": 0.0318464877649241,
        "origin": 0.0318464877649241,
        "regenerate": 0.0318464877649241,
        "sections": 0.0318464877649241,
        "full": 0.0318464877649241,
        "false": 0.0318464877649241,
        "service": 0.0318464877649241,
        "mode": 0.0318464877649241
      },
      "text": "code blocks, tables). * **Post-filters**: refuse if insufficient evidence; fall back to template stubs. --- ## 9) Language & Project Support (POC targets) * **Tier-1 (POC)**: Python (Poetry/Setuptools), Java (Maven/Gradle, Spring Boot), Node.js (npm/pnpm, Express/Next). * **Tier-2 (soon)**: Go (modules), Rust (Cargo), Ruby (Bundler), PHP (Composer). * Detection via: * File heuristics + optional tree-sitter for function/class extraction (pluggable). * Entry points: `main()`; Spring `@SpringBootApplication`; FastAPI app; `bin/`, `cmd/`. --- ## 10) Interfaces (Code Skeleton) ``` docgen/ __init__.py cli.py # click/typer CLI failsafe.py # fail-safe README stubs logging.py # logging configuration helpers orchestrator.py repo_scanner.py analyzers/ base.py # Analyzer ABC language.py build.py dependencies.py entrypoints.py patterns.py rag/ embedder.py # local embedding model store.py prompting/ builder.py # Jinja2 templates, token mgmt constants.py templates/ # *.j2 per section llm/ runner.py # adapter for ollama/llama.cpp postproc/ lint.py links.py markers.py toc.py git/ diff.py publisher.py config.py models.py ``` **Analyzer ABC** ```python from abc import ABC, abstractmethod from .models import RepoManifest, Signal class Analyzer(ABC): @abstractmethod def supports(self, manifest: RepoManifest) -> bool: ... @abstractmethod def analyze(self, manifest: RepoManifest) -> list[Signal]: ... ``` **CLI (Typer)** ```python @app.command() def init(path: str = \".\", publish: bool = True): ... @app.command() def update(path: str = \".\", event: str = \"commit\", diff_base: str = \"origin/main\"): ... @app.command() def regenerate(sections: str = \"\", full: bool = False): ... ``` **FastAPI (optional service mode)** * `POST",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#10",
      "vector": {
        "publish": 0.17586311452816478,
        "bool": 0.11724207635210984,
        "true": 0.05862103817605492,
        "app": 0.17586311452816478,
        "command": 0.11724207635210984,
        "def": 0.11724207635210984,
        "update": 0.17586311452816478,
        "path": 0.11724207635210984,
        "str": 0.23448415270421968,
        "event": 0.05862103817605492,
        "commit": 0.11724207635210984,
        "diff_base": 0.05862103817605492,
        "origin": 0.05862103817605492,
        "main": 0.05862103817605492,
        "regenerate": 0.05862103817605492,
        "sections": 0.23448415270421968,
        "full": 0.05862103817605492,
        "false": 0.05862103817605492,
        "fastapi": 0.05862103817605492,
        "optional": 0.11724207635210984,
        "service": 0.05862103817605492,
        "mode": 0.05862103817605492,
        "post": 0.35172622905632955,
        "analyze": 0.05862103817605492,
        "generate": 0.05862103817605492,
        "arch": 0.05862103817605492,
        "quickstart": 0.17586311452816478,
        "get": 0.05862103817605492,
        "status": 0.05862103817605492,
        "run_id": 0.05862103817605492,
        "11": 0.05862103817605492,
        "change": 0.05862103817605492,
        "impact": 0.05862103817605492,
        "matrix": 0.05862103817605492,
        "examples": 0.05862103817605492,
        "changed": 0.11724207635210984,
        "pattern": 0.05862103817605492,
        "to": 0.11724207635210984,
        "rebuild": 0.05862103817605492,
        "notes": 0.05862103817605492,
        "pom": 0.05862103817605492,
        "xml": 0.05862103817605492,
        "build": 0.23448415270421968,
        "gradle": 0.05862103817605492,
        "_and": 0.11724207635210984,
        "_test": 0.11724207635210984,
        "recompute": 0.05862103817605492,
        "commands": 0.05862103817605492,
        "requirements": 0.05862103817605492,
        "txt": 0.05862103817605492,
        "pyproject": 0.05862103817605492,
        "toml": 0.05862103817605492,
        "install": 0.05862103817605492,
        "steps": 0.05862103817605492,
        "dockerfile": 0.05862103817605492,
        "k8s": 0.05862103817605492,
        "deployment": 0.05862103817605492,
        "container": 0.05862103817605492,
        "changes": 0.05862103817605492,
        "src": 0.05862103817605492,
        "cmd": 0.05862103817605492,
        "features": 0.05862103817605492,
        "architecture": 0.17586311452816478,
        "if": 0.05862103817605492,
        "entrypoint": 0.05862103817605492,
        "intro": 0.05862103817605492,
        "too": 0.05862103817605492,
        "docs": 0.05862103817605492,
        "all": 0.05862103817605492,
        "patch": 0.05862103817605492,
        "prefer": 0.05862103817605492,
        "doc": 0.05862103817605492,
        "driven": 0.05862103817605492,
        "readme": 0.11724207635210984,
        "md": 0.05862103817605492,
        "none": 0.05862103817605492,
        "unless": 0.05862103817605492,
        "empty": 0.05862103817605492,
        "prevent": 0.05862103817605492,
        "loops": 0.05862103817605492,
        "12": 0.05862103817605492,
        "processing": 0.05862103817605492,
        "rules": 0.05862103817605492,
        "headings": 0.05862103817605492,
        "start": 0.05862103817605492,
        "at": 0.05862103817605492,
        "for": 0.11724207635210984,
        "title": 0.05862103817605492,
        "then": 0.05862103817605492,
        "add": 0.05862103817605492,
        "auto": 0.05862103817605492,
        "toc": 0.05862103817605492,
        "level": 0.05862103817605492,
        "3": 0.05862103817605492,
        "validate": 0.05862103817605492,
        "code": 0.05862103817605492,
        "blocks": 0.05862103817605492,
        "bash": 0.05862103817605492,
        "python": 0.05862103817605492,
        "convert": 0.05862103817605492,
        "absolute": 0.05862103817605492,
        "github": 0.05862103817605492,
        "links": 0.05862103817605492,
        "relative": 0.05862103817605492,
        "where": 0.05862103817605492,
        "possible": 0.05862103817605492,
        "ensure": 0.05862103817605492,
        "idempotency": 0.05862103817605492,
        "only": 0.05862103817605492,
        "edit": 0.05862103817605492,
        "between": 0.05862103817605492,
        "managed": 0.05862103817605492,
        "markers": 0.11724207635210984,
        "docgen": 0.11724207635210984,
        "begin": 0.05862103817605492,
        "end": 0.05862103817605492,
        "13": 0.05862103817605492,
        "git": 0.05862103817605492,
        "ci": 0.05862103817605492,
        "integration": 0.05862103817605492,
        "local": 0.05862103817605492,
        "pre": 0.05862103817605492,
        "forbid": 0.05862103817605492,
        "direct": 0.05862103817605492,
        "edits": 0.05862103817605492,
        "outside": 0.05862103817605492,
        "merge": 0.05862103817605492,
        "checkout": 0.05862103817605492,
        "remind": 0.05862103817605492
      },
      "text": "= \".\", publish: bool = True): ... @app.command() def update(path: str = \".\", event: str = \"commit\", diff_base: str = \"origin/main\"): ... @app.command() def regenerate(sections: str = \"\", full: bool = False): ... ``` **FastAPI (optional service mode)** * `POST /analyze` * `POST /generate?sections=arch,quickstart` * `POST /publish` * `GET /status/{run_id}` --- ## 11) Change Impact Matrix (examples) | Changed Path Pattern | Sections to Rebuild | Notes | | ------------------------------------ | ---------------------------- | --------------------------------------- | | `pom.xml`, `build.gradle*` | build\\_and\\_test, quickstart | Recompute build commands | | `requirements.txt`, `pyproject.toml` | build\\_and\\_test, quickstart | Update install steps | | `Dockerfile`, `k8s/**` | deployment | Publish container changes | | `src/**`, `app/**`, `cmd/**` | features, architecture | If entrypoint changed, update intro too | | `docs/**` | all (patch) | Prefer doc-driven | | `README.md` | none (unless empty) | Prevent loops | --- ## 12) Post-Processing Rules * Headings start at `#` for title then `##` for sections. * Add **auto ToC** (<= level 3). * Validate code blocks (` ```bash`, ` ```python`). * Convert absolute GitHub links to relative where possible. * Ensure **idempotency**: only edit between managed markers: * `<!-- docgen:begin:architecture -->` \u2026 `<!-- docgen:end:architecture -->` --- ## 13) Git & CI Integration ### Local * **pre-commit**: forbid direct README edits outside markers (optional). * **post-merge / post-checkout**: remind",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#11",
      "vector": {
        "possible": 0.11162911443718952,
        "ensure": 0.05581455721859476,
        "idempotency": 0.05581455721859476,
        "only": 0.16744367165578428,
        "edit": 0.05581455721859476,
        "between": 0.05581455721859476,
        "managed": 0.05581455721859476,
        "markers": 0.11162911443718952,
        "docgen": 0.22325822887437904,
        "begin": 0.05581455721859476,
        "architecture": 0.11162911443718952,
        "end": 0.05581455721859476,
        "13": 0.05581455721859476,
        "git": 0.11162911443718952,
        "ci": 0.11162911443718952,
        "integration": 0.05581455721859476,
        "local": 0.16744367165578428,
        "pre": 0.05581455721859476,
        "commit": 0.05581455721859476,
        "forbid": 0.05581455721859476,
        "direct": 0.05581455721859476,
        "readme": 0.05581455721859476,
        "edits": 0.05581455721859476,
        "outside": 0.05581455721859476,
        "optional": 0.16744367165578428,
        "post": 0.16744367165578428,
        "merge": 0.05581455721859476,
        "checkout": 0.11162911443718952,
        "remind": 0.05581455721859476,
        "to": 0.05581455721859476,
        "run": 0.05581455721859476,
        "update": 0.16744367165578428,
        "github": 0.11162911443718952,
        "gitlab": 0.05581455721859476,
        "bitbucket": 0.05581455721859476,
        "on": 0.05581455721859476,
        "push": 0.05581455721859476,
        "pr": 0.2790727860929738,
        "1": 0.11162911443718952,
        "repo": 0.11162911443718952,
        "2": 0.16744367165578428,
        "event": 0.05581455721859476,
        "diff": 0.11162911443718952,
        "base": 0.05581455721859476,
        "base_sha": 0.05581455721859476,
        "3": 0.05581455721859476,
        "if": 0.16744367165578428,
        "changes": 0.05581455721859476,
        "open": 0.05581455721859476,
        "with": 0.05581455721859476,
        "labeled": 0.05581455721859476,
        "docs": 0.11162911443718952,
        "auto": 0.05581455721859476,
        "tokenless": 0.05581455721859476,
        "mode": 0.05581455721859476,
        "created": 0.05581455721859476,
        "from": 0.05581455721859476,
        "a": 0.05581455721859476,
        "app": 0.05581455721859476,
        "bot": 0.05581455721859476,
        "account": 0.05581455721859476,
        "14": 0.05581455721859476,
        "quality": 0.05581455721859476,
        "gates": 0.05581455721859476,
        "evaluation": 0.05581455721859476,
        "consistency": 0.05581455721859476,
        "checks": 0.05581455721859476,
        "commands": 0.11162911443718952,
        "exist": 0.05581455721859476,
        "in": 0.11162911443718952,
        "ports": 0.05581455721859476,
        "env": 0.05581455721859476,
        "vars": 0.05581455721859476,
        "match": 0.05581455721859476,
        "configs": 0.05581455721859476,
        "no": 0.11162911443718952,
        "hallucinations": 0.05581455721859476,
        "reject": 0.05581455721859476,
        "new": 0.05581455721859476,
        "facts": 0.05581455721859476,
        "not": 0.05581455721859476,
        "found": 0.11162911443718952,
        "signals": 0.05581455721859476,
        "rag": 0.11162911443718952,
        "style": 0.05581455721859476,
        "concise": 0.05581455721859476,
        "paragraphs": 0.05581455721859476,
        "actionable": 0.05581455721859476,
        "filler": 0.05581455721859476,
        "marketing": 0.05581455721859476,
        "scorecard": 0.05581455721859476,
        "0": 0.05581455721859476,
        "100": 0.05581455721859476,
        "coverage": 0.05581455721859476,
        "of": 0.11162911443718952,
        "required": 0.05581455721859476,
        "sections": 0.05581455721859476,
        "30": 0.05581455721859476,
        "buildability": 0.05581455721859476,
        "quick": 0.05581455721859476,
        "start": 0.05581455721859476,
        "20": 0.11162911443718952,
        "link": 0.05581455721859476,
        "validity": 0.05581455721859476,
        "10": 0.16744367165578428,
        "alignment": 0.05581455721859476,
        "w": 0.05581455721859476,
        "change": 0.05581455721859476,
        "set": 0.05581455721859476,
        "lint": 0.05581455721859476,
        "reviewer": 0.05581455721859476,
        "feedback": 0.05581455721859476,
        "loop": 0.05581455721859476,
        "15": 0.05581455721859476,
        "security": 0.05581455721859476,
        "privacy": 0.05581455721859476,
        "llm": 0.11162911443718952,
        "and": 0.05581455721859476,
        "embedding": 0.05581455721859476,
        "models": 0.05581455721859476,
        "respect": 0.05581455721859476,
        "gitignore": 0.05581455721859476,
        "configurable": 0.05581455721859476,
        "exclude_paths": 0.05581455721859476,
        "never": 0.05581455721859476,
        "index": 0.05581455721859476,
        "large": 0.05581455721859476,
        "binaries": 0.05581455721859476,
        "secret": 0.11162911443718952,
        "files": 0.05581455721859476,
        "simple": 0.05581455721859476,
        "scan": 0.05581455721859476,
        "block": 0.05581455721859476,
        "16": 0.05581455721859476,
        "mvp": 0.05581455721859476,
        "plan": 0.05581455721859476,
        "weeks": 0.05581455721859476,
        "suggested": 0.05581455721859476,
        "breakdown": 0.05581455721859476,
        "core": 0.05581455721859476,
        "path": 0.05581455721859476,
        "cli": 0.05581455721859476,
        "scanner": 0.05581455721859476,
        "language": 0.05581455721859476,
        "build": 0.05581455721859476,
        "analyzers": 0.05581455721859476,
        "python": 0.05581455721859476,
        "java": 0.05581455721859476,
        "node": 0.05581455721859476,
        "prompt": 0.05581455721859476,
        "builder": 0.05581455721859476,
        "runner": 0.05581455721859476,
        "ollama": 0.05581455721859476,
        "adapter": 0.05581455721859476,
        "processor": 0.05581455721859476,
        "publisher": 0.05581455721859476,
        "lite": 0.05581455721859476,
        "embed": 0.05581455721859476
      },
      "text": "possible. * Ensure **idempotency**: only edit between managed markers: * `<!-- docgen:begin:architecture -->` \u2026 `<!-- docgen:end:architecture -->` --- ## 13) Git & CI Integration ### Local * **pre-commit**: forbid direct README edits outside markers (optional). * **post-merge / post-checkout**: remind to run `docgen update` (optional). ### CI (GitHub/GitLab/Bitbucket) * On push/PR: 1. Checkout repo. 2. `docgen update --event pr --diff-base $BASE_SHA` 3. If changes \u2192 open/update PR with labeled `docs:auto`. * Tokenless mode possible if PR created from a GitHub App/bot account. --- ## 14) Quality Gates & Evaluation * **Consistency checks**: commands exist in repo; ports/env vars match configs. * **No hallucinations**: reject new facts not found in signals/RAG. * **Style**: concise paragraphs, actionable commands, no filler marketing. * **Scorecard** (0\u2013100): * Coverage of required sections (30) * Buildability of quick start (20) * Link validity (10) * Diff alignment w/ change set (20) * Lint (10) * Reviewer feedback loop (10) --- ## 15) Security & Privacy * **Local only** LLM and embedding models. * Respect `.gitignore` + configurable `exclude_paths`. * Never index large binaries/secret files. * Optional simple **secret scan**; block if found. --- ## 16) MVP Plan (2 weeks suggested breakdown) 1. **Core path**: CLI, Scanner, Language+Build analyzers (Python/Java/Node), Prompt Builder, Local LLM runner (Ollama adapter), Post-processor, Git Publisher (PR). 2. **RAG Lite**: embed only `/docs`,",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#12",
      "vector": {
        "simple": 0.058823529411764705,
        "secret": 0.058823529411764705,
        "scan": 0.058823529411764705,
        "block": 0.058823529411764705,
        "if": 0.058823529411764705,
        "found": 0.058823529411764705,
        "16": 0.058823529411764705,
        "mvp": 0.058823529411764705,
        "plan": 0.058823529411764705,
        "2": 0.17647058823529413,
        "weeks": 0.058823529411764705,
        "suggested": 0.058823529411764705,
        "breakdown": 0.058823529411764705,
        "1": 0.11764705882352941,
        "core": 0.058823529411764705,
        "path": 0.058823529411764705,
        "cli": 0.058823529411764705,
        "scanner": 0.058823529411764705,
        "language": 0.058823529411764705,
        "build": 0.17647058823529413,
        "analyzers": 0.058823529411764705,
        "python": 0.17647058823529413,
        "java": 0.058823529411764705,
        "node": 0.058823529411764705,
        "prompt": 0.058823529411764705,
        "builder": 0.058823529411764705,
        "local": 0.058823529411764705,
        "llm": 0.058823529411764705,
        "runner": 0.058823529411764705,
        "ollama": 0.058823529411764705,
        "adapter": 0.058823529411764705,
        "post": 0.058823529411764705,
        "processor": 0.058823529411764705,
        "git": 0.058823529411764705,
        "publisher": 0.058823529411764705,
        "pr": 0.11764705882352941,
        "rag": 0.058823529411764705,
        "lite": 0.058823529411764705,
        "embed": 0.058823529411764705,
        "only": 0.058823529411764705,
        "docs": 0.058823529411764705,
        "existing": 0.058823529411764705,
        "readme": 0.11764705882352941,
        "top": 0.058823529411764705,
        "20": 0.058823529411764705,
        "largest": 0.058823529411764705,
        "source": 0.058823529411764705,
        "files": 0.058823529411764705,
        "heads": 0.058823529411764705,
        "3": 0.058823529411764705,
        "triggers": 0.058823529411764705,
        "single": 0.058823529411764705,
        "commit": 0.058823529411764705,
        "mode": 0.11764705882352941,
        "as": 0.11764705882352941,
        "stretch": 0.058823529411764705,
        "4": 0.058823529411764705,
        "templates": 0.11764705882352941,
        "8": 0.058823529411764705,
        "sections": 0.058823529411764705,
        "jinja2": 0.23529411764705882,
        "managed": 0.058823529411764705,
        "markers": 0.058823529411764705,
        "5": 0.058823529411764705,
        "config": 0.058823529411764705,
        "docgen": 0.058823529411764705,
        "yml": 0.058823529411764705,
        "minimal": 0.11764705882352941,
        "17": 0.17647058823529413,
        "example": 0.058823529411764705,
        "section": 0.11764705882352941,
        "template": 0.058823529411764705,
        "architecture": 0.23529411764705882,
        "j2": 0.11764705882352941,
        "project_name": 0.11764705882352941,
        "is": 0.058823529411764705,
        "structured": 0.058823529411764705,
        "ascii": 0.058823529411764705,
        "_architecture": 0.058823529411764705,
        "key": 0.058823529411764705,
        "components": 0.11764705882352941,
        "for": 0.11764705882352941,
        "comp": 0.17647058823529413,
        "in": 0.058823529411764705,
        "name": 0.058823529411764705,
        "summary": 0.058823529411764705,
        "endfor": 0.058823529411764705,
        "data": 0.058823529411764705,
        "flow": 0.058823529411764705,
        "data_flow": 0.058823529411764705,
        "generated": 0.058823529411764705,
        "from": 0.058823529411764705,
        "detected": 0.058823529411764705,
        "signals": 0.058823529411764705,
        "signals_summary": 0.058823529411764705,
        "frame": 0.058823529411764705,
        "composed": 0.058823529411764705,
        "intro": 0.058823529411764705,
        "features": 0.17647058823529413,
        "include": 0.058823529411764705,
        "quick": 0.058823529411764705,
        "start": 0.058823529411764705,
        "quickstart": 0.058823529411764705,
        "configuration": 0.11764705882352941,
        "test": 0.058823529411764705,
        "build_and_test": 0.11764705882352941,
        "deployment": 0.17647058823529413,
        "troubleshooting": 0.11764705882352941,
        "faq": 0.11764705882352941,
        "license": 0.11764705882352941,
        "18": 0.058823529411764705,
        "snippets": 0.058823529411764705,
        "change": 0.058823529411764705,
        "impact": 0.058823529411764705,
        "heuristic": 0.058823529411764705,
        "section_rules": 0.058823529411764705,
        "pom": 0.058823529411764705,
        "xml": 0.058823529411764705,
        "gradle": 0.058823529411764705,
        "requirements": 0.058823529411764705,
        "txt": 0.058823529411764705,
        "pyproject": 0.058823529411764705,
        "toml": 0.058823529411764705,
        "package": 0.058823529411764705,
        "json": 0.058823529411764705,
        "dockerfile": 0.058823529411764705,
        "k8s": 0.058823529411764705,
        "src": 0.11764705882352941,
        "app": 0.11764705882352941,
        "cmd": 0.11764705882352941,
        "def": 0.058823529411764705,
        "sections_from_diff": 0.058823529411764705,
        "paths": 0.058823529411764705,
        "list": 0.058823529411764705,
        "str": 0.11764705882352941,
        "set": 0.11764705882352941,
        "out": 0.058823529411764705
      },
      "text": "simple **secret scan**; block if found. --- ## 16) MVP Plan (2 weeks suggested breakdown) 1. **Core path**: CLI, Scanner, Language+Build analyzers (Python/Java/Node), Prompt Builder, Local LLM runner (Ollama adapter), Post-processor, Git Publisher (PR). 2. **RAG Lite**: embed only `/docs`, existing `README`, top 20 largest source files\u2019 heads. 3. **Triggers**: single \u201ccommit\u201d mode; PR mode as stretch. 4. **Templates**: 8 sections, Jinja2; managed markers. 5. **Config**: `.docgen.yml` minimal. --- ## 17) Example Templates ### 17.1 Section Template (Jinja2 \u2014 architecture.j2) ```jinja2 ## Architecture {{ project_name }} is structured as: ``` {{ ascii\\_architecture }} ``` **Key components** {% for comp in components %} - **{{ comp.name }}** \u2014 {{ comp.summary }} {% endfor %} **Data flow** {{ data_flow }} > Generated from detected signals: {{ signals_summary }} ``` ### 17.2 README Frame (composed) ```jinja2 # {{ project_name }} {{ intro }} ## Features {{ features }} {% include \"architecture.j2\" %} ## Quick Start {{ quickstart }} ## Configuration {{ configuration }} ## Build & Test {{ build_and_test }} ## Deployment {{ deployment }} ## Troubleshooting {{ troubleshooting }} ## FAQ {{ faq }} ## License {{ license }} ``` --- ## 18) Minimal Python Snippets **Change impact heuristic** ```python SECTION_RULES = [ (\"build_and_test\", [\"pom.xml\",\"build.gradle\",\"requirements.txt\",\"pyproject.toml\",\"package.json\"]), (\"deployment\", [\"Dockerfile\",\"k8s/\"]), (\"architecture\", [\"src/\",\"app/\",\"cmd/\"]), (\"features\", [\"src/\",\"app/\",\"cmd/\"]), ] def sections_from_diff(paths: list[str]) -> set[str]: out = set() for section,",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#13",
      "vector": {
        "faq": 0.04432422071779363,
        "license": 0.08864844143558726,
        "18": 0.04432422071779363,
        "minimal": 0.04432422071779363,
        "python": 0.13297266215338088,
        "snippets": 0.04432422071779363,
        "change": 0.04432422071779363,
        "impact": 0.04432422071779363,
        "heuristic": 0.04432422071779363,
        "section_rules": 0.08864844143558726,
        "build_and_test": 0.04432422071779363,
        "pom": 0.08864844143558726,
        "xml": 0.08864844143558726,
        "build": 0.13297266215338088,
        "gradle": 0.08864844143558726,
        "requirements": 0.04432422071779363,
        "txt": 0.04432422071779363,
        "pyproject": 0.04432422071779363,
        "toml": 0.04432422071779363,
        "package": 0.08864844143558726,
        "json": 0.08864844143558726,
        "deployment": 0.04432422071779363,
        "dockerfile": 0.04432422071779363,
        "k8s": 0.04432422071779363,
        "architecture": 0.04432422071779363,
        "src": 0.13297266215338088,
        "app": 0.13297266215338088,
        "cmd": 0.13297266215338088,
        "features": 0.04432422071779363,
        "def": 0.08864844143558726,
        "sections_from_diff": 0.04432422071779363,
        "paths": 0.08864844143558726,
        "list": 0.04432422071779363,
        "str": 0.26594532430676177,
        "set": 0.08864844143558726,
        "out": 0.13297266215338088,
        "for": 0.2216211035889681,
        "section": 0.08864844143558726,
        "patterns": 0.13297266215338088,
        "in": 0.2216211035889681,
        "if": 0.2216211035889681,
        "any": 0.04432422071779363,
        "p": 0.13297266215338088,
        "pat": 0.08864844143558726,
        "startswith": 0.04432422071779363,
        "add": 0.04432422071779363,
        "return": 0.13297266215338088,
        "or": 0.08864844143558726,
        "intro": 0.08864844143558726,
        "fall": 0.04432422071779363,
        "back": 0.04432422071779363,
        "to": 0.08864844143558726,
        "uncertain": 0.04432422071779363,
        "managed": 0.04432422071779363,
        "markers": 0.08864844143558726,
        "patch": 0.04432422071779363,
        "replace_block": 0.04432422071779363,
        "md": 0.2216211035889681,
        "key": 0.13297266215338088,
        "new": 0.08864844143558726,
        "start": 0.1772968828711745,
        "f": 0.13297266215338088,
        "docgen": 0.1772968828711745,
        "begin": 0.04432422071779363,
        "end": 0.2216211035889681,
        "and": 0.04432422071779363,
        "pre": 0.08864844143558726,
        "rest": 0.08864844143558726,
        "split": 0.08864844143558726,
        "1": 0.08864844143558726,
        "_": 0.04432422071779363,
        "post": 0.08864844143558726,
        "n": 0.08864844143558726,
        "insert": 0.04432422071779363,
        "missing": 0.04432422071779363,
        "19": 0.04432422071779363,
        "open": 0.04432422071779363,
        "questions": 0.04432422071779363,
        "trade": 0.04432422071779363,
        "offs": 0.04432422071779363,
        "embeddings": 0.04432422071779363,
        "use": 0.04432422071779363,
        "a": 0.13297266215338088,
        "tiny": 0.04432422071779363,
        "local": 0.04432422071779363,
        "model": 0.08864844143558726,
        "vs": 0.08864844143558726,
        "rule": 0.04432422071779363,
        "based": 0.04432422071779363,
        "retrieval": 0.04432422071779363,
        "mvp": 0.04432422071779363,
        "tree": 0.04432422071779363,
        "sitter": 0.04432422071779363,
        "adds": 0.04432422071779363,
        "power": 0.04432422071779363,
        "but": 0.04432422071779363,
        "increases": 0.04432422071779363,
        "footprint": 0.04432422071779363,
        "gate": 0.04432422071779363,
        "behind": 0.04432422071779363,
        "flag": 0.04432422071779363,
        "pr": 0.08864844143558726,
        "author": 0.04432422071779363,
        "bot": 0.04432422071779363,
        "account": 0.04432422071779363,
        "developer": 0.04432422071779363,
        "token": 0.04432422071779363,
        "decide": 0.04432422071779363,
        "per": 0.04432422071779363,
        "environment": 0.04432422071779363,
        "markdown": 0.04432422071779363,
        "diffs": 0.04432422071779363,
        "keep": 0.04432422071779363,
        "sections": 0.04432422071779363,
        "atomic": 0.04432422071779363,
        "minimize": 0.04432422071779363,
        "noisy": 0.04432422071779363,
        "prs": 0.04432422071779363,
        "20": 0.04432422071779363,
        "example": 0.04432422071779363,
        "yml": 0.04432422071779363,
        "mixed": 0.04432422071779363,
        "repo": 0.04432422071779363,
        "yaml": 0.04432422071779363,
        "llm": 0.04432422071779363,
        "runner": 0.04432422071779363,
        "ollama": 0.04432422071779363,
        "llama3": 0.04432422071779363,
        "8b": 0.04432422071779363,
        "instruct": 0.04432422071779363,
        "temperature": 0.04432422071779363,
        "0": 0.04432422071779363,
        "15": 0.04432422071779363,
        "readme": 0.04432422071779363,
        "style": 0.04432422071779363,
        "comprehensive": 0.04432422071779363,
        "publish": 0.04432422071779363,
        "mode": 0.04432422071779363,
        "branch_prefix": 0.04432422071779363,
        "analyzers": 0.04432422071779363,
        "enabled": 0.04432422071779363,
        "language": 0.04432422071779363,
        "dependencies": 0.04432422071779363,
        "exclude_paths": 0.04432422071779363,
        "git": 0.04432422071779363,
        "node_modules": 0.04432422071779363,
        "dist": 0.04432422071779363,
        "target": 0.04432422071779363,
        "ci": 0.04432422071779363,
        "watched_globs": 0.04432422071779363
      },
      "text": "faq }} ## License {{ license }} ``` --- ## 18) Minimal Python Snippets **Change impact heuristic** ```python SECTION_RULES = [ (\"build_and_test\", [\"pom.xml\",\"build.gradle\",\"requirements.txt\",\"pyproject.toml\",\"package.json\"]), (\"deployment\", [\"Dockerfile\",\"k8s/\"]), (\"architecture\", [\"src/\",\"app/\",\"cmd/\"]), (\"features\", [\"src/\",\"app/\",\"cmd/\"]), ] def sections_from_diff(paths: list[str]) -> set[str]: out = set() for section, patterns in SECTION_RULES: if any(p for p in paths for pat in patterns if p.startswith(pat)): out.add(section) return out or {\"intro\"} # fall back to intro if uncertain ``` **Managed markers (patch)** ```python def replace_block(md: str, key: str, new: str) -> str: start = f\"<!-- docgen:begin:{key} -->\" end = f\"<!-- docgen:end:{key} -->\" if start in md and end in md: pre, rest = md.split(start, 1) _, post = rest.split(end, 1) return f\"{pre}{start}\\n{new}\\n{end}{post}\" return md # or insert markers if missing ``` --- ## 19) Open Questions / Trade-offs * **Embeddings**: Use a tiny local model vs. rule-based retrieval for MVP? * **Tree-sitter**: Adds power but increases footprint\u2014gate behind a flag. * **PR author**: Bot account vs. developer token\u2014decide per environment. * **Markdown diffs**: Keep sections atomic to minimize noisy PRs. --- ## 20) Example `.docgen.yml` for a Mixed Repo ```yaml llm: runner: \"ollama\" model: \"llama3:8b-instruct\" temperature: 0.15 readme: style: \"comprehensive\" publish: mode: \"pr\" branch_prefix: \"docgen/\" analyzers: enabled: [language, build, dependencies, patterns] exclude_paths: [\".git/\", \"node_modules/\", \"dist/\", \"target/\"] ci: watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" -",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#14",
      "vector": {
        "runner": 0.07715167498104596,
        "ollama": 0.1543033499620919,
        "model": 0.07715167498104596,
        "llama3": 0.07715167498104596,
        "8b": 0.07715167498104596,
        "instruct": 0.07715167498104596,
        "temperature": 0.07715167498104596,
        "0": 0.07715167498104596,
        "15": 0.07715167498104596,
        "readme": 0.1543033499620919,
        "style": 0.1543033499620919,
        "comprehensive": 0.07715167498104596,
        "publish": 0.07715167498104596,
        "mode": 0.07715167498104596,
        "pr": 0.1543033499620919,
        "branch_prefix": 0.07715167498104596,
        "docgen": 0.23145502494313785,
        "analyzers": 0.1543033499620919,
        "enabled": 0.07715167498104596,
        "language": 0.07715167498104596,
        "build": 0.1543033499620919,
        "dependencies": 0.07715167498104596,
        "patterns": 0.07715167498104596,
        "exclude_paths": 0.07715167498104596,
        "git": 0.07715167498104596,
        "node_modules": 0.07715167498104596,
        "dist": 0.07715167498104596,
        "target": 0.07715167498104596,
        "ci": 0.07715167498104596,
        "watched_globs": 0.07715167498104596,
        "src": 0.07715167498104596,
        "app": 0.07715167498104596,
        "cmd": 0.07715167498104596,
        "pom": 0.1543033499620919,
        "xml": 0.1543033499620919,
        "gradle": 0.07715167498104596,
        "package": 0.07715167498104596,
        "json": 0.07715167498104596,
        "requirements": 0.1543033499620919,
        "txt": 0.1543033499620919,
        "dockerfile": 0.07715167498104596,
        "21": 0.07715167498104596,
        "success": 0.07715167498104596,
        "criteria": 0.07715167498104596,
        "poc": 0.07715167498104596,
        "for": 0.07715167498104596,
        "3": 0.07715167498104596,
        "diverse": 0.07715167498104596,
        "repos": 0.07715167498104596,
        "python": 0.07715167498104596,
        "cli": 0.1543033499620919,
        "spring": 0.07715167498104596,
        "boot": 0.07715167498104596,
        "api": 0.07715167498104596,
        "node": 0.07715167498104596,
        "webapp": 0.07715167498104596,
        "init": 0.1543033499620919,
        "produces": 0.07715167498104596,
        "a": 0.23145502494313785,
        "working": 0.07715167498104596,
        "linted": 0.07715167498104596,
        "with": 0.07715167498104596,
        "runnable": 0.07715167498104596,
        "quick": 0.07715167498104596,
        "start": 0.07715167498104596,
        "on": 0.07715167498104596,
        "changing": 0.07715167498104596,
        "or": 0.07715167498104596,
        "updates": 0.07715167498104596,
        "only": 0.07715167498104596,
        "relevant": 0.07715167498104596,
        "sections": 0.07715167498104596,
        "no": 0.07715167498104596,
        "hallucinated": 0.07715167498104596,
        "commands": 0.07715167498104596,
        "links": 0.07715167498104596,
        "and": 0.23145502494313785,
        "badges": 0.07715167498104596,
        "validate": 0.07715167498104596,
        "consistent": 0.07715167498104596,
        "if": 0.07715167498104596,
        "you": 0.1543033499620919,
        "want": 0.07715167498104596,
        "i": 0.07715167498104596,
        "can": 0.1543033499620919,
        "spin": 0.07715167498104596,
        "up": 0.07715167498104596,
        "starter": 0.07715167498104596,
        "repo": 0.07715167498104596,
        "layout": 0.07715167498104596,
        "templates": 0.07715167498104596,
        "simple": 0.07715167498104596,
        "adapter": 0.07715167498104596,
        "so": 0.07715167498104596,
        "drop": 0.07715167498104596,
        "it": 0.07715167498104596,
        "into": 0.07715167498104596,
        "your": 0.07715167498104596,
        "environment": 0.07715167498104596,
        "run": 0.07715167498104596,
        "right": 0.07715167498104596,
        "away": 0.07715167498104596
      },
      "text": "runner: \"ollama\" model: \"llama3:8b-instruct\" temperature: 0.15 readme: style: \"comprehensive\" publish: mode: \"pr\" branch_prefix: \"docgen/\" analyzers: enabled: [language, build, dependencies, patterns] exclude_paths: [\".git/\", \"node_modules/\", \"dist/\", \"target/\"] ci: watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" - \"requirements.txt\" - \"Dockerfile\" ``` --- ## 21) Success Criteria (POC) * For 3 diverse repos (Python CLI, Spring Boot API, Node webapp): * `docgen init` produces a working, linted README with runnable Quick Start. * On changing `pom.xml` or `requirements.txt`, PR updates only relevant sections. * No hallucinated commands; links and badges validate; style consistent. --- If you want, I can spin up a **starter repo layout** (CLI, analyzers, templates, and a simple Ollama adapter) so you can drop it into your environment and run `docgen init` right away.",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    }
  ],
  "features": [
    {
      "id": "AGENTS.md#0",
      "vector": {
        "repository": 0.06757373783994859,
        "guidelines": 0.1013606067599229,
        "project": 0.033786868919974296,
        "structure": 0.033786868919974296,
        "module": 0.06757373783994859,
        "organization": 0.033786868919974296,
        "spec": 0.06757373783994859,
        "md": 0.033786868919974296,
        "captures": 0.033786868919974296,
        "the": 0.27029495135979437,
        "end": 0.06757373783994859,
        "to": 0.1013606067599229,
        "architecture": 0.033786868919974296,
        "component": 0.06757373783994859,
        "contracts": 0.033786868919974296,
        "and": 0.43922929595966587,
        "must": 0.033786868919974296,
        "be": 0.033786868919974296,
        "updated": 0.033786868919974296,
        "whenever": 0.033786868919974296,
        "responsibilities": 0.033786868919974296,
        "shift": 0.033786868919974296,
        "place": 0.033786868919974296,
        "python": 0.2027212135198458,
        "source": 0.033786868919974296,
        "in": 0.16893434459987147,
        "a": 0.23650808243982008,
        "docgen": 0.16893434459987147,
        "package": 0.033786868919974296,
        "create": 0.033786868919974296,
        "it": 0.033786868919974296,
        "when": 0.06757373783994859,
        "implementation": 0.033786868919974296,
        "starts": 0.033786868919974296,
        "with": 0.16893434459987147,
        "clear": 0.033786868919974296,
        "submodules": 0.033786868919974296,
        "for": 0.1013606067599229,
        "orchestrator": 0.1013606067599229,
        "analyzers": 0.033786868919974296,
        "runners": 0.033786868919974296,
        "stores": 0.033786868919974296,
        "avoid": 0.06757373783994859,
        "leaving": 0.033786868919974296,
        "logic": 0.033786868919974296,
        "repo": 0.06757373783994859,
        "root": 0.033786868919974296,
        "mirror": 0.033786868919974296,
        "runtime": 0.033786868919974296,
        "modules": 0.06757373783994859,
        "under": 0.1013606067599229,
        "tests": 0.2027212135198458,
        "using": 0.033786868919974296,
        "test_": 0.033786868919974296,
        "py": 0.1013606067599229,
        "co": 0.033786868919974296,
        "locate": 0.033786868919974296,
        "fixtures": 0.06757373783994859,
        "_fixtures": 0.033786868919974296,
        "so": 0.13514747567989718,
        "imports": 0.06757373783994859,
        "stay": 0.06757373783994859,
        "clean": 0.033786868919974296,
        "reusable": 0.033786868919974296,
        "keep": 0.13514747567989718,
        "throwaway": 0.033786868919974296,
        "experiments": 0.033786868919974296,
        "inside": 0.033786868919974296,
        "an": 0.06757373783994859,
        "ignored": 0.033786868919974296,
        "sandbox": 0.033786868919974296,
        "directory": 0.033786868919974296,
        "scans": 0.033786868919974296,
        "remain": 0.033786868919974296,
        "focused": 0.033786868919974296,
        "on": 0.06757373783994859,
        "production": 0.033786868919974296,
        "code": 0.033786868919974296,
        "paths": 0.033786868919974296,
        "build": 0.033786868919974296,
        "test": 0.06757373783994859,
        "development": 0.033786868919974296,
        "commands": 0.033786868919974296,
        "m": 0.16893434459987147,
        "venv": 0.1013606067599229,
        "followed": 0.033786868919974296,
        "by": 0.033786868919974296,
        "scripts": 0.06757373783994859,
        "activate": 0.033786868919974296,
        "aligns": 0.033786868919974296,
        "local": 0.033786868919974296,
        "shells": 0.033786868919974296,
        "pycharm": 0.033786868919974296,
        "interpreter": 0.033786868919974296,
        "settings": 0.033786868919974296,
        "pip": 0.033786868919974296,
        "install": 0.033786868919974296,
        "e": 0.033786868919974296,
        "dev": 0.033786868919974296,
        "after": 0.06757373783994859,
        "pyproject": 0.033786868919974296,
        "toml": 0.033786868919974296,
        "is": 0.1013606067599229,
        "committed": 0.033786868919974296,
        "exposes": 0.033786868919974296,
        "cli": 0.033786868919974296,
        "plugins": 0.033786868919974296,
        "editable": 0.033786868919974296,
        "form": 0.033786868919974296,
        "without": 0.033786868919974296,
        "repeated": 0.033786868919974296,
        "reinstalls": 0.033786868919974296,
        "pytest": 0.06757373783994859,
        "runs": 0.033786868919974296,
        "full": 0.033786868919974296,
        "suite": 0.033786868919974296,
        "append": 0.033786868919974296,
        "k": 0.033786868919974296,
        "pattern": 0.033786868919974296,
        "iterate": 0.033786868919974296,
        "single": 0.06757373783994859,
        "analyzer": 0.06757373783994859,
        "or": 0.06757373783994859,
        "pipeline": 0.1013606067599229,
        "stage": 0.033786868919974296,
        "mypy": 0.033786868919974296,
        "ruff": 0.033786868919974296,
        "check": 0.033786868919974296,
        "catch": 0.033786868919974296,
        "type": 0.033786868919974296,
        "drift": 0.033786868919974296,
        "lint": 0.033786868919974296,
        "violations": 0.033786868919974296,
        "before": 0.06757373783994859,
        "readme": 0.06757373783994859,
        "generation": 0.06757373783994859,
        "attempted": 0.033786868919974296,
        "coding": 0.033786868919974296,
        "style": 0.033786868919974296,
        "naming": 0.033786868919974296,
        "conventions": 0.033786868919974296,
        "follow": 0.06757373783994859,
        "pep": 0.033786868919974296,
        "8": 0.033786868919974296,
        "4": 0.033786868919974296,
        "space": 0.033786868919974296,
        "indents": 0.033786868919974296,
        "explicit": 0.033786868919974296,
        "example": 0.033786868919974296,
        "from": 0.033786868919974296,
        "import": 0.033786868919974296,
        "static": 0.033786868919974296,
        "tooling": 0.033786868919974296,
        "can": 0.033786868919974296,
        "trace": 0.033786868919974296,
        "dependencies": 0.033786868919974296,
        "name": 0.033786868919974296,
        "their": 0.033786868919974296,
        "roles": 0.033786868919974296,
        "prompt_builder": 0.033786868919974296,
        "functions": 0.033786868919974296,
        "snake_case": 0.033786868919974296,
        "descriptive": 0.06757373783994859,
        "nouns": 0.033786868919974296,
        "first": 0.033786868919974296,
        "build_prompt_section": 0.033786868919974296,
        "run": 0.033786868919974296,
        "black": 0.033786868919974296,
        "commits": 0.06757373783994859,
        "manual": 0.033786868919974296,
        "reformatting": 0.033786868919974296,
        "unless": 0.033786868919974296,
        "formatter": 0.033786868919974296,
        "cannot": 0.033786868919974296,
        "resolve": 0.033786868919974296,
        "construct": 0.033786868919974296,
        "testing": 0.06757373783994859,
        "default": 0.033786868919974296,
        "harness": 0.033786868919974296,
        "every": 0.033786868919974296,
        "needs": 0.033786868919974296,
        "unit": 0.033786868919974296,
        "coverage": 0.033786868919974296,
        "plus": 0.033786868919974296,
        "integration": 0.06757373783994859,
        "case": 0.033786868919974296,
        "that": 0.06757373783994859,
        "walks": 0.033786868919974296,
        "snapshot": 0.033786868919974296,
        "through": 0.033786868919974296,
        "use": 0.033786868919974296,
        "names": 0.033786868919974296,
        "such": 0.033786868919974296,
        "as": 0.033786868919974296,
        "test_prompt_builder_handles_missing_signals": 0.033786868919974296,
        "arrange": 0.033786868919974296,
        "act": 0.033786868919974296,
        "assert": 0.033786868919974296,
        "comments": 0.033786868919974296,
        "minimal": 0.033786868919974296,
        "but": 0.033786868919974296,
        "intentional": 0.033786868919974296,
        "store": 0.033786868919974296,
        "regression": 0.033786868919974296,
        "generated": 0.033786868919974296,
        "slices": 0.033786868919974296,
        "data": 0.033786868919974296,
        "update": 0.033786868919974296,
        "them": 0.033786868919974296,
        "helper": 0.033786868919974296,
        "diffs": 0.033786868919974296,
        "reviewable": 0.033786868919974296,
        "commit": 0.033786868919974296,
        "pull": 0.033786868919974296,
        "request": 0.033786868919974296,
        "conventional": 0.033786868919974296,
        "feat": 0.033786868919974296,
        "fix": 0.033786868919974296,
        "docs": 0.033786868919974296,
        "subject": 0.033786868919974296,
        "lines": 0.033786868919974296,
        "72": 0.033786868919974296,
        "characters": 0.033786868919974296,
        "explain": 0.033786868919974296,
        "broader": 0.033786868919974296,
        "scope": 0.033786868919974296,
        "body": 0.033786868919974296,
        "multiple": 0.033786868919974296,
        "subsystems": 0.033786868919974296,
        "change": 0.033786868919974296,
        "bundle": 0.033786868919974296,
        "related": 0.033786868919974296,
        "work": 0.033786868919974296,
        "into": 0.033786868919974296,
        "pr": 0.033786868919974296,
        "includes": 0.033786868919974296,
        "summary": 0.033786868919974296,
        "notes": 0.033786868919974296,
        "links": 0.033786868919974296
      },
      "text": "# Repository Guidelines ## Project Structure & Module Organization - `spec/spec.md` captures the end-to-end architecture, component contracts, and must be updated whenever responsibilities shift. - Place Python source in a `docgen/` package (create it when implementation starts) with clear submodules for orchestrator, analyzers, runners, and stores; avoid leaving logic in the repo root. - Mirror runtime modules under `tests/` using `test_<module>.py`; co-locate fixtures in `tests/_fixtures/` so imports stay clean and reusable. - Keep throwaway experiments inside an ignored `sandbox/` directory so repository scans remain focused on production code paths. ## Build, Test, and Development Commands - `python -m venv .venv` followed by `.\\\\.venv\\\\Scripts\\\\activate` aligns local shells with the PyCharm interpreter settings. - `python -m pip install -e .[dev]` (after a `pyproject.toml` is committed) exposes the CLI and plugins in editable form without repeated reinstalls. - `python -m pytest` runs the full suite; append `-k <pattern>` to iterate on a single analyzer or pipeline stage. - `python -m mypy docgen` and `python -m ruff check docgen tests` catch type drift and lint violations before README generation is attempted. ## Coding Style & Naming Conventions - Follow PEP 8 with 4-space indents and explicit imports (for example, `from docgen.orchestrator import Pipeline`) so static tooling can trace dependencies. - Name modules after their roles (`orchestrator.py`, `prompt_builder.py`) and keep functions snake_case with descriptive nouns first (`build_prompt_section`). - Run `black docgen tests` before commits; avoid manual reformatting unless the formatter cannot resolve a construct. ## Testing Guidelines - Pytest is the default harness; every analyzer or pipeline component needs unit coverage plus an integration case under `tests/integration/` that walks a repo snapshot through generation. - Use descriptive test names such as `test_prompt_builder_handles_missing_signals` and keep Arrange-Act-Assert comments minimal but intentional. - Store regression fixtures for generated README slices under `tests/data/` and update them with helper scripts so diffs stay reviewable. ## Commit & Pull Request Guidelines - Follow Conventional Commits (`feat:`, `fix:`, `docs:`); keep subject lines <=72 characters and explain broader scope in the body when multiple subsystems change. - Bundle related work into a single PR that includes a summary, testing notes, and links to",
      "metadata": {
        "path": "AGENTS.md",
        "tags": [
          "docs"
        ],
        "hash": "dfeeea63c97ae7cb3036fbb0312edaee5f377b31178db6fbde6c843da7ceb8d2"
      }
    },
    {
      "id": "AGENTS.md#1",
      "vector": {
        "readme": 0.1270001270001905,
        "slices": 0.06350006350009525,
        "under": 0.06350006350009525,
        "tests": 0.06350006350009525,
        "data": 0.06350006350009525,
        "and": 0.4445004445006667,
        "update": 0.06350006350009525,
        "them": 0.06350006350009525,
        "with": 0.06350006350009525,
        "helper": 0.06350006350009525,
        "scripts": 0.06350006350009525,
        "so": 0.06350006350009525,
        "diffs": 0.06350006350009525,
        "stay": 0.06350006350009525,
        "reviewable": 0.06350006350009525,
        "commit": 0.1270001270001905,
        "pull": 0.06350006350009525,
        "request": 0.06350006350009525,
        "guidelines": 0.06350006350009525,
        "follow": 0.06350006350009525,
        "conventional": 0.06350006350009525,
        "commits": 0.06350006350009525,
        "feat": 0.06350006350009525,
        "fix": 0.06350006350009525,
        "docs": 0.1270001270001905,
        "keep": 0.1270001270001905,
        "subject": 0.06350006350009525,
        "lines": 0.06350006350009525,
        "72": 0.06350006350009525,
        "characters": 0.06350006350009525,
        "explain": 0.06350006350009525,
        "broader": 0.06350006350009525,
        "scope": 0.06350006350009525,
        "in": 0.254000254000381,
        "the": 0.31750031750047625,
        "body": 0.06350006350009525,
        "when": 0.1270001270001905,
        "multiple": 0.06350006350009525,
        "subsystems": 0.06350006350009525,
        "change": 0.06350006350009525,
        "bundle": 0.06350006350009525,
        "related": 0.06350006350009525,
        "work": 0.1270001270001905,
        "into": 0.06350006350009525,
        "a": 0.254000254000381,
        "single": 0.06350006350009525,
        "pr": 0.1270001270001905,
        "that": 0.06350006350009525,
        "includes": 0.06350006350009525,
        "summary": 0.06350006350009525,
        "testing": 0.06350006350009525,
        "notes": 0.1270001270001905,
        "links": 0.06350006350009525,
        "to": 0.06350006350009525,
        "relevant": 0.06350006350009525,
        "issues": 0.06350006350009525,
        "or": 0.06350006350009525,
        "spec": 0.06350006350009525,
        "sections": 0.06350006350009525,
        "attach": 0.06350006350009525,
        "before": 0.1270001270001905,
        "after": 0.06350006350009525,
        "excerpts": 0.06350006350009525,
        "altering": 0.06350006350009525,
        "generation": 0.06350006350009525,
        "output": 0.06350006350009525,
        "run": 0.06350006350009525,
        "lint": 0.06350006350009525,
        "type": 0.06350006350009525,
        "check": 0.06350006350009525,
        "test": 0.06350006350009525,
        "commands": 0.06350006350009525,
        "opening": 0.06350006350009525,
        "paste": 0.06350006350009525,
        "condensed": 0.06350006350009525,
        "results": 0.06350006350009525,
        "description": 0.06350006350009525,
        "for": 0.06350006350009525,
        "quick": 0.06350006350009525,
        "verification": 0.06350006350009525,
        "environment": 0.1270001270001905,
        "tooling": 0.06350006350009525,
        "reuse": 0.06350006350009525,
        "local": 0.1270001270001905,
        "venv": 0.06350006350009525,
        "seeded": 0.06350006350009525,
        "by": 0.1270001270001905,
        "pycharm": 0.06350006350009525,
        "do": 0.06350006350009525,
        "not": 0.06350006350009525,
        "artifacts": 0.06350006350009525,
        "store": 0.06350006350009525,
        "secrets": 0.06350006350009525,
        "env": 0.06350006350009525,
        "consumed": 0.06350006350009525,
        "llm": 0.06350006350009525,
        "runner": 0.06350006350009525,
        "large": 0.06350006350009525,
        "model": 0.06350006350009525,
        "weights": 0.06350006350009525,
        "outside": 0.06350006350009525,
        "repository": 0.06350006350009525,
        "document": 0.06350006350009525,
        "their": 0.06350006350009525,
        "locations": 0.06350006350009525,
        "models": 0.06350006350009525,
        "md": 0.06350006350009525,
        "once": 0.06350006350009525,
        "integration": 0.06350006350009525,
        "begins": 0.06350006350009525
      },
      "text": "README slices under `tests/data/` and update them with helper scripts so diffs stay reviewable. ## Commit & Pull Request Guidelines - Follow Conventional Commits (`feat:`, `fix:`, `docs:`); keep subject lines <=72 characters and explain broader scope in the body when multiple subsystems change. - Bundle related work into a single PR that includes a summary, testing notes, and links to relevant issues or spec sections; attach before/after README excerpts when altering generation output. - Run lint, type-check, and test commands before opening a PR and paste condensed results in the description for quick verification. ## Environment & Tooling Notes - Reuse the local `.venv` seeded by PyCharm; do not commit environment artifacts and store secrets in a `.env` consumed by the local LLM runner. - Keep large model weights outside the repository and document their locations in `docs/models.md` once integration work begins.",
      "metadata": {
        "path": "AGENTS.md",
        "tags": [
          "docs"
        ],
        "hash": "dfeeea63c97ae7cb3036fbb0312edaee5f377b31178db6fbde6c843da7ceb8d2"
      }
    },
    {
      "id": "docgen/repo_scanner.py#0",
      "vector": {
        "repository": 0.04233337566673017,
        "scanning": 0.04233337566673017,
        "and": 0.04233337566673017,
        "manifest": 0.04233337566673017,
        "building": 0.04233337566673017,
        "utilities": 0.04233337566673017,
        "from": 0.33866700533384136,
        "__future__": 0.04233337566673017,
        "import": 0.4233337566673017,
        "annotations": 0.04233337566673017,
        "hashlib": 0.04233337566673017,
        "json": 0.16933350266692068,
        "os": 0.04233337566673017,
        "dataclasses": 0.04233337566673017,
        "dataclass": 0.08466675133346034,
        "fnmatch": 0.04233337566673017,
        "fnmatchcase": 0.04233337566673017,
        "pathlib": 0.04233337566673017,
        "path": 0.04233337566673017,
        "typing": 0.04233337566673017,
        "dict": 0.04233337566673017,
        "iterator": 0.04233337566673017,
        "list": 0.04233337566673017,
        "sequence": 0.04233337566673017,
        "config": 0.1270001270001905,
        "configerror": 0.04233337566673017,
        "load_config": 0.04233337566673017,
        "models": 0.04233337566673017,
        "filemeta": 0.04233337566673017,
        "repomanifest": 0.04233337566673017,
        "_excluded_dirs": 0.04233337566673017,
        "git": 0.04233337566673017,
        "hg": 0.04233337566673017,
        "svn": 0.04233337566673017,
        "venv": 0.04233337566673017,
        "node_modules": 0.04233337566673017,
        "__pycache__": 0.04233337566673017,
        "pytest_cache": 0.04233337566673017,
        "mypy_cache": 0.04233337566673017,
        "idea": 0.04233337566673017,
        "docgen": 0.08466675133346034,
        "sandbox": 0.04233337566673017,
        "_excluded_files": 0.04233337566673017,
        "readme": 0.04233337566673017,
        "md": 0.04233337566673017,
        "ds_store": 0.04233337566673017,
        "thumbs": 0.04233337566673017,
        "db": 0.04233337566673017,
        "_language_by_suffix": 0.04233337566673017,
        "py": 0.04233337566673017,
        "python": 0.08466675133346034,
        "pyi": 0.04233337566673017,
        "js": 0.04233337566673017,
        "javascript": 0.08466675133346034,
        "ts": 0.04233337566673017,
        "typescript": 0.08466675133346034,
        "tsx": 0.04233337566673017,
        "jsx": 0.04233337566673017,
        "java": 0.08466675133346034,
        "kt": 0.04233337566673017,
        "kotlin": 0.08466675133346034,
        "kts": 0.04233337566673017,
        "go": 0.08466675133346034,
        "rs": 0.04233337566673017,
        "rust": 0.04233337566673017,
        "rb": 0.04233337566673017,
        "ruby": 0.04233337566673017,
        "php": 0.08466675133346034,
        "cs": 0.04233337566673017,
        "c": 0.4233337566673017,
        "h": 0.04233337566673017,
        "cpp": 0.04233337566673017,
        "hpp": 0.04233337566673017,
        "cc": 0.04233337566673017,
        "hh": 0.04233337566673017,
        "swift": 0.08466675133346034,
        "m": 0.04233337566673017,
        "objective": 0.08466675133346034,
        "mm": 0.04233337566673017,
        "scala": 0.08466675133346034,
        "r": 0.08466675133346034,
        "jl": 0.04233337566673017,
        "julia": 0.04233337566673017,
        "sh": 0.04233337566673017,
        "shell": 0.04233337566673017,
        "ps1": 0.04233337566673017,
        "powershell": 0.04233337566673017,
        "bat": 0.04233337566673017,
        "batch": 0.08466675133346034,
        "cmd": 0.04233337566673017,
        "yaml": 0.1270001270001905,
        "yml": 0.08466675133346034,
        "toml": 0.08466675133346034,
        "_role_rules": 0.04233337566673017,
        "tuple": 0.08466675133346034,
        "str": 0.16933350266692068,
        "tests": 0.04233337566673017,
        "test": 0.1270001270001905,
        "docs": 0.1270001270001905,
        "doc": 0.04233337566673017,
        "examples": 0.1270001270001905,
        "example": 0.04233337566673017,
        "infra": 0.08466675133346034,
        "_cache_filename": 0.04233337566673017,
        "manifest_cache": 0.04233337566673017,
        "_cache_version": 0.04233337566673017,
        "1": 0.04233337566673017,
        "class": 0.04233337566673017,
        "ignorerule": 0.04233337566673017,
        "represents": 0.04233337566673017,
        "an": 0.04233337566673017,
        "ignore": 0.04233337566673017,
        "rule": 0.04233337566673017,
        "parsed": 0.04233337566673017,
        "gitignore": 0.04233337566673017,
        "or": 0.04233337566673017,
        "pattern": 0.08466675133346034,
        "directory_only": 0.04233337566673017,
        "bool": 0.254000254000381,
        "anchored": 0.04233337566673017,
        "negate": 0.04233337566673017,
        "has_slash": 0.04233337566673017,
        "def": 0.04233337566673017,
        "matches": 0.04233337566673017,
        "self": 0.08466675133346034,
        "rel_path": 0.04233337566673017,
        "is_dir": 0.04233337566673017,
        "if": 0.04233337566673017,
        "not": 0.04233337566673017,
        "return": 0.04233337566673017,
        "false": 0.04233337566673017,
        "i": 0.04233337566673017
      },
      "text": "\"\"\"Repository scanning and manifest building utilities.\"\"\" from __future__ import annotations import hashlib import json import os from dataclasses import dataclass from fnmatch import fnmatchcase from pathlib import Path from typing import Dict, Iterator, List, Sequence from .config import ConfigError, load_config from .models import FileMeta, RepoManifest _EXCLUDED_DIRS = { \".git\", \".hg\", \".svn\", \".venv\", \"node_modules\", \"__pycache__\", \".pytest_cache\", \".mypy_cache\", \".idea\", \".docgen\", \"sandbox\", } _EXCLUDED_FILES = { \"README.md~\", \".DS_Store\", \"Thumbs.db\", } _LANGUAGE_BY_SUFFIX = { \".py\": \"Python\", \".pyi\": \"Python\", \".js\": \"JavaScript\", \".ts\": \"TypeScript\", \".tsx\": \"TypeScript\", \".jsx\": \"JavaScript\", \".java\": \"Java\", \".kt\": \"Kotlin\", \".kts\": \"Kotlin\", \".go\": \"Go\", \".rs\": \"Rust\", \".rb\": \"Ruby\", \".php\": \"PHP\", \".cs\": \"C#\", \".c\": \"C\", \".h\": \"C\", \".cpp\": \"C++\", \".hpp\": \"C++\", \".cc\": \"C++\", \".hh\": \"C++\", \".swift\": \"Swift\", \".m\": \"Objective-C\", \".mm\": \"Objective-C++\", \".scala\": \"Scala\", \".r\": \"R\", \".jl\": \"Julia\", \".sh\": \"Shell\", \".ps1\": \"PowerShell\", \".bat\": \"Batch\", \".cmd\": \"Batch\", \".yaml\": \"YAML\", \".yml\": \"YAML\", \".json\": \"JSON\", \".toml\": \"TOML\", } _ROLE_RULES: tuple[tuple[str, str], ...] = ( (\"tests\", \"test\"), (\"test\", \"test\"), (\"docs\", \"docs\"), (\"doc\", \"docs\"), (\"examples\", \"examples\"), (\"example\", \"examples\"), (\"config\", \"config\"), (\"infra\", \"infra\"), ) _CACHE_FILENAME = \"manifest_cache.json\" _CACHE_VERSION = 1 @dataclass class IgnoreRule: \"\"\"Represents an ignore rule parsed from .gitignore or .docgen.yml.\"\"\" pattern: str directory_only: bool anchored: bool negate: bool has_slash: bool def matches(self, rel_path: str, is_dir: bool) -> bool: if not self.pattern: return False i",
      "metadata": {
        "path": "docgen/repo_scanner.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "d3b42acab7acfa53312849c080c2858388857ed2ca00b45049527d26e6560a58"
      }
    },
    {
      "id": "docgen/git/diff.py#0",
      "vector": {
        "diff": 0.04867923835112355,
        "inspection": 0.04867923835112355,
        "utilities": 0.04867923835112355,
        "from": 0.24339619175561772,
        "__future__": 0.04867923835112355,
        "import": 0.24339619175561772,
        "annotations": 0.04867923835112355,
        "dataclasses": 0.04867923835112355,
        "dataclass": 0.14603771505337063,
        "fnmatch": 0.0973584767022471,
        "pathlib": 0.04867923835112355,
        "path": 0.14603771505337063,
        "typing": 0.04867923835112355,
        "callable": 0.04867923835112355,
        "iterable": 0.04867923835112355,
        "list": 0.04867923835112355,
        "sequence": 0.24339619175561772,
        "set": 0.04867923835112355,
        "frozen": 0.0973584767022471,
        "true": 0.14603771505337063,
        "class": 0.14603771505337063,
        "diffresult": 0.04867923835112355,
        "summary": 0.04867923835112355,
        "of": 0.04867923835112355,
        "repository": 0.0973584767022471,
        "changes": 0.0973584767022471,
        "and": 0.04867923835112355,
        "impacted": 0.04867923835112355,
        "readme": 0.24339619175561772,
        "sections": 0.1947169534044942,
        "base": 0.04867923835112355,
        "str": 0.29207543010674125,
        "changed_files": 0.04867923835112355,
        "sectionrule": 0.24339619175561772,
        "associates": 0.04867923835112355,
        "file": 0.04867923835112355,
        "change": 0.04867923835112355,
        "patterns": 0.24339619175561772,
        "with": 0.04867923835112355,
        "section": 0.14603771505337063,
        "def": 0.04867923835112355,
        "matches": 0.04867923835112355,
        "self": 0.0973584767022471,
        "bool": 0.04867923835112355,
        "for": 0.04867923835112355,
        "pattern": 0.0973584767022471,
        "in": 0.04867923835112355,
        "if": 0.04867923835112355,
        "_pattern_matches": 0.04867923835112355,
        "return": 0.0973584767022471,
        "false": 0.04867923835112355,
        "diffanalyzer": 0.04867923835112355,
        "maps": 0.04867923835112355,
        "to": 0.04867923835112355,
        "affected": 0.04867923835112355,
        "_ignored_paths": 0.04867923835112355,
        "md": 0.04867923835112355,
        "_section_rules": 0.04867923835112355,
        "build_and_test": 0.04867923835112355,
        "requirements": 0.0973584767022471,
        "txt": 0.14603771505337063,
        "pyproject": 0.0973584767022471,
        "toml": 0.0973584767022471,
        "poetry": 0.04867923835112355,
        "lock": 0.1947169534044942,
        "pipfile": 0.0973584767022471,
        "package": 0.14603771505337063,
        "json": 0.14603771505337063,
        "pnpm": 0.04867923835112355,
        "yaml": 0.0973584767022471,
        "yarn": 0.04867923835112355,
        "pom": 0.04867923835112355,
        "xml": 0.04867923835112355,
        "build": 0.0973584767022471,
        "gradle": 0.14603771505337063,
        "kts": 0.04867923835112355,
        "makefile": 0.0973584767022471,
        "cmakelists": 0.04867923835112355,
        "setup": 0.0973584767022471,
        "cfg": 0.04867923835112355,
        "py": 0.04867923835112355,
        "tox": 0.04867923835112355,
        "ini": 0.04867923835112355,
        "tests": 0.04867923835112355,
        "quickstart": 0.04867923835112355,
        "dockerfile": 0.04867923835112355,
        "docker": 0.0973584767022471,
        "compose": 0.0973584767022471,
        "yml": 0.04867923835112355,
        "scripts": 0.04867923835112355
      },
      "text": "\"\"\"Diff inspection utilities.\"\"\" from __future__ import annotations from dataclasses import dataclass from fnmatch import fnmatch from pathlib import Path from typing import Callable, Iterable, List, Sequence, Set @dataclass(frozen=True) class DiffResult: \"\"\"Summary of repository changes and impacted README sections.\"\"\" base: str changed_files: Sequence[str] sections: Sequence[str] @dataclass(frozen=True) class SectionRule: \"\"\"Associates file change patterns with README sections.\"\"\" section: str patterns: Sequence[str] def matches(self, path: str) -> bool: for pattern in self.patterns: if _pattern_matches(path, pattern): return True return False class DiffAnalyzer: \"\"\"Maps repository changes to affected README sections.\"\"\" _IGNORED_PATHS = {\"README.md\", \"README\"} _SECTION_RULES: Sequence[SectionRule] = ( SectionRule( section=\"build_and_test\", patterns=( \"requirements.txt\", \"pyproject.toml\", \"poetry.lock\", \"Pipfile\", \"package.json\", \"package-lock.json\", \"pnpm-lock.yaml\", \"yarn.lock\", \"pom.xml\", \"build.gradle\", \"build.gradle.kts\", \"gradle/\", \"Makefile\", \"CMakeLists.txt\", \"setup.cfg\", \"setup.py\", \"tox.ini\", \"tests/\", ), ), SectionRule( section=\"quickstart\", patterns=( \"requirements.txt\", \"pyproject.toml\", \"Pipfile\", \"package.json\", \"Dockerfile\", \"docker-compose.yml\", \"docker-compose.yaml\", \"Makefile\", \"scripts/\", ), ), SectionRule(",
      "metadata": {
        "path": "docgen/git/diff.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "805617fee00b02704767ca3f528aaddcf5310733c2087a424bc7900f8d236063"
      }
    },
    {
      "id": "docgen/analyzers/patterns.py#0",
      "vector": {
        "analyzer": 0.13168538439184413,
        "for": 0.13168538439184413,
        "repository": 0.04389512813061471,
        "infrastructure": 0.08779025626122942,
        "and": 0.08779025626122942,
        "layout": 0.08779025626122942,
        "patterns": 0.17558051252245885,
        "from": 0.21947564065307354,
        "__future__": 0.04389512813061471,
        "import": 0.21947564065307354,
        "annotations": 0.04389512813061471,
        "pathlib": 0.04389512813061471,
        "path": 0.13168538439184413,
        "typing": 0.04389512813061471,
        "iterable": 0.08779025626122942,
        "list": 0.13168538439184413,
        "sequence": 0.04389512813061471,
        "base": 0.04389512813061471,
        "models": 0.04389512813061471,
        "repomanifest": 0.13168538439184413,
        "signal": 0.21947564065307354,
        "class": 0.04389512813061471,
        "patternanalyzer": 0.04389512813061471,
        "finds": 0.04389512813061471,
        "within": 0.04389512813061471,
        "the": 0.04389512813061471,
        "repo": 0.04389512813061471,
        "def": 0.08779025626122942,
        "supports": 0.04389512813061471,
        "self": 0.08779025626122942,
        "manifest": 0.21947564065307354,
        "bool": 0.08779025626122942,
        "return": 0.04389512813061471,
        "files": 0.13168538439184413,
        "analyze": 0.04389512813061471,
        "root": 0.08779025626122942,
        "paths": 0.17558051252245885,
        "file": 0.08779025626122942,
        "in": 0.17558051252245885,
        "signals": 0.13168538439184413,
        "docker_files": 0.21947564065307354,
        "_collect": 0.08779025626122942,
        "dockerfile": 0.08779025626122942,
        "docker": 0.3511610250449177,
        "compose": 0.21947564065307354,
        "yml": 0.08779025626122942,
        "yaml": 0.08779025626122942,
        "if": 0.17558051252245885,
        "quickstart": 0.21947564065307354,
        "str": 0.04389512813061471,
        "append": 0.17558051252245885,
        "build": 0.04389512813061471,
        "t": 0.04389512813061471,
        "image": 0.04389512813061471,
        "any": 0.04389512813061471,
        "name": 0.17558051252245885,
        "up": 0.04389512813061471,
        "pattern": 0.08779025626122942,
        "containerization": 0.04389512813061471,
        "value": 0.08779025626122942,
        "source": 0.08779025626122942,
        "metadata": 0.08779025626122942,
        "sorted": 0.04389512813061471,
        "summary": 0.08779025626122942,
        "artifacts": 0.04389512813061471,
        "detected": 0.08779025626122942,
        "_has_prefix": 0.04389512813061471,
        "k8s": 0.04389512813061471,
        "helm": 0.04389512813061471,
        "charts": 0.04389512813061471,
        "kubernetes": 0.13168538439184413,
        "manifests": 0.04389512813061471,
        "under": 0.04389512813061471,
        "deployment": 0.04389512813061471,
        "directories": 0.04389512813061471,
        "ci_files": 0.04389512813061471,
        "g": 0.04389512813061471
      },
      "text": "\"\"\"Analyzer for repository infrastructure and layout patterns.\"\"\" from __future__ import annotations from pathlib import Path from typing import Iterable, List, Sequence from .base import Analyzer from ..models import RepoManifest, Signal class PatternAnalyzer(Analyzer): \"\"\"Finds infrastructure and layout patterns within the repo.\"\"\" def supports(self, manifest: RepoManifest) -> bool: return bool(manifest.files) def analyze(self, manifest: RepoManifest) -> Iterable[Signal]: root = Path(manifest.root) paths = [file.path for file in manifest.files] signals: List[Signal] = [] docker_files = _collect(paths, {\"Dockerfile\", \"docker-compose.yml\", \"docker-compose.yaml\"}) if docker_files: quickstart: List[str] = [] if \"Dockerfile\" in docker_files: quickstart.append(\"docker build -t <image> .\") if any(name in docker_files for name in {\"docker-compose.yml\", \"docker-compose.yaml\"}): quickstart.append(\"docker compose up\") signals.append( Signal( name=\"pattern.containerization\", value=\"docker\", source=\"patterns\", metadata={ \"files\": sorted(docker_files), \"summary\": \"Docker artifacts detected\", \"quickstart\": quickstart, }, ) ) if _has_prefix(paths, (\"k8s/\", \"helm/\", \"charts/\")): signals.append( Signal( name=\"pattern.kubernetes\", value=\"kubernetes\", source=\"patterns\", metadata={ \"summary\": \"Kubernetes manifests detected under deployment directories\", }, ) ) ci_files = _collect( paths, { \".g",
      "metadata": {
        "path": "docgen/analyzers/patterns.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "7d8bdcdcef1e04812e2b30211dbf1d14551c2b08b8c339c29e5f3fc2701bd840"
      }
    },
    {
      "id": "README_before.md#0",
      "vector": {
        "docgen": 0.6611099775215866,
        "begin": 0.12592571000411173,
        "badges": 0.06296285500205587,
        "build": 0.15740713750513965,
        "status": 0.031481427501027934,
        "https": 0.0944442825030838,
        "img": 0.0944442825030838,
        "shields": 0.0944442825030838,
        "io": 0.0944442825030838,
        "badge": 0.0944442825030838,
        "pending": 0.031481427501027934,
        "lightgrey": 0.0944442825030838,
        "svg": 0.0944442825030838,
        "coverage": 0.06296285500205587,
        "review": 0.031481427501027934,
        "needed": 0.031481427501027934,
        "license": 0.12592571000411173,
        "tbd": 0.031481427501027934,
        "end": 0.0944442825030838,
        "toc": 0.06296285500205587,
        "table": 0.031481427501027934,
        "of": 0.031481427501027934,
        "contents": 0.031481427501027934,
        "features": 0.12592571000411173,
        "architecture": 0.06296285500205587,
        "high": 0.06296285500205587,
        "level": 0.06296285500205587,
        "flow": 0.06296285500205587,
        "component": 0.06296285500205587,
        "responsibilities": 0.06296285500205587,
        "artifacts": 0.06296285500205587,
        "and": 0.2833328475092514,
        "data": 0.06296285500205587,
        "stores": 0.06296285500205587,
        "pipeline": 0.06296285500205587,
        "sequence": 0.12592571000411173,
        "init": 0.0944442825030838,
        "patch": 0.06296285500205587,
        "update": 0.0944442825030838,
        "api": 0.06296285500205587,
        "signal": 0.06296285500205587,
        "extraction": 0.06296285500205587,
        "quick": 0.06296285500205587,
        "start": 0.06296285500205587,
        "configuration": 0.06296285500205587,
        "test": 0.06296285500205587,
        "deployment": 0.06296285500205587,
        "troubleshooting": 0.06296285500205587,
        "faq": 0.06296285500205587,
        "intro": 0.06296285500205587,
        "is": 0.031481427501027934,
        "a": 0.0944442825030838,
        "local": 0.0944442825030838,
        "first": 0.031481427501027934,
        "readme": 0.06296285500205587,
        "generator": 0.031481427501027934,
        "for": 0.0944442825030838,
        "polyglot": 0.031481427501027934,
        "repositories": 0.031481427501027934,
        "it": 0.031481427501027934,
        "scans": 0.031481427501027934,
        "every": 0.06296285500205587,
        "tracked": 0.031481427501027934,
        "file": 0.031481427501027934,
        "publishes": 0.031481427501027934,
        "analyzer": 0.06296285500205587,
        "signals": 0.0944442825030838,
        "retrieves": 0.031481427501027934,
        "grounded": 0.031481427501027934,
        "context": 0.06296285500205587,
        "guides": 0.031481427501027934,
        "llm": 0.06296285500205587,
        "through": 0.031481427501027934,
        "templated": 0.031481427501027934,
        "sections": 0.031481427501027934,
        "to": 0.031481427501027934,
        "produce": 0.031481427501027934,
        "or": 0.031481427501027934,
        "documentation": 0.031481427501027934,
        "this": 0.031481427501027934,
        "overview": 0.031481427501027934,
        "reflects": 0.031481427501027934,
        "complete": 0.031481427501027934,
        "pass": 0.031481427501027934,
        "across": 0.031481427501027934,
        "tests": 0.031481427501027934,
        "spec": 0.031481427501027934,
        "docs": 0.06296285500205587,
        "so": 0.031481427501027934,
        "contributors": 0.031481427501027934,
        "understand": 0.031481427501027934,
        "abstraction": 0.031481427501027934,
        "before": 0.031481427501027934,
        "running": 0.031481427501027934,
        "repository": 0.06296285500205587,
        "manifest": 0.031481427501027934,
        "caching": 0.031481427501027934,
        "repo_scanner": 0.031481427501027934,
        "py": 0.15740713750513965,
        "walks": 0.031481427501027934,
        "the": 0.031481427501027934,
        "tree": 0.031481427501027934,
        "respects": 0.031481427501027934,
        "gitignore": 0.031481427501027934,
        "yml": 0.031481427501027934,
        "hashes": 0.031481427501027934,
        "files": 0.031481427501027934,
        "persists": 0.031481427501027934,
        "manifest_cache": 0.031481427501027934,
        "json": 0.06296285500205587,
        "incremental": 0.031481427501027934,
        "runs": 0.031481427501027934,
        "plugin": 0.031481427501027934,
        "system": 0.031481427501027934,
        "analyzers": 0.031481427501027934,
        "discover": 0.031481427501027934,
        "language": 0.031481427501027934,
        "dependency": 0.031481427501027934,
        "entrypoint": 0.031481427501027934,
        "pattern": 0.031481427501027934,
        "structure": 0.031481427501027934,
        "that": 0.031481427501027934,
        "describe": 0.031481427501027934,
        "frameworks": 0.031481427501027934,
        "commands": 0.06296285500205587,
        "apis": 0.031481427501027934,
        "entities": 0.031481427501027934,
        "topology": 0.031481427501027934,
        "template": 0.031481427501027934,
        "driven": 0.031481427501027934,
        "prompting": 0.06296285500205587,
        "builder": 0.031481427501027934,
        "merges": 0.031481427501027934,
        "with": 0.031481427501027934,
        "jinja": 0.031481427501027934,
        "templates": 0.031481427501027934,
        "validates": 0.031481427501027934,
        "applies": 0.031481427501027934,
        "style": 0.031481427501027934,
        "presets": 0.031481427501027934,
        "injects": 0.031481427501027934,
        "retrieved": 0.031481427501027934,
        "per": 0.031481427501027934,
        "section": 0.06296285500205587,
        "lightweight": 0.031481427501027934,
        "rag": 0.06296285500205587,
        "index": 0.031481427501027934,
        "indexer": 0.031481427501027934,
        "embedder": 0.031481427501027934,
        "store": 0.031481427501027934,
        "embed": 0.031481427501027934,
        "source": 0.031481427501027934,
        "excerpts": 0.031481427501027934,
        "into": 0.031481427501027934,
        "embeddings": 0.031481427501027934,
        "scoped": 0.031481427501027934,
        "retrieval": 0.031481427501027934,
        "enforcement": 0.031481427501027934
      },
      "text": "# docgen <!-- docgen:begin:badges --> [![Build Status](https://img.shields.io/badge/build-pending-lightgrey.svg)](#) [![Coverage](https://img.shields.io/badge/coverage-review--needed-lightgrey.svg)](#) [![License](https://img.shields.io/badge/license-tbd-lightgrey.svg)](#) <!-- docgen:end:badges --> <!-- docgen:begin:toc --> ## Table of Contents - [Features](#features) - [Architecture](#architecture) - [High-Level Flow](#high-level-flow) - [Component Responsibilities](#component-responsibilities) - [Artifacts and Data Stores](#artifacts-and-data-stores) - [Pipeline Sequence (`docgen init`)](#pipeline-sequence-docgen-init) - [Patch Sequence (`docgen update`)](#patch-sequence-docgen-update) - [API Signal Extraction](#api-signal-extraction) - [Quick Start](#quick-start) - [Configuration](#configuration) - [Build & Test](#build-test) - [Deployment](#deployment) - [Troubleshooting](#troubleshooting) - [FAQ](#faq) - [License](#license) <!-- docgen:end:toc --> <!-- docgen:begin:intro --> docgen is a local-first README generator for polyglot repositories. It scans every tracked file, publishes analyzer signals, retrieves grounded context, and guides a local LLM through templated sections to produce or update documentation. This overview reflects a complete pass across `docgen/`, `tests/`, `spec/`, and `docs/` so contributors understand every abstraction before running `docgen init`. <!-- docgen:end:intro --> ## Features <!-- docgen:begin:features --> - **Repository manifest & caching** - `docgen/repo_scanner.py` walks the tree, respects `.gitignore`/`.docgen.yml`, hashes files, and persists `manifest_cache.json` for incremental runs. - **Analyzer plugin system** - `docgen/analyzers/*` discover language, build, dependency, entrypoint, pattern, and structure signals that describe frameworks, commands, APIs, entities, and repository topology. - **Template-driven prompting** - `docgen/prompting/builder.py` merges signals with Jinja templates, validates commands, applies style presets, and injects retrieved context per section. - **Lightweight RAG index** - `docgen/rag/indexer.py`, `embedder.py`, and `store.py` embed README/docs/source excerpts into `.docgen/embeddings.json` for section-scoped retrieval. - **Local LLM enforcement** -",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#1",
      "vector": {
        "docgen": 0.48261708906584017,
        "prompting": 0.06434894520877868,
        "builder": 0.03217447260438934,
        "py": 0.3217447260438934,
        "merges": 0.03217447260438934,
        "signals": 0.03217447260438934,
        "with": 0.06434894520877868,
        "jinja": 0.06434894520877868,
        "templates": 0.06434894520877868,
        "validates": 0.03217447260438934,
        "commands": 0.03217447260438934,
        "applies": 0.03217447260438934,
        "style": 0.03217447260438934,
        "presets": 0.03217447260438934,
        "and": 0.2252213082307254,
        "injects": 0.03217447260438934,
        "retrieved": 0.03217447260438934,
        "context": 0.03217447260438934,
        "per": 0.03217447260438934,
        "section": 0.06434894520877868,
        "lightweight": 0.03217447260438934,
        "rag": 0.1608723630219467,
        "index": 0.03217447260438934,
        "indexer": 0.03217447260438934,
        "embedder": 0.03217447260438934,
        "store": 0.03217447260438934,
        "embed": 0.03217447260438934,
        "readme": 0.09652341781316803,
        "docs": 0.03217447260438934,
        "source": 0.03217447260438934,
        "excerpts": 0.03217447260438934,
        "into": 0.03217447260438934,
        "embeddings": 0.06434894520877868,
        "json": 0.06434894520877868,
        "for": 0.03217447260438934,
        "scoped": 0.03217447260438934,
        "retrieval": 0.03217447260438934,
        "local": 0.06434894520877868,
        "llm": 0.19304683562633607,
        "enforcement": 0.03217447260438934,
        "runner": 0.06434894520877868,
        "targets": 0.03217447260438934,
        "loopback": 0.03217447260438934,
        "model": 0.06434894520877868,
        "or": 0.06434894520877868,
        "ollama": 0.03217447260438934,
        "blocks": 0.03217447260438934,
        "remote": 0.03217447260438934,
        "hosts": 0.03217447260438934,
        "exposes": 0.03217447260438934,
        "configurable": 0.03217447260438934,
        "temperature": 0.03217447260438934,
        "token": 0.03217447260438934,
        "limits": 0.03217447260438934,
        "post": 0.2252213082307254,
        "processing": 0.09652341781316803,
        "contract": 0.03217447260438934,
        "postproc": 0.03217447260438934,
        "add": 0.03217447260438934,
        "badges": 0.06434894520877868,
        "rebuild": 0.03217447260438934,
        "the": 0.1608723630219467,
        "toc": 0.06434894520877868,
        "lint": 0.06434894520877868,
        "markdown": 0.03217447260438934,
        "validate": 0.03217447260438934,
        "links": 0.06434894520877868,
        "manage": 0.03217447260438934,
        "markers": 0.03217447260438934,
        "compute": 0.03217447260438934,
        "scorecards": 0.03217447260438934,
        "saved": 0.03217447260438934,
        "to": 0.09652341781316803,
        "scorecard": 0.06434894520877868,
        "git": 0.1608723630219467,
        "aware": 0.03217447260438934,
        "publishing": 0.06434894520877868,
        "diff": 0.03217447260438934,
        "maps": 0.03217447260438934,
        "changed": 0.03217447260438934,
        "files": 0.03217447260438934,
        "sections": 0.03217447260438934,
        "while": 0.03217447260438934,
        "publisher": 0.06434894520877868,
        "commits": 0.03217447260438934,
        "opens": 0.03217447260438934,
        "prs": 0.03217447260438934,
        "generated": 0.03217447260438934,
        "deltas": 0.03217447260438934,
        "via": 0.03217447260438934,
        "github": 0.03217447260438934,
        "cli": 0.19304683562633607,
        "resilient": 0.03217447260438934,
        "ux": 0.03217447260438934,
        "failsafe": 0.03217447260438934,
        "provide": 0.03217447260438934,
        "verbose": 0.03217447260438934,
        "logging": 0.03217447260438934,
        "hooks": 0.03217447260438934,
        "dry": 0.03217447260438934,
        "run": 0.03217447260438934,
        "preview": 0.03217447260438934,
        "support": 0.03217447260438934,
        "fallback": 0.03217447260438934,
        "stubs": 0.03217447260438934,
        "when": 0.03217447260438934,
        "pipeline": 0.06434894520877868,
        "cannot": 0.03217447260438934,
        "complete": 0.03217447260438934,
        "end": 0.09652341781316803,
        "features": 0.03217447260438934,
        "architecture": 0.06434894520877868,
        "begin": 0.03217447260438934,
        "high": 0.03217447260438934,
        "level": 0.03217447260438934,
        "flow": 0.03217447260438934,
        "orchestrator": 0.09652341781316803,
        "coordinates": 0.03217447260438934,
        "described": 0.03217447260438934,
        "in": 0.03217447260438934,
        "spec": 0.06434894520877868,
        "md": 0.06434894520877868,
        "composing": 0.03217447260438934,
        "scanners": 0.03217447260438934,
        "analyzers": 0.06434894520877868,
        "services": 0.03217447260438934,
        "mermaid": 0.03217447260438934,
        "flowchart": 0.03217447260438934,
        "lr": 0.03217447260438934,
        "init": 0.03217447260438934,
        "update": 0.03217447260438934,
        "orc": 0.2573957808351147,
        "scan": 0.06434894520877868,
        "reposcanner": 0.03217447260438934,
        "n": 0.2252213082307254,
        "manifest": 0.03217447260438934,
        "ana": 0.06434894520877868,
        "language": 0.03217447260438934,
        "build": 0.03217447260438934,
        "etc": 0.03217447260438934,
        "ragindexer": 0.03217447260438934,
        "prompt": 0.1608723630219467,
        "promptbuilder": 0.03217447260438934,
        "llmrunner": 0.03217447260438934,
        "commit": 0.03217447260438934,
        "pr": 0.03217447260438934,
        "output": 0.06434894520877868,
        "artifacts": 0.03217447260438934,
        "component": 0.03217447260438934,
        "responsibilities": 0.03217447260438934,
        "layer": 0.03217447260438934,
        "key": 0.03217447260438934
      },
      "text": "- `docgen/prompting/builder.py` merges signals with Jinja templates, validates commands, applies style presets, and injects retrieved context per section. - **Lightweight RAG index** - `docgen/rag/indexer.py`, `embedder.py`, and `store.py` embed README/docs/source excerpts into `.docgen/embeddings.json` for section-scoped retrieval. - **Local LLM enforcement** - `docgen/llm/runner.py` targets loopback Model Runner or Ollama, blocks remote hosts, and exposes configurable temperature/token limits. - **Post-processing contract** - `docgen/postproc/*` add badges, rebuild the ToC, lint markdown, validate links, manage markers, and compute scorecards saved to `.docgen/scorecard.json`. - **Git-aware publishing** - `docgen/git/diff.py` maps changed files to sections while `docgen/git/publisher.py` commits or opens PRs with generated README deltas via the GitHub CLI. - **Resilient CLI UX** - `docgen/cli.py` and `docgen/failsafe.py` provide verbose logging hooks, dry-run preview support, and fallback stubs when the LLM pipeline cannot complete. <!-- docgen:end:features --> ## Architecture <!-- docgen:begin:architecture --> ### High-Level Flow The orchestrator (`docgen/orchestrator.py`) coordinates the end-to-end pipeline described in `spec/spec.md`, composing scanners, analyzers, prompting, RAG, post-processing, and publishing services. ```mermaid flowchart LR CLI[\"CLI (docgen init/update)\"] Orc[\"Orchestrator\"] Scan[\"RepoScanner\\n(manifest)\"] Ana[\"Analyzers\\n(language/build/etc)\"] RAG[\"RAGIndexer\\n(embeddings)\"] Prompt[\"PromptBuilder\\n(Jinja templates)\"] LLM[\"LLMRunner\\n(local model)\"] Post[\"Post-Processing\\n(lint, ToC, badges, links, scorecard)\"] Git[\"Publisher\\n(commit/PR)\"] Output[\"README.md + .docgen artifacts\"] CLI --> Orc Orc --> Scan Orc --> Ana Orc --> RAG Orc --> Prompt Prompt --> LLM LLM --> Prompt Prompt --> Orc Orc --> Post Post --> Output Post --> Git ``` ### Component Responsibilities | Layer | Key",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#2",
      "vector": {
        "orc": 0.2960684541064695,
        "scan": 0.042295493443781355,
        "ana": 0.042295493443781355,
        "rag": 0.12688648033134406,
        "prompt": 0.16918197377512542,
        "llm": 0.16918197377512542,
        "post": 0.16918197377512542,
        "output": 0.042295493443781355,
        "git": 0.042295493443781355,
        "component": 0.042295493443781355,
        "responsibilities": 0.042295493443781355,
        "layer": 0.042295493443781355,
        "key": 0.042295493443781355,
        "modules": 0.08459098688756271,
        "purpose": 0.042295493443781355,
        "cli": 0.12688648033134406,
        "logging": 0.08459098688756271,
        "docgen": 0.46525042788159493,
        "py": 0.42295493443781357,
        "parses": 0.08459098688756271,
        "subcommands": 0.042295493443781355,
        "wires": 0.042295493443781355,
        "verbose": 0.042295493443781355,
        "and": 0.33836394755025084,
        "configures": 0.042295493443781355,
        "namespaced": 0.042295493443781355,
        "loggers": 0.042295493443781355,
        "configuration": 0.042295493443781355,
        "config": 0.042295493443781355,
        "yml": 0.042295493443781355,
        "into": 0.042295493443781355,
        "docgenconfig": 0.042295493443781355,
        "llmconfig": 0.042295493443781355,
        "publishconfig": 0.042295493443781355,
        "analyzerconfig": 0.042295493443781355,
        "ciconfig": 0.042295493443781355,
        "with": 0.042295493443781355,
        "a": 0.042295493443781355,
        "handwritten": 0.042295493443781355,
        "yaml": 0.042295493443781355,
        "fallback": 0.042295493443781355,
        "repository": 0.042295493443781355,
        "scanning": 0.042295493443781355,
        "repo_scanner": 0.042295493443781355,
        "builds": 0.08459098688756271,
        "repomanifest": 0.042295493443781355,
        "of": 0.08459098688756271,
        "filemeta": 0.042295493443781355,
        "entries": 0.042295493443781355,
        "enforces": 0.042295493443781355,
        "ignore": 0.042295493443781355,
        "rules": 0.042295493443781355,
        "infers": 0.042295493443781355,
        "file": 0.042295493443781355,
        "roles": 0.042295493443781355,
        "caches": 0.042295493443781355,
        "hashes": 0.042295493443781355,
        "in": 0.042295493443781355,
        "manifest_cache": 0.042295493443781355,
        "json": 0.042295493443781355,
        "analyzer": 0.042295493443781355,
        "plugins": 0.042295493443781355,
        "analyzers": 0.042295493443781355,
        "emit": 0.042295493443781355,
        "signal": 0.042295493443781355,
        "objects": 0.042295493443781355,
        "for": 0.042295493443781355,
        "languages": 0.042295493443781355,
        "frameworks": 0.042295493443781355,
        "build": 0.042295493443781355,
        "tools": 0.042295493443781355,
        "dependencies": 0.042295493443781355,
        "entrypoints": 0.042295493443781355,
        "structural": 0.042295493443781355,
        "api": 0.042295493443781355,
        "routes": 0.042295493443781355,
        "entities": 0.042295493443781355,
        "patterns": 0.042295493443781355,
        "monorepo": 0.042295493443781355,
        "hints": 0.042295493443781355,
        "prompting": 0.08459098688756271,
        "builder": 0.042295493443781355,
        "templates": 0.08459098688756271,
        "groups": 0.042295493443781355,
        "signals": 0.042295493443781355,
        "retrieves": 0.042295493443781355,
        "context": 0.08459098688756271,
        "renders": 0.042295493443781355,
        "section": 0.08459098688756271,
        "performs": 0.042295493443781355,
        "command": 0.042295493443781355,
        "validation": 0.042295493443781355,
        "estimates": 0.042295493443781355,
        "token": 0.042295493443781355,
        "budgets": 0.042295493443781355,
        "retrieval": 0.042295493443781355,
        "indexer": 0.042295493443781355,
        "embedder": 0.042295493443781355,
        "store": 0.042295493443781355,
        "constants": 0.042295493443781355,
        "chunks": 0.042295493443781355,
        "readme": 0.042295493443781355,
        "docs": 0.042295493443781355,
        "source": 0.042295493443781355,
        "files": 0.042295493443781355,
        "computes": 0.042295493443781355,
        "bag": 0.042295493443781355,
        "words": 0.042295493443781355,
        "embeddings": 0.042295493443781355,
        "persists": 0.042295493443781355,
        "per": 0.042295493443781355,
        "prunes": 0.042295493443781355,
        "stale": 0.042295493443781355,
        "vectors": 0.042295493443781355,
        "runtime": 0.042295493443781355,
        "runner": 0.042295493443781355,
        "chooses": 0.042295493443781355,
        "http": 0.042295493443781355,
        "or": 0.042295493443781355,
        "execution": 0.042295493443781355,
        "openai": 0.042295493443781355,
        "compatible": 0.042295493443781355,
        "payloads": 0.042295493443781355,
        "restricts": 0.042295493443781355,
        "to": 0.042295493443781355,
        "loopback": 0.042295493443781355,
        "hosts": 0.042295493443781355,
        "normalizes": 0.042295493443781355,
        "responses": 0.042295493443781355,
        "processing": 0.042295493443781355,
        "postproc": 0.042295493443781355,
        "manages": 0.042295493443781355,
        "markers": 0.042295493443781355,
        "regenerates": 0.042295493443781355,
        "toc": 0.042295493443781355,
        "applies": 0.042295493443781355,
        "badges": 0.042295493443781355,
        "lints": 0.042295493443781355,
        "markdown": 0.042295493443781355,
        "validates": 0.042295493443781355,
        "links": 0.042295493443781355
      },
      "text": "--> Orc Orc --> Scan Orc --> Ana Orc --> RAG Orc --> Prompt Prompt --> LLM LLM --> Prompt Prompt --> Orc Orc --> Post Post --> Output Post --> Git ``` ### Component Responsibilities | Layer | Key modules | Purpose | | --- | --- | --- | | CLI & Logging | `docgen/cli.py`, `docgen/logging.py` | Parses subcommands, wires `--verbose`, and configures namespaced loggers. | | Configuration | `docgen/config.py` | Parses `.docgen.yml` into `DocGenConfig`, `LLMConfig`, `PublishConfig`, `AnalyzerConfig`, and `CIConfig`, with a handwritten YAML fallback. | | Repository scanning | `docgen/repo_scanner.py` | Builds `RepoManifest` of `FileMeta` entries, enforces ignore rules, infers file roles, and caches hashes in `.docgen/manifest_cache.json`. | | Analyzer plugins | `docgen/analyzers/*` | Emit `Signal` objects for languages, frameworks, build tools, dependencies, entrypoints, structural modules, API routes, entities, patterns, and monorepo hints. | | Prompting | `docgen/prompting/builder.py`, `templates/` | Groups signals, retrieves context, renders section templates, performs command validation, and estimates token budgets. | | Retrieval (RAG) | `docgen/rag/indexer.py`, `embedder.py`, `store.py`, `constants.py` | Chunks README/docs/source files, computes bag-of-words embeddings, persists context per section, and prunes stale vectors. | | LLM runtime | `docgen/llm/runner.py` | Chooses HTTP or CLI execution, builds OpenAI-compatible payloads, restricts to loopback hosts, and normalizes responses. | | Post-processing | `docgen/postproc/*` | Manages markers, regenerates ToC, applies badges, lints markdown, validates links, and",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#3",
      "vector": {
        "vectors": 0.08497185773241747,
        "llm": 0.12745778659862622,
        "runtime": 0.08497185773241747,
        "docgen": 0.4248592886620874,
        "runner": 0.08497185773241747,
        "py": 0.16994371546483494,
        "chooses": 0.042485928866208736,
        "http": 0.042485928866208736,
        "or": 0.12745778659862622,
        "cli": 0.16994371546483494,
        "execution": 0.042485928866208736,
        "builds": 0.042485928866208736,
        "openai": 0.042485928866208736,
        "compatible": 0.042485928866208736,
        "payloads": 0.042485928866208736,
        "restricts": 0.042485928866208736,
        "to": 0.08497185773241747,
        "loopback": 0.042485928866208736,
        "hosts": 0.042485928866208736,
        "and": 0.3398874309296699,
        "normalizes": 0.042485928866208736,
        "responses": 0.042485928866208736,
        "post": 0.08497185773241747,
        "processing": 0.08497185773241747,
        "postproc": 0.042485928866208736,
        "manages": 0.042485928866208736,
        "markers": 0.042485928866208736,
        "regenerates": 0.042485928866208736,
        "toc": 0.042485928866208736,
        "applies": 0.042485928866208736,
        "badges": 0.042485928866208736,
        "lints": 0.042485928866208736,
        "markdown": 0.042485928866208736,
        "validates": 0.042485928866208736,
        "links": 0.042485928866208736,
        "records": 0.042485928866208736,
        "readme": 0.08497185773241747,
        "quality": 0.08497185773241747,
        "metrics": 0.042485928866208736,
        "git": 0.2124296443310437,
        "integration": 0.042485928866208736,
        "diff": 0.042485928866208736,
        "publisher": 0.08497185773241747,
        "maps": 0.042485928866208736,
        "file": 0.08497185773241747,
        "diffs": 0.042485928866208736,
        "affected": 0.042485928866208736,
        "sections": 0.08497185773241747,
        "handles": 0.042485928866208736,
        "staged": 0.042485928866208736,
        "changes": 0.042485928866208736,
        "pushes": 0.042485928866208736,
        "commits": 0.08497185773241747,
        "prs": 0.08497185773241747,
        "with": 0.08497185773241747,
        "optional": 0.042485928866208736,
        "labels": 0.042485928866208736,
        "safety": 0.042485928866208736,
        "nets": 0.042485928866208736,
        "failsafe": 0.042485928866208736,
        "generates": 0.042485928866208736,
        "placeholder": 0.042485928866208736,
        "full": 0.042485928866208736,
        "stubs": 0.08497185773241747,
        "when": 0.042485928866208736,
        "prompting": 0.08497185773241747,
        "fails": 0.042485928866208736,
        "reference": 0.042485928866208736,
        "material": 0.042485928866208736,
        "spec": 0.16994371546483494,
        "md": 0.16994371546483494,
        "feature_order": 0.042485928866208736,
        "feature_checklist": 0.042485928866208736,
        "docs": 0.042485928866208736,
        "ci": 0.08497185773241747,
        "agents": 0.042485928866208736,
        "capture": 0.042485928866208736,
        "architectural": 0.042485928866208736,
        "contracts": 0.042485928866208736,
        "delivery": 0.042485928866208736,
        "roadmap": 0.042485928866208736,
        "feature": 0.042485928866208736,
        "status": 0.042485928866208736,
        "playbooks": 0.042485928866208736,
        "agent": 0.042485928866208736,
        "guidance": 0.042485928866208736,
        "tests": 0.08497185773241747,
        "mirroring": 0.042485928866208736,
        "modules": 0.042485928866208736,
        "pytest": 0.042485928866208736,
        "suite": 0.042485928866208736,
        "covering": 0.042485928866208736,
        "orchestrator": 0.08497185773241747,
        "analyzers": 0.042485928866208736,
        "workflows": 0.042485928866208736,
        "helpers": 0.042485928866208736,
        "artifacts": 0.042485928866208736,
        "data": 0.042485928866208736,
        "stores": 0.042485928866208736,
        "manifest_cache": 0.042485928866208736,
        "json": 0.12745778659862622,
        "cache": 0.042485928866208736,
        "of": 0.08497185773241747,
        "sizes": 0.042485928866208736,
        "mtimes": 0.042485928866208736,
        "hashes": 0.042485928866208736,
        "for": 0.042485928866208736,
        "fast": 0.042485928866208736,
        "re": 0.042485928866208736,
        "scans": 0.042485928866208736,
        "embeddings": 0.042485928866208736,
        "persisted": 0.042485928866208736,
        "embedding": 0.042485928866208736,
        "keyed": 0.042485928866208736,
        "by": 0.08497185773241747,
        "section": 0.042485928866208736,
        "tag": 0.042485928866208736,
        "via": 0.042485928866208736,
        "embeddingstore": 0.042485928866208736,
        "scorecard": 0.042485928866208736,
        "output": 0.042485928866208736,
        "readmescorecard": 0.042485928866208736,
        "evaluate": 0.042485928866208736,
        "tracking": 0.042485928866208736,
        "coverage": 0.042485928866208736,
        "link": 0.042485928866208736,
        "health": 0.042485928866208736,
        "quick": 0.042485928866208736,
        "start": 0.042485928866208736,
        "metadata": 0.042485928866208736,
        "branches": 0.042485928866208736,
        "created": 0.042485928866208736,
        "summaries": 0.042485928866208736,
        "from": 0.042485928866208736,
        "diffanalyzer": 0.042485928866208736,
        "pipeline": 0.042485928866208736,
        "sequence": 0.042485928866208736,
        "init": 0.042485928866208736,
        "mermaid": 0.042485928866208736,
        "sequencediagram": 0.042485928866208736,
        "participant": 0.25491557319725244,
        "dev": 0.042485928866208736,
        "as": 0.25491557319725244,
        "developer": 0.042485928866208736,
        "orc": 0.042485928866208736,
        "scan": 0.042485928866208736,
        "reposcanner": 0.042485928866208736,
        "ana": 0.042485928866208736,
        "analyzer": 0.042485928866208736,
        "plugins": 0.042485928866208736,
        "rag": 0.042485928866208736
      },
      "text": "vectors. | | LLM runtime | `docgen/llm/runner.py` | Chooses HTTP or CLI execution, builds OpenAI-compatible payloads, restricts to loopback hosts, and normalizes responses. | | Post-processing | `docgen/postproc/*` | Manages markers, regenerates ToC, applies badges, lints markdown, validates links, and records README quality metrics. | | Git integration | `docgen/git/diff.py`, `docgen/git/publisher.py` | Maps file diffs to affected sections, handles staged changes, and pushes commits or PRs with optional labels. | | Safety nets | `docgen/failsafe.py` | Generates placeholder sections or full README stubs when prompting fails. | | Reference material | `spec/spec.md`, `spec/feature_order.md`, `spec/feature_checklist.md`, `docs/ci/*`, `AGENTS.md` | Capture architectural contracts, delivery roadmap, feature status, CI playbooks, and agent guidance. | | Tests | `tests/` mirroring runtime modules | Pytest suite covering CLI, orchestrator, analyzers, prompting, git workflows, LLM runner stubs, and post-processing helpers. | ### Artifacts and Data Stores - `.docgen/manifest_cache.json` - cache of file sizes, mtimes, and hashes for fast re-scans. - `.docgen/embeddings.json` - persisted embedding vectors keyed by section/tag via `EmbeddingStore`. - `.docgen/scorecard.json` - output of `ReadmeScorecard.evaluate`, tracking coverage, link health, and quick-start quality. - Git metadata - branches/commits/PRs created by `Publisher` with summaries from `DiffAnalyzer`. ### Pipeline Sequence (`docgen init`) ```mermaid sequenceDiagram participant Dev as Developer participant CLI as docgen CLI participant Orc as Orchestrator participant Scan as RepoScanner participant Ana as Analyzer plugins participant RAG as",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#4",
      "vector": {
        "branches": 0.01984580179179854,
        "commits": 0.01984580179179854,
        "prs": 0.01984580179179854,
        "created": 0.01984580179179854,
        "by": 0.01984580179179854,
        "publisher": 0.03969160358359708,
        "with": 0.01984580179179854,
        "summaries": 0.01984580179179854,
        "from": 0.01984580179179854,
        "diffanalyzer": 0.03969160358359708,
        "pipeline": 0.01984580179179854,
        "sequence": 0.03969160358359708,
        "docgen": 0.11907481075079124,
        "init": 0.03969160358359708,
        "mermaid": 0.03969160358359708,
        "sequencediagram": 0.03969160358359708,
        "participant": 0.4167618376277693,
        "dev": 0.07938320716719416,
        "as": 0.4167618376277693,
        "developer": 0.03969160358359708,
        "cli": 0.15876641433438832,
        "orc": 0.6152198555457548,
        "orchestrator": 0.03969160358359708,
        "scan": 0.15876641433438832,
        "reposcanner": 0.03969160358359708,
        "ana": 0.11907481075079124,
        "analyzer": 0.03969160358359708,
        "plugins": 0.03969160358359708,
        "rag": 0.11907481075079124,
        "ragindexer": 0.03969160358359708,
        "prompt": 0.17861221612618686,
        "promptbuilder": 0.03969160358359708,
        "llm": 0.05953740537539562,
        "llmrunner": 0.01984580179179854,
        "post": 0.15876641433438832,
        "processing": 0.03969160358359708,
        "fs": 0.03969160358359708,
        "filesystem": 0.01984580179179854,
        "run_init": 0.01984580179179854,
        "path": 0.03969160358359708,
        "repomanifest": 0.03969160358359708,
        "filemeta": 0.01984580179179854,
        "analyze": 0.03969160358359708,
        "manifest": 0.0992290089589927,
        "signal": 0.03969160358359708,
        "build": 0.05953740537539562,
        "contexts": 0.03969160358359708,
        "per": 0.01984580179179854,
        "section": 0.07938320716719416,
        "signals": 0.01984580179179854,
        "invoke": 0.01984580179179854,
        "system": 0.01984580179179854,
        "markdown": 0.05953740537539562,
        "full": 0.01984580179179854,
        "readme": 0.07938320716719416,
        "draft": 0.01984580179179854,
        "lint": 0.03969160358359708,
        "toc": 0.03969160358359708,
        "badges": 0.03969160358359708,
        "links": 0.01984580179179854,
        "scorecard": 0.03969160358359708,
        "final": 0.03969160358359708,
        "quality": 0.01984580179179854,
        "report": 0.01984580179179854,
        "write": 0.01984580179179854,
        "md": 0.01984580179179854,
        "git": 0.01984580179179854,
        "optional": 0.01984580179179854,
        "commit": 0.05953740537539562,
        "publish": 0.01984580179179854,
        "mode": 0.01984580179179854,
        "patch": 0.01984580179179854,
        "update": 0.03969160358359708,
        "ci": 0.01984580179179854,
        "diff": 0.0992290089589927,
        "mark": 0.05953740537539562,
        "markermanager": 0.01984580179179854,
        "pub": 0.03969160358359708,
        "base": 0.05953740537539562,
        "ref": 0.01984580179179854,
        "run_update": 0.01984580179179854,
        "compute": 0.01984580179179854,
        "repo": 0.01984580179179854,
        "diffresult": 0.01984580179179854,
        "changed_files": 0.01984580179179854,
        "sections": 0.05953740537539562,
        "context": 0.01984580179179854,
        "snippets": 0.01984580179179854,
        "render_sections": 0.01984580179179854,
        "new": 0.01984580179179854,
        "bodies": 0.01984580179179854,
        "replace": 0.01984580179179854,
        "patched": 0.01984580179179854,
        "link": 0.01984580179179854,
        "check": 0.01984580179179854
      },
      "text": "branches/commits/PRs created by `Publisher` with summaries from `DiffAnalyzer`. ### Pipeline Sequence (`docgen init`) ```mermaid sequenceDiagram participant Dev as Developer participant CLI as docgen CLI participant Orc as Orchestrator participant Scan as RepoScanner participant Ana as Analyzer plugins participant RAG as RAGIndexer participant Prompt as PromptBuilder participant LLM as LLMRunner participant Post as Post-processing participant FS as Filesystem Dev->>CLI: docgen init . CLI->>Orc: run_init(path) Orc->>Scan: scan() Scan-->>Orc: RepoManifest(FileMeta[]) Orc->>Ana: analyze(manifest) Ana-->>Orc: Signal[] Orc->>RAG: build(manifest) RAG-->>Orc: contexts per section Orc->>Prompt: build(manifest, signals, contexts) Prompt->>LLM: invoke(system, prompt) LLM-->>Prompt: section markdown Prompt-->>Orc: full README draft Orc->>Post: lint -> toc -> badges -> links -> scorecard Post-->>Orc: final markdown + quality report Orc->>FS: write README.md Orc->>Git: optional commit (publish mode \"commit\") ``` ### Patch Sequence (`docgen update`) ```mermaid sequenceDiagram participant Dev as Developer/CI participant CLI as docgen CLI participant Orc as Orchestrator participant Diff as DiffAnalyzer participant Scan as RepoScanner participant Ana as Analyzer plugins participant RAG as RAGIndexer participant Prompt as PromptBuilder participant Mark as MarkerManager participant Post as Post-processing participant Pub as Publisher Dev->>CLI: docgen update --diff-base <ref> CLI->>Orc: run_update(path, base) Orc->>Diff: compute(repo, base) Diff-->>Orc: DiffResult(changed_files, sections) Orc->>Scan: scan() Scan-->>Orc: RepoManifest Orc->>Ana: analyze(manifest) Ana-->>Orc: Signal[] Orc->>RAG: build(manifest, sections) RAG-->>Orc: context snippets Orc->>Prompt: render_sections(sections) Prompt-->>Orc: new section bodies Orc->>Mark: replace(markdown, section) Mark-->>Orc: patched README Orc->>Post: lint/toc/badges/link check/scorecard Post-->>Orc: final README + diff Orc->>Pub: commit",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#5",
      "vector": {
        "base": 0.03639372626234195,
        "diff": 0.0727874525246839,
        "orc": 0.5095121676727873,
        "diffresult": 0.03639372626234195,
        "changed_files": 0.03639372626234195,
        "sections": 0.1455749050493678,
        "scan": 0.10918117878702585,
        "repomanifest": 0.03639372626234195,
        "ana": 0.0727874525246839,
        "analyze": 0.03639372626234195,
        "manifest": 0.10918117878702585,
        "signal": 0.1455749050493678,
        "rag": 0.0727874525246839,
        "build": 0.0727874525246839,
        "context": 0.03639372626234195,
        "snippets": 0.03639372626234195,
        "prompt": 0.0727874525246839,
        "render_sections": 0.03639372626234195,
        "new": 0.03639372626234195,
        "section": 0.0727874525246839,
        "bodies": 0.03639372626234195,
        "mark": 0.0727874525246839,
        "replace": 0.03639372626234195,
        "markdown": 0.03639372626234195,
        "patched": 0.03639372626234195,
        "readme": 0.0727874525246839,
        "post": 0.1455749050493678,
        "lint": 0.03639372626234195,
        "toc": 0.03639372626234195,
        "badges": 0.03639372626234195,
        "link": 0.03639372626234195,
        "check": 0.03639372626234195,
        "scorecard": 0.03639372626234195,
        "final": 0.03639372626234195,
        "pub": 0.03639372626234195,
        "commit": 0.03639372626234195,
        "or": 0.03639372626234195,
        "pr": 0.03639372626234195,
        "branch": 0.03639372626234195,
        "title": 0.03639372626234195,
        "body": 0.03639372626234195,
        "api": 0.2911498100987356,
        "extraction": 0.03639372626234195,
        "structureanalyzer": 0.03639372626234195,
        "inspects": 0.03639372626234195,
        "source": 0.03639372626234195,
        "files": 0.0727874525246839,
        "for": 0.03639372626234195,
        "fastapi": 0.10918117878702585,
        "decorators": 0.03639372626234195,
        "express": 0.03639372626234195,
        "route": 0.03639372626234195,
        "calls": 0.0727874525246839,
        "and": 0.3275435363610775,
        "pydantic": 0.03639372626234195,
        "orm": 0.03639372626234195,
        "entities": 0.03639372626234195,
        "each": 0.03639372626234195,
        "match": 0.03639372626234195,
        "emits": 0.03639372626234195,
        "metadata": 0.03639372626234195,
        "such": 0.03639372626234195,
        "as": 0.18196863131170973,
        "handler": 0.03639372626234195,
        "names": 0.03639372626234195,
        "http": 0.03639372626234195,
        "verbs": 0.03639372626234195,
        "detected": 0.03639372626234195,
        "external": 0.0727874525246839,
        "requests": 0.0727874525246839,
        "session": 0.0727874525246839,
        "db": 0.1455749050493678,
        "assembled": 0.03639372626234195,
        "sequence": 0.03639372626234195,
        "steps": 0.03639372626234195,
        "that": 0.0727874525246839,
        "downstream": 0.03639372626234195,
        "templates": 0.03639372626234195,
        "render": 0.03639372626234195,
        "diagrams": 0.03639372626234195,
        "mermaid": 0.03639372626234195,
        "sequencediagram": 0.03639372626234195,
        "participant": 0.1455749050493678,
        "client": 0.10918117878702585,
        "endpoint": 0.03639372626234195,
        "auth": 0.10918117878702585,
        "service": 0.03639372626234195,
        "database": 0.03639372626234195,
        "login": 0.03639372626234195,
        "token": 0.03639372626234195,
        "response": 0.0727874525246839,
        "write": 0.03639372626234195,
        "ack": 0.03639372626234195,
        "authenticated": 0.03639372626234195,
        "other": 0.03639372626234195,
        "analyzers": 0.0727874525246839,
        "complement": 0.03639372626234195,
        "these": 0.03639372626234195,
        "signals": 0.03639372626234195,
        "entrypointanalyzer": 0.03639372626234195,
        "ranks": 0.03639372626234195,
        "executable": 0.03639372626234195,
        "commands": 0.0727874525246839,
        "uvicorn": 0.03639372626234195,
        "django": 0.03639372626234195,
        "runserver": 0.03639372626234195,
        "npm": 0.03639372626234195,
        "dev": 0.03639372626234195,
        "spring": 0.03639372626234195,
        "boot": 0.03639372626234195,
        "bootrun": 0.03639372626234195,
        "buildanalyzer": 0.03639372626234195,
        "pairs": 0.03639372626234195,
        "with": 0.03639372626234195,
        "reproducible": 0.03639372626234195,
        "test": 0.03639372626234195,
        "os": 0.03639372626234195,
        "aware": 0.03639372626234195,
        "scripts": 0.0727874525246839,
        "dependencyanalyzer": 0.03639372626234195,
        "patternanalyzer": 0.03639372626234195,
        "languageanalyzer": 0.03639372626234195,
        "describe": 0.03639372626234195,
        "frameworks": 0.03639372626234195,
        "docker": 0.03639372626234195,
        "k8s": 0.03639372626234195,
        "ci": 0.03639372626234195,
        "layouts": 0.03639372626234195,
        "monorepo": 0.03639372626234195,
        "hints": 0.03639372626234195,
        "feed": 0.03639372626234195,
        "the": 0.03639372626234195,
        "features": 0.03639372626234195,
        "architecture": 0.0727874525246839,
        "quick": 0.0727874525246839,
        "start": 0.0727874525246839,
        "tests": 0.1455749050493678,
        "under": 0.03639372626234195,
        "prompting": 0.03639372626234195,
        "git": 0.03639372626234195,
        "assert": 0.03639372626234195,
        "accuracy": 0.03639372626234195,
        "command": 0.03639372626234195,
        "selection": 0.03639372626234195,
        "publishing": 0.03639372626234195,
        "behavior": 0.03639372626234195,
        "docgen": 0.0727874525246839,
        "end": 0.03639372626234195,
        "begin": 0.03639372626234195,
        "quickstart": 0.03639372626234195,
        "1": 0.03639372626234195,
        "create": 0.03639372626234195,
        "a": 0.03639372626234195,
        "virtual": 0.03639372626234195,
        "environment": 0.03639372626234195,
        "activate": 0.0727874525246839,
        "it": 0.03639372626234195,
        "windows": 0.03639372626234195,
        "python": 0.0727874525246839,
        "m": 0.0727874525246839,
        "venv": 0.18196863131170973,
        "then": 0.03639372626234195,
        "macos": 0.03639372626234195,
        "linux": 0.03639372626234195
      },
      "text": "base) Diff-->>Orc: DiffResult(changed_files, sections) Orc->>Scan: scan() Scan-->>Orc: RepoManifest Orc->>Ana: analyze(manifest) Ana-->>Orc: Signal[] Orc->>RAG: build(manifest, sections) RAG-->>Orc: context snippets Orc->>Prompt: render_sections(sections) Prompt-->>Orc: new section bodies Orc->>Mark: replace(markdown, section) Mark-->>Orc: patched README Orc->>Post: lint/toc/badges/link check/scorecard Post-->>Orc: final README + diff Orc->>Pub: commit or PR (branch, title, body) ``` ### API Signal Extraction `StructureAnalyzer` inspects source files for FastAPI decorators, Express route calls, and Pydantic/ORM entities. Each match emits `Signal` metadata such as handler names, HTTP verbs, detected external calls (`requests`, `session`, `db`), and assembled `sequence` steps that downstream templates render as diagrams. ```mermaid sequenceDiagram participant Client participant API as FastAPI endpoint participant Auth as External service participant DB as Database Client->>API: POST /login API->>Auth: requests.post() Auth-->>API: token/response API->>DB: session.write() DB-->>API: ack API-->>Client: Authenticated response ``` Other analyzers complement these signals: - `EntryPointAnalyzer` ranks executable commands (FastAPI `uvicorn`, Django `runserver`, npm `dev`, Spring Boot `bootRun`). - `BuildAnalyzer` pairs manifest files with reproducible build/test commands and OS-aware scripts. - `DependencyAnalyzer`, `PatternAnalyzer`, and `LanguageAnalyzer` describe frameworks, Docker/K8s/CI layouts, and monorepo hints that feed the features, architecture, and quick-start sections. - Tests under `tests/analyzers/`, `tests/prompting/`, and `tests/git/` assert signal accuracy, command selection, and publishing behavior. <!-- docgen:end:architecture --> ## Quick Start <!-- docgen:begin:quickstart --> 1. Create a virtual environment and activate it: - Windows: `python -m venv .venv` then `.\\.venv\\Scripts\\activate` - macOS/Linux: `python -m venv .venv`",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#6",
      "vector": {
        "tests": 0.04214497519610896,
        "git": 0.04214497519610896,
        "assert": 0.04214497519610896,
        "signal": 0.04214497519610896,
        "accuracy": 0.04214497519610896,
        "command": 0.04214497519610896,
        "selection": 0.04214497519610896,
        "and": 0.16857990078443583,
        "publishing": 0.04214497519610896,
        "behavior": 0.04214497519610896,
        "docgen": 0.5057397023533075,
        "end": 0.08428995039221791,
        "architecture": 0.04214497519610896,
        "quick": 0.04214497519610896,
        "start": 0.04214497519610896,
        "begin": 0.08428995039221791,
        "quickstart": 0.08428995039221791,
        "1": 0.04214497519610896,
        "create": 0.04214497519610896,
        "a": 0.08428995039221791,
        "virtual": 0.04214497519610896,
        "environment": 0.04214497519610896,
        "activate": 0.12643492558832686,
        "it": 0.04214497519610896,
        "windows": 0.04214497519610896,
        "python": 0.2528698511766537,
        "m": 0.2528698511766537,
        "venv": 0.2528698511766537,
        "then": 0.08428995039221791,
        "scripts": 0.04214497519610896,
        "macos": 0.04214497519610896,
        "linux": 0.04214497519610896,
        "source": 0.04214497519610896,
        "bin": 0.04214497519610896,
        "2": 0.08428995039221791,
        "install": 0.12643492558832686,
        "dependencies": 0.04214497519610896,
        "in": 0.04214497519610896,
        "editable": 0.04214497519610896,
        "mode": 0.08428995039221791,
        "includes": 0.04214497519610896,
        "cli": 0.12643492558832686,
        "entry": 0.04214497519610896,
        "point": 0.04214497519610896,
        "test": 0.04214497519610896,
        "tooling": 0.04214497519610896,
        "bash": 0.12643492558832686,
        "pip": 0.12643492558832686,
        "upgrade": 0.04214497519610896,
        "e": 0.04214497519610896,
        "dev": 0.04214497519610896,
        "3": 0.04214497519610896,
        "configure": 0.04214497519610896,
        "yml": 0.08428995039221791,
        "with": 0.08428995039221791,
        "local": 0.04214497519610896,
        "llm": 0.08428995039221791,
        "runner": 0.12643492558832686,
        "details": 0.04214497519610896,
        "see": 0.04214497519610896,
        "configuration": 0.12643492558832686,
        "below": 0.04214497519610896,
        "4": 0.04214497519610896,
        "generate": 0.04214497519610896,
        "an": 0.04214497519610896,
        "initial": 0.04214497519610896,
        "readme": 0.12643492558832686,
        "from": 0.04214497519610896,
        "the": 0.04214497519610896,
        "repository": 0.04214497519610896,
        "root": 0.04214497519610896,
        "init": 0.04214497519610896,
        "5": 0.04214497519610896,
        "after": 0.04214497519610896,
        "subsequent": 0.04214497519610896,
        "changes": 0.04214497519610896,
        "refresh": 0.04214497519610896,
        "documentation": 0.04214497519610896,
        "update": 0.08428995039221791,
        "diff": 0.04214497519610896,
        "base": 0.04214497519610896,
        "origin": 0.04214497519610896,
        "main": 0.04214497519610896,
        "6": 0.04214497519610896,
        "use": 0.04214497519610896,
        "dry": 0.04214497519610896,
        "run": 0.04214497519610896,
        "to": 0.04214497519610896,
        "preview": 0.04214497519610896,
        "diffs": 0.04214497519610896,
        "or": 0.16857990078443583,
        "verbose": 0.04214497519610896,
        "for": 0.04214497519610896,
        "deeper": 0.04214497519610896,
        "logs": 0.04214497519610896,
        "while": 0.04214497519610896,
        "iterating": 0.04214497519610896,
        "on": 0.04214497519610896,
        "analyzers": 0.08428995039221791,
        "config": 0.04214497519610896,
        "py": 0.04214497519610896,
        "loads": 0.04214497519610896,
        "into": 0.04214497519610896,
        "strongly": 0.04214497519610896,
        "typed": 0.04214497519610896,
        "dataclasses": 0.04214497519610896,
        "provides": 0.04214497519610896,
        "minimal": 0.04214497519610896,
        "yaml": 0.08428995039221791,
        "parser": 0.04214497519610896,
        "when": 0.04214497519610896,
        "pyyaml": 0.04214497519610896,
        "is": 0.04214497519610896,
        "absent": 0.04214497519610896,
        "common": 0.04214497519610896,
        "fields": 0.04214497519610896,
        "ollama": 0.04214497519610896,
        "model": 0.08428995039221791,
        "llama3": 0.04214497519610896,
        "8b": 0.04214497519610896,
        "instruct": 0.04214497519610896,
        "base_url": 0.04214497519610896,
        "http": 0.04214497519610896,
        "localhost": 0.04214497519610896,
        "12434": 0.04214497519610896,
        "engines": 0.04214497519610896,
        "v1": 0.04214497519610896,
        "temperature": 0.04214497519610896,
        "0": 0.04214497519610896,
        "max_tokens": 0.04214497519610896,
        "2048": 0.04214497519610896,
        "style": 0.04214497519610896,
        "comprehensive": 0.04214497519610896,
        "concise": 0.04214497519610896,
        "template_pack": 0.04214497519610896,
        "null": 0.04214497519610896,
        "optional": 0.04214497519610896,
        "alt": 0.04214497519610896,
        "templates": 0.08428995039221791,
        "under": 0.04214497519610896,
        "prompting": 0.04214497519610896,
        "publish": 0.04214497519610896,
        "pr": 0.08428995039221791,
        "commit": 0.04214497519610896,
        "branch_prefix": 0.04214497519610896,
        "labels": 0.04214497519610896,
        "docs": 0.08428995039221791,
        "auto": 0.04214497519610896,
        "update_existing": 0.04214497519610896,
        "false": 0.04214497519610896,
        "enabled": 0.04214497519610896,
        "subset": 0.04214497519610896,
        "of": 0.04214497519610896,
        "plugin": 0.04214497519610896,
        "names": 0.04214497519610896,
        "empty": 0.04214497519610896,
        "uses": 0.04214497519610896,
        "all": 0.04214497519610896,
        "built": 0.04214497519610896,
        "ins": 0.04214497519610896,
        "exclude_paths": 0.08428995039221791,
        "sandbox": 0.08428995039221791,
        "ci": 0.04214497519610896,
        "watched_globs": 0.04214497519610896
      },
      "text": "`tests/git/` assert signal accuracy, command selection, and publishing behavior. <!-- docgen:end:architecture --> ## Quick Start <!-- docgen:begin:quickstart --> 1. Create a virtual environment and activate it: - Windows: `python -m venv .venv` then `.\\.venv\\Scripts\\activate` - macOS/Linux: `python -m venv .venv` then `source .venv/bin/activate` 2. Install dependencies in editable mode (includes CLI entry point and test tooling): ```bash python -m pip install --upgrade pip python -m pip install -e .[dev] ``` 3. Configure `.docgen.yml` with local LLM runner details (see Configuration below). 4. Generate an initial README from the repository root: ```bash python -m docgen.cli init . ``` 5. After subsequent changes, refresh documentation with: ```bash python -m docgen.cli update --diff-base origin/main ``` 6. Use `--dry-run` to preview diffs or `--verbose` for deeper logs while iterating on analyzers. <!-- docgen:end:quickstart --> ## Configuration <!-- docgen:begin:configuration --> `docgen/config.py` loads `.docgen.yml` into strongly typed dataclasses and provides a minimal YAML parser when PyYAML is absent. Common fields: ```yaml llm: runner: \"ollama\" # or \"model-runner\" model: \"llama3:8b-instruct\" base_url: \"http://localhost:12434/engines/v1\" temperature: 0.2 max_tokens: 2048 readme: style: \"comprehensive\" # or \"concise\" template_pack: null # optional alt templates under docgen/prompting/templates/ publish: mode: \"pr\" # \"pr\" or \"commit\" branch_prefix: \"docgen/readme-update\" labels: [\"docs:auto\"] update_existing: false analyzers: enabled: [] # subset of plugin names, empty uses all built-ins exclude_paths: - \"sandbox/\" ci: watched_globs: - \"docgen/**\" - \"docs/**\" exclude_paths: - \"sandbox/\"",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#7",
      "vector": {
        "templates": 0.12058018065872111,
        "under": 0.12058018065872111,
        "docgen": 0.5225141161877915,
        "prompting": 0.08038678710581408,
        "publish": 0.04019339355290704,
        "mode": 0.08038678710581408,
        "pr": 0.16077357421162816,
        "or": 0.12058018065872111,
        "commit": 0.04019339355290704,
        "branch_prefix": 0.04019339355290704,
        "readme": 0.08038678710581408,
        "update": 0.12058018065872111,
        "labels": 0.04019339355290704,
        "docs": 0.24116036131744223,
        "auto": 0.04019339355290704,
        "update_existing": 0.04019339355290704,
        "false": 0.04019339355290704,
        "analyzers": 0.12058018065872111,
        "enabled": 0.04019339355290704,
        "subset": 0.04019339355290704,
        "of": 0.04019339355290704,
        "plugin": 0.04019339355290704,
        "names": 0.04019339355290704,
        "empty": 0.04019339355290704,
        "uses": 0.04019339355290704,
        "all": 0.04019339355290704,
        "built": 0.04019339355290704,
        "ins": 0.04019339355290704,
        "exclude_paths": 0.12058018065872111,
        "sandbox": 0.08038678710581408,
        "ci": 0.24116036131744223,
        "watched_globs": 0.08038678710581408,
        "highlights": 0.04019339355290704,
        "llmconfig": 0.04019339355290704,
        "supports": 0.04019339355290704,
        "env": 0.04019339355290704,
        "overrides": 0.08038678710581408,
        "docgen_llm_model": 0.04019339355290704,
        "docgen_llm_base_url": 0.04019339355290704,
        "docgen_llm_api_key": 0.04019339355290704,
        "and": 0.12058018065872111,
        "enforces": 0.04019339355290704,
        "loopback": 0.04019339355290704,
        "urls": 0.04019339355290704,
        "publishconfig": 0.04019339355290704,
        "toggles": 0.04019339355290704,
        "automatic": 0.04019339355290704,
        "commits": 0.04019339355290704,
        "creation": 0.04019339355290704,
        "publisher": 0.04019339355290704,
        "relies": 0.04019339355290704,
        "on": 0.04019339355290704,
        "the": 0.16077357421162816,
        "github": 0.12058018065872111,
        "cli": 0.08038678710581408,
        "when": 0.12058018065872111,
        "analyzerconfig": 0.04019339355290704,
        "removes": 0.04019339355290704,
        "noisy": 0.04019339355290704,
        "directories": 0.04019339355290704,
        "from": 0.04019339355290704,
        "analysis": 0.04019339355290704,
        "without": 0.04019339355290704,
        "editing": 0.04019339355290704,
        "gitignore": 0.04019339355290704,
        "template": 0.04019339355290704,
        "can": 0.04019339355290704,
        "live": 0.04019339355290704,
        "are": 0.04019339355290704,
        "picked": 0.04019339355290704,
        "up": 0.04019339355290704,
        "automatically": 0.04019339355290704,
        "present": 0.04019339355290704,
        "watchers": 0.04019339355290704,
        "skip": 0.04019339355290704,
        "updates": 0.04019339355290704,
        "changed": 0.04019339355290704,
        "files": 0.04019339355290704,
        "do": 0.04019339355290704,
        "not": 0.04019339355290704,
        "match": 0.04019339355290704,
        "aligning": 0.04019339355290704,
        "with": 0.04019339355290704,
        "workflow": 0.04019339355290704,
        "in": 0.12058018065872111,
        "yml": 0.08038678710581408,
        "end": 0.08038678710581408,
        "configuration": 0.04019339355290704,
        "build": 0.04019339355290704,
        "test": 0.08038678710581408,
        "begin": 0.08038678710581408,
        "build_and_test": 0.08038678710581408,
        "format": 0.04019339355290704,
        "lint": 0.04019339355290704,
        "bash": 0.16077357421162816,
        "black": 0.04019339355290704,
        "tests": 0.12058018065872111,
        "python": 0.2009669677645352,
        "m": 0.2009669677645352,
        "ruff": 0.04019339355290704,
        "check": 0.08038678710581408,
        "type": 0.04019339355290704,
        "core": 0.04019339355290704,
        "modules": 0.08038678710581408,
        "mypy": 0.04019339355290704,
        "run": 0.04019339355290704,
        "full": 0.04019339355290704,
        "suite": 0.04019339355290704,
        "mirrors": 0.04019339355290704,
        "runtime": 0.04019339355290704,
        "orchestrator": 0.08038678710581408,
        "git": 0.04019339355290704,
        "rag": 0.04019339355290704,
        "post": 0.04019339355290704,
        "processing": 0.04019339355290704,
        "pytest": 0.12058018065872111,
        "target": 0.04019339355290704,
        "specific": 0.04019339355290704,
        "areas": 0.04019339355290704,
        "while": 0.04019339355290704,
        "iterating": 0.04019339355290704,
        "k": 0.04019339355290704,
        "test_structure": 0.04019339355290704,
        "py": 0.04019339355290704,
        "regenerate": 0.04019339355290704,
        "fixtures": 0.04019339355290704,
        "inspect": 0.04019339355290704,
        "scorecards": 0.04019339355290704,
        "stored": 0.04019339355290704,
        "to": 0.04019339355290704,
        "validate": 0.04019339355290704,
        "generated": 0.04019339355290704,
        "content": 0.04019339355290704,
        "deployment": 0.08038678710581408,
        "actions": 0.08038678710581408,
        "recipe": 0.04019339355290704,
        "documented": 0.04019339355290704,
        "md": 0.04019339355290704,
        "installs": 0.04019339355290704,
        "package": 0.04019339355290704,
        "editable": 0.04019339355290704
      },
      "text": "templates under docgen/prompting/templates/ publish: mode: \"pr\" # \"pr\" or \"commit\" branch_prefix: \"docgen/readme-update\" labels: [\"docs:auto\"] update_existing: false analyzers: enabled: [] # subset of plugin names, empty uses all built-ins exclude_paths: - \"sandbox/\" ci: watched_globs: - \"docgen/**\" - \"docs/**\" exclude_paths: - \"sandbox/\" ``` Highlights: - `LLMConfig` supports env overrides (`DOCGEN_LLM_MODEL`, `DOCGEN_LLM_BASE_URL`, `DOCGEN_LLM_API_KEY`) and enforces loopback URLs. - `PublishConfig` toggles automatic commits or PR creation; `Publisher` relies on the GitHub CLI when `mode=\"pr\"`. - `AnalyzerConfig.exclude_paths` removes noisy directories from analysis without editing `.gitignore`. - Template overrides can live under `docs/templates/` and are picked up automatically when present. - CI watchers skip updates when changed files do not match `ci.watched_globs`, aligning with the workflow in `docs/ci/docgen-update.yml`. <!-- docgen:end:configuration --> ## Build & Test <!-- docgen:begin:build_and_test --> - Format and lint: ```bash black docgen tests python -m ruff check docgen tests ``` - Type-check core modules: ```bash python -m mypy docgen ``` - Run the full test suite (mirrors runtime modules: CLI, orchestrator, analyzers, prompting, git, RAG, post-processing): ```bash python -m pytest ``` - Target specific areas while iterating: ```bash python -m pytest -k orchestrator python -m pytest tests/analyzers/test_structure.py ``` - Regenerate README fixtures or inspect scorecards stored under `.docgen/` to validate generated content. <!-- docgen:end:build_and_test --> ## Deployment <!-- docgen:begin:deployment --> - GitHub Actions recipe: `docs/ci/docgen-update.yml` (documented in `docs/ci/github-actions.md`) installs the package in editable",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#8",
      "vector": {
        "python": 0.040555355282690636,
        "m": 0.040555355282690636,
        "pytest": 0.040555355282690636,
        "tests": 0.040555355282690636,
        "analyzers": 0.040555355282690636,
        "test_structure": 0.040555355282690636,
        "py": 0.08111071056538127,
        "regenerate": 0.040555355282690636,
        "readme": 0.12166606584807191,
        "fixtures": 0.040555355282690636,
        "or": 0.24333213169614382,
        "inspect": 0.08111071056538127,
        "scorecards": 0.040555355282690636,
        "stored": 0.040555355282690636,
        "under": 0.040555355282690636,
        "docgen": 0.48666426339228763,
        "to": 0.20277677641345318,
        "validate": 0.040555355282690636,
        "generated": 0.08111071056538127,
        "content": 0.040555355282690636,
        "end": 0.08111071056538127,
        "build_and_test": 0.040555355282690636,
        "deployment": 0.12166606584807191,
        "begin": 0.08111071056538127,
        "github": 0.12166606584807191,
        "actions": 0.08111071056538127,
        "recipe": 0.040555355282690636,
        "docs": 0.12166606584807191,
        "ci": 0.12166606584807191,
        "update": 0.16222142113076254,
        "yml": 0.040555355282690636,
        "documented": 0.040555355282690636,
        "in": 0.12166606584807191,
        "md": 0.040555355282690636,
        "installs": 0.040555355282690636,
        "the": 0.40555355282690636,
        "package": 0.040555355282690636,
        "editable": 0.040555355282690636,
        "mode": 0.08111071056538127,
        "runs": 0.040555355282690636,
        "and": 0.16222142113076254,
        "optionally": 0.040555355282690636,
        "commits": 0.08111071056538127,
        "changes": 0.040555355282690636,
        "back": 0.040555355282690636,
        "branch": 0.040555355282690636,
        "self": 0.040555355282690636,
        "hosted": 0.040555355282690636,
        "runners": 0.040555355282690636,
        "are": 0.12166606584807191,
        "recommended": 0.040555355282690636,
        "so": 0.040555355282690636,
        "workflow": 0.040555355282690636,
        "can": 0.08111071056538127,
        "reach": 0.040555355282690636,
        "your": 0.040555355282690636,
        "local": 0.08111071056538127,
        "inference": 0.040555355282690636,
        "endpoint": 0.040555355282690636,
        "docgen_llm_base_url": 0.040555355282690636,
        "same": 0.040555355282690636,
        "settings": 0.040555355282690636,
        "apply": 0.040555355282690636,
        "when": 0.12166606584807191,
        "running": 0.040555355282690636,
        "cd": 0.040555355282690636,
        "pipelines": 0.040555355282690636,
        "outside": 0.040555355282690636,
        "publisher": 0.040555355282690636,
        "push": 0.040555355282690636,
        "directly": 0.040555355282690636,
        "publish": 0.040555355282690636,
        "commit": 0.040555355282690636,
        "for": 0.040555355282690636,
        "bootstrap": 0.040555355282690636,
        "scenarios": 0.040555355282690636,
        "open": 0.040555355282690636,
        "prs": 0.040555355282690636,
        "with": 0.040555355282690636,
        "labeled": 0.040555355282690636,
        "summaries": 0.040555355282690636,
        "gh": 0.040555355282690636,
        "cli": 0.040555355282690636,
        "credentials": 0.040555355282690636,
        "available": 0.040555355282690636,
        "troubleshooting": 0.08111071056538127,
        "use": 0.040555355282690636,
        "verbose": 0.040555355282690636,
        "surface": 0.040555355282690636,
        "analyzer": 0.08111071056538127,
        "selection": 0.040555355282690636,
        "prompt": 0.08111071056538127,
        "generation": 0.040555355282690636,
        "post": 0.040555355282690636,
        "processing": 0.040555355282690636,
        "diagnostics": 0.040555355282690636,
        "emitted": 0.040555355282690636,
        "by": 0.040555355282690636,
        "get_logger": 0.040555355282690636,
        "orchestrator": 0.040555355282690636,
        "if": 0.040555355282690636,
        "already": 0.040555355282690636,
        "exists": 0.040555355282690636,
        "init": 0.040555355282690636,
        "will": 0.040555355282690636,
        "abort": 0.040555355282690636,
        "switch": 0.040555355282690636,
        "remove": 0.040555355282690636,
        "file": 0.040555355282690636,
        "before": 0.08111071056538127,
        "re": 0.040555355282690636,
        "initialising": 0.040555355282690636,
        "empty": 0.040555355282690636,
        "failing": 0.040555355282690636,
        "sections": 0.040555355282690636,
        "trigger": 0.040555355282690636,
        "fallback": 0.040555355282690636,
        "stubs": 0.040555355282690636,
        "from": 0.040555355282690636,
        "failsafe": 0.040555355282690636,
        "raised": 0.040555355282690636,
        "reason": 0.040555355282690636,
        "rerun": 0.040555355282690636,
        "once": 0.040555355282690636,
        "underlying": 0.040555355282690636,
        "issue": 0.040555355282690636,
        "is": 0.08111071056538127,
        "fixed": 0.040555355282690636,
        "link": 0.040555355282690636,
        "validation": 0.040555355282690636,
        "issues": 0.040555355282690636,
        "logged": 0.040555355282690636,
        "as": 0.040555355282690636,
        "warnings": 0.040555355282690636,
        "relative": 0.040555355282690636,
        "paths": 0.040555355282690636,
        "add": 0.040555355282690636,
        "missing": 0.040555355282690636,
        "files": 0.040555355282690636,
        "committing": 0.040555355282690636,
        "clear": 0.040555355282690636,
        "manifest_cache": 0.040555355282690636,
        "json": 0.08111071056538127,
        "embeddings": 0.040555355282690636,
        "refactoring": 0.040555355282690636,
        "large": 0.040555355282690636,
        "parts": 0.040555355282690636,
        "of": 0.040555355282690636,
        "repo": 0.040555355282690636,
        "structure": 0.040555355282690636,
        "force": 0.040555355282690636,
        "a": 0.08111071056538127,
        "fresh": 0.040555355282690636,
        "scan": 0.040555355282690636,
        "ensure": 0.040555355282690636,
        "model": 0.040555355282690636,
        "runner": 0.040555355282690636,
        "reachable": 0.040555355282690636,
        "at": 0.040555355282690636,
        "loopback": 0.040555355282690636,
        "url": 0.040555355282690636,
        "remote": 0.040555355282690636
      },
      "text": "python -m pytest tests/analyzers/test_structure.py ``` - Regenerate README fixtures or inspect scorecards stored under `.docgen/` to validate generated content. <!-- docgen:end:build_and_test --> ## Deployment <!-- docgen:begin:deployment --> - GitHub Actions recipe: `docs/ci/docgen-update.yml` (documented in `docs/ci/github-actions.md`) installs the package in editable mode, runs `docgen update`, and optionally commits README changes back to the branch. - Self-hosted runners are recommended so the workflow can reach your local inference endpoint (`DOCGEN_LLM_BASE_URL`). The same settings apply when running in CI/CD pipelines outside GitHub. - `Publisher` can push commits directly (`publish.mode: commit`) for bootstrap scenarios or open PRs with labeled summaries when `gh` CLI credentials are available. <!-- docgen:end:deployment --> ## Troubleshooting <!-- docgen:begin:troubleshooting --> - Use `--verbose` to surface analyzer selection, prompt generation, and post-processing diagnostics emitted by `get_logger(\"orchestrator\")`. - If the README already exists, `docgen init` will abort; switch to `docgen update` or remove the file before re-initialising. - Empty or failing sections trigger fallback stubs from `docgen/failsafe.py`; inspect the raised reason and rerun once the underlying analyzer or prompt issue is fixed. - Link validation issues are logged as warnings. Update relative paths or add missing files before committing generated docs. - Clear `.docgen/manifest_cache.json` and `.docgen/embeddings.json` when refactoring large parts of the repo structure to force a fresh scan. - Ensure the local model runner is reachable at a loopback URL; remote",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#9",
      "vector": {
        "paths": 0.03782347372361169,
        "or": 0.26476431606528184,
        "add": 0.11347042117083507,
        "missing": 0.03782347372361169,
        "files": 0.03782347372361169,
        "before": 0.03782347372361169,
        "committing": 0.03782347372361169,
        "generated": 0.03782347372361169,
        "docs": 0.03782347372361169,
        "clear": 0.03782347372361169,
        "docgen": 0.4538816846833403,
        "manifest_cache": 0.03782347372361169,
        "json": 0.07564694744722338,
        "and": 0.11347042117083507,
        "embeddings": 0.03782347372361169,
        "when": 0.07564694744722338,
        "refactoring": 0.03782347372361169,
        "large": 0.03782347372361169,
        "parts": 0.03782347372361169,
        "of": 0.03782347372361169,
        "the": 0.3404112635125052,
        "repo": 0.03782347372361169,
        "structure": 0.03782347372361169,
        "to": 0.03782347372361169,
        "force": 0.03782347372361169,
        "a": 0.4538816846833403,
        "fresh": 0.03782347372361169,
        "scan": 0.03782347372361169,
        "ensure": 0.03782347372361169,
        "local": 0.07564694744722338,
        "model": 0.07564694744722338,
        "runner": 0.07564694744722338,
        "is": 0.07564694744722338,
        "reachable": 0.03782347372361169,
        "at": 0.03782347372361169,
        "loopback": 0.07564694744722338,
        "url": 0.03782347372361169,
        "remote": 0.07564694744722338,
        "hosts": 0.07564694744722338,
        "are": 0.07564694744722338,
        "intentionally": 0.03782347372361169,
        "rejected": 0.03782347372361169,
        "by": 0.03782347372361169,
        "llmrunner": 0.07564694744722338,
        "for": 0.03782347372361169,
        "security": 0.03782347372361169,
        "end": 0.11347042117083507,
        "troubleshooting": 0.03782347372361169,
        "faq": 0.11347042117083507,
        "begin": 0.07564694744722338,
        "q": 0.15129389489444675,
        "how": 0.03782347372361169,
        "this": 0.07564694744722338,
        "readme": 0.03782347372361169,
        "maintained": 0.03782347372361169,
        "generate": 0.03782347372361169,
        "with": 0.03782347372361169,
        "init": 0.03782347372361169,
        "keep": 0.03782347372361169,
        "it": 0.03782347372361169,
        "current": 0.03782347372361169,
        "via": 0.07564694744722338,
        "update": 0.03782347372361169,
        "optionally": 0.03782347372361169,
        "in": 0.15129389489444675,
        "ci": 0.03782347372361169,
        "using": 0.03782347372361169,
        "provided": 0.03782347372361169,
        "workflow": 0.03782347372361169,
        "what": 0.03782347372361169,
        "happens": 0.03782347372361169,
        "if": 0.03782347372361169,
        "analyzers": 0.11347042117083507,
        "miss": 0.03782347372361169,
        "framework": 0.03782347372361169,
        "command": 0.03782347372361169,
        "signals": 0.03782347372361169,
        "pluggable": 0.03782347372361169,
        "custom": 0.03782347372361169,
        "analyzer": 0.03782347372361169,
        "entry": 0.03782347372361169,
        "point": 0.03782347372361169,
        "group": 0.03782347372361169,
        "extend": 0.03782347372361169,
        "existing": 0.03782347372361169,
        "utilities": 0.03782347372361169,
        "under": 0.03782347372361169,
        "utils": 0.03782347372361169,
        "py": 0.03782347372361169,
        "can": 0.03782347372361169,
        "use": 0.03782347372361169,
        "llm": 0.03782347372361169,
        "endpoint": 0.03782347372361169,
        "no": 0.03782347372361169,
        "enforces": 0.03782347372361169,
        "internal": 0.03782347372361169,
        "supply": 0.03782347372361169,
        "ollama": 0.03782347372361169,
        "instance": 0.03782347372361169,
        "instead": 0.03782347372361169,
        "where": 0.03782347372361169,
        "do": 0.03782347372361169,
        "i": 0.03782347372361169,
        "report": 0.03782347372361169,
        "issues": 0.03782347372361169,
        "propose": 0.03782347372361169,
        "enhancements": 0.03782347372361169,
        "file": 0.03782347372361169,
        "an": 0.03782347372361169,
        "issue": 0.03782347372361169,
        "open": 0.03782347372361169,
        "discussion": 0.03782347372361169,
        "repository": 0.03782347372361169,
        "reference": 0.03782347372361169,
        "relevant": 0.03782347372361169,
        "sections": 0.03782347372361169,
        "spec": 0.15129389489444675,
        "md": 0.11347042117083507,
        "feature_order": 0.07564694744722338,
        "describing": 0.03782347372361169,
        "change": 0.03782347372361169,
        "license": 0.15129389489444675,
        "licensing": 0.03782347372361169,
        "information": 0.03782347372361169,
        "once": 0.03782347372361169,
        "project": 0.03782347372361169,
        "selects": 0.03782347372361169,
        "track": 0.03782347372361169,
        "candidate": 0.03782347372361169,
        "licenses": 0.03782347372361169,
        "alongside": 0.03782347372361169,
        "roadmap": 0.03782347372361169
      },
      "text": "paths or add missing files before committing generated docs. - Clear `.docgen/manifest_cache.json` and `.docgen/embeddings.json` when refactoring large parts of the repo structure to force a fresh scan. - Ensure the local model runner is reachable at a loopback URL; remote hosts are intentionally rejected by `LLMRunner` for security. <!-- docgen:end:troubleshooting --> ## FAQ <!-- docgen:begin:faq --> **Q: How is this README maintained?** A: Generate with `docgen init` and keep it current via `docgen update` (optionally in CI using the provided workflow). **Q: What happens if analyzers miss a framework or command?** A: Signals are pluggable\u2014add a custom analyzer via the `docgen.analyzers` entry-point group or extend the existing utilities under `docgen/analyzers/utils.py`. **Q: Can docgen use a remote LLM endpoint?** A: No. `LLMRunner` enforces loopback/`.internal` hosts; supply a local model runner or Ollama instance instead. **Q: Where do I report issues or propose enhancements?** A: File an issue or open a discussion in this repository and reference the relevant sections in `spec/spec.md` or `spec/feature_order.md` when describing the change. <!-- docgen:end:faq --> ## License <!-- docgen:begin:license --> Add licensing information once the project selects a license. Track candidate licenses alongside the roadmap in `spec/feature_order.md`. <!-- docgen:end:license -->",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "docs/ci/docgen-update.yml#0",
      "vector": {
        "name": 0.2773500981126145,
        "docgen": 0.1849000654084097,
        "update": 0.2311250817605121,
        "on": 0.09245003270420485,
        "push": 0.046225016352102424,
        "branches": 0.09245003270420485,
        "main": 0.13867504905630726,
        "pull_request": 0.13867504905630726,
        "jobs": 0.046225016352102424,
        "readme": 0.1849000654084097,
        "runs": 0.046225016352102424,
        "self": 0.046225016352102424,
        "hosted": 0.046225016352102424,
        "steps": 0.09245003270420485,
        "uses": 0.13867504905630726,
        "actions": 0.2311250817605121,
        "checkout": 0.046225016352102424,
        "v4": 0.09245003270420485,
        "with": 0.13867504905630726,
        "fetch": 0.046225016352102424,
        "depth": 0.046225016352102424,
        "0": 0.046225016352102424,
        "setup": 0.046225016352102424,
        "python": 0.2311250817605121,
        "v5": 0.046225016352102424,
        "version": 0.046225016352102424,
        "3": 0.046225016352102424,
        "11": 0.046225016352102424,
        "cache": 0.09245003270420485,
        "path": 0.046225016352102424,
        "pip": 0.2773500981126145,
        "key": 0.046225016352102424,
        "runner": 0.09245003270420485,
        "os": 0.09245003270420485,
        "hashfiles": 0.046225016352102424,
        "pyproject": 0.046225016352102424,
        "toml": 0.046225016352102424,
        "restore": 0.046225016352102424,
        "keys": 0.046225016352102424,
        "install": 0.13867504905630726,
        "dependencies": 0.046225016352102424,
        "run": 0.2311250817605121,
        "m": 0.13867504905630726,
        "upgrade": 0.046225016352102424,
        "e": 0.046225016352102424,
        "dev": 0.046225016352102424,
        "determine": 0.046225016352102424,
        "diff": 0.1849000654084097,
        "base": 0.2773500981126145,
        "id": 0.046225016352102424,
        "if": 0.09245003270420485,
        "github": 0.2311250817605121,
        "event_name": 0.046225016352102424,
        "then": 0.09245003270420485,
        "echo": 0.09245003270420485,
        "event": 0.046225016352102424,
        "sha": 0.046225016352102424,
        "github_output": 0.09245003270420485,
        "else": 0.046225016352102424,
        "origin": 0.046225016352102424,
        "fi": 0.09245003270420485,
        "env": 0.046225016352102424,
        "docgen_llm_base_url": 0.046225016352102424,
        "http": 0.046225016352102424,
        "localhost": 0.046225016352102424,
        "12434": 0.046225016352102424,
        "engines": 0.046225016352102424,
        "v1": 0.046225016352102424,
        "cli": 0.046225016352102424,
        "outputs": 0.046225016352102424,
        "commit": 0.09245003270420485,
        "md": 0.09245003270420485,
        "optional": 0.046225016352102424,
        "git": 0.1849000654084097,
        "status": 0.046225016352102424,
        "short": 0.046225016352102424,
        "grep": 0.046225016352102424,
        "q": 0.046225016352102424,
        "config": 0.09245003270420485,
        "user": 0.09245003270420485,
        "email": 0.046225016352102424,
        "users": 0.046225016352102424,
        "noreply": 0.046225016352102424,
        "com": 0.046225016352102424,
        "am": 0.046225016352102424,
        "docs": 0.046225016352102424,
        "via": 0.046225016352102424
      },
      "text": "name: docgen-update on: push: branches: [ main ] pull_request: branches: [ main ] jobs: update-readme: runs-on: self-hosted steps: - uses: actions/checkout@v4 with: fetch-depth: 0 - uses: actions/setup-python@v5 with: python-version: '3.11' - uses: actions/cache@v4 with: path: ~/.cache/pip key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }} restore-keys: ${{ runner.os }}-pip- - name: Install dependencies run: | python -m pip install --upgrade pip python -m pip install -e .[dev] - name: Determine diff base id: diff run: | if [ \"${{ github.event_name }}\" = \"pull_request\" ]; then echo \"base=${{ github.event.pull_request.base.sha }}\" >> \"$GITHUB_OUTPUT\" else echo \"base=origin/main\" >> \"$GITHUB_OUTPUT\" fi - name: Run docgen update env: DOCGEN_LLM_BASE_URL: http://localhost:12434/engines/v1 run: python -m docgen.cli update --diff-base ${{ steps.diff.outputs.base }} - name: Commit README.md (optional) run: | if git status --short | grep -q README.md; then git config user.name \"github-actions\" git config user.email \"github-actions@users.noreply.github.com\" git commit -am \"docs: update README via docgen\" fi",
      "metadata": {
        "path": "docs/ci/docgen-update.yml",
        "tags": [
          "docs"
        ],
        "hash": "f3bf5ea7b740892011a0aa14cb06b4bb27a4f3ea348599d85003a66032594538"
      }
    },
    {
      "id": "docs/ci/github-actions.md#0",
      "vector": {
        "github": 0.25925925925925924,
        "actions": 0.2222222222222222,
        "integration": 0.037037037037037035,
        "the": 0.1111111111111111,
        "workflow": 0.037037037037037035,
        "below": 0.037037037037037035,
        "runs": 0.07407407407407407,
        "docgen": 0.25925925925925924,
        "update": 0.2222222222222222,
        "on": 0.1111111111111111,
        "pushes": 0.037037037037037035,
        "and": 0.037037037037037035,
        "pull": 0.037037037037037035,
        "requests": 0.037037037037037035,
        "it": 0.037037037037037035,
        "assumes": 0.037037037037037035,
        "a": 0.037037037037037035,
        "self": 0.07407407407407407,
        "hosted": 0.1111111111111111,
        "runner": 0.14814814814814814,
        "or": 0.037037037037037035,
        "with": 0.14814814814814814,
        "network": 0.037037037037037035,
        "access": 0.07407407407407407,
        "to": 0.037037037037037035,
        "your": 0.037037037037037035,
        "local": 0.07407407407407407,
        "model": 0.037037037037037035,
        "runtime": 0.037037037037037035,
        "job": 0.037037037037037035,
        "skips": 0.037037037037037035,
        "early": 0.037037037037037035,
        "when": 0.037037037037037035,
        "no": 0.037037037037037035,
        "files": 0.037037037037037035,
        "match": 0.037037037037037035,
        "yml": 0.037037037037037035,
        "s": 0.037037037037037035,
        "ci": 0.037037037037037035,
        "watched_globs": 0.037037037037037035,
        "entries": 0.037037037037037035,
        "so": 0.037037037037037035,
        "that": 0.037037037037037035,
        "purely": 0.037037037037037035,
        "documentation": 0.037037037037037035,
        "only": 0.037037037037037035,
        "changes": 0.037037037037037035,
        "do": 0.037037037037037035,
        "not": 0.037037037037037035,
        "trigger": 0.037037037037037035,
        "generator": 0.037037037037037035,
        "yaml": 0.037037037037037035,
        "name": 0.3333333333333333,
        "push": 0.037037037037037035,
        "branches": 0.07407407407407407,
        "main": 0.1111111111111111,
        "pull_request": 0.1111111111111111,
        "jobs": 0.037037037037037035,
        "readme": 0.14814814814814814,
        "requires": 0.037037037037037035,
        "llm": 0.037037037037037035,
        "steps": 0.07407407407407407,
        "checkout": 0.07407407407407407,
        "repository": 0.037037037037037035,
        "uses": 0.1111111111111111,
        "v4": 0.07407407407407407,
        "fetch": 0.037037037037037035,
        "depth": 0.037037037037037035,
        "0": 0.037037037037037035,
        "set": 0.037037037037037035,
        "up": 0.037037037037037035,
        "python": 0.2222222222222222,
        "setup": 0.037037037037037035,
        "v5": 0.037037037037037035,
        "version": 0.037037037037037035,
        "3": 0.037037037037037035,
        "11": 0.037037037037037035,
        "cache": 0.1111111111111111,
        "pip": 0.25925925925925924,
        "dependencies": 0.037037037037037035,
        "path": 0.037037037037037035,
        "key": 0.037037037037037035,
        "os": 0.07407407407407407,
        "hashfiles": 0.037037037037037035,
        "pyproject": 0.037037037037037035,
        "toml": 0.037037037037037035,
        "restore": 0.037037037037037035,
        "keys": 0.037037037037037035,
        "install": 0.1111111111111111,
        "in": 0.037037037037037035,
        "editable": 0.037037037037037035,
        "mode": 0.037037037037037035,
        "run": 0.18518518518518517,
        "m": 0.1111111111111111,
        "upgrade": 0.037037037037037035,
        "e": 0.037037037037037035,
        "dev": 0.037037037037037035,
        "determine": 0.037037037037037035,
        "diff": 0.14814814814814814,
        "base": 0.2222222222222222,
        "id": 0.037037037037037035,
        "if": 0.1111111111111111,
        "event_name": 0.037037037037037035,
        "then": 0.07407407407407407,
        "echo": 0.07407407407407407,
        "event": 0.037037037037037035,
        "sha": 0.037037037037037035,
        "github_output": 0.07407407407407407,
        "else": 0.037037037037037035,
        "origin": 0.037037037037037035,
        "fi": 0.07407407407407407,
        "env": 0.037037037037037035,
        "docgen_llm_base_url": 0.037037037037037035,
        "http": 0.037037037037037035,
        "localhost": 0.037037037037037035,
        "12434": 0.037037037037037035,
        "engines": 0.037037037037037035,
        "v1": 0.037037037037037035,
        "cli": 0.037037037037037035,
        "outputs": 0.037037037037037035,
        "commit": 0.07407407407407407,
        "updates": 0.037037037037037035,
        "any": 0.037037037037037035,
        "git": 0.14814814814814814,
        "status": 0.037037037037037035,
        "short": 0.037037037037037035,
        "grep": 0.037037037037037035,
        "q": 0.037037037037037035,
        "md": 0.037037037037037035,
        "config": 0.07407407407407407,
        "user": 0.07407407407407407,
        "email": 0.037037037037037035,
        "users": 0.037037037037037035,
        "noreply": 0.037037037037037035,
        "com": 0.037037037037037035,
        "am": 0.037037037037037035,
        "docs": 0.037037037037037035,
        "via": 0.037037037037037035
      },
      "text": "# GitHub Actions Integration The workflow below runs `docgen update` on pushes and pull requests. It assumes a self-hosted runner (or GitHub-hosted runner with network access to your local model runtime). The job skips early when no files match `.docgen.yml`'s `ci.watched_globs` entries so that purely documentation-only changes do not trigger the generator. ```yaml name: docgen-update on: push: branches: [ main ] pull_request: branches: [ main ] jobs: update-readme: runs-on: self-hosted # requires local LLM access steps: - name: Checkout repository uses: actions/checkout@v4 with: fetch-depth: 0 - name: Set up Python uses: actions/setup-python@v5 with: python-version: '3.11' - name: Cache pip dependencies uses: actions/cache@v4 with: path: ~/.cache/pip key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }} restore-keys: ${{ runner.os }}-pip- - name: Install docgen in editable mode run: | python -m pip install --upgrade pip python -m pip install -e .[dev] - name: Determine diff base id: diff run: | if [ \"${{ github.event_name }}\" = \"pull_request\" ]; then echo \"base=${{ github.event.pull_request.base.sha }}\" >> \"$GITHUB_OUTPUT\" else echo \"base=origin/main\" >> \"$GITHUB_OUTPUT\" fi - name: Run docgen update env: DOCGEN_LLM_BASE_URL: http://localhost:12434/engines/v1 run: | python -m docgen.cli update --diff-base ${{ steps.diff.outputs.base }} - name: Commit README updates (if any) run: | if git status --short | grep -q README.md; then git config user.name \"github-actions\" git config user.email \"github-actions@users.noreply.github.com\" git commit -am \"docs: update README via docgen\" fi -",
      "metadata": {
        "path": "docs/ci/github-actions.md",
        "tags": [
          "docs"
        ],
        "hash": "518fe87441e7f08aadb0ed175d54a5ce3c227af17677678096af6df070190e59"
      }
    },
    {
      "id": "docs/ci/github-actions.md#1",
      "vector": {
        "diff": 0.1363988678940947,
        "base": 0.1363988678940947,
        "steps": 0.06819943394704735,
        "outputs": 0.06819943394704735,
        "name": 0.2727977357881894,
        "commit": 0.1363988678940947,
        "readme": 0.4091966036822841,
        "updates": 0.06819943394704735,
        "if": 0.20459830184114206,
        "any": 0.06819943394704735,
        "run": 0.06819943394704735,
        "git": 0.2727977357881894,
        "status": 0.06819943394704735,
        "short": 0.06819943394704735,
        "grep": 0.06819943394704735,
        "q": 0.06819943394704735,
        "md": 0.1363988678940947,
        "then": 0.06819943394704735,
        "config": 0.1363988678940947,
        "user": 0.1363988678940947,
        "github": 0.2727977357881894,
        "actions": 0.20459830184114206,
        "email": 0.06819943394704735,
        "users": 0.06819943394704735,
        "noreply": 0.06819943394704735,
        "com": 0.06819943394704735,
        "am": 0.06819943394704735,
        "docs": 0.06819943394704735,
        "update": 0.06819943394704735,
        "via": 0.06819943394704735,
        "docgen": 0.06819943394704735,
        "fi": 0.06819943394704735,
        "upload": 0.1363988678940947,
        "artifact": 0.1363988678940947,
        "success": 0.06819943394704735,
        "uses": 0.06819943394704735,
        "v4": 0.06819943394704735,
        "with": 0.1363988678940947,
        "generated": 0.06819943394704735,
        "path": 0.06819943394704735,
        "note": 0.06819943394704735,
        "the": 0.20459830184114206,
        "workflow": 0.06819943394704735,
        "relies": 0.06819943394704735,
        "on": 0.06819943394704735,
        "docgen_llm_base_url": 0.06819943394704735,
        "pointing": 0.06819943394704735,
        "to": 0.20459830184114206,
        "a": 0.06819943394704735,
        "local": 0.06819943394704735,
        "or": 0.1363988678940947,
        "private": 0.1363988678940947,
        "inference": 0.06819943394704735,
        "endpoint": 0.06819943394704735,
        "for": 0.06819943394704735,
        "hosted": 0.06819943394704735,
        "runners": 0.06819943394704735,
        "you": 0.06819943394704735,
        "will": 0.06819943394704735,
        "need": 0.06819943394704735,
        "expose": 0.06819943394704735,
        "runner": 0.06819943394704735,
        "within": 0.06819943394704735,
        "your": 0.06819943394704735,
        "network": 0.06819943394704735,
        "switch": 0.06819943394704735,
        "ollama": 0.06819943394704735,
        "cli": 0.06819943394704735,
        "appropriate": 0.06819943394704735,
        "caching": 0.06819943394704735
      },
      "text": "--diff-base ${{ steps.diff.outputs.base }} - name: Commit README updates (if any) run: | if git status --short | grep -q README.md; then git config user.name \"github-actions\" git config user.email \"github-actions@users.noreply.github.com\" git commit -am \"docs: update README via docgen\" fi - name: Upload README artifact if: success() uses: actions/upload-artifact@v4 with: name: generated-readme path: README.md ``` > **Note:** the workflow relies on `DOCGEN_LLM_BASE_URL` pointing to a local or > private inference endpoint. For GitHub-hosted runners you will need to expose > the runner within your private network or switch to the `ollama` CLI with > appropriate caching. ```",
      "metadata": {
        "path": "docs/ci/github-actions.md",
        "tags": [
          "docs"
        ],
        "hash": "518fe87441e7f08aadb0ed175d54a5ce3c227af17677678096af6df070190e59"
      }
    },
    {
      "id": "spec/feature_checklist.md#0",
      "vector": {
        "intelligent": 0.03809696588797296,
        "readme": 0.1142908976639189,
        "generator": 0.03809696588797296,
        "feature": 0.03809696588797296,
        "checklist": 0.03809696588797296,
        "status": 0.03809696588797296,
        "legend": 0.03809696588797296,
        "not": 0.03809696588797296,
        "started": 0.03809696588797296,
        "in": 0.03809696588797296,
        "progress": 0.03809696588797296,
        "done": 0.03809696588797296,
        "scope": 0.03809696588797296,
        "tags": 0.03809696588797296,
        "mvp": 0.4571635906556756,
        "required": 0.03809696588797296,
        "for": 0.1142908976639189,
        "proof": 0.03809696588797296,
        "of": 0.07619393177594593,
        "concept": 0.03809696588797296,
        "next": 0.19048482943986483,
        "nice": 0.03809696588797296,
        "to": 0.1142908976639189,
        "have": 0.03809696588797296,
        "soon": 0.03809696588797296,
        "stretch": 0.1142908976639189,
        "later": 0.03809696588797296,
        "1": 0.07619393177594593,
        "core": 0.03809696588797296,
        "workflows": 0.03809696588797296,
        "x": 0.6095514542075674,
        "docgen": 0.15238786355189185,
        "init": 0.03809696588797296,
        "initialize": 0.03809696588797296,
        "repos": 0.03809696588797296,
        "without": 0.07619393177594593,
        "docs": 0.1142908976639189,
        "update": 0.03809696588797296,
        "detect": 0.03809696588797296,
        "changes": 0.03809696588797296,
        "on": 0.03809696588797296,
        "commit": 0.03809696588797296,
        "pr": 0.03809696588797296,
        "and": 0.03809696588797296,
        "patch": 0.03809696588797296,
        "affected": 0.03809696588797296,
        "sections": 0.03809696588797296,
        "regenerate": 0.03809696588797296,
        "manual": 0.03809696588797296,
        "full": 0.03809696588797296,
        "partial": 0.03809696588797296,
        "regeneration": 0.03809696588797296,
        "dry": 0.07619393177594593,
        "run": 0.07619393177594593,
        "mode": 0.07619393177594593,
        "preview": 0.03809696588797296,
        "diffs": 0.03809696588797296,
        "writing": 0.03809696588797296,
        "service": 0.03809696588797296,
        "fastapi": 0.07619393177594593,
        "endpoints": 0.03809696588797296,
        "ci": 0.07619393177594593,
        "bots": 0.03809696588797296,
        "2": 0.03809696588797296,
        "repository": 0.03809696588797296,
        "scanning": 0.03809696588797296,
        "indexing": 0.03809696588797296,
        "walk": 0.03809696588797296,
        "filesystem": 0.03809696588797296,
        "with": 0.03809696588797296,
        "ignore": 0.03809696588797296,
        "rules": 0.03809696588797296,
        "gitignore": 0.03809696588797296,
        "yml": 0.03809696588797296,
        "build": 0.07619393177594593,
        "normalized": 0.03809696588797296,
        "manifest": 0.07619393177594593,
        "files": 0.07619393177594593,
        "roles": 0.03809696588797296,
        "src": 0.03809696588797296,
        "test": 0.03809696588797296,
        "config": 0.07619393177594593,
        "infra": 0.03809696588797296,
        "hash": 0.03809696588797296,
        "cache": 0.03809696588797296,
        "file": 0.03809696588797296,
        "metadata": 0.03809696588797296,
        "speed": 0.03809696588797296,
        "subsequent": 0.03809696588797296,
        "runs": 0.03809696588797296,
        "entrypoint": 0.07619393177594593,
        "detection": 0.07619393177594593,
        "e": 0.03809696588797296,
        "g": 0.03809696588797296,
        "main": 0.03809696588797296,
        "springbootapplication": 0.03809696588797296,
        "app": 0.03809696588797296,
        "monorepo": 0.07619393177594593,
        "module": 0.03809696588797296,
        "3": 0.03809696588797296,
        "analyzers": 0.19048482943986483,
        "plugin": 0.03809696588797296,
        "based": 0.03809696588797296,
        "language": 0.03809696588797296,
        "python": 0.03809696588797296,
        "java": 0.03809696588797296,
        "node": 0.03809696588797296,
        "js": 0.03809696588797296,
        "tier": 0.03809696588797296,
        "poetry": 0.03809696588797296,
        "setuptools": 0.03809696588797296,
        "maven": 0.03809696588797296,
        "gradle": 0.03809696588797296,
        "npm": 0.03809696588797296,
        "pnpm": 0.03809696588797296,
        "yarn": 0.03809696588797296,
        "dependency": 0.03809696588797296,
        "from": 0.03809696588797296,
        "pattern": 0.03809696588797296,
        "docker": 0.03809696588797296,
        "k8s": 0.03809696588797296,
        "layout": 0.03809696588797296,
        "tree": 0.03809696588797296,
        "sitter": 0.03809696588797296,
        "powered": 0.03809696588797296,
        "symbol": 0.03809696588797296,
        "extraction": 0.03809696588797296,
        "flagged": 0.03809696588797296,
        "4": 0.03809696588797296,
        "knowledge": 0.03809696588797296,
        "store": 0.03809696588797296,
        "rag": 0.03809696588797296,
        "local": 0.03809696588797296,
        "embedding": 0.03809696588797296,
        "model": 0.03809696588797296,
        "chunking": 0.03809696588797296,
        "strategy": 0.03809696588797296,
        "index": 0.03809696588797296,
        "top": 0.03809696588797296,
        "n": 0.03809696588797296,
        "source": 0.03809696588797296,
        "headers": 0.03809696588797296,
        "comments": 0.03809696588797296
      },
      "text": "# Intelligent README Generator \u2014 Feature Checklist > Status legend: \u2610 Not started \u00b7 \u25d0 In progress \u00b7 \u2714 Done > Scope tags: **[MVP]** required for proof\u2011of\u2011concept, **[NEXT]** nice\u2011to\u2011have soon, **[STRETCH]** later ## 1) Core Workflows - [x] **docgen init** \u2014 Initialize README for repos without docs **[MVP]** - [x] **docgen update** \u2014 Detect changes on commit/PR and patch affected sections **[MVP]** - [ ] **docgen regenerate** \u2014 Manual full/partial regeneration **[MVP]** - [x] Dry\u2011run mode (`--dry-run`) to preview diffs without writing **[NEXT]** - [x] Service mode (FastAPI) endpoints for CI/bots **[STRETCH]** ## 2) Repository Scanning & Indexing - [x] Walk filesystem with ignore rules (`.gitignore`, `.docgen.yml`) **[MVP]** - [x] Build normalized manifest of files, roles (src/test/docs/config/infra) **[MVP]** - [x] Hash & cache file metadata to speed subsequent runs **[MVP]** - [x] Entrypoint detection (e.g., `main()`, `@SpringBootApplication`, FastAPI app) **[NEXT]** - [x] Monorepo module detection **[NEXT]** ## 3) Analyzers (Plugin\u2011based) - [x] Language analyzers: Python, Java, Node.js (Tier\u20111) **[MVP]** - [x] Build analyzers: Poetry/Setuptools, Maven/Gradle, npm/pnpm/yarn **[MVP]** - [x] Dependency analyzers from manifest files **[MVP]** - [x] Pattern analyzers: Docker/K8s, CI config, monorepo layout **[NEXT]** - [x] Tree\u2011sitter powered symbol/entrypoint extraction (flagged) **[STRETCH]** ## 4) Knowledge Store (RAG) - [x] Local embedding model + chunking strategy **[MVP]** - [x] Index `README`, `/docs`, top N source headers & comments **[MVP]** -",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_checklist.md#1",
      "vector": {
        "ci": 0.03943615033625495,
        "config": 0.0788723006725099,
        "monorepo": 0.03943615033625495,
        "layout": 0.03943615033625495,
        "next": 0.3154892026900396,
        "x": 0.6309784053800792,
        "tree": 0.03943615033625495,
        "sitter": 0.03943615033625495,
        "powered": 0.03943615033625495,
        "symbol": 0.03943615033625495,
        "entrypoint": 0.03943615033625495,
        "extraction": 0.03943615033625495,
        "flagged": 0.03943615033625495,
        "stretch": 0.0788723006725099,
        "4": 0.03943615033625495,
        "knowledge": 0.0788723006725099,
        "store": 0.03943615033625495,
        "rag": 0.03943615033625495,
        "local": 0.0788723006725099,
        "embedding": 0.03943615033625495,
        "model": 0.0788723006725099,
        "chunking": 0.03943615033625495,
        "strategy": 0.03943615033625495,
        "mvp": 0.3943615033625495,
        "index": 0.03943615033625495,
        "readme": 0.03943615033625495,
        "docs": 0.0788723006725099,
        "top": 0.0788723006725099,
        "n": 0.03943615033625495,
        "source": 0.03943615033625495,
        "headers": 0.03943615033625495,
        "comments": 0.03943615033625495,
        "section": 0.19718075168127475,
        "scoped": 0.03943615033625495,
        "retrieval": 0.03943615033625495,
        "k": 0.03943615033625495,
        "per": 0.0788723006725099,
        "lightweight": 0.03943615033625495,
        "graph": 0.03943615033625495,
        "of": 0.03943615033625495,
        "modules": 0.03943615033625495,
        "services": 0.03943615033625495,
        "signals": 0.03943615033625495,
        "5": 0.03943615033625495,
        "prompting": 0.03943615033625495,
        "templates": 0.11830845100876484,
        "jinja2": 0.03943615033625495,
        "intro": 0.03943615033625495,
        "features": 0.03943615033625495,
        "architecture": 0.0788723006725099,
        "quickstart": 0.03943615033625495,
        "build": 0.0788723006725099,
        "test": 0.03943615033625495,
        "deployment": 0.03943615033625495,
        "troubleshooting": 0.03943615033625495,
        "faq": 0.03943615033625495,
        "license": 0.0788723006725099,
        "guardrailed": 0.03943615033625495,
        "system": 0.03943615033625495,
        "prompt": 0.03943615033625495,
        "no": 0.03943615033625495,
        "speculation": 0.03943615033625495,
        "cite": 0.03943615033625495,
        "repo": 0.03943615033625495,
        "facts": 0.03943615033625495,
        "only": 0.03943615033625495,
        "token": 0.03943615033625495,
        "budgeting": 0.03943615033625495,
        "streaming": 0.03943615033625495,
        "by": 0.03943615033625495,
        "generation": 0.03943615033625495,
        "template": 0.03943615033625495,
        "override": 0.03943615033625495,
        "mechanism": 0.03943615033625495,
        "j2": 0.03943615033625495,
        "style": 0.03943615033625495,
        "presets": 0.03943615033625495,
        "concise": 0.03943615033625495,
        "vs": 0.03943615033625495,
        "comprehensive": 0.03943615033625495,
        "mermaid": 0.03943615033625495,
        "js": 0.03943615033625495,
        "diagrams": 0.03943615033625495,
        "for": 0.0788723006725099,
        "flow": 0.03943615033625495,
        "sections": 0.0788723006725099,
        "where": 0.03943615033625495,
        "appropriate": 0.03943615033625495,
        "6": 0.03943615033625495,
        "llm": 0.03943615033625495,
        "runner": 0.0788723006725099,
        "http": 0.03943615033625495,
        "adapter": 0.0788723006725099,
        "host": 0.03943615033625495,
        "container": 0.03943615033625495,
        "defaults": 0.0788723006725099,
        "env": 0.03943615033625495,
        "api": 0.03943615033625495,
        "key": 0.03943615033625495,
        "overrides": 0.03943615033625495,
        "llama": 0.03943615033625495,
        "cpp": 0.03943615033625495,
        "structured": 0.03943615033625495,
        "outputs": 0.03943615033625495,
        "tool": 0.03943615033625495,
        "use": 0.03943615033625495,
        "compatibility": 0.03943615033625495,
        "7": 0.03943615033625495,
        "post": 0.03943615033625495,
        "processing": 0.03943615033625495,
        "markdown": 0.03943615033625495,
        "lint": 0.03943615033625495,
        "heading": 0.03943615033625495,
        "hierarchy": 0.03943615033625495,
        "code": 0.03943615033625495,
        "fences": 0.03943615033625495,
        "line": 0.03943615033625495,
        "length": 0.03943615033625495,
        "auto": 0.03943615033625495,
        "toc": 0.03943615033625495,
        "level": 0.03943615033625495,
        "3": 0.03943615033625495,
        "badges": 0.03943615033625495,
        "coverage": 0.03943615033625495,
        "with": 0.03943615033625495,
        "safe": 0.03943615033625495,
        "link": 0.03943615033625495,
        "validator": 0.03943615033625495,
        "relative": 0.03943615033625495,
        "absolute": 0.03943615033625495,
        "managed": 0.03943615033625495,
        "markers": 0.03943615033625495,
        "idempotent": 0.03943615033625495,
        "patching": 0.03943615033625495,
        "docgen": 0.03943615033625495,
        "begin": 0.03943615033625495,
        "end": 0.03943615033625495,
        "8": 0.03943615033625495,
        "git": 0.03943615033625495,
        "integration": 0.03943615033625495,
        "diff": 0.03943615033625495,
        "detection": 0.03943615033625495,
        "map": 0.03943615033625495,
        "changed": 0.03943615033625495,
        "files": 0.03943615033625495,
        "impacted": 0.03943615033625495
      },
      "text": "CI config, monorepo layout **[NEXT]** - [x] Tree\u2011sitter powered symbol/entrypoint extraction (flagged) **[STRETCH]** ## 4) Knowledge Store (RAG) - [x] Local embedding model + chunking strategy **[MVP]** - [x] Index `README`, `/docs`, top N source headers & comments **[MVP]** - [x] Section\u2011scoped retrieval (top\u2011k per section) **[MVP]** - [ ] Lightweight knowledge graph of modules/services/signals **[NEXT]** ## 5) Prompting & Templates - [x] Jinja2 templates per section (intro, features, architecture, quickstart, config, build/test, deployment, troubleshooting, FAQ, license) **[MVP]** - [ ] Guardrailed system prompt (\u201cno speculation; cite repo facts only\u201d) **[MVP]** - [ ] Token budgeting & streaming section-by-section generation **[MVP]** - [x] Template override mechanism (`docs/templates/*.j2`) **[NEXT]** - [x] Style presets: concise vs comprehensive **[NEXT]** - [x] Mermaid.js diagrams for architecture/flow sections where appropriate **[NEXT]** ## 6) Local LLM Runner - [x] Model Runner HTTP adapter (host/container defaults, env/API key overrides) **[MVP]** - [x] llama.cpp adapter **[NEXT]** - [ ] Structured outputs / tool\u2011use compatibility **[STRETCH]** ## 7) Post\u2011Processing - [x] Markdown lint: heading hierarchy, code fences, line length **[MVP]** - [x] Auto ToC (\u2264 level 3) **[MVP]** - [x] Badges (build, coverage, license) with safe defaults **[NEXT]** - [x] Link validator (relative/absolute) **[NEXT]** - [x] Managed markers for idempotent patching (`<!-- docgen:begin:end -->`) **[MVP]** ## 8) Git Integration - [x] Diff detection (map changed files \u2192 impacted sections)",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_checklist.md#2",
      "vector": {
        "x": 0.6172133998483676,
        "badges": 0.03857583749052298,
        "build": 0.07715167498104596,
        "coverage": 0.03857583749052298,
        "license": 0.03857583749052298,
        "with": 0.07715167498104596,
        "safe": 0.03857583749052298,
        "defaults": 0.03857583749052298,
        "next": 0.3086066999241838,
        "link": 0.03857583749052298,
        "validator": 0.03857583749052298,
        "relative": 0.03857583749052298,
        "absolute": 0.03857583749052298,
        "managed": 0.03857583749052298,
        "markers": 0.03857583749052298,
        "for": 0.11572751247156893,
        "idempotent": 0.03857583749052298,
        "patching": 0.03857583749052298,
        "docgen": 0.07715167498104596,
        "begin": 0.03857583749052298,
        "end": 0.03857583749052298,
        "mvp": 0.4629100498862757,
        "8": 0.03857583749052298,
        "git": 0.03857583749052298,
        "integration": 0.07715167498104596,
        "diff": 0.03857583749052298,
        "detection": 0.03857583749052298,
        "map": 0.03857583749052298,
        "changed": 0.03857583749052298,
        "files": 0.03857583749052298,
        "impacted": 0.03857583749052298,
        "sections": 0.03857583749052298,
        "branch": 0.03857583749052298,
        "pr": 0.07715167498104596,
        "creation": 0.03857583749052298,
        "summary": 0.03857583749052298,
        "of": 0.03857583749052298,
        "readme": 0.11572751247156893,
        "deltas": 0.03857583749052298,
        "commit": 0.03857583749052298,
        "mode": 0.03857583749052298,
        "init": 0.03857583749052298,
        "or": 0.03857583749052298,
        "small": 0.03857583749052298,
        "changes": 0.07715167498104596,
        "configurable": 0.03857583749052298,
        "prevent": 0.03857583749052298,
        "loops": 0.03857583749052298,
        "on": 0.07715167498104596,
        "only": 0.07715167498104596,
        "9": 0.03857583749052298,
        "configuration": 0.03857583749052298,
        "parse": 0.03857583749052298,
        "yml": 0.03857583749052298,
        "llm": 0.03857583749052298,
        "style": 0.03857583749052298,
        "analyzers": 0.03857583749052298,
        "publish": 0.03857583749052298,
        "path": 0.03857583749052298,
        "exclusions": 0.03857583749052298,
        "watched_globs": 0.03857583749052298,
        "ci": 0.11572751247156893,
        "triggers": 0.03857583749052298,
        "per": 0.07715167498104596,
        "section": 0.03857583749052298,
        "off": 0.03857583749052298,
        "toggles": 0.03857583749052298,
        "and": 0.11572751247156893,
        "titles": 0.03857583749052298,
        "10": 0.03857583749052298,
        "github": 0.03857583749052298,
        "actions": 0.03857583749052298,
        "example": 0.03857583749052298,
        "workflow": 0.03857583749052298,
        "gitlab": 0.03857583749052298,
        "bitbucket": 0.03857583749052298,
        "pipelines": 0.03857583749052298,
        "samples": 0.03857583749052298,
        "labeling": 0.03857583749052298,
        "docs": 0.03857583749052298,
        "auto": 0.03857583749052298,
        "update": 0.03857583749052298,
        "behavior": 0.03857583749052298,
        "11": 0.03857583749052298,
        "security": 0.03857583749052298,
        "privacy": 0.03857583749052298,
        "local": 0.03857583749052298,
        "models": 0.03857583749052298,
        "never": 0.03857583749052298,
        "exfiltrate": 0.03857583749052298,
        "code": 0.03857583749052298,
        "respect": 0.03857583749052298,
        "gitignore": 0.03857583749052298,
        "exclude": 0.03857583749052298,
        "large": 0.03857583749052298,
        "binaries": 0.03857583749052298,
        "secrets": 0.03857583749052298,
        "optional": 0.03857583749052298,
        "simple": 0.03857583749052298,
        "secret": 0.03857583749052298,
        "scanner": 0.03857583749052298,
        "gate": 0.03857583749052298,
        "12": 0.03857583749052298,
        "multi": 0.03857583749052298,
        "language": 0.03857583749052298,
        "project": 0.03857583749052298,
        "types": 0.03857583749052298,
        "tier": 0.07715167498104596,
        "1": 0.03857583749052298,
        "python": 0.03857583749052298,
        "poetry": 0.03857583749052298,
        "setuptools": 0.03857583749052298,
        "java": 0.03857583749052298,
        "maven": 0.03857583749052298,
        "gradle": 0.03857583749052298,
        "spring": 0.03857583749052298,
        "boot": 0.03857583749052298,
        "node": 0.03857583749052298,
        "js": 0.03857583749052298,
        "npm": 0.03857583749052298,
        "pnpm": 0.03857583749052298,
        "express": 0.03857583749052298,
        "2": 0.03857583749052298,
        "go": 0.03857583749052298,
        "rust": 0.03857583749052298,
        "ruby": 0.03857583749052298,
        "php": 0.03857583749052298,
        "stretch": 0.03857583749052298,
        "framework": 0.03857583749052298,
        "aware": 0.03857583749052298,
        "quickstart": 0.03857583749052298,
        "commands": 0.03857583749052298,
        "system": 0.03857583749052298,
        "13": 0.03857583749052298,
        "quality": 0.03857583749052298,
        "gates": 0.03857583749052298,
        "evaluation": 0.03857583749052298,
        "command": 0.03857583749052298,
        "validation": 0.03857583749052298,
        "existence": 0.03857583749052298,
        "checks": 0.07715167498104596,
        "no": 0.03857583749052298,
        "hallucination": 0.03857583749052298,
        "reject": 0.03857583749052298,
        "facts": 0.03857583749052298,
        "not": 0.03857583749052298
      },
      "text": "[x] Badges (build, coverage, license) with safe defaults **[NEXT]** - [x] Link validator (relative/absolute) **[NEXT]** - [x] Managed markers for idempotent patching (`<!-- docgen:begin:end -->`) **[MVP]** ## 8) Git Integration - [x] Diff detection (map changed files \u2192 impacted sections) **[MVP]** - [x] Branch + PR creation with summary of README deltas **[MVP]** - [x] Commit mode for init or small changes (configurable) **[NEXT]** - [x] Prevent loops on README\u2011only changes **[MVP]** ## 9) Configuration - [x] Parse `.docgen.yml` (LLM, readme style, analyzers, publish) **[MVP]** - [x] Path exclusions & `watched_globs` for CI triggers **[MVP]** - [ ] Per-section on/off toggles and titles **[NEXT]** ## 10) CI Integration - [x] GitHub Actions example workflow **[MVP]** - [ ] GitLab CI and Bitbucket Pipelines samples **[NEXT]** - [x] Labeling (`docs:auto`) and PR update behavior **[NEXT]** ## 11) Security & Privacy - [x] Local-only models; never exfiltrate code **[MVP]** - [ ] Respect `.gitignore`; exclude large binaries/secrets **[MVP]** - [ ] Optional simple secret scanner gate **[NEXT]** ## 12) Multi\u2011Language & Project Types - [x] Tier\u20111: Python (Poetry/Setuptools), Java (Maven/Gradle/Spring Boot), Node.js (npm/pnpm/Express/Next) **[MVP]** - [ ] Tier\u20112: Go, Rust, Ruby, PHP **[STRETCH]** - [x] Framework\u2011aware quickstart commands per build system **[MVP]** ## 13) Quality Gates & Evaluation - [x] Command validation (existence checks) **[MVP]** - [x] No-hallucination checks: reject facts not",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_checklist.md#3",
      "vector": {
        "npm": 0.052999894000318,
        "pnpm": 0.052999894000318,
        "express": 0.052999894000318,
        "next": 0.211999576001272,
        "mvp": 0.476999046002862,
        "tier": 0.052999894000318,
        "2": 0.052999894000318,
        "go": 0.052999894000318,
        "rust": 0.052999894000318,
        "ruby": 0.052999894000318,
        "php": 0.052999894000318,
        "stretch": 0.052999894000318,
        "x": 0.5829988340034981,
        "framework": 0.052999894000318,
        "aware": 0.052999894000318,
        "quickstart": 0.052999894000318,
        "commands": 0.052999894000318,
        "per": 0.105999788000636,
        "build": 0.052999894000318,
        "system": 0.052999894000318,
        "13": 0.052999894000318,
        "quality": 0.052999894000318,
        "gates": 0.052999894000318,
        "evaluation": 0.052999894000318,
        "command": 0.052999894000318,
        "validation": 0.052999894000318,
        "existence": 0.052999894000318,
        "checks": 0.105999788000636,
        "no": 0.052999894000318,
        "hallucination": 0.052999894000318,
        "reject": 0.052999894000318,
        "facts": 0.052999894000318,
        "not": 0.052999894000318,
        "in": 0.052999894000318,
        "signals": 0.052999894000318,
        "rag": 0.105999788000636,
        "readme": 0.105999788000636,
        "scorecard": 0.052999894000318,
        "coverage": 0.052999894000318,
        "buildability": 0.052999894000318,
        "link": 0.052999894000318,
        "validity": 0.052999894000318,
        "diff": 0.052999894000318,
        "alignment": 0.052999894000318,
        "lint": 0.105999788000636,
        "14": 0.052999894000318,
        "performance": 0.052999894000318,
        "caching": 0.052999894000318,
        "persist": 0.052999894000318,
        "analyzer": 0.105999788000636,
        "outputs": 0.052999894000318,
        "embeddings": 0.052999894000318,
        "under": 0.052999894000318,
        "docgen": 0.052999894000318,
        "incremental": 0.052999894000318,
        "refresh": 0.052999894000318,
        "changed": 0.052999894000318,
        "files": 0.052999894000318,
        "only": 0.052999894000318,
        "15": 0.052999894000318,
        "error": 0.052999894000318,
        "handling": 0.052999894000318,
        "ux": 0.052999894000318,
        "fail": 0.052999894000318,
        "safe": 0.052999894000318,
        "stub": 0.052999894000318,
        "generation": 0.052999894000318,
        "when": 0.052999894000318,
        "evidence": 0.052999894000318,
        "is": 0.052999894000318,
        "insufficient": 0.052999894000318,
        "clear": 0.052999894000318,
        "run": 0.052999894000318,
        "logs": 0.052999894000318,
        "pr": 0.052999894000318,
        "body": 0.052999894000318,
        "with": 0.052999894000318,
        "rationale": 0.052999894000318,
        "sections": 0.052999894000318,
        "updated": 0.052999894000318,
        "because": 0.052999894000318,
        "helpful": 0.052999894000318,
        "cli": 0.052999894000318,
        "errors": 0.052999894000318,
        "and": 0.105999788000636,
        "verbose": 0.052999894000318,
        "flag": 0.052999894000318,
        "works": 0.052999894000318,
        "pre": 0.052999894000318,
        "post": 0.052999894000318,
        "subcommand": 0.052999894000318,
        "16": 0.052999894000318,
        "extensibility": 0.052999894000318,
        "abc": 0.052999894000318,
        "plugin": 0.052999894000318,
        "discovery": 0.052999894000318,
        "template": 0.052999894000318,
        "packs": 0.052999894000318,
        "org": 0.052999894000318,
        "style": 0.105999788000636,
        "definition": 0.052999894000318,
        "of": 0.052999894000318,
        "done": 0.052999894000318,
        "section": 0.052999894000318,
        "passing": 0.052999894000318,
        "unit": 0.052999894000318,
        "integration": 0.052999894000318,
        "tests": 0.052999894000318,
        "for": 0.052999894000318,
        "core": 0.052999894000318,
        "logic": 0.052999894000318,
        "golden": 0.052999894000318,
        "regression": 0.052999894000318,
        "test": 0.052999894000318,
        "s": 0.052999894000318,
        "meets": 0.052999894000318,
        "requirements": 0.052999894000318
      },
      "text": "(npm/pnpm/Express/Next) **[MVP]** - [ ] Tier\u20112: Go, Rust, Ruby, PHP **[STRETCH]** - [x] Framework\u2011aware quickstart commands per build system **[MVP]** ## 13) Quality Gates & Evaluation - [x] Command validation (existence checks) **[MVP]** - [x] No-hallucination checks: reject facts not in signals/RAG **[MVP]** - [x] README scorecard (coverage, buildability, link validity, diff alignment, lint) **[NEXT]** ## 14) Performance & Caching - [x] Persist analyzer outputs & embeddings under `.docgen/` **[MVP]** - [x] Incremental RAG refresh (changed files only) **[NEXT]** ## 15) Error Handling & UX - [x] Fail-safe stub generation when evidence is insufficient **[MVP]** - [x] Clear run logs + PR body with rationale (\u201csections updated because\u2026\u201d) **[MVP]** - [x] Helpful CLI errors and `--verbose` flag (works pre/post subcommand) **[MVP]** ## 16) Extensibility - [x] Analyzer ABC and plugin discovery **[MVP]** - [x] Template packs (org\u2011style) **[NEXT]** --- ### Definition of Done (per section) - [ ] Passing unit & integration tests for core logic - [ ] Golden README regression test(s) - [ ] Meets lint/style requirements",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_order.md#0",
      "vector": {
        "docgen": 0.25491557319725244,
        "development": 0.042485928866208736,
        "roadmap": 0.042485928866208736,
        "phase": 0.12745778659862622,
        "0": 0.042485928866208736,
        "bootstrap": 0.042485928866208736,
        "the": 0.042485928866208736,
        "skeleton": 0.08497185773241747,
        "1": 0.3398874309296699,
        "project": 0.042485928866208736,
        "cli": 0.042485928866208736,
        "config": 0.08497185773241747,
        "loader": 0.042485928866208736,
        "yml": 0.042485928866208736,
        "models": 0.042485928866208736,
        "done": 0.3823733597958786,
        "covers": 0.3823733597958786,
        "commands": 0.042485928866208736,
        "scaffolding": 0.042485928866208736,
        "9": 0.042485928866208736,
        "parse": 0.042485928866208736,
        "16": 0.08497185773241747,
        "analyzer": 0.08497185773241747,
        "abc": 0.08497185773241747,
        "2": 0.2124296443310437,
        "plugin": 0.08497185773241747,
        "discovery": 0.08497185773241747,
        "init": 0.16994371546483494,
        "happy": 0.042485928866208736,
        "path": 0.042485928866208736,
        "single": 0.042485928866208736,
        "repo": 0.12745778659862622,
        "local": 0.08497185773241747,
        "scanner": 0.042485928866208736,
        "manifest": 0.08497185773241747,
        "roles": 0.042485928866208736,
        "hashing": 0.042485928866208736,
        "ignores": 0.08497185773241747,
        "walk": 0.042485928866208736,
        "fs": 0.042485928866208736,
        "cache": 0.042485928866208736,
        "tier": 0.042485928866208736,
        "analyzers": 0.12745778659862622,
        "python": 0.042485928866208736,
        "java": 0.042485928866208736,
        "node": 0.042485928866208736,
        "build": 0.08497185773241747,
        "dependency": 0.042485928866208736,
        "3": 0.08497185773241747,
        "language": 0.042485928866208736,
        "deps": 0.042485928866208736,
        "templates": 0.12745778659862622,
        "prompt": 0.12745778659862622,
        "builder": 0.08497185773241747,
        "section": 0.12745778659862622,
        "by": 0.042485928866208736,
        "guardrailed": 0.042485928866208736,
        "system": 0.042485928866208736,
        "partial": 0.042485928866208736,
        "guardrails": 0.08497185773241747,
        "unused": 0.042485928866208736,
        "5": 0.08497185773241747,
        "jinja2": 0.042485928866208736,
        "token": 0.042485928866208736,
        "budget": 0.042485928866208736,
        "4": 0.042485928866208736,
        "llm": 0.042485928866208736,
        "runner": 0.042485928866208736,
        "ollama": 0.08497185773241747,
        "adapter": 0.042485928866208736,
        "6": 0.08497185773241747,
        "post": 0.042485928866208736,
        "processor": 0.042485928866208736,
        "managed": 0.042485928866208736,
        "markers": 0.12745778659862622,
        "toc": 0.08497185773241747,
        "markdown": 0.042485928866208736,
        "lint": 0.08497185773241747,
        "7": 0.042485928866208736,
        "git": 0.08497185773241747,
        "publisher": 0.08497185773241747,
        "commit": 0.08497185773241747,
        "mode": 0.08497185773241747,
        "for": 0.08497185773241747,
        "only": 0.042485928866208736,
        "8": 0.08497185773241747,
        "end": 0.08497185773241747,
        "to": 0.042485928866208736,
        "milestone": 0.042485928866208736,
        "generates": 0.042485928866208736,
        "a": 0.08497185773241747,
        "clean": 0.042485928866208736,
        "readme": 0.042485928866208736,
        "with": 0.042485928866208736,
        "no": 0.042485928866208736,
        "docs": 0.042485928866208736,
        "update": 0.08497185773241747,
        "on": 0.042485928866208736,
        "change": 0.08497185773241747,
        "pr": 0.042485928866208736,
        "workflow": 0.042485928866208736,
        "diff": 0.08497185773241747,
        "detection": 0.042485928866208736,
        "mapping": 0.08497185773241747,
        "patching": 0.042485928866208736,
        "inside": 0.042485928866208736,
        "prevent": 0.042485928866208736,
        "loops": 0.042485928866208736
      },
      "text": "# DocGen Development Roadmap ## Phase 0 \u2014 Bootstrap the skeleton 1. **Project skeleton + CLI (`docgen`) + config loader (`.docgen.yml`) + models** \u2014 \u2714 Done * Covers: 1 (commands scaffolding), 9 (parse config), 16 (Analyzer ABC) 2. **Analyzer plugin ABC & discovery** \u2014 \u2714 Done * Covers: 16 (plugin discovery) ## Phase 1 \u2014 \"Init\" happy-path (single repo, local) 1. **Repo scanner & manifest (roles, hashing, ignores)** \u2014 \u2714 Done * Covers: 2 (walk FS, manifest, cache, ignores) 2. **Tier-1 analyzers (Python, Java, Node) + build analyzers + dependency analyzers** \u2014 \u2714 Done * Covers: 3 (language/build/deps) 3. **Templates + prompt builder (section-by-section) + guardrailed system prompt** \u2014 \u25d0 Partial (templates/prompt builder done; guardrails unused) * Covers: 5 (Jinja2 templates, guardrails, token budget) 4. **Local LLM runner (Ollama adapter)** \u2014 \u2714 Done * Covers: 6 (Ollama) 5. **Post-processor: managed markers, ToC, markdown lint** \u2014 \u2714 Done * Covers: 7 (markers, ToC, lint) 6. **Git publisher: commit mode (for init only)** \u2014 \u2714 Done * Covers: 8 (commit mode), 1 (`docgen init` end-to-end) \u2705 **Milestone**: `docgen init` generates a clean README for a repo with no docs. ## Phase 2 \u2014 Update-on-change (PR workflow) 1. **Diff detection + change\u2192section mapping + patching inside markers** \u2014 \u2714 Done * Covers: 8 (diff mapping, prevent loops), 1 (`docgen update`) 2. **Git publisher:",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/feature_order.md#1",
      "vector": {
        "readme": 0.09035079029052513,
        "for": 0.045175395145262566,
        "a": 0.09035079029052513,
        "repo": 0.09035079029052513,
        "with": 0.1355261854357877,
        "no": 0.18070158058105026,
        "docs": 0.09035079029052513,
        "phase": 0.22587697572631282,
        "2": 0.22587697572631282,
        "update": 0.18070158058105026,
        "on": 0.045175395145262566,
        "change": 0.09035079029052513,
        "pr": 0.22587697572631282,
        "workflow": 0.045175395145262566,
        "1": 0.22587697572631282,
        "diff": 0.09035079029052513,
        "detection": 0.045175395145262566,
        "section": 0.1355261854357877,
        "mapping": 0.09035079029052513,
        "patching": 0.045175395145262566,
        "inside": 0.045175395145262566,
        "markers": 0.045175395145262566,
        "done": 0.36140316116210053,
        "covers": 0.36140316116210053,
        "8": 0.09035079029052513,
        "prevent": 0.045175395145262566,
        "loops": 0.045175395145262566,
        "docgen": 0.1355261854357877,
        "git": 0.045175395145262566,
        "publisher": 0.045175395145262566,
        "branch": 0.09035079029052513,
        "delta": 0.045175395145262566,
        "summary": 0.045175395145262566,
        "10": 0.09035079029052513,
        "labeling": 0.045175395145262566,
        "later": 0.045175395145262566,
        "milestone": 0.09035079029052513,
        "opens": 0.045175395145262566,
        "updating": 0.045175395145262566,
        "only": 0.09035079029052513,
        "impacted": 0.045175395145262566,
        "sections": 0.045175395145262566,
        "3": 0.045175395145262566,
        "minimal": 0.045175395145262566,
        "rag": 0.09035079029052513,
        "accuracy": 0.045175395145262566,
        "lite": 0.045175395145262566,
        "embed": 0.045175395145262566,
        "top": 0.045175395145262566,
        "n": 0.045175395145262566,
        "source": 0.045175395145262566,
        "headers": 0.045175395145262566,
        "scoped": 0.045175395145262566,
        "retrieval": 0.09035079029052513,
        "4": 0.09035079029052513,
        "local": 0.09035079029052513,
        "embedding": 0.045175395145262566,
        "index": 0.045175395145262566,
        "sources": 0.045175395145262566,
        "per": 0.045175395145262566,
        "hallucination": 0.1355261854357877,
        "command": 0.1355261854357877,
        "existence": 0.045175395145262566,
        "checks": 0.045175395145262566,
        "partial": 0.045175395145262566,
        "validation": 0.09035079029052513,
        "guard": 0.045175395145262566,
        "not": 0.045175395145262566,
        "implemented": 0.045175395145262566,
        "13": 0.045175395145262566,
        "outputs": 0.045175395145262566,
        "grounded": 0.045175395145262566,
        "in": 0.045175395145262566,
        "facts": 0.045175395145262566,
        "targeted": 0.045175395145262566,
        "context": 0.045175395145262566,
        "hardening": 0.045175395145262566,
        "dx": 0.045175395145262566,
        "error": 0.045175395145262566,
        "handling": 0.045175395145262566,
        "clear": 0.045175395145262566,
        "logs": 0.09035079029052513,
        "verbose": 0.045175395145262566,
        "fail": 0.09035079029052513,
        "safe": 0.09035079029052513,
        "stubs": 0.045175395145262566,
        "15": 0.045175395145262566,
        "cli": 0.045175395145262566,
        "ux": 0.045175395145262566,
        "security": 0.045175395145262566,
        "gitignore": 0.045175395145262566,
        "respect": 0.045175395145262566,
        "path": 0.045175395145262566,
        "excludes": 0.09035079029052513,
        "enforcement": 0.045175395145262566,
        "11": 0.045175395145262566,
        "privacy": 0.045175395145262566,
        "5": 0.09035079029052513,
        "ci": 0.045175395145262566,
        "integration": 0.045175395145262566,
        "config": 0.09035079029052513,
        "polish": 0.045175395145262566,
        "github": 0.045175395145262566,
        "actions": 0.09035079029052513,
        "sample": 0.045175395145262566,
        "push": 0.045175395145262566,
        "trigger": 0.045175395145262566,
        "calling": 0.045175395145262566,
        "gh": 0.045175395145262566,
        "refinements": 0.045175395145262566,
        "watched": 0.045175395145262566,
        "globs": 0.045175395145262566,
        "style": 0.09035079029052513,
        "preset": 0.045175395145262566,
        "concise": 0.045175395145262566,
        "comprehensive": 0.045175395145262566,
        "9": 0.045175395145262566,
        "watched_globs": 0.045175395145262566,
        "presets": 0.045175395145262566,
        "6": 0.045175395145262566,
        "multi": 0.045175395145262566,
        "language": 0.045175395145262566,
        "breadth": 0.045175395145262566
      },
      "text": "README for a repo with no docs. ## Phase 2 \u2014 Update-on-change (PR workflow) 1. **Diff detection + change\u2192section mapping + patching inside markers** \u2014 \u2714 Done * Covers: 8 (diff mapping, prevent loops), 1 (`docgen update`) 2. **Git publisher: branch + PR with delta summary** \u2014 \u2714 Done * Covers: 8 (branch/PR), 10 (labeling later) \u2705 **Milestone**: `docgen update` opens a PR updating only impacted sections. ## Phase 3 \u2014 Minimal RAG & accuracy 1. **RAG Lite: embed README/docs/top N source headers; section-scoped retrieval** \u2014 \u2714 Done * Covers: 4 (local embedding, index sources, per-section retrieval) 2. **No-hallucination & command existence checks** \u2014 \u25d0 Partial (command validation done; no-hallucination guard not implemented) * Covers: 13 (command validation, no-hallucination) \u2705 **Milestone**: outputs grounded in repo facts with targeted context. ## Phase 4 \u2014 Hardening & DX 1. **Error handling, clear logs, `--verbose`, fail-safe stubs** \u2014 \u2714 Done * Covers: 15 (fail-safe, logs, CLI UX) 2. **Security: .gitignore respect, path excludes, local-only enforcement** \u2014 \u2714 Done * Covers: 11 (privacy, excludes) ## Phase 5 \u2014 CI integration & config polish 1. **GitHub Actions sample (push/PR trigger calling `docgen update`)** \u2014 \u2714 Done * Covers: 10 (GH Actions) 2. **Config refinements: watched globs, style preset (concise/comprehensive)** \u2014 \u2714 Done * Covers: 9 (watched_globs), 5 (style presets) ## Phase 6 \u2014 Multi-language breadth",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/feature_order.md#2",
      "vector": {
        "github": 0.046274481338274755,
        "actions": 0.09254896267654951,
        "sample": 0.046274481338274755,
        "push": 0.046274481338274755,
        "pr": 0.18509792535309902,
        "trigger": 0.046274481338274755,
        "calling": 0.046274481338274755,
        "docgen": 0.13882344401482424,
        "update": 0.046274481338274755,
        "done": 0.32392136936792326,
        "covers": 0.41647033204447276,
        "10": 0.09254896267654951,
        "gh": 0.046274481338274755,
        "2": 0.23137240669137377,
        "config": 0.09254896267654951,
        "refinements": 0.046274481338274755,
        "watched": 0.046274481338274755,
        "globs": 0.046274481338274755,
        "style": 0.09254896267654951,
        "preset": 0.046274481338274755,
        "concise": 0.046274481338274755,
        "comprehensive": 0.046274481338274755,
        "9": 0.046274481338274755,
        "watched_globs": 0.046274481338274755,
        "5": 0.09254896267654951,
        "presets": 0.046274481338274755,
        "phase": 0.13882344401482424,
        "6": 0.09254896267654951,
        "multi": 0.046274481338274755,
        "language": 0.046274481338274755,
        "breadth": 0.046274481338274755,
        "framework": 0.13882344401482424,
        "smarts": 0.046274481338274755,
        "1": 0.23137240669137377,
        "entrypoint": 0.046274481338274755,
        "detection": 0.046274481338274755,
        "main": 0.046274481338274755,
        "spring": 0.046274481338274755,
        "boot": 0.046274481338274755,
        "fastapi": 0.09254896267654951,
        "aware": 0.09254896267654951,
        "quick": 0.046274481338274755,
        "start": 0.046274481338274755,
        "entrypoints": 0.046274481338274755,
        "12": 0.046274481338274755,
        "commands": 0.046274481338274755,
        "pattern": 0.09254896267654951,
        "analyzers": 0.09254896267654951,
        "docker": 0.046274481338274755,
        "k8s": 0.046274481338274755,
        "ci": 0.046274481338274755,
        "monorepo": 0.046274481338274755,
        "layout": 0.046274481338274755,
        "3": 0.13882344401482424,
        "7": 0.13882344401482424,
        "quality": 0.046274481338274755,
        "gates": 0.046274481338274755,
        "performance": 0.046274481338274755,
        "readme": 0.09254896267654951,
        "scorecard": 0.13882344401482424,
        "link": 0.09254896267654951,
        "validator": 0.09254896267654951,
        "badges": 0.09254896267654951,
        "13": 0.046274481338274755,
        "artifact": 0.09254896267654951,
        "embedding": 0.046274481338274755,
        "caching": 0.046274481338274755,
        "in": 0.046274481338274755,
        "incremental": 0.09254896267654951,
        "rag": 0.09254896267654951,
        "refresh": 0.09254896267654951,
        "partial": 0.046274481338274755,
        "embeddings": 0.046274481338274755,
        "cached": 0.046274481338274755,
        "no": 0.046274481338274755,
        "analyzer": 0.046274481338274755,
        "store": 0.046274481338274755,
        "14": 0.046274481338274755,
        "persist": 0.046274481338274755,
        "outputs": 0.046274481338274755,
        "8": 0.046274481338274755,
        "nice": 0.046274481338274755,
        "to": 0.09254896267654951,
        "have": 0.046274481338274755,
        "stretch": 0.046274481338274755,
        "dry": 0.09254896267654951,
        "run": 0.09254896267654951,
        "mode": 0.13882344401482424,
        "labeling": 0.09254896267654951,
        "updates": 0.09254896267654951,
        "commit": 0.046274481338274755,
        "policy": 0.046274481338274755,
        "tuning": 0.046274481338274755,
        "template": 0.13882344401482424,
        "overrides": 0.046274481338274755,
        "docs": 0.046274481338274755,
        "templates": 0.046274481338274755,
        "j2": 0.046274481338274755,
        "org": 0.046274481338274755,
        "packs": 0.09254896267654951,
        "override": 0.046274481338274755,
        "16": 0.046274481338274755,
        "service": 0.09254896267654951,
        "llama": 0.09254896267654951,
        "cpp": 0.09254896267654951,
        "adapter": 0.046274481338274755,
        "tree": 0.09254896267654951,
        "sitter": 0.09254896267654951,
        "extraction": 0.046274481338274755,
        "not": 0.046274481338274755,
        "started": 0.046274481338274755,
        "why": 0.046274481338274755,
        "this": 0.046274481338274755,
        "order": 0.046274481338274755,
        "fastest": 0.046274481338274755,
        "path": 0.046274481338274755,
        "value": 0.046274481338274755,
        "get": 0.046274481338274755,
        "init": 0.046274481338274755,
        "producing": 0.046274481338274755,
        "a": 0.046274481338274755,
        "solid": 0.046274481338274755,
        "before": 0.046274481338274755,
        "adding": 0.046274481338274755,
        "diffing": 0.046274481338274755
      },
      "text": "**GitHub Actions sample (push/PR trigger calling `docgen update`)** \u2014 \u2714 Done * Covers: 10 (GH Actions) 2. **Config refinements: watched globs, style preset (concise/comprehensive)** \u2014 \u2714 Done * Covers: 9 (watched_globs), 5 (style presets) ## Phase 6 \u2014 Multi-language breadth & framework smarts 1. **Entrypoint detection (main, Spring Boot, FastAPI) + framework-aware Quick Start** \u2014 \u2714 Done * Covers: 2 (entrypoints), 12 (framework-aware commands) 2. **Pattern analyzers (Docker/K8s, CI config, monorepo layout)** \u2014 \u2714 Done * Covers: 3 (pattern analyzers) ## Phase 7 \u2014 Quality gates & performance 1. **README scorecard + link validator + badges** \u2014 \u2714 Done * Covers: 13 (scorecard), 7 (link validator), 7 (badges) 2. **Artifact & embedding caching in `.docgen/` + incremental RAG refresh** \u2014 \u25d0 Partial (embeddings/scorecard cached; no analyzer artifact store) * Covers: 14 (persist outputs, incremental refresh) ## Phase 8 \u2014 \"Nice to have\" & stretch 1. **Dry-run mode, PR labeling/updates, commit/PR policy tuning** \u2014 \u2714 Done * Covers: 1 (dry-run), 10 (labeling/PR updates) 2. **Template overrides (`docs/templates/*.j2`) & org template packs** \u2014 \u2714 Done * Covers: 5 (override), 16 (template packs) 3. **Service mode (FastAPI), llama.cpp adapter, tree-sitter extraction** \u2014 \u2610 Not started * Covers: 1 (service mode), 6 (llama.cpp), 3 (tree-sitter) ## Why this order * **Fastest path to value**: get `docgen init` producing a solid README before adding diffing/RAG.",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/feature_order.md#3",
      "vector": {
        "3": 0.18333969940564226,
        "service": 0.18333969940564226,
        "mode": 0.18333969940564226,
        "fastapi": 0.09166984970282113,
        "llama": 0.18333969940564226,
        "cpp": 0.18333969940564226,
        "adapter": 0.09166984970282113,
        "tree": 0.18333969940564226,
        "sitter": 0.18333969940564226,
        "extraction": 0.09166984970282113,
        "not": 0.09166984970282113,
        "started": 0.09166984970282113,
        "covers": 0.09166984970282113,
        "1": 0.09166984970282113,
        "6": 0.09166984970282113,
        "why": 0.09166984970282113,
        "this": 0.09166984970282113,
        "order": 0.09166984970282113,
        "fastest": 0.09166984970282113,
        "path": 0.09166984970282113,
        "to": 0.18333969940564226,
        "value": 0.09166984970282113,
        "get": 0.09166984970282113,
        "docgen": 0.09166984970282113,
        "init": 0.09166984970282113,
        "producing": 0.09166984970282113,
        "a": 0.09166984970282113,
        "solid": 0.09166984970282113,
        "readme": 0.09166984970282113,
        "before": 0.09166984970282113,
        "adding": 0.09166984970282113,
        "diffing": 0.09166984970282113,
        "rag": 0.18333969940564226,
        "contain": 0.09166984970282113,
        "risk": 0.09166984970282113,
        "early": 0.09166984970282113,
        "section": 0.09166984970282113,
        "markers": 0.09166984970282113,
        "lint": 0.09166984970282113,
        "and": 0.2750095491084634,
        "commit": 0.09166984970282113,
        "publishing": 0.09166984970282113,
        "ensure": 0.09166984970282113,
        "safe": 0.09166984970282113,
        "idempotent": 0.09166984970282113,
        "edits": 0.09166984970282113,
        "accuracy": 0.09166984970282113,
        "next": 0.09166984970282113,
        "add": 0.09166984970282113,
        "validation": 0.09166984970282113,
        "avoid": 0.09166984970282113,
        "hallucinations": 0.09166984970282113,
        "once": 0.09166984970282113,
        "the": 0.18333969940564226,
        "pipeline": 0.09166984970282113,
        "works": 0.09166984970282113,
        "scale": 0.09166984970282113,
        "breadth": 0.09166984970282113,
        "later": 0.09166984970282113,
        "only": 0.09166984970282113,
        "after": 0.09166984970282113,
        "core": 0.09166984970282113,
        "loop": 0.09166984970282113,
        "is": 0.09166984970282113,
        "robust": 0.09166984970282113,
        "do": 0.09166984970282113,
        "we": 0.09166984970282113,
        "widen": 0.09166984970282113,
        "language": 0.09166984970282113,
        "framework": 0.09166984970282113,
        "coverage": 0.09166984970282113,
        "polish": 0.09166984970282113,
        "last": 0.09166984970282113,
        "ci": 0.09166984970282113,
        "caching": 0.09166984970282113,
        "quality": 0.09166984970282113,
        "gates": 0.09166984970282113,
        "refine": 0.09166984970282113,
        "dev": 0.09166984970282113,
        "experience": 0.09166984970282113,
        "performance": 0.09166984970282113
      },
      "text": "3. **Service mode (FastAPI), llama.cpp adapter, tree-sitter extraction** \u2014 \u2610 Not started * Covers: 1 (service mode), 6 (llama.cpp), 3 (tree-sitter) ## Why this order * **Fastest path to value**: get `docgen init` producing a solid README before adding diffing/RAG. * **Contain risk early**: section markers, lint, and commit publishing ensure safe/idempotent edits. * **Accuracy next**: add RAG + validation to avoid hallucinations once the pipeline works. * **Scale breadth later**: only after the core loop is robust do we widen language/framework coverage. * **Polish last**: CI, caching, and quality gates refine dev experience and performance.",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/jira_stories.md#0",
      "vector": {
        "docgen": 0.15037641213512565,
        "jira": 0.05012547071170855,
        "stories": 0.1002509414234171,
        "remaining": 0.05012547071170855,
        "are": 0.1002509414234171,
        "ordered": 0.05012547071170855,
        "by": 0.1002509414234171,
        "the": 0.25062735355854276,
        "recommended": 0.05012547071170855,
        "completion": 0.05012547071170855,
        "sequence": 0.05012547071170855,
        "and": 0.3508782949819598,
        "formatted": 0.05012547071170855,
        "per": 0.05012547071170855,
        "prompt": 0.05012547071170855,
        "template": 0.05012547071170855,
        "guidance": 0.05012547071170855,
        "all": 0.05012547071170855,
        "prior": 0.05012547071170855,
        "milestones": 0.05012547071170855,
        "complete": 0.05012547071170855,
        "only": 0.05012547071170855,
        "work": 0.05012547071170855,
        "listed": 0.05012547071170855,
        "below": 0.05012547071170855,
        "remains": 0.05012547071170855,
        "story": 0.1002509414234171,
        "s": 0.15037641213512565,
        "032": 0.05012547071170855,
        "no": 0.05012547071170855,
        "hallucination": 0.05012547071170855,
        "validation": 0.15037641213512565,
        "status": 0.05012547071170855,
        "done": 0.05012547071170855,
        "text": 0.05012547071170855,
        "introduce": 0.05012547071170855,
        "a": 0.3508782949819598,
        "layer": 0.05012547071170855,
        "that": 0.1002509414234171,
        "rejects": 0.05012547071170855,
        "readme": 0.05012547071170855,
        "content": 0.15037641213512565,
        "containing": 0.05012547071170855,
        "facts": 0.05012547071170855,
        "not": 0.05012547071170855,
        "backed": 0.05012547071170855,
        "analyzer": 0.1002509414234171,
        "signals": 0.15037641213512565,
        "or": 0.2005018828468342,
        "rag": 0.1002509414234171,
        "context": 0.1002509414234171,
        "surfacing": 0.05012547071170855,
        "actionable": 0.05012547071170855,
        "errors": 0.05012547071170855,
        "to": 0.05012547071170855,
        "users": 0.05012547071170855,
        "dependencies": 0.05012547071170855,
        "already": 0.05012547071170855,
        "completed": 0.05012547071170855,
        "031": 0.05012547071170855,
        "guardrailed": 0.05012547071170855,
        "execution": 0.05012547071170855,
        "011": 0.05012547071170855,
        "contexts": 0.05012547071170855,
        "constraints": 0.05012547071170855,
        "must": 0.05012547071170855,
        "run": 0.05012547071170855,
        "after": 0.1002509414234171,
        "section": 0.1002509414234171,
        "rendering": 0.1002509414234171,
        "but": 0.05012547071170855,
        "before": 0.1002509414234171,
        "writing": 0.05012547071170855,
        "files": 0.05012547071170855,
        "publishing": 0.05012547071170855,
        "prs": 0.05012547071170855,
        "provide": 0.05012547071170855,
        "clear": 0.05012547071170855,
        "remediation": 0.05012547071170855,
        "logs": 0.1002509414234171,
        "referencing": 0.05012547071170855,
        "missing": 0.1002509414234171,
        "affected": 0.05012547071170855,
        "sections": 0.1002509414234171,
        "allow": 0.05012547071170855,
        "an": 0.05012547071170855,
        "opt": 0.05012547071170855,
        "out": 0.05012547071170855,
        "toggle": 0.05012547071170855,
        "in": 0.05012547071170855,
        "yml": 0.05012547071170855,
        "for": 0.05012547071170855,
        "edge": 0.05012547071170855,
        "cases": 0.05012547071170855,
        "non": 0.05012547071170855,
        "goals": 0.05012547071170855,
        "external": 0.05012547071170855,
        "api": 0.05012547071170855,
        "calls": 0.05012547071170855,
        "complex": 0.05012547071170855,
        "semantic": 0.05012547071170855,
        "similarity": 0.05012547071170855,
        "checks": 0.05012547071170855,
        "acceptance": 0.1002509414234171,
        "criteria": 0.05012547071170855,
        "validator": 0.1002509414234171,
        "cross": 0.05012547071170855,
        "references": 0.05012547071170855,
        "generated": 0.05012547071170855,
        "claims": 0.05012547071170855,
        "against": 0.05012547071170855,
        "available": 0.05012547071170855,
        "disallowed": 0.05012547071170855,
        "triggers": 0.05012547071170855,
        "failure": 0.05012547071170855,
        "path": 0.05012547071170855,
        "with": 0.1002509414234171,
        "stub": 0.05012547071170855,
        "fallback": 0.05012547071170855,
        "unit": 0.05012547071170855,
        "tests": 0.05012547071170855,
        "cover": 0.05012547071170855,
        "of": 0.1002509414234171,
        "grounded": 0.05012547071170855,
        "rejection": 0.05012547071170855,
        "injected": 0.05012547071170855,
        "hallucinations": 0.05012547071170855,
        "cli": 0.05012547071170855,
        "surfaces": 0.05012547071170855,
        "concise": 0.05012547071170855,
        "error": 0.05012547071170855,
        "messages": 0.05012547071170855,
        "verbose": 0.05012547071170855,
        "list": 0.05012547071170855,
        "offending": 0.05012547071170855,
        "evidence": 0.05012547071170855,
        "implementation": 0.1002509414234171,
        "plan": 0.05012547071170855,
        "create": 0.05012547071170855,
        "dedicated": 0.05012547071170855,
        "validators": 0.1002509414234171,
        "package": 0.05012547071170855,
        "lightweight": 0.05012547071170855,
        "validationissue": 0.05012547071170855,
        "dataclass": 0.05012547071170855,
        "protocol": 0.05012547071170855,
        "nohallucinationvalidator": 0.05012547071170855,
        "concrete": 0.05012547071170855,
        "orchestrator": 0.05012547071170855,
        "registers": 0.05012547071170855,
        "executes": 0.05012547071170855,
        "them": 0.05012547071170855,
        "post": 0.05012547071170855,
        "processing": 0.05012547071170855,
        "io": 0.05012547071170855,
        "add": 0.05012547071170855,
        "shared": 0.05012547071170855,
        "evidenceindex": 0.05012547071170855,
        "builder": 0.05012547071170855,
        "normalizes": 0.05012547071170855
      },
      "text": "# DocGen Jira Stories (Remaining) > Stories are ordered by the recommended completion sequence and formatted per the prompt template guidance. All prior milestones are complete; only the work listed below remains. --- ## Story S-032 \u2014 No-Hallucination Validation - **Status:** \u2714 Done - **Story Text:** Introduce a validation layer that rejects README content containing facts not backed by analyzer signals or RAG context, surfacing actionable errors to users. - **Dependencies already completed:** S-031 (guardrailed execution), S-011 (RAG contexts) - **Constraints:** - Validation must run after section rendering but before writing files or publishing PRs. - Provide clear remediation logs referencing the missing signals and affected sections. - Allow an opt-out toggle in `.docgen.yml` for edge cases. - **Non-Goals:** External API calls or complex semantic similarity checks. - **Acceptance Criteria:** - Validator cross-references generated claims against available signals/context; disallowed content triggers a failure path with stub fallback. - Unit tests cover acceptance of grounded content and rejection of injected hallucinations. - CLI surfaces concise error messages and `--verbose` logs list offending sections and missing evidence. - **Implementation Plan:** - Create a dedicated `docgen.validators` package with a lightweight `ValidationIssue` dataclass, a `Validator` protocol, and a `NoHallucinationValidator` concrete implementation. The orchestrator registers validators after section rendering and executes them before post-processing or IO. - Add a shared `EvidenceIndex` builder that normalizes analyzer",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#1",
      "vector": {
        "a": 0.37435064886346636,
        "dedicated": 0.04159451654038515,
        "docgen": 0.12478354962115545,
        "validators": 0.12478354962115545,
        "package": 0.04159451654038515,
        "with": 0.2495670992423109,
        "lightweight": 0.04159451654038515,
        "validationissue": 0.04159451654038515,
        "dataclass": 0.04159451654038515,
        "validator": 0.04159451654038515,
        "protocol": 0.04159451654038515,
        "and": 0.29116161578269606,
        "nohallucinationvalidator": 0.04159451654038515,
        "concrete": 0.04159451654038515,
        "implementation": 0.04159451654038515,
        "the": 0.4991341984846218,
        "orchestrator": 0.04159451654038515,
        "registers": 0.04159451654038515,
        "after": 0.04159451654038515,
        "section": 0.0831890330807703,
        "rendering": 0.04159451654038515,
        "executes": 0.04159451654038515,
        "them": 0.04159451654038515,
        "before": 0.04159451654038515,
        "post": 0.04159451654038515,
        "processing": 0.04159451654038515,
        "or": 0.04159451654038515,
        "io": 0.04159451654038515,
        "add": 0.0831890330807703,
        "shared": 0.04159451654038515,
        "evidenceindex": 0.04159451654038515,
        "builder": 0.0831890330807703,
        "that": 0.12478354962115545,
        "normalizes": 0.04159451654038515,
        "analyzer": 0.04159451654038515,
        "signals": 0.0831890330807703,
        "names": 0.04159451654038515,
        "kinds": 0.04159451654038515,
        "key": 0.04159451654038515,
        "attributes": 0.04159451654038515,
        "retrieved": 0.04159451654038515,
        "rag": 0.04159451654038515,
        "chunks": 0.04159451654038515,
        "path": 0.04159451654038515,
        "heading": 0.04159451654038515,
        "snippet": 0.04159451654038515,
        "persist": 0.04159451654038515,
        "normalized": 0.0831890330807703,
        "evidence": 0.0831890330807703,
        "in": 0.0831890330807703,
        "run": 0.04159451654038515,
        "context": 0.04159451654038515,
        "so": 0.04159451654038515,
        "verbose": 0.04159451654038515,
        "logging": 0.04159451654038515,
        "receive": 0.04159451654038515,
        "same": 0.04159451654038515,
        "data": 0.04159451654038515,
        "extend": 0.04159451654038515,
        "prompt": 0.04159451654038515,
        "to": 0.20797258270192576,
        "annotate": 0.04159451654038515,
        "each": 0.0831890330807703,
        "render": 0.04159451654038515,
        "sectionevidence": 0.04159451654038515,
        "metadata": 0.0831890330807703,
        "describing": 0.04159451654038515,
        "which": 0.04159451654038515,
        "chunk": 0.04159451654038515,
        "ids": 0.04159451654038515,
        "were": 0.04159451654038515,
        "injected": 0.04159451654038515,
        "this": 0.04159451654038515,
        "is": 0.04159451654038515,
        "stored": 0.04159451654038515,
        "alongside": 0.04159451654038515,
        "rendered": 0.0831890330807703,
        "markdown": 0.04159451654038515,
        "avoid": 0.04159451654038515,
        "re": 0.04159451654038515,
        "parsing": 0.04159451654038515,
        "prompts": 0.04159451654038515,
        "implement": 0.04159451654038515,
        "lexical": 0.04159451654038515,
        "matching": 0.04159451654038515,
        "heuristics": 0.04159451654038515,
        "split": 0.04159451654038515,
        "sections": 0.0831890330807703,
        "into": 0.04159451654038515,
        "sentences": 0.0831890330807703,
        "ignore": 0.04159451654038515,
        "boilerplate": 0.04159451654038515,
        "phrases": 0.04159451654038515,
        "require": 0.04159451654038515,
        "remaining": 0.04159451654038515,
        "sentence": 0.04159451654038515,
        "introduces": 0.04159451654038515,
        "facts": 0.04159451654038515,
        "numbers": 0.04159451654038515,
        "detected": 0.0831890330807703,
        "entities": 0.04159451654038515,
        "verbs": 0.04159451654038515,
        "direct": 0.04159451654038515,
        "objects": 0.04159451654038515,
        "have": 0.04159451654038515,
        "at": 0.04159451654038515,
        "least": 0.04159451654038515,
        "one": 0.04159451654038515,
        "overlapping": 0.04159451654038515,
        "n": 0.04159451654038515,
        "gram": 0.04159451654038515,
        "len": 0.04159451654038515,
        "3": 0.04159451654038515,
        "flag": 0.0831890330807703,
        "unmatched": 0.04159451654038515,
        "as": 0.04159451654038515,
        "hallucinations": 0.0831890330807703,
        "when": 0.04159451654038515,
        "are": 0.04159451654038515,
        "short": 0.04159451654038515,
        "circuit": 0.04159451654038515,
        "pipeline": 0.04159451654038515,
        "emit": 0.04159451654038515,
        "fail": 0.04159451654038515,
        "safe": 0.04159451654038515,
        "stubs": 0.04159451654038515,
        "for": 0.12478354962115545,
        "offending": 0.04159451654038515,
        "reuse": 0.04159451654038515,
        "existing": 0.04159451654038515,
        "stub": 0.04159451654038515,
        "generator": 0.04159451654038515,
        "bubble": 0.04159451654038515,
        "validationerror": 0.04159451654038515,
        "back": 0.04159451654038515,
        "cli": 0.0831890330807703,
        "actionable": 0.04159451654038515,
        "hints": 0.04159451654038515,
        "yml": 0.04159451654038515,
        "updates": 0.04159451654038515,
        "introduce": 0.04159451654038515,
        "validation": 0.0831890330807703,
        "map": 0.04159451654038515,
        "no_hallucination": 0.04159451654038515,
        "boolean": 0.04159451654038515,
        "default": 0.04159451654038515,
        "true": 0.04159451654038515,
        "respect": 0.04159451654038515,
        "repo": 0.04159451654038515,
        "level": 0.04159451654038515,
        "overrides": 0.04159451654038515,
        "while": 0.04159451654038515,
        "allowing": 0.04159451654038515,
        "docgen_validation_no_hallucination": 0.04159451654038515,
        "false": 0.04159451654038515,
        "disable": 0.04159451654038515,
        "check": 0.04159451654038515,
        "ci": 0.04159451654038515,
        "emergencies": 0.04159451654038515,
        "skip": 0.04159451654038515,
        "init": 0.04159451654038515,
        "update": 0.04159451654038515,
        "regenerate": 0.04159451654038515,
        "flips": 0.04159451654038515,
        "toggle": 0.04159451654038515
      },
      "text": "a dedicated `docgen.validators` package with a lightweight `ValidationIssue` dataclass, a `Validator` protocol, and a `NoHallucinationValidator` concrete implementation. The orchestrator registers validators after section rendering and executes them before post-processing or IO. - Add a shared `EvidenceIndex` builder that normalizes analyzer signals (names, kinds, key attributes) and retrieved RAG chunks (path, heading, snippet). Persist the normalized evidence in the run context so validators and verbose logging receive the same data. - Extend the prompt builder to annotate each section render with `SectionEvidence` metadata describing which signals and chunk IDs were injected. This metadata is stored alongside the rendered markdown to avoid re-parsing prompts. - Implement lexical matching heuristics: split rendered sections into sentences, ignore boilerplate phrases, and require each remaining sentence that introduces facts (numbers, detected entities, verbs with direct objects) to have at least one overlapping n-gram (len \u22653) with the normalized evidence. Flag unmatched sentences as hallucinations. - When hallucinations are detected, short-circuit the pipeline, emit fail-safe stubs for the offending sections (reuse existing stub generator), and bubble a `ValidationError` back to the CLI with actionable hints. - **`.docgen.yml` & CLI Updates:** - Introduce a `validation` map with a `no_hallucination` boolean (default `true`). Respect repo-level overrides while allowing `DOCGEN_VALIDATION_NO_HALLUCINATION=false` to disable the check in CI emergencies. - Add a `--skip-validation` flag for `docgen init|update|regenerate` that flips the toggle for",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#2",
      "vector": {
        "cli": 0.18856180831641267,
        "updates": 0.04714045207910317,
        "introduce": 0.04714045207910317,
        "a": 0.23570226039551584,
        "validation": 0.23570226039551584,
        "map": 0.04714045207910317,
        "with": 0.09428090415820634,
        "no_hallucination": 0.04714045207910317,
        "boolean": 0.04714045207910317,
        "default": 0.04714045207910317,
        "true": 0.04714045207910317,
        "respect": 0.04714045207910317,
        "repo": 0.09428090415820634,
        "level": 0.04714045207910317,
        "overrides": 0.04714045207910317,
        "while": 0.04714045207910317,
        "allowing": 0.04714045207910317,
        "docgen_validation_no_hallucination": 0.04714045207910317,
        "false": 0.04714045207910317,
        "to": 0.1414213562373095,
        "disable": 0.04714045207910317,
        "the": 0.4242640687119285,
        "check": 0.04714045207910317,
        "in": 0.1414213562373095,
        "ci": 0.04714045207910317,
        "emergencies": 0.04714045207910317,
        "add": 0.09428090415820634,
        "skip": 0.04714045207910317,
        "flag": 0.04714045207910317,
        "for": 0.18856180831641267,
        "docgen": 0.09428090415820634,
        "init": 0.04714045207910317,
        "update": 0.04714045207910317,
        "regenerate": 0.04714045207910317,
        "that": 0.1414213562373095,
        "flips": 0.04714045207910317,
        "toggle": 0.04714045207910317,
        "current": 0.04714045207910317,
        "execution": 0.04714045207910317,
        "only": 0.04714045207910317,
        "and": 0.282842712474619,
        "is": 0.04714045207910317,
        "surfaced": 0.04714045207910317,
        "run": 0.09428090415820634,
        "summary": 0.04714045207910317,
        "encourage": 0.04714045207910317,
        "re": 0.04714045207910317,
        "enabling": 0.04714045207910317,
        "logging": 0.09428090415820634,
        "ux": 0.04714045207910317,
        "errors": 0.04714045207910317,
        "show": 0.04714045207910317,
        "one": 0.04714045207910317,
        "line": 0.04714045207910317,
        "summaries": 0.04714045207910317,
        "per": 0.04714045207910317,
        "section": 0.04714045207910317,
        "quickstart": 0.04714045207910317,
        "references": 0.04714045207910317,
        "docker": 0.04714045207910317,
        "compose": 0.04714045207910317,
        "without": 0.09428090415820634,
        "supporting": 0.04714045207910317,
        "analyzer": 0.1414213562373095,
        "signal": 0.04714045207910317,
        "verbose": 0.09428090415820634,
        "prints": 0.04714045207910317,
        "offending": 0.04714045207910317,
        "sentence": 0.04714045207910317,
        "missing": 0.04714045207910317,
        "tokens": 0.04714045207910317,
        "short": 0.04714045207910317,
        "list": 0.04714045207910317,
        "of": 0.04714045207910317,
        "nearby": 0.04714045207910317,
        "evidence": 0.09428090415820634,
        "persist": 0.09428090415820634,
        "json": 0.04714045207910317,
        "report": 0.04714045207910317,
        "under": 0.04714045207910317,
        "capturing": 0.04714045207910317,
        "validator": 0.04714045207910317,
        "status": 0.09428090415820634,
        "issues": 0.04714045207910317,
        "selected": 0.04714045207910317,
        "forensic": 0.04714045207910317,
        "review": 0.04714045207910317,
        "testing": 0.04714045207910317,
        "strategy": 0.04714045207910317,
        "unit": 0.04714045207910317,
        "tests": 0.1414213562373095,
        "cover": 0.04714045207910317,
        "positive": 0.04714045207910317,
        "negative": 0.04714045207910317,
        "cases": 0.09428090415820634,
        "nohallucinationvalidator": 0.04714045207910317,
        "including": 0.04714045207910317,
        "edge": 0.04714045207910317,
        "such": 0.04714045207910317,
        "as": 0.04714045207910317,
        "citations": 0.04714045207910317,
        "using": 0.04714045207910317,
        "synonyms": 0.04714045207910317,
        "or": 0.04714045207910317,
        "pluralization": 0.04714045207910317,
        "bullet": 0.04714045207910317,
        "lists": 0.04714045207910317,
        "code": 0.04714045207910317,
        "blocks": 0.04714045207910317,
        "integration": 0.04714045207910317,
        "full": 0.04714045207910317,
        "on": 0.04714045207910317,
        "synthetic": 0.04714045207910317,
        "repos": 0.04714045207910317,
        "stored": 0.04714045207910317,
        "data": 0.04714045207910317,
        "confirm": 0.04714045207910317,
        "grounded": 0.04714045207910317,
        "readmes": 0.04714045207910317,
        "pass": 0.04714045207910317,
        "tampered": 0.04714045207910317,
        "outputs": 0.09428090415820634,
        "fail": 0.04714045207910317,
        "fast": 0.04714045207910317,
        "stub": 0.04714045207910317,
        "replacements": 0.04714045207910317,
        "regression": 0.04714045207910317,
        "fixtures": 0.04714045207910317,
        "asserting": 0.04714045207910317,
        "disabling": 0.04714045207910317,
        "via": 0.04714045207910317,
        "config": 0.04714045207910317,
        "leaves": 0.04714045207910317,
        "runs": 0.09428090415820634,
        "untouched": 0.04714045207910317,
        "enumerates": 0.04714045207910317,
        "flagged": 0.04714045207910317,
        "sentences": 0.04714045207910317,
        "story": 0.09428090415820634,
        "s": 0.1414213562373095,
        "033": 0.04714045207910317,
        "artifact": 0.04714045207910317,
        "persistence": 0.04714045207910317,
        "done": 0.04714045207910317,
        "text": 0.04714045207910317,
        "alongside": 0.04714045207910317,
        "embeddings": 0.04714045207910317,
        "so": 0.04714045207910317,
        "repeated": 0.04714045207910317,
        "can": 0.04714045207910317,
        "reuse": 0.04714045207910317,
        "structured": 0.04714045207910317,
        "signals": 0.04714045207910317,
        "reprocessing": 0.04714045207910317,
        "unchanged": 0.04714045207910317,
        "files": 0.04714045207910317,
        "dependencies": 0.04714045207910317,
        "already": 0.04714045207910317,
        "completed": 0.04714045207910317,
        "003": 0.04714045207910317,
        "scanner": 0.04714045207910317,
        "020": 0.04714045207910317,
        "embedding": 0.04714045207910317,
        "cache": 0.04714045207910317
      },
      "text": "& CLI Updates:** - Introduce a `validation` map with a `no_hallucination` boolean (default `true`). Respect repo-level overrides while allowing `DOCGEN_VALIDATION_NO_HALLUCINATION=false` to disable the check in CI emergencies. - Add a `--skip-validation` flag for `docgen init|update|regenerate` that flips the toggle for the current execution only and is surfaced in the run summary to encourage re-enabling. - **Logging & UX:** - CLI errors show one-line summaries per section (`quickstart: references docker compose without supporting analyzer signal`). `--verbose` prints the offending sentence, the missing tokens, and a short list of nearby evidence. - Persist a `validation.json` report under `.docgen/` capturing the validator status, issues, and selected evidence for forensic review. - **Testing Strategy:** - Unit tests cover positive/negative cases for the `NoHallucinationValidator`, including edge cases such as citations using synonyms or pluralization, bullet lists, and code blocks. - Integration tests run the full CLI on synthetic repos stored in `tests/data/validation/` to confirm grounded READMEs pass and tampered outputs fail fast with stub replacements. - Add regression fixtures asserting that disabling validation via config/CLI leaves runs untouched and that verbose logging enumerates flagged sentences. ## Story S-033 \u2014 Analyzer Artifact Persistence - **Status:** \u2714 Done - **Story Text:** Persist analyzer outputs alongside embeddings so repeated runs can reuse structured signals without reprocessing unchanged files. - **Dependencies already completed:** S-003 (Repo scanner), S-020 (embedding cache",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#3",
      "vector": {
        "story": 0.19975046777556893,
        "s": 0.2996257016633534,
        "033": 0.04993761694389223,
        "analyzer": 0.19975046777556893,
        "artifact": 0.09987523388778446,
        "persistence": 0.04993761694389223,
        "status": 0.09987523388778446,
        "done": 0.09987523388778446,
        "text": 0.09987523388778446,
        "persist": 0.04993761694389223,
        "outputs": 0.09987523388778446,
        "alongside": 0.04993761694389223,
        "embeddings": 0.04993761694389223,
        "so": 0.04993761694389223,
        "repeated": 0.04993761694389223,
        "runs": 0.09987523388778446,
        "can": 0.04993761694389223,
        "reuse": 0.04993761694389223,
        "structured": 0.04993761694389223,
        "signals": 0.09987523388778446,
        "without": 0.04993761694389223,
        "reprocessing": 0.04993761694389223,
        "unchanged": 0.09987523388778446,
        "files": 0.09987523388778446,
        "dependencies": 0.09987523388778446,
        "already": 0.09987523388778446,
        "completed": 0.09987523388778446,
        "003": 0.04993761694389223,
        "repo": 0.09987523388778446,
        "scanner": 0.04993761694389223,
        "020": 0.04993761694389223,
        "embedding": 0.04993761694389223,
        "cache": 0.09987523388778446,
        "groundwork": 0.09987523388778446,
        "constraints": 0.09987523388778446,
        "store": 0.04993761694389223,
        "artifacts": 0.04993761694389223,
        "under": 0.04993761694389223,
        "docgen": 0.04993761694389223,
        "with": 0.1498128508316767,
        "versioning": 0.04993761694389223,
        "to": 0.19975046777556893,
        "handle": 0.04993761694389223,
        "schema": 0.04993761694389223,
        "changes": 0.04993761694389223,
        "refresh": 0.04993761694389223,
        "results": 0.04993761694389223,
        "incrementally": 0.04993761694389223,
        "based": 0.09987523388778446,
        "on": 0.04993761694389223,
        "file": 0.04993761694389223,
        "hashes": 0.04993761694389223,
        "and": 0.2996257016633534,
        "invalidate": 0.04993761694389223,
        "when": 0.19975046777556893,
        "analyzers": 0.04993761694389223,
        "change": 0.04993761694389223,
        "keep": 0.04993761694389223,
        "storage": 0.04993761694389223,
        "format": 0.04993761694389223,
        "json": 0.04993761694389223,
        "serializable": 0.04993761694389223,
        "human": 0.04993761694389223,
        "auditable": 0.04993761694389223,
        "non": 0.09987523388778446,
        "goals": 0.1498128508316767,
        "remote": 0.04993761694389223,
        "backends": 0.04993761694389223,
        "or": 0.04993761694389223,
        "cross": 0.04993761694389223,
        "sharing": 0.04993761694389223,
        "acceptance": 0.04993761694389223,
        "criteria": 0.04993761694389223,
        "saved": 0.04993761694389223,
        "reloaded": 0.04993761694389223,
        "during": 0.04993761694389223,
        "orchestrator": 0.04993761694389223,
        "skipping": 0.04993761694389223,
        "recomputation": 0.04993761694389223,
        "inputs": 0.04993761694389223,
        "integration": 0.09987523388778446,
        "tests": 0.04993761694389223,
        "demonstrate": 0.04993761694389223,
        "speed": 0.04993761694389223,
        "up": 0.04993761694389223,
        "by": 0.09987523388778446,
        "reusing": 0.04993761694389223,
        "cached": 0.04993761694389223,
        "correct": 0.04993761694389223,
        "invalidation": 0.04993761694389223,
        "mutate": 0.04993761694389223,
        "documentation": 0.04993761694389223,
        "in": 0.04993761694389223,
        "spec": 0.09987523388778446,
        "md": 0.04993761694389223,
        "updated": 0.04993761694389223,
        "reflect": 0.04993761694389223,
        "caching": 0.04993761694389223,
        "behavior": 0.04993761694389223,
        "034": 0.04993761694389223,
        "service": 0.1498128508316767,
        "mode": 0.09987523388778446,
        "extended": 0.04993761694389223,
        "runtimes": 0.04993761694389223,
        "deliver": 0.04993761694389223,
        "fastapi": 0.09987523388778446,
        "llama": 0.09987523388778446,
        "cpp": 0.09987523388778446,
        "runtime": 0.04993761694389223,
        "adapter": 0.09987523388778446,
        "tree": 0.09987523388778446,
        "sitter": 0.09987523388778446,
        "powered": 0.04993761694389223,
        "symbol": 0.04993761694389223,
        "extraction": 0.04993761694389223,
        "round": 0.04993761694389223,
        "out": 0.04993761694389223,
        "stretch": 0.04993761694389223,
        "010": 0.04993761694389223,
        "git": 0.04993761694389223,
        "publishing": 0.04993761694389223,
        "infrastructure": 0.04993761694389223,
        "017": 0.04993761694389223,
        "entrypoint": 0.04993761694389223,
        "detection": 0.04993761694389223,
        "must": 0.04993761694389223,
        "expose": 0.04993761694389223,
        "endpoints": 0.04993761694389223,
        "for": 0.09987523388778446,
        "init": 0.04993761694389223,
        "update": 0.04993761694389223,
        "dry": 0.04993761694389223,
        "run": 0.04993761694389223,
        "authentication": 0.04993761694389223,
        "disabled": 0.04993761694389223,
        "default": 0.04993761694389223,
        "but": 0.04993761694389223,
        "ready": 0.04993761694389223,
        "future": 0.04993761694389223,
        "hardening": 0.04993761694389223,
        "hooks": 0.04993761694389223,
        "should": 0.04993761694389223,
        "mirror": 0.04993761694389223,
        "llmrunner": 0.04993761694389223,
        "interface": 0.04993761694389223,
        "enforce": 0.04993761694389223,
        "local": 0.04993761694389223,
        "execution": 0.04993761694389223,
        "paths": 0.04993761694389223,
        "limited": 0.04993761694389223,
        "supported": 0.04993761694389223,
        "languages": 0.04993761694389223,
        "python": 0.04993761694389223,
        "java": 0.04993761694389223,
        "typescript": 0.04993761694389223,
        "graceful": 0.04993761694389223,
        "degradation": 0.04993761694389223,
        "parsers": 0.04993761694389223,
        "unavailable": 0.04993761694389223,
        "production": 0.04993761694389223
      },
      "text": "## Story S-033 \u2014 Analyzer Artifact Persistence - **Status:** \u2714 Done - **Story Text:** Persist analyzer outputs alongside embeddings so repeated runs can reuse structured signals without reprocessing unchanged files. - **Dependencies already completed:** S-003 (Repo scanner), S-020 (embedding cache groundwork) - **Constraints:** - Store artifacts under `.docgen/` with versioning to handle schema changes. - Refresh analyzer results incrementally based on file hashes and invalidate when analyzers change. - Keep storage format JSON-serializable and human-auditable. - **Non-Goals:** Remote cache backends or cross-repo sharing. - **Acceptance Criteria:** - Analyzer outputs saved and reloaded during orchestrator runs, skipping recomputation when inputs unchanged. - Integration tests demonstrate speed-up by reusing cached signals and correct invalidation when files mutate. - Documentation in `spec/spec.md` updated to reflect artifact caching behavior. ## Story S-034 \u2014 Service Mode & Extended Runtimes - **Status:** \u2714 Done - **Story Text:** Deliver FastAPI-based service mode, llama.cpp runtime adapter, and tree-sitter powered symbol extraction to round out stretch goals. - **Dependencies already completed:** S-010 (Git publishing infrastructure), S-017 (entrypoint detection groundwork) - **Constraints:** - FastAPI service must expose endpoints for init/update/dry-run with authentication disabled by default but ready for future hardening hooks. - llama.cpp adapter should mirror `LLMRunner` interface and enforce local execution paths. - Tree-sitter integration limited to supported languages (Python/Java/TypeScript) with graceful degradation when parsers unavailable. - **Non-Goals:** Production",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#4",
      "vector": {
        "with": 0.21594472522460836,
        "authentication": 0.07198157507486945,
        "disabled": 0.07198157507486945,
        "by": 0.1439631501497389,
        "default": 0.07198157507486945,
        "but": 0.07198157507486945,
        "ready": 0.07198157507486945,
        "for": 0.1439631501497389,
        "future": 0.07198157507486945,
        "hardening": 0.07198157507486945,
        "hooks": 0.07198157507486945,
        "llama": 0.1439631501497389,
        "cpp": 0.1439631501497389,
        "adapter": 0.1439631501497389,
        "should": 0.07198157507486945,
        "mirror": 0.07198157507486945,
        "llmrunner": 0.07198157507486945,
        "interface": 0.07198157507486945,
        "and": 0.4318894504492167,
        "enforce": 0.07198157507486945,
        "local": 0.07198157507486945,
        "execution": 0.07198157507486945,
        "paths": 0.07198157507486945,
        "tree": 0.1439631501497389,
        "sitter": 0.1439631501497389,
        "integration": 0.07198157507486945,
        "limited": 0.07198157507486945,
        "to": 0.1439631501497389,
        "supported": 0.07198157507486945,
        "languages": 0.07198157507486945,
        "python": 0.07198157507486945,
        "java": 0.07198157507486945,
        "typescript": 0.07198157507486945,
        "graceful": 0.07198157507486945,
        "degradation": 0.07198157507486945,
        "when": 0.07198157507486945,
        "parsers": 0.07198157507486945,
        "unavailable": 0.07198157507486945,
        "non": 0.07198157507486945,
        "goals": 0.1439631501497389,
        "production": 0.07198157507486945,
        "deployment": 0.07198157507486945,
        "tooling": 0.07198157507486945,
        "or": 0.07198157507486945,
        "advanced": 0.07198157507486945,
        "queueing": 0.07198157507486945,
        "acceptance": 0.07198157507486945,
        "criteria": 0.07198157507486945,
        "service": 0.1439631501497389,
        "mode": 0.07198157507486945,
        "passes": 0.07198157507486945,
        "end": 0.1439631501497389,
        "tests": 0.21594472522460836,
        "invoking": 0.07198157507486945,
        "fastapi": 0.07198157507486945,
        "routes": 0.07198157507486945,
        "reusing": 0.07198157507486945,
        "orchestrator": 0.07198157507486945,
        "logic": 0.07198157507486945,
        "covered": 0.07198157507486945,
        "unit": 0.07198157507486945,
        "simulating": 0.07198157507486945,
        "cli": 0.07198157507486945,
        "shared": 0.07198157507486945,
        "configuration": 0.07198157507486945,
        "analyzer": 0.07198157507486945,
        "enriches": 0.07198157507486945,
        "signals": 0.07198157507486945,
        "symbol": 0.07198157507486945,
        "metadata": 0.07198157507486945,
        "associated": 0.07198157507486945,
        "validate": 0.07198157507486945,
        "extraction": 0.07198157507486945,
        "on": 0.07198157507486945,
        "fixtures": 0.07198157507486945,
        "updated": 0.07198157507486945,
        "documentation": 0.07198157507486945,
        "usage": 0.07198157507486945,
        "extended": 0.07198157507486945,
        "runtimes": 0.07198157507486945,
        "in": 0.1439631501497389,
        "docs": 0.07198157507486945,
        "spec": 0.1439631501497389,
        "md": 0.07198157507486945,
        "next": 0.07198157507486945,
        "actions": 0.07198157507486945,
        "execute": 0.07198157507486945,
        "the": 0.07198157507486945,
        "stories": 0.07198157507486945,
        "above": 0.07198157507486945,
        "sequentially": 0.07198157507486945,
        "upon": 0.07198157507486945,
        "completion": 0.07198157507486945,
        "reassess": 0.07198157507486945,
        "remaining": 0.07198157507486945,
        "stretch": 0.07198157507486945,
        "knowledge": 0.07198157507486945,
        "graph": 0.07198157507486945,
        "secret": 0.07198157507486945,
        "scanning": 0.07198157507486945,
        "if": 0.07198157507486945,
        "still": 0.07198157507486945,
        "scope": 0.07198157507486945
      },
      "text": "with authentication disabled by default but ready for future hardening hooks. - llama.cpp adapter should mirror `LLMRunner` interface and enforce local execution paths. - Tree-sitter integration limited to supported languages (Python/Java/TypeScript) with graceful degradation when parsers unavailable. - **Non-Goals:** Production deployment tooling or advanced queueing. - **Acceptance Criteria:** - Service mode passes end-to-end tests invoking FastAPI routes and reusing orchestrator logic. - llama.cpp adapter covered by unit tests simulating CLI and shared configuration. - Tree-sitter analyzer enriches signals with symbol metadata and associated tests validate extraction on fixtures. - Updated documentation for service usage and extended runtimes in `docs/` and `spec/spec.md`. --- **Next Actions:** Execute the stories above sequentially; upon completion reassess remaining stretch goals (knowledge graph, secret scanning) if still in scope.",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/prompt_template.md#0",
      "vector": {
        "below": 0.09417632186960222,
        "is": 0.09417632186960222,
        "a": 0.18835264373920443,
        "drop": 0.04708816093480111,
        "in": 0.18835264373920443,
        "prompt": 0.09417632186960222,
        "template": 0.09417632186960222,
        "you": 0.14126448280440332,
        "can": 0.04708816093480111,
        "reuse": 0.04708816093480111,
        "for": 0.18835264373920443,
        "each": 0.04708816093480111,
        "single": 0.09417632186960222,
        "story": 0.5179697702828122,
        "s": 0.18835264373920443,
        "001": 0.09417632186960222,
        "044": 0.04708816093480111,
        "followed": 0.04708816093480111,
        "by": 0.04708816093480111,
        "two": 0.04708816093480111,
        "filled": 0.04708816093480111,
        "examples": 0.04708816093480111,
        "and": 0.18835264373920443,
        "016": 0.04708816093480111,
        "one": 0.04708816093480111,
        "at": 0.09417632186960222,
        "time": 0.04708816093480111,
        "implementation": 0.04708816093480111,
        "use": 0.09417632186960222,
        "this": 0.09417632186960222,
        "exact": 0.04708816093480111,
        "structure": 0.04708816093480111,
        "every": 0.04708816093480111,
        "replace": 0.04708816093480111,
        "placeholders": 0.04708816093480111,
        "with": 0.04708816093480111,
        "your": 0.04708816093480111,
        "specifics": 0.04708816093480111,
        "before": 0.04708816093480111,
        "sending": 0.04708816093480111,
        "system": 0.04708816093480111,
        "role": 0.04708816093480111,
        "are": 0.04708816093480111,
        "principal": 0.04708816093480111,
        "python": 0.14126448280440332,
        "engineer": 0.04708816093480111,
        "implementing": 0.04708816093480111,
        "tightly": 0.04708816093480111,
        "scoped": 0.04708816093480111,
        "an": 0.04708816093480111,
        "existing": 0.04708816093480111,
        "repository": 0.04708816093480111,
        "must": 0.04708816093480111,
        "implement": 0.04708816093480111,
        "only": 0.04708816093480111,
        "the": 0.14126448280440332,
        "no": 0.14126448280440332,
        "scope": 0.04708816093480111,
        "drift": 0.04708816093480111,
        "future": 0.04708816093480111,
        "stories": 0.04708816093480111,
        "produce": 0.04708816093480111,
        "production": 0.04708816093480111,
        "grade": 0.04708816093480111,
        "cross": 0.04708816093480111,
        "platform": 0.04708816093480111,
        "code": 0.09417632186960222,
        "windows": 0.04708816093480111,
        "macos": 0.04708816093480111,
        "3": 0.09417632186960222,
        "11": 0.09417632186960222,
        "follow": 0.04708816093480111,
        "repo": 0.04708816093480111,
        "conventions": 0.04708816093480111,
        "poetry": 0.09417632186960222,
        "ruff": 0.09417632186960222,
        "black": 0.09417632186960222,
        "mypy": 0.09417632186960222,
        "strict": 0.09417632186960222,
        "pytest": 0.14126448280440332,
        "logging": 0.04708816093480111,
        "prints": 0.04708816093480111,
        "library": 0.04708816093480111,
        "type": 0.04708816093480111,
        "hints": 0.04708816093480111,
        "everywhere": 0.04708816093480111,
        "keep": 0.04708816093480111,
        "audio": 0.09417632186960222,
        "callbacks": 0.04708816093480111,
        "non": 0.09417632186960222,
        "blocking": 0.04708816093480111,
        "prefer": 0.04708816093480111,
        "ring": 0.04708816093480111,
        "buffers": 0.04708816093480111,
        "preallocated": 0.04708816093480111,
        "arrays": 0.04708816093480111,
        "avoid": 0.04708816093480111,
        "os": 0.04708816093480111,
        "specific": 0.04708816093480111,
        "imports": 0.04708816093480111,
        "module": 0.04708816093480111,
        "top": 0.04708816093480111,
        "level": 0.04708816093480111,
        "when": 0.04708816093480111,
        "something": 0.04708816093480111,
        "ambiguous": 0.04708816093480111,
        "make": 0.04708816093480111,
        "smallest": 0.04708816093480111,
        "reasonable": 0.04708816093480111,
        "assumption": 0.04708816093480111,
        "state": 0.04708816093480111,
        "it": 0.04708816093480111,
        "assumptions": 0.04708816093480111,
        "section": 0.04708816093480111,
        "proceed": 0.04708816093480111,
        "context": 0.04708816093480111,
        "id": 0.04708816093480111,
        "story_id": 0.04708816093480111,
        "title": 0.04708816093480111,
        "story_title": 0.04708816093480111,
        "text": 0.04708816093480111,
        "story_text": 0.04708816093480111,
        "dependencies": 0.04708816093480111,
        "already": 0.04708816093480111,
        "completed": 0.04708816093480111,
        "dependencies_list_or_none": 0.04708816093480111,
        "constraints": 0.04708816093480111,
        "from": 0.04708816093480111,
        "prd": 0.04708816093480111,
        "backlog": 0.04708816093480111,
        "key_constraints": 0.04708816093480111,
        "goals": 0.04708816093480111,
        "non_goals": 0.04708816093480111,
        "environment": 0.04708816093480111,
        "tooling": 0.04708816093480111,
        "fixed": 0.04708816093480111,
        "package": 0.04708816093480111,
        "manager": 0.04708816093480111,
        "linters": 0.04708816093480111,
        "formatters": 0.04708816093480111,
        "static": 0.04708816093480111,
        "typing": 0.04708816093480111,
        "tests": 0.04708816093480111,
        "cov": 0.04708816093480111,
        "ui": 0.04708816093480111,
        "pyside6": 0.04708816093480111,
        "if": 0.09417632186960222,
        "relevant": 0.09417632186960222,
        "to": 0.04708816093480111,
        "i": 0.04708816093480111,
        "o": 0.04708816093480111,
        "sounddevice": 0.04708816093480111,
        "portaudio": 0.04708816093480111
      },
      "text": "Below is a **drop\u2011in prompt template** you can reuse for **each single story (S\u2011001 \u2192 S\u2011044)**, followed by **two filled examples** (for S\u2011001 and S\u2011016). --- ## \ud83d\udd27 One\u2011Story\u2011At\u2011A\u2011Time Implementation Prompt (Template) > **Use this exact structure for every story.** Replace `{{\u2026}}` placeholders with your specifics before sending. --- **SYSTEM / ROLE** You are a **Principal Python engineer** implementing a single, tightly scoped story in an existing repository. You must: * Implement **only the story below** (no scope drift, no future stories). * Produce production\u2011grade, cross\u2011platform code (Windows/macOS), Python 3.11. * Follow repo conventions: Poetry, ruff, black, mypy (strict), pytest. * Use logging (no prints) in library code, and type hints everywhere. * Keep audio callbacks non\u2011blocking; prefer ring buffers and preallocated arrays. * Avoid OS\u2011specific imports at module top level. * When something is ambiguous, **make the smallest reasonable assumption**, state it in the *Assumptions* section, and proceed. --- ### Story Context * **Story ID:** {{STORY_ID}} * **Story Title:** {{STORY_TITLE}} * **Story Text:** {{STORY_TEXT}} * **Dependencies already completed:** {{DEPENDENCIES_LIST_OR_NONE}} * **Constraints from PRD/backlog:** {{KEY_CONSTRAINTS}} * **Non\u2011Goals for this story:** {{NON_GOALS}} ### Environment & Tooling (fixed) * **Python:** 3.11 * **Package manager:** Poetry * **Linters/formatters:** ruff, black * **Static typing:** mypy (strict) * **Tests:** pytest + pytest\u2011cov * **UI:** PySide6 (if relevant to story) * **Audio I/O:** sounddevice/PortAudio (if relevant)",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#1",
      "vector": {
        "non_goals": 0.05581455721859476,
        "environment": 0.05581455721859476,
        "tooling": 0.05581455721859476,
        "fixed": 0.05581455721859476,
        "python": 0.16744367165578428,
        "3": 0.11162911443718952,
        "11": 0.05581455721859476,
        "package": 0.05581455721859476,
        "manager": 0.05581455721859476,
        "poetry": 0.05581455721859476,
        "linters": 0.05581455721859476,
        "formatters": 0.05581455721859476,
        "ruff": 0.11162911443718952,
        "black": 0.11162911443718952,
        "static": 0.05581455721859476,
        "typing": 0.05581455721859476,
        "mypy": 0.11162911443718952,
        "strict": 0.05581455721859476,
        "tests": 0.11162911443718952,
        "pytest": 0.16744367165578428,
        "cov": 0.05581455721859476,
        "ui": 0.05581455721859476,
        "pyside6": 0.05581455721859476,
        "if": 0.2790727860929738,
        "relevant": 0.2790727860929738,
        "to": 0.16744367165578428,
        "story": 0.05581455721859476,
        "audio": 0.05581455721859476,
        "i": 0.11162911443718952,
        "o": 0.05581455721859476,
        "sounddevice": 0.05581455721859476,
        "portaudio": 0.05581455721859476,
        "ml": 0.05581455721859476,
        "runtime": 0.05581455721859476,
        "onnxruntime": 0.05581455721859476,
        "current": 0.05581455721859476,
        "repository": 0.05581455721859476,
        "snapshot": 0.05581455721859476,
        "paste": 0.11162911443718952,
        "fresh": 0.05581455721859476,
        "snapshots": 0.05581455721859476,
        "so": 0.05581455721859476,
        "the": 0.11162911443718952,
        "model": 0.05581455721859476,
        "does": 0.05581455721859476,
        "not": 0.05581455721859476,
        "hallucinate": 0.05581455721859476,
        "keep": 0.05581455721859476,
        "these": 0.05581455721859476,
        "short": 0.11162911443718952,
        "but": 0.05581455721859476,
        "sufficient": 0.05581455721859476,
        "root": 0.05581455721859476,
        "tree": 0.11162911443718952,
        "a": 0.05581455721859476,
        "git": 0.11162911443718952,
        "or": 0.11162911443718952,
        "ls": 0.05581455721859476,
        "files": 0.22325822887437904,
        "repo_tree": 0.05581455721859476,
        "key": 0.05581455721859476,
        "only": 0.05581455721859476,
        "sections": 0.11162911443718952,
        "path": 0.11162911443718952,
        "file1": 0.05581455721859476,
        "file1_relevant_snippet": 0.05581455721859476,
        "file2": 0.05581455721859476,
        "file2_relevant_snippet": 0.05581455721859476,
        "pinned": 0.05581455721859476,
        "pyproject": 0.05581455721859476,
        "toml": 0.11162911443718952,
        "parts": 0.05581455721859476,
        "pyproject_snippet": 0.05581455721859476,
        "acceptance": 0.05581455721859476,
        "criteria": 0.05581455721859476,
        "definition": 0.05581455721859476,
        "of": 0.16744367165578428,
        "done": 0.05581455721859476,
        "functional": 0.05581455721859476,
        "functional_doc": 0.05581455721859476,
        "quality": 0.05581455721859476,
        "pass": 0.05581455721859476,
        "passes": 0.05581455721859476,
        "with": 0.11162911443718952,
        "90": 0.05581455721859476,
        "coverage": 0.05581455721859476,
        "for": 0.05581455721859476,
        "new": 0.05581455721859476,
        "code": 0.05581455721859476,
        "cross": 0.05581455721859476,
        "platform": 0.05581455721859476,
        "no": 0.11162911443718952,
        "os": 0.05581455721859476,
        "specific": 0.05581455721859476,
        "breakage": 0.05581455721859476,
        "guarded": 0.05581455721859476,
        "imports": 0.05581455721859476,
        "where": 0.05581455721859476,
        "needed": 0.05581455721859476,
        "performance": 0.05581455721859476,
        "applicable": 0.05581455721859476,
        "perf_requirements": 0.05581455721859476,
        "docs": 0.11162911443718952,
        "inline": 0.05581455721859476,
        "docstrings": 0.05581455721859476,
        "readme": 0.05581455721859476,
        "module": 0.05581455721859476,
        "level": 0.05581455721859476,
        "updated": 0.05581455721859476,
        "user": 0.05581455721859476,
        "facing": 0.05581455721859476,
        "unrelated": 0.05581455721859476,
        "refactors": 0.05581455721859476,
        "minimal": 0.05581455721859476,
        "diff": 0.05581455721859476,
        "outside": 0.05581455721859476,
        "touched": 0.05581455721859476,
        "scope": 0.05581455721859476,
        "deliverables": 0.05581455721859476,
        "output": 0.05581455721859476,
        "contract": 0.05581455721859476,
        "return": 0.05581455721859476,
        "following": 0.05581455721859476,
        "in": 0.05581455721859476,
        "order": 0.05581455721859476,
        "exact": 0.11162911443718952,
        "headings": 0.05581455721859476,
        "1": 0.05581455721859476,
        "assumptions": 0.11162911443718952,
        "decisions": 0.05581455721859476,
        "bullet": 0.05581455721859476,
        "list": 0.05581455721859476,
        "any": 0.05581455721859476,
        "reasonable": 0.05581455721859476,
        "you": 0.11162911443718952,
        "made": 0.05581455721859476,
        "2": 0.05581455721859476,
        "planned": 0.05581455721859476,
        "changes": 0.05581455721859476,
        "tl": 0.05581455721859476,
        "dr": 0.05581455721859476,
        "summary": 0.05581455721859476,
        "what": 0.05581455721859476,
        "will": 0.05581455721859476,
        "add": 0.05581455721859476,
        "modify": 0.05581455721859476,
        "and": 0.11162911443718952,
        "why": 0.05581455721859476,
        "full": 0.05581455721859476,
        "test": 0.05581455721859476,
        "covering": 0.05581455721859476,
        "success": 0.05581455721859476,
        "edge": 0.05581455721859476,
        "cases": 0.05581455721859476,
        "error": 0.05581455721859476,
        "paths": 0.05581455721859476,
        "4": 0.05581455721859476,
        "validation": 0.05581455721859476,
        "steps": 0.05581455721859476,
        "local": 0.05581455721859476
      },
      "text": "{{NON_GOALS}} ### Environment & Tooling (fixed) * **Python:** 3.11 * **Package manager:** Poetry * **Linters/formatters:** ruff, black * **Static typing:** mypy (strict) * **Tests:** pytest + pytest\u2011cov * **UI:** PySide6 (if relevant to story) * **Audio I/O:** sounddevice/PortAudio (if relevant) * **ML runtime:** onnxruntime (if relevant) ### Current Repository Snapshot > Paste fresh snapshots so the model does not hallucinate. Keep these short but sufficient. * **Root tree (`tree -a -I .git` or `git ls-files`):** ``` {{REPO_TREE}} ``` * **Key files (paste only relevant sections):** * `{{PATH/TO/FILE1}}` ```python {{FILE1_RELEVANT_SNIPPET}} ``` * `{{PATH/TO/FILE2}}` ```python {{FILE2_RELEVANT_SNIPPET}} ``` * **Pinned pyproject.toml (relevant parts):** ```toml {{PYPROJECT_SNIPPET}} ``` ### Acceptance Criteria (Definition of Done) * Functional: {{FUNCTIONAL_DOC}} * Quality: **ruff/black/mypy** pass; **pytest** passes with **\u2265 90%** coverage for new code. * Cross\u2011platform: No OS\u2011specific breakage; guarded imports where needed. * Performance (if applicable): {{PERF_REQUIREMENTS}} * Docs: Inline docstrings; README or module\u2011level docs updated if user\u2011facing. * No unrelated refactors; minimal diff outside touched scope. ### Deliverables \u2014 **Output Contract** Return the following sections **in order**, with exact headings: 1. **Assumptions & Decisions** \u2013 bullet list of any reasonable assumptions you made. 2. **Planned Changes (TL;DR)** \u2013 short summary of what files you will add/modify and why. 3. **Tests** \u2013 full test files covering success, edge cases, and error paths. 4. **Validation Steps (Local)** \u2013 exact",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#2",
      "vector": {
        "of": 0.1487044791289829,
        "any": 0.04956815970966096,
        "reasonable": 0.04956815970966096,
        "assumptions": 0.04956815970966096,
        "you": 0.09913631941932192,
        "made": 0.04956815970966096,
        "2": 0.04956815970966096,
        "planned": 0.04956815970966096,
        "changes": 0.04956815970966096,
        "tl": 0.04956815970966096,
        "dr": 0.04956815970966096,
        "short": 0.04956815970966096,
        "summary": 0.04956815970966096,
        "what": 0.04956815970966096,
        "files": 0.1487044791289829,
        "will": 0.04956815970966096,
        "add": 0.04956815970966096,
        "modify": 0.04956815970966096,
        "and": 0.3965452776772877,
        "why": 0.04956815970966096,
        "3": 0.04956815970966096,
        "tests": 0.04956815970966096,
        "full": 0.04956815970966096,
        "test": 0.09913631941932192,
        "covering": 0.04956815970966096,
        "success": 0.04956815970966096,
        "edge": 0.04956815970966096,
        "cases": 0.04956815970966096,
        "error": 0.04956815970966096,
        "paths": 0.04956815970966096,
        "4": 0.04956815970966096,
        "validation": 0.04956815970966096,
        "steps": 0.04956815970966096,
        "local": 0.04956815970966096,
        "exact": 0.04956815970966096,
        "commands": 0.04956815970966096,
        "to": 0.09913631941932192,
        "run": 0.04956815970966096,
        "poetry": 0.04956815970966096,
        "install": 0.04956815970966096,
        "lint": 0.04956815970966096,
        "type": 0.04956815970966096,
        "expected": 0.04956815970966096,
        "outputs": 0.04956815970966096,
        "5": 0.04956815970966096,
        "conventional": 0.04956815970966096,
        "commit": 0.09913631941932192,
        "message": 0.09913631941932192,
        "a": 0.24784079854830482,
        "single": 0.04956815970966096,
        "with": 0.09913631941932192,
        "the": 0.24784079854830482,
        "story": 0.24784079854830482,
        "description": 0.04956815970966096,
        "ex": 0.04956815970966096,
        "s": 0.1487044791289829,
        "001": 0.1487044791289829,
        "implemented": 0.04956815970966096,
        "get": 0.04956815970966096,
        "customers": 0.04956815970966096,
        "endpoint": 0.04956815970966096,
        "implementation": 0.04956815970966096,
        "hints": 0.04956815970966096,
        "if": 0.1487044791289829,
        "helpful": 0.04956815970966096,
        "keep": 0.04956815970966096,
        "per": 0.04956815970966096,
        "frame": 0.04956815970966096,
        "allocations": 0.04956815970966096,
        "near": 0.04956815970966096,
        "zero": 0.04956815970966096,
        "in": 0.19827263883864385,
        "audio": 0.04956815970966096,
        "callbacks": 0.04956815970966096,
        "use": 0.04956815970966096,
        "dependency": 0.04956815970966096,
        "inversion": 0.04956815970966096,
        "define": 0.04956815970966096,
        "clear": 0.04956815970966096,
        "interfaces": 0.04956815970966096,
        "core": 0.1487044791289829,
        "or": 0.1487044791289829,
        "ml": 0.04956815970966096,
        "where": 0.04956815970966096,
        "specified": 0.04956815970966096,
        "backlog": 0.04956815970966096,
        "an": 0.04956815970966096,
        "external": 0.04956815970966096,
        "binary": 0.04956815970966096,
        "model": 0.04956815970966096,
        "is": 0.04956815970966096,
        "out": 0.04956815970966096,
        "scope": 0.04956815970966096,
        "for": 0.04956815970966096,
        "this": 0.09913631941932192,
        "provide": 0.04956815970966096,
        "deterministic": 0.04956815970966096,
        "stub": 0.04956815970966096,
        "todo": 0.04956815970966096,
        "feature": 0.04956815970966096,
        "flag": 0.04956815970966096,
        "important": 0.04956815970966096,
        "guardrails": 0.04956815970966096,
        "do": 0.1487044791289829,
        "not": 0.1487044791289829,
        "implement": 0.04956815970966096,
        "future": 0.04956815970966096,
        "stories": 0.04956815970966096,
        "introduce": 0.04956815970966096,
        "new": 0.04956815970966096,
        "dependencies": 0.04956815970966096,
        "without": 0.04956815970966096,
        "updating": 0.04956815970966096,
        "pyproject": 0.04956815970966096,
        "toml": 0.04956815970966096,
        "justifying": 0.04956815970966096,
        "them": 0.04956815970966096,
        "change": 0.04956815970966096,
        "licensing": 0.04956815970966096,
        "repo": 0.04956815970966096,
        "name": 0.04956815970966096,
        "ci": 0.04956815970966096,
        "workflows": 0.04956815970966096,
        "unless": 0.04956815970966096,
        "explicitly": 0.04956815970966096,
        "requested": 0.04956815970966096,
        "output": 0.04956815970966096,
        "would": 0.04956815970966096,
        "exceed": 0.04956815970966096,
        "limits": 0.04956815970966096,
        "split": 0.04956815970966096,
        "patch": 0.04956815970966096,
        "file": 0.04956815970966096,
        "contents": 0.04956815970966096,
        "by": 0.04956815970966096,
        "directory": 0.04956815970966096,
        "but": 0.04956815970966096,
        "still": 0.04956815970966096,
        "include": 0.04956815970966096,
        "all": 0.04956815970966096,
        "required": 0.04956815970966096,
        "example": 0.04956815970966096,
        "instantiation": 0.04956815970966096,
        "1": 0.04956815970966096,
        "initialize": 0.09913631941932192,
        "repository": 0.09913631941932192,
        "metadata": 0.04956815970966096,
        "copy": 0.04956815970966096,
        "adjust": 0.04956815970966096,
        "paste": 0.04956815970966096,
        "following": 0.04956815970966096,
        "as": 0.04956815970966096,
        "real": 0.04956815970966096,
        "prompt": 0.04956815970966096,
        "your": 0.04956815970966096,
        "llm": 0.04956815970966096,
        "id": 0.04956815970966096,
        "title": 0.04956815970966096
      },
      "text": "of any reasonable assumptions you made. 2. **Planned Changes (TL;DR)** \u2013 short summary of what files you will add/modify and why. 3. **Tests** \u2013 full test files covering success, edge cases, and error paths. 4. **Validation Steps (Local)** \u2013 exact commands to run (Poetry install, lint, type, test) and expected outputs. 5. **Conventional Commit Message** \u2013 a single commit with the story and a description, ex: \"S-001: Implemented the GET customers endpoint\" ### Implementation Hints (if helpful) * Keep per\u2011frame allocations near zero in audio callbacks. * Use dependency inversion: define clear interfaces in `core/` or `ml/` where specified in the backlog. * If an external binary or model is out of scope for this story, provide a deterministic stub with TODO and a feature flag. ### Important Guardrails * **Do not** implement future stories. * **Do not** introduce new dependencies without updating `pyproject.toml` and justifying them. * **Do not** change licensing, repo name, or CI workflows unless explicitly requested in this story. * If output would exceed message limits, **split the Patch and File Contents by directory** but still include all required files. --- ## \u2705 Example Instantiation #1 \u2014 S\u2011001 (Initialize repository & core metadata) > Copy, adjust, and paste the following as a real prompt to your LLM. **Story ID:** S\u2011001 **Story Title:** Initialize repository & core",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#3",
      "vector": {
        "include": 0.09611386626644254,
        "all": 0.04805693313322127,
        "required": 0.04805693313322127,
        "files": 0.04805693313322127,
        "example": 0.09611386626644254,
        "instantiation": 0.09611386626644254,
        "1": 0.09611386626644254,
        "s": 0.19222773253288508,
        "001": 0.09611386626644254,
        "initialize": 0.09611386626644254,
        "repository": 0.14417079939966382,
        "core": 0.09611386626644254,
        "metadata": 0.14417079939966382,
        "copy": 0.04805693313322127,
        "adjust": 0.04805693313322127,
        "and": 0.09611386626644254,
        "paste": 0.09611386626644254,
        "the": 0.19222773253288508,
        "following": 0.04805693313322127,
        "as": 0.09611386626644254,
        "a": 0.04805693313322127,
        "real": 0.04805693313322127,
        "prompt": 0.04805693313322127,
        "to": 0.04805693313322127,
        "your": 0.04805693313322127,
        "llm": 0.04805693313322127,
        "story": 0.28834159879932764,
        "id": 0.09611386626644254,
        "title": 0.09611386626644254,
        "text": 0.09611386626644254,
        "create": 0.04805693313322127,
        "poetry": 0.19222773253288508,
        "project": 0.09611386626644254,
        "voice": 0.09611386626644254,
        "xform": 0.09611386626644254,
        "add": 0.14417079939966382,
        "license": 0.04805693313322127,
        "apache": 0.04805693313322127,
        "2": 0.09611386626644254,
        "0": 0.14417079939966382,
        "readme": 0.14417079939966382,
        "with": 0.04805693313322127,
        "purpose": 0.09611386626644254,
        "install": 0.14417079939966382,
        "quickstart": 0.09611386626644254,
        "contributing": 0.04805693313322127,
        "editorconfig": 0.04805693313322127,
        "gitattributes": 0.04805693313322127,
        "gitignore": 0.09611386626644254,
        "pyproject": 0.09611386626644254,
        "toml": 0.09611386626644254,
        "python": 0.24028466566610635,
        "3": 0.14417079939966382,
        "11": 0.14417079939966382,
        "dependencies": 0.04805693313322127,
        "already": 0.04805693313322127,
        "completed": 0.04805693313322127,
        "none": 0.04805693313322127,
        "constraints": 0.04805693313322127,
        "use": 0.09611386626644254,
        "repo": 0.04805693313322127,
        "name": 0.09611386626644254,
        "keep": 0.09611386626644254,
        "docs": 0.04805693313322127,
        "concise": 0.04805693313322127,
        "but": 0.04805693313322127,
        "actionable": 0.04805693313322127,
        "non": 0.04805693313322127,
        "goals": 0.04805693313322127,
        "no": 0.14417079939966382,
        "code": 0.04805693313322127,
        "beyond": 0.04805693313322127,
        "scaffolding": 0.04805693313322127,
        "ci": 0.09611386626644254,
        "package": 0.04805693313322127,
        "layout": 0.04805693313322127,
        "yet": 0.09611386626644254,
        "current": 0.04805693313322127,
        "snapshot": 0.04805693313322127,
        "empty": 0.09611386626644254,
        "directory": 0.04805693313322127,
        "acceptance": 0.04805693313322127,
        "criteria": 0.04805693313322127,
        "definition": 0.04805693313322127,
        "of": 0.04805693313322127,
        "done": 0.04805693313322127,
        "succeeds": 0.04805693313322127,
        "on": 0.04805693313322127,
        "macos": 0.09611386626644254,
        "windows": 0.09611386626644254,
        "md": 0.04805693313322127,
        "includes": 0.04805693313322127,
        "instructions": 0.04805693313322127,
        "placeholder": 0.04805693313322127,
        "running": 0.04805693313322127,
        "run": 0.04805693313322127,
        "v": 0.04805693313322127,
        "prints": 0.04805693313322127,
        "x": 0.04805693313322127,
        "deliverables": 0.09611386626644254,
        "output": 0.04805693313322127,
        "contract": 0.04805693313322127,
        "then": 0.04805693313322127,
        "list": 0.04805693313322127,
        "from": 0.04805693313322127,
        "template": 0.04805693313322127,
        "implementation": 0.04805693313322127,
        "hints": 0.04805693313322127,
        "standard": 0.04805693313322127,
        "for": 0.04805693313322127,
        "version": 0.04805693313322127,
        "authors": 0.04805693313322127,
        "in": 0.04805693313322127,
        "important": 0.04805693313322127,
        "guardrails": 0.04805693313322127,
        "do": 0.04805693313322127,
        "not": 0.04805693313322127,
        "or": 0.04805693313322127,
        "tests": 0.04805693313322127,
        "succinct": 0.04805693313322127,
        "section": 0.04805693313322127,
        "headers": 0.04805693313322127,
        "placeholders": 0.04805693313322127,
        "016": 0.09611386626644254,
        "model": 0.09611386626644254,
        "registry": 0.09611386626644254,
        "provider": 0.09611386626644254,
        "detection": 0.09611386626644254,
        "implement": 0.04805693313322127,
        "ml": 0.04805693313322127,
        "runtime": 0.14417079939966382,
        "onnx_loader": 0.04805693313322127,
        "py": 0.04805693313322127,
        "that": 0.04805693313322127,
        "chooses": 0.04805693313322127,
        "best": 0.04805693313322127,
        "onnx": 0.04805693313322127,
        "ep": 0.04805693313322127,
        "at": 0.04805693313322127,
        "tensorrt": 0.04805693313322127,
        "directml": 0.04805693313322127
      },
      "text": "include all required files. --- ## \u2705 Example Instantiation #1 \u2014 S\u2011001 (Initialize repository & core metadata) > Copy, adjust, and paste the following as a real prompt to your LLM. **Story ID:** S\u2011001 **Story Title:** Initialize repository & core metadata **Story Text:** Create Poetry project `voice-xform`; add LICENSE (Apache\u20112.0), README with purpose/install/quickstart, CONTRIBUTING, .editorconfig, .gitattributes, .gitignore, pyproject.toml (Python 3.11). **Dependencies already completed:** none **Constraints:** Use Poetry; repo name `voice-xform`; Python 3.11; keep docs concise but actionable. **Non\u2011Goals:** No code beyond scaffolding; no CI; no package layout yet. **Current Repository Snapshot** *(empty directory)* ``` (Empty) ``` **Acceptance Criteria (Definition of Done)** * `poetry install` succeeds on macOS & Windows. * `README.md` includes purpose, install instructions, and placeholder quickstart. * Running `poetry run python -V` prints Python 3.11.x. **Deliverables \u2014 Output Contract** (then paste the **Deliverables** list from the template) **Implementation Hints** * Use standard `.gitignore` for Python + macOS + Windows. * Include project metadata (name, version `0.1.0`, authors) in `pyproject.toml`. **Important Guardrails** * Do not add CI or tests yet. * Keep README succinct; add section headers as placeholders. --- ## \u2705 Example Instantiation #2 \u2014 S\u2011016 (Model registry & provider detection) **Story ID:** S\u2011016 **Story Title:** Model registry & provider detection **Story Text:** Implement `ml/runtime/onnx_loader.py` that chooses the best ONNX Runtime EP at runtime (TensorRT > DirectML >",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#4",
      "vector": {
        "example": 0.045267873021259265,
        "instantiation": 0.045267873021259265,
        "2": 0.045267873021259265,
        "s": 0.22633936510629632,
        "016": 0.09053574604251853,
        "model": 0.18107149208503706,
        "registry": 0.18107149208503706,
        "provider": 0.18107149208503706,
        "detection": 0.09053574604251853,
        "story": 0.1358036190637778,
        "id": 0.045267873021259265,
        "title": 0.045267873021259265,
        "text": 0.045267873021259265,
        "implement": 0.09053574604251853,
        "ml": 0.1358036190637778,
        "runtime": 0.18107149208503706,
        "onnx_loader": 0.09053574604251853,
        "py": 0.2716072381275556,
        "that": 0.09053574604251853,
        "chooses": 0.045267873021259265,
        "the": 0.18107149208503706,
        "best": 0.045267873021259265,
        "onnx": 0.045267873021259265,
        "ep": 0.1358036190637778,
        "at": 0.09053574604251853,
        "tensorrt": 0.045267873021259265,
        "directml": 0.045267873021259265,
        "cpu": 0.09053574604251853,
        "mps": 0.045267873021259265,
        "coreml": 0.045267873021259265,
        "on": 0.22633936510629632,
        "macos": 0.1358036190637778,
        "for": 0.09053574604251853,
        "paths": 0.045267873021259265,
        "versioning": 0.045267873021259265,
        "provide": 0.045267873021259265,
        "tests": 0.1358036190637778,
        "monkeypatch": 0.09053574604251853,
        "availability": 0.1358036190637778,
        "dependencies": 0.09053574604251853,
        "already": 0.045267873021259265,
        "completed": 0.045267873021259265,
        "004": 0.045267873021259265,
        "package": 0.045267873021259265,
        "layout": 0.045267873021259265,
        "002": 0.045267873021259265,
        "tooling": 0.045267873021259265,
        "003": 0.045267873021259265,
        "ci": 0.045267873021259265,
        "constraints": 0.045267873021259265,
        "no": 0.18107149208503706,
        "gpu": 0.045267873021259265,
        "specific": 0.045267873021259265,
        "imports": 0.045267873021259265,
        "module": 0.045267873021259265,
        "top": 0.045267873021259265,
        "level": 0.045267873021259265,
        "log": 0.045267873021259265,
        "chosen": 0.045267873021259265,
        "and": 0.18107149208503706,
        "fallbacks": 0.045267873021259265,
        "non": 0.045267873021259265,
        "goals": 0.045267873021259265,
        "real": 0.045267873021259265,
        "files": 0.09053574604251853,
        "yet": 0.045267873021259265,
        "inference": 0.045267873021259265,
        "calls": 0.045267873021259265,
        "current": 0.045267873021259265,
        "repository": 0.045267873021259265,
        "snapshot": 0.045267873021259265,
        "voice": 0.09053574604251853,
        "xform": 0.09053574604251853,
        "app": 0.045267873021259265,
        "core": 0.045267873021259265,
        "version": 0.09053574604251853,
        "__init__": 0.09053574604251853,
        "empty": 0.045267873021259265,
        "placeholder": 0.045267873021259265,
        "pyproject": 0.09053574604251853,
        "toml": 0.1358036190637778,
        "key": 0.045267873021259265,
        "relevant": 0.045267873021259265,
        "parts": 0.045267873021259265,
        "tool": 0.09053574604251853,
        "poetry": 0.09053574604251853,
        "name": 0.045267873021259265,
        "0": 0.1358036190637778,
        "1": 0.09053574604251853,
        "python": 0.045267873021259265,
        "3": 0.045267873021259265,
        "11": 0.045267873021259265,
        "onnxruntime": 0.09053574604251853,
        "18": 0.045267873021259265,
        "acceptance": 0.045267873021259265,
        "criteria": 0.045267873021259265,
        "definition": 0.045267873021259265,
        "of": 0.045267873021259265,
        "done": 0.045267873021259265,
        "select_providers": 0.045267873021259265,
        "returns": 0.045267873021259265,
        "an": 0.045267873021259265,
        "ordered": 0.045267873021259265,
        "list": 0.1358036190637778,
        "based": 0.045267873021259265,
        "platform": 0.09053574604251853,
        "logs": 0.045267873021259265,
        "contain": 0.045267873021259265,
        "selected": 0.045267873021259265,
        "reason": 0.045267873021259265,
        "fallback": 0.045267873021259265,
        "simulate": 0.045267873021259265,
        "get_available_providers": 0.045267873021259265,
        "assert": 0.045267873021259265,
        "selection": 0.045267873021259265,
        "order": 0.045267873021259265,
        "across": 0.045267873021259265,
        "windows": 0.09053574604251853,
        "linux": 0.045267873021259265,
        "mypy": 0.045267873021259265,
        "ruff": 0.045267873021259265,
        "pytest": 0.045267873021259265,
        "pass": 0.045267873021259265,
        "deliverables": 0.09053574604251853,
        "output": 0.045267873021259265,
        "contract": 0.045267873021259265,
        "then": 0.045267873021259265,
        "paste": 0.045267873021259265,
        "from": 0.045267873021259265,
        "template": 0.045267873021259265,
        "implementation": 0.045267873021259265,
        "hints": 0.045267873021259265,
        "detect": 0.045267873021259265,
        "os": 0.045267873021259265,
        "with": 0.045267873021259265,
        "system": 0.045267873021259265,
        "prefer": 0.045267873021259265,
        "tensorrtexecutionprovider": 0.045267873021259265,
        "nvidia": 0.045267873021259265,
        "dmlexecutionprovider": 0.045267873021259265,
        "coremlexecutionprovider": 0.045267873021259265,
        "or": 0.045267873021259265,
        "mpsexecutionprovider": 0.045267873021259265,
        "else": 0.045267873021259265,
        "expose": 0.045267873021259265,
        "a": 0.045267873021259265,
        "helper": 0.045267873021259265,
        "create_session": 0.045267873021259265,
        "path": 0.045267873021259265,
        "str": 0.09053574604251853,
        "preferred": 0.045267873021259265,
        "none": 0.045267873021259265,
        "inferencesession": 0.045267873021259265,
        "important": 0.045267873021259265,
        "guardrails": 0.045267873021259265,
        "actual": 0.045267873021259265
      },
      "text": "--- ## \u2705 Example Instantiation #2 \u2014 S\u2011016 (Model registry & provider detection) **Story ID:** S\u2011016 **Story Title:** Model registry & provider detection **Story Text:** Implement `ml/runtime/onnx_loader.py` that chooses the best ONNX Runtime EP at runtime (TensorRT > DirectML > CPU; MPS/CoreML on macOS). Implement `ml/registry.py` for model paths/versioning. Provide tests that monkeypatch provider availability. **Dependencies already completed:** S\u2011004 (package layout), S\u2011002 (tooling), S\u2011003 (CI) **Constraints:** No GPU\u2011specific imports at module top level. Log chosen EP and fallbacks. **Non\u2011Goals:** No real model files yet; no inference calls. **Current Repository Snapshot** ``` voice-xform/ app/ core/ version.py ml/ __init__.py runtime/ __init__.py registry.py # (empty placeholder) tests/ pyproject.toml ``` **Key files:** `pyproject.toml` (relevant parts) ```toml [tool.poetry] name = \"voice-xform\" version = \"0.1.0\" [tool.poetry.dependencies] python = \"^3.11\" onnxruntime = \"^1.18.0\" ``` **Acceptance Criteria (Definition of Done)** * `onnx_loader.select_providers()` returns an ordered provider list based on platform and availability. * Logs contain the selected EP and reason for fallback. * Tests simulate availability (monkeypatch `onnxruntime.get_available_providers`) and assert selection order across Windows/macOS/Linux. * mypy/ruff/pytest pass. **Deliverables \u2014 Output Contract** (then paste the **Deliverables** list from the template) **Implementation Hints** * Detect OS with `platform.system()`. * Prefer `\"TensorrtExecutionProvider\"` on NVIDIA, `\"DmlExecutionProvider\"` on Windows, `\"CoreMLExecutionProvider\"` or `\"MPSExecutionProvider\"` on macOS, else CPU. * Expose a helper `create_session(path: str, preferred: list[str] | None) -> InferenceSession`. **Important Guardrails** * No actual",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#5",
      "vector": {
        "template": 0.08971226080325131,
        "implementation": 0.04485613040162566,
        "hints": 0.04485613040162566,
        "detect": 0.04485613040162566,
        "os": 0.04485613040162566,
        "with": 0.08971226080325131,
        "platform": 0.08971226080325131,
        "system": 0.08971226080325131,
        "prefer": 0.04485613040162566,
        "tensorrtexecutionprovider": 0.04485613040162566,
        "on": 0.17942452160650263,
        "nvidia": 0.04485613040162566,
        "dmlexecutionprovider": 0.04485613040162566,
        "windows": 0.08971226080325131,
        "coremlexecutionprovider": 0.04485613040162566,
        "or": 0.08971226080325131,
        "mpsexecutionprovider": 0.04485613040162566,
        "macos": 0.08971226080325131,
        "else": 0.04485613040162566,
        "cpu": 0.04485613040162566,
        "expose": 0.04485613040162566,
        "a": 0.26913678240975397,
        "helper": 0.04485613040162566,
        "create_session": 0.04485613040162566,
        "path": 0.04485613040162566,
        "str": 0.08971226080325131,
        "preferred": 0.04485613040162566,
        "list": 0.04485613040162566,
        "none": 0.04485613040162566,
        "inferencesession": 0.04485613040162566,
        "important": 0.04485613040162566,
        "guardrails": 0.04485613040162566,
        "no": 0.08971226080325131,
        "actual": 0.04485613040162566,
        "model": 0.04485613040162566,
        "downloads": 0.04485613040162566,
        "global": 0.04485613040162566,
        "provider": 0.04485613040162566,
        "checks": 0.08971226080325131,
        "at": 0.04485613040162566,
        "import": 0.04485613040162566,
        "time": 0.08971226080325131,
        "run": 0.17942452160650263,
        "inside": 0.04485613040162566,
        "functions": 0.04485613040162566,
        "verification": 0.04485613040162566,
        "checklist": 0.04485613040162566,
        "you": 0.13456839120487699,
        "this": 0.04485613040162566,
        "after": 0.04485613040162566,
        "each": 0.08971226080325131,
        "story": 0.26913678240975397,
        "locally": 0.04485613040162566,
        "and": 0.3139929128113796,
        "produce": 0.04485613040162566,
        "these": 0.04485613040162566,
        "commands": 0.04485613040162566,
        "in": 0.13456839120487699,
        "the": 0.4485613040162566,
        "validation": 0.04485613040162566,
        "steps": 0.04485613040162566,
        "section": 0.08971226080325131,
        "bash": 0.04485613040162566,
        "make": 0.04485613040162566,
        "all": 0.04485613040162566,
        "confirm": 0.04485613040162566,
        "tests": 0.08971226080325131,
        "pass": 0.04485613040162566,
        "coverage": 0.04485613040162566,
        "for": 0.13456839120487699,
        "new": 0.04485613040162566,
        "code": 0.04485613040162566,
        "95": 0.04485613040162566,
        "spot": 0.04485613040162566,
        "check": 0.04485613040162566,
        "specific": 0.04485613040162566,
        "issues": 0.08971226080325131,
        "if": 0.13456839120487699,
        "touches": 0.04485613040162566,
        "features": 0.04485613040162566,
        "command": 0.04485613040162566,
        "review": 0.08971226080325131,
        "do": 0.04485613040162566,
        "pr": 0.04485613040162566,
        "of": 0.04485613040162566,
        "diff": 0.04485613040162566,
        "fix": 0.04485613040162566,
        "any": 0.04485613040162566,
        "find": 0.04485613040162566,
        "tips": 0.04485613040162566,
        "working": 0.04485613040162566,
        "always": 0.04485613040162566,
        "update": 0.04485613040162566,
        "current": 0.04485613040162566,
        "repository": 0.04485613040162566,
        "snapshot": 0.04485613040162566,
        "before": 0.04485613040162566,
        "so": 0.04485613040162566,
        "llm": 0.08971226080325131,
        "is": 0.13456839120487699,
        "grounded": 0.04485613040162566,
        "reality": 0.04485613040162566,
        "keep": 0.04485613040162566,
        "acceptance": 0.08971226080325131,
        "criteria": 0.08971226080325131,
        "crisp": 0.04485613040162566,
        "testable": 0.04485613040162566,
        "output": 0.04485613040162566,
        "contract": 0.04485613040162566,
        "ensures": 0.04485613040162566,
        "get": 0.04485613040162566,
        "git": 0.04485613040162566,
        "apply": 0.04485613040162566,
        "able": 0.04485613040162566,
        "patch": 0.04485613040162566,
        "full": 0.04485613040162566,
        "file": 0.04485613040162566,
        "contents": 0.04485613040162566,
        "commit": 0.04485613040162566,
        "message": 0.04485613040162566,
        "every": 0.04485613040162566,
        "ui": 0.08971226080325131,
        "heavy": 0.04485613040162566,
        "add": 0.04485613040162566,
        "screenshots": 0.04485613040162566,
        "state": 0.04485613040162566,
        "diagrams": 0.04485613040162566,
        "to": 0.13456839120487699,
        "context": 0.04485613040162566,
        "steer": 0.04485613040162566,
        "layout": 0.04485613040162566,
        "naming": 0.04485613040162566,
        "performance": 0.04485613040162566,
        "sensitive": 0.04485613040162566,
        "put": 0.04485613040162566,
        "explicit": 0.04485613040162566,
        "budgets": 0.04485613040162566,
        "into": 0.04485613040162566,
        "ask": 0.04485613040162566,
        "print": 0.04485613040162566,
        "measured": 0.04485613040162566,
        "timings": 0.04485613040162566
      },
      "text": "template) **Implementation Hints** * Detect OS with `platform.system()`. * Prefer `\"TensorrtExecutionProvider\"` on NVIDIA, `\"DmlExecutionProvider\"` on Windows, `\"CoreMLExecutionProvider\"` or `\"MPSExecutionProvider\"` on macOS, else CPU. * Expose a helper `create_session(path: str, preferred: list[str] | None) -> InferenceSession`. **Important Guardrails** * No actual model downloads. * No global provider checks at import time; run checks inside functions. --- ## \ud83e\uddea Verification Checklist (You run this after each story) Run locally and produce these commands in the **Validation Steps** section: ```bash make all ``` * Confirm tests pass and coverage for new code \u2265 95%. * On Windows/macOS, spot\u2011check for platform\u2011specific issues if the story touches system features. * Run the command /review and do a PR review of the diff. Fix any issues you find. --- ## \ud83d\udcdd Tips for Working With the Template * Always **update the \u201cCurrent Repository Snapshot\u201d** before each story so the LLM is grounded in reality. * Keep **Acceptance Criteria** crisp and testable. * The **Output Contract** ensures you get a `git apply`\u2011able patch, full file contents, tests, and a commit message \u2014 every time. * If a story is UI\u2011heavy, add screenshots or UI state diagrams to the **Story Context** section to steer layout and naming. * If a story is performance\u2011sensitive, put explicit budgets into **Acceptance Criteria** and ask the LLM to print measured timings in",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#6",
      "vector": {
        "story": 0.3849001794597505,
        "is": 0.19245008972987526,
        "ui": 0.19245008972987526,
        "heavy": 0.09622504486493763,
        "add": 0.09622504486493763,
        "screenshots": 0.09622504486493763,
        "or": 0.09622504486493763,
        "state": 0.09622504486493763,
        "diagrams": 0.09622504486493763,
        "to": 0.28867513459481287,
        "the": 0.28867513459481287,
        "context": 0.19245008972987526,
        "section": 0.09622504486493763,
        "steer": 0.09622504486493763,
        "layout": 0.09622504486493763,
        "and": 0.28867513459481287,
        "naming": 0.09622504486493763,
        "if": 0.09622504486493763,
        "a": 0.09622504486493763,
        "performance": 0.09622504486493763,
        "sensitive": 0.09622504486493763,
        "put": 0.09622504486493763,
        "explicit": 0.09622504486493763,
        "budgets": 0.09622504486493763,
        "into": 0.09622504486493763,
        "acceptance": 0.19245008972987526,
        "criteria": 0.19245008972987526,
        "ask": 0.09622504486493763,
        "llm": 0.09622504486493763,
        "print": 0.09622504486493763,
        "measured": 0.09622504486493763,
        "timings": 0.09622504486493763,
        "in": 0.19245008972987526,
        "test": 0.09622504486493763,
        "logs": 0.09622504486493763,
        "use": 0.09622504486493763,
        "this": 0.09622504486493763,
        "template": 0.09622504486493763,
        "verbatim": 0.09622504486493763,
        "for": 0.09622504486493763,
        "s": 0.19245008972987526,
        "001": 0.09622504486493763,
        "through": 0.09622504486493763,
        "044": 0.09622504486493763,
        "by": 0.09622504486493763,
        "swapping": 0.09622504486493763,
        "relevant": 0.09622504486493763,
        "snapshot": 0.09622504486493763
      },
      "text": "story is UI\u2011heavy, add screenshots or UI state diagrams to the **Story Context** section to steer layout and naming. * If a story is performance\u2011sensitive, put explicit budgets into **Acceptance Criteria** and ask the LLM to print measured timings in test logs. --- Use this template verbatim for S\u2011001 through S\u2011044 by swapping in the relevant **Story Context**, **Snapshot**, and **Acceptance Criteria**.",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/spec.md#0",
      "vector": {
        "intelligent": 0.06696495301824251,
        "readme": 0.2008948590547275,
        "generator": 0.06696495301824251,
        "architecture": 0.13392990603648502,
        "spec": 0.06696495301824251,
        "python": 0.13392990603648502,
        "local": 0.2008948590547275,
        "llm": 0.2008948590547275,
        "1": 0.06696495301824251,
        "purpose": 0.06696495301824251,
        "scope": 0.06696495301824251,
        "build": 0.13392990603648502,
        "a": 0.3348247650912125,
        "based": 0.06696495301824251,
        "system": 0.06696495301824251,
        "that": 0.06696495301824251,
        "analyzes": 0.06696495301824251,
        "git": 0.3348247650912125,
        "repository": 0.06696495301824251,
        "structure": 0.06696495301824251,
        "code": 0.06696495301824251,
        "dependencies": 0.06696495301824251,
        "then": 0.06696495301824251,
        "generates": 0.06696495301824251,
        "and": 0.13392990603648502,
        "maintains": 0.06696495301824251,
        "high": 0.13392990603648502,
        "quality": 0.06696495301824251,
        "md": 0.06696495301824251,
        "using": 0.06696495301824251,
        "it": 0.06696495301824251,
        "initializes": 0.06696495301824251,
        "repos": 0.06696495301824251,
        "with": 0.06696495301824251,
        "no": 0.06696495301824251,
        "docs": 0.2008948590547275,
        "keeps": 0.06696495301824251,
        "up": 0.06696495301824251,
        "to": 0.06696495301824251,
        "date": 0.06696495301824251,
        "on": 0.06696495301824251,
        "commits": 0.06696495301824251,
        "prs": 0.06696495301824251,
        "supports": 0.06696495301824251,
        "multiple": 0.06696495301824251,
        "languages": 0.06696495301824251,
        "project": 0.06696495301824251,
        "types": 0.06696495301824251,
        "via": 0.06696495301824251,
        "analyzers": 0.13392990603648502,
        "non": 0.06696495301824251,
        "goals": 0.06696495301824251,
        "for": 0.06696495301824251,
        "the": 0.06696495301824251,
        "poc": 0.06696495301824251,
        "multi": 0.06696495301824251,
        "repo": 0.13392990603648502,
        "orchestration": 0.06696495301824251,
        "full": 0.06696495301824251,
        "website": 0.06696495301824251,
        "api": 0.06696495301824251,
        "reference": 0.06696495301824251,
        "extraction": 0.06696495301824251,
        "beyond": 0.06696495301824251,
        "summaries": 0.06696495301824251,
        "cloud": 0.06696495301824251,
        "llms": 0.06696495301824251,
        "2": 0.06696495301824251,
        "level": 0.06696495301824251,
        "at": 0.06696495301824251,
        "glance": 0.06696495301824251,
        "events": 0.06696495301824251,
        "event": 0.06696495301824251,
        "sources": 0.06696495301824251,
        "cli": 0.06696495301824251,
        "commands": 0.06696495301824251,
        "hooks": 0.06696495301824251,
        "webhooks": 0.06696495301824251,
        "ci": 0.06696495301824251,
        "commit": 0.13392990603648502,
        "pr": 0.13392990603648502,
        "orchestr": 0.06696495301824251,
        "async": 0.06696495301824251,
        "task": 0.06696495301824251,
        "graph": 0.13392990603648502,
        "scanner": 0.06696495301824251,
        "doc": 0.06696495301824251,
        "store": 0.06696495301824251,
        "indexer": 0.06696495301824251,
        "language": 0.06696495301824251,
        "artifacts": 0.06696495301824251,
        "fs": 0.06696495301824251,
        "deps": 0.06696495301824251,
        "cache": 0.06696495301824251,
        "versions": 0.06696495301824251,
        "knowledge": 0.06696495301824251,
        "embeddings": 0.06696495301824251,
        "prompt": 0.06696495301824251,
        "builder": 0.06696495301824251,
        "templates": 0.06696495301824251,
        "rag": 0.06696495301824251,
        "runner": 0.06696495301824251,
        "llama": 0.06696495301824251,
        "cpp": 0.06696495301824251,
        "ollama": 0.06696495301824251,
        "post": 0.06696495301824251,
        "processor": 0.06696495301824251,
        "lint": 0.06696495301824251,
        "toc": 0.06696495301824251,
        "badges": 0.06696495301824251,
        "links": 0.06696495301824251,
        "publisher": 0.06696495301824251,
        "branch": 0.06696495301824251
      },
      "text": "# Intelligent README Generator \u2014 Architecture & Spec (Python, Local LLM) ## 1) Purpose & Scope Build a Python-based system that **analyzes a Git repository** (structure, code, dependencies), then **generates and maintains a high-quality README.md** using a **local LLM**. It initializes repos with no docs and **keeps docs up to date** on commits/PRs. Supports **multiple languages/project types** via analyzers. Non-goals (for the POC): multi-repo orchestration, full website docs, API reference extraction (beyond README summaries), cloud LLMs. --- ## 2) High-Level Architecture (at a glance) ``` \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 Git Events \u2502 Event Sources \u2502 CLI commands, Git hooks, Webhooks/CI (commit/PR) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Orchestr \u2502 (Async task graph) \u2514\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Repo Scanner\u2502 \u2502 Analyzers \u2502 \u2502 Doc Store \u2502 \u2502 + Indexer \u2502 \u2502 (Language, \u2502 \u2502 (Artifacts, \u2502 \u2502 (Git, FS) \u2502 \u2502 Build, Deps) \u2502 \u2502 Cache, \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 Versions) \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 Knowledge Graph \u2502 \u2502 \u2502 \u2502 & Embeddings \u2502<\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 Prompt Builder \u2502 (Templates + RAG) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 Local LLM Runner \u2502 (llama.cpp/Ollama) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25b6\u2502 Post-Processor \u2502 (lint, ToC, badges, links) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Git Publisher \u2502 (branch/PR/commit) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 ``` --- ##",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#1",
      "vector": {
        "rag": 0.053074489243427524,
        "local": 0.053074489243427524,
        "llm": 0.053074489243427524,
        "runner": 0.053074489243427524,
        "llama": 0.053074489243427524,
        "cpp": 0.053074489243427524,
        "ollama": 0.053074489243427524,
        "post": 0.053074489243427524,
        "processor": 0.053074489243427524,
        "lint": 0.053074489243427524,
        "toc": 0.053074489243427524,
        "badges": 0.053074489243427524,
        "links": 0.053074489243427524,
        "git": 0.10614897848685505,
        "publisher": 0.053074489243427524,
        "branch": 0.053074489243427524,
        "pr": 0.053074489243427524,
        "commit": 0.053074489243427524,
        "3": 0.2653724462171376,
        "components": 0.053074489243427524,
        "responsibilities": 0.053074489243427524,
        "1": 0.053074489243427524,
        "orchestrator": 0.053074489243427524,
        "coordinates": 0.053074489243427524,
        "end": 0.10614897848685505,
        "to": 0.2122979569737101,
        "pipelines": 0.053074489243427524,
        "init": 0.053074489243427524,
        "update": 0.10614897848685505,
        "regenerate": 0.10614897848685505,
        "computes": 0.053074489243427524,
        "change": 0.10614897848685505,
        "impact": 0.053074489243427524,
        "from": 0.10614897848685505,
        "diff": 0.053074489243427524,
        "decides": 0.053074489243427524,
        "whether": 0.053074489243427524,
        "full": 0.053074489243427524,
        "readme": 0.053074489243427524,
        "or": 0.10614897848685505,
        "patch": 0.053074489243427524,
        "sections": 0.053074489243427524,
        "schedules": 0.053074489243427524,
        "tasks": 0.053074489243427524,
        "and": 0.15922346773028256,
        "caches": 0.053074489243427524,
        "intermediate": 0.053074489243427524,
        "results": 0.053074489243427524,
        "reuses": 0.053074489243427524,
        "analyzer": 0.10614897848685505,
        "outputs": 0.053074489243427524,
        "docgen": 0.2122979569737101,
        "analyzers": 0.2653724462171376,
        "cache": 0.053074489243427524,
        "json": 0.2122979569737101,
        "invalidating": 0.053074489243427524,
        "entries": 0.053074489243427524,
        "when": 0.10614897848685505,
        "file": 0.053074489243427524,
        "hashes": 0.053074489243427524,
        "signatures": 0.053074489243427524,
        "emits": 0.053074489243427524,
        "structured": 0.053074489243427524,
        "logs": 0.053074489243427524,
        "info": 0.053074489243427524,
        "by": 0.053074489243427524,
        "default": 0.053074489243427524,
        "debug": 0.053074489243427524,
        "with": 0.053074489243427524,
        "verbose": 0.053074489243427524,
        "respects": 0.053074489243427524,
        "yml": 0.053074489243427524,
        "ci": 0.053074489243427524,
        "watched_globs": 0.053074489243427524,
        "skip": 0.053074489243427524,
        "unrelated": 0.053074489243427524,
        "diffs": 0.053074489243427524,
        "substitutes": 0.053074489243427524,
        "fail": 0.053074489243427524,
        "safe": 0.053074489243427524,
        "stubs": 0.053074489243427524,
        "generation": 0.053074489243427524,
        "fails": 0.053074489243427524,
        "supports": 0.053074489243427524,
        "dry": 0.10614897848685505,
        "run": 0.15922346773028256,
        "previews": 0.053074489243427524,
        "records": 0.053074489243427524,
        "scorecards": 0.053074489243427524,
        "for": 0.053074489243427524,
        "each": 0.053074489243427524,
        "under": 0.053074489243427524,
        "2": 0.053074489243427524,
        "repo": 0.15922346773028256,
        "scanner": 0.053074489243427524,
        "indexer": 0.053074489243427524,
        "walks": 0.053074489243427524,
        "builds": 0.053074489243427524,
        "normalized": 0.053074489243427524,
        "manifest": 0.053074489243427524,
        "files": 0.10614897848685505,
        "sizes": 0.053074489243427524,
        "language": 0.10614897848685505,
        "tags": 0.053074489243427524,
        "path": 0.053074489243427524,
        "roles": 0.053074489243427524,
        "src": 0.053074489243427524,
        "test": 0.10614897848685505,
        "docs": 0.053074489243427524,
        "examples": 0.053074489243427524,
        "build": 0.15922346773028256,
        "dependency": 0.10614897848685505,
        "manifests": 0.053074489243427524,
        "e": 0.053074489243427524,
        "g": 0.053074489243427524,
        "pom": 0.053074489243427524,
        "xml": 0.053074489243427524,
        "gradle": 0.10614897848685505,
        "package": 0.053074489243427524,
        "requirements": 0.053074489243427524,
        "txt": 0.053074489243427524,
        "pyproject": 0.053074489243427524,
        "toml": 0.10614897848685505,
        "go": 0.15922346773028256,
        "mod": 0.053074489243427524,
        "cargo": 0.10614897848685505,
        "gemfile": 0.053074489243427524,
        "composer": 0.053074489243427524,
        "entrypoints": 0.10614897848685505,
        "clis": 0.053074489243427524,
        "services": 0.053074489243427524,
        "coverage": 0.053074489243427524,
        "artifacts": 0.053074489243427524,
        "if": 0.053074489243427524,
        "available": 0.053074489243427524,
        "stores": 0.053074489243427524,
        "a": 0.053074489243427524,
        "per": 0.053074489243427524,
        "index": 0.053074489243427524,
        "speed": 0.053074489243427524,
        "future": 0.053074489243427524,
        "runs": 0.053074489243427524,
        "plugin": 0.053074489243427524,
        "based": 0.053074489243427524,
        "detect": 0.053074489243427524,
        "idioms": 0.053074489243427524,
        "frameworks": 0.053074489243427524,
        "spring": 0.053074489243427524,
        "boot": 0.053074489243427524,
        "fastapi": 0.053074489243427524,
        "node": 0.053074489243427524,
        "express": 0.053074489243427524,
        "react": 0.053074489243427524,
        "next": 0.053074489243427524,
        "js": 0.053074489243427524,
        "http": 0.053074489243427524,
        "rust": 0.053074489243427524,
        "bin": 0.053074489243427524,
        "lib": 0.053074489243427524,
        "maven": 0.053074489243427524,
        "setuptools": 0.053074489243427524,
        "poetry": 0.053074489243427524,
        "npm": 0.053074489243427524,
        "pnpm": 0.053074489243427524,
        "yarn": 0.053074489243427524,
        "extract": 0.053074489243427524,
        "top": 0.053074489243427524,
        "level": 0.053074489243427524
      },
      "text": "+ RAG) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 Local LLM Runner \u2502 (llama.cpp/Ollama) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25b6\u2502 Post-Processor \u2502 (lint, ToC, badges, links) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Git Publisher \u2502 (branch/PR/commit) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 ``` --- ## 3) Components & Responsibilities ### 3.1 Orchestrator * Coordinates end-to-end pipelines (init, update, regenerate). * Computes *change impact* from Git diff; decides whether to regenerate full README or patch sections. * Schedules tasks and caches intermediate results. * Reuses analyzer outputs from `.docgen/analyzers/cache.json`, invalidating entries when file hashes or analyzer signatures change. * Emits structured logs (info by default, debug with `--verbose`), respects `.docgen.yml` `ci.watched_globs` to skip unrelated diffs, and substitutes fail-safe stubs when generation fails. * Supports dry-run previews (`docgen update --dry-run`) and records scorecards for each run under `.docgen/`. ### 3.2 Repo Scanner & Indexer * Walks repo; builds normalized manifest: * Files, sizes, language tags, path roles (src/test/docs/examples). * Build files & dependency manifests (e.g., `pom.xml`, `build.gradle`, `package.json`, `requirements.txt`, `pyproject.toml`, `go.mod`, `Cargo.toml`, `Gemfile`, `composer.json`). * Entrypoints (CLIs, services), test coverage artifacts if available. * Stores a per-repo index (JSON) to speed future runs. ### 3.3 Analyzers (Plugin-based) * **Language analyzers** (detect idioms, entrypoints, frameworks: Spring Boot, FastAPI, Node/Express, React, Next.js, Go HTTP, Rust bin/lib). * **Build analyzers** (Maven/Gradle, setuptools/Poetry, npm/pnpm/yarn, Go, Cargo). * **Dependency analyzers** (extract top-level",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#2",
      "vector": {
        "index": 0.0536828127095019,
        "json": 0.0536828127095019,
        "to": 0.1073656254190038,
        "speed": 0.0536828127095019,
        "future": 0.0536828127095019,
        "runs": 0.0536828127095019,
        "3": 0.2147312508380076,
        "analyzers": 0.3220968762570114,
        "plugin": 0.0536828127095019,
        "based": 0.0536828127095019,
        "language": 0.0536828127095019,
        "detect": 0.0536828127095019,
        "idioms": 0.0536828127095019,
        "entrypoints": 0.0536828127095019,
        "frameworks": 0.0536828127095019,
        "spring": 0.1073656254190038,
        "boot": 0.1073656254190038,
        "fastapi": 0.1073656254190038,
        "node": 0.1073656254190038,
        "express": 0.0536828127095019,
        "react": 0.0536828127095019,
        "next": 0.0536828127095019,
        "js": 0.0536828127095019,
        "go": 0.1073656254190038,
        "http": 0.0536828127095019,
        "rust": 0.0536828127095019,
        "bin": 0.0536828127095019,
        "lib": 0.0536828127095019,
        "build": 0.1073656254190038,
        "maven": 0.0536828127095019,
        "gradle": 0.0536828127095019,
        "setuptools": 0.0536828127095019,
        "poetry": 0.0536828127095019,
        "npm": 0.0536828127095019,
        "pnpm": 0.0536828127095019,
        "yarn": 0.0536828127095019,
        "cargo": 0.0536828127095019,
        "dependency": 0.0536828127095019,
        "extract": 0.0536828127095019,
        "top": 0.1073656254190038,
        "level": 0.0536828127095019,
        "libs": 0.0536828127095019,
        "notable": 0.0536828127095019,
        "transitive": 0.0536828127095019,
        "categories": 0.0536828127095019,
        "entrypoint": 0.0536828127095019,
        "infer": 0.0536828127095019,
        "run": 0.0536828127095019,
        "commands": 0.0536828127095019,
        "for": 0.1073656254190038,
        "django": 0.0536828127095019,
        "scripts": 0.1073656254190038,
        "pattern": 0.0536828127095019,
        "monorepo": 0.0536828127095019,
        "layout": 0.0536828127095019,
        "ci": 0.0536828127095019,
        "cd": 0.0536828127095019,
        "containerization": 0.0536828127095019,
        "k8s": 0.0536828127095019,
        "heuristics": 0.0536828127095019,
        "structure": 0.0536828127095019,
        "analyzer": 0.1610484381285057,
        "module": 0.0536828127095019,
        "topology": 0.0536828127095019,
        "detected": 0.0536828127095019,
        "entities": 0.1073656254190038,
        "dtos": 0.0536828127095019,
        "api": 0.0536828127095019,
        "endpoint": 0.0536828127095019,
        "sequences": 0.0536828127095019,
        "service": 0.0536828127095019,
        "interactions": 0.0536828127095019,
        "tree": 0.0536828127095019,
        "sitter": 0.0536828127095019,
        "symbol": 0.0536828127095019,
        "python": 0.0536828127095019,
        "java": 0.0536828127095019,
        "typescript": 0.0536828127095019,
        "extracts": 0.0536828127095019,
        "functions": 0.0536828127095019,
        "classes": 0.0536828127095019,
        "when": 0.0536828127095019,
        "parsers": 0.0536828127095019,
        "available": 0.0536828127095019,
        "and": 0.2147312508380076,
        "degrades": 0.0536828127095019,
        "gracefully": 0.0536828127095019,
        "otherwise": 0.0536828127095019,
        "each": 0.0536828127095019,
        "returns": 0.0536828127095019,
        "signals": 0.1073656254190038,
        "key": 0.1073656254190038,
        "facts": 0.0536828127095019,
        "the": 0.1073656254190038,
        "knowledge": 0.1073656254190038,
        "graph": 0.1610484381285057,
        "4": 0.0536828127095019,
        "embeddings": 0.1073656254190038,
        "rag": 0.0536828127095019,
        "of": 0.1073656254190038,
        "repo": 0.1073656254190038,
        "modules": 0.0536828127095019,
        "packages": 0.0536828127095019,
        "services": 0.0536828127095019,
        "configs": 0.0536828127095019,
        "tests": 0.0536828127095019,
        "docs": 0.1073656254190038,
        "lightweight": 0.0536828127095019,
        "embedding": 0.0536828127095019,
        "store": 0.0536828127095019,
        "e": 0.0536828127095019,
        "g": 0.0536828127095019,
        "faiss": 0.0536828127095019,
        "in": 0.0536828127095019,
        "memory": 0.0536828127095019,
        "chunks": 0.0536828127095019,
        "code": 0.0536828127095019,
        "comments": 0.0536828127095019,
        "readme": 0.1073656254190038,
        "fragments": 0.0536828127095019,
        "changelog": 0.0536828127095019,
        "issues": 0.0536828127095019,
        "optional": 0.0536828127095019,
        "commit": 0.0536828127095019,
        "messages": 0.1073656254190038,
        "provides": 0.0536828127095019,
        "context": 0.1073656254190038,
        "retrieval": 0.0536828127095019,
        "prompt": 0.1073656254190038,
        "building": 0.0536828127095019,
        "k": 0.0536828127095019,
        "by": 0.0536828127095019,
        "section": 0.1610484381285057,
        "persists": 0.0536828127095019,
        "under": 0.0536828127095019,
        "docgen": 0.0536828127095019,
        "refreshing": 0.0536828127095019,
        "only": 0.0536828127095019,
        "files": 0.0536828127095019,
        "whose": 0.0536828127095019,
        "hashes": 0.0536828127095019,
        "changed": 0.0536828127095019,
        "5": 0.0536828127095019,
        "builder": 0.0536828127095019,
        "aware": 0.0536828127095019,
        "jinja2": 0.0536828127095019,
        "templates": 0.0536828127095019,
        "with": 0.1073656254190038,
        "guardrails": 0.0536828127095019,
        "project": 0.0536828127095019,
        "intro": 0.0536828127095019,
        "features": 0.0536828127095019,
        "architecture": 0.0536828127095019,
        "overview": 0.0536828127095019,
        "quick": 0.0536828127095019,
        "start": 0.0536828127095019,
        "configuration": 0.0536828127095019,
        "test": 0.0536828127095019,
        "deployment": 0.0536828127095019,
        "troubleshooting": 0.0536828127095019,
        "faq": 0.0536828127095019,
        "roadmap": 0.0536828127095019,
        "contribution": 0.0536828127095019,
        "license": 0.0536828127095019,
        "badges": 0.0536828127095019,
        "dynamically": 0.0536828127095019,
        "injects": 0.0536828127095019,
        "retrieved": 0.0536828127095019,
        "per": 0.0536828127095019,
        "produces": 0.0536828127095019,
        "llm": 0.0536828127095019,
        "ready": 0.0536828127095019,
        "structured": 0.0536828127095019,
        "prompts": 0.0536828127095019,
        "system": 0.0536828127095019,
        "user": 0.0536828127095019,
        "token": 0.0536828127095019,
        "budgets": 0.0536828127095019,
        "honours": 0.0536828127095019,
        "style": 0.0536828127095019,
        "presets": 0.0536828127095019,
        "concise": 0.0536828127095019,
        "trims": 0.0536828127095019,
        "list": 0.0536828127095019,
        "heavy": 0.0536828127095019,
        "sections": 0.0536828127095019
      },
      "text": "index (JSON) to speed future runs. ### 3.3 Analyzers (Plugin-based) * **Language analyzers** (detect idioms, entrypoints, frameworks: Spring Boot, FastAPI, Node/Express, React, Next.js, Go HTTP, Rust bin/lib). * **Build analyzers** (Maven/Gradle, setuptools/Poetry, npm/pnpm/yarn, Go, Cargo). * **Dependency analyzers** (extract top-level libs & notable transitive categories). * **Entrypoint analyzers** (infer run commands for FastAPI, Django, Spring Boot, Node scripts). * **Pattern analyzers** (monorepo layout, CI/CD, containerization/K8s heuristics). * **Structure analyzer** (module topology, detected entities/DTOs, API endpoint sequences, service interactions). * **Tree-sitter symbol analyzer** (Python/Java/TypeScript) extracts functions/classes when parsers available and degrades gracefully otherwise. * Each analyzer returns **Signals** (key facts) to the knowledge graph. ### 3.4 Knowledge Graph & Embeddings (RAG) * Graph of Repo entities: modules, packages, services, scripts, configs, tests, docs. * Lightweight embedding store (e.g., `faiss`/in-memory) of **chunks**: code comments, README fragments, `docs/`, `CHANGELOG`, issues (optional), commit messages. * Provides **context retrieval** for prompt building (top-k by section) and persists embeddings under `.docgen/`, refreshing only the files whose hashes changed. ### 3.5 Prompt Builder * **Section-aware** Jinja2 templates with **guardrails**: * Project intro, key features, architecture overview, quick start, configuration, build/test, deployment, troubleshooting, FAQ, roadmap, contribution, license, badges. * Dynamically injects repo signals and retrieved context per section. * Produces **LLM-ready structured prompts** (system + user messages) with token budgets and honours `readme.style` presets (`concise` trims list-heavy sections,",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#3",
      "vector": {
        "start": 0.09690031662230184,
        "configuration": 0.09690031662230184,
        "build": 0.04845015831115092,
        "test": 0.04845015831115092,
        "deployment": 0.04845015831115092,
        "troubleshooting": 0.04845015831115092,
        "faq": 0.04845015831115092,
        "roadmap": 0.04845015831115092,
        "contribution": 0.04845015831115092,
        "license": 0.04845015831115092,
        "badges": 0.09690031662230184,
        "dynamically": 0.04845015831115092,
        "injects": 0.09690031662230184,
        "repo": 0.04845015831115092,
        "signals": 0.04845015831115092,
        "and": 0.4360514248003583,
        "retrieved": 0.04845015831115092,
        "context": 0.09690031662230184,
        "per": 0.04845015831115092,
        "section": 0.14535047493345277,
        "produces": 0.04845015831115092,
        "llm": 0.09690031662230184,
        "ready": 0.04845015831115092,
        "structured": 0.09690031662230184,
        "prompts": 0.04845015831115092,
        "system": 0.04845015831115092,
        "user": 0.04845015831115092,
        "messages": 0.04845015831115092,
        "with": 0.14535047493345277,
        "token": 0.04845015831115092,
        "budgets": 0.04845015831115092,
        "honours": 0.04845015831115092,
        "readme": 0.14535047493345277,
        "style": 0.14535047493345277,
        "presets": 0.04845015831115092,
        "concise": 0.04845015831115092,
        "trims": 0.04845015831115092,
        "list": 0.04845015831115092,
        "heavy": 0.04845015831115092,
        "sections": 0.14535047493345277,
        "comprehensive": 0.04845015831115092,
        "keeps": 0.04845015831115092,
        "full": 0.04845015831115092,
        "detail": 0.04845015831115092,
        "detected": 0.09690031662230184,
        "entrypoints": 0.04845015831115092,
        "infrastructure": 0.04845015831115092,
        "patterns": 0.04845015831115092,
        "into": 0.04845015831115092,
        "quick": 0.04845015831115092,
        "guidance": 0.04845015831115092,
        "e": 0.04845015831115092,
        "g": 0.04845015831115092,
        "uvicorn": 0.04845015831115092,
        "docker": 0.14535047493345277,
        "compose": 0.04845015831115092,
        "up": 0.04845015831115092,
        "generates": 0.04845015831115092,
        "mermaid": 0.04845015831115092,
        "sequence": 0.04845015831115092,
        "diagrams": 0.04845015831115092,
        "highlighting": 0.04845015831115092,
        "request": 0.04845015831115092,
        "flow": 0.04845015831115092,
        "across": 0.04845015831115092,
        "services": 0.04845015831115092,
        "when": 0.09690031662230184,
        "api": 0.09690031662230184,
        "endpoints": 0.04845015831115092,
        "are": 0.04845015831115092,
        "3": 0.09690031662230184,
        "6": 0.04845015831115092,
        "local": 0.14535047493345277,
        "runner": 0.14535047493345277,
        "pluggable": 0.04845015831115092,
        "runtime": 0.04845015831115092,
        "that": 0.04845015831115092,
        "prefers": 0.04845015831115092,
        "the": 0.04845015831115092,
        "model": 0.14535047493345277,
        "http": 0.14535047493345277,
        "endpoint": 0.04845015831115092,
        "host": 0.04845015831115092,
        "localhost": 0.04845015831115092,
        "12434": 0.04845015831115092,
        "engines": 0.09690031662230184,
        "v1": 0.09690031662230184,
        "container": 0.04845015831115092,
        "internal": 0.14535047493345277,
        "environment": 0.04845015831115092,
        "overrides": 0.04845015831115092,
        "an": 0.04845015831115092,
        "ollama": 0.04845015831115092,
        "cli": 0.09690031662230184,
        "fallback": 0.04845015831115092,
        "defaults": 0.04845015831115092,
        "to": 0.14535047493345277,
        "ai": 0.04845015831115092,
        "smollm2": 0.04845015831115092,
        "360m": 0.04845015831115092,
        "q4_k_m": 0.04845015831115092,
        "but": 0.04845015831115092,
        "respects": 0.04845015831115092,
        "docgen": 0.09690031662230184,
        "yml": 0.04845015831115092,
        "openai": 0.04845015831115092,
        "compatible": 0.04845015831115092,
        "env": 0.04845015831115092,
        "vars": 0.04845015831115092,
        "for": 0.14535047493345277,
        "alternate": 0.04845015831115092,
        "weights": 0.04845015831115092,
        "keys": 0.04845015831115092,
        "supports": 0.04845015831115092,
        "function": 0.04845015831115092,
        "calling": 0.04845015831115092,
        "outputs": 0.04845015831115092,
        "available": 0.04845015831115092,
        "streaming": 0.04845015831115092,
        "decode": 0.04845015831115092,
        "stop": 0.04845015831115092,
        "tokens": 0.04845015831115092,
        "by": 0.09690031662230184,
        "generation": 0.04845015831115092,
        "stay": 0.09690031662230184,
        "within": 0.04845015831115092,
        "limits": 0.04845015831115092,
        "validates": 0.09690031662230184,
        "ensure": 0.04845015831115092,
        "runners": 0.04845015831115092,
        "loopback": 0.04845015831115092,
        "hosts": 0.04845015831115092,
        "only": 0.09690031662230184,
        "includes": 0.04845015831115092,
        "a": 0.09690031662230184,
        "llamacpprunner": 0.04845015831115092,
        "adapter": 0.04845015831115092,
        "llama": 0.04845015831115092,
        "cpp": 0.04845015831115092,
        "binaries": 0.04845015831115092,
        "enforcing": 0.04845015831115092,
        "filesystem": 0.04845015831115092,
        "backed": 0.04845015831115092,
        "paths": 0.04845015831115092,
        "execution": 0.04845015831115092,
        "7": 0.04845015831115092,
        "post": 0.04845015831115092,
        "processor": 0.04845015831115092,
        "lints": 0.04845015831115092,
        "markdown": 0.04845015831115092,
        "builds": 0.04845015831115092,
        "toc": 0.04845015831115092,
        "adds": 0.04845015831115092,
        "shields": 0.04845015831115092,
        "normalizes": 0.04845015831115092,
        "heading": 0.04845015831115092,
        "hierarchy": 0.04845015831115092,
        "enforces": 0.04845015831115092,
        "guide": 0.04845015831115092,
        "contract": 0.04845015831115092,
        "required": 0.04845015831115092,
        "links": 0.04845015831115092,
        "relative": 0.04845015831115092,
        "absolute": 0.04845015831115092,
        "code": 0.04845015831115092,
        "block": 0.04845015831115092,
        "languages": 0.04845015831115092,
        "line": 0.04845015831115092,
        "length": 0.04845015831115092,
        "computes": 0.04845015831115092,
        "diff": 0.04845015831115092,
        "aware": 0.04845015831115092,
        "updates": 0.04845015831115092,
        "modifies": 0.04845015831115092,
        "impacted": 0.04845015831115092,
        "changes": 0.04845015831115092,
        "persists": 0.04845015831115092,
        "scorecard": 0.09690031662230184,
        "json": 0.04845015831115092
      },
      "text": "start, configuration, build/test, deployment, troubleshooting, FAQ, roadmap, contribution, license, badges. * Dynamically injects repo signals and retrieved context per section. * Produces **LLM-ready structured prompts** (system + user messages) with token budgets and honours `readme.style` presets (`concise` trims list-heavy sections, `comprehensive` keeps full detail). * Injects detected entrypoints and infrastructure patterns into Quick Start guidance (e.g., `uvicorn ...`, `docker compose up`). * Generates Mermaid sequence diagrams highlighting request flow across services when API endpoints are detected. ### 3.6 Local LLM Runner * Pluggable runtime that prefers the Docker Model Runner HTTP endpoint (host `http://localhost:12434/engines/v1`, container `http://model-runner.docker.internal/engines/v1`) with environment overrides and an `ollama` CLI fallback. * Defaults to `ai/smollm2:360M-Q4_K_M` but respects `.docgen.yml` and OpenAI-compatible env vars for alternate weights and API keys. * Supports **function calling style** for structured outputs when available. * Streaming decode with stop tokens; **section-by-section** generation to stay within context limits. * Validates configuration to ensure runners stay local (loopback/`*.internal` hosts only). * Includes a `LlamaCppRunner` adapter for local `llama.cpp` binaries, enforcing filesystem-backed model paths and CLI execution. ### 3.7 Post-Processor * Lints Markdown, builds ToC, adds shields/badges, normalizes heading hierarchy. * Enforces internal style guide and **README contract** (required sections). * Validates links (relative/absolute), code block languages, and line length. * Computes **diff-aware updates**: only modifies sections impacted by changes. * Persists a README scorecard (`.docgen/scorecard.json`)",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#4",
      "vector": {
        "shields": 0.04339630366027462,
        "badges": 0.08679260732054923,
        "normalizes": 0.08679260732054923,
        "heading": 0.04339630366027462,
        "hierarchy": 0.04339630366027462,
        "enforces": 0.04339630366027462,
        "internal": 0.04339630366027462,
        "style": 0.04339630366027462,
        "guide": 0.04339630366027462,
        "and": 0.6075482512438447,
        "readme": 0.13018891098082386,
        "contract": 0.04339630366027462,
        "required": 0.04339630366027462,
        "sections": 0.17358521464109847,
        "validates": 0.04339630366027462,
        "links": 0.04339630366027462,
        "relative": 0.04339630366027462,
        "absolute": 0.04339630366027462,
        "code": 0.04339630366027462,
        "block": 0.04339630366027462,
        "languages": 0.04339630366027462,
        "line": 0.04339630366027462,
        "length": 0.04339630366027462,
        "computes": 0.04339630366027462,
        "diff": 0.04339630366027462,
        "aware": 0.04339630366027462,
        "updates": 0.04339630366027462,
        "only": 0.04339630366027462,
        "modifies": 0.04339630366027462,
        "impacted": 0.04339630366027462,
        "by": 0.04339630366027462,
        "changes": 0.08679260732054923,
        "persists": 0.04339630366027462,
        "a": 0.13018891098082386,
        "scorecard": 0.08679260732054923,
        "docgen": 0.2169815183013731,
        "json": 0.17358521464109847,
        "capturing": 0.08679260732054923,
        "coverage": 0.08679260732054923,
        "quick": 0.04339630366027462,
        "start": 0.04339630366027462,
        "health": 0.04339630366027462,
        "link": 0.08679260732054923,
        "results": 0.04339630366027462,
        "adds": 0.04339630366027462,
        "build": 0.04339630366027462,
        "license": 0.04339630366027462,
        "with": 0.13018891098082386,
        "safe": 0.08679260732054923,
        "defaults": 0.04339630366027462,
        "reports": 0.04339630366027462,
        "warnings": 0.04339630366027462,
        "during": 0.04339630366027462,
        "post": 0.04339630366027462,
        "processing": 0.04339630366027462,
        "3": 0.13018891098082386,
        "8": 0.04339630366027462,
        "validation": 0.17358521464109847,
        "layer": 0.04339630366027462,
        "runs": 0.08679260732054923,
        "after": 0.04339630366027462,
        "section": 0.08679260732054923,
        "rendering": 0.04339630366027462,
        "before": 0.04339630366027462,
        "linting": 0.04339630366027462,
        "publishing": 0.04339630366027462,
        "to": 0.04339630366027462,
        "ensure": 0.04339630366027462,
        "generated": 0.08679260732054923,
        "claims": 0.04339630366027462,
        "are": 0.04339630366027462,
        "grounded": 0.04339630366027462,
        "analyzer": 0.08679260732054923,
        "signals": 0.04339630366027462,
        "metadata": 0.04339630366027462,
        "retrieved": 0.04339630366027462,
        "context": 0.04339630366027462,
        "into": 0.04339630366027462,
        "an": 0.04339630366027462,
        "evidence": 0.13018891098082386,
        "index": 0.04339630366027462,
        "used": 0.04339630366027462,
        "for": 0.13018891098082386,
        "token": 0.04339630366027462,
        "overlap": 0.04339630366027462,
        "checks": 0.04339630366027462,
        "default": 0.04339630366027462,
        "nohallucinationvalidator": 0.04339630366027462,
        "rejects": 0.04339630366027462,
        "sentences": 0.04339630366027462,
        "lacking": 0.04339630366027462,
        "supporting": 0.04339630366027462,
        "replaces": 0.04339630366027462,
        "offending": 0.04339630366027462,
        "fail": 0.04339630366027462,
        "stubs": 0.04339630366027462,
        "raises": 0.04339630366027462,
        "actionable": 0.04339630366027462,
        "errors": 0.04339630366027462,
        "writes": 0.04339630366027462,
        "validator": 0.04339630366027462,
        "status": 0.04339630366027462,
        "issues": 0.04339630366027462,
        "summaries": 0.04339630366027462,
        "auditability": 0.04339630366027462,
        "respects": 0.04339630366027462,
        "yml": 0.04339630366027462,
        "no_hallucination": 0.04339630366027462,
        "toggle": 0.04339630366027462,
        "docgen_validation_no_hallucination": 0.04339630366027462,
        "environment": 0.04339630366027462,
        "override": 0.04339630366027462,
        "cli": 0.04339630366027462,
        "skip": 0.04339630366027462,
        "flag": 0.04339630366027462,
        "one": 0.04339630366027462,
        "off": 0.04339630366027462,
        "bypasses": 0.04339630366027462,
        "9": 0.04339630366027462,
        "doc": 0.04339630366027462,
        "store": 0.04339630366027462,
        "artifacts": 0.08679260732054923,
        "versions": 0.04339630366027462,
        "keeps": 0.04339630366027462,
        "drafts": 0.04339630366027462,
        "logs": 0.04339630366027462,
        "prompts": 0.04339630366027462,
        "inputs": 0.04339630366027462,
        "outputs": 0.04339630366027462,
        "diffs": 0.04339630366027462,
        "under": 0.04339630366027462,
        "per": 0.04339630366027462,
        "repo": 0.04339630366027462,
        "supports": 0.04339630366027462,
        "rollback": 0.04339630366027462,
        "regression": 0.04339630366027462,
        "testing": 0.04339630366027462,
        "via": 0.04339630366027462,
        "golden": 0.04339630366027462,
        "readmes": 0.04339630366027462,
        "stores": 0.04339630366027462,
        "embedding": 0.04339630366027462,
        "cache": 0.08679260732054923,
        "embeddings": 0.04339630366027462,
        "analyzers": 0.04339630366027462,
        "schema": 0.04339630366027462,
        "versioning": 0.04339630366027462,
        "so": 0.04339630366027462,
        "subsequent": 0.04339630366027462,
        "reuse": 0.04339630366027462,
        "work": 0.04339630366027462,
        "when": 0.04339630366027462,
        "file": 0.04339630366027462,
        "hashes": 0.04339630366027462,
        "remain": 0.04339630366027462,
        "unchanged": 0.04339630366027462,
        "10": 0.04339630366027462,
        "git": 0.04339630366027462,
        "publisher": 0.04339630366027462,
        "creates": 0.04339630366027462,
        "branch": 0.04339630366027462,
        "e": 0.04339630366027462,
        "g": 0.04339630366027462,
        "update": 0.04339630366027462,
        "yyyymmdd": 0.04339630366027462,
        "pr": 0.08679260732054923,
        "body": 0.04339630366027462,
        "explains": 0.04339630366027462,
        "detected": 0.04339630366027462,
        "what": 0.04339630366027462,
        "were": 0.04339630366027462,
        "updated": 0.04339630366027462,
        "can": 0.04339630366027462,
        "commit": 0.04339630366027462
      },
      "text": "shields/badges, normalizes heading hierarchy. * Enforces internal style guide and **README contract** (required sections). * Validates links (relative/absolute), code block languages, and line length. * Computes **diff-aware updates**: only modifies sections impacted by changes. * Persists a README scorecard (`.docgen/scorecard.json`) capturing coverage, quick start health, and link results. * Adds build/coverage/license badges with safe defaults and reports link warnings during post-processing. ### 3.8 Validation Layer * Runs after section rendering and before linting/publishing to ensure generated claims are grounded. * Normalizes analyzer signals, section metadata, and retrieved context into an **Evidence Index** used for token overlap checks. * Default `NoHallucinationValidator` rejects sentences lacking supporting evidence, replaces offending sections with fail-safe stubs, and raises actionable errors. * Writes `.docgen/validation.json` capturing validator status, issues, and evidence summaries for auditability. * Respects `.docgen.yml` `validation.no_hallucination` toggle, `DOCGEN_VALIDATION_NO_HALLUCINATION` environment override, and CLI `--skip-validation` flag for one-off bypasses. ### 3.9 Doc Store (Artifacts & Versions) * Keeps generated drafts, logs, prompts, inputs/outputs, and diffs under `.docgen/` per repo. * Supports rollback and regression testing via \u201cgolden\u201d READMEs. * Stores embedding cache (`embeddings.json`) and analyzer artifacts (`analyzers/cache.json`) with schema versioning so subsequent runs reuse work when file hashes remain unchanged. ### 3.10 Git Publisher * Creates a branch (e.g., `docgen/readme-update-YYYYMMDD`) and a PR. * PR body explains detected changes and what sections were updated. * Can commit",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#5",
      "vector": {
        "with": 0.0746913686973271,
        "schema": 0.03734568434866355,
        "versioning": 0.03734568434866355,
        "so": 0.03734568434866355,
        "subsequent": 0.03734568434866355,
        "runs": 0.03734568434866355,
        "reuse": 0.03734568434866355,
        "work": 0.03734568434866355,
        "when": 0.0746913686973271,
        "file": 0.03734568434866355,
        "hashes": 0.03734568434866355,
        "remain": 0.03734568434866355,
        "unchanged": 0.03734568434866355,
        "3": 0.0746913686973271,
        "10": 0.03734568434866355,
        "git": 0.03734568434866355,
        "publisher": 0.03734568434866355,
        "creates": 0.03734568434866355,
        "a": 0.0746913686973271,
        "branch": 0.03734568434866355,
        "e": 0.0746913686973271,
        "g": 0.0746913686973271,
        "docgen": 0.0746913686973271,
        "readme": 0.03734568434866355,
        "update": 0.0746913686973271,
        "yyyymmdd": 0.03734568434866355,
        "and": 0.18672842174331777,
        "pr": 0.0746913686973271,
        "body": 0.03734568434866355,
        "explains": 0.03734568434866355,
        "detected": 0.03734568434866355,
        "changes": 0.03734568434866355,
        "what": 0.03734568434866355,
        "sections": 0.03734568434866355,
        "were": 0.03734568434866355,
        "updated": 0.03734568434866355,
        "can": 0.03734568434866355,
        "commit": 0.03734568434866355,
        "directly": 0.03734568434866355,
        "configurable": 0.03734568434866355,
        "on": 0.03734568434866355,
        "init": 0.0746913686973271,
        "for": 0.1493827373946542,
        "empty": 0.03734568434866355,
        "repos": 0.03734568434866355,
        "applies": 0.03734568434866355,
        "labels": 0.03734568434866355,
        "docs": 0.0746913686973271,
        "auto": 0.03734568434866355,
        "updates": 0.03734568434866355,
        "existing": 0.03734568434866355,
        "prs": 0.03734568434866355,
        "configured": 0.03734568434866355,
        "11": 0.03734568434866355,
        "service": 0.1493827373946542,
        "mode": 0.03734568434866355,
        "fastapi": 0.0746913686973271,
        "app": 0.03734568434866355,
        "exposes": 0.03734568434866355,
        "post": 0.03734568434866355,
        "endpoints": 0.03734568434866355,
        "plus": 0.03734568434866355,
        "health": 0.03734568434866355,
        "readiness": 0.03734568434866355,
        "reuses": 0.03734568434866355,
        "the": 0.11203705304599065,
        "orchestrator": 0.03734568434866355,
        "dependency": 0.03734568434866355,
        "executes": 0.03734568434866355,
        "operations": 0.03734568434866355,
        "in": 0.03734568434866355,
        "thread": 0.03734568434866355,
        "pools": 0.03734568434866355,
        "to": 0.03734568434866355,
        "keep": 0.03734568434866355,
        "event": 0.03734568434866355,
        "loop": 0.03734568434866355,
        "responsive": 0.03734568434866355,
        "cli": 0.0746913686973271,
        "host": 0.03734568434866355,
        "0": 0.1493827373946542,
        "port": 0.03734568434866355,
        "8000": 0.03734568434866355,
        "boots": 0.03734568434866355,
        "authentication": 0.03734568434866355,
        "hooks": 0.03734568434866355,
        "ready": 0.03734568434866355,
        "future": 0.03734568434866355,
        "hardening": 0.03734568434866355,
        "error": 0.03734568434866355,
        "handlers": 0.03734568434866355,
        "surface": 0.03734568434866355,
        "actionable": 0.03734568434866355,
        "json": 0.03734568434866355,
        "detail": 0.0746913686973271,
        "field": 0.03734568434866355,
        "common": 0.03734568434866355,
        "runtime": 0.03734568434866355,
        "issues": 0.03734568434866355,
        "4": 0.03734568434866355,
        "data": 0.03734568434866355,
        "model": 0.03734568434866355,
        "python": 0.0746913686973271,
        "pydantic": 0.03734568434866355,
        "dataclasses": 0.0746913686973271,
        "from": 0.0746913686973271,
        "import": 0.0746913686973271,
        "dataclass": 0.2614197904406449,
        "typing": 0.03734568434866355,
        "list": 0.1493827373946542,
        "dict": 0.1493827373946542,
        "optional": 0.0746913686973271,
        "class": 0.2240741060919813,
        "filemeta": 0.0746913686973271,
        "path": 0.03734568434866355,
        "str": 0.6348766339272804,
        "size": 0.03734568434866355,
        "int": 0.03734568434866355,
        "language": 0.03734568434866355,
        "role": 0.03734568434866355,
        "src": 0.03734568434866355,
        "test": 0.0746913686973271,
        "config": 0.03734568434866355,
        "build": 0.03734568434866355,
        "script": 0.03734568434866355,
        "infra": 0.03734568434866355,
        "other": 0.03734568434866355,
        "hash": 0.03734568434866355,
        "repomanifest": 0.0746913686973271,
        "root": 0.03734568434866355,
        "files": 0.03734568434866355,
        "detectors": 0.03734568434866355,
        "build_system": 0.03734568434866355,
        "maven": 0.03734568434866355,
        "framework": 0.0746913686973271,
        "spring": 0.03734568434866355,
        "boot": 0.03734568434866355,
        "dependency_files": 0.03734568434866355,
        "pom": 0.03734568434866355,
        "xml": 0.03734568434866355,
        "requirements": 0.03734568434866355,
        "txt": 0.03734568434866355,
        "signal": 0.0746913686973271,
        "kind": 0.03734568434866355,
        "db": 0.03734568434866355,
        "queue": 0.03734568434866355,
        "dep": 0.03734568434866355,
        "entrypoint": 0.03734568434866355,
        "name": 0.03734568434866355,
        "analysisresult": 0.03734568434866355,
        "manifest": 0.03734568434866355,
        "signals": 0.03734568434866355,
        "embedding_index_path": 0.03734568434866355,
        "sectionspec": 0.03734568434866355,
        "key": 0.03734568434866355,
        "intro": 0.03734568434866355,
        "features": 0.03734568434866355,
        "arch": 0.03734568434866355,
        "quickstart": 0.03734568434866355,
        "required": 0.03734568434866355,
        "bool": 0.03734568434866355,
        "sources": 0.03734568434866355,
        "preferred": 0.03734568434866355,
        "retrieval": 0.03734568434866355,
        "tags": 0.03734568434866355,
        "template_name": 0.03734568434866355,
        "readmedraft": 0.03734568434866355
      },
      "text": "with schema versioning so subsequent runs reuse work when file hashes remain unchanged. ### 3.10 Git Publisher * Creates a branch (e.g., `docgen/readme-update-YYYYMMDD`) and a PR. * PR body explains detected changes and what sections were updated. * Can commit directly (configurable) on init for empty repos. * Applies labels (e.g., `docs:auto`) and updates existing PRs when configured. ### 3.11 Service Mode (FastAPI) * FastAPI app exposes `/init` and `/update` POST endpoints plus `/health` for readiness. * Reuses the orchestrator dependency and executes operations in thread pools to keep the event loop responsive. * CLI `docgen service --host 0.0.0.0 --port 8000` boots the service with authentication hooks ready for future hardening. * Error handlers surface actionable JSON (`detail` field) for common runtime issues. --- ## 4) Data Model (Python `pydantic`/`dataclasses`) ```python from dataclasses import dataclass from typing import List, Dict, Optional @dataclass class FileMeta: path: str size: int language: Optional[str] role: str # src|test|docs|config|build|script|infra|other hash: str @dataclass class RepoManifest: root: str files: List[FileMeta] detectors: Dict[str, str] # {\"build_system\": \"maven\", \"framework\":\"spring-boot\", ...} dependency_files: Dict[str, str] # {\"pom.xml\": \"...\", \"requirements.txt\": \"...\"} @dataclass class Signal: kind: str # \"framework\",\"service\",\"cli\",\"db\",\"queue\",\"dep\",\"entrypoint\",\"test\" name: str detail: Dict[str, str] @dataclass class AnalysisResult: manifest: RepoManifest signals: List[Signal] embedding_index_path: str @dataclass class SectionSpec: key: str # \"intro\",\"features\",\"arch\",\"quickstart\",... required: bool sources: List[str] # preferred retrieval tags template_name: str @dataclass class ReadmeDraft:",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#6",
      "vector": {
        "class": 0.22011272658140596,
        "signal": 0.08804509063256238,
        "kind": 0.04402254531628119,
        "str": 0.6603381797442178,
        "framework": 0.04402254531628119,
        "service": 0.04402254531628119,
        "cli": 0.08804509063256238,
        "db": 0.04402254531628119,
        "queue": 0.04402254531628119,
        "dep": 0.04402254531628119,
        "entrypoint": 0.04402254531628119,
        "test": 0.04402254531628119,
        "name": 0.04402254531628119,
        "detail": 0.04402254531628119,
        "dict": 0.13206763594884358,
        "dataclass": 0.17609018126512477,
        "analysisresult": 0.04402254531628119,
        "manifest": 0.04402254531628119,
        "repomanifest": 0.04402254531628119,
        "signals": 0.04402254531628119,
        "list": 0.13206763594884358,
        "embedding_index_path": 0.04402254531628119,
        "sectionspec": 0.04402254531628119,
        "key": 0.04402254531628119,
        "intro": 0.08804509063256238,
        "features": 0.08804509063256238,
        "arch": 0.04402254531628119,
        "quickstart": 0.08804509063256238,
        "required": 0.04402254531628119,
        "bool": 0.04402254531628119,
        "sources": 0.04402254531628119,
        "preferred": 0.04402254531628119,
        "retrieval": 0.04402254531628119,
        "tags": 0.04402254531628119,
        "template_name": 0.04402254531628119,
        "readmedraft": 0.04402254531628119,
        "sections": 0.04402254531628119,
        "full_markdown": 0.04402254531628119,
        "updateplan": 0.04402254531628119,
        "strategy": 0.04402254531628119,
        "full": 0.04402254531628119,
        "patch": 0.04402254531628119,
        "changed_sections": 0.04402254531628119,
        "reasons": 0.04402254531628119,
        "section": 0.04402254531628119,
        "why": 0.04402254531628119,
        "5": 0.04402254531628119,
        "configuration": 0.08804509063256238,
        "docgen": 0.17609018126512477,
        "yml": 0.04402254531628119,
        "at": 0.04402254531628119,
        "repo": 0.04402254531628119,
        "root": 0.04402254531628119,
        "yaml": 0.04402254531628119,
        "llm": 0.04402254531628119,
        "runner": 0.04402254531628119,
        "ollama": 0.08804509063256238,
        "or": 0.13206763594884358,
        "llama": 0.04402254531628119,
        "cpp": 0.04402254531628119,
        "executable": 0.04402254531628119,
        "optional": 0.08804509063256238,
        "override": 0.04402254531628119,
        "for": 0.04402254531628119,
        "binaries": 0.04402254531628119,
        "model": 0.04402254531628119,
        "llama3": 0.04402254531628119,
        "8b": 0.04402254531628119,
        "instruct": 0.04402254531628119,
        "example": 0.04402254531628119,
        "local": 0.04402254531628119,
        "only": 0.08804509063256238,
        "max_tokens": 0.04402254531628119,
        "2048": 0.04402254531628119,
        "temperature": 0.04402254531628119,
        "0": 0.08804509063256238,
        "2": 0.04402254531628119,
        "readme": 0.13206763594884358,
        "style": 0.04402254531628119,
        "concise": 0.04402254531628119,
        "comprehensive": 0.04402254531628119,
        "template_pack": 0.04402254531628119,
        "enterprise": 0.04402254531628119,
        "bundle": 0.04402254531628119,
        "shipped": 0.04402254531628119,
        "with": 0.04402254531628119,
        "required_sections": 0.04402254531628119,
        "architecture": 0.04402254531628119,
        "build_and_test": 0.04402254531628119,
        "deployment": 0.04402254531628119,
        "troubleshooting": 0.04402254531628119,
        "faq": 0.04402254531628119,
        "license": 0.04402254531628119,
        "validation": 0.04402254531628119,
        "no_hallucination": 0.04402254531628119,
        "true": 0.08804509063256238,
        "set": 0.04402254531628119,
        "to": 0.08804509063256238,
        "false": 0.04402254531628119,
        "use": 0.04402254531628119,
        "docgen_validation_no_hallucination": 0.04402254531628119,
        "disable": 0.04402254531628119,
        "publish": 0.04402254531628119,
        "mode": 0.04402254531628119,
        "pr": 0.13206763594884358,
        "commit": 0.04402254531628119,
        "dry": 0.04402254531628119,
        "run": 0.04402254531628119,
        "branch_prefix": 0.04402254531628119,
        "labels": 0.04402254531628119,
        "docs": 0.04402254531628119,
        "auto": 0.04402254531628119,
        "update_existing": 0.04402254531628119,
        "refresh": 0.04402254531628119,
        "an": 0.04402254531628119,
        "existing": 0.04402254531628119,
        "instead": 0.04402254531628119,
        "of": 0.04402254531628119,
        "opening": 0.04402254531628119,
        "a": 0.04402254531628119,
        "new": 0.04402254531628119,
        "one": 0.04402254531628119,
        "analyzers": 0.04402254531628119,
        "enabled": 0.04402254531628119,
        "language": 0.04402254531628119,
        "build": 0.08804509063256238,
        "dependencies": 0.04402254531628119,
        "patterns": 0.04402254531628119,
        "exclude_paths": 0.04402254531628119,
        "git": 0.04402254531628119,
        "node_modules": 0.04402254531628119,
        "dist": 0.04402254531628119,
        "ci": 0.04402254531628119,
        "update": 0.04402254531628119,
        "if": 0.08804509063256238,
        "these": 0.04402254531628119,
        "paths": 0.04402254531628119,
        "change": 0.04402254531628119,
        "watched_globs": 0.04402254531628119,
        "src": 0.04402254531628119,
        "app": 0.04402254531628119,
        "cmd": 0.04402254531628119,
        "pom": 0.04402254531628119,
        "xml": 0.04402254531628119,
        "gradle": 0.04402254531628119,
        "package": 0.04402254531628119,
        "json": 0.04402254531628119,
        "requirements": 0.04402254531628119,
        "txt": 0.04402254531628119,
        "pyproject": 0.04402254531628119,
        "toml": 0.04402254531628119,
        "dockerfile": 0.04402254531628119,
        "no": 0.04402254531628119,
        "templates_dir": 0.04402254531628119,
        "is": 0.04402254531628119,
        "provided": 0.04402254531628119
      },
      "text": "class Signal: kind: str # \"framework\",\"service\",\"cli\",\"db\",\"queue\",\"dep\",\"entrypoint\",\"test\" name: str detail: Dict[str, str] @dataclass class AnalysisResult: manifest: RepoManifest signals: List[Signal] embedding_index_path: str @dataclass class SectionSpec: key: str # \"intro\",\"features\",\"arch\",\"quickstart\",... required: bool sources: List[str] # preferred retrieval tags template_name: str @dataclass class ReadmeDraft: sections: Dict[str, str] full_markdown: str @dataclass class UpdatePlan: strategy: str # \"full\"|\"patch\" changed_sections: List[str] reasons: Dict[str, str] # section->why ``` --- ## 5) Configuration (`.docgen.yml` at repo root) ```yaml llm: runner: \"ollama\" # or \"llama.cpp\" executable: \"ollama\" # optional override for CLI binaries model: \"llama3:8b-instruct\" # example; local only max_tokens: 2048 temperature: 0.2 readme: style: \"concise\" # or \"comprehensive\" template_pack: \"enterprise\" # optional bundle shipped with docgen required_sections: - intro - features - architecture - quickstart - configuration - build_and_test - deployment - troubleshooting - faq - license validation: no_hallucination: true # set to false or use DOCGEN_VALIDATION_NO_HALLUCINATION=0 to disable publish: mode: \"pr\" # \"commit\" | \"pr\" | \"dry-run\" branch_prefix: \"docgen/\" labels: - \"docs:auto\" update_existing: true # refresh an existing PR instead of opening a new one analyzers: enabled: - language - build - dependencies - patterns exclude_paths: - \".git/\" - \"node_modules/\" - \"dist/\" ci: # Only update README if these paths change watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" - \"requirements.txt\" - \"pyproject.toml\" - \"Dockerfile\" ``` > If no `readme.templates_dir` is provided, docgen",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#7",
      "vector": {
        "node_modules": 0.05006261743217589,
        "dist": 0.05006261743217589,
        "ci": 0.15018785229652767,
        "only": 0.10012523486435178,
        "update": 0.15018785229652767,
        "readme": 0.25031308716087947,
        "if": 0.15018785229652767,
        "these": 0.05006261743217589,
        "paths": 0.05006261743217589,
        "change": 0.05006261743217589,
        "watched_globs": 0.10012523486435178,
        "src": 0.10012523486435178,
        "app": 0.05006261743217589,
        "cmd": 0.05006261743217589,
        "pom": 0.10012523486435178,
        "xml": 0.10012523486435178,
        "build": 0.25031308716087947,
        "gradle": 0.10012523486435178,
        "package": 0.05006261743217589,
        "json": 0.05006261743217589,
        "requirements": 0.05006261743217589,
        "txt": 0.05006261743217589,
        "pyproject": 0.05006261743217589,
        "toml": 0.05006261743217589,
        "dockerfile": 0.10012523486435178,
        "no": 0.10012523486435178,
        "templates_dir": 0.05006261743217589,
        "is": 0.05006261743217589,
        "provided": 0.05006261743217589,
        "docgen": 0.25031308716087947,
        "automatically": 0.05006261743217589,
        "picks": 0.05006261743217589,
        "up": 0.05006261743217589,
        "docs": 0.05006261743217589,
        "templates": 0.10012523486435178,
        "bundles": 0.05006261743217589,
        "in": 0.10012523486435178,
        "the": 0.05006261743217589,
        "repository": 0.05006261743217589,
        "root": 0.05006261743217589,
        "and": 0.10012523486435178,
        "supports": 0.05006261743217589,
        "built": 0.05006261743217589,
        "template": 0.05006261743217589,
        "packs": 0.05006261743217589,
        "via": 0.10012523486435178,
        "template_pack": 0.05006261743217589,
        "6": 0.25031308716087947,
        "workflows": 0.05006261743217589,
        "1": 0.15018785229652767,
        "initialization": 0.05006261743217589,
        "repo": 0.05006261743217589,
        "without": 0.10012523486435178,
        "scan": 0.05006261743217589,
        "analyze": 0.05006261743217589,
        "manifest": 0.05006261743217589,
        "signals": 0.05006261743217589,
        "embeddings": 0.05006261743217589,
        "2": 0.15018785229652767,
        "prompt": 0.05006261743217589,
        "with": 0.10012523486435178,
        "default": 0.05006261743217589,
        "include": 0.05006261743217589,
        "getting": 0.05006261743217589,
        "started": 0.05006261743217589,
        "suggestions": 0.05006261743217589,
        "3": 0.15018785229652767,
        "generate": 0.10012523486435178,
        "sections": 0.20025046972870356,
        "sequentially": 0.05006261743217589,
        "streaming": 0.05006261743217589,
        "4": 0.10012523486435178,
        "post": 0.10012523486435178,
        "process": 0.10012523486435178,
        "toc": 0.05006261743217589,
        "badges": 0.05006261743217589,
        "status": 0.05006261743217589,
        "placeholder": 0.05006261743217589,
        "lint": 0.05006261743217589,
        "5": 0.10012523486435178,
        "publish": 0.05006261743217589,
        "direct": 0.05006261743217589,
        "commit": 0.10012523486435178,
        "md": 0.05006261743217589,
        "artifacts": 0.05006261743217589,
        "on": 0.05006261743217589,
        "pr": 0.10012523486435178,
        "detect": 0.05006261743217589,
        "changes": 0.05006261743217589,
        "git": 0.05006261743217589,
        "diff": 0.05006261743217589,
        "map": 0.05006261743217589,
        "files": 0.05006261743217589,
        "to": 0.15018785229652767,
        "using": 0.05006261743217589,
        "a": 0.05006261743217589,
        "rules": 0.05006261743217589,
        "matrix": 0.05006261743217589,
        "test": 0.05006261743217589,
        "quick": 0.05006261743217589,
        "start": 0.05006261743217589,
        "k8s": 0.05006261743217589,
        "deployment": 0.05006261743217589,
        "entrypoints": 0.05006261743217589,
        "architecture": 0.05006261743217589,
        "features": 0.05006261743217589,
        "decide": 0.05006261743217589,
        "updateplan": 0.05006261743217589,
        "patch": 0.05006261743217589,
        "impacted": 0.05006261743217589,
        "regenerate": 0.15018785229652767,
        "those": 0.05006261743217589,
        "skip": 0.05006261743217589,
        "changed": 0.05006261743217589,
        "file": 0.05006261743217589,
        "matches": 0.05006261743217589,
        "yml": 0.05006261743217589,
        "allows": 0.05006261743217589,
        "avoid": 0.05006261743217589,
        "unnecessary": 0.05006261743217589,
        "runs": 0.05006261743217589,
        "rag": 0.05006261743217589,
        "retrieval": 0.05006261743217589,
        "fetch": 0.05006261743217589,
        "top": 0.05006261743217589,
        "k": 0.05006261743217589,
        "chunks": 0.05006261743217589,
        "relevant": 0.05006261743217589,
        "each": 0.05006261743217589,
        "section": 0.10012523486435178,
        "open": 0.05006261743217589,
        "summary": 0.05006261743217589,
        "of": 0.05006261743217589,
        "deltas": 0.05006261743217589,
        "dry": 0.10012523486435178,
        "run": 0.10012523486435178,
        "support": 0.05006261743217589,
        "computes": 0.05006261743217589,
        "diffs": 0.05006261743217589,
        "scorecards": 0.05006261743217589,
        "writing": 0.05006261743217589,
        "or": 0.10012523486435178,
        "publishing": 0.05006261743217589,
        "manual": 0.05006261743217589,
        "full": 0.05006261743217589,
        "intro": 0.05006261743217589,
        "arch": 0.05006261743217589,
        "7": 0.05006261743217589,
        "contract": 0.05006261743217589
      },
      "text": "- \"node_modules/\" - \"dist/\" ci: # Only update README if these paths change watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" - \"requirements.txt\" - \"pyproject.toml\" - \"Dockerfile\" ``` > If no `readme.templates_dir` is provided, docgen automatically picks up `docs/templates/` bundles in the repository root and supports built-in template packs via `readme.template_pack`. --- ## 6) Workflows ### 6.1 Initialization (Repo without README) 1. **Scan & Analyze** \u2192 Manifest + Signals + Embeddings. 2. **Prompt Build** with default templates, include \u201cgetting started\u201d suggestions. 3. **Generate Sections** sequentially (streaming). 4. **Post-process** \u2192 ToC, badges (build status placeholder), lint. 5. **Publish**: direct commit `README.md` + `.docgen/` artifacts. ### 6.2 Update on Commit/PR 1. **Detect changes** via Git diff; map files to sections using a rules matrix: * `pom.xml`/`build.gradle` \u2192 *Build & Test*, *Quick Start*. * `Dockerfile`/`k8s` \u2192 *Deployment*. * `src/**` entrypoints \u2192 *Architecture*, *Features*. 2. **Decide UpdatePlan**: patch impacted sections; regenerate only those. 3. **Skip** if no changed file matches `.docgen.yml` `ci.watched_globs` (allows CI to avoid unnecessary runs). 4. **RAG retrieval**: fetch top-k chunks relevant to each section. 5. **Generate** \u2192 **Post-process** \u2192 **Open PR** with summary of deltas. 6. Dry-run support: `docgen update --dry-run` computes diffs and scorecards without writing or publishing. ### 6.3 Regenerate (Manual) * `docgen regenerate --full` or `--sections intro,arch`. --- ## 7) Section Contract",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#8",
      "vector": {
        "generate": 0.05923488777590923,
        "post": 0.11846977555181847,
        "process": 0.05923488777590923,
        "open": 0.05923488777590923,
        "pr": 0.05923488777590923,
        "with": 0.05923488777590923,
        "summary": 0.05923488777590923,
        "of": 0.05923488777590923,
        "deltas": 0.05923488777590923,
        "6": 0.11846977555181847,
        "dry": 0.11846977555181847,
        "run": 0.11846977555181847,
        "support": 0.11846977555181847,
        "docgen": 0.11846977555181847,
        "update": 0.05923488777590923,
        "computes": 0.05923488777590923,
        "diffs": 0.05923488777590923,
        "and": 0.11846977555181847,
        "scorecards": 0.05923488777590923,
        "without": 0.05923488777590923,
        "writing": 0.05923488777590923,
        "or": 0.1777046633277277,
        "publishing": 0.05923488777590923,
        "3": 0.05923488777590923,
        "regenerate": 0.11846977555181847,
        "manual": 0.05923488777590923,
        "full": 0.05923488777590923,
        "sections": 0.05923488777590923,
        "intro": 0.11846977555181847,
        "arch": 0.05923488777590923,
        "7": 0.05923488777590923,
        "section": 0.23693955110363693,
        "contract": 0.05923488777590923,
        "readme": 0.05923488777590923,
        "what": 0.05923488777590923,
        "why": 0.05923488777590923,
        "who": 0.05923488777590923,
        "it": 0.05923488777590923,
        "s": 0.05923488777590923,
        "for": 0.05923488777590923,
        "key": 0.05923488777590923,
        "features": 0.05923488777590923,
        "bullets": 0.05923488777590923,
        "grounded": 0.05923488777590923,
        "in": 0.05923488777590923,
        "real": 0.05923488777590923,
        "repo": 0.11846977555181847,
        "signals": 0.11846977555181847,
        "architecture": 0.05923488777590923,
        "overview": 0.05923488777590923,
        "diagram": 0.05923488777590923,
        "ascii": 0.05923488777590923,
        "components": 0.05923488777590923,
        "quick": 0.05923488777590923,
        "start": 0.05923488777590923,
        "minimal": 0.05923488777590923,
        "commands": 0.23693955110363693,
        "per": 0.11846977555181847,
        "build": 0.11846977555181847,
        "system": 0.11846977555181847,
        "configuration": 0.05923488777590923,
        "env": 0.05923488777590923,
        "vars": 0.05923488777590923,
        "files": 0.05923488777590923,
        "examples": 0.05923488777590923,
        "test": 0.05923488777590923,
        "coverage": 0.05923488777590923,
        "hint": 0.05923488777590923,
        "deployment": 0.05923488777590923,
        "container": 0.05923488777590923,
        "k8s": 0.05923488777590923,
        "instructions": 0.05923488777590923,
        "if": 0.1777046633277277,
        "detected": 0.1777046633277277,
        "troubleshooting": 0.05923488777590923,
        "common": 0.05923488777590923,
        "failures": 0.05923488777590923,
        "faq": 0.05923488777590923,
        "5": 0.05923488777590923,
        "10": 0.05923488777590923,
        "concise": 0.05923488777590923,
        "q": 0.05923488777590923,
        "a": 0.11846977555181847,
        "contributing": 0.11846977555181847,
        "md": 0.05923488777590923,
        "absent": 0.05923488777590923,
        "license": 0.05923488777590923,
        "templated": 0.05923488777590923,
        "each": 0.05923488777590923,
        "must": 0.05923488777590923,
        "be": 0.11846977555181847,
        "independently": 0.05923488777590923,
        "regenerable": 0.05923488777590923,
        "self": 0.05923488777590923,
        "contained": 0.05923488777590923,
        "8": 0.05923488777590923,
        "prompting": 0.05923488777590923,
        "strategy": 0.05923488777590923,
        "local": 0.05923488777590923,
        "llm": 0.05923488777590923,
        "message": 0.11846977555181847,
        "fixed": 0.05923488777590923,
        "guardrails": 0.05923488777590923,
        "you": 0.05923488777590923,
        "are": 0.05923488777590923,
        "senior": 0.05923488777590923,
        "dev": 0.05923488777590923,
        "doc": 0.05923488777590923,
        "writer": 0.05923488777590923,
        "precise": 0.05923488777590923,
        "cite": 0.05923488777590923,
        "facts": 0.05923488777590923,
        "only": 0.05923488777590923,
        "no": 0.05923488777590923,
        "speculation": 0.05923488777590923,
        "never": 0.05923488777590923,
        "invent": 0.05923488777590923,
        "prefer": 0.05923488777590923,
        "by": 0.05923488777590923,
        "analyzers": 0.05923488777590923,
        "user": 0.05923488777590923,
        "objective": 0.05923488777590923,
        "constraints": 0.05923488777590923,
        "tone": 0.05923488777590923,
        "length": 0.05923488777590923,
        "inject": 0.05923488777590923,
        "top": 0.05923488777590923,
        "k": 0.05923488777590923,
        "chunks": 0.05923488777590923,
        "rag": 0.05923488777590923,
        "provide": 0.05923488777590923,
        "style": 0.05923488777590923,
        "tokens": 0.05923488777590923,
        "headings": 0.05923488777590923,
        "code": 0.05923488777590923,
        "blocks": 0.05923488777590923,
        "tables": 0.05923488777590923,
        "filters": 0.05923488777590923,
        "refuse": 0.05923488777590923,
        "insufficient": 0.05923488777590923,
        "evidence": 0.05923488777590923,
        "fall": 0.05923488777590923,
        "back": 0.05923488777590923,
        "to": 0.05923488777590923,
        "template": 0.05923488777590923,
        "stubs": 0.05923488777590923,
        "9": 0.05923488777590923,
        "language": 0.05923488777590923,
        "project": 0.05923488777590923,
        "poc": 0.11846977555181847,
        "targets": 0.05923488777590923,
        "tier": 0.11846977555181847,
        "1": 0.05923488777590923,
        "python": 0.05923488777590923,
        "poetry": 0.05923488777590923,
        "setuptools": 0.05923488777590923,
        "java": 0.05923488777590923,
        "maven": 0.05923488777590923,
        "gradle": 0.05923488777590923,
        "spring": 0.05923488777590923,
        "boot": 0.05923488777590923,
        "node": 0.05923488777590923,
        "js": 0.05923488777590923,
        "npm": 0.05923488777590923,
        "pnpm": 0.05923488777590923,
        "express": 0.05923488777590923,
        "next": 0.05923488777590923,
        "2": 0.05923488777590923,
        "soon": 0.05923488777590923,
        "go": 0.05923488777590923,
        "modules": 0.05923488777590923
      },
      "text": "**Generate** \u2192 **Post-process** \u2192 **Open PR** with summary of deltas. 6. Dry-run support: `docgen update --dry-run` computes diffs and scorecards without writing or publishing. ### 6.3 Regenerate (Manual) * `docgen regenerate --full` or `--sections intro,arch`. --- ## 7) Section Contract (README) * **Intro**: what, why, who it\u2019s for * **Key Features**: bullets grounded in real repo signals * **Architecture**: overview diagram (ASCII) + components * **Quick Start**: minimal commands (per build system) * **Configuration**: env vars, files, examples * **Build & Test**: commands, coverage hint * **Deployment**: container/K8s instructions if detected * **Troubleshooting**: common failures * **FAQ**: 5\u201310 concise Q\\&A * **Contributing** (if `CONTRIBUTING.md` absent) * **License** (detected or templated) > Each section must be independently regenerable and self-contained. --- ## 8) Prompting Strategy (Local LLM) * **System message (fixed guardrails)**: * \u201cYou are a senior dev doc writer. Be precise. Cite repo facts only. No speculation.\u201d * \u201cNever invent commands. Prefer commands detected by analyzers.\u201d * **User message per section**: * Section objective + constraints (tone, length). * Inject **Signals** + **Top-k chunks** (RAG). * Provide **style tokens** (headings, code blocks, tables). * **Post-filters**: refuse if insufficient evidence; fall back to template stubs. --- ## 9) Language & Project Support (POC targets) * **Tier-1 (POC)**: Python (Poetry/Setuptools), Java (Maven/Gradle, Spring Boot), Node.js (npm/pnpm, Express/Next). * **Tier-2 (soon)**: Go (modules),",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#9",
      "vector": {
        "code": 0.0636929755298482,
        "blocks": 0.0318464877649241,
        "tables": 0.0318464877649241,
        "post": 0.0636929755298482,
        "filters": 0.0318464877649241,
        "refuse": 0.0318464877649241,
        "if": 0.0318464877649241,
        "insufficient": 0.0318464877649241,
        "evidence": 0.0318464877649241,
        "fall": 0.0318464877649241,
        "back": 0.0318464877649241,
        "to": 0.0318464877649241,
        "template": 0.0318464877649241,
        "stubs": 0.0636929755298482,
        "9": 0.0318464877649241,
        "language": 0.0636929755298482,
        "project": 0.0318464877649241,
        "support": 0.0318464877649241,
        "poc": 0.0636929755298482,
        "targets": 0.0318464877649241,
        "tier": 0.0636929755298482,
        "1": 0.0318464877649241,
        "python": 0.0955394632947723,
        "poetry": 0.0318464877649241,
        "setuptools": 0.0318464877649241,
        "java": 0.0318464877649241,
        "maven": 0.0318464877649241,
        "gradle": 0.0318464877649241,
        "spring": 0.0636929755298482,
        "boot": 0.0318464877649241,
        "node": 0.0318464877649241,
        "js": 0.0318464877649241,
        "npm": 0.0318464877649241,
        "pnpm": 0.0318464877649241,
        "express": 0.0318464877649241,
        "next": 0.0318464877649241,
        "2": 0.0318464877649241,
        "soon": 0.0318464877649241,
        "go": 0.0318464877649241,
        "modules": 0.0318464877649241,
        "rust": 0.0318464877649241,
        "cargo": 0.0318464877649241,
        "ruby": 0.0318464877649241,
        "bundler": 0.0318464877649241,
        "php": 0.0318464877649241,
        "composer": 0.0318464877649241,
        "detection": 0.0318464877649241,
        "via": 0.0318464877649241,
        "file": 0.0318464877649241,
        "heuristics": 0.0318464877649241,
        "optional": 0.0636929755298482,
        "tree": 0.0318464877649241,
        "sitter": 0.0318464877649241,
        "for": 0.0636929755298482,
        "function": 0.0318464877649241,
        "class": 0.0636929755298482,
        "extraction": 0.0318464877649241,
        "pluggable": 0.0318464877649241,
        "entry": 0.0318464877649241,
        "points": 0.0318464877649241,
        "main": 0.0636929755298482,
        "springbootapplication": 0.0318464877649241,
        "fastapi": 0.0636929755298482,
        "app": 0.1273859510596964,
        "bin": 0.0318464877649241,
        "cmd": 0.0318464877649241,
        "10": 0.0318464877649241,
        "interfaces": 0.0318464877649241,
        "skeleton": 0.0318464877649241,
        "docgen": 0.0318464877649241,
        "__init__": 0.0318464877649241,
        "py": 0.7961621941231025,
        "cli": 0.0955394632947723,
        "click": 0.0318464877649241,
        "typer": 0.0636929755298482,
        "failsafe": 0.0318464877649241,
        "fail": 0.0318464877649241,
        "safe": 0.0318464877649241,
        "readme": 0.0318464877649241,
        "logging": 0.0636929755298482,
        "configuration": 0.0318464877649241,
        "helpers": 0.0318464877649241,
        "orchestrator": 0.0318464877649241,
        "repo_scanner": 0.0318464877649241,
        "analyzers": 0.0318464877649241,
        "base": 0.0318464877649241,
        "analyzer": 0.0955394632947723,
        "abc": 0.1592324388246205,
        "build": 0.0318464877649241,
        "dependencies": 0.0318464877649241,
        "entrypoints": 0.0318464877649241,
        "patterns": 0.0318464877649241,
        "rag": 0.0318464877649241,
        "embedder": 0.0318464877649241,
        "local": 0.0318464877649241,
        "embedding": 0.0318464877649241,
        "model": 0.0318464877649241,
        "store": 0.0318464877649241,
        "prompting": 0.0318464877649241,
        "builder": 0.0318464877649241,
        "jinja2": 0.0318464877649241,
        "templates": 0.0636929755298482,
        "token": 0.0318464877649241,
        "mgmt": 0.0318464877649241,
        "constants": 0.0318464877649241,
        "j2": 0.0318464877649241,
        "per": 0.0318464877649241,
        "section": 0.0318464877649241,
        "llm": 0.0318464877649241,
        "runner": 0.0318464877649241,
        "adapter": 0.0318464877649241,
        "ollama": 0.0318464877649241,
        "llama": 0.0318464877649241,
        "cpp": 0.0318464877649241,
        "postproc": 0.0318464877649241,
        "lint": 0.0318464877649241,
        "links": 0.0318464877649241,
        "markers": 0.0318464877649241,
        "toc": 0.0318464877649241,
        "git": 0.0318464877649241,
        "diff": 0.0318464877649241,
        "publisher": 0.0318464877649241,
        "config": 0.0318464877649241,
        "models": 0.0636929755298482,
        "from": 0.0636929755298482,
        "import": 0.0636929755298482,
        "abstractmethod": 0.0955394632947723,
        "repomanifest": 0.0955394632947723,
        "signal": 0.0636929755298482,
        "def": 0.1592324388246205,
        "supports": 0.0318464877649241,
        "self": 0.0636929755298482,
        "manifest": 0.0636929755298482,
        "bool": 0.0955394632947723,
        "analyze": 0.0318464877649241,
        "list": 0.0318464877649241,
        "command": 0.0955394632947723,
        "init": 0.0318464877649241,
        "path": 0.0636929755298482,
        "str": 0.1592324388246205,
        "publish": 0.0318464877649241,
        "true": 0.0318464877649241,
        "update": 0.0318464877649241,
        "event": 0.0318464877649241,
        "commit": 0.0318464877649241,
        "diff_base": 0.0318464877649241,
        "origin": 0.0318464877649241,
        "regenerate": 0.0318464877649241,
        "sections": 0.0318464877649241,
        "full": 0.0318464877649241,
        "false": 0.0318464877649241,
        "service": 0.0318464877649241,
        "mode": 0.0318464877649241
      },
      "text": "code blocks, tables). * **Post-filters**: refuse if insufficient evidence; fall back to template stubs. --- ## 9) Language & Project Support (POC targets) * **Tier-1 (POC)**: Python (Poetry/Setuptools), Java (Maven/Gradle, Spring Boot), Node.js (npm/pnpm, Express/Next). * **Tier-2 (soon)**: Go (modules), Rust (Cargo), Ruby (Bundler), PHP (Composer). * Detection via: * File heuristics + optional tree-sitter for function/class extraction (pluggable). * Entry points: `main()`; Spring `@SpringBootApplication`; FastAPI app; `bin/`, `cmd/`. --- ## 10) Interfaces (Code Skeleton) ``` docgen/ __init__.py cli.py # click/typer CLI failsafe.py # fail-safe README stubs logging.py # logging configuration helpers orchestrator.py repo_scanner.py analyzers/ base.py # Analyzer ABC language.py build.py dependencies.py entrypoints.py patterns.py rag/ embedder.py # local embedding model store.py prompting/ builder.py # Jinja2 templates, token mgmt constants.py templates/ # *.j2 per section llm/ runner.py # adapter for ollama/llama.cpp postproc/ lint.py links.py markers.py toc.py git/ diff.py publisher.py config.py models.py ``` **Analyzer ABC** ```python from abc import ABC, abstractmethod from .models import RepoManifest, Signal class Analyzer(ABC): @abstractmethod def supports(self, manifest: RepoManifest) -> bool: ... @abstractmethod def analyze(self, manifest: RepoManifest) -> list[Signal]: ... ``` **CLI (Typer)** ```python @app.command() def init(path: str = \".\", publish: bool = True): ... @app.command() def update(path: str = \".\", event: str = \"commit\", diff_base: str = \"origin/main\"): ... @app.command() def regenerate(sections: str = \"\", full: bool = False): ... ``` **FastAPI (optional service mode)** * `POST",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#10",
      "vector": {
        "publish": 0.17586311452816478,
        "bool": 0.11724207635210984,
        "true": 0.05862103817605492,
        "app": 0.17586311452816478,
        "command": 0.11724207635210984,
        "def": 0.11724207635210984,
        "update": 0.17586311452816478,
        "path": 0.11724207635210984,
        "str": 0.23448415270421968,
        "event": 0.05862103817605492,
        "commit": 0.11724207635210984,
        "diff_base": 0.05862103817605492,
        "origin": 0.05862103817605492,
        "main": 0.05862103817605492,
        "regenerate": 0.05862103817605492,
        "sections": 0.23448415270421968,
        "full": 0.05862103817605492,
        "false": 0.05862103817605492,
        "fastapi": 0.05862103817605492,
        "optional": 0.11724207635210984,
        "service": 0.05862103817605492,
        "mode": 0.05862103817605492,
        "post": 0.35172622905632955,
        "analyze": 0.05862103817605492,
        "generate": 0.05862103817605492,
        "arch": 0.05862103817605492,
        "quickstart": 0.17586311452816478,
        "get": 0.05862103817605492,
        "status": 0.05862103817605492,
        "run_id": 0.05862103817605492,
        "11": 0.05862103817605492,
        "change": 0.05862103817605492,
        "impact": 0.05862103817605492,
        "matrix": 0.05862103817605492,
        "examples": 0.05862103817605492,
        "changed": 0.11724207635210984,
        "pattern": 0.05862103817605492,
        "to": 0.11724207635210984,
        "rebuild": 0.05862103817605492,
        "notes": 0.05862103817605492,
        "pom": 0.05862103817605492,
        "xml": 0.05862103817605492,
        "build": 0.23448415270421968,
        "gradle": 0.05862103817605492,
        "_and": 0.11724207635210984,
        "_test": 0.11724207635210984,
        "recompute": 0.05862103817605492,
        "commands": 0.05862103817605492,
        "requirements": 0.05862103817605492,
        "txt": 0.05862103817605492,
        "pyproject": 0.05862103817605492,
        "toml": 0.05862103817605492,
        "install": 0.05862103817605492,
        "steps": 0.05862103817605492,
        "dockerfile": 0.05862103817605492,
        "k8s": 0.05862103817605492,
        "deployment": 0.05862103817605492,
        "container": 0.05862103817605492,
        "changes": 0.05862103817605492,
        "src": 0.05862103817605492,
        "cmd": 0.05862103817605492,
        "features": 0.05862103817605492,
        "architecture": 0.17586311452816478,
        "if": 0.05862103817605492,
        "entrypoint": 0.05862103817605492,
        "intro": 0.05862103817605492,
        "too": 0.05862103817605492,
        "docs": 0.05862103817605492,
        "all": 0.05862103817605492,
        "patch": 0.05862103817605492,
        "prefer": 0.05862103817605492,
        "doc": 0.05862103817605492,
        "driven": 0.05862103817605492,
        "readme": 0.11724207635210984,
        "md": 0.05862103817605492,
        "none": 0.05862103817605492,
        "unless": 0.05862103817605492,
        "empty": 0.05862103817605492,
        "prevent": 0.05862103817605492,
        "loops": 0.05862103817605492,
        "12": 0.05862103817605492,
        "processing": 0.05862103817605492,
        "rules": 0.05862103817605492,
        "headings": 0.05862103817605492,
        "start": 0.05862103817605492,
        "at": 0.05862103817605492,
        "for": 0.11724207635210984,
        "title": 0.05862103817605492,
        "then": 0.05862103817605492,
        "add": 0.05862103817605492,
        "auto": 0.05862103817605492,
        "toc": 0.05862103817605492,
        "level": 0.05862103817605492,
        "3": 0.05862103817605492,
        "validate": 0.05862103817605492,
        "code": 0.05862103817605492,
        "blocks": 0.05862103817605492,
        "bash": 0.05862103817605492,
        "python": 0.05862103817605492,
        "convert": 0.05862103817605492,
        "absolute": 0.05862103817605492,
        "github": 0.05862103817605492,
        "links": 0.05862103817605492,
        "relative": 0.05862103817605492,
        "where": 0.05862103817605492,
        "possible": 0.05862103817605492,
        "ensure": 0.05862103817605492,
        "idempotency": 0.05862103817605492,
        "only": 0.05862103817605492,
        "edit": 0.05862103817605492,
        "between": 0.05862103817605492,
        "managed": 0.05862103817605492,
        "markers": 0.11724207635210984,
        "docgen": 0.11724207635210984,
        "begin": 0.05862103817605492,
        "end": 0.05862103817605492,
        "13": 0.05862103817605492,
        "git": 0.05862103817605492,
        "ci": 0.05862103817605492,
        "integration": 0.05862103817605492,
        "local": 0.05862103817605492,
        "pre": 0.05862103817605492,
        "forbid": 0.05862103817605492,
        "direct": 0.05862103817605492,
        "edits": 0.05862103817605492,
        "outside": 0.05862103817605492,
        "merge": 0.05862103817605492,
        "checkout": 0.05862103817605492,
        "remind": 0.05862103817605492
      },
      "text": "= \".\", publish: bool = True): ... @app.command() def update(path: str = \".\", event: str = \"commit\", diff_base: str = \"origin/main\"): ... @app.command() def regenerate(sections: str = \"\", full: bool = False): ... ``` **FastAPI (optional service mode)** * `POST /analyze` * `POST /generate?sections=arch,quickstart` * `POST /publish` * `GET /status/{run_id}` --- ## 11) Change Impact Matrix (examples) | Changed Path Pattern | Sections to Rebuild | Notes | | ------------------------------------ | ---------------------------- | --------------------------------------- | | `pom.xml`, `build.gradle*` | build\\_and\\_test, quickstart | Recompute build commands | | `requirements.txt`, `pyproject.toml` | build\\_and\\_test, quickstart | Update install steps | | `Dockerfile`, `k8s/**` | deployment | Publish container changes | | `src/**`, `app/**`, `cmd/**` | features, architecture | If entrypoint changed, update intro too | | `docs/**` | all (patch) | Prefer doc-driven | | `README.md` | none (unless empty) | Prevent loops | --- ## 12) Post-Processing Rules * Headings start at `#` for title then `##` for sections. * Add **auto ToC** (<= level 3). * Validate code blocks (` ```bash`, ` ```python`). * Convert absolute GitHub links to relative where possible. * Ensure **idempotency**: only edit between managed markers: * `<!-- docgen:begin:architecture -->` \u2026 `<!-- docgen:end:architecture -->` --- ## 13) Git & CI Integration ### Local * **pre-commit**: forbid direct README edits outside markers (optional). * **post-merge / post-checkout**: remind",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#11",
      "vector": {
        "possible": 0.11162911443718952,
        "ensure": 0.05581455721859476,
        "idempotency": 0.05581455721859476,
        "only": 0.16744367165578428,
        "edit": 0.05581455721859476,
        "between": 0.05581455721859476,
        "managed": 0.05581455721859476,
        "markers": 0.11162911443718952,
        "docgen": 0.22325822887437904,
        "begin": 0.05581455721859476,
        "architecture": 0.11162911443718952,
        "end": 0.05581455721859476,
        "13": 0.05581455721859476,
        "git": 0.11162911443718952,
        "ci": 0.11162911443718952,
        "integration": 0.05581455721859476,
        "local": 0.16744367165578428,
        "pre": 0.05581455721859476,
        "commit": 0.05581455721859476,
        "forbid": 0.05581455721859476,
        "direct": 0.05581455721859476,
        "readme": 0.05581455721859476,
        "edits": 0.05581455721859476,
        "outside": 0.05581455721859476,
        "optional": 0.16744367165578428,
        "post": 0.16744367165578428,
        "merge": 0.05581455721859476,
        "checkout": 0.11162911443718952,
        "remind": 0.05581455721859476,
        "to": 0.05581455721859476,
        "run": 0.05581455721859476,
        "update": 0.16744367165578428,
        "github": 0.11162911443718952,
        "gitlab": 0.05581455721859476,
        "bitbucket": 0.05581455721859476,
        "on": 0.05581455721859476,
        "push": 0.05581455721859476,
        "pr": 0.2790727860929738,
        "1": 0.11162911443718952,
        "repo": 0.11162911443718952,
        "2": 0.16744367165578428,
        "event": 0.05581455721859476,
        "diff": 0.11162911443718952,
        "base": 0.05581455721859476,
        "base_sha": 0.05581455721859476,
        "3": 0.05581455721859476,
        "if": 0.16744367165578428,
        "changes": 0.05581455721859476,
        "open": 0.05581455721859476,
        "with": 0.05581455721859476,
        "labeled": 0.05581455721859476,
        "docs": 0.11162911443718952,
        "auto": 0.05581455721859476,
        "tokenless": 0.05581455721859476,
        "mode": 0.05581455721859476,
        "created": 0.05581455721859476,
        "from": 0.05581455721859476,
        "a": 0.05581455721859476,
        "app": 0.05581455721859476,
        "bot": 0.05581455721859476,
        "account": 0.05581455721859476,
        "14": 0.05581455721859476,
        "quality": 0.05581455721859476,
        "gates": 0.05581455721859476,
        "evaluation": 0.05581455721859476,
        "consistency": 0.05581455721859476,
        "checks": 0.05581455721859476,
        "commands": 0.11162911443718952,
        "exist": 0.05581455721859476,
        "in": 0.11162911443718952,
        "ports": 0.05581455721859476,
        "env": 0.05581455721859476,
        "vars": 0.05581455721859476,
        "match": 0.05581455721859476,
        "configs": 0.05581455721859476,
        "no": 0.11162911443718952,
        "hallucinations": 0.05581455721859476,
        "reject": 0.05581455721859476,
        "new": 0.05581455721859476,
        "facts": 0.05581455721859476,
        "not": 0.05581455721859476,
        "found": 0.11162911443718952,
        "signals": 0.05581455721859476,
        "rag": 0.11162911443718952,
        "style": 0.05581455721859476,
        "concise": 0.05581455721859476,
        "paragraphs": 0.05581455721859476,
        "actionable": 0.05581455721859476,
        "filler": 0.05581455721859476,
        "marketing": 0.05581455721859476,
        "scorecard": 0.05581455721859476,
        "0": 0.05581455721859476,
        "100": 0.05581455721859476,
        "coverage": 0.05581455721859476,
        "of": 0.11162911443718952,
        "required": 0.05581455721859476,
        "sections": 0.05581455721859476,
        "30": 0.05581455721859476,
        "buildability": 0.05581455721859476,
        "quick": 0.05581455721859476,
        "start": 0.05581455721859476,
        "20": 0.11162911443718952,
        "link": 0.05581455721859476,
        "validity": 0.05581455721859476,
        "10": 0.16744367165578428,
        "alignment": 0.05581455721859476,
        "w": 0.05581455721859476,
        "change": 0.05581455721859476,
        "set": 0.05581455721859476,
        "lint": 0.05581455721859476,
        "reviewer": 0.05581455721859476,
        "feedback": 0.05581455721859476,
        "loop": 0.05581455721859476,
        "15": 0.05581455721859476,
        "security": 0.05581455721859476,
        "privacy": 0.05581455721859476,
        "llm": 0.11162911443718952,
        "and": 0.05581455721859476,
        "embedding": 0.05581455721859476,
        "models": 0.05581455721859476,
        "respect": 0.05581455721859476,
        "gitignore": 0.05581455721859476,
        "configurable": 0.05581455721859476,
        "exclude_paths": 0.05581455721859476,
        "never": 0.05581455721859476,
        "index": 0.05581455721859476,
        "large": 0.05581455721859476,
        "binaries": 0.05581455721859476,
        "secret": 0.11162911443718952,
        "files": 0.05581455721859476,
        "simple": 0.05581455721859476,
        "scan": 0.05581455721859476,
        "block": 0.05581455721859476,
        "16": 0.05581455721859476,
        "mvp": 0.05581455721859476,
        "plan": 0.05581455721859476,
        "weeks": 0.05581455721859476,
        "suggested": 0.05581455721859476,
        "breakdown": 0.05581455721859476,
        "core": 0.05581455721859476,
        "path": 0.05581455721859476,
        "cli": 0.05581455721859476,
        "scanner": 0.05581455721859476,
        "language": 0.05581455721859476,
        "build": 0.05581455721859476,
        "analyzers": 0.05581455721859476,
        "python": 0.05581455721859476,
        "java": 0.05581455721859476,
        "node": 0.05581455721859476,
        "prompt": 0.05581455721859476,
        "builder": 0.05581455721859476,
        "runner": 0.05581455721859476,
        "ollama": 0.05581455721859476,
        "adapter": 0.05581455721859476,
        "processor": 0.05581455721859476,
        "publisher": 0.05581455721859476,
        "lite": 0.05581455721859476,
        "embed": 0.05581455721859476
      },
      "text": "possible. * Ensure **idempotency**: only edit between managed markers: * `<!-- docgen:begin:architecture -->` \u2026 `<!-- docgen:end:architecture -->` --- ## 13) Git & CI Integration ### Local * **pre-commit**: forbid direct README edits outside markers (optional). * **post-merge / post-checkout**: remind to run `docgen update` (optional). ### CI (GitHub/GitLab/Bitbucket) * On push/PR: 1. Checkout repo. 2. `docgen update --event pr --diff-base $BASE_SHA` 3. If changes \u2192 open/update PR with labeled `docs:auto`. * Tokenless mode possible if PR created from a GitHub App/bot account. --- ## 14) Quality Gates & Evaluation * **Consistency checks**: commands exist in repo; ports/env vars match configs. * **No hallucinations**: reject new facts not found in signals/RAG. * **Style**: concise paragraphs, actionable commands, no filler marketing. * **Scorecard** (0\u2013100): * Coverage of required sections (30) * Buildability of quick start (20) * Link validity (10) * Diff alignment w/ change set (20) * Lint (10) * Reviewer feedback loop (10) --- ## 15) Security & Privacy * **Local only** LLM and embedding models. * Respect `.gitignore` + configurable `exclude_paths`. * Never index large binaries/secret files. * Optional simple **secret scan**; block if found. --- ## 16) MVP Plan (2 weeks suggested breakdown) 1. **Core path**: CLI, Scanner, Language+Build analyzers (Python/Java/Node), Prompt Builder, Local LLM runner (Ollama adapter), Post-processor, Git Publisher (PR). 2. **RAG Lite**: embed only `/docs`,",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#12",
      "vector": {
        "simple": 0.058823529411764705,
        "secret": 0.058823529411764705,
        "scan": 0.058823529411764705,
        "block": 0.058823529411764705,
        "if": 0.058823529411764705,
        "found": 0.058823529411764705,
        "16": 0.058823529411764705,
        "mvp": 0.058823529411764705,
        "plan": 0.058823529411764705,
        "2": 0.17647058823529413,
        "weeks": 0.058823529411764705,
        "suggested": 0.058823529411764705,
        "breakdown": 0.058823529411764705,
        "1": 0.11764705882352941,
        "core": 0.058823529411764705,
        "path": 0.058823529411764705,
        "cli": 0.058823529411764705,
        "scanner": 0.058823529411764705,
        "language": 0.058823529411764705,
        "build": 0.17647058823529413,
        "analyzers": 0.058823529411764705,
        "python": 0.17647058823529413,
        "java": 0.058823529411764705,
        "node": 0.058823529411764705,
        "prompt": 0.058823529411764705,
        "builder": 0.058823529411764705,
        "local": 0.058823529411764705,
        "llm": 0.058823529411764705,
        "runner": 0.058823529411764705,
        "ollama": 0.058823529411764705,
        "adapter": 0.058823529411764705,
        "post": 0.058823529411764705,
        "processor": 0.058823529411764705,
        "git": 0.058823529411764705,
        "publisher": 0.058823529411764705,
        "pr": 0.11764705882352941,
        "rag": 0.058823529411764705,
        "lite": 0.058823529411764705,
        "embed": 0.058823529411764705,
        "only": 0.058823529411764705,
        "docs": 0.058823529411764705,
        "existing": 0.058823529411764705,
        "readme": 0.11764705882352941,
        "top": 0.058823529411764705,
        "20": 0.058823529411764705,
        "largest": 0.058823529411764705,
        "source": 0.058823529411764705,
        "files": 0.058823529411764705,
        "heads": 0.058823529411764705,
        "3": 0.058823529411764705,
        "triggers": 0.058823529411764705,
        "single": 0.058823529411764705,
        "commit": 0.058823529411764705,
        "mode": 0.11764705882352941,
        "as": 0.11764705882352941,
        "stretch": 0.058823529411764705,
        "4": 0.058823529411764705,
        "templates": 0.11764705882352941,
        "8": 0.058823529411764705,
        "sections": 0.058823529411764705,
        "jinja2": 0.23529411764705882,
        "managed": 0.058823529411764705,
        "markers": 0.058823529411764705,
        "5": 0.058823529411764705,
        "config": 0.058823529411764705,
        "docgen": 0.058823529411764705,
        "yml": 0.058823529411764705,
        "minimal": 0.11764705882352941,
        "17": 0.17647058823529413,
        "example": 0.058823529411764705,
        "section": 0.11764705882352941,
        "template": 0.058823529411764705,
        "architecture": 0.23529411764705882,
        "j2": 0.11764705882352941,
        "project_name": 0.11764705882352941,
        "is": 0.058823529411764705,
        "structured": 0.058823529411764705,
        "ascii": 0.058823529411764705,
        "_architecture": 0.058823529411764705,
        "key": 0.058823529411764705,
        "components": 0.11764705882352941,
        "for": 0.11764705882352941,
        "comp": 0.17647058823529413,
        "in": 0.058823529411764705,
        "name": 0.058823529411764705,
        "summary": 0.058823529411764705,
        "endfor": 0.058823529411764705,
        "data": 0.058823529411764705,
        "flow": 0.058823529411764705,
        "data_flow": 0.058823529411764705,
        "generated": 0.058823529411764705,
        "from": 0.058823529411764705,
        "detected": 0.058823529411764705,
        "signals": 0.058823529411764705,
        "signals_summary": 0.058823529411764705,
        "frame": 0.058823529411764705,
        "composed": 0.058823529411764705,
        "intro": 0.058823529411764705,
        "features": 0.17647058823529413,
        "include": 0.058823529411764705,
        "quick": 0.058823529411764705,
        "start": 0.058823529411764705,
        "quickstart": 0.058823529411764705,
        "configuration": 0.11764705882352941,
        "test": 0.058823529411764705,
        "build_and_test": 0.11764705882352941,
        "deployment": 0.17647058823529413,
        "troubleshooting": 0.11764705882352941,
        "faq": 0.11764705882352941,
        "license": 0.11764705882352941,
        "18": 0.058823529411764705,
        "snippets": 0.058823529411764705,
        "change": 0.058823529411764705,
        "impact": 0.058823529411764705,
        "heuristic": 0.058823529411764705,
        "section_rules": 0.058823529411764705,
        "pom": 0.058823529411764705,
        "xml": 0.058823529411764705,
        "gradle": 0.058823529411764705,
        "requirements": 0.058823529411764705,
        "txt": 0.058823529411764705,
        "pyproject": 0.058823529411764705,
        "toml": 0.058823529411764705,
        "package": 0.058823529411764705,
        "json": 0.058823529411764705,
        "dockerfile": 0.058823529411764705,
        "k8s": 0.058823529411764705,
        "src": 0.11764705882352941,
        "app": 0.11764705882352941,
        "cmd": 0.11764705882352941,
        "def": 0.058823529411764705,
        "sections_from_diff": 0.058823529411764705,
        "paths": 0.058823529411764705,
        "list": 0.058823529411764705,
        "str": 0.11764705882352941,
        "set": 0.11764705882352941,
        "out": 0.058823529411764705
      },
      "text": "simple **secret scan**; block if found. --- ## 16) MVP Plan (2 weeks suggested breakdown) 1. **Core path**: CLI, Scanner, Language+Build analyzers (Python/Java/Node), Prompt Builder, Local LLM runner (Ollama adapter), Post-processor, Git Publisher (PR). 2. **RAG Lite**: embed only `/docs`, existing `README`, top 20 largest source files\u2019 heads. 3. **Triggers**: single \u201ccommit\u201d mode; PR mode as stretch. 4. **Templates**: 8 sections, Jinja2; managed markers. 5. **Config**: `.docgen.yml` minimal. --- ## 17) Example Templates ### 17.1 Section Template (Jinja2 \u2014 architecture.j2) ```jinja2 ## Architecture {{ project_name }} is structured as: ``` {{ ascii\\_architecture }} ``` **Key components** {% for comp in components %} - **{{ comp.name }}** \u2014 {{ comp.summary }} {% endfor %} **Data flow** {{ data_flow }} > Generated from detected signals: {{ signals_summary }} ``` ### 17.2 README Frame (composed) ```jinja2 # {{ project_name }} {{ intro }} ## Features {{ features }} {% include \"architecture.j2\" %} ## Quick Start {{ quickstart }} ## Configuration {{ configuration }} ## Build & Test {{ build_and_test }} ## Deployment {{ deployment }} ## Troubleshooting {{ troubleshooting }} ## FAQ {{ faq }} ## License {{ license }} ``` --- ## 18) Minimal Python Snippets **Change impact heuristic** ```python SECTION_RULES = [ (\"build_and_test\", [\"pom.xml\",\"build.gradle\",\"requirements.txt\",\"pyproject.toml\",\"package.json\"]), (\"deployment\", [\"Dockerfile\",\"k8s/\"]), (\"architecture\", [\"src/\",\"app/\",\"cmd/\"]), (\"features\", [\"src/\",\"app/\",\"cmd/\"]), ] def sections_from_diff(paths: list[str]) -> set[str]: out = set() for section,",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#13",
      "vector": {
        "faq": 0.04432422071779363,
        "license": 0.08864844143558726,
        "18": 0.04432422071779363,
        "minimal": 0.04432422071779363,
        "python": 0.13297266215338088,
        "snippets": 0.04432422071779363,
        "change": 0.04432422071779363,
        "impact": 0.04432422071779363,
        "heuristic": 0.04432422071779363,
        "section_rules": 0.08864844143558726,
        "build_and_test": 0.04432422071779363,
        "pom": 0.08864844143558726,
        "xml": 0.08864844143558726,
        "build": 0.13297266215338088,
        "gradle": 0.08864844143558726,
        "requirements": 0.04432422071779363,
        "txt": 0.04432422071779363,
        "pyproject": 0.04432422071779363,
        "toml": 0.04432422071779363,
        "package": 0.08864844143558726,
        "json": 0.08864844143558726,
        "deployment": 0.04432422071779363,
        "dockerfile": 0.04432422071779363,
        "k8s": 0.04432422071779363,
        "architecture": 0.04432422071779363,
        "src": 0.13297266215338088,
        "app": 0.13297266215338088,
        "cmd": 0.13297266215338088,
        "features": 0.04432422071779363,
        "def": 0.08864844143558726,
        "sections_from_diff": 0.04432422071779363,
        "paths": 0.08864844143558726,
        "list": 0.04432422071779363,
        "str": 0.26594532430676177,
        "set": 0.08864844143558726,
        "out": 0.13297266215338088,
        "for": 0.2216211035889681,
        "section": 0.08864844143558726,
        "patterns": 0.13297266215338088,
        "in": 0.2216211035889681,
        "if": 0.2216211035889681,
        "any": 0.04432422071779363,
        "p": 0.13297266215338088,
        "pat": 0.08864844143558726,
        "startswith": 0.04432422071779363,
        "add": 0.04432422071779363,
        "return": 0.13297266215338088,
        "or": 0.08864844143558726,
        "intro": 0.08864844143558726,
        "fall": 0.04432422071779363,
        "back": 0.04432422071779363,
        "to": 0.08864844143558726,
        "uncertain": 0.04432422071779363,
        "managed": 0.04432422071779363,
        "markers": 0.08864844143558726,
        "patch": 0.04432422071779363,
        "replace_block": 0.04432422071779363,
        "md": 0.2216211035889681,
        "key": 0.13297266215338088,
        "new": 0.08864844143558726,
        "start": 0.1772968828711745,
        "f": 0.13297266215338088,
        "docgen": 0.1772968828711745,
        "begin": 0.04432422071779363,
        "end": 0.2216211035889681,
        "and": 0.04432422071779363,
        "pre": 0.08864844143558726,
        "rest": 0.08864844143558726,
        "split": 0.08864844143558726,
        "1": 0.08864844143558726,
        "_": 0.04432422071779363,
        "post": 0.08864844143558726,
        "n": 0.08864844143558726,
        "insert": 0.04432422071779363,
        "missing": 0.04432422071779363,
        "19": 0.04432422071779363,
        "open": 0.04432422071779363,
        "questions": 0.04432422071779363,
        "trade": 0.04432422071779363,
        "offs": 0.04432422071779363,
        "embeddings": 0.04432422071779363,
        "use": 0.04432422071779363,
        "a": 0.13297266215338088,
        "tiny": 0.04432422071779363,
        "local": 0.04432422071779363,
        "model": 0.08864844143558726,
        "vs": 0.08864844143558726,
        "rule": 0.04432422071779363,
        "based": 0.04432422071779363,
        "retrieval": 0.04432422071779363,
        "mvp": 0.04432422071779363,
        "tree": 0.04432422071779363,
        "sitter": 0.04432422071779363,
        "adds": 0.04432422071779363,
        "power": 0.04432422071779363,
        "but": 0.04432422071779363,
        "increases": 0.04432422071779363,
        "footprint": 0.04432422071779363,
        "gate": 0.04432422071779363,
        "behind": 0.04432422071779363,
        "flag": 0.04432422071779363,
        "pr": 0.08864844143558726,
        "author": 0.04432422071779363,
        "bot": 0.04432422071779363,
        "account": 0.04432422071779363,
        "developer": 0.04432422071779363,
        "token": 0.04432422071779363,
        "decide": 0.04432422071779363,
        "per": 0.04432422071779363,
        "environment": 0.04432422071779363,
        "markdown": 0.04432422071779363,
        "diffs": 0.04432422071779363,
        "keep": 0.04432422071779363,
        "sections": 0.04432422071779363,
        "atomic": 0.04432422071779363,
        "minimize": 0.04432422071779363,
        "noisy": 0.04432422071779363,
        "prs": 0.04432422071779363,
        "20": 0.04432422071779363,
        "example": 0.04432422071779363,
        "yml": 0.04432422071779363,
        "mixed": 0.04432422071779363,
        "repo": 0.04432422071779363,
        "yaml": 0.04432422071779363,
        "llm": 0.04432422071779363,
        "runner": 0.04432422071779363,
        "ollama": 0.04432422071779363,
        "llama3": 0.04432422071779363,
        "8b": 0.04432422071779363,
        "instruct": 0.04432422071779363,
        "temperature": 0.04432422071779363,
        "0": 0.04432422071779363,
        "15": 0.04432422071779363,
        "readme": 0.04432422071779363,
        "style": 0.04432422071779363,
        "comprehensive": 0.04432422071779363,
        "publish": 0.04432422071779363,
        "mode": 0.04432422071779363,
        "branch_prefix": 0.04432422071779363,
        "analyzers": 0.04432422071779363,
        "enabled": 0.04432422071779363,
        "language": 0.04432422071779363,
        "dependencies": 0.04432422071779363,
        "exclude_paths": 0.04432422071779363,
        "git": 0.04432422071779363,
        "node_modules": 0.04432422071779363,
        "dist": 0.04432422071779363,
        "target": 0.04432422071779363,
        "ci": 0.04432422071779363,
        "watched_globs": 0.04432422071779363
      },
      "text": "faq }} ## License {{ license }} ``` --- ## 18) Minimal Python Snippets **Change impact heuristic** ```python SECTION_RULES = [ (\"build_and_test\", [\"pom.xml\",\"build.gradle\",\"requirements.txt\",\"pyproject.toml\",\"package.json\"]), (\"deployment\", [\"Dockerfile\",\"k8s/\"]), (\"architecture\", [\"src/\",\"app/\",\"cmd/\"]), (\"features\", [\"src/\",\"app/\",\"cmd/\"]), ] def sections_from_diff(paths: list[str]) -> set[str]: out = set() for section, patterns in SECTION_RULES: if any(p for p in paths for pat in patterns if p.startswith(pat)): out.add(section) return out or {\"intro\"} # fall back to intro if uncertain ``` **Managed markers (patch)** ```python def replace_block(md: str, key: str, new: str) -> str: start = f\"<!-- docgen:begin:{key} -->\" end = f\"<!-- docgen:end:{key} -->\" if start in md and end in md: pre, rest = md.split(start, 1) _, post = rest.split(end, 1) return f\"{pre}{start}\\n{new}\\n{end}{post}\" return md # or insert markers if missing ``` --- ## 19) Open Questions / Trade-offs * **Embeddings**: Use a tiny local model vs. rule-based retrieval for MVP? * **Tree-sitter**: Adds power but increases footprint\u2014gate behind a flag. * **PR author**: Bot account vs. developer token\u2014decide per environment. * **Markdown diffs**: Keep sections atomic to minimize noisy PRs. --- ## 20) Example `.docgen.yml` for a Mixed Repo ```yaml llm: runner: \"ollama\" model: \"llama3:8b-instruct\" temperature: 0.15 readme: style: \"comprehensive\" publish: mode: \"pr\" branch_prefix: \"docgen/\" analyzers: enabled: [language, build, dependencies, patterns] exclude_paths: [\".git/\", \"node_modules/\", \"dist/\", \"target/\"] ci: watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" -",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#14",
      "vector": {
        "runner": 0.07715167498104596,
        "ollama": 0.1543033499620919,
        "model": 0.07715167498104596,
        "llama3": 0.07715167498104596,
        "8b": 0.07715167498104596,
        "instruct": 0.07715167498104596,
        "temperature": 0.07715167498104596,
        "0": 0.07715167498104596,
        "15": 0.07715167498104596,
        "readme": 0.1543033499620919,
        "style": 0.1543033499620919,
        "comprehensive": 0.07715167498104596,
        "publish": 0.07715167498104596,
        "mode": 0.07715167498104596,
        "pr": 0.1543033499620919,
        "branch_prefix": 0.07715167498104596,
        "docgen": 0.23145502494313785,
        "analyzers": 0.1543033499620919,
        "enabled": 0.07715167498104596,
        "language": 0.07715167498104596,
        "build": 0.1543033499620919,
        "dependencies": 0.07715167498104596,
        "patterns": 0.07715167498104596,
        "exclude_paths": 0.07715167498104596,
        "git": 0.07715167498104596,
        "node_modules": 0.07715167498104596,
        "dist": 0.07715167498104596,
        "target": 0.07715167498104596,
        "ci": 0.07715167498104596,
        "watched_globs": 0.07715167498104596,
        "src": 0.07715167498104596,
        "app": 0.07715167498104596,
        "cmd": 0.07715167498104596,
        "pom": 0.1543033499620919,
        "xml": 0.1543033499620919,
        "gradle": 0.07715167498104596,
        "package": 0.07715167498104596,
        "json": 0.07715167498104596,
        "requirements": 0.1543033499620919,
        "txt": 0.1543033499620919,
        "dockerfile": 0.07715167498104596,
        "21": 0.07715167498104596,
        "success": 0.07715167498104596,
        "criteria": 0.07715167498104596,
        "poc": 0.07715167498104596,
        "for": 0.07715167498104596,
        "3": 0.07715167498104596,
        "diverse": 0.07715167498104596,
        "repos": 0.07715167498104596,
        "python": 0.07715167498104596,
        "cli": 0.1543033499620919,
        "spring": 0.07715167498104596,
        "boot": 0.07715167498104596,
        "api": 0.07715167498104596,
        "node": 0.07715167498104596,
        "webapp": 0.07715167498104596,
        "init": 0.1543033499620919,
        "produces": 0.07715167498104596,
        "a": 0.23145502494313785,
        "working": 0.07715167498104596,
        "linted": 0.07715167498104596,
        "with": 0.07715167498104596,
        "runnable": 0.07715167498104596,
        "quick": 0.07715167498104596,
        "start": 0.07715167498104596,
        "on": 0.07715167498104596,
        "changing": 0.07715167498104596,
        "or": 0.07715167498104596,
        "updates": 0.07715167498104596,
        "only": 0.07715167498104596,
        "relevant": 0.07715167498104596,
        "sections": 0.07715167498104596,
        "no": 0.07715167498104596,
        "hallucinated": 0.07715167498104596,
        "commands": 0.07715167498104596,
        "links": 0.07715167498104596,
        "and": 0.23145502494313785,
        "badges": 0.07715167498104596,
        "validate": 0.07715167498104596,
        "consistent": 0.07715167498104596,
        "if": 0.07715167498104596,
        "you": 0.1543033499620919,
        "want": 0.07715167498104596,
        "i": 0.07715167498104596,
        "can": 0.1543033499620919,
        "spin": 0.07715167498104596,
        "up": 0.07715167498104596,
        "starter": 0.07715167498104596,
        "repo": 0.07715167498104596,
        "layout": 0.07715167498104596,
        "templates": 0.07715167498104596,
        "simple": 0.07715167498104596,
        "adapter": 0.07715167498104596,
        "so": 0.07715167498104596,
        "drop": 0.07715167498104596,
        "it": 0.07715167498104596,
        "into": 0.07715167498104596,
        "your": 0.07715167498104596,
        "environment": 0.07715167498104596,
        "run": 0.07715167498104596,
        "right": 0.07715167498104596,
        "away": 0.07715167498104596
      },
      "text": "runner: \"ollama\" model: \"llama3:8b-instruct\" temperature: 0.15 readme: style: \"comprehensive\" publish: mode: \"pr\" branch_prefix: \"docgen/\" analyzers: enabled: [language, build, dependencies, patterns] exclude_paths: [\".git/\", \"node_modules/\", \"dist/\", \"target/\"] ci: watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" - \"requirements.txt\" - \"Dockerfile\" ``` --- ## 21) Success Criteria (POC) * For 3 diverse repos (Python CLI, Spring Boot API, Node webapp): * `docgen init` produces a working, linted README with runnable Quick Start. * On changing `pom.xml` or `requirements.txt`, PR updates only relevant sections. * No hallucinated commands; links and badges validate; style consistent. --- If you want, I can spin up a **starter repo layout** (CLI, analyzers, templates, and a simple Ollama adapter) so you can drop it into your environment and run `docgen init` right away.",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "docgen/prompting/builder.py#0",
      "vector": {
        "builds": 0.039374961547907886,
        "prompts": 0.07874992309581577,
        "and": 0.23624976928744731,
        "templates": 0.07874992309581577,
        "for": 0.11812488464372366,
        "the": 0.07874992309581577,
        "local": 0.039374961547907886,
        "llm": 0.11812488464372366,
        "from": 0.3937496154790789,
        "__future__": 0.039374961547907886,
        "import": 0.3937496154790789,
        "annotations": 0.039374961547907886,
        "collections": 0.039374961547907886,
        "defaultdict": 0.039374961547907886,
        "dataclasses": 0.039374961547907886,
        "dataclass": 0.15749984619163154,
        "field": 0.07874992309581577,
        "json": 0.039374961547907886,
        "pathlib": 0.039374961547907886,
        "path": 0.07874992309581577,
        "typing": 0.039374961547907886,
        "dict": 0.19687480773953944,
        "iterable": 0.039374961547907886,
        "list": 0.07874992309581577,
        "sequence": 0.039374961547907886,
        "tuple": 0.039374961547907886,
        "try": 0.039374961547907886,
        "pragma": 0.07874992309581577,
        "no": 0.07874992309581577,
        "cover": 0.07874992309581577,
        "optional": 0.07874992309581577,
        "dependency": 0.07874992309581577,
        "jinja2": 0.039374961547907886,
        "environment": 0.11812488464372366,
        "filesystemloader": 0.039374961547907886,
        "templatenotfound": 0.07874992309581577,
        "except": 0.039374961547907886,
        "modulenotfounderror": 0.039374961547907886,
        "none": 0.07874992309581577,
        "exception": 0.039374961547907886,
        "type": 0.039374961547907886,
        "ignore": 0.039374961547907886,
        "assignment": 0.039374961547907886,
        "models": 0.039374961547907886,
        "repomanifest": 0.039374961547907886,
        "signal": 0.039374961547907886,
        "postproc": 0.039374961547907886,
        "toc": 0.039374961547907886,
        "tableofcontentsbuilder": 0.039374961547907886,
        "constants": 0.039374961547907886,
        "default_sections": 0.039374961547907886,
        "section_titles": 0.039374961547907886,
        "_role_descriptions": 0.039374961547907886,
        "str": 0.3937496154790789,
        "src": 0.039374961547907886,
        "primary": 0.039374961547907886,
        "application": 0.039374961547907886,
        "library": 0.039374961547907886,
        "code": 0.07874992309581577,
        "test": 0.039374961547907886,
        "automated": 0.039374961547907886,
        "tests": 0.039374961547907886,
        "that": 0.039374961547907886,
        "guard": 0.039374961547907886,
        "behaviour": 0.039374961547907886,
        "docs": 0.039374961547907886,
        "project": 0.039374961547907886,
        "documentation": 0.07874992309581577,
        "assets": 0.039374961547907886,
        "config": 0.039374961547907886,
        "configuration": 0.039374961547907886,
        "infrastructure": 0.07874992309581577,
        "files": 0.039374961547907886,
        "infra": 0.039374961547907886,
        "as": 0.039374961547907886,
        "or": 0.07874992309581577,
        "definitions": 0.039374961547907886,
        "examples": 0.039374961547907886,
        "example": 0.039374961547907886,
        "usages": 0.039374961547907886,
        "samples": 0.039374961547907886,
        "class": 0.15749984619163154,
        "section": 0.19687480773953944,
        "rendered": 0.039374961547907886,
        "readme": 0.07874992309581577,
        "details": 0.039374961547907886,
        "name": 0.039374961547907886,
        "title": 0.039374961547907886,
        "body": 0.039374961547907886,
        "metadata": 0.07874992309581577,
        "object": 0.07874992309581577,
        "frozen": 0.039374961547907886,
        "true": 0.039374961547907886,
        "promptmessage": 0.07874992309581577,
        "represents": 0.039374961547907886,
        "a": 0.11812488464372366,
        "single": 0.039374961547907886,
        "chat": 0.039374961547907886,
        "message": 0.039374961547907886,
        "prompting": 0.039374961547907886,
        "role": 0.039374961547907886,
        "content": 0.039374961547907886,
        "promptrequest": 0.039374961547907886,
        "encapsulates": 0.039374961547907886,
        "an": 0.039374961547907886,
        "prompt": 0.039374961547907886,
        "request": 0.039374961547907886,
        "messages": 0.039374961547907886,
        "max_tokens": 0.039374961547907886,
        "int": 0.039374961547907886,
        "default_factory": 0.039374961547907886,
        "promptbuilder": 0.039374961547907886,
        "assembles": 0.039374961547907886,
        "aware": 0.039374961547907886,
        "signals": 0.039374961547907886,
        "system_prompt": 0.039374961547907886,
        "you": 0.039374961547907886,
        "are": 0.039374961547907886,
        "senior": 0.039374961547907886,
        "developer": 0.039374961547907886,
        "writer": 0.039374961547907886,
        "stay": 0.039374961547907886,
        "grounded": 0.039374961547907886,
        "in": 0.039374961547907886,
        "repository": 0.039374961547907886,
        "facts": 0.039374961547907886,
        "follow": 0.039374961547907886,
        "requested": 0.039374961547907886,
        "outline": 0.039374961547907886,
        "keep": 0.039374961547907886,
        "explanations": 0.039374961547907886,
        "crisp": 0.039374961547907886,
        "never": 0.039374961547907886,
        "invent": 0.039374961547907886,
        "commands": 0.039374961547907886,
        "tools": 0.039374961547907886,
        "def": 0.039374961547907886,
        "__init__": 0.039374961547907886,
        "self": 0.039374961547907886,
        "templates_dir": 0.039374961547907886
      },
      "text": "\"\"\"Builds prompts and templates for the local LLM.\"\"\" from __future__ import annotations from collections import defaultdict from dataclasses import dataclass, field import json from pathlib import Path from typing import Dict, Iterable, List, Sequence, Tuple try: # pragma: no cover - optional dependency from jinja2 import Environment, FileSystemLoader, TemplateNotFound except ModuleNotFoundError: # pragma: no cover - optional dependency Environment = None TemplateNotFound = Exception # type: ignore[assignment] from ..models import RepoManifest, Signal from ..postproc.toc import TableOfContentsBuilder from .constants import DEFAULT_SECTIONS, SECTION_TITLES _ROLE_DESCRIPTIONS: Dict[str, str] = { \"src\": \"Primary application and library code\", \"test\": \"Automated tests that guard behaviour\", \"docs\": \"Project documentation assets\", \"config\": \"Configuration and infrastructure files\", \"infra\": \"Infrastructure as code or environment definitions\", \"examples\": \"Example usages and samples\", } @dataclass class Section: \"\"\"Rendered README section details.\"\"\" name: str title: str body: str metadata: Dict[str, object] @dataclass(frozen=True) class PromptMessage: \"\"\"Represents a single chat message for LLM prompting.\"\"\" role: str content: str @dataclass class PromptRequest: \"\"\"Encapsulates an LLM prompt request for a README section.\"\"\" section: str messages: List[PromptMessage] max_tokens: int | None metadata: Dict[str, object] = field(default_factory=dict) class PromptBuilder: \"\"\"Assembles section-aware prompts from templates and signals.\"\"\" SYSTEM_PROMPT = ( \"You are a senior developer documentation writer. Stay grounded in repository facts. \" \"Follow the requested outline, keep explanations crisp, and never invent commands or tools.\" ) def __init__( self, templates_dir: Path",
      "metadata": {
        "path": "docgen/prompting/builder.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "b61b4aa2e5ec913b530ea7cfc1709db70994df86841055e513eb4d87c4136020"
      }
    },
    {
      "id": "docgen/prompting/builder.py#1",
      "vector": {
        "prompts": 0.14907119849998599,
        "from": 0.14907119849998599,
        "templates": 0.14907119849998599,
        "and": 0.29814239699997197,
        "signals": 0.14907119849998599,
        "system_prompt": 0.14907119849998599,
        "you": 0.14907119849998599,
        "are": 0.14907119849998599,
        "a": 0.14907119849998599,
        "senior": 0.14907119849998599,
        "developer": 0.14907119849998599,
        "documentation": 0.14907119849998599,
        "writer": 0.14907119849998599,
        "stay": 0.14907119849998599,
        "grounded": 0.14907119849998599,
        "in": 0.14907119849998599,
        "repository": 0.14907119849998599,
        "facts": 0.14907119849998599,
        "follow": 0.14907119849998599,
        "the": 0.14907119849998599,
        "requested": 0.14907119849998599,
        "outline": 0.14907119849998599,
        "keep": 0.14907119849998599,
        "explanations": 0.14907119849998599,
        "crisp": 0.14907119849998599,
        "never": 0.14907119849998599,
        "invent": 0.14907119849998599,
        "commands": 0.14907119849998599,
        "or": 0.14907119849998599,
        "tools": 0.14907119849998599,
        "def": 0.14907119849998599,
        "__init__": 0.14907119849998599,
        "self": 0.14907119849998599,
        "templates_dir": 0.14907119849998599,
        "path": 0.14907119849998599,
        "none": 0.29814239699997197,
        "style": 0.14907119849998599,
        "str": 0.14907119849998599,
        "non": 0.14907119849998599
      },
      "text": "prompts from templates and signals.\"\"\" SYSTEM_PROMPT = ( \"You are a senior developer documentation writer. Stay grounded in repository facts. \" \"Follow the requested outline, keep explanations crisp, and never invent commands or tools.\" ) def __init__( self, templates_dir: Path | None = None, *, style: str | Non",
      "metadata": {
        "path": "docgen/prompting/builder.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "b61b4aa2e5ec913b530ea7cfc1709db70994df86841055e513eb4d87c4136020"
      }
    },
    {
      "id": "docgen/orchestrator.py#0",
      "vector": {
        "pipeline": 0.022750787759664503,
        "orchestration": 0.022750787759664503,
        "for": 0.022750787759664503,
        "init": 0.022750787759664503,
        "update": 0.045501575519329006,
        "regenerate": 0.022750787759664503,
        "flows": 0.022750787759664503,
        "from": 0.5687696939916126,
        "__future__": 0.022750787759664503,
        "import": 0.7052744205495997,
        "annotations": 0.022750787759664503,
        "hashlib": 0.022750787759664503,
        "inspect": 0.022750787759664503,
        "json": 0.022750787759664503,
        "logging": 0.045501575519329006,
        "os": 0.022750787759664503,
        "dataclasses": 0.022750787759664503,
        "dataclass": 0.045501575519329006,
        "datetime": 0.045501575519329006,
        "utc": 0.022750787759664503,
        "difflib": 0.022750787759664503,
        "pathlib": 0.022750787759664503,
        "path": 0.0682523632789935,
        "typing": 0.022750787759664503,
        "dict": 0.022750787759664503,
        "iterable": 0.045501575519329006,
        "list": 0.022750787759664503,
        "mapping": 0.022750787759664503,
        "optional": 0.045501575519329006,
        "sequence": 0.022750787759664503,
        "cast": 0.022750787759664503,
        "analyzers": 0.045501575519329006,
        "analyzer": 0.045501575519329006,
        "discover_analyzers": 0.022750787759664503,
        "config": 0.022750787759664503,
        "configerror": 0.022750787759664503,
        "docgenconfig": 0.022750787759664503,
        "llmconfig": 0.022750787759664503,
        "load_config": 0.022750787759664503,
        "failsafe": 0.022750787759664503,
        "build_readme_stub": 0.022750787759664503,
        "build_section_stubs": 0.022750787759664503,
        "git": 0.045501575519329006,
        "diff": 0.045501575519329006,
        "diffanalyzer": 0.022750787759664503,
        "diffresult": 0.022750787759664503,
        "_pattern_matches": 0.022750787759664503,
        "as": 0.045501575519329006,
        "diff_pattern_matches": 0.022750787759664503,
        "publisher": 0.09100315103865801,
        "get_logger": 0.022750787759664503,
        "models": 0.022750787759664503,
        "repomanifest": 0.022750787759664503,
        "signal": 0.022750787759664503,
        "postproc": 0.136504726557987,
        "lint": 0.022750787759664503,
        "markdownlinter": 0.045501575519329006,
        "markers": 0.022750787759664503,
        "markermanager": 0.022750787759664503,
        "toc": 0.022750787759664503,
        "tableofcontentsbuilder": 0.045501575519329006,
        "badges": 0.022750787759664503,
        "badgemanager": 0.022750787759664503,
        "links": 0.022750787759664503,
        "linkvalidator": 0.022750787759664503,
        "scorecard": 0.022750787759664503,
        "readmescorecard": 0.022750787759664503,
        "llm": 0.022750787759664503,
        "runner": 0.022750787759664503,
        "llmrunner": 0.022750787759664503,
        "prompting": 0.045501575519329006,
        "builder": 0.022750787759664503,
        "promptbuilder": 0.045501575519329006,
        "section": 0.022750787759664503,
        "constants": 0.022750787759664503,
        "default_sections": 0.022750787759664503,
        "section_titles": 0.022750787759664503,
        "rag": 0.022750787759664503,
        "indexer": 0.022750787759664503,
        "ragindexer": 0.022750787759664503,
        "repo_scanner": 0.022750787759664503,
        "reposcanner": 0.045501575519329006,
        "stores": 0.022750787759664503,
        "analyzercache": 0.022750787759664503,
        "validators": 0.022750787759664503,
        "nohallucinationvalidator": 0.022750787759664503,
        "validationcontext": 0.022750787759664503,
        "validationerror": 0.022750787759664503,
        "validationissue": 0.022750787759664503,
        "validator": 0.022750787759664503,
        "build_evidence_index": 0.022750787759664503,
        "class": 0.045501575519329006,
        "updateoutcome": 0.022750787759664503,
        "result": 0.022750787759664503,
        "of": 0.022750787759664503,
        "a": 0.022750787759664503,
        "readme": 0.022750787759664503,
        "operation": 0.022750787759664503,
        "str": 0.022750787759664503,
        "dry_run": 0.022750787759664503,
        "bool": 0.022750787759664503,
        "orchestrator": 0.022750787759664503,
        "coordinates": 0.022750787759664503,
        "doc": 0.022750787759664503,
        "generation": 0.022750787759664503,
        "pipelines": 0.022750787759664503,
        "described": 0.022750787759664503,
        "in": 0.022750787759664503,
        "the": 0.022750787759664503,
        "spec": 0.022750787759664503,
        "def": 0.022750787759664503,
        "__init__": 0.022750787759664503,
        "self": 0.022750787759664503,
        "scanner": 0.022750787759664503,
        "none": 0.25025866535630953,
        "prompt_builder": 0.022750787759664503,
        "linter": 0.022750787759664503,
        "toc_builder": 0.022750787759664503,
        "rag_in": 0.022750787759664503
      },
      "text": "\"\"\"Pipeline orchestration for init/update/regenerate flows.\"\"\" from __future__ import annotations import hashlib import inspect import json import logging import os from dataclasses import dataclass from datetime import UTC, datetime import difflib from pathlib import Path from typing import Dict, Iterable, List, Mapping, Optional, Sequence, cast from .analyzers import Analyzer, discover_analyzers from .config import ConfigError, DocGenConfig, LLMConfig, load_config from .failsafe import build_readme_stub, build_section_stubs from .git.diff import DiffAnalyzer, DiffResult, _pattern_matches as diff_pattern_matches from .git.publisher import Publisher from .logging import get_logger from .models import RepoManifest, Signal from .postproc.lint import MarkdownLinter from .postproc.markers import MarkerManager from .postproc.toc import TableOfContentsBuilder from .postproc.badges import BadgeManager from .postproc.links import LinkValidator from .postproc.scorecard import ReadmeScorecard from .llm.runner import LLMRunner from .prompting.builder import PromptBuilder, Section from .prompting.constants import DEFAULT_SECTIONS, SECTION_TITLES from .rag.indexer import RAGIndexer from .repo_scanner import RepoScanner from .stores import AnalyzerCache from .validators import ( NoHallucinationValidator, ValidationContext, ValidationError, ValidationIssue, Validator, build_evidence_index, ) @dataclass class UpdateOutcome: \"\"\"Result of a README update operation.\"\"\" path: Path diff: str dry_run: bool class Orchestrator: \"\"\"Coordinates doc generation pipelines as described in the spec.\"\"\" def __init__( self, scanner: RepoScanner | None = None, analyzers: Optional[Iterable[Analyzer]] = None, prompt_builder: PromptBuilder | None = None, publisher: Publisher | None = None, linter: MarkdownLinter | None = None, toc_builder: TableOfContentsBuilder | None = None, rag_in",
      "metadata": {
        "path": "docgen/orchestrator.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "310d781a9aeb95c49a0bb5542ed5b4bdebd1c951c5c2b0f49170b730b8369e2e"
      }
    },
    {
      "id": "docgen/config.py#0",
      "vector": {
        "configuration": 0.0564782494724905,
        "loading": 0.02823912473624525,
        "for": 0.0564782494724905,
        "docgen": 0.112956498944981,
        "yml": 0.08471737420873575,
        "from": 0.14119562368122626,
        "__future__": 0.02823912473624525,
        "import": 0.14119562368122626,
        "annotations": 0.02823912473624525,
        "dataclasses": 0.02823912473624525,
        "dataclass": 0.19767387315371676,
        "field": 0.225912997889962,
        "pathlib": 0.02823912473624525,
        "path": 0.08471737420873575,
        "typing": 0.02823912473624525,
        "any": 0.02823912473624525,
        "dict": 0.02823912473624525,
        "list": 0.31063037209869776,
        "optional": 0.4800651205161693,
        "sequence": 0.02823912473624525,
        "try": 0.02823912473624525,
        "pragma": 0.0564782494724905,
        "no": 0.0564782494724905,
        "cover": 0.0564782494724905,
        "dependency": 0.0564782494724905,
        "yaml": 0.02823912473624525,
        "as": 0.02823912473624525,
        "_yaml": 0.0564782494724905,
        "type": 0.02823912473624525,
        "ignore": 0.02823912473624525,
        "except": 0.02823912473624525,
        "modulenotfounderror": 0.02823912473624525,
        "none": 0.42358687104367876,
        "class": 0.19767387315371676,
        "configerror": 0.02823912473624525,
        "runtimeerror": 0.02823912473624525,
        "raised": 0.02823912473624525,
        "when": 0.02823912473624525,
        "the": 0.0564782494724905,
        "file": 0.02823912473624525,
        "cannot": 0.02823912473624525,
        "be": 0.02823912473624525,
        "parsed": 0.02823912473624525,
        "llmconfig": 0.0564782494724905,
        "llm": 0.0564782494724905,
        "runtime": 0.02823912473624525,
        "settings": 0.08471737420873575,
        "runner": 0.02823912473624525,
        "str": 0.3671086215711883,
        "model": 0.02823912473624525,
        "executable": 0.02823912473624525,
        "temperature": 0.02823912473624525,
        "float": 0.0564782494724905,
        "max_tokens": 0.02823912473624525,
        "int": 0.02823912473624525,
        "base_url": 0.02823912473624525,
        "api_key": 0.02823912473624525,
        "request_timeout": 0.02823912473624525,
        "publishconfig": 0.0564782494724905,
        "publish": 0.0564782494724905,
        "strategy": 0.02823912473624525,
        "readme": 0.02823912473624525,
        "updates": 0.02823912473624525,
        "mode": 0.02823912473624525,
        "branch_prefix": 0.02823912473624525,
        "labels": 0.02823912473624525,
        "default_factory": 0.19767387315371676,
        "update_existing": 0.02823912473624525,
        "bool": 0.0564782494724905,
        "false": 0.02823912473624525,
        "analyzerconfig": 0.08471737420873575,
        "analyzer": 0.02823912473624525,
        "enablement": 0.02823912473624525,
        "and": 0.02823912473624525,
        "exclusions": 0.02823912473624525,
        "enabled": 0.02823912473624525,
        "exclude_paths": 0.0564782494724905,
        "ciconfig": 0.08471737420873575,
        "continuous": 0.02823912473624525,
        "integration": 0.02823912473624525,
        "triggers": 0.02823912473624525,
        "watched_globs": 0.02823912473624525,
        "validationconfig": 0.02823912473624525,
        "validation": 0.02823912473624525,
        "related": 0.02823912473624525,
        "no_hallucination": 0.02823912473624525,
        "true": 0.02823912473624525,
        "docgenconfig": 0.02823912473624525,
        "represents": 0.02823912473624525,
        "high": 0.02823912473624525,
        "level": 0.02823912473624525,
        "defined": 0.02823912473624525,
        "in": 0.02823912473624525,
        "root": 0.02823912473624525,
        "readme_style": 0.02823912473624525,
        "analyzers": 0.02823912473624525,
        "ci": 0.02823912473624525,
        "templates_dir": 0.02823912473624525,
        "temp": 0.02823912473624525
      },
      "text": "\"\"\"Configuration loading for docgen (.docgen.yml).\"\"\" from __future__ import annotations from dataclasses import dataclass, field from pathlib import Path from typing import Any, Dict, List, Optional, Sequence try: # pragma: no cover - optional dependency import yaml as _yaml # type: ignore except ModuleNotFoundError: # pragma: no cover - optional dependency _yaml = None class ConfigError(RuntimeError): \"\"\"Raised when the configuration file cannot be parsed.\"\"\" @dataclass class LLMConfig: \"\"\"LLM runtime settings from .docgen.yml.\"\"\" runner: Optional[str] = None model: Optional[str] = None executable: Optional[str] = None temperature: Optional[float] = None max_tokens: Optional[int] = None base_url: Optional[str] = None api_key: Optional[str] = None request_timeout: Optional[float] = None @dataclass class PublishConfig: \"\"\"Publish strategy for README updates.\"\"\" mode: Optional[str] = None branch_prefix: Optional[str] = None labels: List[str] = field(default_factory=list) update_existing: bool = False @dataclass class AnalyzerConfig: \"\"\"Analyzer enablement and exclusions.\"\"\" enabled: List[str] = field(default_factory=list) exclude_paths: List[str] = field(default_factory=list) @dataclass class CIConfig: \"\"\"Continuous integration triggers.\"\"\" watched_globs: List[str] = field(default_factory=list) @dataclass class ValidationConfig: \"\"\"Validation related settings.\"\"\" no_hallucination: bool = True @dataclass class DocGenConfig: \"\"\"Represents the high-level settings defined in .docgen.yml.\"\"\" root: Path llm: Optional[LLMConfig] = None readme_style: Optional[str] = None analyzers: AnalyzerConfig = field(default_factory=AnalyzerConfig) publish: Optional[PublishConfig] = None ci: CIConfig = field(default_factory=CIConfig) exclude_paths: List[str] = field(default_factory=list) templates_dir: Optional[Path] = None temp",
      "metadata": {
        "path": "docgen/config.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "42fb0dc835b55915141d615a99ce73c3e7c8524ac52326446fabbfc39313e0ce"
      }
    },
    {
      "id": "docgen/analyzers/endpoints/detectors.py#0",
      "vector": {
        "built": 0.03140371465106639,
        "in": 0.09421114395319916,
        "endpoint": 0.12561485860426555,
        "detectors": 0.06280742930213278,
        "from": 0.21982600255746468,
        "__future__": 0.03140371465106639,
        "import": 0.1884222879063983,
        "annotations": 0.03140371465106639,
        "json": 0.12561485860426555,
        "re": 0.21982600255746468,
        "pathlib": 0.03140371465106639,
        "path": 0.5966705783702613,
        "typing": 0.09421114395319916,
        "iterable": 0.09421114395319916,
        "iterator": 0.03140371465106639,
        "optional": 0.06280742930213278,
        "core": 0.03140371465106639,
        "endpointdetector": 0.06280742930213278,
        "join_paths": 0.03140371465106639,
        "line_of": 0.03140371465106639,
        "def": 0.12561485860426555,
        "_read_text": 0.06280742930213278,
        "root": 0.28263343185959744,
        "relative": 0.12561485860426555,
        "str": 0.09421114395319916,
        "try": 0.03140371465106639,
        "if": 0.09421114395319916,
        "exists": 0.03140371465106639,
        "and": 0.03140371465106639,
        "is_file": 0.03140371465106639,
        "return": 0.12561485860426555,
        "read_text": 0.03140371465106639,
        "encoding": 0.03140371465106639,
        "utf": 0.03140371465106639,
        "8": 0.03140371465106639,
        "errors": 0.03140371465106639,
        "ignore": 0.03140371465106639,
        "except": 0.03140371465106639,
        "oserror": 0.03140371465106639,
        "none": 0.09421114395319916,
        "specification": 0.06280742930213278,
        "openapi": 0.06280742930213278,
        "postman": 0.03140371465106639,
        "insomnia": 0.06280742930213278,
        "_spec_pattern": 0.09421114395319916,
        "compile": 0.09421114395319916,
        "r": 0.09421114395319916,
        "swagger": 0.03140371465106639,
        "ya": 0.03140371465106639,
        "ml": 0.03140371465106639,
        "ignorecase": 0.09421114395319916,
        "_postman_pattern": 0.09421114395319916,
        "postman_collection": 0.03140371465106639,
        "_insomnia_pattern": 0.09421114395319916,
        "class": 0.03140371465106639,
        "specdetector": 0.03140371465106639,
        "parse": 0.03140371465106639,
        "api": 0.03140371465106639,
        "files": 0.09421114395319916,
        "when": 0.03140371465106639,
        "available": 0.03140371465106639,
        "supports_repo": 0.03140371465106639,
        "self": 0.1884222879063983,
        "manifest": 0.15701857325533192,
        "bool": 0.03140371465106639,
        "noqa": 0.06280742930213278,
        "ann001": 0.06280742930213278,
        "dynamic": 0.06280742930213278,
        "any": 0.03140371465106639,
        "search": 0.1884222879063983,
        "file": 0.1884222879063983,
        "or": 0.06280742930213278,
        "for": 0.06280742930213278,
        "extract": 0.03140371465106639,
        "yield": 0.09421114395319916,
        "_from_openapi": 0.06280742930213278,
        "elif": 0.06280742930213278,
        "_from_postman": 0.03140371465106639,
        "_from_insomnia": 0.03140371465106639,
        "text": 0.06280742930213278,
        "is": 0.03140371465106639,
        "retu": 0.03140371465106639
      },
      "text": "\"\"\"Built-in endpoint detectors.\"\"\" from __future__ import annotations import json import re from pathlib import Path from typing import Iterable, Iterator, Optional from .core import Endpoint, EndpointDetector, join_paths, line_of def _read_text(root: Path, relative: str) -> Optional[str]: path = root / relative try: if path.exists() and path.is_file(): return path.read_text(encoding=\"utf-8\", errors=\"ignore\") except OSError: return None return None # --------------------------------------------------------------------------- # Specification detectors (OpenAPI / Postman / Insomnia) # --------------------------------------------------------------------------- _SPEC_PATTERN = re.compile(r\"(openapi|swagger).*?\\.(json|ya?ml)$\", re.IGNORECASE) _POSTMAN_PATTERN = re.compile(r\"postman_collection\\.json$\", re.IGNORECASE) _INSOMNIA_PATTERN = re.compile(r\"insomnia.*\\.json$\", re.IGNORECASE) class SpecDetector(EndpointDetector): \"\"\"Parse API specification files when available.\"\"\" def supports_repo(self, manifest) -> bool: # noqa: ANN001 - dynamic typing return any( _SPEC_PATTERN.search(file.path) or _POSTMAN_PATTERN.search(file.path) or _INSOMNIA_PATTERN.search(file.path) for file in manifest.files ) def extract(self, manifest) -> Iterable[Endpoint]: # noqa: ANN001 - dynamic typing root = Path(manifest.root) for file in manifest.files: path = file.path if _SPEC_PATTERN.search(path): yield from self._from_openapi(root, path) elif _POSTMAN_PATTERN.search(path): yield from self._from_postman(root, path) elif _INSOMNIA_PATTERN.search(path): yield from self._from_insomnia(root, path) def _from_openapi(self, root: Path, relative: str) -> Iterable[Endpoint]: text = _read_text(root, relative) if text is None: retu",
      "metadata": {
        "path": "docgen/analyzers/endpoints/detectors.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "ea2e81889bfad4bc475da4832b8ffe4b022f89c4586f000a1ff4bbab158f427a"
      }
    },
    {
      "id": "docgen/llm/runner.py#0",
      "vector": {
        "adapters": 0.03477340712103605,
        "around": 0.03477340712103605,
        "local": 0.10432022136310813,
        "model": 0.2781872569682884,
        "runtimes": 0.03477340712103605,
        "runner": 0.1390936284841442,
        "ollama": 0.0695468142420721,
        "from": 0.20864044272621626,
        "__future__": 0.03477340712103605,
        "import": 0.34773407121036043,
        "annotations": 0.03477340712103605,
        "ipaddress": 0.03477340712103605,
        "json": 0.03477340712103605,
        "os": 0.03477340712103605,
        "subprocess": 0.03477340712103605,
        "dataclasses": 0.03477340712103605,
        "dataclass": 0.0695468142420721,
        "typing": 0.03477340712103605,
        "callable": 0.0695468142420721,
        "optional": 0.3825074783313965,
        "sequence": 0.03477340712103605,
        "urllib": 0.10432022136310813,
        "error": 0.03477340712103605,
        "httperror": 0.03477340712103605,
        "urlerror": 0.03477340712103605,
        "parse": 0.03477340712103605,
        "urlparse": 0.03477340712103605,
        "request": 0.10432022136310813,
        "urlopen": 0.03477340712103605,
        "_auto_base_url": 0.0695468142420721,
        "object": 0.1390936284841442,
        "_auto_api_key": 0.0695468142420721,
        "class": 0.0695468142420721,
        "llmrequest": 0.0695468142420721,
        "represents": 0.03477340712103605,
        "an": 0.03477340712103605,
        "inference": 0.03477340712103605,
        "for": 0.03477340712103605,
        "the": 0.0695468142420721,
        "prompt": 0.03477340712103605,
        "str": 0.3825074783313965,
        "system": 0.03477340712103605,
        "temperature": 0.1390936284841442,
        "float": 0.1390936284841442,
        "max_tokens": 0.1390936284841442,
        "int": 0.0695468142420721,
        "executable": 0.1390936284841442,
        "base_url": 0.1390936284841442,
        "api_key": 0.0695468142420721,
        "request_timeout": 0.0695468142420721,
        "llmrunner": 0.03477340712103605,
        "executes": 0.03477340712103605,
        "prompts": 0.03477340712103605,
        "against": 0.03477340712103605,
        "configured": 0.03477340712103605,
        "runtime": 0.03477340712103605,
        "default_model": 0.03477340712103605,
        "ai": 0.03477340712103605,
        "smollm2": 0.03477340712103605,
        "360m": 0.03477340712103605,
        "q4_k_m": 0.03477340712103605,
        "default_base_urls": 0.03477340712103605,
        "http": 0.0695468142420721,
        "localhost": 0.03477340712103605,
        "12434": 0.03477340712103605,
        "engines": 0.0695468142420721,
        "v1": 0.0695468142420721,
        "docker": 0.03477340712103605,
        "internal": 0.03477340712103605,
        "env_model_keys": 0.03477340712103605,
        "docgen_llm_model": 0.03477340712103605,
        "model_runner_model": 0.03477340712103605,
        "openai_model": 0.03477340712103605,
        "env_base_url_keys": 0.03477340712103605,
        "docgen_llm_base_url": 0.03477340712103605,
        "model_runner_base_url": 0.03477340712103605,
        "openai_base_url": 0.03477340712103605,
        "env_api_key_keys": 0.03477340712103605,
        "docgen_llm_api_key": 0.03477340712103605,
        "model_runner_api_key": 0.03477340712103605,
        "openai_api_key": 0.03477340712103605,
        "def": 0.03477340712103605,
        "__init__": 0.03477340712103605,
        "self": 0.2781872569682884,
        "none": 0.2781872569682884,
        "0": 0.0695468142420721,
        "2": 0.03477340712103605,
        "60": 0.03477340712103605,
        "_resolve_model": 0.03477340712103605,
        "_resolve_base_url": 0.03477340712103605
      },
      "text": "\"\"\"Adapters around local model runtimes (Model Runner / Ollama).\"\"\" from __future__ import annotations import ipaddress import json import os import subprocess from dataclasses import dataclass from typing import Callable, Optional, Sequence from urllib.error import HTTPError, URLError from urllib.parse import urlparse from urllib.request import Request, urlopen _AUTO_BASE_URL = object() _AUTO_API_KEY = object() @dataclass class LLMRequest: \"\"\"Represents an inference request for the local runner.\"\"\" prompt: str system: Optional[str] model: str temperature: Optional[float] max_tokens: Optional[int] executable: Optional[str] base_url: Optional[str] api_key: Optional[str] request_timeout: Optional[float] class LLMRunner: \"\"\"Executes prompts against the configured local model runtime.\"\"\" DEFAULT_MODEL = \"ai/smollm2:360M-Q4_K_M\" DEFAULT_BASE_URLS = ( \"http://localhost:12434/engines/v1\", \"http://model-runner.docker.internal/engines/v1\", ) ENV_MODEL_KEYS = (\"DOCGEN_LLM_MODEL\", \"MODEL_RUNNER_MODEL\", \"OPENAI_MODEL\") ENV_BASE_URL_KEYS = ( \"DOCGEN_LLM_BASE_URL\", \"MODEL_RUNNER_BASE_URL\", \"OPENAI_BASE_URL\", ) ENV_API_KEY_KEYS = ( \"DOCGEN_LLM_API_KEY\", \"MODEL_RUNNER_API_KEY\", \"OPENAI_API_KEY\", ) def __init__( self, model: str | None = None, *, base_url: str | None | object = _AUTO_BASE_URL, executable: str = \"ollama\", temperature: Optional[float] = 0.2, max_tokens: Optional[int] = None, api_key: str | None | object = _AUTO_API_KEY, request_timeout: Optional[float] = 60.0, runner: Callable[[LLMRequest], str] | None = None, ) -> None: self.model = self._resolve_model(model) self.base_url = self._resolve_base_url(base_url) self.executable = executable self.temperature = temperature self.max_tokens = max_tokens",
      "metadata": {
        "path": "docgen/llm/runner.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "c7388b0b628144f852bedd5c6bbc861437021fedd7b92b47ce7d80a1c4ca55aa"
      }
    },
    {
      "id": "docgen/analyzers/entrypoints.py#0",
      "vector": {
        "analyzer": 0.1138784427001685,
        "to": 0.037959480900056165,
        "detect": 0.07591896180011233,
        "executable": 0.07591896180011233,
        "entrypoints": 0.3795948090005617,
        "across": 0.037959480900056165,
        "supported": 0.037959480900056165,
        "languages": 0.037959480900056165,
        "from": 0.2657163663003932,
        "__future__": 0.037959480900056165,
        "import": 0.3036758472004493,
        "annotations": 0.037959480900056165,
        "re": 0.037959480900056165,
        "dataclasses": 0.037959480900056165,
        "dataclass": 0.07591896180011233,
        "pathlib": 0.037959480900056165,
        "path": 0.1138784427001685,
        "typing": 0.037959480900056165,
        "iterable": 0.07591896180011233,
        "list": 0.1138784427001685,
        "optional": 0.07591896180011233,
        "base": 0.037959480900056165,
        "utils": 0.037959480900056165,
        "build_node_script_command": 0.037959480900056165,
        "detect_node_package_manager": 0.037959480900056165,
        "load_node_dependencies": 0.037959480900056165,
        "load_package_json": 0.037959480900056165,
        "models": 0.037959480900056165,
        "repomanifest": 0.1138784427001685,
        "signal": 0.18979740450028085,
        "class": 0.07591896180011233,
        "entrypoint": 0.15183792360022466,
        "represents": 0.037959480900056165,
        "a": 0.037959480900056165,
        "detected": 0.037959480900056165,
        "with": 0.037959480900056165,
        "an": 0.037959480900056165,
        "associated": 0.037959480900056165,
        "command": 0.18979740450028085,
        "name": 0.1138784427001685,
        "str": 0.15183792360022466,
        "label": 0.1138784427001685,
        "priority": 0.18979740450028085,
        "int": 0.037959480900056165,
        "50": 0.037959480900056165,
        "framework": 0.15183792360022466,
        "none": 0.037959480900056165,
        "entrypointanalyzer": 0.037959480900056165,
        "for": 0.1138784427001685,
        "quick": 0.037959480900056165,
        "start": 0.037959480900056165,
        "guidance": 0.037959480900056165,
        "def": 0.07591896180011233,
        "supports": 0.037959480900056165,
        "self": 0.18979740450028085,
        "manifest": 0.2657163663003932,
        "bool": 0.07591896180011233,
        "return": 0.037959480900056165,
        "files": 0.07591896180011233,
        "analyze": 0.037959480900056165,
        "manifest_paths": 0.07591896180011233,
        "file": 0.07591896180011233,
        "in": 0.07591896180011233,
        "extend": 0.1138784427001685,
        "_python_entrypoints": 0.037959480900056165,
        "_node_entrypoints": 0.037959480900056165,
        "root": 0.037959480900056165,
        "_java_entrypoints": 0.037959480900056165,
        "signals": 0.1138784427001685,
        "entry": 0.3036758472004493,
        "sorted": 0.037959480900056165,
        "key": 0.07591896180011233,
        "lambda": 0.07591896180011233,
        "ep": 0.15183792360022466,
        "metadata": 0.15183792360022466,
        "if": 0.07591896180011233,
        "append": 0.07591896180011233,
        "f": 0.037959480900056165,
        "value": 0.037959480900056165,
        "source": 0.037959480900056165,
        "primary": 0.037959480900056165,
        "min": 0.037959480900056165
      },
      "text": "\"\"\"Analyzer to detect executable entrypoints across supported languages.\"\"\" from __future__ import annotations import re from dataclasses import dataclass from pathlib import Path from typing import Iterable, List, Optional from .base import Analyzer from .utils import ( build_node_script_command, detect_node_package_manager, load_node_dependencies, load_package_json, ) from ..models import RepoManifest, Signal @dataclass class EntryPoint: \"\"\"Represents a detected entrypoint with an associated command.\"\"\" name: str command: str label: str priority: int = 50 framework: Optional[str] = None class EntryPointAnalyzer(Analyzer): \"\"\"Detect executable entrypoints for quick-start guidance.\"\"\" def supports(self, manifest: RepoManifest) -> bool: return bool(manifest.files) def analyze(self, manifest: RepoManifest) -> Iterable[Signal]: entrypoints: List[EntryPoint] = [] manifest_paths = {file.path for file in manifest.files} entrypoints.extend(self._python_entrypoints(manifest)) entrypoints.extend(self._node_entrypoints(Path(manifest.root), manifest_paths)) entrypoints.extend(self._java_entrypoints(manifest)) signals: List[Signal] = [] for entry in sorted(entrypoints, key=lambda ep: ep.priority): metadata = { \"command\": entry.command, \"label\": entry.label, \"priority\": entry.priority, } if entry.framework: metadata[\"framework\"] = entry.framework signals.append( Signal( name=f\"entrypoint.{entry.name}\", value=entry.command, source=\"entrypoints\", metadata=metadata, ) ) if entrypoints: primary = min(entrypoints, key=lambda ep: ep.priority) signals.append( Signal(",
      "metadata": {
        "path": "docgen/analyzers/entrypoints.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "d14f60bd019671d92af370c3b1a0aaf5bf16fd3f50ae7fe6a538c86f089ec87c"
      }
    },
    {
      "id": "docgen/validators/base.py#0",
      "vector": {
        "core": 0.04481107149482209,
        "validation": 0.17924428597928835,
        "data": 0.04481107149482209,
        "structures": 0.04481107149482209,
        "and": 0.13443321448446624,
        "helpers": 0.04481107149482209,
        "from": 0.3584885719585767,
        "__future__": 0.04481107149482209,
        "import": 0.3584885719585767,
        "annotations": 0.04481107149482209,
        "collections": 0.04481107149482209,
        "defaultdict": 0.04481107149482209,
        "dataclasses": 0.04481107149482209,
        "dataclass": 0.13443321448446624,
        "re": 0.13443321448446624,
        "typing": 0.13443321448446624,
        "iterable": 0.04481107149482209,
        "list": 0.17924428597928835,
        "mapping": 0.04481107149482209,
        "mutablemapping": 0.04481107149482209,
        "optional": 0.04481107149482209,
        "protocol": 0.13443321448446624,
        "sequence": 0.08962214298964417,
        "set": 0.04481107149482209,
        "type_checking": 0.08962214298964417,
        "if": 0.04481107149482209,
        "pragma": 0.04481107149482209,
        "no": 0.04481107149482209,
        "cover": 0.04481107149482209,
        "aid": 0.04481107149482209,
        "docgen": 0.13443321448446624,
        "models": 0.04481107149482209,
        "repomanifest": 0.04481107149482209,
        "signal": 0.04481107149482209,
        "prompting": 0.04481107149482209,
        "builder": 0.04481107149482209,
        "section": 0.13443321448446624,
        "_token_pattern": 0.04481107149482209,
        "compile": 0.08962214298964417,
        "r": 0.08962214298964417,
        "a": 0.22405535747411043,
        "za": 0.08962214298964417,
        "z0": 0.08962214298964417,
        "9": 0.04481107149482209,
        "9_": 0.04481107149482209,
        "_camel_pattern": 0.04481107149482209,
        "z": 0.04481107149482209,
        "_stopwords": 0.04481107149482209,
        "about": 0.04481107149482209,
        "after": 0.04481107149482209,
        "against": 0.04481107149482209,
        "all": 0.04481107149482209,
        "also": 0.04481107149482209,
        "any": 0.08962214298964417,
        "are": 0.04481107149482209,
        "because": 0.04481107149482209,
        "being": 0.04481107149482209,
        "between": 0.04481107149482209,
        "both": 0.04481107149482209,
        "but": 0.04481107149482209,
        "docs": 0.04481107149482209,
        "context": 0.08962214298964417,
        "follow": 0.04481107149482209,
        "highlight": 0.04481107149482209,
        "highlights": 0.04481107149482209,
        "step": 0.04481107149482209,
        "steps": 0.04481107149482209,
        "started": 0.04481107149482209,
        "below": 0.04481107149482209,
        "each": 0.04481107149482209,
        "have": 0.04481107149482209,
        "into": 0.04481107149482209,
        "its": 0.04481107149482209,
        "more": 0.08962214298964417,
        "must": 0.04481107149482209,
        "only": 0.04481107149482209,
        "other": 0.04481107149482209,
        "over": 0.04481107149482209,
        "some": 0.04481107149482209,
        "than": 0.04481107149482209,
        "that": 0.04481107149482209,
        "the": 0.04481107149482209,
        "their": 0.04481107149482209,
        "them": 0.04481107149482209,
        "there": 0.04481107149482209,
        "these": 0.04481107149482209,
        "they": 0.04481107149482209,
        "this": 0.04481107149482209,
        "those": 0.04481107149482209,
        "through": 0.04481107149482209,
        "under": 0.04481107149482209,
        "using": 0.04481107149482209,
        "very": 0.04481107149482209,
        "were": 0.04481107149482209,
        "when": 0.08962214298964417,
        "where": 0.04481107149482209,
        "which": 0.04481107149482209,
        "will": 0.04481107149482209,
        "with": 0.04481107149482209,
        "within": 0.04481107149482209,
        "class": 0.17924428597928835,
        "validationissue": 0.13443321448446624,
        "represents": 0.04481107149482209,
        "single": 0.04481107149482209,
        "failure": 0.04481107149482209,
        "for": 0.08962214298964417,
        "readme": 0.08962214298964417,
        "str": 0.2688664289689325,
        "sentence": 0.04481107149482209,
        "missing_terms": 0.04481107149482209,
        "detail": 0.04481107149482209,
        "validationerror": 0.04481107149482209,
        "runtimeerror": 0.04481107149482209,
        "raised": 0.04481107149482209,
        "fails": 0.04481107149482209,
        "one": 0.04481107149482209,
        "or": 0.04481107149482209,
        "sections": 0.04481107149482209,
        "def": 0.08962214298964417,
        "__init__": 0.08962214298964417,
        "self": 0.13443321448446624,
        "message": 0.08962214298964417,
        "issues": 0.17924428597928835,
        "none": 0.04481107149482209,
        "super": 0.04481107149482209,
        "validator": 0.04481107149482209,
        "implemented": 0.04481107149482209,
        "by": 0.04481107149482209,
        "validators": 0.04481107149482209,
        "name": 0.04481107149482209,
        "validate": 0.04481107149482209,
        "validationcontext": 0.04481107149482209,
        "run": 0.04481107149482209,
        "return": 0.04481107149482209,
        "evidencesnapshot": 0.04481107149482209,
        "summari": 0.04481107149482209
      },
      "text": "\"\"\"Core validation data structures and helpers.\"\"\" from __future__ import annotations from collections import defaultdict from dataclasses import dataclass import re from typing import Iterable, List, Mapping, MutableMapping, Optional, Protocol, Sequence, Set from typing import TYPE_CHECKING if TYPE_CHECKING: # pragma: no cover - typing aid from docgen.models import RepoManifest, Signal from docgen.prompting.builder import Section _TOKEN_PATTERN = re.compile(r\"[A-Za-z0-9][A-Za-z0-9_.:/-]*\") _CAMEL_PATTERN = re.compile(r\"(?<!^)(?=[A-Z])\") _STOPWORDS = { \"about\", \"after\", \"against\", \"all\", \"also\", \"and\", \"any\", \"are\", \"because\", \"being\", \"between\", \"both\", \"but\", \"docs\", \"docgen\", \"context\", \"follow\", \"highlight\", \"highlights\", \"step\", \"steps\", \"started\", \"below\", \"each\", \"from\", \"have\", \"into\", \"its\", \"more\", \"must\", \"only\", \"other\", \"over\", \"some\", \"than\", \"that\", \"the\", \"their\", \"them\", \"there\", \"these\", \"they\", \"this\", \"those\", \"through\", \"under\", \"using\", \"very\", \"were\", \"when\", \"where\", \"which\", \"will\", \"with\", \"within\", } @dataclass class ValidationIssue: \"\"\"Represents a single validation failure for a README section.\"\"\" section: str sentence: str missing_terms: List[str] detail: str class ValidationError(RuntimeError): \"\"\"Raised when validation fails for one or more sections.\"\"\" def __init__(self, message: str, issues: Sequence[ValidationIssue]) -> None: super().__init__(message) self.issues = list(issues) class Validator(Protocol): \"\"\"Protocol implemented by README validators.\"\"\" name: str def validate(self, context: \"ValidationContext\") -> List[ValidationIssue]: \"\"\"Run validation and return any issues.\"\"\" @dataclass class EvidenceSnapshot: \"\"\"Summari",
      "metadata": {
        "path": "docgen/validators/base.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "69ff1f7f8207dbf94253f17a1038f98d28fe9e9b59fcf86fd4f048a6cd9b8670"
      }
    },
    {
      "id": "docgen/analyzers/tree_sitter.py#0",
      "vector": {
        "tree": 0.07367094686837573,
        "sitter": 0.07367094686837573,
        "powered": 0.03683547343418787,
        "symbol": 0.03683547343418787,
        "analyzer": 0.1105064203025636,
        "from": 0.29468378747350293,
        "__future__": 0.03683547343418787,
        "import": 0.29468378747350293,
        "annotations": 0.03683547343418787,
        "dataclasses": 0.03683547343418787,
        "dataclass": 0.07367094686837573,
        "pathlib": 0.03683547343418787,
        "path": 0.2578483140393151,
        "typing": 0.03683547343418787,
        "dict": 0.07367094686837573,
        "iterable": 0.07367094686837573,
        "list": 0.07367094686837573,
        "optional": 0.18417736717093933,
        "base": 0.03683547343418787,
        "models": 0.03683547343418787,
        "repomanifest": 0.1105064203025636,
        "signal": 0.1105064203025636,
        "try": 0.07367094686837573,
        "pragma": 0.07367094686837573,
        "no": 0.07367094686837573,
        "cover": 0.07367094686837573,
        "dependency": 0.07367094686837573,
        "tree_sitter": 0.03683547343418787,
        "parser": 0.18417736717093933,
        "tree_sitter_languages": 0.03683547343418787,
        "get_language": 0.07367094686837573,
        "tree_sitter_available": 0.1105064203025636,
        "true": 0.03683547343418787,
        "except": 0.07367094686837573,
        "modulenotfounderror": 0.03683547343418787,
        "none": 0.2210128406051272,
        "type": 0.07367094686837573,
        "ignore": 0.07367094686837573,
        "assignment": 0.07367094686837573,
        "false": 0.07367094686837573,
        "_supported_languages": 0.03683547343418787,
        "python": 0.07367094686837573,
        "java": 0.07367094686837573,
        "typescript": 0.07367094686837573,
        "class": 0.1105064203025636,
        "_parsedsymbol": 0.03683547343418787,
        "name": 0.03683547343418787,
        "str": 0.14734189373675147,
        "kind": 0.03683547343418787,
        "signature": 0.03683547343418787,
        "treesitteranalyzer": 0.03683547343418787,
        "extracts": 0.03683547343418787,
        "function": 0.03683547343418787,
        "and": 0.03683547343418787,
        "symbols": 0.03683547343418787,
        "using": 0.03683547343418787,
        "parsers": 0.03683547343418787,
        "cache_version": 0.03683547343418787,
        "1": 0.03683547343418787,
        "def": 0.1105064203025636,
        "__init__": 0.03683547343418787,
        "self": 0.36835473434187865,
        "enabled": 0.1105064203025636,
        "bool": 0.07367094686837573,
        "_enabled": 0.1105064203025636,
        "if": 0.18417736717093933,
        "is": 0.07367094686837573,
        "else": 0.03683547343418787,
        "_parsers": 0.03683547343418787,
        "supports": 0.03683547343418787,
        "manifest": 0.18417736717093933,
        "not": 0.1105064203025636,
        "return": 0.1105064203025636,
        "any": 0.03683547343418787,
        "_language_for_file": 0.07367094686837573,
        "meta": 0.2578483140393151,
        "language": 0.07367094686837573,
        "for": 0.07367094686837573,
        "in": 0.07367094686837573,
        "files": 0.07367094686837573,
        "analyze": 0.03683547343418787,
        "signals": 0.03683547343418787,
        "language_key": 0.1105064203025636,
        "continue": 0.1105064203025636,
        "_get_parser": 0.03683547343418787,
        "root": 0.03683547343418787,
        "source": 0.03683547343418787,
        "read_text": 0.03683547343418787,
        "encoding": 0.03683547343418787,
        "utf": 0.03683547343418787,
        "8": 0.03683547343418787,
        "oserror": 0.03683547343418787,
        "unicodedecodeerror": 0.03683547343418787
      },
      "text": "\"\"\"Tree-sitter powered symbol analyzer.\"\"\" from __future__ import annotations from dataclasses import dataclass from pathlib import Path from typing import Dict, Iterable, List, Optional from .base import Analyzer from ..models import RepoManifest, Signal try: # pragma: no cover - optional dependency from tree_sitter import Parser from tree_sitter_languages import get_language TREE_SITTER_AVAILABLE = True except ModuleNotFoundError: # pragma: no cover - optional dependency Parser = None # type: ignore[assignment] get_language = None # type: ignore[assignment] TREE_SITTER_AVAILABLE = False _SUPPORTED_LANGUAGES = { \"Python\": \"python\", \"Java\": \"java\", \"TypeScript\": \"typescript\", } @dataclass class _ParsedSymbol: name: str kind: str signature: Optional[str] class TreeSitterAnalyzer(Analyzer): \"\"\"Extracts function and class symbols using tree-sitter parsers.\"\"\" cache_version = \"1\" def __init__(self, enabled: Optional[bool] = None) -> None: self._enabled = TREE_SITTER_AVAILABLE if enabled is None else enabled self._parsers: Dict[str, Parser] = {} def supports(self, manifest: RepoManifest) -> bool: if not self._enabled: return False return any(self._language_for_file(meta.path, meta.language) for meta in manifest.files) def analyze(self, manifest: RepoManifest) -> Iterable[Signal]: if not self._enabled: return [] signals: List[Signal] = [] for meta in manifest.files: language_key = self._language_for_file(meta.path, meta.language) if not language_key: continue parser = self._get_parser(language_key) if parser is None: continue path = Path(manifest.root) / meta.path try: source = path.read_text(encoding=\"utf-8\") except (OSError, UnicodeDecodeError): continue",
      "metadata": {
        "path": "docgen/analyzers/tree_sitter.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "c2d062f2d46ba6c4e130bf64054f426daf8d112801b4f586692b4f617890e929"
      }
    },
    {
      "id": "docgen/analyzers/utils.py#0",
      "vector": {
        "shared": 0.03313147809612858,
        "helper": 0.03313147809612858,
        "utilities": 0.03313147809612858,
        "for": 0.13252591238451433,
        "analyzer": 0.03313147809612858,
        "implementations": 0.03313147809612858,
        "from": 0.13252591238451433,
        "__future__": 0.03313147809612858,
        "import": 0.23192034667290007,
        "annotations": 0.03313147809612858,
        "json": 0.03313147809612858,
        "re": 0.09939443428838575,
        "tomllib": 0.06626295619225717,
        "xml": 0.03313147809612858,
        "etree": 0.03313147809612858,
        "elementtree": 0.03313147809612858,
        "as": 0.03313147809612858,
        "et": 0.03313147809612858,
        "pathlib": 0.03313147809612858,
        "path": 0.26505182476902867,
        "typing": 0.03313147809612858,
        "dict": 0.13252591238451433,
        "iterable": 0.03313147809612858,
        "list": 0.1656573904806429,
        "set": 0.1656573904806429,
        "python": 0.06626295619225717,
        "dependency": 0.03313147809612858,
        "helpers": 0.03313147809612858,
        "def": 0.09939443428838575,
        "load_python_dependencies": 0.03313147809612858,
        "root": 0.09939443428838575,
        "str": 0.23192034667290007,
        "collect": 0.03313147809612858,
        "dependencies": 0.2981833028651572,
        "requirements": 0.1656573904806429,
        "txt": 0.06626295619225717,
        "and": 0.06626295619225717,
        "pyproject": 0.1656573904806429,
        "toml": 0.06626295619225717,
        "deps": 0.13252591238451433,
        "if": 0.2981833028651572,
        "exists": 0.06626295619225717,
        "update": 0.06626295619225717,
        "_parse_requirements": 0.06626295619225717,
        "_parse_pyproject": 0.06626295619225717,
        "return": 0.09939443428838575,
        "sorted": 0.03313147809612858,
        "packages": 0.13252591238451433,
        "line": 0.06626295619225717,
        "in": 0.09939443428838575,
        "read_text": 0.06626295619225717,
        "encoding": 0.06626295619225717,
        "utf": 0.06626295619225717,
        "8": 0.06626295619225717,
        "splitlines": 0.03313147809612858,
        "stripped": 0.13252591238451433,
        "strip": 0.09939443428838575,
        "not": 0.03313147809612858,
        "or": 0.1656573904806429,
        "startswith": 0.03313147809612858,
        "r": 0.09939443428838575,
        "continue": 0.03313147809612858,
        "name": 0.1987888685767715,
        "split": 0.06626295619225717,
        "1": 0.06626295619225717,
        "0": 0.06626295619225717,
        "append": 0.03313147809612858,
        "try": 0.03313147809612858,
        "data": 0.13252591238451433,
        "loads": 0.03313147809612858,
        "except": 0.03313147809612858,
        "exception": 0.03313147809612858,
        "project": 0.1656573904806429,
        "get": 0.23192034667290007,
        "isinstance": 0.13252591238451433,
        "extend": 0.09939443428838575,
        "optional": 0.09939443428838575,
        "values": 0.09939443428838575,
        "poetry": 0.13252591238451433,
        "tool": 0.06626295619225717,
        "else": 0.03313147809612858,
        "poetry_deps": 0.06626295619225717,
        "keys": 0.03313147809612858,
        "dep": 0.09939443428838575,
        "lower": 0.03313147809612858
      },
      "text": "\ufeff\"\"\"Shared helper utilities for analyzer implementations.\"\"\" from __future__ import annotations import json import re import tomllib import xml.etree.ElementTree as ET from pathlib import Path from typing import Dict, Iterable, List, Set # Python dependency helpers def load_python_dependencies(root: Path) -> List[str]: \"\"\"Collect Python dependencies from requirements.txt and pyproject.toml.\"\"\" deps: Set[str] = set() requirements = root / \"requirements.txt\" if requirements.exists(): deps.update(_parse_requirements(requirements)) pyproject = root / \"pyproject.toml\" if pyproject.exists(): deps.update(_parse_pyproject(pyproject)) return sorted(deps) def _parse_requirements(path: Path) -> List[str]: packages: List[str] = [] for line in path.read_text(encoding=\"utf-8\").splitlines(): stripped = line.strip() if not stripped or stripped.startswith((\"#\", \"-r\")): continue name = re.split(r\"[<>=!~]\", stripped, 1)[0].strip() if name: packages.append(name) return packages def _parse_pyproject(path: Path) -> List[str]: packages: Set[str] = set() try: data = tomllib.loads(path.read_text(encoding=\"utf-8\")) except Exception: return [] dependencies = [] project = data.get(\"project\") if isinstance(project, dict): dependencies.extend(project.get(\"dependencies\", []) or []) optional = project.get(\"optional-dependencies\", {}) or {} for values in optional.values(): dependencies.extend(values or []) poetry = data.get(\"tool\", {}).get(\"poetry\", {}) if isinstance(data.get(\"tool\"), dict) else {} if isinstance(poetry, dict): poetry_deps = poetry.get(\"dependencies\", {}) or {} dependencies.extend(poetry_deps.keys()) for dep in dependencies: if isinstance(dep, str): name = re.split(r\"[<>=!~]\", dep, 1)[0].strip() if name and name.lower() != \"",
      "metadata": {
        "path": "docgen/analyzers/utils.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "930b9270766c59bb0b911a4faa374adb8d46b8e91d2a1e20c2715eb0683e1087"
      }
    },
    {
      "id": "docgen/rag/indexer.py#0",
      "vector": {
        "index": 0.09933992677987828,
        "builder": 0.033113308926626096,
        "for": 0.29801978033963483,
        "minimal": 0.033113308926626096,
        "retrieval": 0.033113308926626096,
        "augmented": 0.033113308926626096,
        "generation": 0.06622661785325219,
        "from": 0.29801978033963483,
        "__future__": 0.033113308926626096,
        "import": 0.33113308926626095,
        "annotations": 0.033113308926626096,
        "dataclasses": 0.033113308926626096,
        "dataclass": 0.06622661785325219,
        "pathlib": 0.033113308926626096,
        "path": 0.13245323570650439,
        "typing": 0.033113308926626096,
        "dict": 0.09933992677987828,
        "iterable": 0.033113308926626096,
        "list": 0.19867985355975656,
        "sequence": 0.06622661785325219,
        "set": 0.09933992677987828,
        "hashlib": 0.033113308926626096,
        "models": 0.033113308926626096,
        "repomanifest": 0.06622661785325219,
        "repo_scanner": 0.033113308926626096,
        "filemeta": 0.033113308926626096,
        "constants": 0.033113308926626096,
        "section_tags": 0.06622661785325219,
        "tag_sections": 0.033113308926626096,
        "embedder": 0.13245323570650439,
        "localembedder": 0.09933992677987828,
        "store": 0.29801978033963483,
        "embeddingstore": 0.06622661785325219,
        "class": 0.06622661785325219,
        "ragindex": 0.06622661785325219,
        "holds": 0.033113308926626096,
        "contexts": 0.13245323570650439,
        "readme": 0.06622661785325219,
        "sections": 0.13245323570650439,
        "and": 0.033113308926626096,
        "metadata": 0.033113308926626096,
        "str": 0.19867985355975656,
        "store_path": 0.09933992677987828,
        "ragindexer": 0.033113308926626096,
        "builds": 0.033113308926626096,
        "a": 0.033113308926626096,
        "lightweight": 0.033113308926626096,
        "embedding": 0.033113308926626096,
        "def": 0.06622661785325219,
        "__init__": 0.033113308926626096,
        "self": 0.23179316248638265,
        "none": 0.16556654463313047,
        "top_source_files": 0.09933992677987828,
        "int": 0.033113308926626096,
        "20": 0.033113308926626096,
        "or": 0.033113308926626096,
        "build": 0.033113308926626096,
        "manifest": 0.16556654463313047,
        "target_sections": 0.09933992677987828,
        "if": 0.06622661785325219,
        "else": 0.033113308926626096,
        "keys": 0.033113308926626096,
        "root": 0.19867985355975656,
        "docgen": 0.033113308926626096,
        "embeddings": 0.033113308926626096,
        "json": 0.033113308926626096,
        "load_existing": 0.033113308926626096,
        "true": 0.033113308926626096,
        "section": 0.16556654463313047,
        "in": 0.23179316248638265,
        "meta_lookup": 0.06622661785325219,
        "file": 0.09933992677987828,
        "files": 0.09933992677987828,
        "visited_paths": 0.16556654463313047,
        "_index_readme": 0.033113308926626096,
        "_index_docs": 0.033113308926626096,
        "_index_source_files": 0.033113308926626096,
        "existing": 0.09933992677987828,
        "paths": 0.033113308926626096,
        "not": 0.033113308926626096,
        "remove_path": 0.033113308926626096,
        "persist": 0.033113308926626096,
        "entries": 0.06622661785325219,
        "query": 0.033113308926626096,
        "top_k": 0.033113308926626096,
        "2": 0.033113308926626096,
        "snippets": 0.033113308926626096,
        "_trim_snippet": 0.033113308926626096,
        "entry": 0.06622661785325219,
        "text": 0.033113308926626096,
        "snippet": 0.06622661785325219
      },
      "text": "\"\"\"Index builder for minimal retrieval augmented generation.\"\"\" from __future__ import annotations from dataclasses import dataclass from pathlib import Path from typing import Dict, Iterable, List, Sequence, Set import hashlib from ..models import RepoManifest from ..repo_scanner import FileMeta from .constants import SECTION_TAGS, TAG_SECTIONS from .embedder import LocalEmbedder from .store import EmbeddingStore @dataclass class RAGIndex: \"\"\"Holds contexts for README sections and index metadata.\"\"\" contexts: Dict[str, List[str]] store_path: Path class RAGIndexer: \"\"\"Builds a lightweight embedding index for README generation.\"\"\" def __init__(self, *, embedder: LocalEmbedder | None = None, top_source_files: int = 20) -> None: self.embedder = embedder or LocalEmbedder() self.top_source_files = top_source_files def build(self, manifest: RepoManifest, *, sections: Sequence[str] | None = None) -> RAGIndex: target_sections = list(sections) if sections else list(SECTION_TAGS.keys()) root = Path(manifest.root) store_path = root / \".docgen\" / \"embeddings.json\" store = EmbeddingStore(store_path, load_existing=True) contexts: Dict[str, List[str]] = {section: [] for section in target_sections} meta_lookup = {file.path: file for file in manifest.files} visited_paths: Set[str] = set() self._index_readme(root, store, meta_lookup, visited_paths) self._index_docs(manifest.files, root, store, visited_paths) self._index_source_files(manifest.files, root, store, visited_paths) for existing in list(store.paths()): if existing not in visited_paths: store.remove_path(existing) store.persist() for section in target_sections: entries = store.query(section, top_k=2) snippets = [_trim_snippet(entry[\"text\"]) for entry in entries] contexts[section] = [snippet for snippet in",
      "metadata": {
        "path": "docgen/rag/indexer.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "1c5240048a95787e0b54e5fc674b7d7c2df7b5a4072a47d585e56be61c7d837a"
      }
    },
    {
      "id": "docgen/analyzers/structure.py#0",
      "vector": {
        "analyzer": 0.10790250018984096,
        "that": 0.03596750006328032,
        "infers": 0.03596750006328032,
        "repository": 0.03596750006328032,
        "architecture": 0.07193500012656064,
        "constructs": 0.03596750006328032,
        "for": 0.07193500012656064,
        "readme": 0.03596750006328032,
        "init": 0.03596750006328032,
        "from": 0.3596750006328032,
        "__future__": 0.03596750006328032,
        "import": 0.3596750006328032,
        "annotations": 0.03596750006328032,
        "re": 0.07193500012656064,
        "collections": 0.03596750006328032,
        "defaultdict": 0.07193500012656064,
        "pathlib": 0.03596750006328032,
        "path": 0.03596750006328032,
        "dataclasses": 0.03596750006328032,
        "dataclass": 0.07193500012656064,
        "typing": 0.03596750006328032,
        "dict": 0.10790250018984096,
        "iterable": 0.07193500012656064,
        "list": 0.10790250018984096,
        "sequence": 0.07193500012656064,
        "base": 0.03596750006328032,
        "endpoints": 0.07193500012656064,
        "core": 0.03596750006328032,
        "detectorregistry": 0.03596750006328032,
        "detectors": 0.03596750006328032,
        "expressdetector": 0.07193500012656064,
        "fastapidetector": 0.07193500012656064,
        "specdetector": 0.07193500012656064,
        "springdetector": 0.07193500012656064,
        "models": 0.03596750006328032,
        "repomanifest": 0.14387000025312127,
        "signal": 0.14387000025312127,
        "_py_model_class": 0.03596750006328032,
        "compile": 0.03596750006328032,
        "r": 0.03596750006328032,
        "class": 0.10790250018984096,
        "s": 0.03596750006328032,
        "w": 0.03596750006328032,
        "_filesummary": 0.10790250018984096,
        "count": 0.03596750006328032,
        "int": 0.03596750006328032,
        "0": 0.03596750006328032,
        "roles": 0.10790250018984096,
        "set": 0.14387000025312127,
        "str": 0.14387000025312127,
        "none": 0.1798375003164016,
        "type": 0.07193500012656064,
        "ignore": 0.07193500012656064,
        "assignment": 0.07193500012656064,
        "languages": 0.10790250018984096,
        "def": 0.14387000025312127,
        "__post_init__": 0.03596750006328032,
        "self": 0.39564250069608353,
        "if": 0.10790250018984096,
        "is": 0.07193500012656064,
        "structureanalyzer": 0.03596750006328032,
        "derives": 0.03596750006328032,
        "architectural": 0.03596750006328032,
        "signals": 0.21580500037968192,
        "source": 0.07193500012656064,
        "files": 0.10790250018984096,
        "and": 0.03596750006328032,
        "layout": 0.03596750006328032,
        "_endpoint_detectors": 0.03596750006328032,
        "supports": 0.03596750006328032,
        "manifest": 0.28774000050624254,
        "bool": 0.07193500012656064,
        "return": 0.07193500012656064,
        "analyze": 0.03596750006328032,
        "modules": 0.21580500037968192,
        "_summarise_modules": 0.07193500012656064,
        "append": 0.03596750006328032,
        "name": 0.03596750006328032,
        "value": 0.03596750006328032,
        "structure": 0.03596750006328032,
        "metadata": 0.03596750006328032,
        "extend": 0.07193500012656064,
        "_detect_api_endpoints": 0.03596750006328032,
        "_detect_entities": 0.03596750006328032,
        "object": 0.03596750006328032,
        "summaries": 0.03596750006328032,
        "meta": 0.03596750006328032,
        "in": 0.03596750006328032
      },
      "text": "\"\"\"Analyzer that infers repository architecture constructs for README init.\"\"\" from __future__ import annotations import re from collections import defaultdict from pathlib import Path from dataclasses import dataclass from typing import Dict, Iterable, List, Sequence from .base import Analyzer from .endpoints.core import DetectorRegistry from .endpoints.detectors import ExpressDetector, FastAPIDetector, SpecDetector, SpringDetector from ..models import RepoManifest, Signal _PY_MODEL_CLASS = re.compile(r\"class\\s+(\\w+)\\(([^)]*)\\):\") @dataclass class _FileSummary: count: int = 0 roles: set[str] = None # type: ignore[assignment] languages: set[str] = None # type: ignore[assignment] def __post_init__(self) -> None: if self.roles is None: self.roles = set() if self.languages is None: self.languages = set() class StructureAnalyzer(Analyzer): \"\"\"Derives architectural signals from source files and layout.\"\"\" _ENDPOINT_DETECTORS: Sequence = ( SpecDetector(), FastAPIDetector(), ExpressDetector(), SpringDetector(), ) def supports(self, manifest: RepoManifest) -> bool: return bool(manifest.files) def analyze(self, manifest: RepoManifest) -> Iterable[Signal]: signals: List[Signal] = [] modules = self._summarise_modules(manifest) if modules: signals.append( Signal( name=\"architecture.modules\", value=\"modules\", source=\"structure\", metadata={\"modules\": modules}, ) ) signals.extend(self._detect_api_endpoints(manifest)) signals.extend(self._detect_entities(manifest)) return signals def _summarise_modules(self, manifest: RepoManifest) -> List[Dict[str, object]]: summaries: Dict[str, _FileSummary] = defaultdict(_FileSummary) for meta in manifest.files:",
      "metadata": {
        "path": "docgen/analyzers/structure.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "605d812fa565f89873c2fd4cc2d31872f5ea5c304f36e0158eca6b0d149f53a6"
      }
    },
    {
      "id": "docgen/cli.py#0",
      "vector": {
        "cli": 0.04271788288583805,
        "entrypoints": 0.04271788288583805,
        "for": 0.1708715315433522,
        "docgen": 0.0854357657716761,
        "commands": 0.04271788288583805,
        "from": 0.21358941442919022,
        "__future__": 0.04271788288583805,
        "import": 0.2990251802008663,
        "annotations": 0.04271788288583805,
        "argparse": 0.25630729731502827,
        "sys": 0.04271788288583805,
        "pathlib": 0.04271788288583805,
        "path": 0.21358941442919022,
        "orchestrator": 0.0854357657716761,
        "service": 0.04271788288583805,
        "run_service": 0.04271788288583805,
        "logging": 0.04271788288583805,
        "configure_logging": 0.04271788288583805,
        "def": 0.12815364865751414,
        "_add_verbose_option": 0.1708715315433522,
        "parser": 0.2990251802008663,
        "argumentparser": 0.1708715315433522,
        "suppress_default": 0.1708715315433522,
        "bool": 0.04271788288583805,
        "false": 0.0854357657716761,
        "none": 0.0854357657716761,
        "kwargs": 0.1708715315433522,
        "dict": 0.04271788288583805,
        "str": 0.04271788288583805,
        "object": 0.04271788288583805,
        "action": 0.0854357657716761,
        "store_true": 0.0854357657716761,
        "help": 0.25630729731502827,
        "increase": 0.04271788288583805,
        "log": 0.04271788288583805,
        "verbosity": 0.04271788288583805,
        "troubleshooting": 0.04271788288583805,
        "if": 0.04271788288583805,
        "default": 0.1708715315433522,
        "suppress": 0.04271788288583805,
        "else": 0.04271788288583805,
        "add_argument": 0.1708715315433522,
        "v": 0.04271788288583805,
        "verbose": 0.04271788288583805,
        "_add_skip_validation_option": 0.12815364865751414,
        "skip": 0.0854357657716761,
        "validation": 0.0854357657716761,
        "readme": 0.1708715315433522,
        "guards": 0.04271788288583805,
        "this": 0.04271788288583805,
        "run": 0.04271788288583805,
        "not": 0.04271788288583805,
        "recommended": 0.04271788288583805,
        "_build_parser": 0.04271788288583805,
        "prog": 0.04271788288583805,
        "description": 0.04271788288583805,
        "generate": 0.04271788288583805,
        "and": 0.04271788288583805,
        "maintain": 0.04271788288583805,
        "files": 0.04271788288583805,
        "using": 0.04271788288583805,
        "repository": 0.1708715315433522,
        "analysis": 0.04271788288583805,
        "subparsers": 0.12815364865751414,
        "add_subparsers": 0.04271788288583805,
        "dest": 0.04271788288583805,
        "command": 0.04271788288583805,
        "required": 0.04271788288583805,
        "true": 0.12815364865751414,
        "init_parser": 0.1708715315433522,
        "add_parser": 0.0854357657716761,
        "init": 0.04271788288583805,
        "initialize": 0.04271788288583805,
        "a": 0.0854357657716761,
        "that": 0.04271788288583805,
        "lacks": 0.04271788288583805,
        "one": 0.04271788288583805,
        "nargs": 0.0854357657716761,
        "to": 0.12815364865751414,
        "the": 0.0854357657716761,
        "root": 0.04271788288583805,
        "defaults": 0.04271788288583805,
        "current": 0.04271788288583805,
        "directory": 0.04271788288583805,
        "update_parser": 0.1708715315433522,
        "update": 0.0854357657716761,
        "sections": 0.04271788288583805,
        "after": 0.04271788288583805,
        "changes": 0.04271788288583805,
        "re": 0.04271788288583805
      },
      "text": "\ufeff\"\"\"CLI entrypoints for docgen commands.\"\"\" from __future__ import annotations import argparse import sys from pathlib import Path from .orchestrator import Orchestrator from .service import run_service from .logging import configure_logging def _add_verbose_option( parser: argparse.ArgumentParser, *, suppress_default: bool = False ) -> None: kwargs: dict[str, object] = { \"action\": \"store_true\", \"help\": \"Increase log verbosity for troubleshooting.\", } if suppress_default: kwargs[\"default\"] = argparse.SUPPRESS else: kwargs[\"default\"] = False parser.add_argument( \"-v\", \"--verbose\", **kwargs, ) def _add_skip_validation_option(parser: argparse.ArgumentParser) -> None: parser.add_argument( \"--skip-validation\", action=\"store_true\", help=\"Skip README validation guards for this run (not recommended).\", ) def _build_parser() -> argparse.ArgumentParser: parser = argparse.ArgumentParser( prog=\"docgen\", description=\"Generate and maintain README files using repository analysis.\", ) _add_verbose_option(parser) subparsers = parser.add_subparsers(dest=\"command\", required=True) init_parser = subparsers.add_parser( \"init\", help=\"Initialize a README for a repository that lacks one.\", ) _add_verbose_option(init_parser, suppress_default=True) _add_skip_validation_option(init_parser) init_parser.add_argument( \"path\", nargs=\"?\", default=\".\", help=\"Path to the repository root (defaults to current directory).\", ) update_parser = subparsers.add_parser( \"update\", help=\"Update README sections after repository changes.\", ) _add_verbose_option(update_parser, suppress_default=True) _add_skip_validation_option(update_parser) update_parser.add_argument( \"path\", nargs=\"?\", default=\".\", help=\"Path to the re",
      "metadata": {
        "path": "docgen/cli.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "e99c0948e5b7f8283685fadd5986ae972c25b37a54f1b27c65f3875d2669fdb5"
      }
    },
    {
      "id": "docgen/git/publisher.py#0",
      "vector": {
        "git": 0.23596995186213474,
        "publishing": 0.033709993123162106,
        "utilities": 0.033709993123162106,
        "from": 0.10112997936948631,
        "__future__": 0.033709993123162106,
        "import": 0.1685499656158105,
        "annotations": 0.033709993123162106,
        "os": 0.06741998624632421,
        "subprocess": 0.033709993123162106,
        "pathlib": 0.033709993123162106,
        "path": 0.20225995873897262,
        "typing": 0.033709993123162106,
        "callable": 0.06741998624632421,
        "iterable": 0.033709993123162106,
        "sequence": 0.13483997249264842,
        "class": 0.033709993123162106,
        "publisher": 0.033709993123162106,
        "handles": 0.033709993123162106,
        "branch": 0.06741998624632421,
        "management": 0.033709993123162106,
        "and": 0.10112997936948631,
        "pr": 0.06741998624632421,
        "creation": 0.033709993123162106,
        "for": 0.10112997936948631,
        "readme": 0.06741998624632421,
        "updates": 0.033709993123162106,
        "def": 0.10112997936948631,
        "__init__": 0.033709993123162106,
        "self": 0.30338993810845893,
        "runner": 0.06741998624632421,
        "str": 0.37080992435478316,
        "none": 0.23596995186213474,
        "_runner": 0.033709993123162106,
        "or": 0.033709993123162106,
        "_default_runner": 0.033709993123162106,
        "commit": 0.13483997249264842,
        "repo_path": 0.13483997249264842,
        "files": 0.1685499656158105,
        "message": 0.06741998624632421,
        "docs": 0.033709993123162106,
        "bootstrap": 0.033709993123162106,
        "via": 0.06741998624632421,
        "docgen": 0.10112997936948631,
        "init": 0.033709993123162106,
        "bool": 0.13483997249264842,
        "stage": 0.033709993123162106,
        "the": 0.10112997936948631,
        "provided": 0.033709993123162106,
        "create": 0.06741998624632421,
        "a": 0.10112997936948631,
        "if": 0.13483997249264842,
        "changes": 0.033709993123162106,
        "exist": 0.033709993123162106,
        "repo": 0.26967994498529685,
        "not": 0.10112997936948631,
        "exists": 0.06741998624632421,
        "return": 0.13483997249264842,
        "false": 0.13483997249264842,
        "relative_files": 0.06741998624632421,
        "_to_relative": 0.033709993123162106,
        "file": 0.06741998624632421,
        "in": 0.06741998624632421,
        "rel": 0.06741998624632421,
        "_run": 0.10112997936948631,
        "add": 0.033709993123162106,
        "cwd": 0.10112997936948631,
        "status": 0.10112997936948631,
        "porcelain": 0.033709993123162106,
        "capture_output": 0.033709993123162106,
        "true": 0.10112997936948631,
        "strip": 0.033709993123162106,
        "env": 0.30338993810845893,
        "environ": 0.033709993123162106,
        "copy": 0.033709993123162106,
        "setdefault": 0.13483997249264842,
        "git_author_name": 0.06741998624632421,
        "git_author_email": 0.06741998624632421,
        "example": 0.033709993123162106,
        "com": 0.033709993123162106,
        "git_committer_name": 0.033709993123162106,
        "git_committer_email": 0.033709993123162106,
        "m": 0.033709993123162106,
        "publish_pr": 0.033709993123162106,
        "branch_name": 0.033709993123162106,
        "base_branch": 0.033709993123162106,
        "title": 0.033709993123162106,
        "body": 0.033709993123162106,
        "push": 0.033709993123162106,
        "labels": 0.033709993123162106,
        "update_existing": 0.033709993123162106,
        "open": 0.033709993123162106,
        "github": 0.033709993123162106,
        "cli": 0.033709993123162106,
        "checkout_cmd": 0.033709993123162106
      },
      "text": "\ufeff\"\"\"Git publishing utilities.\"\"\" from __future__ import annotations import os import subprocess from pathlib import Path from typing import Callable, Iterable, Sequence class Publisher: \"\"\"Handles branch management and PR creation for README updates.\"\"\" def __init__(self, runner: Callable[..., str] | None = None) -> None: self._runner = runner or self._default_runner def commit( self, repo_path: str, files: Sequence[Path | str], *, message: str = \"docs: bootstrap README via docgen init\", ) -> bool: \"\"\"Stage the provided files and create a commit if changes exist.\"\"\" repo = Path(repo_path) if not (repo / \".git\").exists(): return False relative_files = [self._to_relative(repo, Path(file)) for file in files] for rel in relative_files: self._run([\"git\", \"add\", rel], cwd=repo) status = self._run([\"git\", \"status\", \"--porcelain\"], cwd=repo, capture_output=True) if not status.strip(): return False env = os.environ.copy() env.setdefault(\"GIT_AUTHOR_NAME\", \"docgen\") env.setdefault(\"GIT_AUTHOR_EMAIL\", \"docgen@example.com\") env.setdefault(\"GIT_COMMITTER_NAME\", env[\"GIT_AUTHOR_NAME\"]) env.setdefault(\"GIT_COMMITTER_EMAIL\", env[\"GIT_AUTHOR_EMAIL\"]) self._run([\"git\", \"commit\", \"-m\", message], cwd=repo, env=env) return True def publish_pr( self, repo_path: str, files: Sequence[Path | str], *, branch_name: str, base_branch: str | None = None, title: str, body: str, push: bool = True, labels: Sequence[str] | None = None, update_existing: bool = False, ) -> bool: \"\"\"Create a branch, commit the files, and open a PR via the GitHub CLI.\"\"\" repo = Path(repo_path) if not (repo / \".git\").exists(): return False checkout_cmd = [\"git\", \"",
      "metadata": {
        "path": "docgen/git/publisher.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "fb514d3f5ecabe125a3980238c32fe8a297b3aeb8e3a8fd50c21818502f8fbf0"
      }
    },
    {
      "id": "docgen/validators/no_hallucination.py#0",
      "vector": {
        "validator": 0.13376338862031295,
        "that": 0.08917559241354196,
        "blocks": 0.04458779620677098,
        "readme": 0.17835118482708393,
        "hallucinations": 0.04458779620677098,
        "from": 0.13376338862031295,
        "__future__": 0.04458779620677098,
        "import": 0.17835118482708393,
        "annotations": 0.04458779620677098,
        "re": 0.08917559241354196,
        "typing": 0.04458779620677098,
        "iterable": 0.04458779620677098,
        "list": 0.17835118482708393,
        "sequence": 0.04458779620677098,
        "set": 0.08917559241354196,
        "base": 0.04458779620677098,
        "evidenceindex": 0.04458779620677098,
        "validationcontext": 0.08917559241354196,
        "validationissue": 0.13376338862031295,
        "_sentence_boundary": 0.04458779620677098,
        "compile": 0.04458779620677098,
        "r": 0.04458779620677098,
        "s": 0.04458779620677098,
        "a": 0.13376338862031295,
        "z0": 0.04458779620677098,
        "9": 0.04458779620677098,
        "_safe_prefixes": 0.04458779620677098,
        "replace": 0.08917559241354196,
        "this": 0.17835118482708393,
        "text": 0.08917559241354196,
        "document": 0.13376338862031295,
        "the": 0.2675267772406259,
        "project": 0.13376338862031295,
        "structure": 0.08917559241354196,
        "ready": 0.04458779620677098,
        "for": 0.17835118482708393,
        "continuous": 0.04458779620677098,
        "generation": 0.04458779620677098,
        "use": 0.04458779620677098,
        "section": 0.13376338862031295,
        "add": 0.13376338862031295,
        "deployment": 0.08917559241354196,
        "details": 0.08917559241354196,
        "troubleshooting": 0.04458779620677098,
        "guidance": 0.04458779620677098,
        "configuration": 0.04458779620677098,
        "docgen": 0.13376338862031295,
        "could": 0.08917559241354196,
        "not": 0.17835118482708393,
        "populate": 0.04458779620677098,
        "gather": 0.04458779620677098,
        "follow": 0.04458779620677098,
        "steps": 0.04458779620677098,
        "below": 0.04458779620677098,
        "_observed": 0.04458779620677098,
        "frameworks": 0.04458779620677098,
        "_safe_exact": 0.04458779620677098,
        "was": 0.04458779620677098,
        "bootstrapped": 0.04458779620677098,
        "by": 0.04458779620677098,
        "init": 0.04458779620677098,
        "to": 0.08917559241354196,
        "summarize": 0.04458779620677098,
        "repository": 0.13376338862031295,
        "at": 0.04458779620677098,
        "glance": 0.04458779620677098,
        "with": 0.08917559241354196,
        "concise": 0.04458779620677098,
        "mission": 0.04458779620677098,
        "statement": 0.04458779620677098,
        "here": 0.08917559241354196,
        "how": 0.04458779620677098,
        "up": 0.04458779620677098,
        "and": 0.04458779620677098,
        "run": 0.04458779620677098,
        "locally": 0.04458779620677098,
        "container": 0.04458779620677098,
        "image": 0.08917559241354196,
        "can": 0.04458779620677098,
        "be": 0.04458779620677098,
        "built": 0.04458779620677098,
        "docker": 0.04458779620677098,
        "build": 0.04458779620677098,
        "t": 0.04458779620677098,
        "outline": 0.04458779620677098,
        "strategies": 0.04458779620677098,
        "or": 0.04458779620677098,
        "hosting": 0.04458779620677098,
        "targets": 0.04458779620677098,
        "class": 0.04458779620677098,
        "nohallucinationvalidator": 0.04458779620677098,
        "rejects": 0.04458779620677098,
        "content": 0.04458779620677098,
        "is": 0.04458779620677098,
        "grounded": 0.04458779620677098,
        "in": 0.13376338862031295,
        "evidence": 0.08917559241354196,
        "name": 0.04458779620677098,
        "no_hallucination": 0.04458779620677098,
        "def": 0.08917559241354196,
        "__init__": 0.04458779620677098,
        "self": 0.35670236965416785,
        "min_overlap": 0.08917559241354196,
        "int": 0.04458779620677098,
        "1": 0.04458779620677098,
        "none": 0.04458779620677098,
        "_min_overlap": 0.08917559241354196,
        "validate": 0.04458779620677098,
        "context": 0.13376338862031295,
        "issues": 0.04458779620677098,
        "section_name": 0.08917559241354196,
        "sections": 0.04458779620677098,
        "items": 0.04458779620677098,
        "sentences": 0.08917559241354196,
        "_iter_sentences": 0.04458779620677098,
        "body": 0.04458779620677098,
        "sentence": 0.13376338862031295,
        "if": 0.13376338862031295,
        "_should_skip": 0.04458779620677098,
        "continue": 0.13376338862031295,
        "tokens": 0.13376338862031295,
        "_extract_tokens": 0.04458779620677098,
        "overlap": 0.08917559241354196,
        "_count_overlap": 0.04458779620677098
      },
      "text": "\"\"\"Validator that blocks README hallucinations.\"\"\" from __future__ import annotations import re from typing import Iterable, List, Sequence, Set from .base import EvidenceIndex, ValidationContext, ValidationIssue, Validator _SENTENCE_BOUNDARY = re.compile(r\"(?<=[.!?])\\s+(?=[A-Z0-9`])\") _SAFE_PREFIXES = ( \"Replace this text\", \"Document the project structure\", \"Ready for continuous README generation\", \"Use this section\", \"Add deployment details\", \"Add troubleshooting guidance\", \"Add configuration details\", \"docgen could not populate\", \"docgen could not gather\", \"Follow the steps below\", \"_Observed frameworks\", ) _SAFE_EXACT = { \"This README was bootstrapped by ``docgen init`` to summarize the repository at a glance.\", \"Replace this text with a concise mission statement for the repository.\", \"Document the project structure here.\", \"Document how to set up and run the project locally.\", \"Container image can be built with `docker build -t <image> .`.\", \"Outline deployment strategies or hosting targets here.\", } class NoHallucinationValidator(Validator): \"\"\"Rejects README content that is not grounded in repository evidence.\"\"\" name = \"no_hallucination\" def __init__(self, *, min_overlap: int = 1) -> None: self._min_overlap = min_overlap def validate(self, context: ValidationContext) -> List[ValidationIssue]: issues: List[ValidationIssue] = [] for section_name, section in context.sections.items(): sentences = list(self._iter_sentences(section.body)) for sentence in sentences: if self._should_skip(sentence): continue tokens = self._extract_tokens(sentence) if not tokens: continue overlap = self._count_overlap(tokens, context.evidence, section_name) if overlap >= self._min_overlap: continue",
      "metadata": {
        "path": "docgen/validators/no_hallucination.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "6aac52147da3cd7ddbf4ced05771a3754e99fbb48d52477d95575454fdac4f69"
      }
    },
    {
      "id": "docgen/service/app.py#0",
      "vector": {
        "fastapi": 0.36178730264621084,
        "application": 0.07235746052924216,
        "entrypoint": 0.03617873026462108,
        "for": 0.07235746052924216,
        "docgen": 0.10853619079386324,
        "service": 0.14471492105848432,
        "mode": 0.10853619079386324,
        "from": 0.25325111185234755,
        "__future__": 0.03617873026462108,
        "import": 0.28942984211696865,
        "annotations": 0.03617873026462108,
        "asyncio": 0.03617873026462108,
        "pathlib": 0.03617873026462108,
        "path": 0.10853619079386324,
        "typing": 0.03617873026462108,
        "any": 0.03617873026462108,
        "callable": 0.07235746052924216,
        "optional": 0.2170723815877265,
        "try": 0.03617873026462108,
        "pragma": 0.10853619079386324,
        "no": 0.10853619079386324,
        "cover": 0.10853619079386324,
        "dependency": 0.03617873026462108,
        "depends": 0.07235746052924216,
        "responses": 0.03617873026462108,
        "jsonresponse": 0.07235746052924216,
        "pydantic": 0.03617873026462108,
        "basemodel": 0.25325111185234755,
        "_fastapi_available": 0.10853619079386324,
        "true": 0.03617873026462108,
        "except": 0.03617873026462108,
        "modulenotfounderror": 0.03617873026462108,
        "none": 0.2170723815877265,
        "type": 0.14471492105848432,
        "ignore": 0.14471492105848432,
        "assignment": 0.14471492105848432,
        "object": 0.03617873026462108,
        "false": 0.14471492105848432,
        "orchestrator": 0.2170723815877265,
        "updateoutcome": 0.03617873026462108,
        "class": 0.18089365132310542,
        "initrequest": 0.03617873026462108,
        "str": 0.28942984211696865,
        "skip_validation": 0.07235746052924216,
        "bool": 0.14471492105848432,
        "initresponse": 0.03617873026462108,
        "readme_path": 0.07235746052924216,
        "updaterequest": 0.03617873026462108,
        "diff_base": 0.03617873026462108,
        "origin": 0.03617873026462108,
        "main": 0.03617873026462108,
        "dry_run": 0.07235746052924216,
        "updateresponse": 0.03617873026462108,
        "status": 0.07235746052924216,
        "diff": 0.03617873026462108,
        "healthresponse": 0.07235746052924216,
        "def": 0.14471492105848432,
        "_default_orchestrator": 0.07235746052924216,
        "return": 0.07235746052924216,
        "create_app": 0.03617873026462108,
        "orchestrator_factory": 0.07235746052924216,
        "create": 0.03617873026462108,
        "the": 0.03617873026462108,
        "exposing": 0.03617873026462108,
        "operations": 0.03617873026462108,
        "if": 0.03617873026462108,
        "not": 0.03617873026462108,
        "validated": 0.03617873026462108,
        "via": 0.03617873026462108,
        "unit": 0.03617873026462108,
        "tests": 0.03617873026462108,
        "raise": 0.03617873026462108,
        "runtimeerror": 0.03617873026462108,
        "is": 0.03617873026462108,
        "required": 0.03617873026462108,
        "install": 0.07235746052924216,
        "it": 0.03617873026462108,
        "with": 0.03617873026462108,
        "pip": 0.03617873026462108,
        "uvicorn": 0.03617873026462108,
        "app": 0.07235746052924216,
        "title": 0.03617873026462108,
        "version": 0.03617873026462108,
        "1": 0.03617873026462108,
        "0": 0.07235746052924216,
        "async": 0.07235746052924216,
        "get_orchestrator": 0.03617873026462108,
        "lazy": 0.03617873026462108,
        "instantiate": 0.03617873026462108,
        "per": 0.03617873026462108,
        "request": 0.03617873026462108,
        "to": 0.03617873026462108,
        "keep": 0.03617873026462108,
        "state": 0.03617873026462108,
        "predictable": 0.03617873026462108,
        "get": 0.03617873026462108,
        "health": 0.07235746052924216,
        "response_model": 0.03617873026462108,
        "healthrespon": 0.03617873026462108
      },
      "text": "\"\"\"FastAPI application entrypoint for docgen service mode.\"\"\" from __future__ import annotations import asyncio from pathlib import Path from typing import Any, Callable, Optional try: # pragma: no cover - optional dependency from fastapi import Depends, FastAPI from fastapi.responses import JSONResponse from pydantic import BaseModel _FASTAPI_AVAILABLE = True except ModuleNotFoundError: # pragma: no cover - service mode optional FastAPI = None # type: ignore[assignment] Depends = None # type: ignore[assignment] JSONResponse = None # type: ignore[assignment] BaseModel = object # type: ignore[assignment] _FASTAPI_AVAILABLE = False from ..orchestrator import Orchestrator, UpdateOutcome class InitRequest(BaseModel): path: str skip_validation: bool = False class InitResponse(BaseModel): readme_path: str class UpdateRequest(BaseModel): path: str diff_base: str = \"origin/main\" dry_run: bool = False skip_validation: bool = False class UpdateResponse(BaseModel): status: str readme_path: Optional[str] = None diff: Optional[str] = None dry_run: Optional[bool] = None class HealthResponse(BaseModel): status: str def _default_orchestrator() -> Orchestrator: return Orchestrator() def create_app( orchestrator_factory: Callable[[], Orchestrator] = _default_orchestrator, ) -> FastAPI: \"\"\"Create the FastAPI application exposing docgen operations.\"\"\" if not _FASTAPI_AVAILABLE: # pragma: no cover - validated via unit tests raise RuntimeError( \"FastAPI is required for service mode. Install it with `pip install fastapi uvicorn`.\" ) app = FastAPI(title=\"DocGen Service\", version=\"1.0.0\") async def get_orchestrator() -> Orchestrator: # Lazy-instantiate per request to keep state predictable. return orchestrator_factory() @app.get(\"/health\", response_model=HealthResponse) async def health() -> HealthRespon",
      "metadata": {
        "path": "docgen/service/app.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "b1de2b75672b8fd38bde1441471d9b05cd0753800c86c141f6e4431a7a779a7f"
      }
    },
    {
      "id": "docgen/analyzers/build.py#0",
      "vector": {
        "build": 0.19477234678290495,
        "system": 0.03895446935658099,
        "analyzer": 0.11686340806974296,
        "implementation": 0.03895446935658099,
        "from": 0.23372681613948593,
        "__future__": 0.03895446935658099,
        "import": 0.2726812854960669,
        "annotations": 0.03895446935658099,
        "os": 0.03895446935658099,
        "pathlib": 0.03895446935658099,
        "path": 0.11686340806974296,
        "typing": 0.03895446935658099,
        "iterable": 0.07790893871316198,
        "list": 0.07790893871316198,
        "optional": 0.07790893871316198,
        "base": 0.03895446935658099,
        "models": 0.03895446935658099,
        "repomanifest": 0.11686340806974296,
        "signal": 0.19477234678290495,
        "utils": 0.03895446935658099,
        "detect_node_package_manager": 0.03895446935658099,
        "class": 0.03895446935658099,
        "buildanalyzer": 0.03895446935658099,
        "detects": 0.03895446935658099,
        "systems": 0.03895446935658099,
        "and": 0.03895446935658099,
        "associated": 0.03895446935658099,
        "developer": 0.03895446935658099,
        "workflows": 0.03895446935658099,
        "_py_build_files": 0.07790893871316198,
        "pyproject": 0.03895446935658099,
        "toml": 0.03895446935658099,
        "setup": 0.03895446935658099,
        "cfg": 0.03895446935658099,
        "requirements": 0.11686340806974296,
        "txt": 0.11686340806974296,
        "def": 0.11686340806974296,
        "supports": 0.03895446935658099,
        "self": 0.31163575485264794,
        "manifest": 0.19477234678290495,
        "bool": 0.07790893871316198,
        "return": 0.11686340806974296,
        "files": 0.07790893871316198,
        "analyze": 0.03895446935658099,
        "root": 0.11686340806974296,
        "manifest_paths": 0.23372681613948593,
        "file": 0.07790893871316198,
        "for": 0.03895446935658099,
        "in": 0.07790893871316198,
        "signals": 0.2726812854960669,
        "python_signal": 0.11686340806974296,
        "_python_signal": 0.07790893871316198,
        "if": 0.2726812854960669,
        "is": 0.11686340806974296,
        "not": 0.23372681613948593,
        "none": 0.15581787742632397,
        "append": 0.15581787742632397,
        "node_signal": 0.11686340806974296,
        "_node_signal": 0.03895446935658099,
        "java_signal": 0.11686340806974296,
        "_java_signal": 0.03895446935658099,
        "name": 0.03895446935658099,
        "generic": 0.07790893871316198,
        "value": 0.03895446935658099,
        "source": 0.07790893871316198,
        "metadata": 0.03895446935658099,
        "commands": 0.07790893871316198,
        "document": 0.03895446935658099,
        "steps": 0.03895446935658099,
        "here": 0.03895446935658099,
        "set": 0.03895446935658099,
        "str": 0.03895446935658099,
        "python_files": 0.07790893871316198,
        "intersection": 0.03895446935658099,
        "python": 0.07790893871316198,
        "m": 0.07790893871316198,
        "venv": 0.15581787742632397,
        "bin": 0.03895446935658099,
        "activate": 0.07790893871316198,
        "_is_windows": 0.03895446935658099,
        "else": 0.03895446935658099,
        "scripts": 0.03895446935658099,
        "pip": 0.03895446935658099,
        "install": 0.03895446935658099,
        "r": 0.03895446935658099,
        "man": 0.03895446935658099
      },
      "text": "\ufeff\"\"\"Build system analyzer implementation.\"\"\" from __future__ import annotations import os from pathlib import Path from typing import Iterable, List, Optional from .base import Analyzer from ..models import RepoManifest, Signal from .utils import detect_node_package_manager class BuildAnalyzer(Analyzer): \"\"\"Detects build systems and associated developer workflows.\"\"\" _PY_BUILD_FILES = { \"pyproject.toml\", \"setup.cfg\", \"requirements.txt\", } def supports(self, manifest: RepoManifest) -> bool: return bool(manifest.files) def analyze(self, manifest: RepoManifest) -> Iterable[Signal]: root = Path(manifest.root) manifest_paths = {file.path for file in manifest.files} signals: List[Signal] = [] python_signal = self._python_signal(manifest_paths) if python_signal is not None: signals.append(python_signal) node_signal = self._node_signal(manifest_paths) if node_signal is not None: signals.append(node_signal) java_signal = self._java_signal(root, manifest_paths) if java_signal is not None: signals.append(java_signal) if not signals: signals.append( Signal( name=\"build.generic\", value=\"generic\", source=\"build\", metadata={\"commands\": [\"# Document build steps here.\"]}, ) ) return signals def _python_signal(self, manifest_paths: set[str]) -> Optional[Signal]: python_files = self._PY_BUILD_FILES.intersection(manifest_paths) if not python_files: return None commands = [ \"python -m venv .venv\", \"source .venv/bin/activate\" if not self._is_windows() else \".\\\\.venv\\\\Scripts\\\\activate\", \"python -m pip install -r requirements.txt\" if \"requirements.txt\" in man",
      "metadata": {
        "path": "docgen/analyzers/build.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "8beaf0849c580084a2f6faacb8619a121f3d00b86db69b6c67bc4677e48603d8"
      }
    },
    {
      "id": "docgen/stores/analyzer_cache.py#0",
      "vector": {
        "persistent": 0.029285370632871136,
        "cache": 0.029285370632871136,
        "for": 0.1464268531643557,
        "analyzer": 0.0878561118986134,
        "outputs": 0.029285370632871136,
        "from": 0.1757122237972268,
        "__future__": 0.029285370632871136,
        "import": 0.20499759443009796,
        "annotations": 0.029285370632871136,
        "dataclasses": 0.029285370632871136,
        "asdict": 0.029285370632871136,
        "datetime": 0.0878561118986134,
        "utc": 0.05857074126574227,
        "json": 0.029285370632871136,
        "pathlib": 0.029285370632871136,
        "path": 0.11714148253148454,
        "typing": 0.029285370632871136,
        "dict": 0.0878561118986134,
        "iterable": 0.05857074126574227,
        "list": 0.11714148253148454,
        "optional": 0.05857074126574227,
        "sequence": 0.05857074126574227,
        "models": 0.029285370632871136,
        "signal": 0.2635683356958402,
        "_cache_version": 0.029285370632871136,
        "1": 0.029285370632871136,
        "class": 0.029285370632871136,
        "analyzercache": 0.029285370632871136,
        "stores": 0.029285370632871136,
        "signals": 0.23428296506296908,
        "keyed": 0.029285370632871136,
        "by": 0.029285370632871136,
        "identity": 0.029285370632871136,
        "and": 0.029285370632871136,
        "manifest": 0.029285370632871136,
        "fingerprint": 0.20499759443009796,
        "def": 0.11714148253148454,
        "__init__": 0.029285370632871136,
        "self": 0.4099951888601959,
        "none": 0.2928537063287114,
        "_path": 0.0878561118986134,
        "_entries": 0.11714148253148454,
        "str": 0.2635683356958402,
        "object": 0.029285370632871136,
        "_dirty": 0.05857074126574227,
        "false": 0.029285370632871136,
        "if": 0.23428296506296908,
        "is": 0.05857074126574227,
        "not": 0.1464268531643557,
        "_load": 0.029285370632871136,
        "get": 0.1464268531643557,
        "key": 0.23428296506296908,
        "signature": 0.1757122237972268,
        "entry": 0.1464268531643557,
        "return": 0.1464268531643557,
        "signals_payload": 0.0878561118986134,
        "isinstance": 0.029285370632871136,
        "payload": 0.05857074126574227,
        "in": 0.1464268531643557,
        "_signal_from_dict": 0.029285370632871136,
        "append": 0.029285370632871136,
        "store": 0.029285370632871136,
        "serialised": 0.05857074126574227,
        "_signal_to_dict": 0.029285370632871136,
        "updated_at": 0.029285370632871136,
        "now": 0.029285370632871136,
        "isoformat": 0.029285370632871136,
        "replace": 0.029285370632871136,
        "00": 0.05857074126574227,
        "z": 0.029285370632871136,
        "true": 0.029285370632871136,
        "prune": 0.029285370632871136,
        "keys_to_keep": 0.05857074126574227,
        "keep": 0.05857074126574227,
        "set": 0.029285370632871136,
        "removed": 0.05857074126574227,
        "remove": 0.029285370632871136
      },
      "text": "\"\"\"Persistent cache for analyzer outputs.\"\"\" from __future__ import annotations from dataclasses import asdict from datetime import UTC, datetime import json from pathlib import Path from typing import Dict, Iterable, List, Optional, Sequence from ..models import Signal _CACHE_VERSION = 1 class AnalyzerCache: \"\"\"Stores analyzer signals keyed by analyzer identity and manifest fingerprint.\"\"\" def __init__(self, path: Path | None) -> None: self._path = path self._entries: Dict[str, Dict[str, object]] = {} self._dirty = False if self._path is not None: self._load(self._path) def get(self, key: str, *, signature: str, fingerprint: str) -> Optional[List[Signal]]: entry = self._entries.get(key) if not entry: return None if entry.get(\"signature\") != signature: return None if entry.get(\"fingerprint\") != fingerprint: return None signals_payload = entry.get(\"signals\") if not isinstance(signals_payload, list): return None signals: List[Signal] = [] for payload in signals_payload: signal = _signal_from_dict(payload) if signal is not None: signals.append(signal) return signals def store( self, key: str, *, signature: str, fingerprint: str, signals: Sequence[Signal], ) -> None: serialised = [_signal_to_dict(signal) for signal in signals] self._entries[key] = { \"signature\": signature, \"fingerprint\": fingerprint, \"signals\": serialised, \"updated_at\": datetime.now(UTC).isoformat().replace(\"+00:00\", \"Z\"), } self._dirty = True def prune(self, keys_to_keep: Iterable[str]) -> None: keep = set(keys_to_keep) removed = [key for key in self._entries if key not in keep] if removed: for key in remove",
      "metadata": {
        "path": "docgen/stores/analyzer_cache.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "d35eecd9bbc699d377535fa814d6d3a57b9fa5323784ef77f1dba56890f1f144"
      }
    }
  ],
  "architecture": [
    {
      "id": "AGENTS.md#0",
      "vector": {
        "repository": 0.06757373783994859,
        "guidelines": 0.1013606067599229,
        "project": 0.033786868919974296,
        "structure": 0.033786868919974296,
        "module": 0.06757373783994859,
        "organization": 0.033786868919974296,
        "spec": 0.06757373783994859,
        "md": 0.033786868919974296,
        "captures": 0.033786868919974296,
        "the": 0.27029495135979437,
        "end": 0.06757373783994859,
        "to": 0.1013606067599229,
        "architecture": 0.033786868919974296,
        "component": 0.06757373783994859,
        "contracts": 0.033786868919974296,
        "and": 0.43922929595966587,
        "must": 0.033786868919974296,
        "be": 0.033786868919974296,
        "updated": 0.033786868919974296,
        "whenever": 0.033786868919974296,
        "responsibilities": 0.033786868919974296,
        "shift": 0.033786868919974296,
        "place": 0.033786868919974296,
        "python": 0.2027212135198458,
        "source": 0.033786868919974296,
        "in": 0.16893434459987147,
        "a": 0.23650808243982008,
        "docgen": 0.16893434459987147,
        "package": 0.033786868919974296,
        "create": 0.033786868919974296,
        "it": 0.033786868919974296,
        "when": 0.06757373783994859,
        "implementation": 0.033786868919974296,
        "starts": 0.033786868919974296,
        "with": 0.16893434459987147,
        "clear": 0.033786868919974296,
        "submodules": 0.033786868919974296,
        "for": 0.1013606067599229,
        "orchestrator": 0.1013606067599229,
        "analyzers": 0.033786868919974296,
        "runners": 0.033786868919974296,
        "stores": 0.033786868919974296,
        "avoid": 0.06757373783994859,
        "leaving": 0.033786868919974296,
        "logic": 0.033786868919974296,
        "repo": 0.06757373783994859,
        "root": 0.033786868919974296,
        "mirror": 0.033786868919974296,
        "runtime": 0.033786868919974296,
        "modules": 0.06757373783994859,
        "under": 0.1013606067599229,
        "tests": 0.2027212135198458,
        "using": 0.033786868919974296,
        "test_": 0.033786868919974296,
        "py": 0.1013606067599229,
        "co": 0.033786868919974296,
        "locate": 0.033786868919974296,
        "fixtures": 0.06757373783994859,
        "_fixtures": 0.033786868919974296,
        "so": 0.13514747567989718,
        "imports": 0.06757373783994859,
        "stay": 0.06757373783994859,
        "clean": 0.033786868919974296,
        "reusable": 0.033786868919974296,
        "keep": 0.13514747567989718,
        "throwaway": 0.033786868919974296,
        "experiments": 0.033786868919974296,
        "inside": 0.033786868919974296,
        "an": 0.06757373783994859,
        "ignored": 0.033786868919974296,
        "sandbox": 0.033786868919974296,
        "directory": 0.033786868919974296,
        "scans": 0.033786868919974296,
        "remain": 0.033786868919974296,
        "focused": 0.033786868919974296,
        "on": 0.06757373783994859,
        "production": 0.033786868919974296,
        "code": 0.033786868919974296,
        "paths": 0.033786868919974296,
        "build": 0.033786868919974296,
        "test": 0.06757373783994859,
        "development": 0.033786868919974296,
        "commands": 0.033786868919974296,
        "m": 0.16893434459987147,
        "venv": 0.1013606067599229,
        "followed": 0.033786868919974296,
        "by": 0.033786868919974296,
        "scripts": 0.06757373783994859,
        "activate": 0.033786868919974296,
        "aligns": 0.033786868919974296,
        "local": 0.033786868919974296,
        "shells": 0.033786868919974296,
        "pycharm": 0.033786868919974296,
        "interpreter": 0.033786868919974296,
        "settings": 0.033786868919974296,
        "pip": 0.033786868919974296,
        "install": 0.033786868919974296,
        "e": 0.033786868919974296,
        "dev": 0.033786868919974296,
        "after": 0.06757373783994859,
        "pyproject": 0.033786868919974296,
        "toml": 0.033786868919974296,
        "is": 0.1013606067599229,
        "committed": 0.033786868919974296,
        "exposes": 0.033786868919974296,
        "cli": 0.033786868919974296,
        "plugins": 0.033786868919974296,
        "editable": 0.033786868919974296,
        "form": 0.033786868919974296,
        "without": 0.033786868919974296,
        "repeated": 0.033786868919974296,
        "reinstalls": 0.033786868919974296,
        "pytest": 0.06757373783994859,
        "runs": 0.033786868919974296,
        "full": 0.033786868919974296,
        "suite": 0.033786868919974296,
        "append": 0.033786868919974296,
        "k": 0.033786868919974296,
        "pattern": 0.033786868919974296,
        "iterate": 0.033786868919974296,
        "single": 0.06757373783994859,
        "analyzer": 0.06757373783994859,
        "or": 0.06757373783994859,
        "pipeline": 0.1013606067599229,
        "stage": 0.033786868919974296,
        "mypy": 0.033786868919974296,
        "ruff": 0.033786868919974296,
        "check": 0.033786868919974296,
        "catch": 0.033786868919974296,
        "type": 0.033786868919974296,
        "drift": 0.033786868919974296,
        "lint": 0.033786868919974296,
        "violations": 0.033786868919974296,
        "before": 0.06757373783994859,
        "readme": 0.06757373783994859,
        "generation": 0.06757373783994859,
        "attempted": 0.033786868919974296,
        "coding": 0.033786868919974296,
        "style": 0.033786868919974296,
        "naming": 0.033786868919974296,
        "conventions": 0.033786868919974296,
        "follow": 0.06757373783994859,
        "pep": 0.033786868919974296,
        "8": 0.033786868919974296,
        "4": 0.033786868919974296,
        "space": 0.033786868919974296,
        "indents": 0.033786868919974296,
        "explicit": 0.033786868919974296,
        "example": 0.033786868919974296,
        "from": 0.033786868919974296,
        "import": 0.033786868919974296,
        "static": 0.033786868919974296,
        "tooling": 0.033786868919974296,
        "can": 0.033786868919974296,
        "trace": 0.033786868919974296,
        "dependencies": 0.033786868919974296,
        "name": 0.033786868919974296,
        "their": 0.033786868919974296,
        "roles": 0.033786868919974296,
        "prompt_builder": 0.033786868919974296,
        "functions": 0.033786868919974296,
        "snake_case": 0.033786868919974296,
        "descriptive": 0.06757373783994859,
        "nouns": 0.033786868919974296,
        "first": 0.033786868919974296,
        "build_prompt_section": 0.033786868919974296,
        "run": 0.033786868919974296,
        "black": 0.033786868919974296,
        "commits": 0.06757373783994859,
        "manual": 0.033786868919974296,
        "reformatting": 0.033786868919974296,
        "unless": 0.033786868919974296,
        "formatter": 0.033786868919974296,
        "cannot": 0.033786868919974296,
        "resolve": 0.033786868919974296,
        "construct": 0.033786868919974296,
        "testing": 0.06757373783994859,
        "default": 0.033786868919974296,
        "harness": 0.033786868919974296,
        "every": 0.033786868919974296,
        "needs": 0.033786868919974296,
        "unit": 0.033786868919974296,
        "coverage": 0.033786868919974296,
        "plus": 0.033786868919974296,
        "integration": 0.06757373783994859,
        "case": 0.033786868919974296,
        "that": 0.06757373783994859,
        "walks": 0.033786868919974296,
        "snapshot": 0.033786868919974296,
        "through": 0.033786868919974296,
        "use": 0.033786868919974296,
        "names": 0.033786868919974296,
        "such": 0.033786868919974296,
        "as": 0.033786868919974296,
        "test_prompt_builder_handles_missing_signals": 0.033786868919974296,
        "arrange": 0.033786868919974296,
        "act": 0.033786868919974296,
        "assert": 0.033786868919974296,
        "comments": 0.033786868919974296,
        "minimal": 0.033786868919974296,
        "but": 0.033786868919974296,
        "intentional": 0.033786868919974296,
        "store": 0.033786868919974296,
        "regression": 0.033786868919974296,
        "generated": 0.033786868919974296,
        "slices": 0.033786868919974296,
        "data": 0.033786868919974296,
        "update": 0.033786868919974296,
        "them": 0.033786868919974296,
        "helper": 0.033786868919974296,
        "diffs": 0.033786868919974296,
        "reviewable": 0.033786868919974296,
        "commit": 0.033786868919974296,
        "pull": 0.033786868919974296,
        "request": 0.033786868919974296,
        "conventional": 0.033786868919974296,
        "feat": 0.033786868919974296,
        "fix": 0.033786868919974296,
        "docs": 0.033786868919974296,
        "subject": 0.033786868919974296,
        "lines": 0.033786868919974296,
        "72": 0.033786868919974296,
        "characters": 0.033786868919974296,
        "explain": 0.033786868919974296,
        "broader": 0.033786868919974296,
        "scope": 0.033786868919974296,
        "body": 0.033786868919974296,
        "multiple": 0.033786868919974296,
        "subsystems": 0.033786868919974296,
        "change": 0.033786868919974296,
        "bundle": 0.033786868919974296,
        "related": 0.033786868919974296,
        "work": 0.033786868919974296,
        "into": 0.033786868919974296,
        "pr": 0.033786868919974296,
        "includes": 0.033786868919974296,
        "summary": 0.033786868919974296,
        "notes": 0.033786868919974296,
        "links": 0.033786868919974296
      },
      "text": "# Repository Guidelines ## Project Structure & Module Organization - `spec/spec.md` captures the end-to-end architecture, component contracts, and must be updated whenever responsibilities shift. - Place Python source in a `docgen/` package (create it when implementation starts) with clear submodules for orchestrator, analyzers, runners, and stores; avoid leaving logic in the repo root. - Mirror runtime modules under `tests/` using `test_<module>.py`; co-locate fixtures in `tests/_fixtures/` so imports stay clean and reusable. - Keep throwaway experiments inside an ignored `sandbox/` directory so repository scans remain focused on production code paths. ## Build, Test, and Development Commands - `python -m venv .venv` followed by `.\\\\.venv\\\\Scripts\\\\activate` aligns local shells with the PyCharm interpreter settings. - `python -m pip install -e .[dev]` (after a `pyproject.toml` is committed) exposes the CLI and plugins in editable form without repeated reinstalls. - `python -m pytest` runs the full suite; append `-k <pattern>` to iterate on a single analyzer or pipeline stage. - `python -m mypy docgen` and `python -m ruff check docgen tests` catch type drift and lint violations before README generation is attempted. ## Coding Style & Naming Conventions - Follow PEP 8 with 4-space indents and explicit imports (for example, `from docgen.orchestrator import Pipeline`) so static tooling can trace dependencies. - Name modules after their roles (`orchestrator.py`, `prompt_builder.py`) and keep functions snake_case with descriptive nouns first (`build_prompt_section`). - Run `black docgen tests` before commits; avoid manual reformatting unless the formatter cannot resolve a construct. ## Testing Guidelines - Pytest is the default harness; every analyzer or pipeline component needs unit coverage plus an integration case under `tests/integration/` that walks a repo snapshot through generation. - Use descriptive test names such as `test_prompt_builder_handles_missing_signals` and keep Arrange-Act-Assert comments minimal but intentional. - Store regression fixtures for generated README slices under `tests/data/` and update them with helper scripts so diffs stay reviewable. ## Commit & Pull Request Guidelines - Follow Conventional Commits (`feat:`, `fix:`, `docs:`); keep subject lines <=72 characters and explain broader scope in the body when multiple subsystems change. - Bundle related work into a single PR that includes a summary, testing notes, and links to",
      "metadata": {
        "path": "AGENTS.md",
        "tags": [
          "docs"
        ],
        "hash": "dfeeea63c97ae7cb3036fbb0312edaee5f377b31178db6fbde6c843da7ceb8d2"
      }
    },
    {
      "id": "AGENTS.md#1",
      "vector": {
        "readme": 0.1270001270001905,
        "slices": 0.06350006350009525,
        "under": 0.06350006350009525,
        "tests": 0.06350006350009525,
        "data": 0.06350006350009525,
        "and": 0.4445004445006667,
        "update": 0.06350006350009525,
        "them": 0.06350006350009525,
        "with": 0.06350006350009525,
        "helper": 0.06350006350009525,
        "scripts": 0.06350006350009525,
        "so": 0.06350006350009525,
        "diffs": 0.06350006350009525,
        "stay": 0.06350006350009525,
        "reviewable": 0.06350006350009525,
        "commit": 0.1270001270001905,
        "pull": 0.06350006350009525,
        "request": 0.06350006350009525,
        "guidelines": 0.06350006350009525,
        "follow": 0.06350006350009525,
        "conventional": 0.06350006350009525,
        "commits": 0.06350006350009525,
        "feat": 0.06350006350009525,
        "fix": 0.06350006350009525,
        "docs": 0.1270001270001905,
        "keep": 0.1270001270001905,
        "subject": 0.06350006350009525,
        "lines": 0.06350006350009525,
        "72": 0.06350006350009525,
        "characters": 0.06350006350009525,
        "explain": 0.06350006350009525,
        "broader": 0.06350006350009525,
        "scope": 0.06350006350009525,
        "in": 0.254000254000381,
        "the": 0.31750031750047625,
        "body": 0.06350006350009525,
        "when": 0.1270001270001905,
        "multiple": 0.06350006350009525,
        "subsystems": 0.06350006350009525,
        "change": 0.06350006350009525,
        "bundle": 0.06350006350009525,
        "related": 0.06350006350009525,
        "work": 0.1270001270001905,
        "into": 0.06350006350009525,
        "a": 0.254000254000381,
        "single": 0.06350006350009525,
        "pr": 0.1270001270001905,
        "that": 0.06350006350009525,
        "includes": 0.06350006350009525,
        "summary": 0.06350006350009525,
        "testing": 0.06350006350009525,
        "notes": 0.1270001270001905,
        "links": 0.06350006350009525,
        "to": 0.06350006350009525,
        "relevant": 0.06350006350009525,
        "issues": 0.06350006350009525,
        "or": 0.06350006350009525,
        "spec": 0.06350006350009525,
        "sections": 0.06350006350009525,
        "attach": 0.06350006350009525,
        "before": 0.1270001270001905,
        "after": 0.06350006350009525,
        "excerpts": 0.06350006350009525,
        "altering": 0.06350006350009525,
        "generation": 0.06350006350009525,
        "output": 0.06350006350009525,
        "run": 0.06350006350009525,
        "lint": 0.06350006350009525,
        "type": 0.06350006350009525,
        "check": 0.06350006350009525,
        "test": 0.06350006350009525,
        "commands": 0.06350006350009525,
        "opening": 0.06350006350009525,
        "paste": 0.06350006350009525,
        "condensed": 0.06350006350009525,
        "results": 0.06350006350009525,
        "description": 0.06350006350009525,
        "for": 0.06350006350009525,
        "quick": 0.06350006350009525,
        "verification": 0.06350006350009525,
        "environment": 0.1270001270001905,
        "tooling": 0.06350006350009525,
        "reuse": 0.06350006350009525,
        "local": 0.1270001270001905,
        "venv": 0.06350006350009525,
        "seeded": 0.06350006350009525,
        "by": 0.1270001270001905,
        "pycharm": 0.06350006350009525,
        "do": 0.06350006350009525,
        "not": 0.06350006350009525,
        "artifacts": 0.06350006350009525,
        "store": 0.06350006350009525,
        "secrets": 0.06350006350009525,
        "env": 0.06350006350009525,
        "consumed": 0.06350006350009525,
        "llm": 0.06350006350009525,
        "runner": 0.06350006350009525,
        "large": 0.06350006350009525,
        "model": 0.06350006350009525,
        "weights": 0.06350006350009525,
        "outside": 0.06350006350009525,
        "repository": 0.06350006350009525,
        "document": 0.06350006350009525,
        "their": 0.06350006350009525,
        "locations": 0.06350006350009525,
        "models": 0.06350006350009525,
        "md": 0.06350006350009525,
        "once": 0.06350006350009525,
        "integration": 0.06350006350009525,
        "begins": 0.06350006350009525
      },
      "text": "README slices under `tests/data/` and update them with helper scripts so diffs stay reviewable. ## Commit & Pull Request Guidelines - Follow Conventional Commits (`feat:`, `fix:`, `docs:`); keep subject lines <=72 characters and explain broader scope in the body when multiple subsystems change. - Bundle related work into a single PR that includes a summary, testing notes, and links to relevant issues or spec sections; attach before/after README excerpts when altering generation output. - Run lint, type-check, and test commands before opening a PR and paste condensed results in the description for quick verification. ## Environment & Tooling Notes - Reuse the local `.venv` seeded by PyCharm; do not commit environment artifacts and store secrets in a `.env` consumed by the local LLM runner. - Keep large model weights outside the repository and document their locations in `docs/models.md` once integration work begins.",
      "metadata": {
        "path": "AGENTS.md",
        "tags": [
          "docs"
        ],
        "hash": "dfeeea63c97ae7cb3036fbb0312edaee5f377b31178db6fbde6c843da7ceb8d2"
      }
    },
    {
      "id": "docgen/repo_scanner.py#0",
      "vector": {
        "repository": 0.04233337566673017,
        "scanning": 0.04233337566673017,
        "and": 0.04233337566673017,
        "manifest": 0.04233337566673017,
        "building": 0.04233337566673017,
        "utilities": 0.04233337566673017,
        "from": 0.33866700533384136,
        "__future__": 0.04233337566673017,
        "import": 0.4233337566673017,
        "annotations": 0.04233337566673017,
        "hashlib": 0.04233337566673017,
        "json": 0.16933350266692068,
        "os": 0.04233337566673017,
        "dataclasses": 0.04233337566673017,
        "dataclass": 0.08466675133346034,
        "fnmatch": 0.04233337566673017,
        "fnmatchcase": 0.04233337566673017,
        "pathlib": 0.04233337566673017,
        "path": 0.04233337566673017,
        "typing": 0.04233337566673017,
        "dict": 0.04233337566673017,
        "iterator": 0.04233337566673017,
        "list": 0.04233337566673017,
        "sequence": 0.04233337566673017,
        "config": 0.1270001270001905,
        "configerror": 0.04233337566673017,
        "load_config": 0.04233337566673017,
        "models": 0.04233337566673017,
        "filemeta": 0.04233337566673017,
        "repomanifest": 0.04233337566673017,
        "_excluded_dirs": 0.04233337566673017,
        "git": 0.04233337566673017,
        "hg": 0.04233337566673017,
        "svn": 0.04233337566673017,
        "venv": 0.04233337566673017,
        "node_modules": 0.04233337566673017,
        "__pycache__": 0.04233337566673017,
        "pytest_cache": 0.04233337566673017,
        "mypy_cache": 0.04233337566673017,
        "idea": 0.04233337566673017,
        "docgen": 0.08466675133346034,
        "sandbox": 0.04233337566673017,
        "_excluded_files": 0.04233337566673017,
        "readme": 0.04233337566673017,
        "md": 0.04233337566673017,
        "ds_store": 0.04233337566673017,
        "thumbs": 0.04233337566673017,
        "db": 0.04233337566673017,
        "_language_by_suffix": 0.04233337566673017,
        "py": 0.04233337566673017,
        "python": 0.08466675133346034,
        "pyi": 0.04233337566673017,
        "js": 0.04233337566673017,
        "javascript": 0.08466675133346034,
        "ts": 0.04233337566673017,
        "typescript": 0.08466675133346034,
        "tsx": 0.04233337566673017,
        "jsx": 0.04233337566673017,
        "java": 0.08466675133346034,
        "kt": 0.04233337566673017,
        "kotlin": 0.08466675133346034,
        "kts": 0.04233337566673017,
        "go": 0.08466675133346034,
        "rs": 0.04233337566673017,
        "rust": 0.04233337566673017,
        "rb": 0.04233337566673017,
        "ruby": 0.04233337566673017,
        "php": 0.08466675133346034,
        "cs": 0.04233337566673017,
        "c": 0.4233337566673017,
        "h": 0.04233337566673017,
        "cpp": 0.04233337566673017,
        "hpp": 0.04233337566673017,
        "cc": 0.04233337566673017,
        "hh": 0.04233337566673017,
        "swift": 0.08466675133346034,
        "m": 0.04233337566673017,
        "objective": 0.08466675133346034,
        "mm": 0.04233337566673017,
        "scala": 0.08466675133346034,
        "r": 0.08466675133346034,
        "jl": 0.04233337566673017,
        "julia": 0.04233337566673017,
        "sh": 0.04233337566673017,
        "shell": 0.04233337566673017,
        "ps1": 0.04233337566673017,
        "powershell": 0.04233337566673017,
        "bat": 0.04233337566673017,
        "batch": 0.08466675133346034,
        "cmd": 0.04233337566673017,
        "yaml": 0.1270001270001905,
        "yml": 0.08466675133346034,
        "toml": 0.08466675133346034,
        "_role_rules": 0.04233337566673017,
        "tuple": 0.08466675133346034,
        "str": 0.16933350266692068,
        "tests": 0.04233337566673017,
        "test": 0.1270001270001905,
        "docs": 0.1270001270001905,
        "doc": 0.04233337566673017,
        "examples": 0.1270001270001905,
        "example": 0.04233337566673017,
        "infra": 0.08466675133346034,
        "_cache_filename": 0.04233337566673017,
        "manifest_cache": 0.04233337566673017,
        "_cache_version": 0.04233337566673017,
        "1": 0.04233337566673017,
        "class": 0.04233337566673017,
        "ignorerule": 0.04233337566673017,
        "represents": 0.04233337566673017,
        "an": 0.04233337566673017,
        "ignore": 0.04233337566673017,
        "rule": 0.04233337566673017,
        "parsed": 0.04233337566673017,
        "gitignore": 0.04233337566673017,
        "or": 0.04233337566673017,
        "pattern": 0.08466675133346034,
        "directory_only": 0.04233337566673017,
        "bool": 0.254000254000381,
        "anchored": 0.04233337566673017,
        "negate": 0.04233337566673017,
        "has_slash": 0.04233337566673017,
        "def": 0.04233337566673017,
        "matches": 0.04233337566673017,
        "self": 0.08466675133346034,
        "rel_path": 0.04233337566673017,
        "is_dir": 0.04233337566673017,
        "if": 0.04233337566673017,
        "not": 0.04233337566673017,
        "return": 0.04233337566673017,
        "false": 0.04233337566673017,
        "i": 0.04233337566673017
      },
      "text": "\"\"\"Repository scanning and manifest building utilities.\"\"\" from __future__ import annotations import hashlib import json import os from dataclasses import dataclass from fnmatch import fnmatchcase from pathlib import Path from typing import Dict, Iterator, List, Sequence from .config import ConfigError, load_config from .models import FileMeta, RepoManifest _EXCLUDED_DIRS = { \".git\", \".hg\", \".svn\", \".venv\", \"node_modules\", \"__pycache__\", \".pytest_cache\", \".mypy_cache\", \".idea\", \".docgen\", \"sandbox\", } _EXCLUDED_FILES = { \"README.md~\", \".DS_Store\", \"Thumbs.db\", } _LANGUAGE_BY_SUFFIX = { \".py\": \"Python\", \".pyi\": \"Python\", \".js\": \"JavaScript\", \".ts\": \"TypeScript\", \".tsx\": \"TypeScript\", \".jsx\": \"JavaScript\", \".java\": \"Java\", \".kt\": \"Kotlin\", \".kts\": \"Kotlin\", \".go\": \"Go\", \".rs\": \"Rust\", \".rb\": \"Ruby\", \".php\": \"PHP\", \".cs\": \"C#\", \".c\": \"C\", \".h\": \"C\", \".cpp\": \"C++\", \".hpp\": \"C++\", \".cc\": \"C++\", \".hh\": \"C++\", \".swift\": \"Swift\", \".m\": \"Objective-C\", \".mm\": \"Objective-C++\", \".scala\": \"Scala\", \".r\": \"R\", \".jl\": \"Julia\", \".sh\": \"Shell\", \".ps1\": \"PowerShell\", \".bat\": \"Batch\", \".cmd\": \"Batch\", \".yaml\": \"YAML\", \".yml\": \"YAML\", \".json\": \"JSON\", \".toml\": \"TOML\", } _ROLE_RULES: tuple[tuple[str, str], ...] = ( (\"tests\", \"test\"), (\"test\", \"test\"), (\"docs\", \"docs\"), (\"doc\", \"docs\"), (\"examples\", \"examples\"), (\"example\", \"examples\"), (\"config\", \"config\"), (\"infra\", \"infra\"), ) _CACHE_FILENAME = \"manifest_cache.json\" _CACHE_VERSION = 1 @dataclass class IgnoreRule: \"\"\"Represents an ignore rule parsed from .gitignore or .docgen.yml.\"\"\" pattern: str directory_only: bool anchored: bool negate: bool has_slash: bool def matches(self, rel_path: str, is_dir: bool) -> bool: if not self.pattern: return False i",
      "metadata": {
        "path": "docgen/repo_scanner.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "d3b42acab7acfa53312849c080c2858388857ed2ca00b45049527d26e6560a58"
      }
    },
    {
      "id": "docgen/git/diff.py#0",
      "vector": {
        "diff": 0.04867923835112355,
        "inspection": 0.04867923835112355,
        "utilities": 0.04867923835112355,
        "from": 0.24339619175561772,
        "__future__": 0.04867923835112355,
        "import": 0.24339619175561772,
        "annotations": 0.04867923835112355,
        "dataclasses": 0.04867923835112355,
        "dataclass": 0.14603771505337063,
        "fnmatch": 0.0973584767022471,
        "pathlib": 0.04867923835112355,
        "path": 0.14603771505337063,
        "typing": 0.04867923835112355,
        "callable": 0.04867923835112355,
        "iterable": 0.04867923835112355,
        "list": 0.04867923835112355,
        "sequence": 0.24339619175561772,
        "set": 0.04867923835112355,
        "frozen": 0.0973584767022471,
        "true": 0.14603771505337063,
        "class": 0.14603771505337063,
        "diffresult": 0.04867923835112355,
        "summary": 0.04867923835112355,
        "of": 0.04867923835112355,
        "repository": 0.0973584767022471,
        "changes": 0.0973584767022471,
        "and": 0.04867923835112355,
        "impacted": 0.04867923835112355,
        "readme": 0.24339619175561772,
        "sections": 0.1947169534044942,
        "base": 0.04867923835112355,
        "str": 0.29207543010674125,
        "changed_files": 0.04867923835112355,
        "sectionrule": 0.24339619175561772,
        "associates": 0.04867923835112355,
        "file": 0.04867923835112355,
        "change": 0.04867923835112355,
        "patterns": 0.24339619175561772,
        "with": 0.04867923835112355,
        "section": 0.14603771505337063,
        "def": 0.04867923835112355,
        "matches": 0.04867923835112355,
        "self": 0.0973584767022471,
        "bool": 0.04867923835112355,
        "for": 0.04867923835112355,
        "pattern": 0.0973584767022471,
        "in": 0.04867923835112355,
        "if": 0.04867923835112355,
        "_pattern_matches": 0.04867923835112355,
        "return": 0.0973584767022471,
        "false": 0.04867923835112355,
        "diffanalyzer": 0.04867923835112355,
        "maps": 0.04867923835112355,
        "to": 0.04867923835112355,
        "affected": 0.04867923835112355,
        "_ignored_paths": 0.04867923835112355,
        "md": 0.04867923835112355,
        "_section_rules": 0.04867923835112355,
        "build_and_test": 0.04867923835112355,
        "requirements": 0.0973584767022471,
        "txt": 0.14603771505337063,
        "pyproject": 0.0973584767022471,
        "toml": 0.0973584767022471,
        "poetry": 0.04867923835112355,
        "lock": 0.1947169534044942,
        "pipfile": 0.0973584767022471,
        "package": 0.14603771505337063,
        "json": 0.14603771505337063,
        "pnpm": 0.04867923835112355,
        "yaml": 0.0973584767022471,
        "yarn": 0.04867923835112355,
        "pom": 0.04867923835112355,
        "xml": 0.04867923835112355,
        "build": 0.0973584767022471,
        "gradle": 0.14603771505337063,
        "kts": 0.04867923835112355,
        "makefile": 0.0973584767022471,
        "cmakelists": 0.04867923835112355,
        "setup": 0.0973584767022471,
        "cfg": 0.04867923835112355,
        "py": 0.04867923835112355,
        "tox": 0.04867923835112355,
        "ini": 0.04867923835112355,
        "tests": 0.04867923835112355,
        "quickstart": 0.04867923835112355,
        "dockerfile": 0.04867923835112355,
        "docker": 0.0973584767022471,
        "compose": 0.0973584767022471,
        "yml": 0.04867923835112355,
        "scripts": 0.04867923835112355
      },
      "text": "\"\"\"Diff inspection utilities.\"\"\" from __future__ import annotations from dataclasses import dataclass from fnmatch import fnmatch from pathlib import Path from typing import Callable, Iterable, List, Sequence, Set @dataclass(frozen=True) class DiffResult: \"\"\"Summary of repository changes and impacted README sections.\"\"\" base: str changed_files: Sequence[str] sections: Sequence[str] @dataclass(frozen=True) class SectionRule: \"\"\"Associates file change patterns with README sections.\"\"\" section: str patterns: Sequence[str] def matches(self, path: str) -> bool: for pattern in self.patterns: if _pattern_matches(path, pattern): return True return False class DiffAnalyzer: \"\"\"Maps repository changes to affected README sections.\"\"\" _IGNORED_PATHS = {\"README.md\", \"README\"} _SECTION_RULES: Sequence[SectionRule] = ( SectionRule( section=\"build_and_test\", patterns=( \"requirements.txt\", \"pyproject.toml\", \"poetry.lock\", \"Pipfile\", \"package.json\", \"package-lock.json\", \"pnpm-lock.yaml\", \"yarn.lock\", \"pom.xml\", \"build.gradle\", \"build.gradle.kts\", \"gradle/\", \"Makefile\", \"CMakeLists.txt\", \"setup.cfg\", \"setup.py\", \"tox.ini\", \"tests/\", ), ), SectionRule( section=\"quickstart\", patterns=( \"requirements.txt\", \"pyproject.toml\", \"Pipfile\", \"package.json\", \"Dockerfile\", \"docker-compose.yml\", \"docker-compose.yaml\", \"Makefile\", \"scripts/\", ), ), SectionRule(",
      "metadata": {
        "path": "docgen/git/diff.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "805617fee00b02704767ca3f528aaddcf5310733c2087a424bc7900f8d236063"
      }
    },
    {
      "id": "docgen/analyzers/patterns.py#0",
      "vector": {
        "analyzer": 0.13168538439184413,
        "for": 0.13168538439184413,
        "repository": 0.04389512813061471,
        "infrastructure": 0.08779025626122942,
        "and": 0.08779025626122942,
        "layout": 0.08779025626122942,
        "patterns": 0.17558051252245885,
        "from": 0.21947564065307354,
        "__future__": 0.04389512813061471,
        "import": 0.21947564065307354,
        "annotations": 0.04389512813061471,
        "pathlib": 0.04389512813061471,
        "path": 0.13168538439184413,
        "typing": 0.04389512813061471,
        "iterable": 0.08779025626122942,
        "list": 0.13168538439184413,
        "sequence": 0.04389512813061471,
        "base": 0.04389512813061471,
        "models": 0.04389512813061471,
        "repomanifest": 0.13168538439184413,
        "signal": 0.21947564065307354,
        "class": 0.04389512813061471,
        "patternanalyzer": 0.04389512813061471,
        "finds": 0.04389512813061471,
        "within": 0.04389512813061471,
        "the": 0.04389512813061471,
        "repo": 0.04389512813061471,
        "def": 0.08779025626122942,
        "supports": 0.04389512813061471,
        "self": 0.08779025626122942,
        "manifest": 0.21947564065307354,
        "bool": 0.08779025626122942,
        "return": 0.04389512813061471,
        "files": 0.13168538439184413,
        "analyze": 0.04389512813061471,
        "root": 0.08779025626122942,
        "paths": 0.17558051252245885,
        "file": 0.08779025626122942,
        "in": 0.17558051252245885,
        "signals": 0.13168538439184413,
        "docker_files": 0.21947564065307354,
        "_collect": 0.08779025626122942,
        "dockerfile": 0.08779025626122942,
        "docker": 0.3511610250449177,
        "compose": 0.21947564065307354,
        "yml": 0.08779025626122942,
        "yaml": 0.08779025626122942,
        "if": 0.17558051252245885,
        "quickstart": 0.21947564065307354,
        "str": 0.04389512813061471,
        "append": 0.17558051252245885,
        "build": 0.04389512813061471,
        "t": 0.04389512813061471,
        "image": 0.04389512813061471,
        "any": 0.04389512813061471,
        "name": 0.17558051252245885,
        "up": 0.04389512813061471,
        "pattern": 0.08779025626122942,
        "containerization": 0.04389512813061471,
        "value": 0.08779025626122942,
        "source": 0.08779025626122942,
        "metadata": 0.08779025626122942,
        "sorted": 0.04389512813061471,
        "summary": 0.08779025626122942,
        "artifacts": 0.04389512813061471,
        "detected": 0.08779025626122942,
        "_has_prefix": 0.04389512813061471,
        "k8s": 0.04389512813061471,
        "helm": 0.04389512813061471,
        "charts": 0.04389512813061471,
        "kubernetes": 0.13168538439184413,
        "manifests": 0.04389512813061471,
        "under": 0.04389512813061471,
        "deployment": 0.04389512813061471,
        "directories": 0.04389512813061471,
        "ci_files": 0.04389512813061471,
        "g": 0.04389512813061471
      },
      "text": "\"\"\"Analyzer for repository infrastructure and layout patterns.\"\"\" from __future__ import annotations from pathlib import Path from typing import Iterable, List, Sequence from .base import Analyzer from ..models import RepoManifest, Signal class PatternAnalyzer(Analyzer): \"\"\"Finds infrastructure and layout patterns within the repo.\"\"\" def supports(self, manifest: RepoManifest) -> bool: return bool(manifest.files) def analyze(self, manifest: RepoManifest) -> Iterable[Signal]: root = Path(manifest.root) paths = [file.path for file in manifest.files] signals: List[Signal] = [] docker_files = _collect(paths, {\"Dockerfile\", \"docker-compose.yml\", \"docker-compose.yaml\"}) if docker_files: quickstart: List[str] = [] if \"Dockerfile\" in docker_files: quickstart.append(\"docker build -t <image> .\") if any(name in docker_files for name in {\"docker-compose.yml\", \"docker-compose.yaml\"}): quickstart.append(\"docker compose up\") signals.append( Signal( name=\"pattern.containerization\", value=\"docker\", source=\"patterns\", metadata={ \"files\": sorted(docker_files), \"summary\": \"Docker artifacts detected\", \"quickstart\": quickstart, }, ) ) if _has_prefix(paths, (\"k8s/\", \"helm/\", \"charts/\")): signals.append( Signal( name=\"pattern.kubernetes\", value=\"kubernetes\", source=\"patterns\", metadata={ \"summary\": \"Kubernetes manifests detected under deployment directories\", }, ) ) ci_files = _collect( paths, { \".g",
      "metadata": {
        "path": "docgen/analyzers/patterns.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "7d8bdcdcef1e04812e2b30211dbf1d14551c2b08b8c339c29e5f3fc2701bd840"
      }
    },
    {
      "id": "README_before.md#0",
      "vector": {
        "docgen": 0.6611099775215866,
        "begin": 0.12592571000411173,
        "badges": 0.06296285500205587,
        "build": 0.15740713750513965,
        "status": 0.031481427501027934,
        "https": 0.0944442825030838,
        "img": 0.0944442825030838,
        "shields": 0.0944442825030838,
        "io": 0.0944442825030838,
        "badge": 0.0944442825030838,
        "pending": 0.031481427501027934,
        "lightgrey": 0.0944442825030838,
        "svg": 0.0944442825030838,
        "coverage": 0.06296285500205587,
        "review": 0.031481427501027934,
        "needed": 0.031481427501027934,
        "license": 0.12592571000411173,
        "tbd": 0.031481427501027934,
        "end": 0.0944442825030838,
        "toc": 0.06296285500205587,
        "table": 0.031481427501027934,
        "of": 0.031481427501027934,
        "contents": 0.031481427501027934,
        "features": 0.12592571000411173,
        "architecture": 0.06296285500205587,
        "high": 0.06296285500205587,
        "level": 0.06296285500205587,
        "flow": 0.06296285500205587,
        "component": 0.06296285500205587,
        "responsibilities": 0.06296285500205587,
        "artifacts": 0.06296285500205587,
        "and": 0.2833328475092514,
        "data": 0.06296285500205587,
        "stores": 0.06296285500205587,
        "pipeline": 0.06296285500205587,
        "sequence": 0.12592571000411173,
        "init": 0.0944442825030838,
        "patch": 0.06296285500205587,
        "update": 0.0944442825030838,
        "api": 0.06296285500205587,
        "signal": 0.06296285500205587,
        "extraction": 0.06296285500205587,
        "quick": 0.06296285500205587,
        "start": 0.06296285500205587,
        "configuration": 0.06296285500205587,
        "test": 0.06296285500205587,
        "deployment": 0.06296285500205587,
        "troubleshooting": 0.06296285500205587,
        "faq": 0.06296285500205587,
        "intro": 0.06296285500205587,
        "is": 0.031481427501027934,
        "a": 0.0944442825030838,
        "local": 0.0944442825030838,
        "first": 0.031481427501027934,
        "readme": 0.06296285500205587,
        "generator": 0.031481427501027934,
        "for": 0.0944442825030838,
        "polyglot": 0.031481427501027934,
        "repositories": 0.031481427501027934,
        "it": 0.031481427501027934,
        "scans": 0.031481427501027934,
        "every": 0.06296285500205587,
        "tracked": 0.031481427501027934,
        "file": 0.031481427501027934,
        "publishes": 0.031481427501027934,
        "analyzer": 0.06296285500205587,
        "signals": 0.0944442825030838,
        "retrieves": 0.031481427501027934,
        "grounded": 0.031481427501027934,
        "context": 0.06296285500205587,
        "guides": 0.031481427501027934,
        "llm": 0.06296285500205587,
        "through": 0.031481427501027934,
        "templated": 0.031481427501027934,
        "sections": 0.031481427501027934,
        "to": 0.031481427501027934,
        "produce": 0.031481427501027934,
        "or": 0.031481427501027934,
        "documentation": 0.031481427501027934,
        "this": 0.031481427501027934,
        "overview": 0.031481427501027934,
        "reflects": 0.031481427501027934,
        "complete": 0.031481427501027934,
        "pass": 0.031481427501027934,
        "across": 0.031481427501027934,
        "tests": 0.031481427501027934,
        "spec": 0.031481427501027934,
        "docs": 0.06296285500205587,
        "so": 0.031481427501027934,
        "contributors": 0.031481427501027934,
        "understand": 0.031481427501027934,
        "abstraction": 0.031481427501027934,
        "before": 0.031481427501027934,
        "running": 0.031481427501027934,
        "repository": 0.06296285500205587,
        "manifest": 0.031481427501027934,
        "caching": 0.031481427501027934,
        "repo_scanner": 0.031481427501027934,
        "py": 0.15740713750513965,
        "walks": 0.031481427501027934,
        "the": 0.031481427501027934,
        "tree": 0.031481427501027934,
        "respects": 0.031481427501027934,
        "gitignore": 0.031481427501027934,
        "yml": 0.031481427501027934,
        "hashes": 0.031481427501027934,
        "files": 0.031481427501027934,
        "persists": 0.031481427501027934,
        "manifest_cache": 0.031481427501027934,
        "json": 0.06296285500205587,
        "incremental": 0.031481427501027934,
        "runs": 0.031481427501027934,
        "plugin": 0.031481427501027934,
        "system": 0.031481427501027934,
        "analyzers": 0.031481427501027934,
        "discover": 0.031481427501027934,
        "language": 0.031481427501027934,
        "dependency": 0.031481427501027934,
        "entrypoint": 0.031481427501027934,
        "pattern": 0.031481427501027934,
        "structure": 0.031481427501027934,
        "that": 0.031481427501027934,
        "describe": 0.031481427501027934,
        "frameworks": 0.031481427501027934,
        "commands": 0.06296285500205587,
        "apis": 0.031481427501027934,
        "entities": 0.031481427501027934,
        "topology": 0.031481427501027934,
        "template": 0.031481427501027934,
        "driven": 0.031481427501027934,
        "prompting": 0.06296285500205587,
        "builder": 0.031481427501027934,
        "merges": 0.031481427501027934,
        "with": 0.031481427501027934,
        "jinja": 0.031481427501027934,
        "templates": 0.031481427501027934,
        "validates": 0.031481427501027934,
        "applies": 0.031481427501027934,
        "style": 0.031481427501027934,
        "presets": 0.031481427501027934,
        "injects": 0.031481427501027934,
        "retrieved": 0.031481427501027934,
        "per": 0.031481427501027934,
        "section": 0.06296285500205587,
        "lightweight": 0.031481427501027934,
        "rag": 0.06296285500205587,
        "index": 0.031481427501027934,
        "indexer": 0.031481427501027934,
        "embedder": 0.031481427501027934,
        "store": 0.031481427501027934,
        "embed": 0.031481427501027934,
        "source": 0.031481427501027934,
        "excerpts": 0.031481427501027934,
        "into": 0.031481427501027934,
        "embeddings": 0.031481427501027934,
        "scoped": 0.031481427501027934,
        "retrieval": 0.031481427501027934,
        "enforcement": 0.031481427501027934
      },
      "text": "# docgen <!-- docgen:begin:badges --> [![Build Status](https://img.shields.io/badge/build-pending-lightgrey.svg)](#) [![Coverage](https://img.shields.io/badge/coverage-review--needed-lightgrey.svg)](#) [![License](https://img.shields.io/badge/license-tbd-lightgrey.svg)](#) <!-- docgen:end:badges --> <!-- docgen:begin:toc --> ## Table of Contents - [Features](#features) - [Architecture](#architecture) - [High-Level Flow](#high-level-flow) - [Component Responsibilities](#component-responsibilities) - [Artifacts and Data Stores](#artifacts-and-data-stores) - [Pipeline Sequence (`docgen init`)](#pipeline-sequence-docgen-init) - [Patch Sequence (`docgen update`)](#patch-sequence-docgen-update) - [API Signal Extraction](#api-signal-extraction) - [Quick Start](#quick-start) - [Configuration](#configuration) - [Build & Test](#build-test) - [Deployment](#deployment) - [Troubleshooting](#troubleshooting) - [FAQ](#faq) - [License](#license) <!-- docgen:end:toc --> <!-- docgen:begin:intro --> docgen is a local-first README generator for polyglot repositories. It scans every tracked file, publishes analyzer signals, retrieves grounded context, and guides a local LLM through templated sections to produce or update documentation. This overview reflects a complete pass across `docgen/`, `tests/`, `spec/`, and `docs/` so contributors understand every abstraction before running `docgen init`. <!-- docgen:end:intro --> ## Features <!-- docgen:begin:features --> - **Repository manifest & caching** - `docgen/repo_scanner.py` walks the tree, respects `.gitignore`/`.docgen.yml`, hashes files, and persists `manifest_cache.json` for incremental runs. - **Analyzer plugin system** - `docgen/analyzers/*` discover language, build, dependency, entrypoint, pattern, and structure signals that describe frameworks, commands, APIs, entities, and repository topology. - **Template-driven prompting** - `docgen/prompting/builder.py` merges signals with Jinja templates, validates commands, applies style presets, and injects retrieved context per section. - **Lightweight RAG index** - `docgen/rag/indexer.py`, `embedder.py`, and `store.py` embed README/docs/source excerpts into `.docgen/embeddings.json` for section-scoped retrieval. - **Local LLM enforcement** -",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#1",
      "vector": {
        "docgen": 0.48261708906584017,
        "prompting": 0.06434894520877868,
        "builder": 0.03217447260438934,
        "py": 0.3217447260438934,
        "merges": 0.03217447260438934,
        "signals": 0.03217447260438934,
        "with": 0.06434894520877868,
        "jinja": 0.06434894520877868,
        "templates": 0.06434894520877868,
        "validates": 0.03217447260438934,
        "commands": 0.03217447260438934,
        "applies": 0.03217447260438934,
        "style": 0.03217447260438934,
        "presets": 0.03217447260438934,
        "and": 0.2252213082307254,
        "injects": 0.03217447260438934,
        "retrieved": 0.03217447260438934,
        "context": 0.03217447260438934,
        "per": 0.03217447260438934,
        "section": 0.06434894520877868,
        "lightweight": 0.03217447260438934,
        "rag": 0.1608723630219467,
        "index": 0.03217447260438934,
        "indexer": 0.03217447260438934,
        "embedder": 0.03217447260438934,
        "store": 0.03217447260438934,
        "embed": 0.03217447260438934,
        "readme": 0.09652341781316803,
        "docs": 0.03217447260438934,
        "source": 0.03217447260438934,
        "excerpts": 0.03217447260438934,
        "into": 0.03217447260438934,
        "embeddings": 0.06434894520877868,
        "json": 0.06434894520877868,
        "for": 0.03217447260438934,
        "scoped": 0.03217447260438934,
        "retrieval": 0.03217447260438934,
        "local": 0.06434894520877868,
        "llm": 0.19304683562633607,
        "enforcement": 0.03217447260438934,
        "runner": 0.06434894520877868,
        "targets": 0.03217447260438934,
        "loopback": 0.03217447260438934,
        "model": 0.06434894520877868,
        "or": 0.06434894520877868,
        "ollama": 0.03217447260438934,
        "blocks": 0.03217447260438934,
        "remote": 0.03217447260438934,
        "hosts": 0.03217447260438934,
        "exposes": 0.03217447260438934,
        "configurable": 0.03217447260438934,
        "temperature": 0.03217447260438934,
        "token": 0.03217447260438934,
        "limits": 0.03217447260438934,
        "post": 0.2252213082307254,
        "processing": 0.09652341781316803,
        "contract": 0.03217447260438934,
        "postproc": 0.03217447260438934,
        "add": 0.03217447260438934,
        "badges": 0.06434894520877868,
        "rebuild": 0.03217447260438934,
        "the": 0.1608723630219467,
        "toc": 0.06434894520877868,
        "lint": 0.06434894520877868,
        "markdown": 0.03217447260438934,
        "validate": 0.03217447260438934,
        "links": 0.06434894520877868,
        "manage": 0.03217447260438934,
        "markers": 0.03217447260438934,
        "compute": 0.03217447260438934,
        "scorecards": 0.03217447260438934,
        "saved": 0.03217447260438934,
        "to": 0.09652341781316803,
        "scorecard": 0.06434894520877868,
        "git": 0.1608723630219467,
        "aware": 0.03217447260438934,
        "publishing": 0.06434894520877868,
        "diff": 0.03217447260438934,
        "maps": 0.03217447260438934,
        "changed": 0.03217447260438934,
        "files": 0.03217447260438934,
        "sections": 0.03217447260438934,
        "while": 0.03217447260438934,
        "publisher": 0.06434894520877868,
        "commits": 0.03217447260438934,
        "opens": 0.03217447260438934,
        "prs": 0.03217447260438934,
        "generated": 0.03217447260438934,
        "deltas": 0.03217447260438934,
        "via": 0.03217447260438934,
        "github": 0.03217447260438934,
        "cli": 0.19304683562633607,
        "resilient": 0.03217447260438934,
        "ux": 0.03217447260438934,
        "failsafe": 0.03217447260438934,
        "provide": 0.03217447260438934,
        "verbose": 0.03217447260438934,
        "logging": 0.03217447260438934,
        "hooks": 0.03217447260438934,
        "dry": 0.03217447260438934,
        "run": 0.03217447260438934,
        "preview": 0.03217447260438934,
        "support": 0.03217447260438934,
        "fallback": 0.03217447260438934,
        "stubs": 0.03217447260438934,
        "when": 0.03217447260438934,
        "pipeline": 0.06434894520877868,
        "cannot": 0.03217447260438934,
        "complete": 0.03217447260438934,
        "end": 0.09652341781316803,
        "features": 0.03217447260438934,
        "architecture": 0.06434894520877868,
        "begin": 0.03217447260438934,
        "high": 0.03217447260438934,
        "level": 0.03217447260438934,
        "flow": 0.03217447260438934,
        "orchestrator": 0.09652341781316803,
        "coordinates": 0.03217447260438934,
        "described": 0.03217447260438934,
        "in": 0.03217447260438934,
        "spec": 0.06434894520877868,
        "md": 0.06434894520877868,
        "composing": 0.03217447260438934,
        "scanners": 0.03217447260438934,
        "analyzers": 0.06434894520877868,
        "services": 0.03217447260438934,
        "mermaid": 0.03217447260438934,
        "flowchart": 0.03217447260438934,
        "lr": 0.03217447260438934,
        "init": 0.03217447260438934,
        "update": 0.03217447260438934,
        "orc": 0.2573957808351147,
        "scan": 0.06434894520877868,
        "reposcanner": 0.03217447260438934,
        "n": 0.2252213082307254,
        "manifest": 0.03217447260438934,
        "ana": 0.06434894520877868,
        "language": 0.03217447260438934,
        "build": 0.03217447260438934,
        "etc": 0.03217447260438934,
        "ragindexer": 0.03217447260438934,
        "prompt": 0.1608723630219467,
        "promptbuilder": 0.03217447260438934,
        "llmrunner": 0.03217447260438934,
        "commit": 0.03217447260438934,
        "pr": 0.03217447260438934,
        "output": 0.06434894520877868,
        "artifacts": 0.03217447260438934,
        "component": 0.03217447260438934,
        "responsibilities": 0.03217447260438934,
        "layer": 0.03217447260438934,
        "key": 0.03217447260438934
      },
      "text": "- `docgen/prompting/builder.py` merges signals with Jinja templates, validates commands, applies style presets, and injects retrieved context per section. - **Lightweight RAG index** - `docgen/rag/indexer.py`, `embedder.py`, and `store.py` embed README/docs/source excerpts into `.docgen/embeddings.json` for section-scoped retrieval. - **Local LLM enforcement** - `docgen/llm/runner.py` targets loopback Model Runner or Ollama, blocks remote hosts, and exposes configurable temperature/token limits. - **Post-processing contract** - `docgen/postproc/*` add badges, rebuild the ToC, lint markdown, validate links, manage markers, and compute scorecards saved to `.docgen/scorecard.json`. - **Git-aware publishing** - `docgen/git/diff.py` maps changed files to sections while `docgen/git/publisher.py` commits or opens PRs with generated README deltas via the GitHub CLI. - **Resilient CLI UX** - `docgen/cli.py` and `docgen/failsafe.py` provide verbose logging hooks, dry-run preview support, and fallback stubs when the LLM pipeline cannot complete. <!-- docgen:end:features --> ## Architecture <!-- docgen:begin:architecture --> ### High-Level Flow The orchestrator (`docgen/orchestrator.py`) coordinates the end-to-end pipeline described in `spec/spec.md`, composing scanners, analyzers, prompting, RAG, post-processing, and publishing services. ```mermaid flowchart LR CLI[\"CLI (docgen init/update)\"] Orc[\"Orchestrator\"] Scan[\"RepoScanner\\n(manifest)\"] Ana[\"Analyzers\\n(language/build/etc)\"] RAG[\"RAGIndexer\\n(embeddings)\"] Prompt[\"PromptBuilder\\n(Jinja templates)\"] LLM[\"LLMRunner\\n(local model)\"] Post[\"Post-Processing\\n(lint, ToC, badges, links, scorecard)\"] Git[\"Publisher\\n(commit/PR)\"] Output[\"README.md + .docgen artifacts\"] CLI --> Orc Orc --> Scan Orc --> Ana Orc --> RAG Orc --> Prompt Prompt --> LLM LLM --> Prompt Prompt --> Orc Orc --> Post Post --> Output Post --> Git ``` ### Component Responsibilities | Layer | Key",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#2",
      "vector": {
        "orc": 0.2960684541064695,
        "scan": 0.042295493443781355,
        "ana": 0.042295493443781355,
        "rag": 0.12688648033134406,
        "prompt": 0.16918197377512542,
        "llm": 0.16918197377512542,
        "post": 0.16918197377512542,
        "output": 0.042295493443781355,
        "git": 0.042295493443781355,
        "component": 0.042295493443781355,
        "responsibilities": 0.042295493443781355,
        "layer": 0.042295493443781355,
        "key": 0.042295493443781355,
        "modules": 0.08459098688756271,
        "purpose": 0.042295493443781355,
        "cli": 0.12688648033134406,
        "logging": 0.08459098688756271,
        "docgen": 0.46525042788159493,
        "py": 0.42295493443781357,
        "parses": 0.08459098688756271,
        "subcommands": 0.042295493443781355,
        "wires": 0.042295493443781355,
        "verbose": 0.042295493443781355,
        "and": 0.33836394755025084,
        "configures": 0.042295493443781355,
        "namespaced": 0.042295493443781355,
        "loggers": 0.042295493443781355,
        "configuration": 0.042295493443781355,
        "config": 0.042295493443781355,
        "yml": 0.042295493443781355,
        "into": 0.042295493443781355,
        "docgenconfig": 0.042295493443781355,
        "llmconfig": 0.042295493443781355,
        "publishconfig": 0.042295493443781355,
        "analyzerconfig": 0.042295493443781355,
        "ciconfig": 0.042295493443781355,
        "with": 0.042295493443781355,
        "a": 0.042295493443781355,
        "handwritten": 0.042295493443781355,
        "yaml": 0.042295493443781355,
        "fallback": 0.042295493443781355,
        "repository": 0.042295493443781355,
        "scanning": 0.042295493443781355,
        "repo_scanner": 0.042295493443781355,
        "builds": 0.08459098688756271,
        "repomanifest": 0.042295493443781355,
        "of": 0.08459098688756271,
        "filemeta": 0.042295493443781355,
        "entries": 0.042295493443781355,
        "enforces": 0.042295493443781355,
        "ignore": 0.042295493443781355,
        "rules": 0.042295493443781355,
        "infers": 0.042295493443781355,
        "file": 0.042295493443781355,
        "roles": 0.042295493443781355,
        "caches": 0.042295493443781355,
        "hashes": 0.042295493443781355,
        "in": 0.042295493443781355,
        "manifest_cache": 0.042295493443781355,
        "json": 0.042295493443781355,
        "analyzer": 0.042295493443781355,
        "plugins": 0.042295493443781355,
        "analyzers": 0.042295493443781355,
        "emit": 0.042295493443781355,
        "signal": 0.042295493443781355,
        "objects": 0.042295493443781355,
        "for": 0.042295493443781355,
        "languages": 0.042295493443781355,
        "frameworks": 0.042295493443781355,
        "build": 0.042295493443781355,
        "tools": 0.042295493443781355,
        "dependencies": 0.042295493443781355,
        "entrypoints": 0.042295493443781355,
        "structural": 0.042295493443781355,
        "api": 0.042295493443781355,
        "routes": 0.042295493443781355,
        "entities": 0.042295493443781355,
        "patterns": 0.042295493443781355,
        "monorepo": 0.042295493443781355,
        "hints": 0.042295493443781355,
        "prompting": 0.08459098688756271,
        "builder": 0.042295493443781355,
        "templates": 0.08459098688756271,
        "groups": 0.042295493443781355,
        "signals": 0.042295493443781355,
        "retrieves": 0.042295493443781355,
        "context": 0.08459098688756271,
        "renders": 0.042295493443781355,
        "section": 0.08459098688756271,
        "performs": 0.042295493443781355,
        "command": 0.042295493443781355,
        "validation": 0.042295493443781355,
        "estimates": 0.042295493443781355,
        "token": 0.042295493443781355,
        "budgets": 0.042295493443781355,
        "retrieval": 0.042295493443781355,
        "indexer": 0.042295493443781355,
        "embedder": 0.042295493443781355,
        "store": 0.042295493443781355,
        "constants": 0.042295493443781355,
        "chunks": 0.042295493443781355,
        "readme": 0.042295493443781355,
        "docs": 0.042295493443781355,
        "source": 0.042295493443781355,
        "files": 0.042295493443781355,
        "computes": 0.042295493443781355,
        "bag": 0.042295493443781355,
        "words": 0.042295493443781355,
        "embeddings": 0.042295493443781355,
        "persists": 0.042295493443781355,
        "per": 0.042295493443781355,
        "prunes": 0.042295493443781355,
        "stale": 0.042295493443781355,
        "vectors": 0.042295493443781355,
        "runtime": 0.042295493443781355,
        "runner": 0.042295493443781355,
        "chooses": 0.042295493443781355,
        "http": 0.042295493443781355,
        "or": 0.042295493443781355,
        "execution": 0.042295493443781355,
        "openai": 0.042295493443781355,
        "compatible": 0.042295493443781355,
        "payloads": 0.042295493443781355,
        "restricts": 0.042295493443781355,
        "to": 0.042295493443781355,
        "loopback": 0.042295493443781355,
        "hosts": 0.042295493443781355,
        "normalizes": 0.042295493443781355,
        "responses": 0.042295493443781355,
        "processing": 0.042295493443781355,
        "postproc": 0.042295493443781355,
        "manages": 0.042295493443781355,
        "markers": 0.042295493443781355,
        "regenerates": 0.042295493443781355,
        "toc": 0.042295493443781355,
        "applies": 0.042295493443781355,
        "badges": 0.042295493443781355,
        "lints": 0.042295493443781355,
        "markdown": 0.042295493443781355,
        "validates": 0.042295493443781355,
        "links": 0.042295493443781355
      },
      "text": "--> Orc Orc --> Scan Orc --> Ana Orc --> RAG Orc --> Prompt Prompt --> LLM LLM --> Prompt Prompt --> Orc Orc --> Post Post --> Output Post --> Git ``` ### Component Responsibilities | Layer | Key modules | Purpose | | --- | --- | --- | | CLI & Logging | `docgen/cli.py`, `docgen/logging.py` | Parses subcommands, wires `--verbose`, and configures namespaced loggers. | | Configuration | `docgen/config.py` | Parses `.docgen.yml` into `DocGenConfig`, `LLMConfig`, `PublishConfig`, `AnalyzerConfig`, and `CIConfig`, with a handwritten YAML fallback. | | Repository scanning | `docgen/repo_scanner.py` | Builds `RepoManifest` of `FileMeta` entries, enforces ignore rules, infers file roles, and caches hashes in `.docgen/manifest_cache.json`. | | Analyzer plugins | `docgen/analyzers/*` | Emit `Signal` objects for languages, frameworks, build tools, dependencies, entrypoints, structural modules, API routes, entities, patterns, and monorepo hints. | | Prompting | `docgen/prompting/builder.py`, `templates/` | Groups signals, retrieves context, renders section templates, performs command validation, and estimates token budgets. | | Retrieval (RAG) | `docgen/rag/indexer.py`, `embedder.py`, `store.py`, `constants.py` | Chunks README/docs/source files, computes bag-of-words embeddings, persists context per section, and prunes stale vectors. | | LLM runtime | `docgen/llm/runner.py` | Chooses HTTP or CLI execution, builds OpenAI-compatible payloads, restricts to loopback hosts, and normalizes responses. | | Post-processing | `docgen/postproc/*` | Manages markers, regenerates ToC, applies badges, lints markdown, validates links, and",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#3",
      "vector": {
        "vectors": 0.08497185773241747,
        "llm": 0.12745778659862622,
        "runtime": 0.08497185773241747,
        "docgen": 0.4248592886620874,
        "runner": 0.08497185773241747,
        "py": 0.16994371546483494,
        "chooses": 0.042485928866208736,
        "http": 0.042485928866208736,
        "or": 0.12745778659862622,
        "cli": 0.16994371546483494,
        "execution": 0.042485928866208736,
        "builds": 0.042485928866208736,
        "openai": 0.042485928866208736,
        "compatible": 0.042485928866208736,
        "payloads": 0.042485928866208736,
        "restricts": 0.042485928866208736,
        "to": 0.08497185773241747,
        "loopback": 0.042485928866208736,
        "hosts": 0.042485928866208736,
        "and": 0.3398874309296699,
        "normalizes": 0.042485928866208736,
        "responses": 0.042485928866208736,
        "post": 0.08497185773241747,
        "processing": 0.08497185773241747,
        "postproc": 0.042485928866208736,
        "manages": 0.042485928866208736,
        "markers": 0.042485928866208736,
        "regenerates": 0.042485928866208736,
        "toc": 0.042485928866208736,
        "applies": 0.042485928866208736,
        "badges": 0.042485928866208736,
        "lints": 0.042485928866208736,
        "markdown": 0.042485928866208736,
        "validates": 0.042485928866208736,
        "links": 0.042485928866208736,
        "records": 0.042485928866208736,
        "readme": 0.08497185773241747,
        "quality": 0.08497185773241747,
        "metrics": 0.042485928866208736,
        "git": 0.2124296443310437,
        "integration": 0.042485928866208736,
        "diff": 0.042485928866208736,
        "publisher": 0.08497185773241747,
        "maps": 0.042485928866208736,
        "file": 0.08497185773241747,
        "diffs": 0.042485928866208736,
        "affected": 0.042485928866208736,
        "sections": 0.08497185773241747,
        "handles": 0.042485928866208736,
        "staged": 0.042485928866208736,
        "changes": 0.042485928866208736,
        "pushes": 0.042485928866208736,
        "commits": 0.08497185773241747,
        "prs": 0.08497185773241747,
        "with": 0.08497185773241747,
        "optional": 0.042485928866208736,
        "labels": 0.042485928866208736,
        "safety": 0.042485928866208736,
        "nets": 0.042485928866208736,
        "failsafe": 0.042485928866208736,
        "generates": 0.042485928866208736,
        "placeholder": 0.042485928866208736,
        "full": 0.042485928866208736,
        "stubs": 0.08497185773241747,
        "when": 0.042485928866208736,
        "prompting": 0.08497185773241747,
        "fails": 0.042485928866208736,
        "reference": 0.042485928866208736,
        "material": 0.042485928866208736,
        "spec": 0.16994371546483494,
        "md": 0.16994371546483494,
        "feature_order": 0.042485928866208736,
        "feature_checklist": 0.042485928866208736,
        "docs": 0.042485928866208736,
        "ci": 0.08497185773241747,
        "agents": 0.042485928866208736,
        "capture": 0.042485928866208736,
        "architectural": 0.042485928866208736,
        "contracts": 0.042485928866208736,
        "delivery": 0.042485928866208736,
        "roadmap": 0.042485928866208736,
        "feature": 0.042485928866208736,
        "status": 0.042485928866208736,
        "playbooks": 0.042485928866208736,
        "agent": 0.042485928866208736,
        "guidance": 0.042485928866208736,
        "tests": 0.08497185773241747,
        "mirroring": 0.042485928866208736,
        "modules": 0.042485928866208736,
        "pytest": 0.042485928866208736,
        "suite": 0.042485928866208736,
        "covering": 0.042485928866208736,
        "orchestrator": 0.08497185773241747,
        "analyzers": 0.042485928866208736,
        "workflows": 0.042485928866208736,
        "helpers": 0.042485928866208736,
        "artifacts": 0.042485928866208736,
        "data": 0.042485928866208736,
        "stores": 0.042485928866208736,
        "manifest_cache": 0.042485928866208736,
        "json": 0.12745778659862622,
        "cache": 0.042485928866208736,
        "of": 0.08497185773241747,
        "sizes": 0.042485928866208736,
        "mtimes": 0.042485928866208736,
        "hashes": 0.042485928866208736,
        "for": 0.042485928866208736,
        "fast": 0.042485928866208736,
        "re": 0.042485928866208736,
        "scans": 0.042485928866208736,
        "embeddings": 0.042485928866208736,
        "persisted": 0.042485928866208736,
        "embedding": 0.042485928866208736,
        "keyed": 0.042485928866208736,
        "by": 0.08497185773241747,
        "section": 0.042485928866208736,
        "tag": 0.042485928866208736,
        "via": 0.042485928866208736,
        "embeddingstore": 0.042485928866208736,
        "scorecard": 0.042485928866208736,
        "output": 0.042485928866208736,
        "readmescorecard": 0.042485928866208736,
        "evaluate": 0.042485928866208736,
        "tracking": 0.042485928866208736,
        "coverage": 0.042485928866208736,
        "link": 0.042485928866208736,
        "health": 0.042485928866208736,
        "quick": 0.042485928866208736,
        "start": 0.042485928866208736,
        "metadata": 0.042485928866208736,
        "branches": 0.042485928866208736,
        "created": 0.042485928866208736,
        "summaries": 0.042485928866208736,
        "from": 0.042485928866208736,
        "diffanalyzer": 0.042485928866208736,
        "pipeline": 0.042485928866208736,
        "sequence": 0.042485928866208736,
        "init": 0.042485928866208736,
        "mermaid": 0.042485928866208736,
        "sequencediagram": 0.042485928866208736,
        "participant": 0.25491557319725244,
        "dev": 0.042485928866208736,
        "as": 0.25491557319725244,
        "developer": 0.042485928866208736,
        "orc": 0.042485928866208736,
        "scan": 0.042485928866208736,
        "reposcanner": 0.042485928866208736,
        "ana": 0.042485928866208736,
        "analyzer": 0.042485928866208736,
        "plugins": 0.042485928866208736,
        "rag": 0.042485928866208736
      },
      "text": "vectors. | | LLM runtime | `docgen/llm/runner.py` | Chooses HTTP or CLI execution, builds OpenAI-compatible payloads, restricts to loopback hosts, and normalizes responses. | | Post-processing | `docgen/postproc/*` | Manages markers, regenerates ToC, applies badges, lints markdown, validates links, and records README quality metrics. | | Git integration | `docgen/git/diff.py`, `docgen/git/publisher.py` | Maps file diffs to affected sections, handles staged changes, and pushes commits or PRs with optional labels. | | Safety nets | `docgen/failsafe.py` | Generates placeholder sections or full README stubs when prompting fails. | | Reference material | `spec/spec.md`, `spec/feature_order.md`, `spec/feature_checklist.md`, `docs/ci/*`, `AGENTS.md` | Capture architectural contracts, delivery roadmap, feature status, CI playbooks, and agent guidance. | | Tests | `tests/` mirroring runtime modules | Pytest suite covering CLI, orchestrator, analyzers, prompting, git workflows, LLM runner stubs, and post-processing helpers. | ### Artifacts and Data Stores - `.docgen/manifest_cache.json` - cache of file sizes, mtimes, and hashes for fast re-scans. - `.docgen/embeddings.json` - persisted embedding vectors keyed by section/tag via `EmbeddingStore`. - `.docgen/scorecard.json` - output of `ReadmeScorecard.evaluate`, tracking coverage, link health, and quick-start quality. - Git metadata - branches/commits/PRs created by `Publisher` with summaries from `DiffAnalyzer`. ### Pipeline Sequence (`docgen init`) ```mermaid sequenceDiagram participant Dev as Developer participant CLI as docgen CLI participant Orc as Orchestrator participant Scan as RepoScanner participant Ana as Analyzer plugins participant RAG as",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#4",
      "vector": {
        "branches": 0.01984580179179854,
        "commits": 0.01984580179179854,
        "prs": 0.01984580179179854,
        "created": 0.01984580179179854,
        "by": 0.01984580179179854,
        "publisher": 0.03969160358359708,
        "with": 0.01984580179179854,
        "summaries": 0.01984580179179854,
        "from": 0.01984580179179854,
        "diffanalyzer": 0.03969160358359708,
        "pipeline": 0.01984580179179854,
        "sequence": 0.03969160358359708,
        "docgen": 0.11907481075079124,
        "init": 0.03969160358359708,
        "mermaid": 0.03969160358359708,
        "sequencediagram": 0.03969160358359708,
        "participant": 0.4167618376277693,
        "dev": 0.07938320716719416,
        "as": 0.4167618376277693,
        "developer": 0.03969160358359708,
        "cli": 0.15876641433438832,
        "orc": 0.6152198555457548,
        "orchestrator": 0.03969160358359708,
        "scan": 0.15876641433438832,
        "reposcanner": 0.03969160358359708,
        "ana": 0.11907481075079124,
        "analyzer": 0.03969160358359708,
        "plugins": 0.03969160358359708,
        "rag": 0.11907481075079124,
        "ragindexer": 0.03969160358359708,
        "prompt": 0.17861221612618686,
        "promptbuilder": 0.03969160358359708,
        "llm": 0.05953740537539562,
        "llmrunner": 0.01984580179179854,
        "post": 0.15876641433438832,
        "processing": 0.03969160358359708,
        "fs": 0.03969160358359708,
        "filesystem": 0.01984580179179854,
        "run_init": 0.01984580179179854,
        "path": 0.03969160358359708,
        "repomanifest": 0.03969160358359708,
        "filemeta": 0.01984580179179854,
        "analyze": 0.03969160358359708,
        "manifest": 0.0992290089589927,
        "signal": 0.03969160358359708,
        "build": 0.05953740537539562,
        "contexts": 0.03969160358359708,
        "per": 0.01984580179179854,
        "section": 0.07938320716719416,
        "signals": 0.01984580179179854,
        "invoke": 0.01984580179179854,
        "system": 0.01984580179179854,
        "markdown": 0.05953740537539562,
        "full": 0.01984580179179854,
        "readme": 0.07938320716719416,
        "draft": 0.01984580179179854,
        "lint": 0.03969160358359708,
        "toc": 0.03969160358359708,
        "badges": 0.03969160358359708,
        "links": 0.01984580179179854,
        "scorecard": 0.03969160358359708,
        "final": 0.03969160358359708,
        "quality": 0.01984580179179854,
        "report": 0.01984580179179854,
        "write": 0.01984580179179854,
        "md": 0.01984580179179854,
        "git": 0.01984580179179854,
        "optional": 0.01984580179179854,
        "commit": 0.05953740537539562,
        "publish": 0.01984580179179854,
        "mode": 0.01984580179179854,
        "patch": 0.01984580179179854,
        "update": 0.03969160358359708,
        "ci": 0.01984580179179854,
        "diff": 0.0992290089589927,
        "mark": 0.05953740537539562,
        "markermanager": 0.01984580179179854,
        "pub": 0.03969160358359708,
        "base": 0.05953740537539562,
        "ref": 0.01984580179179854,
        "run_update": 0.01984580179179854,
        "compute": 0.01984580179179854,
        "repo": 0.01984580179179854,
        "diffresult": 0.01984580179179854,
        "changed_files": 0.01984580179179854,
        "sections": 0.05953740537539562,
        "context": 0.01984580179179854,
        "snippets": 0.01984580179179854,
        "render_sections": 0.01984580179179854,
        "new": 0.01984580179179854,
        "bodies": 0.01984580179179854,
        "replace": 0.01984580179179854,
        "patched": 0.01984580179179854,
        "link": 0.01984580179179854,
        "check": 0.01984580179179854
      },
      "text": "branches/commits/PRs created by `Publisher` with summaries from `DiffAnalyzer`. ### Pipeline Sequence (`docgen init`) ```mermaid sequenceDiagram participant Dev as Developer participant CLI as docgen CLI participant Orc as Orchestrator participant Scan as RepoScanner participant Ana as Analyzer plugins participant RAG as RAGIndexer participant Prompt as PromptBuilder participant LLM as LLMRunner participant Post as Post-processing participant FS as Filesystem Dev->>CLI: docgen init . CLI->>Orc: run_init(path) Orc->>Scan: scan() Scan-->>Orc: RepoManifest(FileMeta[]) Orc->>Ana: analyze(manifest) Ana-->>Orc: Signal[] Orc->>RAG: build(manifest) RAG-->>Orc: contexts per section Orc->>Prompt: build(manifest, signals, contexts) Prompt->>LLM: invoke(system, prompt) LLM-->>Prompt: section markdown Prompt-->>Orc: full README draft Orc->>Post: lint -> toc -> badges -> links -> scorecard Post-->>Orc: final markdown + quality report Orc->>FS: write README.md Orc->>Git: optional commit (publish mode \"commit\") ``` ### Patch Sequence (`docgen update`) ```mermaid sequenceDiagram participant Dev as Developer/CI participant CLI as docgen CLI participant Orc as Orchestrator participant Diff as DiffAnalyzer participant Scan as RepoScanner participant Ana as Analyzer plugins participant RAG as RAGIndexer participant Prompt as PromptBuilder participant Mark as MarkerManager participant Post as Post-processing participant Pub as Publisher Dev->>CLI: docgen update --diff-base <ref> CLI->>Orc: run_update(path, base) Orc->>Diff: compute(repo, base) Diff-->>Orc: DiffResult(changed_files, sections) Orc->>Scan: scan() Scan-->>Orc: RepoManifest Orc->>Ana: analyze(manifest) Ana-->>Orc: Signal[] Orc->>RAG: build(manifest, sections) RAG-->>Orc: context snippets Orc->>Prompt: render_sections(sections) Prompt-->>Orc: new section bodies Orc->>Mark: replace(markdown, section) Mark-->>Orc: patched README Orc->>Post: lint/toc/badges/link check/scorecard Post-->>Orc: final README + diff Orc->>Pub: commit",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#5",
      "vector": {
        "base": 0.03639372626234195,
        "diff": 0.0727874525246839,
        "orc": 0.5095121676727873,
        "diffresult": 0.03639372626234195,
        "changed_files": 0.03639372626234195,
        "sections": 0.1455749050493678,
        "scan": 0.10918117878702585,
        "repomanifest": 0.03639372626234195,
        "ana": 0.0727874525246839,
        "analyze": 0.03639372626234195,
        "manifest": 0.10918117878702585,
        "signal": 0.1455749050493678,
        "rag": 0.0727874525246839,
        "build": 0.0727874525246839,
        "context": 0.03639372626234195,
        "snippets": 0.03639372626234195,
        "prompt": 0.0727874525246839,
        "render_sections": 0.03639372626234195,
        "new": 0.03639372626234195,
        "section": 0.0727874525246839,
        "bodies": 0.03639372626234195,
        "mark": 0.0727874525246839,
        "replace": 0.03639372626234195,
        "markdown": 0.03639372626234195,
        "patched": 0.03639372626234195,
        "readme": 0.0727874525246839,
        "post": 0.1455749050493678,
        "lint": 0.03639372626234195,
        "toc": 0.03639372626234195,
        "badges": 0.03639372626234195,
        "link": 0.03639372626234195,
        "check": 0.03639372626234195,
        "scorecard": 0.03639372626234195,
        "final": 0.03639372626234195,
        "pub": 0.03639372626234195,
        "commit": 0.03639372626234195,
        "or": 0.03639372626234195,
        "pr": 0.03639372626234195,
        "branch": 0.03639372626234195,
        "title": 0.03639372626234195,
        "body": 0.03639372626234195,
        "api": 0.2911498100987356,
        "extraction": 0.03639372626234195,
        "structureanalyzer": 0.03639372626234195,
        "inspects": 0.03639372626234195,
        "source": 0.03639372626234195,
        "files": 0.0727874525246839,
        "for": 0.03639372626234195,
        "fastapi": 0.10918117878702585,
        "decorators": 0.03639372626234195,
        "express": 0.03639372626234195,
        "route": 0.03639372626234195,
        "calls": 0.0727874525246839,
        "and": 0.3275435363610775,
        "pydantic": 0.03639372626234195,
        "orm": 0.03639372626234195,
        "entities": 0.03639372626234195,
        "each": 0.03639372626234195,
        "match": 0.03639372626234195,
        "emits": 0.03639372626234195,
        "metadata": 0.03639372626234195,
        "such": 0.03639372626234195,
        "as": 0.18196863131170973,
        "handler": 0.03639372626234195,
        "names": 0.03639372626234195,
        "http": 0.03639372626234195,
        "verbs": 0.03639372626234195,
        "detected": 0.03639372626234195,
        "external": 0.0727874525246839,
        "requests": 0.0727874525246839,
        "session": 0.0727874525246839,
        "db": 0.1455749050493678,
        "assembled": 0.03639372626234195,
        "sequence": 0.03639372626234195,
        "steps": 0.03639372626234195,
        "that": 0.0727874525246839,
        "downstream": 0.03639372626234195,
        "templates": 0.03639372626234195,
        "render": 0.03639372626234195,
        "diagrams": 0.03639372626234195,
        "mermaid": 0.03639372626234195,
        "sequencediagram": 0.03639372626234195,
        "participant": 0.1455749050493678,
        "client": 0.10918117878702585,
        "endpoint": 0.03639372626234195,
        "auth": 0.10918117878702585,
        "service": 0.03639372626234195,
        "database": 0.03639372626234195,
        "login": 0.03639372626234195,
        "token": 0.03639372626234195,
        "response": 0.0727874525246839,
        "write": 0.03639372626234195,
        "ack": 0.03639372626234195,
        "authenticated": 0.03639372626234195,
        "other": 0.03639372626234195,
        "analyzers": 0.0727874525246839,
        "complement": 0.03639372626234195,
        "these": 0.03639372626234195,
        "signals": 0.03639372626234195,
        "entrypointanalyzer": 0.03639372626234195,
        "ranks": 0.03639372626234195,
        "executable": 0.03639372626234195,
        "commands": 0.0727874525246839,
        "uvicorn": 0.03639372626234195,
        "django": 0.03639372626234195,
        "runserver": 0.03639372626234195,
        "npm": 0.03639372626234195,
        "dev": 0.03639372626234195,
        "spring": 0.03639372626234195,
        "boot": 0.03639372626234195,
        "bootrun": 0.03639372626234195,
        "buildanalyzer": 0.03639372626234195,
        "pairs": 0.03639372626234195,
        "with": 0.03639372626234195,
        "reproducible": 0.03639372626234195,
        "test": 0.03639372626234195,
        "os": 0.03639372626234195,
        "aware": 0.03639372626234195,
        "scripts": 0.0727874525246839,
        "dependencyanalyzer": 0.03639372626234195,
        "patternanalyzer": 0.03639372626234195,
        "languageanalyzer": 0.03639372626234195,
        "describe": 0.03639372626234195,
        "frameworks": 0.03639372626234195,
        "docker": 0.03639372626234195,
        "k8s": 0.03639372626234195,
        "ci": 0.03639372626234195,
        "layouts": 0.03639372626234195,
        "monorepo": 0.03639372626234195,
        "hints": 0.03639372626234195,
        "feed": 0.03639372626234195,
        "the": 0.03639372626234195,
        "features": 0.03639372626234195,
        "architecture": 0.0727874525246839,
        "quick": 0.0727874525246839,
        "start": 0.0727874525246839,
        "tests": 0.1455749050493678,
        "under": 0.03639372626234195,
        "prompting": 0.03639372626234195,
        "git": 0.03639372626234195,
        "assert": 0.03639372626234195,
        "accuracy": 0.03639372626234195,
        "command": 0.03639372626234195,
        "selection": 0.03639372626234195,
        "publishing": 0.03639372626234195,
        "behavior": 0.03639372626234195,
        "docgen": 0.0727874525246839,
        "end": 0.03639372626234195,
        "begin": 0.03639372626234195,
        "quickstart": 0.03639372626234195,
        "1": 0.03639372626234195,
        "create": 0.03639372626234195,
        "a": 0.03639372626234195,
        "virtual": 0.03639372626234195,
        "environment": 0.03639372626234195,
        "activate": 0.0727874525246839,
        "it": 0.03639372626234195,
        "windows": 0.03639372626234195,
        "python": 0.0727874525246839,
        "m": 0.0727874525246839,
        "venv": 0.18196863131170973,
        "then": 0.03639372626234195,
        "macos": 0.03639372626234195,
        "linux": 0.03639372626234195
      },
      "text": "base) Diff-->>Orc: DiffResult(changed_files, sections) Orc->>Scan: scan() Scan-->>Orc: RepoManifest Orc->>Ana: analyze(manifest) Ana-->>Orc: Signal[] Orc->>RAG: build(manifest, sections) RAG-->>Orc: context snippets Orc->>Prompt: render_sections(sections) Prompt-->>Orc: new section bodies Orc->>Mark: replace(markdown, section) Mark-->>Orc: patched README Orc->>Post: lint/toc/badges/link check/scorecard Post-->>Orc: final README + diff Orc->>Pub: commit or PR (branch, title, body) ``` ### API Signal Extraction `StructureAnalyzer` inspects source files for FastAPI decorators, Express route calls, and Pydantic/ORM entities. Each match emits `Signal` metadata such as handler names, HTTP verbs, detected external calls (`requests`, `session`, `db`), and assembled `sequence` steps that downstream templates render as diagrams. ```mermaid sequenceDiagram participant Client participant API as FastAPI endpoint participant Auth as External service participant DB as Database Client->>API: POST /login API->>Auth: requests.post() Auth-->>API: token/response API->>DB: session.write() DB-->>API: ack API-->>Client: Authenticated response ``` Other analyzers complement these signals: - `EntryPointAnalyzer` ranks executable commands (FastAPI `uvicorn`, Django `runserver`, npm `dev`, Spring Boot `bootRun`). - `BuildAnalyzer` pairs manifest files with reproducible build/test commands and OS-aware scripts. - `DependencyAnalyzer`, `PatternAnalyzer`, and `LanguageAnalyzer` describe frameworks, Docker/K8s/CI layouts, and monorepo hints that feed the features, architecture, and quick-start sections. - Tests under `tests/analyzers/`, `tests/prompting/`, and `tests/git/` assert signal accuracy, command selection, and publishing behavior. <!-- docgen:end:architecture --> ## Quick Start <!-- docgen:begin:quickstart --> 1. Create a virtual environment and activate it: - Windows: `python -m venv .venv` then `.\\.venv\\Scripts\\activate` - macOS/Linux: `python -m venv .venv`",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#6",
      "vector": {
        "tests": 0.04214497519610896,
        "git": 0.04214497519610896,
        "assert": 0.04214497519610896,
        "signal": 0.04214497519610896,
        "accuracy": 0.04214497519610896,
        "command": 0.04214497519610896,
        "selection": 0.04214497519610896,
        "and": 0.16857990078443583,
        "publishing": 0.04214497519610896,
        "behavior": 0.04214497519610896,
        "docgen": 0.5057397023533075,
        "end": 0.08428995039221791,
        "architecture": 0.04214497519610896,
        "quick": 0.04214497519610896,
        "start": 0.04214497519610896,
        "begin": 0.08428995039221791,
        "quickstart": 0.08428995039221791,
        "1": 0.04214497519610896,
        "create": 0.04214497519610896,
        "a": 0.08428995039221791,
        "virtual": 0.04214497519610896,
        "environment": 0.04214497519610896,
        "activate": 0.12643492558832686,
        "it": 0.04214497519610896,
        "windows": 0.04214497519610896,
        "python": 0.2528698511766537,
        "m": 0.2528698511766537,
        "venv": 0.2528698511766537,
        "then": 0.08428995039221791,
        "scripts": 0.04214497519610896,
        "macos": 0.04214497519610896,
        "linux": 0.04214497519610896,
        "source": 0.04214497519610896,
        "bin": 0.04214497519610896,
        "2": 0.08428995039221791,
        "install": 0.12643492558832686,
        "dependencies": 0.04214497519610896,
        "in": 0.04214497519610896,
        "editable": 0.04214497519610896,
        "mode": 0.08428995039221791,
        "includes": 0.04214497519610896,
        "cli": 0.12643492558832686,
        "entry": 0.04214497519610896,
        "point": 0.04214497519610896,
        "test": 0.04214497519610896,
        "tooling": 0.04214497519610896,
        "bash": 0.12643492558832686,
        "pip": 0.12643492558832686,
        "upgrade": 0.04214497519610896,
        "e": 0.04214497519610896,
        "dev": 0.04214497519610896,
        "3": 0.04214497519610896,
        "configure": 0.04214497519610896,
        "yml": 0.08428995039221791,
        "with": 0.08428995039221791,
        "local": 0.04214497519610896,
        "llm": 0.08428995039221791,
        "runner": 0.12643492558832686,
        "details": 0.04214497519610896,
        "see": 0.04214497519610896,
        "configuration": 0.12643492558832686,
        "below": 0.04214497519610896,
        "4": 0.04214497519610896,
        "generate": 0.04214497519610896,
        "an": 0.04214497519610896,
        "initial": 0.04214497519610896,
        "readme": 0.12643492558832686,
        "from": 0.04214497519610896,
        "the": 0.04214497519610896,
        "repository": 0.04214497519610896,
        "root": 0.04214497519610896,
        "init": 0.04214497519610896,
        "5": 0.04214497519610896,
        "after": 0.04214497519610896,
        "subsequent": 0.04214497519610896,
        "changes": 0.04214497519610896,
        "refresh": 0.04214497519610896,
        "documentation": 0.04214497519610896,
        "update": 0.08428995039221791,
        "diff": 0.04214497519610896,
        "base": 0.04214497519610896,
        "origin": 0.04214497519610896,
        "main": 0.04214497519610896,
        "6": 0.04214497519610896,
        "use": 0.04214497519610896,
        "dry": 0.04214497519610896,
        "run": 0.04214497519610896,
        "to": 0.04214497519610896,
        "preview": 0.04214497519610896,
        "diffs": 0.04214497519610896,
        "or": 0.16857990078443583,
        "verbose": 0.04214497519610896,
        "for": 0.04214497519610896,
        "deeper": 0.04214497519610896,
        "logs": 0.04214497519610896,
        "while": 0.04214497519610896,
        "iterating": 0.04214497519610896,
        "on": 0.04214497519610896,
        "analyzers": 0.08428995039221791,
        "config": 0.04214497519610896,
        "py": 0.04214497519610896,
        "loads": 0.04214497519610896,
        "into": 0.04214497519610896,
        "strongly": 0.04214497519610896,
        "typed": 0.04214497519610896,
        "dataclasses": 0.04214497519610896,
        "provides": 0.04214497519610896,
        "minimal": 0.04214497519610896,
        "yaml": 0.08428995039221791,
        "parser": 0.04214497519610896,
        "when": 0.04214497519610896,
        "pyyaml": 0.04214497519610896,
        "is": 0.04214497519610896,
        "absent": 0.04214497519610896,
        "common": 0.04214497519610896,
        "fields": 0.04214497519610896,
        "ollama": 0.04214497519610896,
        "model": 0.08428995039221791,
        "llama3": 0.04214497519610896,
        "8b": 0.04214497519610896,
        "instruct": 0.04214497519610896,
        "base_url": 0.04214497519610896,
        "http": 0.04214497519610896,
        "localhost": 0.04214497519610896,
        "12434": 0.04214497519610896,
        "engines": 0.04214497519610896,
        "v1": 0.04214497519610896,
        "temperature": 0.04214497519610896,
        "0": 0.04214497519610896,
        "max_tokens": 0.04214497519610896,
        "2048": 0.04214497519610896,
        "style": 0.04214497519610896,
        "comprehensive": 0.04214497519610896,
        "concise": 0.04214497519610896,
        "template_pack": 0.04214497519610896,
        "null": 0.04214497519610896,
        "optional": 0.04214497519610896,
        "alt": 0.04214497519610896,
        "templates": 0.08428995039221791,
        "under": 0.04214497519610896,
        "prompting": 0.04214497519610896,
        "publish": 0.04214497519610896,
        "pr": 0.08428995039221791,
        "commit": 0.04214497519610896,
        "branch_prefix": 0.04214497519610896,
        "labels": 0.04214497519610896,
        "docs": 0.08428995039221791,
        "auto": 0.04214497519610896,
        "update_existing": 0.04214497519610896,
        "false": 0.04214497519610896,
        "enabled": 0.04214497519610896,
        "subset": 0.04214497519610896,
        "of": 0.04214497519610896,
        "plugin": 0.04214497519610896,
        "names": 0.04214497519610896,
        "empty": 0.04214497519610896,
        "uses": 0.04214497519610896,
        "all": 0.04214497519610896,
        "built": 0.04214497519610896,
        "ins": 0.04214497519610896,
        "exclude_paths": 0.08428995039221791,
        "sandbox": 0.08428995039221791,
        "ci": 0.04214497519610896,
        "watched_globs": 0.04214497519610896
      },
      "text": "`tests/git/` assert signal accuracy, command selection, and publishing behavior. <!-- docgen:end:architecture --> ## Quick Start <!-- docgen:begin:quickstart --> 1. Create a virtual environment and activate it: - Windows: `python -m venv .venv` then `.\\.venv\\Scripts\\activate` - macOS/Linux: `python -m venv .venv` then `source .venv/bin/activate` 2. Install dependencies in editable mode (includes CLI entry point and test tooling): ```bash python -m pip install --upgrade pip python -m pip install -e .[dev] ``` 3. Configure `.docgen.yml` with local LLM runner details (see Configuration below). 4. Generate an initial README from the repository root: ```bash python -m docgen.cli init . ``` 5. After subsequent changes, refresh documentation with: ```bash python -m docgen.cli update --diff-base origin/main ``` 6. Use `--dry-run` to preview diffs or `--verbose` for deeper logs while iterating on analyzers. <!-- docgen:end:quickstart --> ## Configuration <!-- docgen:begin:configuration --> `docgen/config.py` loads `.docgen.yml` into strongly typed dataclasses and provides a minimal YAML parser when PyYAML is absent. Common fields: ```yaml llm: runner: \"ollama\" # or \"model-runner\" model: \"llama3:8b-instruct\" base_url: \"http://localhost:12434/engines/v1\" temperature: 0.2 max_tokens: 2048 readme: style: \"comprehensive\" # or \"concise\" template_pack: null # optional alt templates under docgen/prompting/templates/ publish: mode: \"pr\" # \"pr\" or \"commit\" branch_prefix: \"docgen/readme-update\" labels: [\"docs:auto\"] update_existing: false analyzers: enabled: [] # subset of plugin names, empty uses all built-ins exclude_paths: - \"sandbox/\" ci: watched_globs: - \"docgen/**\" - \"docs/**\" exclude_paths: - \"sandbox/\"",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#7",
      "vector": {
        "templates": 0.12058018065872111,
        "under": 0.12058018065872111,
        "docgen": 0.5225141161877915,
        "prompting": 0.08038678710581408,
        "publish": 0.04019339355290704,
        "mode": 0.08038678710581408,
        "pr": 0.16077357421162816,
        "or": 0.12058018065872111,
        "commit": 0.04019339355290704,
        "branch_prefix": 0.04019339355290704,
        "readme": 0.08038678710581408,
        "update": 0.12058018065872111,
        "labels": 0.04019339355290704,
        "docs": 0.24116036131744223,
        "auto": 0.04019339355290704,
        "update_existing": 0.04019339355290704,
        "false": 0.04019339355290704,
        "analyzers": 0.12058018065872111,
        "enabled": 0.04019339355290704,
        "subset": 0.04019339355290704,
        "of": 0.04019339355290704,
        "plugin": 0.04019339355290704,
        "names": 0.04019339355290704,
        "empty": 0.04019339355290704,
        "uses": 0.04019339355290704,
        "all": 0.04019339355290704,
        "built": 0.04019339355290704,
        "ins": 0.04019339355290704,
        "exclude_paths": 0.12058018065872111,
        "sandbox": 0.08038678710581408,
        "ci": 0.24116036131744223,
        "watched_globs": 0.08038678710581408,
        "highlights": 0.04019339355290704,
        "llmconfig": 0.04019339355290704,
        "supports": 0.04019339355290704,
        "env": 0.04019339355290704,
        "overrides": 0.08038678710581408,
        "docgen_llm_model": 0.04019339355290704,
        "docgen_llm_base_url": 0.04019339355290704,
        "docgen_llm_api_key": 0.04019339355290704,
        "and": 0.12058018065872111,
        "enforces": 0.04019339355290704,
        "loopback": 0.04019339355290704,
        "urls": 0.04019339355290704,
        "publishconfig": 0.04019339355290704,
        "toggles": 0.04019339355290704,
        "automatic": 0.04019339355290704,
        "commits": 0.04019339355290704,
        "creation": 0.04019339355290704,
        "publisher": 0.04019339355290704,
        "relies": 0.04019339355290704,
        "on": 0.04019339355290704,
        "the": 0.16077357421162816,
        "github": 0.12058018065872111,
        "cli": 0.08038678710581408,
        "when": 0.12058018065872111,
        "analyzerconfig": 0.04019339355290704,
        "removes": 0.04019339355290704,
        "noisy": 0.04019339355290704,
        "directories": 0.04019339355290704,
        "from": 0.04019339355290704,
        "analysis": 0.04019339355290704,
        "without": 0.04019339355290704,
        "editing": 0.04019339355290704,
        "gitignore": 0.04019339355290704,
        "template": 0.04019339355290704,
        "can": 0.04019339355290704,
        "live": 0.04019339355290704,
        "are": 0.04019339355290704,
        "picked": 0.04019339355290704,
        "up": 0.04019339355290704,
        "automatically": 0.04019339355290704,
        "present": 0.04019339355290704,
        "watchers": 0.04019339355290704,
        "skip": 0.04019339355290704,
        "updates": 0.04019339355290704,
        "changed": 0.04019339355290704,
        "files": 0.04019339355290704,
        "do": 0.04019339355290704,
        "not": 0.04019339355290704,
        "match": 0.04019339355290704,
        "aligning": 0.04019339355290704,
        "with": 0.04019339355290704,
        "workflow": 0.04019339355290704,
        "in": 0.12058018065872111,
        "yml": 0.08038678710581408,
        "end": 0.08038678710581408,
        "configuration": 0.04019339355290704,
        "build": 0.04019339355290704,
        "test": 0.08038678710581408,
        "begin": 0.08038678710581408,
        "build_and_test": 0.08038678710581408,
        "format": 0.04019339355290704,
        "lint": 0.04019339355290704,
        "bash": 0.16077357421162816,
        "black": 0.04019339355290704,
        "tests": 0.12058018065872111,
        "python": 0.2009669677645352,
        "m": 0.2009669677645352,
        "ruff": 0.04019339355290704,
        "check": 0.08038678710581408,
        "type": 0.04019339355290704,
        "core": 0.04019339355290704,
        "modules": 0.08038678710581408,
        "mypy": 0.04019339355290704,
        "run": 0.04019339355290704,
        "full": 0.04019339355290704,
        "suite": 0.04019339355290704,
        "mirrors": 0.04019339355290704,
        "runtime": 0.04019339355290704,
        "orchestrator": 0.08038678710581408,
        "git": 0.04019339355290704,
        "rag": 0.04019339355290704,
        "post": 0.04019339355290704,
        "processing": 0.04019339355290704,
        "pytest": 0.12058018065872111,
        "target": 0.04019339355290704,
        "specific": 0.04019339355290704,
        "areas": 0.04019339355290704,
        "while": 0.04019339355290704,
        "iterating": 0.04019339355290704,
        "k": 0.04019339355290704,
        "test_structure": 0.04019339355290704,
        "py": 0.04019339355290704,
        "regenerate": 0.04019339355290704,
        "fixtures": 0.04019339355290704,
        "inspect": 0.04019339355290704,
        "scorecards": 0.04019339355290704,
        "stored": 0.04019339355290704,
        "to": 0.04019339355290704,
        "validate": 0.04019339355290704,
        "generated": 0.04019339355290704,
        "content": 0.04019339355290704,
        "deployment": 0.08038678710581408,
        "actions": 0.08038678710581408,
        "recipe": 0.04019339355290704,
        "documented": 0.04019339355290704,
        "md": 0.04019339355290704,
        "installs": 0.04019339355290704,
        "package": 0.04019339355290704,
        "editable": 0.04019339355290704
      },
      "text": "templates under docgen/prompting/templates/ publish: mode: \"pr\" # \"pr\" or \"commit\" branch_prefix: \"docgen/readme-update\" labels: [\"docs:auto\"] update_existing: false analyzers: enabled: [] # subset of plugin names, empty uses all built-ins exclude_paths: - \"sandbox/\" ci: watched_globs: - \"docgen/**\" - \"docs/**\" exclude_paths: - \"sandbox/\" ``` Highlights: - `LLMConfig` supports env overrides (`DOCGEN_LLM_MODEL`, `DOCGEN_LLM_BASE_URL`, `DOCGEN_LLM_API_KEY`) and enforces loopback URLs. - `PublishConfig` toggles automatic commits or PR creation; `Publisher` relies on the GitHub CLI when `mode=\"pr\"`. - `AnalyzerConfig.exclude_paths` removes noisy directories from analysis without editing `.gitignore`. - Template overrides can live under `docs/templates/` and are picked up automatically when present. - CI watchers skip updates when changed files do not match `ci.watched_globs`, aligning with the workflow in `docs/ci/docgen-update.yml`. <!-- docgen:end:configuration --> ## Build & Test <!-- docgen:begin:build_and_test --> - Format and lint: ```bash black docgen tests python -m ruff check docgen tests ``` - Type-check core modules: ```bash python -m mypy docgen ``` - Run the full test suite (mirrors runtime modules: CLI, orchestrator, analyzers, prompting, git, RAG, post-processing): ```bash python -m pytest ``` - Target specific areas while iterating: ```bash python -m pytest -k orchestrator python -m pytest tests/analyzers/test_structure.py ``` - Regenerate README fixtures or inspect scorecards stored under `.docgen/` to validate generated content. <!-- docgen:end:build_and_test --> ## Deployment <!-- docgen:begin:deployment --> - GitHub Actions recipe: `docs/ci/docgen-update.yml` (documented in `docs/ci/github-actions.md`) installs the package in editable",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#8",
      "vector": {
        "python": 0.040555355282690636,
        "m": 0.040555355282690636,
        "pytest": 0.040555355282690636,
        "tests": 0.040555355282690636,
        "analyzers": 0.040555355282690636,
        "test_structure": 0.040555355282690636,
        "py": 0.08111071056538127,
        "regenerate": 0.040555355282690636,
        "readme": 0.12166606584807191,
        "fixtures": 0.040555355282690636,
        "or": 0.24333213169614382,
        "inspect": 0.08111071056538127,
        "scorecards": 0.040555355282690636,
        "stored": 0.040555355282690636,
        "under": 0.040555355282690636,
        "docgen": 0.48666426339228763,
        "to": 0.20277677641345318,
        "validate": 0.040555355282690636,
        "generated": 0.08111071056538127,
        "content": 0.040555355282690636,
        "end": 0.08111071056538127,
        "build_and_test": 0.040555355282690636,
        "deployment": 0.12166606584807191,
        "begin": 0.08111071056538127,
        "github": 0.12166606584807191,
        "actions": 0.08111071056538127,
        "recipe": 0.040555355282690636,
        "docs": 0.12166606584807191,
        "ci": 0.12166606584807191,
        "update": 0.16222142113076254,
        "yml": 0.040555355282690636,
        "documented": 0.040555355282690636,
        "in": 0.12166606584807191,
        "md": 0.040555355282690636,
        "installs": 0.040555355282690636,
        "the": 0.40555355282690636,
        "package": 0.040555355282690636,
        "editable": 0.040555355282690636,
        "mode": 0.08111071056538127,
        "runs": 0.040555355282690636,
        "and": 0.16222142113076254,
        "optionally": 0.040555355282690636,
        "commits": 0.08111071056538127,
        "changes": 0.040555355282690636,
        "back": 0.040555355282690636,
        "branch": 0.040555355282690636,
        "self": 0.040555355282690636,
        "hosted": 0.040555355282690636,
        "runners": 0.040555355282690636,
        "are": 0.12166606584807191,
        "recommended": 0.040555355282690636,
        "so": 0.040555355282690636,
        "workflow": 0.040555355282690636,
        "can": 0.08111071056538127,
        "reach": 0.040555355282690636,
        "your": 0.040555355282690636,
        "local": 0.08111071056538127,
        "inference": 0.040555355282690636,
        "endpoint": 0.040555355282690636,
        "docgen_llm_base_url": 0.040555355282690636,
        "same": 0.040555355282690636,
        "settings": 0.040555355282690636,
        "apply": 0.040555355282690636,
        "when": 0.12166606584807191,
        "running": 0.040555355282690636,
        "cd": 0.040555355282690636,
        "pipelines": 0.040555355282690636,
        "outside": 0.040555355282690636,
        "publisher": 0.040555355282690636,
        "push": 0.040555355282690636,
        "directly": 0.040555355282690636,
        "publish": 0.040555355282690636,
        "commit": 0.040555355282690636,
        "for": 0.040555355282690636,
        "bootstrap": 0.040555355282690636,
        "scenarios": 0.040555355282690636,
        "open": 0.040555355282690636,
        "prs": 0.040555355282690636,
        "with": 0.040555355282690636,
        "labeled": 0.040555355282690636,
        "summaries": 0.040555355282690636,
        "gh": 0.040555355282690636,
        "cli": 0.040555355282690636,
        "credentials": 0.040555355282690636,
        "available": 0.040555355282690636,
        "troubleshooting": 0.08111071056538127,
        "use": 0.040555355282690636,
        "verbose": 0.040555355282690636,
        "surface": 0.040555355282690636,
        "analyzer": 0.08111071056538127,
        "selection": 0.040555355282690636,
        "prompt": 0.08111071056538127,
        "generation": 0.040555355282690636,
        "post": 0.040555355282690636,
        "processing": 0.040555355282690636,
        "diagnostics": 0.040555355282690636,
        "emitted": 0.040555355282690636,
        "by": 0.040555355282690636,
        "get_logger": 0.040555355282690636,
        "orchestrator": 0.040555355282690636,
        "if": 0.040555355282690636,
        "already": 0.040555355282690636,
        "exists": 0.040555355282690636,
        "init": 0.040555355282690636,
        "will": 0.040555355282690636,
        "abort": 0.040555355282690636,
        "switch": 0.040555355282690636,
        "remove": 0.040555355282690636,
        "file": 0.040555355282690636,
        "before": 0.08111071056538127,
        "re": 0.040555355282690636,
        "initialising": 0.040555355282690636,
        "empty": 0.040555355282690636,
        "failing": 0.040555355282690636,
        "sections": 0.040555355282690636,
        "trigger": 0.040555355282690636,
        "fallback": 0.040555355282690636,
        "stubs": 0.040555355282690636,
        "from": 0.040555355282690636,
        "failsafe": 0.040555355282690636,
        "raised": 0.040555355282690636,
        "reason": 0.040555355282690636,
        "rerun": 0.040555355282690636,
        "once": 0.040555355282690636,
        "underlying": 0.040555355282690636,
        "issue": 0.040555355282690636,
        "is": 0.08111071056538127,
        "fixed": 0.040555355282690636,
        "link": 0.040555355282690636,
        "validation": 0.040555355282690636,
        "issues": 0.040555355282690636,
        "logged": 0.040555355282690636,
        "as": 0.040555355282690636,
        "warnings": 0.040555355282690636,
        "relative": 0.040555355282690636,
        "paths": 0.040555355282690636,
        "add": 0.040555355282690636,
        "missing": 0.040555355282690636,
        "files": 0.040555355282690636,
        "committing": 0.040555355282690636,
        "clear": 0.040555355282690636,
        "manifest_cache": 0.040555355282690636,
        "json": 0.08111071056538127,
        "embeddings": 0.040555355282690636,
        "refactoring": 0.040555355282690636,
        "large": 0.040555355282690636,
        "parts": 0.040555355282690636,
        "of": 0.040555355282690636,
        "repo": 0.040555355282690636,
        "structure": 0.040555355282690636,
        "force": 0.040555355282690636,
        "a": 0.08111071056538127,
        "fresh": 0.040555355282690636,
        "scan": 0.040555355282690636,
        "ensure": 0.040555355282690636,
        "model": 0.040555355282690636,
        "runner": 0.040555355282690636,
        "reachable": 0.040555355282690636,
        "at": 0.040555355282690636,
        "loopback": 0.040555355282690636,
        "url": 0.040555355282690636,
        "remote": 0.040555355282690636
      },
      "text": "python -m pytest tests/analyzers/test_structure.py ``` - Regenerate README fixtures or inspect scorecards stored under `.docgen/` to validate generated content. <!-- docgen:end:build_and_test --> ## Deployment <!-- docgen:begin:deployment --> - GitHub Actions recipe: `docs/ci/docgen-update.yml` (documented in `docs/ci/github-actions.md`) installs the package in editable mode, runs `docgen update`, and optionally commits README changes back to the branch. - Self-hosted runners are recommended so the workflow can reach your local inference endpoint (`DOCGEN_LLM_BASE_URL`). The same settings apply when running in CI/CD pipelines outside GitHub. - `Publisher` can push commits directly (`publish.mode: commit`) for bootstrap scenarios or open PRs with labeled summaries when `gh` CLI credentials are available. <!-- docgen:end:deployment --> ## Troubleshooting <!-- docgen:begin:troubleshooting --> - Use `--verbose` to surface analyzer selection, prompt generation, and post-processing diagnostics emitted by `get_logger(\"orchestrator\")`. - If the README already exists, `docgen init` will abort; switch to `docgen update` or remove the file before re-initialising. - Empty or failing sections trigger fallback stubs from `docgen/failsafe.py`; inspect the raised reason and rerun once the underlying analyzer or prompt issue is fixed. - Link validation issues are logged as warnings. Update relative paths or add missing files before committing generated docs. - Clear `.docgen/manifest_cache.json` and `.docgen/embeddings.json` when refactoring large parts of the repo structure to force a fresh scan. - Ensure the local model runner is reachable at a loopback URL; remote",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#9",
      "vector": {
        "paths": 0.03782347372361169,
        "or": 0.26476431606528184,
        "add": 0.11347042117083507,
        "missing": 0.03782347372361169,
        "files": 0.03782347372361169,
        "before": 0.03782347372361169,
        "committing": 0.03782347372361169,
        "generated": 0.03782347372361169,
        "docs": 0.03782347372361169,
        "clear": 0.03782347372361169,
        "docgen": 0.4538816846833403,
        "manifest_cache": 0.03782347372361169,
        "json": 0.07564694744722338,
        "and": 0.11347042117083507,
        "embeddings": 0.03782347372361169,
        "when": 0.07564694744722338,
        "refactoring": 0.03782347372361169,
        "large": 0.03782347372361169,
        "parts": 0.03782347372361169,
        "of": 0.03782347372361169,
        "the": 0.3404112635125052,
        "repo": 0.03782347372361169,
        "structure": 0.03782347372361169,
        "to": 0.03782347372361169,
        "force": 0.03782347372361169,
        "a": 0.4538816846833403,
        "fresh": 0.03782347372361169,
        "scan": 0.03782347372361169,
        "ensure": 0.03782347372361169,
        "local": 0.07564694744722338,
        "model": 0.07564694744722338,
        "runner": 0.07564694744722338,
        "is": 0.07564694744722338,
        "reachable": 0.03782347372361169,
        "at": 0.03782347372361169,
        "loopback": 0.07564694744722338,
        "url": 0.03782347372361169,
        "remote": 0.07564694744722338,
        "hosts": 0.07564694744722338,
        "are": 0.07564694744722338,
        "intentionally": 0.03782347372361169,
        "rejected": 0.03782347372361169,
        "by": 0.03782347372361169,
        "llmrunner": 0.07564694744722338,
        "for": 0.03782347372361169,
        "security": 0.03782347372361169,
        "end": 0.11347042117083507,
        "troubleshooting": 0.03782347372361169,
        "faq": 0.11347042117083507,
        "begin": 0.07564694744722338,
        "q": 0.15129389489444675,
        "how": 0.03782347372361169,
        "this": 0.07564694744722338,
        "readme": 0.03782347372361169,
        "maintained": 0.03782347372361169,
        "generate": 0.03782347372361169,
        "with": 0.03782347372361169,
        "init": 0.03782347372361169,
        "keep": 0.03782347372361169,
        "it": 0.03782347372361169,
        "current": 0.03782347372361169,
        "via": 0.07564694744722338,
        "update": 0.03782347372361169,
        "optionally": 0.03782347372361169,
        "in": 0.15129389489444675,
        "ci": 0.03782347372361169,
        "using": 0.03782347372361169,
        "provided": 0.03782347372361169,
        "workflow": 0.03782347372361169,
        "what": 0.03782347372361169,
        "happens": 0.03782347372361169,
        "if": 0.03782347372361169,
        "analyzers": 0.11347042117083507,
        "miss": 0.03782347372361169,
        "framework": 0.03782347372361169,
        "command": 0.03782347372361169,
        "signals": 0.03782347372361169,
        "pluggable": 0.03782347372361169,
        "custom": 0.03782347372361169,
        "analyzer": 0.03782347372361169,
        "entry": 0.03782347372361169,
        "point": 0.03782347372361169,
        "group": 0.03782347372361169,
        "extend": 0.03782347372361169,
        "existing": 0.03782347372361169,
        "utilities": 0.03782347372361169,
        "under": 0.03782347372361169,
        "utils": 0.03782347372361169,
        "py": 0.03782347372361169,
        "can": 0.03782347372361169,
        "use": 0.03782347372361169,
        "llm": 0.03782347372361169,
        "endpoint": 0.03782347372361169,
        "no": 0.03782347372361169,
        "enforces": 0.03782347372361169,
        "internal": 0.03782347372361169,
        "supply": 0.03782347372361169,
        "ollama": 0.03782347372361169,
        "instance": 0.03782347372361169,
        "instead": 0.03782347372361169,
        "where": 0.03782347372361169,
        "do": 0.03782347372361169,
        "i": 0.03782347372361169,
        "report": 0.03782347372361169,
        "issues": 0.03782347372361169,
        "propose": 0.03782347372361169,
        "enhancements": 0.03782347372361169,
        "file": 0.03782347372361169,
        "an": 0.03782347372361169,
        "issue": 0.03782347372361169,
        "open": 0.03782347372361169,
        "discussion": 0.03782347372361169,
        "repository": 0.03782347372361169,
        "reference": 0.03782347372361169,
        "relevant": 0.03782347372361169,
        "sections": 0.03782347372361169,
        "spec": 0.15129389489444675,
        "md": 0.11347042117083507,
        "feature_order": 0.07564694744722338,
        "describing": 0.03782347372361169,
        "change": 0.03782347372361169,
        "license": 0.15129389489444675,
        "licensing": 0.03782347372361169,
        "information": 0.03782347372361169,
        "once": 0.03782347372361169,
        "project": 0.03782347372361169,
        "selects": 0.03782347372361169,
        "track": 0.03782347372361169,
        "candidate": 0.03782347372361169,
        "licenses": 0.03782347372361169,
        "alongside": 0.03782347372361169,
        "roadmap": 0.03782347372361169
      },
      "text": "paths or add missing files before committing generated docs. - Clear `.docgen/manifest_cache.json` and `.docgen/embeddings.json` when refactoring large parts of the repo structure to force a fresh scan. - Ensure the local model runner is reachable at a loopback URL; remote hosts are intentionally rejected by `LLMRunner` for security. <!-- docgen:end:troubleshooting --> ## FAQ <!-- docgen:begin:faq --> **Q: How is this README maintained?** A: Generate with `docgen init` and keep it current via `docgen update` (optionally in CI using the provided workflow). **Q: What happens if analyzers miss a framework or command?** A: Signals are pluggable\u2014add a custom analyzer via the `docgen.analyzers` entry-point group or extend the existing utilities under `docgen/analyzers/utils.py`. **Q: Can docgen use a remote LLM endpoint?** A: No. `LLMRunner` enforces loopback/`.internal` hosts; supply a local model runner or Ollama instance instead. **Q: Where do I report issues or propose enhancements?** A: File an issue or open a discussion in this repository and reference the relevant sections in `spec/spec.md` or `spec/feature_order.md` when describing the change. <!-- docgen:end:faq --> ## License <!-- docgen:begin:license --> Add licensing information once the project selects a license. Track candidate licenses alongside the roadmap in `spec/feature_order.md`. <!-- docgen:end:license -->",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "docs/ci/docgen-update.yml#0",
      "vector": {
        "name": 0.2773500981126145,
        "docgen": 0.1849000654084097,
        "update": 0.2311250817605121,
        "on": 0.09245003270420485,
        "push": 0.046225016352102424,
        "branches": 0.09245003270420485,
        "main": 0.13867504905630726,
        "pull_request": 0.13867504905630726,
        "jobs": 0.046225016352102424,
        "readme": 0.1849000654084097,
        "runs": 0.046225016352102424,
        "self": 0.046225016352102424,
        "hosted": 0.046225016352102424,
        "steps": 0.09245003270420485,
        "uses": 0.13867504905630726,
        "actions": 0.2311250817605121,
        "checkout": 0.046225016352102424,
        "v4": 0.09245003270420485,
        "with": 0.13867504905630726,
        "fetch": 0.046225016352102424,
        "depth": 0.046225016352102424,
        "0": 0.046225016352102424,
        "setup": 0.046225016352102424,
        "python": 0.2311250817605121,
        "v5": 0.046225016352102424,
        "version": 0.046225016352102424,
        "3": 0.046225016352102424,
        "11": 0.046225016352102424,
        "cache": 0.09245003270420485,
        "path": 0.046225016352102424,
        "pip": 0.2773500981126145,
        "key": 0.046225016352102424,
        "runner": 0.09245003270420485,
        "os": 0.09245003270420485,
        "hashfiles": 0.046225016352102424,
        "pyproject": 0.046225016352102424,
        "toml": 0.046225016352102424,
        "restore": 0.046225016352102424,
        "keys": 0.046225016352102424,
        "install": 0.13867504905630726,
        "dependencies": 0.046225016352102424,
        "run": 0.2311250817605121,
        "m": 0.13867504905630726,
        "upgrade": 0.046225016352102424,
        "e": 0.046225016352102424,
        "dev": 0.046225016352102424,
        "determine": 0.046225016352102424,
        "diff": 0.1849000654084097,
        "base": 0.2773500981126145,
        "id": 0.046225016352102424,
        "if": 0.09245003270420485,
        "github": 0.2311250817605121,
        "event_name": 0.046225016352102424,
        "then": 0.09245003270420485,
        "echo": 0.09245003270420485,
        "event": 0.046225016352102424,
        "sha": 0.046225016352102424,
        "github_output": 0.09245003270420485,
        "else": 0.046225016352102424,
        "origin": 0.046225016352102424,
        "fi": 0.09245003270420485,
        "env": 0.046225016352102424,
        "docgen_llm_base_url": 0.046225016352102424,
        "http": 0.046225016352102424,
        "localhost": 0.046225016352102424,
        "12434": 0.046225016352102424,
        "engines": 0.046225016352102424,
        "v1": 0.046225016352102424,
        "cli": 0.046225016352102424,
        "outputs": 0.046225016352102424,
        "commit": 0.09245003270420485,
        "md": 0.09245003270420485,
        "optional": 0.046225016352102424,
        "git": 0.1849000654084097,
        "status": 0.046225016352102424,
        "short": 0.046225016352102424,
        "grep": 0.046225016352102424,
        "q": 0.046225016352102424,
        "config": 0.09245003270420485,
        "user": 0.09245003270420485,
        "email": 0.046225016352102424,
        "users": 0.046225016352102424,
        "noreply": 0.046225016352102424,
        "com": 0.046225016352102424,
        "am": 0.046225016352102424,
        "docs": 0.046225016352102424,
        "via": 0.046225016352102424
      },
      "text": "name: docgen-update on: push: branches: [ main ] pull_request: branches: [ main ] jobs: update-readme: runs-on: self-hosted steps: - uses: actions/checkout@v4 with: fetch-depth: 0 - uses: actions/setup-python@v5 with: python-version: '3.11' - uses: actions/cache@v4 with: path: ~/.cache/pip key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }} restore-keys: ${{ runner.os }}-pip- - name: Install dependencies run: | python -m pip install --upgrade pip python -m pip install -e .[dev] - name: Determine diff base id: diff run: | if [ \"${{ github.event_name }}\" = \"pull_request\" ]; then echo \"base=${{ github.event.pull_request.base.sha }}\" >> \"$GITHUB_OUTPUT\" else echo \"base=origin/main\" >> \"$GITHUB_OUTPUT\" fi - name: Run docgen update env: DOCGEN_LLM_BASE_URL: http://localhost:12434/engines/v1 run: python -m docgen.cli update --diff-base ${{ steps.diff.outputs.base }} - name: Commit README.md (optional) run: | if git status --short | grep -q README.md; then git config user.name \"github-actions\" git config user.email \"github-actions@users.noreply.github.com\" git commit -am \"docs: update README via docgen\" fi",
      "metadata": {
        "path": "docs/ci/docgen-update.yml",
        "tags": [
          "docs"
        ],
        "hash": "f3bf5ea7b740892011a0aa14cb06b4bb27a4f3ea348599d85003a66032594538"
      }
    },
    {
      "id": "docs/ci/github-actions.md#0",
      "vector": {
        "github": 0.25925925925925924,
        "actions": 0.2222222222222222,
        "integration": 0.037037037037037035,
        "the": 0.1111111111111111,
        "workflow": 0.037037037037037035,
        "below": 0.037037037037037035,
        "runs": 0.07407407407407407,
        "docgen": 0.25925925925925924,
        "update": 0.2222222222222222,
        "on": 0.1111111111111111,
        "pushes": 0.037037037037037035,
        "and": 0.037037037037037035,
        "pull": 0.037037037037037035,
        "requests": 0.037037037037037035,
        "it": 0.037037037037037035,
        "assumes": 0.037037037037037035,
        "a": 0.037037037037037035,
        "self": 0.07407407407407407,
        "hosted": 0.1111111111111111,
        "runner": 0.14814814814814814,
        "or": 0.037037037037037035,
        "with": 0.14814814814814814,
        "network": 0.037037037037037035,
        "access": 0.07407407407407407,
        "to": 0.037037037037037035,
        "your": 0.037037037037037035,
        "local": 0.07407407407407407,
        "model": 0.037037037037037035,
        "runtime": 0.037037037037037035,
        "job": 0.037037037037037035,
        "skips": 0.037037037037037035,
        "early": 0.037037037037037035,
        "when": 0.037037037037037035,
        "no": 0.037037037037037035,
        "files": 0.037037037037037035,
        "match": 0.037037037037037035,
        "yml": 0.037037037037037035,
        "s": 0.037037037037037035,
        "ci": 0.037037037037037035,
        "watched_globs": 0.037037037037037035,
        "entries": 0.037037037037037035,
        "so": 0.037037037037037035,
        "that": 0.037037037037037035,
        "purely": 0.037037037037037035,
        "documentation": 0.037037037037037035,
        "only": 0.037037037037037035,
        "changes": 0.037037037037037035,
        "do": 0.037037037037037035,
        "not": 0.037037037037037035,
        "trigger": 0.037037037037037035,
        "generator": 0.037037037037037035,
        "yaml": 0.037037037037037035,
        "name": 0.3333333333333333,
        "push": 0.037037037037037035,
        "branches": 0.07407407407407407,
        "main": 0.1111111111111111,
        "pull_request": 0.1111111111111111,
        "jobs": 0.037037037037037035,
        "readme": 0.14814814814814814,
        "requires": 0.037037037037037035,
        "llm": 0.037037037037037035,
        "steps": 0.07407407407407407,
        "checkout": 0.07407407407407407,
        "repository": 0.037037037037037035,
        "uses": 0.1111111111111111,
        "v4": 0.07407407407407407,
        "fetch": 0.037037037037037035,
        "depth": 0.037037037037037035,
        "0": 0.037037037037037035,
        "set": 0.037037037037037035,
        "up": 0.037037037037037035,
        "python": 0.2222222222222222,
        "setup": 0.037037037037037035,
        "v5": 0.037037037037037035,
        "version": 0.037037037037037035,
        "3": 0.037037037037037035,
        "11": 0.037037037037037035,
        "cache": 0.1111111111111111,
        "pip": 0.25925925925925924,
        "dependencies": 0.037037037037037035,
        "path": 0.037037037037037035,
        "key": 0.037037037037037035,
        "os": 0.07407407407407407,
        "hashfiles": 0.037037037037037035,
        "pyproject": 0.037037037037037035,
        "toml": 0.037037037037037035,
        "restore": 0.037037037037037035,
        "keys": 0.037037037037037035,
        "install": 0.1111111111111111,
        "in": 0.037037037037037035,
        "editable": 0.037037037037037035,
        "mode": 0.037037037037037035,
        "run": 0.18518518518518517,
        "m": 0.1111111111111111,
        "upgrade": 0.037037037037037035,
        "e": 0.037037037037037035,
        "dev": 0.037037037037037035,
        "determine": 0.037037037037037035,
        "diff": 0.14814814814814814,
        "base": 0.2222222222222222,
        "id": 0.037037037037037035,
        "if": 0.1111111111111111,
        "event_name": 0.037037037037037035,
        "then": 0.07407407407407407,
        "echo": 0.07407407407407407,
        "event": 0.037037037037037035,
        "sha": 0.037037037037037035,
        "github_output": 0.07407407407407407,
        "else": 0.037037037037037035,
        "origin": 0.037037037037037035,
        "fi": 0.07407407407407407,
        "env": 0.037037037037037035,
        "docgen_llm_base_url": 0.037037037037037035,
        "http": 0.037037037037037035,
        "localhost": 0.037037037037037035,
        "12434": 0.037037037037037035,
        "engines": 0.037037037037037035,
        "v1": 0.037037037037037035,
        "cli": 0.037037037037037035,
        "outputs": 0.037037037037037035,
        "commit": 0.07407407407407407,
        "updates": 0.037037037037037035,
        "any": 0.037037037037037035,
        "git": 0.14814814814814814,
        "status": 0.037037037037037035,
        "short": 0.037037037037037035,
        "grep": 0.037037037037037035,
        "q": 0.037037037037037035,
        "md": 0.037037037037037035,
        "config": 0.07407407407407407,
        "user": 0.07407407407407407,
        "email": 0.037037037037037035,
        "users": 0.037037037037037035,
        "noreply": 0.037037037037037035,
        "com": 0.037037037037037035,
        "am": 0.037037037037037035,
        "docs": 0.037037037037037035,
        "via": 0.037037037037037035
      },
      "text": "# GitHub Actions Integration The workflow below runs `docgen update` on pushes and pull requests. It assumes a self-hosted runner (or GitHub-hosted runner with network access to your local model runtime). The job skips early when no files match `.docgen.yml`'s `ci.watched_globs` entries so that purely documentation-only changes do not trigger the generator. ```yaml name: docgen-update on: push: branches: [ main ] pull_request: branches: [ main ] jobs: update-readme: runs-on: self-hosted # requires local LLM access steps: - name: Checkout repository uses: actions/checkout@v4 with: fetch-depth: 0 - name: Set up Python uses: actions/setup-python@v5 with: python-version: '3.11' - name: Cache pip dependencies uses: actions/cache@v4 with: path: ~/.cache/pip key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }} restore-keys: ${{ runner.os }}-pip- - name: Install docgen in editable mode run: | python -m pip install --upgrade pip python -m pip install -e .[dev] - name: Determine diff base id: diff run: | if [ \"${{ github.event_name }}\" = \"pull_request\" ]; then echo \"base=${{ github.event.pull_request.base.sha }}\" >> \"$GITHUB_OUTPUT\" else echo \"base=origin/main\" >> \"$GITHUB_OUTPUT\" fi - name: Run docgen update env: DOCGEN_LLM_BASE_URL: http://localhost:12434/engines/v1 run: | python -m docgen.cli update --diff-base ${{ steps.diff.outputs.base }} - name: Commit README updates (if any) run: | if git status --short | grep -q README.md; then git config user.name \"github-actions\" git config user.email \"github-actions@users.noreply.github.com\" git commit -am \"docs: update README via docgen\" fi -",
      "metadata": {
        "path": "docs/ci/github-actions.md",
        "tags": [
          "docs"
        ],
        "hash": "518fe87441e7f08aadb0ed175d54a5ce3c227af17677678096af6df070190e59"
      }
    },
    {
      "id": "docs/ci/github-actions.md#1",
      "vector": {
        "diff": 0.1363988678940947,
        "base": 0.1363988678940947,
        "steps": 0.06819943394704735,
        "outputs": 0.06819943394704735,
        "name": 0.2727977357881894,
        "commit": 0.1363988678940947,
        "readme": 0.4091966036822841,
        "updates": 0.06819943394704735,
        "if": 0.20459830184114206,
        "any": 0.06819943394704735,
        "run": 0.06819943394704735,
        "git": 0.2727977357881894,
        "status": 0.06819943394704735,
        "short": 0.06819943394704735,
        "grep": 0.06819943394704735,
        "q": 0.06819943394704735,
        "md": 0.1363988678940947,
        "then": 0.06819943394704735,
        "config": 0.1363988678940947,
        "user": 0.1363988678940947,
        "github": 0.2727977357881894,
        "actions": 0.20459830184114206,
        "email": 0.06819943394704735,
        "users": 0.06819943394704735,
        "noreply": 0.06819943394704735,
        "com": 0.06819943394704735,
        "am": 0.06819943394704735,
        "docs": 0.06819943394704735,
        "update": 0.06819943394704735,
        "via": 0.06819943394704735,
        "docgen": 0.06819943394704735,
        "fi": 0.06819943394704735,
        "upload": 0.1363988678940947,
        "artifact": 0.1363988678940947,
        "success": 0.06819943394704735,
        "uses": 0.06819943394704735,
        "v4": 0.06819943394704735,
        "with": 0.1363988678940947,
        "generated": 0.06819943394704735,
        "path": 0.06819943394704735,
        "note": 0.06819943394704735,
        "the": 0.20459830184114206,
        "workflow": 0.06819943394704735,
        "relies": 0.06819943394704735,
        "on": 0.06819943394704735,
        "docgen_llm_base_url": 0.06819943394704735,
        "pointing": 0.06819943394704735,
        "to": 0.20459830184114206,
        "a": 0.06819943394704735,
        "local": 0.06819943394704735,
        "or": 0.1363988678940947,
        "private": 0.1363988678940947,
        "inference": 0.06819943394704735,
        "endpoint": 0.06819943394704735,
        "for": 0.06819943394704735,
        "hosted": 0.06819943394704735,
        "runners": 0.06819943394704735,
        "you": 0.06819943394704735,
        "will": 0.06819943394704735,
        "need": 0.06819943394704735,
        "expose": 0.06819943394704735,
        "runner": 0.06819943394704735,
        "within": 0.06819943394704735,
        "your": 0.06819943394704735,
        "network": 0.06819943394704735,
        "switch": 0.06819943394704735,
        "ollama": 0.06819943394704735,
        "cli": 0.06819943394704735,
        "appropriate": 0.06819943394704735,
        "caching": 0.06819943394704735
      },
      "text": "--diff-base ${{ steps.diff.outputs.base }} - name: Commit README updates (if any) run: | if git status --short | grep -q README.md; then git config user.name \"github-actions\" git config user.email \"github-actions@users.noreply.github.com\" git commit -am \"docs: update README via docgen\" fi - name: Upload README artifact if: success() uses: actions/upload-artifact@v4 with: name: generated-readme path: README.md ``` > **Note:** the workflow relies on `DOCGEN_LLM_BASE_URL` pointing to a local or > private inference endpoint. For GitHub-hosted runners you will need to expose > the runner within your private network or switch to the `ollama` CLI with > appropriate caching. ```",
      "metadata": {
        "path": "docs/ci/github-actions.md",
        "tags": [
          "docs"
        ],
        "hash": "518fe87441e7f08aadb0ed175d54a5ce3c227af17677678096af6df070190e59"
      }
    },
    {
      "id": "spec/feature_checklist.md#0",
      "vector": {
        "intelligent": 0.03809696588797296,
        "readme": 0.1142908976639189,
        "generator": 0.03809696588797296,
        "feature": 0.03809696588797296,
        "checklist": 0.03809696588797296,
        "status": 0.03809696588797296,
        "legend": 0.03809696588797296,
        "not": 0.03809696588797296,
        "started": 0.03809696588797296,
        "in": 0.03809696588797296,
        "progress": 0.03809696588797296,
        "done": 0.03809696588797296,
        "scope": 0.03809696588797296,
        "tags": 0.03809696588797296,
        "mvp": 0.4571635906556756,
        "required": 0.03809696588797296,
        "for": 0.1142908976639189,
        "proof": 0.03809696588797296,
        "of": 0.07619393177594593,
        "concept": 0.03809696588797296,
        "next": 0.19048482943986483,
        "nice": 0.03809696588797296,
        "to": 0.1142908976639189,
        "have": 0.03809696588797296,
        "soon": 0.03809696588797296,
        "stretch": 0.1142908976639189,
        "later": 0.03809696588797296,
        "1": 0.07619393177594593,
        "core": 0.03809696588797296,
        "workflows": 0.03809696588797296,
        "x": 0.6095514542075674,
        "docgen": 0.15238786355189185,
        "init": 0.03809696588797296,
        "initialize": 0.03809696588797296,
        "repos": 0.03809696588797296,
        "without": 0.07619393177594593,
        "docs": 0.1142908976639189,
        "update": 0.03809696588797296,
        "detect": 0.03809696588797296,
        "changes": 0.03809696588797296,
        "on": 0.03809696588797296,
        "commit": 0.03809696588797296,
        "pr": 0.03809696588797296,
        "and": 0.03809696588797296,
        "patch": 0.03809696588797296,
        "affected": 0.03809696588797296,
        "sections": 0.03809696588797296,
        "regenerate": 0.03809696588797296,
        "manual": 0.03809696588797296,
        "full": 0.03809696588797296,
        "partial": 0.03809696588797296,
        "regeneration": 0.03809696588797296,
        "dry": 0.07619393177594593,
        "run": 0.07619393177594593,
        "mode": 0.07619393177594593,
        "preview": 0.03809696588797296,
        "diffs": 0.03809696588797296,
        "writing": 0.03809696588797296,
        "service": 0.03809696588797296,
        "fastapi": 0.07619393177594593,
        "endpoints": 0.03809696588797296,
        "ci": 0.07619393177594593,
        "bots": 0.03809696588797296,
        "2": 0.03809696588797296,
        "repository": 0.03809696588797296,
        "scanning": 0.03809696588797296,
        "indexing": 0.03809696588797296,
        "walk": 0.03809696588797296,
        "filesystem": 0.03809696588797296,
        "with": 0.03809696588797296,
        "ignore": 0.03809696588797296,
        "rules": 0.03809696588797296,
        "gitignore": 0.03809696588797296,
        "yml": 0.03809696588797296,
        "build": 0.07619393177594593,
        "normalized": 0.03809696588797296,
        "manifest": 0.07619393177594593,
        "files": 0.07619393177594593,
        "roles": 0.03809696588797296,
        "src": 0.03809696588797296,
        "test": 0.03809696588797296,
        "config": 0.07619393177594593,
        "infra": 0.03809696588797296,
        "hash": 0.03809696588797296,
        "cache": 0.03809696588797296,
        "file": 0.03809696588797296,
        "metadata": 0.03809696588797296,
        "speed": 0.03809696588797296,
        "subsequent": 0.03809696588797296,
        "runs": 0.03809696588797296,
        "entrypoint": 0.07619393177594593,
        "detection": 0.07619393177594593,
        "e": 0.03809696588797296,
        "g": 0.03809696588797296,
        "main": 0.03809696588797296,
        "springbootapplication": 0.03809696588797296,
        "app": 0.03809696588797296,
        "monorepo": 0.07619393177594593,
        "module": 0.03809696588797296,
        "3": 0.03809696588797296,
        "analyzers": 0.19048482943986483,
        "plugin": 0.03809696588797296,
        "based": 0.03809696588797296,
        "language": 0.03809696588797296,
        "python": 0.03809696588797296,
        "java": 0.03809696588797296,
        "node": 0.03809696588797296,
        "js": 0.03809696588797296,
        "tier": 0.03809696588797296,
        "poetry": 0.03809696588797296,
        "setuptools": 0.03809696588797296,
        "maven": 0.03809696588797296,
        "gradle": 0.03809696588797296,
        "npm": 0.03809696588797296,
        "pnpm": 0.03809696588797296,
        "yarn": 0.03809696588797296,
        "dependency": 0.03809696588797296,
        "from": 0.03809696588797296,
        "pattern": 0.03809696588797296,
        "docker": 0.03809696588797296,
        "k8s": 0.03809696588797296,
        "layout": 0.03809696588797296,
        "tree": 0.03809696588797296,
        "sitter": 0.03809696588797296,
        "powered": 0.03809696588797296,
        "symbol": 0.03809696588797296,
        "extraction": 0.03809696588797296,
        "flagged": 0.03809696588797296,
        "4": 0.03809696588797296,
        "knowledge": 0.03809696588797296,
        "store": 0.03809696588797296,
        "rag": 0.03809696588797296,
        "local": 0.03809696588797296,
        "embedding": 0.03809696588797296,
        "model": 0.03809696588797296,
        "chunking": 0.03809696588797296,
        "strategy": 0.03809696588797296,
        "index": 0.03809696588797296,
        "top": 0.03809696588797296,
        "n": 0.03809696588797296,
        "source": 0.03809696588797296,
        "headers": 0.03809696588797296,
        "comments": 0.03809696588797296
      },
      "text": "# Intelligent README Generator \u2014 Feature Checklist > Status legend: \u2610 Not started \u00b7 \u25d0 In progress \u00b7 \u2714 Done > Scope tags: **[MVP]** required for proof\u2011of\u2011concept, **[NEXT]** nice\u2011to\u2011have soon, **[STRETCH]** later ## 1) Core Workflows - [x] **docgen init** \u2014 Initialize README for repos without docs **[MVP]** - [x] **docgen update** \u2014 Detect changes on commit/PR and patch affected sections **[MVP]** - [ ] **docgen regenerate** \u2014 Manual full/partial regeneration **[MVP]** - [x] Dry\u2011run mode (`--dry-run`) to preview diffs without writing **[NEXT]** - [x] Service mode (FastAPI) endpoints for CI/bots **[STRETCH]** ## 2) Repository Scanning & Indexing - [x] Walk filesystem with ignore rules (`.gitignore`, `.docgen.yml`) **[MVP]** - [x] Build normalized manifest of files, roles (src/test/docs/config/infra) **[MVP]** - [x] Hash & cache file metadata to speed subsequent runs **[MVP]** - [x] Entrypoint detection (e.g., `main()`, `@SpringBootApplication`, FastAPI app) **[NEXT]** - [x] Monorepo module detection **[NEXT]** ## 3) Analyzers (Plugin\u2011based) - [x] Language analyzers: Python, Java, Node.js (Tier\u20111) **[MVP]** - [x] Build analyzers: Poetry/Setuptools, Maven/Gradle, npm/pnpm/yarn **[MVP]** - [x] Dependency analyzers from manifest files **[MVP]** - [x] Pattern analyzers: Docker/K8s, CI config, monorepo layout **[NEXT]** - [x] Tree\u2011sitter powered symbol/entrypoint extraction (flagged) **[STRETCH]** ## 4) Knowledge Store (RAG) - [x] Local embedding model + chunking strategy **[MVP]** - [x] Index `README`, `/docs`, top N source headers & comments **[MVP]** -",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_checklist.md#1",
      "vector": {
        "ci": 0.03943615033625495,
        "config": 0.0788723006725099,
        "monorepo": 0.03943615033625495,
        "layout": 0.03943615033625495,
        "next": 0.3154892026900396,
        "x": 0.6309784053800792,
        "tree": 0.03943615033625495,
        "sitter": 0.03943615033625495,
        "powered": 0.03943615033625495,
        "symbol": 0.03943615033625495,
        "entrypoint": 0.03943615033625495,
        "extraction": 0.03943615033625495,
        "flagged": 0.03943615033625495,
        "stretch": 0.0788723006725099,
        "4": 0.03943615033625495,
        "knowledge": 0.0788723006725099,
        "store": 0.03943615033625495,
        "rag": 0.03943615033625495,
        "local": 0.0788723006725099,
        "embedding": 0.03943615033625495,
        "model": 0.0788723006725099,
        "chunking": 0.03943615033625495,
        "strategy": 0.03943615033625495,
        "mvp": 0.3943615033625495,
        "index": 0.03943615033625495,
        "readme": 0.03943615033625495,
        "docs": 0.0788723006725099,
        "top": 0.0788723006725099,
        "n": 0.03943615033625495,
        "source": 0.03943615033625495,
        "headers": 0.03943615033625495,
        "comments": 0.03943615033625495,
        "section": 0.19718075168127475,
        "scoped": 0.03943615033625495,
        "retrieval": 0.03943615033625495,
        "k": 0.03943615033625495,
        "per": 0.0788723006725099,
        "lightweight": 0.03943615033625495,
        "graph": 0.03943615033625495,
        "of": 0.03943615033625495,
        "modules": 0.03943615033625495,
        "services": 0.03943615033625495,
        "signals": 0.03943615033625495,
        "5": 0.03943615033625495,
        "prompting": 0.03943615033625495,
        "templates": 0.11830845100876484,
        "jinja2": 0.03943615033625495,
        "intro": 0.03943615033625495,
        "features": 0.03943615033625495,
        "architecture": 0.0788723006725099,
        "quickstart": 0.03943615033625495,
        "build": 0.0788723006725099,
        "test": 0.03943615033625495,
        "deployment": 0.03943615033625495,
        "troubleshooting": 0.03943615033625495,
        "faq": 0.03943615033625495,
        "license": 0.0788723006725099,
        "guardrailed": 0.03943615033625495,
        "system": 0.03943615033625495,
        "prompt": 0.03943615033625495,
        "no": 0.03943615033625495,
        "speculation": 0.03943615033625495,
        "cite": 0.03943615033625495,
        "repo": 0.03943615033625495,
        "facts": 0.03943615033625495,
        "only": 0.03943615033625495,
        "token": 0.03943615033625495,
        "budgeting": 0.03943615033625495,
        "streaming": 0.03943615033625495,
        "by": 0.03943615033625495,
        "generation": 0.03943615033625495,
        "template": 0.03943615033625495,
        "override": 0.03943615033625495,
        "mechanism": 0.03943615033625495,
        "j2": 0.03943615033625495,
        "style": 0.03943615033625495,
        "presets": 0.03943615033625495,
        "concise": 0.03943615033625495,
        "vs": 0.03943615033625495,
        "comprehensive": 0.03943615033625495,
        "mermaid": 0.03943615033625495,
        "js": 0.03943615033625495,
        "diagrams": 0.03943615033625495,
        "for": 0.0788723006725099,
        "flow": 0.03943615033625495,
        "sections": 0.0788723006725099,
        "where": 0.03943615033625495,
        "appropriate": 0.03943615033625495,
        "6": 0.03943615033625495,
        "llm": 0.03943615033625495,
        "runner": 0.0788723006725099,
        "http": 0.03943615033625495,
        "adapter": 0.0788723006725099,
        "host": 0.03943615033625495,
        "container": 0.03943615033625495,
        "defaults": 0.0788723006725099,
        "env": 0.03943615033625495,
        "api": 0.03943615033625495,
        "key": 0.03943615033625495,
        "overrides": 0.03943615033625495,
        "llama": 0.03943615033625495,
        "cpp": 0.03943615033625495,
        "structured": 0.03943615033625495,
        "outputs": 0.03943615033625495,
        "tool": 0.03943615033625495,
        "use": 0.03943615033625495,
        "compatibility": 0.03943615033625495,
        "7": 0.03943615033625495,
        "post": 0.03943615033625495,
        "processing": 0.03943615033625495,
        "markdown": 0.03943615033625495,
        "lint": 0.03943615033625495,
        "heading": 0.03943615033625495,
        "hierarchy": 0.03943615033625495,
        "code": 0.03943615033625495,
        "fences": 0.03943615033625495,
        "line": 0.03943615033625495,
        "length": 0.03943615033625495,
        "auto": 0.03943615033625495,
        "toc": 0.03943615033625495,
        "level": 0.03943615033625495,
        "3": 0.03943615033625495,
        "badges": 0.03943615033625495,
        "coverage": 0.03943615033625495,
        "with": 0.03943615033625495,
        "safe": 0.03943615033625495,
        "link": 0.03943615033625495,
        "validator": 0.03943615033625495,
        "relative": 0.03943615033625495,
        "absolute": 0.03943615033625495,
        "managed": 0.03943615033625495,
        "markers": 0.03943615033625495,
        "idempotent": 0.03943615033625495,
        "patching": 0.03943615033625495,
        "docgen": 0.03943615033625495,
        "begin": 0.03943615033625495,
        "end": 0.03943615033625495,
        "8": 0.03943615033625495,
        "git": 0.03943615033625495,
        "integration": 0.03943615033625495,
        "diff": 0.03943615033625495,
        "detection": 0.03943615033625495,
        "map": 0.03943615033625495,
        "changed": 0.03943615033625495,
        "files": 0.03943615033625495,
        "impacted": 0.03943615033625495
      },
      "text": "CI config, monorepo layout **[NEXT]** - [x] Tree\u2011sitter powered symbol/entrypoint extraction (flagged) **[STRETCH]** ## 4) Knowledge Store (RAG) - [x] Local embedding model + chunking strategy **[MVP]** - [x] Index `README`, `/docs`, top N source headers & comments **[MVP]** - [x] Section\u2011scoped retrieval (top\u2011k per section) **[MVP]** - [ ] Lightweight knowledge graph of modules/services/signals **[NEXT]** ## 5) Prompting & Templates - [x] Jinja2 templates per section (intro, features, architecture, quickstart, config, build/test, deployment, troubleshooting, FAQ, license) **[MVP]** - [ ] Guardrailed system prompt (\u201cno speculation; cite repo facts only\u201d) **[MVP]** - [ ] Token budgeting & streaming section-by-section generation **[MVP]** - [x] Template override mechanism (`docs/templates/*.j2`) **[NEXT]** - [x] Style presets: concise vs comprehensive **[NEXT]** - [x] Mermaid.js diagrams for architecture/flow sections where appropriate **[NEXT]** ## 6) Local LLM Runner - [x] Model Runner HTTP adapter (host/container defaults, env/API key overrides) **[MVP]** - [x] llama.cpp adapter **[NEXT]** - [ ] Structured outputs / tool\u2011use compatibility **[STRETCH]** ## 7) Post\u2011Processing - [x] Markdown lint: heading hierarchy, code fences, line length **[MVP]** - [x] Auto ToC (\u2264 level 3) **[MVP]** - [x] Badges (build, coverage, license) with safe defaults **[NEXT]** - [x] Link validator (relative/absolute) **[NEXT]** - [x] Managed markers for idempotent patching (`<!-- docgen:begin:end -->`) **[MVP]** ## 8) Git Integration - [x] Diff detection (map changed files \u2192 impacted sections)",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_checklist.md#2",
      "vector": {
        "x": 0.6172133998483676,
        "badges": 0.03857583749052298,
        "build": 0.07715167498104596,
        "coverage": 0.03857583749052298,
        "license": 0.03857583749052298,
        "with": 0.07715167498104596,
        "safe": 0.03857583749052298,
        "defaults": 0.03857583749052298,
        "next": 0.3086066999241838,
        "link": 0.03857583749052298,
        "validator": 0.03857583749052298,
        "relative": 0.03857583749052298,
        "absolute": 0.03857583749052298,
        "managed": 0.03857583749052298,
        "markers": 0.03857583749052298,
        "for": 0.11572751247156893,
        "idempotent": 0.03857583749052298,
        "patching": 0.03857583749052298,
        "docgen": 0.07715167498104596,
        "begin": 0.03857583749052298,
        "end": 0.03857583749052298,
        "mvp": 0.4629100498862757,
        "8": 0.03857583749052298,
        "git": 0.03857583749052298,
        "integration": 0.07715167498104596,
        "diff": 0.03857583749052298,
        "detection": 0.03857583749052298,
        "map": 0.03857583749052298,
        "changed": 0.03857583749052298,
        "files": 0.03857583749052298,
        "impacted": 0.03857583749052298,
        "sections": 0.03857583749052298,
        "branch": 0.03857583749052298,
        "pr": 0.07715167498104596,
        "creation": 0.03857583749052298,
        "summary": 0.03857583749052298,
        "of": 0.03857583749052298,
        "readme": 0.11572751247156893,
        "deltas": 0.03857583749052298,
        "commit": 0.03857583749052298,
        "mode": 0.03857583749052298,
        "init": 0.03857583749052298,
        "or": 0.03857583749052298,
        "small": 0.03857583749052298,
        "changes": 0.07715167498104596,
        "configurable": 0.03857583749052298,
        "prevent": 0.03857583749052298,
        "loops": 0.03857583749052298,
        "on": 0.07715167498104596,
        "only": 0.07715167498104596,
        "9": 0.03857583749052298,
        "configuration": 0.03857583749052298,
        "parse": 0.03857583749052298,
        "yml": 0.03857583749052298,
        "llm": 0.03857583749052298,
        "style": 0.03857583749052298,
        "analyzers": 0.03857583749052298,
        "publish": 0.03857583749052298,
        "path": 0.03857583749052298,
        "exclusions": 0.03857583749052298,
        "watched_globs": 0.03857583749052298,
        "ci": 0.11572751247156893,
        "triggers": 0.03857583749052298,
        "per": 0.07715167498104596,
        "section": 0.03857583749052298,
        "off": 0.03857583749052298,
        "toggles": 0.03857583749052298,
        "and": 0.11572751247156893,
        "titles": 0.03857583749052298,
        "10": 0.03857583749052298,
        "github": 0.03857583749052298,
        "actions": 0.03857583749052298,
        "example": 0.03857583749052298,
        "workflow": 0.03857583749052298,
        "gitlab": 0.03857583749052298,
        "bitbucket": 0.03857583749052298,
        "pipelines": 0.03857583749052298,
        "samples": 0.03857583749052298,
        "labeling": 0.03857583749052298,
        "docs": 0.03857583749052298,
        "auto": 0.03857583749052298,
        "update": 0.03857583749052298,
        "behavior": 0.03857583749052298,
        "11": 0.03857583749052298,
        "security": 0.03857583749052298,
        "privacy": 0.03857583749052298,
        "local": 0.03857583749052298,
        "models": 0.03857583749052298,
        "never": 0.03857583749052298,
        "exfiltrate": 0.03857583749052298,
        "code": 0.03857583749052298,
        "respect": 0.03857583749052298,
        "gitignore": 0.03857583749052298,
        "exclude": 0.03857583749052298,
        "large": 0.03857583749052298,
        "binaries": 0.03857583749052298,
        "secrets": 0.03857583749052298,
        "optional": 0.03857583749052298,
        "simple": 0.03857583749052298,
        "secret": 0.03857583749052298,
        "scanner": 0.03857583749052298,
        "gate": 0.03857583749052298,
        "12": 0.03857583749052298,
        "multi": 0.03857583749052298,
        "language": 0.03857583749052298,
        "project": 0.03857583749052298,
        "types": 0.03857583749052298,
        "tier": 0.07715167498104596,
        "1": 0.03857583749052298,
        "python": 0.03857583749052298,
        "poetry": 0.03857583749052298,
        "setuptools": 0.03857583749052298,
        "java": 0.03857583749052298,
        "maven": 0.03857583749052298,
        "gradle": 0.03857583749052298,
        "spring": 0.03857583749052298,
        "boot": 0.03857583749052298,
        "node": 0.03857583749052298,
        "js": 0.03857583749052298,
        "npm": 0.03857583749052298,
        "pnpm": 0.03857583749052298,
        "express": 0.03857583749052298,
        "2": 0.03857583749052298,
        "go": 0.03857583749052298,
        "rust": 0.03857583749052298,
        "ruby": 0.03857583749052298,
        "php": 0.03857583749052298,
        "stretch": 0.03857583749052298,
        "framework": 0.03857583749052298,
        "aware": 0.03857583749052298,
        "quickstart": 0.03857583749052298,
        "commands": 0.03857583749052298,
        "system": 0.03857583749052298,
        "13": 0.03857583749052298,
        "quality": 0.03857583749052298,
        "gates": 0.03857583749052298,
        "evaluation": 0.03857583749052298,
        "command": 0.03857583749052298,
        "validation": 0.03857583749052298,
        "existence": 0.03857583749052298,
        "checks": 0.07715167498104596,
        "no": 0.03857583749052298,
        "hallucination": 0.03857583749052298,
        "reject": 0.03857583749052298,
        "facts": 0.03857583749052298,
        "not": 0.03857583749052298
      },
      "text": "[x] Badges (build, coverage, license) with safe defaults **[NEXT]** - [x] Link validator (relative/absolute) **[NEXT]** - [x] Managed markers for idempotent patching (`<!-- docgen:begin:end -->`) **[MVP]** ## 8) Git Integration - [x] Diff detection (map changed files \u2192 impacted sections) **[MVP]** - [x] Branch + PR creation with summary of README deltas **[MVP]** - [x] Commit mode for init or small changes (configurable) **[NEXT]** - [x] Prevent loops on README\u2011only changes **[MVP]** ## 9) Configuration - [x] Parse `.docgen.yml` (LLM, readme style, analyzers, publish) **[MVP]** - [x] Path exclusions & `watched_globs` for CI triggers **[MVP]** - [ ] Per-section on/off toggles and titles **[NEXT]** ## 10) CI Integration - [x] GitHub Actions example workflow **[MVP]** - [ ] GitLab CI and Bitbucket Pipelines samples **[NEXT]** - [x] Labeling (`docs:auto`) and PR update behavior **[NEXT]** ## 11) Security & Privacy - [x] Local-only models; never exfiltrate code **[MVP]** - [ ] Respect `.gitignore`; exclude large binaries/secrets **[MVP]** - [ ] Optional simple secret scanner gate **[NEXT]** ## 12) Multi\u2011Language & Project Types - [x] Tier\u20111: Python (Poetry/Setuptools), Java (Maven/Gradle/Spring Boot), Node.js (npm/pnpm/Express/Next) **[MVP]** - [ ] Tier\u20112: Go, Rust, Ruby, PHP **[STRETCH]** - [x] Framework\u2011aware quickstart commands per build system **[MVP]** ## 13) Quality Gates & Evaluation - [x] Command validation (existence checks) **[MVP]** - [x] No-hallucination checks: reject facts not",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_checklist.md#3",
      "vector": {
        "npm": 0.052999894000318,
        "pnpm": 0.052999894000318,
        "express": 0.052999894000318,
        "next": 0.211999576001272,
        "mvp": 0.476999046002862,
        "tier": 0.052999894000318,
        "2": 0.052999894000318,
        "go": 0.052999894000318,
        "rust": 0.052999894000318,
        "ruby": 0.052999894000318,
        "php": 0.052999894000318,
        "stretch": 0.052999894000318,
        "x": 0.5829988340034981,
        "framework": 0.052999894000318,
        "aware": 0.052999894000318,
        "quickstart": 0.052999894000318,
        "commands": 0.052999894000318,
        "per": 0.105999788000636,
        "build": 0.052999894000318,
        "system": 0.052999894000318,
        "13": 0.052999894000318,
        "quality": 0.052999894000318,
        "gates": 0.052999894000318,
        "evaluation": 0.052999894000318,
        "command": 0.052999894000318,
        "validation": 0.052999894000318,
        "existence": 0.052999894000318,
        "checks": 0.105999788000636,
        "no": 0.052999894000318,
        "hallucination": 0.052999894000318,
        "reject": 0.052999894000318,
        "facts": 0.052999894000318,
        "not": 0.052999894000318,
        "in": 0.052999894000318,
        "signals": 0.052999894000318,
        "rag": 0.105999788000636,
        "readme": 0.105999788000636,
        "scorecard": 0.052999894000318,
        "coverage": 0.052999894000318,
        "buildability": 0.052999894000318,
        "link": 0.052999894000318,
        "validity": 0.052999894000318,
        "diff": 0.052999894000318,
        "alignment": 0.052999894000318,
        "lint": 0.105999788000636,
        "14": 0.052999894000318,
        "performance": 0.052999894000318,
        "caching": 0.052999894000318,
        "persist": 0.052999894000318,
        "analyzer": 0.105999788000636,
        "outputs": 0.052999894000318,
        "embeddings": 0.052999894000318,
        "under": 0.052999894000318,
        "docgen": 0.052999894000318,
        "incremental": 0.052999894000318,
        "refresh": 0.052999894000318,
        "changed": 0.052999894000318,
        "files": 0.052999894000318,
        "only": 0.052999894000318,
        "15": 0.052999894000318,
        "error": 0.052999894000318,
        "handling": 0.052999894000318,
        "ux": 0.052999894000318,
        "fail": 0.052999894000318,
        "safe": 0.052999894000318,
        "stub": 0.052999894000318,
        "generation": 0.052999894000318,
        "when": 0.052999894000318,
        "evidence": 0.052999894000318,
        "is": 0.052999894000318,
        "insufficient": 0.052999894000318,
        "clear": 0.052999894000318,
        "run": 0.052999894000318,
        "logs": 0.052999894000318,
        "pr": 0.052999894000318,
        "body": 0.052999894000318,
        "with": 0.052999894000318,
        "rationale": 0.052999894000318,
        "sections": 0.052999894000318,
        "updated": 0.052999894000318,
        "because": 0.052999894000318,
        "helpful": 0.052999894000318,
        "cli": 0.052999894000318,
        "errors": 0.052999894000318,
        "and": 0.105999788000636,
        "verbose": 0.052999894000318,
        "flag": 0.052999894000318,
        "works": 0.052999894000318,
        "pre": 0.052999894000318,
        "post": 0.052999894000318,
        "subcommand": 0.052999894000318,
        "16": 0.052999894000318,
        "extensibility": 0.052999894000318,
        "abc": 0.052999894000318,
        "plugin": 0.052999894000318,
        "discovery": 0.052999894000318,
        "template": 0.052999894000318,
        "packs": 0.052999894000318,
        "org": 0.052999894000318,
        "style": 0.105999788000636,
        "definition": 0.052999894000318,
        "of": 0.052999894000318,
        "done": 0.052999894000318,
        "section": 0.052999894000318,
        "passing": 0.052999894000318,
        "unit": 0.052999894000318,
        "integration": 0.052999894000318,
        "tests": 0.052999894000318,
        "for": 0.052999894000318,
        "core": 0.052999894000318,
        "logic": 0.052999894000318,
        "golden": 0.052999894000318,
        "regression": 0.052999894000318,
        "test": 0.052999894000318,
        "s": 0.052999894000318,
        "meets": 0.052999894000318,
        "requirements": 0.052999894000318
      },
      "text": "(npm/pnpm/Express/Next) **[MVP]** - [ ] Tier\u20112: Go, Rust, Ruby, PHP **[STRETCH]** - [x] Framework\u2011aware quickstart commands per build system **[MVP]** ## 13) Quality Gates & Evaluation - [x] Command validation (existence checks) **[MVP]** - [x] No-hallucination checks: reject facts not in signals/RAG **[MVP]** - [x] README scorecard (coverage, buildability, link validity, diff alignment, lint) **[NEXT]** ## 14) Performance & Caching - [x] Persist analyzer outputs & embeddings under `.docgen/` **[MVP]** - [x] Incremental RAG refresh (changed files only) **[NEXT]** ## 15) Error Handling & UX - [x] Fail-safe stub generation when evidence is insufficient **[MVP]** - [x] Clear run logs + PR body with rationale (\u201csections updated because\u2026\u201d) **[MVP]** - [x] Helpful CLI errors and `--verbose` flag (works pre/post subcommand) **[MVP]** ## 16) Extensibility - [x] Analyzer ABC and plugin discovery **[MVP]** - [x] Template packs (org\u2011style) **[NEXT]** --- ### Definition of Done (per section) - [ ] Passing unit & integration tests for core logic - [ ] Golden README regression test(s) - [ ] Meets lint/style requirements",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_order.md#0",
      "vector": {
        "docgen": 0.25491557319725244,
        "development": 0.042485928866208736,
        "roadmap": 0.042485928866208736,
        "phase": 0.12745778659862622,
        "0": 0.042485928866208736,
        "bootstrap": 0.042485928866208736,
        "the": 0.042485928866208736,
        "skeleton": 0.08497185773241747,
        "1": 0.3398874309296699,
        "project": 0.042485928866208736,
        "cli": 0.042485928866208736,
        "config": 0.08497185773241747,
        "loader": 0.042485928866208736,
        "yml": 0.042485928866208736,
        "models": 0.042485928866208736,
        "done": 0.3823733597958786,
        "covers": 0.3823733597958786,
        "commands": 0.042485928866208736,
        "scaffolding": 0.042485928866208736,
        "9": 0.042485928866208736,
        "parse": 0.042485928866208736,
        "16": 0.08497185773241747,
        "analyzer": 0.08497185773241747,
        "abc": 0.08497185773241747,
        "2": 0.2124296443310437,
        "plugin": 0.08497185773241747,
        "discovery": 0.08497185773241747,
        "init": 0.16994371546483494,
        "happy": 0.042485928866208736,
        "path": 0.042485928866208736,
        "single": 0.042485928866208736,
        "repo": 0.12745778659862622,
        "local": 0.08497185773241747,
        "scanner": 0.042485928866208736,
        "manifest": 0.08497185773241747,
        "roles": 0.042485928866208736,
        "hashing": 0.042485928866208736,
        "ignores": 0.08497185773241747,
        "walk": 0.042485928866208736,
        "fs": 0.042485928866208736,
        "cache": 0.042485928866208736,
        "tier": 0.042485928866208736,
        "analyzers": 0.12745778659862622,
        "python": 0.042485928866208736,
        "java": 0.042485928866208736,
        "node": 0.042485928866208736,
        "build": 0.08497185773241747,
        "dependency": 0.042485928866208736,
        "3": 0.08497185773241747,
        "language": 0.042485928866208736,
        "deps": 0.042485928866208736,
        "templates": 0.12745778659862622,
        "prompt": 0.12745778659862622,
        "builder": 0.08497185773241747,
        "section": 0.12745778659862622,
        "by": 0.042485928866208736,
        "guardrailed": 0.042485928866208736,
        "system": 0.042485928866208736,
        "partial": 0.042485928866208736,
        "guardrails": 0.08497185773241747,
        "unused": 0.042485928866208736,
        "5": 0.08497185773241747,
        "jinja2": 0.042485928866208736,
        "token": 0.042485928866208736,
        "budget": 0.042485928866208736,
        "4": 0.042485928866208736,
        "llm": 0.042485928866208736,
        "runner": 0.042485928866208736,
        "ollama": 0.08497185773241747,
        "adapter": 0.042485928866208736,
        "6": 0.08497185773241747,
        "post": 0.042485928866208736,
        "processor": 0.042485928866208736,
        "managed": 0.042485928866208736,
        "markers": 0.12745778659862622,
        "toc": 0.08497185773241747,
        "markdown": 0.042485928866208736,
        "lint": 0.08497185773241747,
        "7": 0.042485928866208736,
        "git": 0.08497185773241747,
        "publisher": 0.08497185773241747,
        "commit": 0.08497185773241747,
        "mode": 0.08497185773241747,
        "for": 0.08497185773241747,
        "only": 0.042485928866208736,
        "8": 0.08497185773241747,
        "end": 0.08497185773241747,
        "to": 0.042485928866208736,
        "milestone": 0.042485928866208736,
        "generates": 0.042485928866208736,
        "a": 0.08497185773241747,
        "clean": 0.042485928866208736,
        "readme": 0.042485928866208736,
        "with": 0.042485928866208736,
        "no": 0.042485928866208736,
        "docs": 0.042485928866208736,
        "update": 0.08497185773241747,
        "on": 0.042485928866208736,
        "change": 0.08497185773241747,
        "pr": 0.042485928866208736,
        "workflow": 0.042485928866208736,
        "diff": 0.08497185773241747,
        "detection": 0.042485928866208736,
        "mapping": 0.08497185773241747,
        "patching": 0.042485928866208736,
        "inside": 0.042485928866208736,
        "prevent": 0.042485928866208736,
        "loops": 0.042485928866208736
      },
      "text": "# DocGen Development Roadmap ## Phase 0 \u2014 Bootstrap the skeleton 1. **Project skeleton + CLI (`docgen`) + config loader (`.docgen.yml`) + models** \u2014 \u2714 Done * Covers: 1 (commands scaffolding), 9 (parse config), 16 (Analyzer ABC) 2. **Analyzer plugin ABC & discovery** \u2014 \u2714 Done * Covers: 16 (plugin discovery) ## Phase 1 \u2014 \"Init\" happy-path (single repo, local) 1. **Repo scanner & manifest (roles, hashing, ignores)** \u2014 \u2714 Done * Covers: 2 (walk FS, manifest, cache, ignores) 2. **Tier-1 analyzers (Python, Java, Node) + build analyzers + dependency analyzers** \u2014 \u2714 Done * Covers: 3 (language/build/deps) 3. **Templates + prompt builder (section-by-section) + guardrailed system prompt** \u2014 \u25d0 Partial (templates/prompt builder done; guardrails unused) * Covers: 5 (Jinja2 templates, guardrails, token budget) 4. **Local LLM runner (Ollama adapter)** \u2014 \u2714 Done * Covers: 6 (Ollama) 5. **Post-processor: managed markers, ToC, markdown lint** \u2014 \u2714 Done * Covers: 7 (markers, ToC, lint) 6. **Git publisher: commit mode (for init only)** \u2014 \u2714 Done * Covers: 8 (commit mode), 1 (`docgen init` end-to-end) \u2705 **Milestone**: `docgen init` generates a clean README for a repo with no docs. ## Phase 2 \u2014 Update-on-change (PR workflow) 1. **Diff detection + change\u2192section mapping + patching inside markers** \u2014 \u2714 Done * Covers: 8 (diff mapping, prevent loops), 1 (`docgen update`) 2. **Git publisher:",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/feature_order.md#1",
      "vector": {
        "readme": 0.09035079029052513,
        "for": 0.045175395145262566,
        "a": 0.09035079029052513,
        "repo": 0.09035079029052513,
        "with": 0.1355261854357877,
        "no": 0.18070158058105026,
        "docs": 0.09035079029052513,
        "phase": 0.22587697572631282,
        "2": 0.22587697572631282,
        "update": 0.18070158058105026,
        "on": 0.045175395145262566,
        "change": 0.09035079029052513,
        "pr": 0.22587697572631282,
        "workflow": 0.045175395145262566,
        "1": 0.22587697572631282,
        "diff": 0.09035079029052513,
        "detection": 0.045175395145262566,
        "section": 0.1355261854357877,
        "mapping": 0.09035079029052513,
        "patching": 0.045175395145262566,
        "inside": 0.045175395145262566,
        "markers": 0.045175395145262566,
        "done": 0.36140316116210053,
        "covers": 0.36140316116210053,
        "8": 0.09035079029052513,
        "prevent": 0.045175395145262566,
        "loops": 0.045175395145262566,
        "docgen": 0.1355261854357877,
        "git": 0.045175395145262566,
        "publisher": 0.045175395145262566,
        "branch": 0.09035079029052513,
        "delta": 0.045175395145262566,
        "summary": 0.045175395145262566,
        "10": 0.09035079029052513,
        "labeling": 0.045175395145262566,
        "later": 0.045175395145262566,
        "milestone": 0.09035079029052513,
        "opens": 0.045175395145262566,
        "updating": 0.045175395145262566,
        "only": 0.09035079029052513,
        "impacted": 0.045175395145262566,
        "sections": 0.045175395145262566,
        "3": 0.045175395145262566,
        "minimal": 0.045175395145262566,
        "rag": 0.09035079029052513,
        "accuracy": 0.045175395145262566,
        "lite": 0.045175395145262566,
        "embed": 0.045175395145262566,
        "top": 0.045175395145262566,
        "n": 0.045175395145262566,
        "source": 0.045175395145262566,
        "headers": 0.045175395145262566,
        "scoped": 0.045175395145262566,
        "retrieval": 0.09035079029052513,
        "4": 0.09035079029052513,
        "local": 0.09035079029052513,
        "embedding": 0.045175395145262566,
        "index": 0.045175395145262566,
        "sources": 0.045175395145262566,
        "per": 0.045175395145262566,
        "hallucination": 0.1355261854357877,
        "command": 0.1355261854357877,
        "existence": 0.045175395145262566,
        "checks": 0.045175395145262566,
        "partial": 0.045175395145262566,
        "validation": 0.09035079029052513,
        "guard": 0.045175395145262566,
        "not": 0.045175395145262566,
        "implemented": 0.045175395145262566,
        "13": 0.045175395145262566,
        "outputs": 0.045175395145262566,
        "grounded": 0.045175395145262566,
        "in": 0.045175395145262566,
        "facts": 0.045175395145262566,
        "targeted": 0.045175395145262566,
        "context": 0.045175395145262566,
        "hardening": 0.045175395145262566,
        "dx": 0.045175395145262566,
        "error": 0.045175395145262566,
        "handling": 0.045175395145262566,
        "clear": 0.045175395145262566,
        "logs": 0.09035079029052513,
        "verbose": 0.045175395145262566,
        "fail": 0.09035079029052513,
        "safe": 0.09035079029052513,
        "stubs": 0.045175395145262566,
        "15": 0.045175395145262566,
        "cli": 0.045175395145262566,
        "ux": 0.045175395145262566,
        "security": 0.045175395145262566,
        "gitignore": 0.045175395145262566,
        "respect": 0.045175395145262566,
        "path": 0.045175395145262566,
        "excludes": 0.09035079029052513,
        "enforcement": 0.045175395145262566,
        "11": 0.045175395145262566,
        "privacy": 0.045175395145262566,
        "5": 0.09035079029052513,
        "ci": 0.045175395145262566,
        "integration": 0.045175395145262566,
        "config": 0.09035079029052513,
        "polish": 0.045175395145262566,
        "github": 0.045175395145262566,
        "actions": 0.09035079029052513,
        "sample": 0.045175395145262566,
        "push": 0.045175395145262566,
        "trigger": 0.045175395145262566,
        "calling": 0.045175395145262566,
        "gh": 0.045175395145262566,
        "refinements": 0.045175395145262566,
        "watched": 0.045175395145262566,
        "globs": 0.045175395145262566,
        "style": 0.09035079029052513,
        "preset": 0.045175395145262566,
        "concise": 0.045175395145262566,
        "comprehensive": 0.045175395145262566,
        "9": 0.045175395145262566,
        "watched_globs": 0.045175395145262566,
        "presets": 0.045175395145262566,
        "6": 0.045175395145262566,
        "multi": 0.045175395145262566,
        "language": 0.045175395145262566,
        "breadth": 0.045175395145262566
      },
      "text": "README for a repo with no docs. ## Phase 2 \u2014 Update-on-change (PR workflow) 1. **Diff detection + change\u2192section mapping + patching inside markers** \u2014 \u2714 Done * Covers: 8 (diff mapping, prevent loops), 1 (`docgen update`) 2. **Git publisher: branch + PR with delta summary** \u2014 \u2714 Done * Covers: 8 (branch/PR), 10 (labeling later) \u2705 **Milestone**: `docgen update` opens a PR updating only impacted sections. ## Phase 3 \u2014 Minimal RAG & accuracy 1. **RAG Lite: embed README/docs/top N source headers; section-scoped retrieval** \u2014 \u2714 Done * Covers: 4 (local embedding, index sources, per-section retrieval) 2. **No-hallucination & command existence checks** \u2014 \u25d0 Partial (command validation done; no-hallucination guard not implemented) * Covers: 13 (command validation, no-hallucination) \u2705 **Milestone**: outputs grounded in repo facts with targeted context. ## Phase 4 \u2014 Hardening & DX 1. **Error handling, clear logs, `--verbose`, fail-safe stubs** \u2014 \u2714 Done * Covers: 15 (fail-safe, logs, CLI UX) 2. **Security: .gitignore respect, path excludes, local-only enforcement** \u2014 \u2714 Done * Covers: 11 (privacy, excludes) ## Phase 5 \u2014 CI integration & config polish 1. **GitHub Actions sample (push/PR trigger calling `docgen update`)** \u2014 \u2714 Done * Covers: 10 (GH Actions) 2. **Config refinements: watched globs, style preset (concise/comprehensive)** \u2014 \u2714 Done * Covers: 9 (watched_globs), 5 (style presets) ## Phase 6 \u2014 Multi-language breadth",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/feature_order.md#2",
      "vector": {
        "github": 0.046274481338274755,
        "actions": 0.09254896267654951,
        "sample": 0.046274481338274755,
        "push": 0.046274481338274755,
        "pr": 0.18509792535309902,
        "trigger": 0.046274481338274755,
        "calling": 0.046274481338274755,
        "docgen": 0.13882344401482424,
        "update": 0.046274481338274755,
        "done": 0.32392136936792326,
        "covers": 0.41647033204447276,
        "10": 0.09254896267654951,
        "gh": 0.046274481338274755,
        "2": 0.23137240669137377,
        "config": 0.09254896267654951,
        "refinements": 0.046274481338274755,
        "watched": 0.046274481338274755,
        "globs": 0.046274481338274755,
        "style": 0.09254896267654951,
        "preset": 0.046274481338274755,
        "concise": 0.046274481338274755,
        "comprehensive": 0.046274481338274755,
        "9": 0.046274481338274755,
        "watched_globs": 0.046274481338274755,
        "5": 0.09254896267654951,
        "presets": 0.046274481338274755,
        "phase": 0.13882344401482424,
        "6": 0.09254896267654951,
        "multi": 0.046274481338274755,
        "language": 0.046274481338274755,
        "breadth": 0.046274481338274755,
        "framework": 0.13882344401482424,
        "smarts": 0.046274481338274755,
        "1": 0.23137240669137377,
        "entrypoint": 0.046274481338274755,
        "detection": 0.046274481338274755,
        "main": 0.046274481338274755,
        "spring": 0.046274481338274755,
        "boot": 0.046274481338274755,
        "fastapi": 0.09254896267654951,
        "aware": 0.09254896267654951,
        "quick": 0.046274481338274755,
        "start": 0.046274481338274755,
        "entrypoints": 0.046274481338274755,
        "12": 0.046274481338274755,
        "commands": 0.046274481338274755,
        "pattern": 0.09254896267654951,
        "analyzers": 0.09254896267654951,
        "docker": 0.046274481338274755,
        "k8s": 0.046274481338274755,
        "ci": 0.046274481338274755,
        "monorepo": 0.046274481338274755,
        "layout": 0.046274481338274755,
        "3": 0.13882344401482424,
        "7": 0.13882344401482424,
        "quality": 0.046274481338274755,
        "gates": 0.046274481338274755,
        "performance": 0.046274481338274755,
        "readme": 0.09254896267654951,
        "scorecard": 0.13882344401482424,
        "link": 0.09254896267654951,
        "validator": 0.09254896267654951,
        "badges": 0.09254896267654951,
        "13": 0.046274481338274755,
        "artifact": 0.09254896267654951,
        "embedding": 0.046274481338274755,
        "caching": 0.046274481338274755,
        "in": 0.046274481338274755,
        "incremental": 0.09254896267654951,
        "rag": 0.09254896267654951,
        "refresh": 0.09254896267654951,
        "partial": 0.046274481338274755,
        "embeddings": 0.046274481338274755,
        "cached": 0.046274481338274755,
        "no": 0.046274481338274755,
        "analyzer": 0.046274481338274755,
        "store": 0.046274481338274755,
        "14": 0.046274481338274755,
        "persist": 0.046274481338274755,
        "outputs": 0.046274481338274755,
        "8": 0.046274481338274755,
        "nice": 0.046274481338274755,
        "to": 0.09254896267654951,
        "have": 0.046274481338274755,
        "stretch": 0.046274481338274755,
        "dry": 0.09254896267654951,
        "run": 0.09254896267654951,
        "mode": 0.13882344401482424,
        "labeling": 0.09254896267654951,
        "updates": 0.09254896267654951,
        "commit": 0.046274481338274755,
        "policy": 0.046274481338274755,
        "tuning": 0.046274481338274755,
        "template": 0.13882344401482424,
        "overrides": 0.046274481338274755,
        "docs": 0.046274481338274755,
        "templates": 0.046274481338274755,
        "j2": 0.046274481338274755,
        "org": 0.046274481338274755,
        "packs": 0.09254896267654951,
        "override": 0.046274481338274755,
        "16": 0.046274481338274755,
        "service": 0.09254896267654951,
        "llama": 0.09254896267654951,
        "cpp": 0.09254896267654951,
        "adapter": 0.046274481338274755,
        "tree": 0.09254896267654951,
        "sitter": 0.09254896267654951,
        "extraction": 0.046274481338274755,
        "not": 0.046274481338274755,
        "started": 0.046274481338274755,
        "why": 0.046274481338274755,
        "this": 0.046274481338274755,
        "order": 0.046274481338274755,
        "fastest": 0.046274481338274755,
        "path": 0.046274481338274755,
        "value": 0.046274481338274755,
        "get": 0.046274481338274755,
        "init": 0.046274481338274755,
        "producing": 0.046274481338274755,
        "a": 0.046274481338274755,
        "solid": 0.046274481338274755,
        "before": 0.046274481338274755,
        "adding": 0.046274481338274755,
        "diffing": 0.046274481338274755
      },
      "text": "**GitHub Actions sample (push/PR trigger calling `docgen update`)** \u2014 \u2714 Done * Covers: 10 (GH Actions) 2. **Config refinements: watched globs, style preset (concise/comprehensive)** \u2014 \u2714 Done * Covers: 9 (watched_globs), 5 (style presets) ## Phase 6 \u2014 Multi-language breadth & framework smarts 1. **Entrypoint detection (main, Spring Boot, FastAPI) + framework-aware Quick Start** \u2014 \u2714 Done * Covers: 2 (entrypoints), 12 (framework-aware commands) 2. **Pattern analyzers (Docker/K8s, CI config, monorepo layout)** \u2014 \u2714 Done * Covers: 3 (pattern analyzers) ## Phase 7 \u2014 Quality gates & performance 1. **README scorecard + link validator + badges** \u2014 \u2714 Done * Covers: 13 (scorecard), 7 (link validator), 7 (badges) 2. **Artifact & embedding caching in `.docgen/` + incremental RAG refresh** \u2014 \u25d0 Partial (embeddings/scorecard cached; no analyzer artifact store) * Covers: 14 (persist outputs, incremental refresh) ## Phase 8 \u2014 \"Nice to have\" & stretch 1. **Dry-run mode, PR labeling/updates, commit/PR policy tuning** \u2014 \u2714 Done * Covers: 1 (dry-run), 10 (labeling/PR updates) 2. **Template overrides (`docs/templates/*.j2`) & org template packs** \u2014 \u2714 Done * Covers: 5 (override), 16 (template packs) 3. **Service mode (FastAPI), llama.cpp adapter, tree-sitter extraction** \u2014 \u2610 Not started * Covers: 1 (service mode), 6 (llama.cpp), 3 (tree-sitter) ## Why this order * **Fastest path to value**: get `docgen init` producing a solid README before adding diffing/RAG.",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/feature_order.md#3",
      "vector": {
        "3": 0.18333969940564226,
        "service": 0.18333969940564226,
        "mode": 0.18333969940564226,
        "fastapi": 0.09166984970282113,
        "llama": 0.18333969940564226,
        "cpp": 0.18333969940564226,
        "adapter": 0.09166984970282113,
        "tree": 0.18333969940564226,
        "sitter": 0.18333969940564226,
        "extraction": 0.09166984970282113,
        "not": 0.09166984970282113,
        "started": 0.09166984970282113,
        "covers": 0.09166984970282113,
        "1": 0.09166984970282113,
        "6": 0.09166984970282113,
        "why": 0.09166984970282113,
        "this": 0.09166984970282113,
        "order": 0.09166984970282113,
        "fastest": 0.09166984970282113,
        "path": 0.09166984970282113,
        "to": 0.18333969940564226,
        "value": 0.09166984970282113,
        "get": 0.09166984970282113,
        "docgen": 0.09166984970282113,
        "init": 0.09166984970282113,
        "producing": 0.09166984970282113,
        "a": 0.09166984970282113,
        "solid": 0.09166984970282113,
        "readme": 0.09166984970282113,
        "before": 0.09166984970282113,
        "adding": 0.09166984970282113,
        "diffing": 0.09166984970282113,
        "rag": 0.18333969940564226,
        "contain": 0.09166984970282113,
        "risk": 0.09166984970282113,
        "early": 0.09166984970282113,
        "section": 0.09166984970282113,
        "markers": 0.09166984970282113,
        "lint": 0.09166984970282113,
        "and": 0.2750095491084634,
        "commit": 0.09166984970282113,
        "publishing": 0.09166984970282113,
        "ensure": 0.09166984970282113,
        "safe": 0.09166984970282113,
        "idempotent": 0.09166984970282113,
        "edits": 0.09166984970282113,
        "accuracy": 0.09166984970282113,
        "next": 0.09166984970282113,
        "add": 0.09166984970282113,
        "validation": 0.09166984970282113,
        "avoid": 0.09166984970282113,
        "hallucinations": 0.09166984970282113,
        "once": 0.09166984970282113,
        "the": 0.18333969940564226,
        "pipeline": 0.09166984970282113,
        "works": 0.09166984970282113,
        "scale": 0.09166984970282113,
        "breadth": 0.09166984970282113,
        "later": 0.09166984970282113,
        "only": 0.09166984970282113,
        "after": 0.09166984970282113,
        "core": 0.09166984970282113,
        "loop": 0.09166984970282113,
        "is": 0.09166984970282113,
        "robust": 0.09166984970282113,
        "do": 0.09166984970282113,
        "we": 0.09166984970282113,
        "widen": 0.09166984970282113,
        "language": 0.09166984970282113,
        "framework": 0.09166984970282113,
        "coverage": 0.09166984970282113,
        "polish": 0.09166984970282113,
        "last": 0.09166984970282113,
        "ci": 0.09166984970282113,
        "caching": 0.09166984970282113,
        "quality": 0.09166984970282113,
        "gates": 0.09166984970282113,
        "refine": 0.09166984970282113,
        "dev": 0.09166984970282113,
        "experience": 0.09166984970282113,
        "performance": 0.09166984970282113
      },
      "text": "3. **Service mode (FastAPI), llama.cpp adapter, tree-sitter extraction** \u2014 \u2610 Not started * Covers: 1 (service mode), 6 (llama.cpp), 3 (tree-sitter) ## Why this order * **Fastest path to value**: get `docgen init` producing a solid README before adding diffing/RAG. * **Contain risk early**: section markers, lint, and commit publishing ensure safe/idempotent edits. * **Accuracy next**: add RAG + validation to avoid hallucinations once the pipeline works. * **Scale breadth later**: only after the core loop is robust do we widen language/framework coverage. * **Polish last**: CI, caching, and quality gates refine dev experience and performance.",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/jira_stories.md#0",
      "vector": {
        "docgen": 0.15037641213512565,
        "jira": 0.05012547071170855,
        "stories": 0.1002509414234171,
        "remaining": 0.05012547071170855,
        "are": 0.1002509414234171,
        "ordered": 0.05012547071170855,
        "by": 0.1002509414234171,
        "the": 0.25062735355854276,
        "recommended": 0.05012547071170855,
        "completion": 0.05012547071170855,
        "sequence": 0.05012547071170855,
        "and": 0.3508782949819598,
        "formatted": 0.05012547071170855,
        "per": 0.05012547071170855,
        "prompt": 0.05012547071170855,
        "template": 0.05012547071170855,
        "guidance": 0.05012547071170855,
        "all": 0.05012547071170855,
        "prior": 0.05012547071170855,
        "milestones": 0.05012547071170855,
        "complete": 0.05012547071170855,
        "only": 0.05012547071170855,
        "work": 0.05012547071170855,
        "listed": 0.05012547071170855,
        "below": 0.05012547071170855,
        "remains": 0.05012547071170855,
        "story": 0.1002509414234171,
        "s": 0.15037641213512565,
        "032": 0.05012547071170855,
        "no": 0.05012547071170855,
        "hallucination": 0.05012547071170855,
        "validation": 0.15037641213512565,
        "status": 0.05012547071170855,
        "done": 0.05012547071170855,
        "text": 0.05012547071170855,
        "introduce": 0.05012547071170855,
        "a": 0.3508782949819598,
        "layer": 0.05012547071170855,
        "that": 0.1002509414234171,
        "rejects": 0.05012547071170855,
        "readme": 0.05012547071170855,
        "content": 0.15037641213512565,
        "containing": 0.05012547071170855,
        "facts": 0.05012547071170855,
        "not": 0.05012547071170855,
        "backed": 0.05012547071170855,
        "analyzer": 0.1002509414234171,
        "signals": 0.15037641213512565,
        "or": 0.2005018828468342,
        "rag": 0.1002509414234171,
        "context": 0.1002509414234171,
        "surfacing": 0.05012547071170855,
        "actionable": 0.05012547071170855,
        "errors": 0.05012547071170855,
        "to": 0.05012547071170855,
        "users": 0.05012547071170855,
        "dependencies": 0.05012547071170855,
        "already": 0.05012547071170855,
        "completed": 0.05012547071170855,
        "031": 0.05012547071170855,
        "guardrailed": 0.05012547071170855,
        "execution": 0.05012547071170855,
        "011": 0.05012547071170855,
        "contexts": 0.05012547071170855,
        "constraints": 0.05012547071170855,
        "must": 0.05012547071170855,
        "run": 0.05012547071170855,
        "after": 0.1002509414234171,
        "section": 0.1002509414234171,
        "rendering": 0.1002509414234171,
        "but": 0.05012547071170855,
        "before": 0.1002509414234171,
        "writing": 0.05012547071170855,
        "files": 0.05012547071170855,
        "publishing": 0.05012547071170855,
        "prs": 0.05012547071170855,
        "provide": 0.05012547071170855,
        "clear": 0.05012547071170855,
        "remediation": 0.05012547071170855,
        "logs": 0.1002509414234171,
        "referencing": 0.05012547071170855,
        "missing": 0.1002509414234171,
        "affected": 0.05012547071170855,
        "sections": 0.1002509414234171,
        "allow": 0.05012547071170855,
        "an": 0.05012547071170855,
        "opt": 0.05012547071170855,
        "out": 0.05012547071170855,
        "toggle": 0.05012547071170855,
        "in": 0.05012547071170855,
        "yml": 0.05012547071170855,
        "for": 0.05012547071170855,
        "edge": 0.05012547071170855,
        "cases": 0.05012547071170855,
        "non": 0.05012547071170855,
        "goals": 0.05012547071170855,
        "external": 0.05012547071170855,
        "api": 0.05012547071170855,
        "calls": 0.05012547071170855,
        "complex": 0.05012547071170855,
        "semantic": 0.05012547071170855,
        "similarity": 0.05012547071170855,
        "checks": 0.05012547071170855,
        "acceptance": 0.1002509414234171,
        "criteria": 0.05012547071170855,
        "validator": 0.1002509414234171,
        "cross": 0.05012547071170855,
        "references": 0.05012547071170855,
        "generated": 0.05012547071170855,
        "claims": 0.05012547071170855,
        "against": 0.05012547071170855,
        "available": 0.05012547071170855,
        "disallowed": 0.05012547071170855,
        "triggers": 0.05012547071170855,
        "failure": 0.05012547071170855,
        "path": 0.05012547071170855,
        "with": 0.1002509414234171,
        "stub": 0.05012547071170855,
        "fallback": 0.05012547071170855,
        "unit": 0.05012547071170855,
        "tests": 0.05012547071170855,
        "cover": 0.05012547071170855,
        "of": 0.1002509414234171,
        "grounded": 0.05012547071170855,
        "rejection": 0.05012547071170855,
        "injected": 0.05012547071170855,
        "hallucinations": 0.05012547071170855,
        "cli": 0.05012547071170855,
        "surfaces": 0.05012547071170855,
        "concise": 0.05012547071170855,
        "error": 0.05012547071170855,
        "messages": 0.05012547071170855,
        "verbose": 0.05012547071170855,
        "list": 0.05012547071170855,
        "offending": 0.05012547071170855,
        "evidence": 0.05012547071170855,
        "implementation": 0.1002509414234171,
        "plan": 0.05012547071170855,
        "create": 0.05012547071170855,
        "dedicated": 0.05012547071170855,
        "validators": 0.1002509414234171,
        "package": 0.05012547071170855,
        "lightweight": 0.05012547071170855,
        "validationissue": 0.05012547071170855,
        "dataclass": 0.05012547071170855,
        "protocol": 0.05012547071170855,
        "nohallucinationvalidator": 0.05012547071170855,
        "concrete": 0.05012547071170855,
        "orchestrator": 0.05012547071170855,
        "registers": 0.05012547071170855,
        "executes": 0.05012547071170855,
        "them": 0.05012547071170855,
        "post": 0.05012547071170855,
        "processing": 0.05012547071170855,
        "io": 0.05012547071170855,
        "add": 0.05012547071170855,
        "shared": 0.05012547071170855,
        "evidenceindex": 0.05012547071170855,
        "builder": 0.05012547071170855,
        "normalizes": 0.05012547071170855
      },
      "text": "# DocGen Jira Stories (Remaining) > Stories are ordered by the recommended completion sequence and formatted per the prompt template guidance. All prior milestones are complete; only the work listed below remains. --- ## Story S-032 \u2014 No-Hallucination Validation - **Status:** \u2714 Done - **Story Text:** Introduce a validation layer that rejects README content containing facts not backed by analyzer signals or RAG context, surfacing actionable errors to users. - **Dependencies already completed:** S-031 (guardrailed execution), S-011 (RAG contexts) - **Constraints:** - Validation must run after section rendering but before writing files or publishing PRs. - Provide clear remediation logs referencing the missing signals and affected sections. - Allow an opt-out toggle in `.docgen.yml` for edge cases. - **Non-Goals:** External API calls or complex semantic similarity checks. - **Acceptance Criteria:** - Validator cross-references generated claims against available signals/context; disallowed content triggers a failure path with stub fallback. - Unit tests cover acceptance of grounded content and rejection of injected hallucinations. - CLI surfaces concise error messages and `--verbose` logs list offending sections and missing evidence. - **Implementation Plan:** - Create a dedicated `docgen.validators` package with a lightweight `ValidationIssue` dataclass, a `Validator` protocol, and a `NoHallucinationValidator` concrete implementation. The orchestrator registers validators after section rendering and executes them before post-processing or IO. - Add a shared `EvidenceIndex` builder that normalizes analyzer",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#1",
      "vector": {
        "a": 0.37435064886346636,
        "dedicated": 0.04159451654038515,
        "docgen": 0.12478354962115545,
        "validators": 0.12478354962115545,
        "package": 0.04159451654038515,
        "with": 0.2495670992423109,
        "lightweight": 0.04159451654038515,
        "validationissue": 0.04159451654038515,
        "dataclass": 0.04159451654038515,
        "validator": 0.04159451654038515,
        "protocol": 0.04159451654038515,
        "and": 0.29116161578269606,
        "nohallucinationvalidator": 0.04159451654038515,
        "concrete": 0.04159451654038515,
        "implementation": 0.04159451654038515,
        "the": 0.4991341984846218,
        "orchestrator": 0.04159451654038515,
        "registers": 0.04159451654038515,
        "after": 0.04159451654038515,
        "section": 0.0831890330807703,
        "rendering": 0.04159451654038515,
        "executes": 0.04159451654038515,
        "them": 0.04159451654038515,
        "before": 0.04159451654038515,
        "post": 0.04159451654038515,
        "processing": 0.04159451654038515,
        "or": 0.04159451654038515,
        "io": 0.04159451654038515,
        "add": 0.0831890330807703,
        "shared": 0.04159451654038515,
        "evidenceindex": 0.04159451654038515,
        "builder": 0.0831890330807703,
        "that": 0.12478354962115545,
        "normalizes": 0.04159451654038515,
        "analyzer": 0.04159451654038515,
        "signals": 0.0831890330807703,
        "names": 0.04159451654038515,
        "kinds": 0.04159451654038515,
        "key": 0.04159451654038515,
        "attributes": 0.04159451654038515,
        "retrieved": 0.04159451654038515,
        "rag": 0.04159451654038515,
        "chunks": 0.04159451654038515,
        "path": 0.04159451654038515,
        "heading": 0.04159451654038515,
        "snippet": 0.04159451654038515,
        "persist": 0.04159451654038515,
        "normalized": 0.0831890330807703,
        "evidence": 0.0831890330807703,
        "in": 0.0831890330807703,
        "run": 0.04159451654038515,
        "context": 0.04159451654038515,
        "so": 0.04159451654038515,
        "verbose": 0.04159451654038515,
        "logging": 0.04159451654038515,
        "receive": 0.04159451654038515,
        "same": 0.04159451654038515,
        "data": 0.04159451654038515,
        "extend": 0.04159451654038515,
        "prompt": 0.04159451654038515,
        "to": 0.20797258270192576,
        "annotate": 0.04159451654038515,
        "each": 0.0831890330807703,
        "render": 0.04159451654038515,
        "sectionevidence": 0.04159451654038515,
        "metadata": 0.0831890330807703,
        "describing": 0.04159451654038515,
        "which": 0.04159451654038515,
        "chunk": 0.04159451654038515,
        "ids": 0.04159451654038515,
        "were": 0.04159451654038515,
        "injected": 0.04159451654038515,
        "this": 0.04159451654038515,
        "is": 0.04159451654038515,
        "stored": 0.04159451654038515,
        "alongside": 0.04159451654038515,
        "rendered": 0.0831890330807703,
        "markdown": 0.04159451654038515,
        "avoid": 0.04159451654038515,
        "re": 0.04159451654038515,
        "parsing": 0.04159451654038515,
        "prompts": 0.04159451654038515,
        "implement": 0.04159451654038515,
        "lexical": 0.04159451654038515,
        "matching": 0.04159451654038515,
        "heuristics": 0.04159451654038515,
        "split": 0.04159451654038515,
        "sections": 0.0831890330807703,
        "into": 0.04159451654038515,
        "sentences": 0.0831890330807703,
        "ignore": 0.04159451654038515,
        "boilerplate": 0.04159451654038515,
        "phrases": 0.04159451654038515,
        "require": 0.04159451654038515,
        "remaining": 0.04159451654038515,
        "sentence": 0.04159451654038515,
        "introduces": 0.04159451654038515,
        "facts": 0.04159451654038515,
        "numbers": 0.04159451654038515,
        "detected": 0.0831890330807703,
        "entities": 0.04159451654038515,
        "verbs": 0.04159451654038515,
        "direct": 0.04159451654038515,
        "objects": 0.04159451654038515,
        "have": 0.04159451654038515,
        "at": 0.04159451654038515,
        "least": 0.04159451654038515,
        "one": 0.04159451654038515,
        "overlapping": 0.04159451654038515,
        "n": 0.04159451654038515,
        "gram": 0.04159451654038515,
        "len": 0.04159451654038515,
        "3": 0.04159451654038515,
        "flag": 0.0831890330807703,
        "unmatched": 0.04159451654038515,
        "as": 0.04159451654038515,
        "hallucinations": 0.0831890330807703,
        "when": 0.04159451654038515,
        "are": 0.04159451654038515,
        "short": 0.04159451654038515,
        "circuit": 0.04159451654038515,
        "pipeline": 0.04159451654038515,
        "emit": 0.04159451654038515,
        "fail": 0.04159451654038515,
        "safe": 0.04159451654038515,
        "stubs": 0.04159451654038515,
        "for": 0.12478354962115545,
        "offending": 0.04159451654038515,
        "reuse": 0.04159451654038515,
        "existing": 0.04159451654038515,
        "stub": 0.04159451654038515,
        "generator": 0.04159451654038515,
        "bubble": 0.04159451654038515,
        "validationerror": 0.04159451654038515,
        "back": 0.04159451654038515,
        "cli": 0.0831890330807703,
        "actionable": 0.04159451654038515,
        "hints": 0.04159451654038515,
        "yml": 0.04159451654038515,
        "updates": 0.04159451654038515,
        "introduce": 0.04159451654038515,
        "validation": 0.0831890330807703,
        "map": 0.04159451654038515,
        "no_hallucination": 0.04159451654038515,
        "boolean": 0.04159451654038515,
        "default": 0.04159451654038515,
        "true": 0.04159451654038515,
        "respect": 0.04159451654038515,
        "repo": 0.04159451654038515,
        "level": 0.04159451654038515,
        "overrides": 0.04159451654038515,
        "while": 0.04159451654038515,
        "allowing": 0.04159451654038515,
        "docgen_validation_no_hallucination": 0.04159451654038515,
        "false": 0.04159451654038515,
        "disable": 0.04159451654038515,
        "check": 0.04159451654038515,
        "ci": 0.04159451654038515,
        "emergencies": 0.04159451654038515,
        "skip": 0.04159451654038515,
        "init": 0.04159451654038515,
        "update": 0.04159451654038515,
        "regenerate": 0.04159451654038515,
        "flips": 0.04159451654038515,
        "toggle": 0.04159451654038515
      },
      "text": "a dedicated `docgen.validators` package with a lightweight `ValidationIssue` dataclass, a `Validator` protocol, and a `NoHallucinationValidator` concrete implementation. The orchestrator registers validators after section rendering and executes them before post-processing or IO. - Add a shared `EvidenceIndex` builder that normalizes analyzer signals (names, kinds, key attributes) and retrieved RAG chunks (path, heading, snippet). Persist the normalized evidence in the run context so validators and verbose logging receive the same data. - Extend the prompt builder to annotate each section render with `SectionEvidence` metadata describing which signals and chunk IDs were injected. This metadata is stored alongside the rendered markdown to avoid re-parsing prompts. - Implement lexical matching heuristics: split rendered sections into sentences, ignore boilerplate phrases, and require each remaining sentence that introduces facts (numbers, detected entities, verbs with direct objects) to have at least one overlapping n-gram (len \u22653) with the normalized evidence. Flag unmatched sentences as hallucinations. - When hallucinations are detected, short-circuit the pipeline, emit fail-safe stubs for the offending sections (reuse existing stub generator), and bubble a `ValidationError` back to the CLI with actionable hints. - **`.docgen.yml` & CLI Updates:** - Introduce a `validation` map with a `no_hallucination` boolean (default `true`). Respect repo-level overrides while allowing `DOCGEN_VALIDATION_NO_HALLUCINATION=false` to disable the check in CI emergencies. - Add a `--skip-validation` flag for `docgen init|update|regenerate` that flips the toggle for",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#2",
      "vector": {
        "cli": 0.18856180831641267,
        "updates": 0.04714045207910317,
        "introduce": 0.04714045207910317,
        "a": 0.23570226039551584,
        "validation": 0.23570226039551584,
        "map": 0.04714045207910317,
        "with": 0.09428090415820634,
        "no_hallucination": 0.04714045207910317,
        "boolean": 0.04714045207910317,
        "default": 0.04714045207910317,
        "true": 0.04714045207910317,
        "respect": 0.04714045207910317,
        "repo": 0.09428090415820634,
        "level": 0.04714045207910317,
        "overrides": 0.04714045207910317,
        "while": 0.04714045207910317,
        "allowing": 0.04714045207910317,
        "docgen_validation_no_hallucination": 0.04714045207910317,
        "false": 0.04714045207910317,
        "to": 0.1414213562373095,
        "disable": 0.04714045207910317,
        "the": 0.4242640687119285,
        "check": 0.04714045207910317,
        "in": 0.1414213562373095,
        "ci": 0.04714045207910317,
        "emergencies": 0.04714045207910317,
        "add": 0.09428090415820634,
        "skip": 0.04714045207910317,
        "flag": 0.04714045207910317,
        "for": 0.18856180831641267,
        "docgen": 0.09428090415820634,
        "init": 0.04714045207910317,
        "update": 0.04714045207910317,
        "regenerate": 0.04714045207910317,
        "that": 0.1414213562373095,
        "flips": 0.04714045207910317,
        "toggle": 0.04714045207910317,
        "current": 0.04714045207910317,
        "execution": 0.04714045207910317,
        "only": 0.04714045207910317,
        "and": 0.282842712474619,
        "is": 0.04714045207910317,
        "surfaced": 0.04714045207910317,
        "run": 0.09428090415820634,
        "summary": 0.04714045207910317,
        "encourage": 0.04714045207910317,
        "re": 0.04714045207910317,
        "enabling": 0.04714045207910317,
        "logging": 0.09428090415820634,
        "ux": 0.04714045207910317,
        "errors": 0.04714045207910317,
        "show": 0.04714045207910317,
        "one": 0.04714045207910317,
        "line": 0.04714045207910317,
        "summaries": 0.04714045207910317,
        "per": 0.04714045207910317,
        "section": 0.04714045207910317,
        "quickstart": 0.04714045207910317,
        "references": 0.04714045207910317,
        "docker": 0.04714045207910317,
        "compose": 0.04714045207910317,
        "without": 0.09428090415820634,
        "supporting": 0.04714045207910317,
        "analyzer": 0.1414213562373095,
        "signal": 0.04714045207910317,
        "verbose": 0.09428090415820634,
        "prints": 0.04714045207910317,
        "offending": 0.04714045207910317,
        "sentence": 0.04714045207910317,
        "missing": 0.04714045207910317,
        "tokens": 0.04714045207910317,
        "short": 0.04714045207910317,
        "list": 0.04714045207910317,
        "of": 0.04714045207910317,
        "nearby": 0.04714045207910317,
        "evidence": 0.09428090415820634,
        "persist": 0.09428090415820634,
        "json": 0.04714045207910317,
        "report": 0.04714045207910317,
        "under": 0.04714045207910317,
        "capturing": 0.04714045207910317,
        "validator": 0.04714045207910317,
        "status": 0.09428090415820634,
        "issues": 0.04714045207910317,
        "selected": 0.04714045207910317,
        "forensic": 0.04714045207910317,
        "review": 0.04714045207910317,
        "testing": 0.04714045207910317,
        "strategy": 0.04714045207910317,
        "unit": 0.04714045207910317,
        "tests": 0.1414213562373095,
        "cover": 0.04714045207910317,
        "positive": 0.04714045207910317,
        "negative": 0.04714045207910317,
        "cases": 0.09428090415820634,
        "nohallucinationvalidator": 0.04714045207910317,
        "including": 0.04714045207910317,
        "edge": 0.04714045207910317,
        "such": 0.04714045207910317,
        "as": 0.04714045207910317,
        "citations": 0.04714045207910317,
        "using": 0.04714045207910317,
        "synonyms": 0.04714045207910317,
        "or": 0.04714045207910317,
        "pluralization": 0.04714045207910317,
        "bullet": 0.04714045207910317,
        "lists": 0.04714045207910317,
        "code": 0.04714045207910317,
        "blocks": 0.04714045207910317,
        "integration": 0.04714045207910317,
        "full": 0.04714045207910317,
        "on": 0.04714045207910317,
        "synthetic": 0.04714045207910317,
        "repos": 0.04714045207910317,
        "stored": 0.04714045207910317,
        "data": 0.04714045207910317,
        "confirm": 0.04714045207910317,
        "grounded": 0.04714045207910317,
        "readmes": 0.04714045207910317,
        "pass": 0.04714045207910317,
        "tampered": 0.04714045207910317,
        "outputs": 0.09428090415820634,
        "fail": 0.04714045207910317,
        "fast": 0.04714045207910317,
        "stub": 0.04714045207910317,
        "replacements": 0.04714045207910317,
        "regression": 0.04714045207910317,
        "fixtures": 0.04714045207910317,
        "asserting": 0.04714045207910317,
        "disabling": 0.04714045207910317,
        "via": 0.04714045207910317,
        "config": 0.04714045207910317,
        "leaves": 0.04714045207910317,
        "runs": 0.09428090415820634,
        "untouched": 0.04714045207910317,
        "enumerates": 0.04714045207910317,
        "flagged": 0.04714045207910317,
        "sentences": 0.04714045207910317,
        "story": 0.09428090415820634,
        "s": 0.1414213562373095,
        "033": 0.04714045207910317,
        "artifact": 0.04714045207910317,
        "persistence": 0.04714045207910317,
        "done": 0.04714045207910317,
        "text": 0.04714045207910317,
        "alongside": 0.04714045207910317,
        "embeddings": 0.04714045207910317,
        "so": 0.04714045207910317,
        "repeated": 0.04714045207910317,
        "can": 0.04714045207910317,
        "reuse": 0.04714045207910317,
        "structured": 0.04714045207910317,
        "signals": 0.04714045207910317,
        "reprocessing": 0.04714045207910317,
        "unchanged": 0.04714045207910317,
        "files": 0.04714045207910317,
        "dependencies": 0.04714045207910317,
        "already": 0.04714045207910317,
        "completed": 0.04714045207910317,
        "003": 0.04714045207910317,
        "scanner": 0.04714045207910317,
        "020": 0.04714045207910317,
        "embedding": 0.04714045207910317,
        "cache": 0.04714045207910317
      },
      "text": "& CLI Updates:** - Introduce a `validation` map with a `no_hallucination` boolean (default `true`). Respect repo-level overrides while allowing `DOCGEN_VALIDATION_NO_HALLUCINATION=false` to disable the check in CI emergencies. - Add a `--skip-validation` flag for `docgen init|update|regenerate` that flips the toggle for the current execution only and is surfaced in the run summary to encourage re-enabling. - **Logging & UX:** - CLI errors show one-line summaries per section (`quickstart: references docker compose without supporting analyzer signal`). `--verbose` prints the offending sentence, the missing tokens, and a short list of nearby evidence. - Persist a `validation.json` report under `.docgen/` capturing the validator status, issues, and selected evidence for forensic review. - **Testing Strategy:** - Unit tests cover positive/negative cases for the `NoHallucinationValidator`, including edge cases such as citations using synonyms or pluralization, bullet lists, and code blocks. - Integration tests run the full CLI on synthetic repos stored in `tests/data/validation/` to confirm grounded READMEs pass and tampered outputs fail fast with stub replacements. - Add regression fixtures asserting that disabling validation via config/CLI leaves runs untouched and that verbose logging enumerates flagged sentences. ## Story S-033 \u2014 Analyzer Artifact Persistence - **Status:** \u2714 Done - **Story Text:** Persist analyzer outputs alongside embeddings so repeated runs can reuse structured signals without reprocessing unchanged files. - **Dependencies already completed:** S-003 (Repo scanner), S-020 (embedding cache",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#3",
      "vector": {
        "story": 0.19975046777556893,
        "s": 0.2996257016633534,
        "033": 0.04993761694389223,
        "analyzer": 0.19975046777556893,
        "artifact": 0.09987523388778446,
        "persistence": 0.04993761694389223,
        "status": 0.09987523388778446,
        "done": 0.09987523388778446,
        "text": 0.09987523388778446,
        "persist": 0.04993761694389223,
        "outputs": 0.09987523388778446,
        "alongside": 0.04993761694389223,
        "embeddings": 0.04993761694389223,
        "so": 0.04993761694389223,
        "repeated": 0.04993761694389223,
        "runs": 0.09987523388778446,
        "can": 0.04993761694389223,
        "reuse": 0.04993761694389223,
        "structured": 0.04993761694389223,
        "signals": 0.09987523388778446,
        "without": 0.04993761694389223,
        "reprocessing": 0.04993761694389223,
        "unchanged": 0.09987523388778446,
        "files": 0.09987523388778446,
        "dependencies": 0.09987523388778446,
        "already": 0.09987523388778446,
        "completed": 0.09987523388778446,
        "003": 0.04993761694389223,
        "repo": 0.09987523388778446,
        "scanner": 0.04993761694389223,
        "020": 0.04993761694389223,
        "embedding": 0.04993761694389223,
        "cache": 0.09987523388778446,
        "groundwork": 0.09987523388778446,
        "constraints": 0.09987523388778446,
        "store": 0.04993761694389223,
        "artifacts": 0.04993761694389223,
        "under": 0.04993761694389223,
        "docgen": 0.04993761694389223,
        "with": 0.1498128508316767,
        "versioning": 0.04993761694389223,
        "to": 0.19975046777556893,
        "handle": 0.04993761694389223,
        "schema": 0.04993761694389223,
        "changes": 0.04993761694389223,
        "refresh": 0.04993761694389223,
        "results": 0.04993761694389223,
        "incrementally": 0.04993761694389223,
        "based": 0.09987523388778446,
        "on": 0.04993761694389223,
        "file": 0.04993761694389223,
        "hashes": 0.04993761694389223,
        "and": 0.2996257016633534,
        "invalidate": 0.04993761694389223,
        "when": 0.19975046777556893,
        "analyzers": 0.04993761694389223,
        "change": 0.04993761694389223,
        "keep": 0.04993761694389223,
        "storage": 0.04993761694389223,
        "format": 0.04993761694389223,
        "json": 0.04993761694389223,
        "serializable": 0.04993761694389223,
        "human": 0.04993761694389223,
        "auditable": 0.04993761694389223,
        "non": 0.09987523388778446,
        "goals": 0.1498128508316767,
        "remote": 0.04993761694389223,
        "backends": 0.04993761694389223,
        "or": 0.04993761694389223,
        "cross": 0.04993761694389223,
        "sharing": 0.04993761694389223,
        "acceptance": 0.04993761694389223,
        "criteria": 0.04993761694389223,
        "saved": 0.04993761694389223,
        "reloaded": 0.04993761694389223,
        "during": 0.04993761694389223,
        "orchestrator": 0.04993761694389223,
        "skipping": 0.04993761694389223,
        "recomputation": 0.04993761694389223,
        "inputs": 0.04993761694389223,
        "integration": 0.09987523388778446,
        "tests": 0.04993761694389223,
        "demonstrate": 0.04993761694389223,
        "speed": 0.04993761694389223,
        "up": 0.04993761694389223,
        "by": 0.09987523388778446,
        "reusing": 0.04993761694389223,
        "cached": 0.04993761694389223,
        "correct": 0.04993761694389223,
        "invalidation": 0.04993761694389223,
        "mutate": 0.04993761694389223,
        "documentation": 0.04993761694389223,
        "in": 0.04993761694389223,
        "spec": 0.09987523388778446,
        "md": 0.04993761694389223,
        "updated": 0.04993761694389223,
        "reflect": 0.04993761694389223,
        "caching": 0.04993761694389223,
        "behavior": 0.04993761694389223,
        "034": 0.04993761694389223,
        "service": 0.1498128508316767,
        "mode": 0.09987523388778446,
        "extended": 0.04993761694389223,
        "runtimes": 0.04993761694389223,
        "deliver": 0.04993761694389223,
        "fastapi": 0.09987523388778446,
        "llama": 0.09987523388778446,
        "cpp": 0.09987523388778446,
        "runtime": 0.04993761694389223,
        "adapter": 0.09987523388778446,
        "tree": 0.09987523388778446,
        "sitter": 0.09987523388778446,
        "powered": 0.04993761694389223,
        "symbol": 0.04993761694389223,
        "extraction": 0.04993761694389223,
        "round": 0.04993761694389223,
        "out": 0.04993761694389223,
        "stretch": 0.04993761694389223,
        "010": 0.04993761694389223,
        "git": 0.04993761694389223,
        "publishing": 0.04993761694389223,
        "infrastructure": 0.04993761694389223,
        "017": 0.04993761694389223,
        "entrypoint": 0.04993761694389223,
        "detection": 0.04993761694389223,
        "must": 0.04993761694389223,
        "expose": 0.04993761694389223,
        "endpoints": 0.04993761694389223,
        "for": 0.09987523388778446,
        "init": 0.04993761694389223,
        "update": 0.04993761694389223,
        "dry": 0.04993761694389223,
        "run": 0.04993761694389223,
        "authentication": 0.04993761694389223,
        "disabled": 0.04993761694389223,
        "default": 0.04993761694389223,
        "but": 0.04993761694389223,
        "ready": 0.04993761694389223,
        "future": 0.04993761694389223,
        "hardening": 0.04993761694389223,
        "hooks": 0.04993761694389223,
        "should": 0.04993761694389223,
        "mirror": 0.04993761694389223,
        "llmrunner": 0.04993761694389223,
        "interface": 0.04993761694389223,
        "enforce": 0.04993761694389223,
        "local": 0.04993761694389223,
        "execution": 0.04993761694389223,
        "paths": 0.04993761694389223,
        "limited": 0.04993761694389223,
        "supported": 0.04993761694389223,
        "languages": 0.04993761694389223,
        "python": 0.04993761694389223,
        "java": 0.04993761694389223,
        "typescript": 0.04993761694389223,
        "graceful": 0.04993761694389223,
        "degradation": 0.04993761694389223,
        "parsers": 0.04993761694389223,
        "unavailable": 0.04993761694389223,
        "production": 0.04993761694389223
      },
      "text": "## Story S-033 \u2014 Analyzer Artifact Persistence - **Status:** \u2714 Done - **Story Text:** Persist analyzer outputs alongside embeddings so repeated runs can reuse structured signals without reprocessing unchanged files. - **Dependencies already completed:** S-003 (Repo scanner), S-020 (embedding cache groundwork) - **Constraints:** - Store artifacts under `.docgen/` with versioning to handle schema changes. - Refresh analyzer results incrementally based on file hashes and invalidate when analyzers change. - Keep storage format JSON-serializable and human-auditable. - **Non-Goals:** Remote cache backends or cross-repo sharing. - **Acceptance Criteria:** - Analyzer outputs saved and reloaded during orchestrator runs, skipping recomputation when inputs unchanged. - Integration tests demonstrate speed-up by reusing cached signals and correct invalidation when files mutate. - Documentation in `spec/spec.md` updated to reflect artifact caching behavior. ## Story S-034 \u2014 Service Mode & Extended Runtimes - **Status:** \u2714 Done - **Story Text:** Deliver FastAPI-based service mode, llama.cpp runtime adapter, and tree-sitter powered symbol extraction to round out stretch goals. - **Dependencies already completed:** S-010 (Git publishing infrastructure), S-017 (entrypoint detection groundwork) - **Constraints:** - FastAPI service must expose endpoints for init/update/dry-run with authentication disabled by default but ready for future hardening hooks. - llama.cpp adapter should mirror `LLMRunner` interface and enforce local execution paths. - Tree-sitter integration limited to supported languages (Python/Java/TypeScript) with graceful degradation when parsers unavailable. - **Non-Goals:** Production",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#4",
      "vector": {
        "with": 0.21594472522460836,
        "authentication": 0.07198157507486945,
        "disabled": 0.07198157507486945,
        "by": 0.1439631501497389,
        "default": 0.07198157507486945,
        "but": 0.07198157507486945,
        "ready": 0.07198157507486945,
        "for": 0.1439631501497389,
        "future": 0.07198157507486945,
        "hardening": 0.07198157507486945,
        "hooks": 0.07198157507486945,
        "llama": 0.1439631501497389,
        "cpp": 0.1439631501497389,
        "adapter": 0.1439631501497389,
        "should": 0.07198157507486945,
        "mirror": 0.07198157507486945,
        "llmrunner": 0.07198157507486945,
        "interface": 0.07198157507486945,
        "and": 0.4318894504492167,
        "enforce": 0.07198157507486945,
        "local": 0.07198157507486945,
        "execution": 0.07198157507486945,
        "paths": 0.07198157507486945,
        "tree": 0.1439631501497389,
        "sitter": 0.1439631501497389,
        "integration": 0.07198157507486945,
        "limited": 0.07198157507486945,
        "to": 0.1439631501497389,
        "supported": 0.07198157507486945,
        "languages": 0.07198157507486945,
        "python": 0.07198157507486945,
        "java": 0.07198157507486945,
        "typescript": 0.07198157507486945,
        "graceful": 0.07198157507486945,
        "degradation": 0.07198157507486945,
        "when": 0.07198157507486945,
        "parsers": 0.07198157507486945,
        "unavailable": 0.07198157507486945,
        "non": 0.07198157507486945,
        "goals": 0.1439631501497389,
        "production": 0.07198157507486945,
        "deployment": 0.07198157507486945,
        "tooling": 0.07198157507486945,
        "or": 0.07198157507486945,
        "advanced": 0.07198157507486945,
        "queueing": 0.07198157507486945,
        "acceptance": 0.07198157507486945,
        "criteria": 0.07198157507486945,
        "service": 0.1439631501497389,
        "mode": 0.07198157507486945,
        "passes": 0.07198157507486945,
        "end": 0.1439631501497389,
        "tests": 0.21594472522460836,
        "invoking": 0.07198157507486945,
        "fastapi": 0.07198157507486945,
        "routes": 0.07198157507486945,
        "reusing": 0.07198157507486945,
        "orchestrator": 0.07198157507486945,
        "logic": 0.07198157507486945,
        "covered": 0.07198157507486945,
        "unit": 0.07198157507486945,
        "simulating": 0.07198157507486945,
        "cli": 0.07198157507486945,
        "shared": 0.07198157507486945,
        "configuration": 0.07198157507486945,
        "analyzer": 0.07198157507486945,
        "enriches": 0.07198157507486945,
        "signals": 0.07198157507486945,
        "symbol": 0.07198157507486945,
        "metadata": 0.07198157507486945,
        "associated": 0.07198157507486945,
        "validate": 0.07198157507486945,
        "extraction": 0.07198157507486945,
        "on": 0.07198157507486945,
        "fixtures": 0.07198157507486945,
        "updated": 0.07198157507486945,
        "documentation": 0.07198157507486945,
        "usage": 0.07198157507486945,
        "extended": 0.07198157507486945,
        "runtimes": 0.07198157507486945,
        "in": 0.1439631501497389,
        "docs": 0.07198157507486945,
        "spec": 0.1439631501497389,
        "md": 0.07198157507486945,
        "next": 0.07198157507486945,
        "actions": 0.07198157507486945,
        "execute": 0.07198157507486945,
        "the": 0.07198157507486945,
        "stories": 0.07198157507486945,
        "above": 0.07198157507486945,
        "sequentially": 0.07198157507486945,
        "upon": 0.07198157507486945,
        "completion": 0.07198157507486945,
        "reassess": 0.07198157507486945,
        "remaining": 0.07198157507486945,
        "stretch": 0.07198157507486945,
        "knowledge": 0.07198157507486945,
        "graph": 0.07198157507486945,
        "secret": 0.07198157507486945,
        "scanning": 0.07198157507486945,
        "if": 0.07198157507486945,
        "still": 0.07198157507486945,
        "scope": 0.07198157507486945
      },
      "text": "with authentication disabled by default but ready for future hardening hooks. - llama.cpp adapter should mirror `LLMRunner` interface and enforce local execution paths. - Tree-sitter integration limited to supported languages (Python/Java/TypeScript) with graceful degradation when parsers unavailable. - **Non-Goals:** Production deployment tooling or advanced queueing. - **Acceptance Criteria:** - Service mode passes end-to-end tests invoking FastAPI routes and reusing orchestrator logic. - llama.cpp adapter covered by unit tests simulating CLI and shared configuration. - Tree-sitter analyzer enriches signals with symbol metadata and associated tests validate extraction on fixtures. - Updated documentation for service usage and extended runtimes in `docs/` and `spec/spec.md`. --- **Next Actions:** Execute the stories above sequentially; upon completion reassess remaining stretch goals (knowledge graph, secret scanning) if still in scope.",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/prompt_template.md#0",
      "vector": {
        "below": 0.09417632186960222,
        "is": 0.09417632186960222,
        "a": 0.18835264373920443,
        "drop": 0.04708816093480111,
        "in": 0.18835264373920443,
        "prompt": 0.09417632186960222,
        "template": 0.09417632186960222,
        "you": 0.14126448280440332,
        "can": 0.04708816093480111,
        "reuse": 0.04708816093480111,
        "for": 0.18835264373920443,
        "each": 0.04708816093480111,
        "single": 0.09417632186960222,
        "story": 0.5179697702828122,
        "s": 0.18835264373920443,
        "001": 0.09417632186960222,
        "044": 0.04708816093480111,
        "followed": 0.04708816093480111,
        "by": 0.04708816093480111,
        "two": 0.04708816093480111,
        "filled": 0.04708816093480111,
        "examples": 0.04708816093480111,
        "and": 0.18835264373920443,
        "016": 0.04708816093480111,
        "one": 0.04708816093480111,
        "at": 0.09417632186960222,
        "time": 0.04708816093480111,
        "implementation": 0.04708816093480111,
        "use": 0.09417632186960222,
        "this": 0.09417632186960222,
        "exact": 0.04708816093480111,
        "structure": 0.04708816093480111,
        "every": 0.04708816093480111,
        "replace": 0.04708816093480111,
        "placeholders": 0.04708816093480111,
        "with": 0.04708816093480111,
        "your": 0.04708816093480111,
        "specifics": 0.04708816093480111,
        "before": 0.04708816093480111,
        "sending": 0.04708816093480111,
        "system": 0.04708816093480111,
        "role": 0.04708816093480111,
        "are": 0.04708816093480111,
        "principal": 0.04708816093480111,
        "python": 0.14126448280440332,
        "engineer": 0.04708816093480111,
        "implementing": 0.04708816093480111,
        "tightly": 0.04708816093480111,
        "scoped": 0.04708816093480111,
        "an": 0.04708816093480111,
        "existing": 0.04708816093480111,
        "repository": 0.04708816093480111,
        "must": 0.04708816093480111,
        "implement": 0.04708816093480111,
        "only": 0.04708816093480111,
        "the": 0.14126448280440332,
        "no": 0.14126448280440332,
        "scope": 0.04708816093480111,
        "drift": 0.04708816093480111,
        "future": 0.04708816093480111,
        "stories": 0.04708816093480111,
        "produce": 0.04708816093480111,
        "production": 0.04708816093480111,
        "grade": 0.04708816093480111,
        "cross": 0.04708816093480111,
        "platform": 0.04708816093480111,
        "code": 0.09417632186960222,
        "windows": 0.04708816093480111,
        "macos": 0.04708816093480111,
        "3": 0.09417632186960222,
        "11": 0.09417632186960222,
        "follow": 0.04708816093480111,
        "repo": 0.04708816093480111,
        "conventions": 0.04708816093480111,
        "poetry": 0.09417632186960222,
        "ruff": 0.09417632186960222,
        "black": 0.09417632186960222,
        "mypy": 0.09417632186960222,
        "strict": 0.09417632186960222,
        "pytest": 0.14126448280440332,
        "logging": 0.04708816093480111,
        "prints": 0.04708816093480111,
        "library": 0.04708816093480111,
        "type": 0.04708816093480111,
        "hints": 0.04708816093480111,
        "everywhere": 0.04708816093480111,
        "keep": 0.04708816093480111,
        "audio": 0.09417632186960222,
        "callbacks": 0.04708816093480111,
        "non": 0.09417632186960222,
        "blocking": 0.04708816093480111,
        "prefer": 0.04708816093480111,
        "ring": 0.04708816093480111,
        "buffers": 0.04708816093480111,
        "preallocated": 0.04708816093480111,
        "arrays": 0.04708816093480111,
        "avoid": 0.04708816093480111,
        "os": 0.04708816093480111,
        "specific": 0.04708816093480111,
        "imports": 0.04708816093480111,
        "module": 0.04708816093480111,
        "top": 0.04708816093480111,
        "level": 0.04708816093480111,
        "when": 0.04708816093480111,
        "something": 0.04708816093480111,
        "ambiguous": 0.04708816093480111,
        "make": 0.04708816093480111,
        "smallest": 0.04708816093480111,
        "reasonable": 0.04708816093480111,
        "assumption": 0.04708816093480111,
        "state": 0.04708816093480111,
        "it": 0.04708816093480111,
        "assumptions": 0.04708816093480111,
        "section": 0.04708816093480111,
        "proceed": 0.04708816093480111,
        "context": 0.04708816093480111,
        "id": 0.04708816093480111,
        "story_id": 0.04708816093480111,
        "title": 0.04708816093480111,
        "story_title": 0.04708816093480111,
        "text": 0.04708816093480111,
        "story_text": 0.04708816093480111,
        "dependencies": 0.04708816093480111,
        "already": 0.04708816093480111,
        "completed": 0.04708816093480111,
        "dependencies_list_or_none": 0.04708816093480111,
        "constraints": 0.04708816093480111,
        "from": 0.04708816093480111,
        "prd": 0.04708816093480111,
        "backlog": 0.04708816093480111,
        "key_constraints": 0.04708816093480111,
        "goals": 0.04708816093480111,
        "non_goals": 0.04708816093480111,
        "environment": 0.04708816093480111,
        "tooling": 0.04708816093480111,
        "fixed": 0.04708816093480111,
        "package": 0.04708816093480111,
        "manager": 0.04708816093480111,
        "linters": 0.04708816093480111,
        "formatters": 0.04708816093480111,
        "static": 0.04708816093480111,
        "typing": 0.04708816093480111,
        "tests": 0.04708816093480111,
        "cov": 0.04708816093480111,
        "ui": 0.04708816093480111,
        "pyside6": 0.04708816093480111,
        "if": 0.09417632186960222,
        "relevant": 0.09417632186960222,
        "to": 0.04708816093480111,
        "i": 0.04708816093480111,
        "o": 0.04708816093480111,
        "sounddevice": 0.04708816093480111,
        "portaudio": 0.04708816093480111
      },
      "text": "Below is a **drop\u2011in prompt template** you can reuse for **each single story (S\u2011001 \u2192 S\u2011044)**, followed by **two filled examples** (for S\u2011001 and S\u2011016). --- ## \ud83d\udd27 One\u2011Story\u2011At\u2011A\u2011Time Implementation Prompt (Template) > **Use this exact structure for every story.** Replace `{{\u2026}}` placeholders with your specifics before sending. --- **SYSTEM / ROLE** You are a **Principal Python engineer** implementing a single, tightly scoped story in an existing repository. You must: * Implement **only the story below** (no scope drift, no future stories). * Produce production\u2011grade, cross\u2011platform code (Windows/macOS), Python 3.11. * Follow repo conventions: Poetry, ruff, black, mypy (strict), pytest. * Use logging (no prints) in library code, and type hints everywhere. * Keep audio callbacks non\u2011blocking; prefer ring buffers and preallocated arrays. * Avoid OS\u2011specific imports at module top level. * When something is ambiguous, **make the smallest reasonable assumption**, state it in the *Assumptions* section, and proceed. --- ### Story Context * **Story ID:** {{STORY_ID}} * **Story Title:** {{STORY_TITLE}} * **Story Text:** {{STORY_TEXT}} * **Dependencies already completed:** {{DEPENDENCIES_LIST_OR_NONE}} * **Constraints from PRD/backlog:** {{KEY_CONSTRAINTS}} * **Non\u2011Goals for this story:** {{NON_GOALS}} ### Environment & Tooling (fixed) * **Python:** 3.11 * **Package manager:** Poetry * **Linters/formatters:** ruff, black * **Static typing:** mypy (strict) * **Tests:** pytest + pytest\u2011cov * **UI:** PySide6 (if relevant to story) * **Audio I/O:** sounddevice/PortAudio (if relevant)",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#1",
      "vector": {
        "non_goals": 0.05581455721859476,
        "environment": 0.05581455721859476,
        "tooling": 0.05581455721859476,
        "fixed": 0.05581455721859476,
        "python": 0.16744367165578428,
        "3": 0.11162911443718952,
        "11": 0.05581455721859476,
        "package": 0.05581455721859476,
        "manager": 0.05581455721859476,
        "poetry": 0.05581455721859476,
        "linters": 0.05581455721859476,
        "formatters": 0.05581455721859476,
        "ruff": 0.11162911443718952,
        "black": 0.11162911443718952,
        "static": 0.05581455721859476,
        "typing": 0.05581455721859476,
        "mypy": 0.11162911443718952,
        "strict": 0.05581455721859476,
        "tests": 0.11162911443718952,
        "pytest": 0.16744367165578428,
        "cov": 0.05581455721859476,
        "ui": 0.05581455721859476,
        "pyside6": 0.05581455721859476,
        "if": 0.2790727860929738,
        "relevant": 0.2790727860929738,
        "to": 0.16744367165578428,
        "story": 0.05581455721859476,
        "audio": 0.05581455721859476,
        "i": 0.11162911443718952,
        "o": 0.05581455721859476,
        "sounddevice": 0.05581455721859476,
        "portaudio": 0.05581455721859476,
        "ml": 0.05581455721859476,
        "runtime": 0.05581455721859476,
        "onnxruntime": 0.05581455721859476,
        "current": 0.05581455721859476,
        "repository": 0.05581455721859476,
        "snapshot": 0.05581455721859476,
        "paste": 0.11162911443718952,
        "fresh": 0.05581455721859476,
        "snapshots": 0.05581455721859476,
        "so": 0.05581455721859476,
        "the": 0.11162911443718952,
        "model": 0.05581455721859476,
        "does": 0.05581455721859476,
        "not": 0.05581455721859476,
        "hallucinate": 0.05581455721859476,
        "keep": 0.05581455721859476,
        "these": 0.05581455721859476,
        "short": 0.11162911443718952,
        "but": 0.05581455721859476,
        "sufficient": 0.05581455721859476,
        "root": 0.05581455721859476,
        "tree": 0.11162911443718952,
        "a": 0.05581455721859476,
        "git": 0.11162911443718952,
        "or": 0.11162911443718952,
        "ls": 0.05581455721859476,
        "files": 0.22325822887437904,
        "repo_tree": 0.05581455721859476,
        "key": 0.05581455721859476,
        "only": 0.05581455721859476,
        "sections": 0.11162911443718952,
        "path": 0.11162911443718952,
        "file1": 0.05581455721859476,
        "file1_relevant_snippet": 0.05581455721859476,
        "file2": 0.05581455721859476,
        "file2_relevant_snippet": 0.05581455721859476,
        "pinned": 0.05581455721859476,
        "pyproject": 0.05581455721859476,
        "toml": 0.11162911443718952,
        "parts": 0.05581455721859476,
        "pyproject_snippet": 0.05581455721859476,
        "acceptance": 0.05581455721859476,
        "criteria": 0.05581455721859476,
        "definition": 0.05581455721859476,
        "of": 0.16744367165578428,
        "done": 0.05581455721859476,
        "functional": 0.05581455721859476,
        "functional_doc": 0.05581455721859476,
        "quality": 0.05581455721859476,
        "pass": 0.05581455721859476,
        "passes": 0.05581455721859476,
        "with": 0.11162911443718952,
        "90": 0.05581455721859476,
        "coverage": 0.05581455721859476,
        "for": 0.05581455721859476,
        "new": 0.05581455721859476,
        "code": 0.05581455721859476,
        "cross": 0.05581455721859476,
        "platform": 0.05581455721859476,
        "no": 0.11162911443718952,
        "os": 0.05581455721859476,
        "specific": 0.05581455721859476,
        "breakage": 0.05581455721859476,
        "guarded": 0.05581455721859476,
        "imports": 0.05581455721859476,
        "where": 0.05581455721859476,
        "needed": 0.05581455721859476,
        "performance": 0.05581455721859476,
        "applicable": 0.05581455721859476,
        "perf_requirements": 0.05581455721859476,
        "docs": 0.11162911443718952,
        "inline": 0.05581455721859476,
        "docstrings": 0.05581455721859476,
        "readme": 0.05581455721859476,
        "module": 0.05581455721859476,
        "level": 0.05581455721859476,
        "updated": 0.05581455721859476,
        "user": 0.05581455721859476,
        "facing": 0.05581455721859476,
        "unrelated": 0.05581455721859476,
        "refactors": 0.05581455721859476,
        "minimal": 0.05581455721859476,
        "diff": 0.05581455721859476,
        "outside": 0.05581455721859476,
        "touched": 0.05581455721859476,
        "scope": 0.05581455721859476,
        "deliverables": 0.05581455721859476,
        "output": 0.05581455721859476,
        "contract": 0.05581455721859476,
        "return": 0.05581455721859476,
        "following": 0.05581455721859476,
        "in": 0.05581455721859476,
        "order": 0.05581455721859476,
        "exact": 0.11162911443718952,
        "headings": 0.05581455721859476,
        "1": 0.05581455721859476,
        "assumptions": 0.11162911443718952,
        "decisions": 0.05581455721859476,
        "bullet": 0.05581455721859476,
        "list": 0.05581455721859476,
        "any": 0.05581455721859476,
        "reasonable": 0.05581455721859476,
        "you": 0.11162911443718952,
        "made": 0.05581455721859476,
        "2": 0.05581455721859476,
        "planned": 0.05581455721859476,
        "changes": 0.05581455721859476,
        "tl": 0.05581455721859476,
        "dr": 0.05581455721859476,
        "summary": 0.05581455721859476,
        "what": 0.05581455721859476,
        "will": 0.05581455721859476,
        "add": 0.05581455721859476,
        "modify": 0.05581455721859476,
        "and": 0.11162911443718952,
        "why": 0.05581455721859476,
        "full": 0.05581455721859476,
        "test": 0.05581455721859476,
        "covering": 0.05581455721859476,
        "success": 0.05581455721859476,
        "edge": 0.05581455721859476,
        "cases": 0.05581455721859476,
        "error": 0.05581455721859476,
        "paths": 0.05581455721859476,
        "4": 0.05581455721859476,
        "validation": 0.05581455721859476,
        "steps": 0.05581455721859476,
        "local": 0.05581455721859476
      },
      "text": "{{NON_GOALS}} ### Environment & Tooling (fixed) * **Python:** 3.11 * **Package manager:** Poetry * **Linters/formatters:** ruff, black * **Static typing:** mypy (strict) * **Tests:** pytest + pytest\u2011cov * **UI:** PySide6 (if relevant to story) * **Audio I/O:** sounddevice/PortAudio (if relevant) * **ML runtime:** onnxruntime (if relevant) ### Current Repository Snapshot > Paste fresh snapshots so the model does not hallucinate. Keep these short but sufficient. * **Root tree (`tree -a -I .git` or `git ls-files`):** ``` {{REPO_TREE}} ``` * **Key files (paste only relevant sections):** * `{{PATH/TO/FILE1}}` ```python {{FILE1_RELEVANT_SNIPPET}} ``` * `{{PATH/TO/FILE2}}` ```python {{FILE2_RELEVANT_SNIPPET}} ``` * **Pinned pyproject.toml (relevant parts):** ```toml {{PYPROJECT_SNIPPET}} ``` ### Acceptance Criteria (Definition of Done) * Functional: {{FUNCTIONAL_DOC}} * Quality: **ruff/black/mypy** pass; **pytest** passes with **\u2265 90%** coverage for new code. * Cross\u2011platform: No OS\u2011specific breakage; guarded imports where needed. * Performance (if applicable): {{PERF_REQUIREMENTS}} * Docs: Inline docstrings; README or module\u2011level docs updated if user\u2011facing. * No unrelated refactors; minimal diff outside touched scope. ### Deliverables \u2014 **Output Contract** Return the following sections **in order**, with exact headings: 1. **Assumptions & Decisions** \u2013 bullet list of any reasonable assumptions you made. 2. **Planned Changes (TL;DR)** \u2013 short summary of what files you will add/modify and why. 3. **Tests** \u2013 full test files covering success, edge cases, and error paths. 4. **Validation Steps (Local)** \u2013 exact",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#2",
      "vector": {
        "of": 0.1487044791289829,
        "any": 0.04956815970966096,
        "reasonable": 0.04956815970966096,
        "assumptions": 0.04956815970966096,
        "you": 0.09913631941932192,
        "made": 0.04956815970966096,
        "2": 0.04956815970966096,
        "planned": 0.04956815970966096,
        "changes": 0.04956815970966096,
        "tl": 0.04956815970966096,
        "dr": 0.04956815970966096,
        "short": 0.04956815970966096,
        "summary": 0.04956815970966096,
        "what": 0.04956815970966096,
        "files": 0.1487044791289829,
        "will": 0.04956815970966096,
        "add": 0.04956815970966096,
        "modify": 0.04956815970966096,
        "and": 0.3965452776772877,
        "why": 0.04956815970966096,
        "3": 0.04956815970966096,
        "tests": 0.04956815970966096,
        "full": 0.04956815970966096,
        "test": 0.09913631941932192,
        "covering": 0.04956815970966096,
        "success": 0.04956815970966096,
        "edge": 0.04956815970966096,
        "cases": 0.04956815970966096,
        "error": 0.04956815970966096,
        "paths": 0.04956815970966096,
        "4": 0.04956815970966096,
        "validation": 0.04956815970966096,
        "steps": 0.04956815970966096,
        "local": 0.04956815970966096,
        "exact": 0.04956815970966096,
        "commands": 0.04956815970966096,
        "to": 0.09913631941932192,
        "run": 0.04956815970966096,
        "poetry": 0.04956815970966096,
        "install": 0.04956815970966096,
        "lint": 0.04956815970966096,
        "type": 0.04956815970966096,
        "expected": 0.04956815970966096,
        "outputs": 0.04956815970966096,
        "5": 0.04956815970966096,
        "conventional": 0.04956815970966096,
        "commit": 0.09913631941932192,
        "message": 0.09913631941932192,
        "a": 0.24784079854830482,
        "single": 0.04956815970966096,
        "with": 0.09913631941932192,
        "the": 0.24784079854830482,
        "story": 0.24784079854830482,
        "description": 0.04956815970966096,
        "ex": 0.04956815970966096,
        "s": 0.1487044791289829,
        "001": 0.1487044791289829,
        "implemented": 0.04956815970966096,
        "get": 0.04956815970966096,
        "customers": 0.04956815970966096,
        "endpoint": 0.04956815970966096,
        "implementation": 0.04956815970966096,
        "hints": 0.04956815970966096,
        "if": 0.1487044791289829,
        "helpful": 0.04956815970966096,
        "keep": 0.04956815970966096,
        "per": 0.04956815970966096,
        "frame": 0.04956815970966096,
        "allocations": 0.04956815970966096,
        "near": 0.04956815970966096,
        "zero": 0.04956815970966096,
        "in": 0.19827263883864385,
        "audio": 0.04956815970966096,
        "callbacks": 0.04956815970966096,
        "use": 0.04956815970966096,
        "dependency": 0.04956815970966096,
        "inversion": 0.04956815970966096,
        "define": 0.04956815970966096,
        "clear": 0.04956815970966096,
        "interfaces": 0.04956815970966096,
        "core": 0.1487044791289829,
        "or": 0.1487044791289829,
        "ml": 0.04956815970966096,
        "where": 0.04956815970966096,
        "specified": 0.04956815970966096,
        "backlog": 0.04956815970966096,
        "an": 0.04956815970966096,
        "external": 0.04956815970966096,
        "binary": 0.04956815970966096,
        "model": 0.04956815970966096,
        "is": 0.04956815970966096,
        "out": 0.04956815970966096,
        "scope": 0.04956815970966096,
        "for": 0.04956815970966096,
        "this": 0.09913631941932192,
        "provide": 0.04956815970966096,
        "deterministic": 0.04956815970966096,
        "stub": 0.04956815970966096,
        "todo": 0.04956815970966096,
        "feature": 0.04956815970966096,
        "flag": 0.04956815970966096,
        "important": 0.04956815970966096,
        "guardrails": 0.04956815970966096,
        "do": 0.1487044791289829,
        "not": 0.1487044791289829,
        "implement": 0.04956815970966096,
        "future": 0.04956815970966096,
        "stories": 0.04956815970966096,
        "introduce": 0.04956815970966096,
        "new": 0.04956815970966096,
        "dependencies": 0.04956815970966096,
        "without": 0.04956815970966096,
        "updating": 0.04956815970966096,
        "pyproject": 0.04956815970966096,
        "toml": 0.04956815970966096,
        "justifying": 0.04956815970966096,
        "them": 0.04956815970966096,
        "change": 0.04956815970966096,
        "licensing": 0.04956815970966096,
        "repo": 0.04956815970966096,
        "name": 0.04956815970966096,
        "ci": 0.04956815970966096,
        "workflows": 0.04956815970966096,
        "unless": 0.04956815970966096,
        "explicitly": 0.04956815970966096,
        "requested": 0.04956815970966096,
        "output": 0.04956815970966096,
        "would": 0.04956815970966096,
        "exceed": 0.04956815970966096,
        "limits": 0.04956815970966096,
        "split": 0.04956815970966096,
        "patch": 0.04956815970966096,
        "file": 0.04956815970966096,
        "contents": 0.04956815970966096,
        "by": 0.04956815970966096,
        "directory": 0.04956815970966096,
        "but": 0.04956815970966096,
        "still": 0.04956815970966096,
        "include": 0.04956815970966096,
        "all": 0.04956815970966096,
        "required": 0.04956815970966096,
        "example": 0.04956815970966096,
        "instantiation": 0.04956815970966096,
        "1": 0.04956815970966096,
        "initialize": 0.09913631941932192,
        "repository": 0.09913631941932192,
        "metadata": 0.04956815970966096,
        "copy": 0.04956815970966096,
        "adjust": 0.04956815970966096,
        "paste": 0.04956815970966096,
        "following": 0.04956815970966096,
        "as": 0.04956815970966096,
        "real": 0.04956815970966096,
        "prompt": 0.04956815970966096,
        "your": 0.04956815970966096,
        "llm": 0.04956815970966096,
        "id": 0.04956815970966096,
        "title": 0.04956815970966096
      },
      "text": "of any reasonable assumptions you made. 2. **Planned Changes (TL;DR)** \u2013 short summary of what files you will add/modify and why. 3. **Tests** \u2013 full test files covering success, edge cases, and error paths. 4. **Validation Steps (Local)** \u2013 exact commands to run (Poetry install, lint, type, test) and expected outputs. 5. **Conventional Commit Message** \u2013 a single commit with the story and a description, ex: \"S-001: Implemented the GET customers endpoint\" ### Implementation Hints (if helpful) * Keep per\u2011frame allocations near zero in audio callbacks. * Use dependency inversion: define clear interfaces in `core/` or `ml/` where specified in the backlog. * If an external binary or model is out of scope for this story, provide a deterministic stub with TODO and a feature flag. ### Important Guardrails * **Do not** implement future stories. * **Do not** introduce new dependencies without updating `pyproject.toml` and justifying them. * **Do not** change licensing, repo name, or CI workflows unless explicitly requested in this story. * If output would exceed message limits, **split the Patch and File Contents by directory** but still include all required files. --- ## \u2705 Example Instantiation #1 \u2014 S\u2011001 (Initialize repository & core metadata) > Copy, adjust, and paste the following as a real prompt to your LLM. **Story ID:** S\u2011001 **Story Title:** Initialize repository & core",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#3",
      "vector": {
        "include": 0.09611386626644254,
        "all": 0.04805693313322127,
        "required": 0.04805693313322127,
        "files": 0.04805693313322127,
        "example": 0.09611386626644254,
        "instantiation": 0.09611386626644254,
        "1": 0.09611386626644254,
        "s": 0.19222773253288508,
        "001": 0.09611386626644254,
        "initialize": 0.09611386626644254,
        "repository": 0.14417079939966382,
        "core": 0.09611386626644254,
        "metadata": 0.14417079939966382,
        "copy": 0.04805693313322127,
        "adjust": 0.04805693313322127,
        "and": 0.09611386626644254,
        "paste": 0.09611386626644254,
        "the": 0.19222773253288508,
        "following": 0.04805693313322127,
        "as": 0.09611386626644254,
        "a": 0.04805693313322127,
        "real": 0.04805693313322127,
        "prompt": 0.04805693313322127,
        "to": 0.04805693313322127,
        "your": 0.04805693313322127,
        "llm": 0.04805693313322127,
        "story": 0.28834159879932764,
        "id": 0.09611386626644254,
        "title": 0.09611386626644254,
        "text": 0.09611386626644254,
        "create": 0.04805693313322127,
        "poetry": 0.19222773253288508,
        "project": 0.09611386626644254,
        "voice": 0.09611386626644254,
        "xform": 0.09611386626644254,
        "add": 0.14417079939966382,
        "license": 0.04805693313322127,
        "apache": 0.04805693313322127,
        "2": 0.09611386626644254,
        "0": 0.14417079939966382,
        "readme": 0.14417079939966382,
        "with": 0.04805693313322127,
        "purpose": 0.09611386626644254,
        "install": 0.14417079939966382,
        "quickstart": 0.09611386626644254,
        "contributing": 0.04805693313322127,
        "editorconfig": 0.04805693313322127,
        "gitattributes": 0.04805693313322127,
        "gitignore": 0.09611386626644254,
        "pyproject": 0.09611386626644254,
        "toml": 0.09611386626644254,
        "python": 0.24028466566610635,
        "3": 0.14417079939966382,
        "11": 0.14417079939966382,
        "dependencies": 0.04805693313322127,
        "already": 0.04805693313322127,
        "completed": 0.04805693313322127,
        "none": 0.04805693313322127,
        "constraints": 0.04805693313322127,
        "use": 0.09611386626644254,
        "repo": 0.04805693313322127,
        "name": 0.09611386626644254,
        "keep": 0.09611386626644254,
        "docs": 0.04805693313322127,
        "concise": 0.04805693313322127,
        "but": 0.04805693313322127,
        "actionable": 0.04805693313322127,
        "non": 0.04805693313322127,
        "goals": 0.04805693313322127,
        "no": 0.14417079939966382,
        "code": 0.04805693313322127,
        "beyond": 0.04805693313322127,
        "scaffolding": 0.04805693313322127,
        "ci": 0.09611386626644254,
        "package": 0.04805693313322127,
        "layout": 0.04805693313322127,
        "yet": 0.09611386626644254,
        "current": 0.04805693313322127,
        "snapshot": 0.04805693313322127,
        "empty": 0.09611386626644254,
        "directory": 0.04805693313322127,
        "acceptance": 0.04805693313322127,
        "criteria": 0.04805693313322127,
        "definition": 0.04805693313322127,
        "of": 0.04805693313322127,
        "done": 0.04805693313322127,
        "succeeds": 0.04805693313322127,
        "on": 0.04805693313322127,
        "macos": 0.09611386626644254,
        "windows": 0.09611386626644254,
        "md": 0.04805693313322127,
        "includes": 0.04805693313322127,
        "instructions": 0.04805693313322127,
        "placeholder": 0.04805693313322127,
        "running": 0.04805693313322127,
        "run": 0.04805693313322127,
        "v": 0.04805693313322127,
        "prints": 0.04805693313322127,
        "x": 0.04805693313322127,
        "deliverables": 0.09611386626644254,
        "output": 0.04805693313322127,
        "contract": 0.04805693313322127,
        "then": 0.04805693313322127,
        "list": 0.04805693313322127,
        "from": 0.04805693313322127,
        "template": 0.04805693313322127,
        "implementation": 0.04805693313322127,
        "hints": 0.04805693313322127,
        "standard": 0.04805693313322127,
        "for": 0.04805693313322127,
        "version": 0.04805693313322127,
        "authors": 0.04805693313322127,
        "in": 0.04805693313322127,
        "important": 0.04805693313322127,
        "guardrails": 0.04805693313322127,
        "do": 0.04805693313322127,
        "not": 0.04805693313322127,
        "or": 0.04805693313322127,
        "tests": 0.04805693313322127,
        "succinct": 0.04805693313322127,
        "section": 0.04805693313322127,
        "headers": 0.04805693313322127,
        "placeholders": 0.04805693313322127,
        "016": 0.09611386626644254,
        "model": 0.09611386626644254,
        "registry": 0.09611386626644254,
        "provider": 0.09611386626644254,
        "detection": 0.09611386626644254,
        "implement": 0.04805693313322127,
        "ml": 0.04805693313322127,
        "runtime": 0.14417079939966382,
        "onnx_loader": 0.04805693313322127,
        "py": 0.04805693313322127,
        "that": 0.04805693313322127,
        "chooses": 0.04805693313322127,
        "best": 0.04805693313322127,
        "onnx": 0.04805693313322127,
        "ep": 0.04805693313322127,
        "at": 0.04805693313322127,
        "tensorrt": 0.04805693313322127,
        "directml": 0.04805693313322127
      },
      "text": "include all required files. --- ## \u2705 Example Instantiation #1 \u2014 S\u2011001 (Initialize repository & core metadata) > Copy, adjust, and paste the following as a real prompt to your LLM. **Story ID:** S\u2011001 **Story Title:** Initialize repository & core metadata **Story Text:** Create Poetry project `voice-xform`; add LICENSE (Apache\u20112.0), README with purpose/install/quickstart, CONTRIBUTING, .editorconfig, .gitattributes, .gitignore, pyproject.toml (Python 3.11). **Dependencies already completed:** none **Constraints:** Use Poetry; repo name `voice-xform`; Python 3.11; keep docs concise but actionable. **Non\u2011Goals:** No code beyond scaffolding; no CI; no package layout yet. **Current Repository Snapshot** *(empty directory)* ``` (Empty) ``` **Acceptance Criteria (Definition of Done)** * `poetry install` succeeds on macOS & Windows. * `README.md` includes purpose, install instructions, and placeholder quickstart. * Running `poetry run python -V` prints Python 3.11.x. **Deliverables \u2014 Output Contract** (then paste the **Deliverables** list from the template) **Implementation Hints** * Use standard `.gitignore` for Python + macOS + Windows. * Include project metadata (name, version `0.1.0`, authors) in `pyproject.toml`. **Important Guardrails** * Do not add CI or tests yet. * Keep README succinct; add section headers as placeholders. --- ## \u2705 Example Instantiation #2 \u2014 S\u2011016 (Model registry & provider detection) **Story ID:** S\u2011016 **Story Title:** Model registry & provider detection **Story Text:** Implement `ml/runtime/onnx_loader.py` that chooses the best ONNX Runtime EP at runtime (TensorRT > DirectML >",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#4",
      "vector": {
        "example": 0.045267873021259265,
        "instantiation": 0.045267873021259265,
        "2": 0.045267873021259265,
        "s": 0.22633936510629632,
        "016": 0.09053574604251853,
        "model": 0.18107149208503706,
        "registry": 0.18107149208503706,
        "provider": 0.18107149208503706,
        "detection": 0.09053574604251853,
        "story": 0.1358036190637778,
        "id": 0.045267873021259265,
        "title": 0.045267873021259265,
        "text": 0.045267873021259265,
        "implement": 0.09053574604251853,
        "ml": 0.1358036190637778,
        "runtime": 0.18107149208503706,
        "onnx_loader": 0.09053574604251853,
        "py": 0.2716072381275556,
        "that": 0.09053574604251853,
        "chooses": 0.045267873021259265,
        "the": 0.18107149208503706,
        "best": 0.045267873021259265,
        "onnx": 0.045267873021259265,
        "ep": 0.1358036190637778,
        "at": 0.09053574604251853,
        "tensorrt": 0.045267873021259265,
        "directml": 0.045267873021259265,
        "cpu": 0.09053574604251853,
        "mps": 0.045267873021259265,
        "coreml": 0.045267873021259265,
        "on": 0.22633936510629632,
        "macos": 0.1358036190637778,
        "for": 0.09053574604251853,
        "paths": 0.045267873021259265,
        "versioning": 0.045267873021259265,
        "provide": 0.045267873021259265,
        "tests": 0.1358036190637778,
        "monkeypatch": 0.09053574604251853,
        "availability": 0.1358036190637778,
        "dependencies": 0.09053574604251853,
        "already": 0.045267873021259265,
        "completed": 0.045267873021259265,
        "004": 0.045267873021259265,
        "package": 0.045267873021259265,
        "layout": 0.045267873021259265,
        "002": 0.045267873021259265,
        "tooling": 0.045267873021259265,
        "003": 0.045267873021259265,
        "ci": 0.045267873021259265,
        "constraints": 0.045267873021259265,
        "no": 0.18107149208503706,
        "gpu": 0.045267873021259265,
        "specific": 0.045267873021259265,
        "imports": 0.045267873021259265,
        "module": 0.045267873021259265,
        "top": 0.045267873021259265,
        "level": 0.045267873021259265,
        "log": 0.045267873021259265,
        "chosen": 0.045267873021259265,
        "and": 0.18107149208503706,
        "fallbacks": 0.045267873021259265,
        "non": 0.045267873021259265,
        "goals": 0.045267873021259265,
        "real": 0.045267873021259265,
        "files": 0.09053574604251853,
        "yet": 0.045267873021259265,
        "inference": 0.045267873021259265,
        "calls": 0.045267873021259265,
        "current": 0.045267873021259265,
        "repository": 0.045267873021259265,
        "snapshot": 0.045267873021259265,
        "voice": 0.09053574604251853,
        "xform": 0.09053574604251853,
        "app": 0.045267873021259265,
        "core": 0.045267873021259265,
        "version": 0.09053574604251853,
        "__init__": 0.09053574604251853,
        "empty": 0.045267873021259265,
        "placeholder": 0.045267873021259265,
        "pyproject": 0.09053574604251853,
        "toml": 0.1358036190637778,
        "key": 0.045267873021259265,
        "relevant": 0.045267873021259265,
        "parts": 0.045267873021259265,
        "tool": 0.09053574604251853,
        "poetry": 0.09053574604251853,
        "name": 0.045267873021259265,
        "0": 0.1358036190637778,
        "1": 0.09053574604251853,
        "python": 0.045267873021259265,
        "3": 0.045267873021259265,
        "11": 0.045267873021259265,
        "onnxruntime": 0.09053574604251853,
        "18": 0.045267873021259265,
        "acceptance": 0.045267873021259265,
        "criteria": 0.045267873021259265,
        "definition": 0.045267873021259265,
        "of": 0.045267873021259265,
        "done": 0.045267873021259265,
        "select_providers": 0.045267873021259265,
        "returns": 0.045267873021259265,
        "an": 0.045267873021259265,
        "ordered": 0.045267873021259265,
        "list": 0.1358036190637778,
        "based": 0.045267873021259265,
        "platform": 0.09053574604251853,
        "logs": 0.045267873021259265,
        "contain": 0.045267873021259265,
        "selected": 0.045267873021259265,
        "reason": 0.045267873021259265,
        "fallback": 0.045267873021259265,
        "simulate": 0.045267873021259265,
        "get_available_providers": 0.045267873021259265,
        "assert": 0.045267873021259265,
        "selection": 0.045267873021259265,
        "order": 0.045267873021259265,
        "across": 0.045267873021259265,
        "windows": 0.09053574604251853,
        "linux": 0.045267873021259265,
        "mypy": 0.045267873021259265,
        "ruff": 0.045267873021259265,
        "pytest": 0.045267873021259265,
        "pass": 0.045267873021259265,
        "deliverables": 0.09053574604251853,
        "output": 0.045267873021259265,
        "contract": 0.045267873021259265,
        "then": 0.045267873021259265,
        "paste": 0.045267873021259265,
        "from": 0.045267873021259265,
        "template": 0.045267873021259265,
        "implementation": 0.045267873021259265,
        "hints": 0.045267873021259265,
        "detect": 0.045267873021259265,
        "os": 0.045267873021259265,
        "with": 0.045267873021259265,
        "system": 0.045267873021259265,
        "prefer": 0.045267873021259265,
        "tensorrtexecutionprovider": 0.045267873021259265,
        "nvidia": 0.045267873021259265,
        "dmlexecutionprovider": 0.045267873021259265,
        "coremlexecutionprovider": 0.045267873021259265,
        "or": 0.045267873021259265,
        "mpsexecutionprovider": 0.045267873021259265,
        "else": 0.045267873021259265,
        "expose": 0.045267873021259265,
        "a": 0.045267873021259265,
        "helper": 0.045267873021259265,
        "create_session": 0.045267873021259265,
        "path": 0.045267873021259265,
        "str": 0.09053574604251853,
        "preferred": 0.045267873021259265,
        "none": 0.045267873021259265,
        "inferencesession": 0.045267873021259265,
        "important": 0.045267873021259265,
        "guardrails": 0.045267873021259265,
        "actual": 0.045267873021259265
      },
      "text": "--- ## \u2705 Example Instantiation #2 \u2014 S\u2011016 (Model registry & provider detection) **Story ID:** S\u2011016 **Story Title:** Model registry & provider detection **Story Text:** Implement `ml/runtime/onnx_loader.py` that chooses the best ONNX Runtime EP at runtime (TensorRT > DirectML > CPU; MPS/CoreML on macOS). Implement `ml/registry.py` for model paths/versioning. Provide tests that monkeypatch provider availability. **Dependencies already completed:** S\u2011004 (package layout), S\u2011002 (tooling), S\u2011003 (CI) **Constraints:** No GPU\u2011specific imports at module top level. Log chosen EP and fallbacks. **Non\u2011Goals:** No real model files yet; no inference calls. **Current Repository Snapshot** ``` voice-xform/ app/ core/ version.py ml/ __init__.py runtime/ __init__.py registry.py # (empty placeholder) tests/ pyproject.toml ``` **Key files:** `pyproject.toml` (relevant parts) ```toml [tool.poetry] name = \"voice-xform\" version = \"0.1.0\" [tool.poetry.dependencies] python = \"^3.11\" onnxruntime = \"^1.18.0\" ``` **Acceptance Criteria (Definition of Done)** * `onnx_loader.select_providers()` returns an ordered provider list based on platform and availability. * Logs contain the selected EP and reason for fallback. * Tests simulate availability (monkeypatch `onnxruntime.get_available_providers`) and assert selection order across Windows/macOS/Linux. * mypy/ruff/pytest pass. **Deliverables \u2014 Output Contract** (then paste the **Deliverables** list from the template) **Implementation Hints** * Detect OS with `platform.system()`. * Prefer `\"TensorrtExecutionProvider\"` on NVIDIA, `\"DmlExecutionProvider\"` on Windows, `\"CoreMLExecutionProvider\"` or `\"MPSExecutionProvider\"` on macOS, else CPU. * Expose a helper `create_session(path: str, preferred: list[str] | None) -> InferenceSession`. **Important Guardrails** * No actual",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#5",
      "vector": {
        "template": 0.08971226080325131,
        "implementation": 0.04485613040162566,
        "hints": 0.04485613040162566,
        "detect": 0.04485613040162566,
        "os": 0.04485613040162566,
        "with": 0.08971226080325131,
        "platform": 0.08971226080325131,
        "system": 0.08971226080325131,
        "prefer": 0.04485613040162566,
        "tensorrtexecutionprovider": 0.04485613040162566,
        "on": 0.17942452160650263,
        "nvidia": 0.04485613040162566,
        "dmlexecutionprovider": 0.04485613040162566,
        "windows": 0.08971226080325131,
        "coremlexecutionprovider": 0.04485613040162566,
        "or": 0.08971226080325131,
        "mpsexecutionprovider": 0.04485613040162566,
        "macos": 0.08971226080325131,
        "else": 0.04485613040162566,
        "cpu": 0.04485613040162566,
        "expose": 0.04485613040162566,
        "a": 0.26913678240975397,
        "helper": 0.04485613040162566,
        "create_session": 0.04485613040162566,
        "path": 0.04485613040162566,
        "str": 0.08971226080325131,
        "preferred": 0.04485613040162566,
        "list": 0.04485613040162566,
        "none": 0.04485613040162566,
        "inferencesession": 0.04485613040162566,
        "important": 0.04485613040162566,
        "guardrails": 0.04485613040162566,
        "no": 0.08971226080325131,
        "actual": 0.04485613040162566,
        "model": 0.04485613040162566,
        "downloads": 0.04485613040162566,
        "global": 0.04485613040162566,
        "provider": 0.04485613040162566,
        "checks": 0.08971226080325131,
        "at": 0.04485613040162566,
        "import": 0.04485613040162566,
        "time": 0.08971226080325131,
        "run": 0.17942452160650263,
        "inside": 0.04485613040162566,
        "functions": 0.04485613040162566,
        "verification": 0.04485613040162566,
        "checklist": 0.04485613040162566,
        "you": 0.13456839120487699,
        "this": 0.04485613040162566,
        "after": 0.04485613040162566,
        "each": 0.08971226080325131,
        "story": 0.26913678240975397,
        "locally": 0.04485613040162566,
        "and": 0.3139929128113796,
        "produce": 0.04485613040162566,
        "these": 0.04485613040162566,
        "commands": 0.04485613040162566,
        "in": 0.13456839120487699,
        "the": 0.4485613040162566,
        "validation": 0.04485613040162566,
        "steps": 0.04485613040162566,
        "section": 0.08971226080325131,
        "bash": 0.04485613040162566,
        "make": 0.04485613040162566,
        "all": 0.04485613040162566,
        "confirm": 0.04485613040162566,
        "tests": 0.08971226080325131,
        "pass": 0.04485613040162566,
        "coverage": 0.04485613040162566,
        "for": 0.13456839120487699,
        "new": 0.04485613040162566,
        "code": 0.04485613040162566,
        "95": 0.04485613040162566,
        "spot": 0.04485613040162566,
        "check": 0.04485613040162566,
        "specific": 0.04485613040162566,
        "issues": 0.08971226080325131,
        "if": 0.13456839120487699,
        "touches": 0.04485613040162566,
        "features": 0.04485613040162566,
        "command": 0.04485613040162566,
        "review": 0.08971226080325131,
        "do": 0.04485613040162566,
        "pr": 0.04485613040162566,
        "of": 0.04485613040162566,
        "diff": 0.04485613040162566,
        "fix": 0.04485613040162566,
        "any": 0.04485613040162566,
        "find": 0.04485613040162566,
        "tips": 0.04485613040162566,
        "working": 0.04485613040162566,
        "always": 0.04485613040162566,
        "update": 0.04485613040162566,
        "current": 0.04485613040162566,
        "repository": 0.04485613040162566,
        "snapshot": 0.04485613040162566,
        "before": 0.04485613040162566,
        "so": 0.04485613040162566,
        "llm": 0.08971226080325131,
        "is": 0.13456839120487699,
        "grounded": 0.04485613040162566,
        "reality": 0.04485613040162566,
        "keep": 0.04485613040162566,
        "acceptance": 0.08971226080325131,
        "criteria": 0.08971226080325131,
        "crisp": 0.04485613040162566,
        "testable": 0.04485613040162566,
        "output": 0.04485613040162566,
        "contract": 0.04485613040162566,
        "ensures": 0.04485613040162566,
        "get": 0.04485613040162566,
        "git": 0.04485613040162566,
        "apply": 0.04485613040162566,
        "able": 0.04485613040162566,
        "patch": 0.04485613040162566,
        "full": 0.04485613040162566,
        "file": 0.04485613040162566,
        "contents": 0.04485613040162566,
        "commit": 0.04485613040162566,
        "message": 0.04485613040162566,
        "every": 0.04485613040162566,
        "ui": 0.08971226080325131,
        "heavy": 0.04485613040162566,
        "add": 0.04485613040162566,
        "screenshots": 0.04485613040162566,
        "state": 0.04485613040162566,
        "diagrams": 0.04485613040162566,
        "to": 0.13456839120487699,
        "context": 0.04485613040162566,
        "steer": 0.04485613040162566,
        "layout": 0.04485613040162566,
        "naming": 0.04485613040162566,
        "performance": 0.04485613040162566,
        "sensitive": 0.04485613040162566,
        "put": 0.04485613040162566,
        "explicit": 0.04485613040162566,
        "budgets": 0.04485613040162566,
        "into": 0.04485613040162566,
        "ask": 0.04485613040162566,
        "print": 0.04485613040162566,
        "measured": 0.04485613040162566,
        "timings": 0.04485613040162566
      },
      "text": "template) **Implementation Hints** * Detect OS with `platform.system()`. * Prefer `\"TensorrtExecutionProvider\"` on NVIDIA, `\"DmlExecutionProvider\"` on Windows, `\"CoreMLExecutionProvider\"` or `\"MPSExecutionProvider\"` on macOS, else CPU. * Expose a helper `create_session(path: str, preferred: list[str] | None) -> InferenceSession`. **Important Guardrails** * No actual model downloads. * No global provider checks at import time; run checks inside functions. --- ## \ud83e\uddea Verification Checklist (You run this after each story) Run locally and produce these commands in the **Validation Steps** section: ```bash make all ``` * Confirm tests pass and coverage for new code \u2265 95%. * On Windows/macOS, spot\u2011check for platform\u2011specific issues if the story touches system features. * Run the command /review and do a PR review of the diff. Fix any issues you find. --- ## \ud83d\udcdd Tips for Working With the Template * Always **update the \u201cCurrent Repository Snapshot\u201d** before each story so the LLM is grounded in reality. * Keep **Acceptance Criteria** crisp and testable. * The **Output Contract** ensures you get a `git apply`\u2011able patch, full file contents, tests, and a commit message \u2014 every time. * If a story is UI\u2011heavy, add screenshots or UI state diagrams to the **Story Context** section to steer layout and naming. * If a story is performance\u2011sensitive, put explicit budgets into **Acceptance Criteria** and ask the LLM to print measured timings in",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#6",
      "vector": {
        "story": 0.3849001794597505,
        "is": 0.19245008972987526,
        "ui": 0.19245008972987526,
        "heavy": 0.09622504486493763,
        "add": 0.09622504486493763,
        "screenshots": 0.09622504486493763,
        "or": 0.09622504486493763,
        "state": 0.09622504486493763,
        "diagrams": 0.09622504486493763,
        "to": 0.28867513459481287,
        "the": 0.28867513459481287,
        "context": 0.19245008972987526,
        "section": 0.09622504486493763,
        "steer": 0.09622504486493763,
        "layout": 0.09622504486493763,
        "and": 0.28867513459481287,
        "naming": 0.09622504486493763,
        "if": 0.09622504486493763,
        "a": 0.09622504486493763,
        "performance": 0.09622504486493763,
        "sensitive": 0.09622504486493763,
        "put": 0.09622504486493763,
        "explicit": 0.09622504486493763,
        "budgets": 0.09622504486493763,
        "into": 0.09622504486493763,
        "acceptance": 0.19245008972987526,
        "criteria": 0.19245008972987526,
        "ask": 0.09622504486493763,
        "llm": 0.09622504486493763,
        "print": 0.09622504486493763,
        "measured": 0.09622504486493763,
        "timings": 0.09622504486493763,
        "in": 0.19245008972987526,
        "test": 0.09622504486493763,
        "logs": 0.09622504486493763,
        "use": 0.09622504486493763,
        "this": 0.09622504486493763,
        "template": 0.09622504486493763,
        "verbatim": 0.09622504486493763,
        "for": 0.09622504486493763,
        "s": 0.19245008972987526,
        "001": 0.09622504486493763,
        "through": 0.09622504486493763,
        "044": 0.09622504486493763,
        "by": 0.09622504486493763,
        "swapping": 0.09622504486493763,
        "relevant": 0.09622504486493763,
        "snapshot": 0.09622504486493763
      },
      "text": "story is UI\u2011heavy, add screenshots or UI state diagrams to the **Story Context** section to steer layout and naming. * If a story is performance\u2011sensitive, put explicit budgets into **Acceptance Criteria** and ask the LLM to print measured timings in test logs. --- Use this template verbatim for S\u2011001 through S\u2011044 by swapping in the relevant **Story Context**, **Snapshot**, and **Acceptance Criteria**.",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/spec.md#0",
      "vector": {
        "intelligent": 0.06696495301824251,
        "readme": 0.2008948590547275,
        "generator": 0.06696495301824251,
        "architecture": 0.13392990603648502,
        "spec": 0.06696495301824251,
        "python": 0.13392990603648502,
        "local": 0.2008948590547275,
        "llm": 0.2008948590547275,
        "1": 0.06696495301824251,
        "purpose": 0.06696495301824251,
        "scope": 0.06696495301824251,
        "build": 0.13392990603648502,
        "a": 0.3348247650912125,
        "based": 0.06696495301824251,
        "system": 0.06696495301824251,
        "that": 0.06696495301824251,
        "analyzes": 0.06696495301824251,
        "git": 0.3348247650912125,
        "repository": 0.06696495301824251,
        "structure": 0.06696495301824251,
        "code": 0.06696495301824251,
        "dependencies": 0.06696495301824251,
        "then": 0.06696495301824251,
        "generates": 0.06696495301824251,
        "and": 0.13392990603648502,
        "maintains": 0.06696495301824251,
        "high": 0.13392990603648502,
        "quality": 0.06696495301824251,
        "md": 0.06696495301824251,
        "using": 0.06696495301824251,
        "it": 0.06696495301824251,
        "initializes": 0.06696495301824251,
        "repos": 0.06696495301824251,
        "with": 0.06696495301824251,
        "no": 0.06696495301824251,
        "docs": 0.2008948590547275,
        "keeps": 0.06696495301824251,
        "up": 0.06696495301824251,
        "to": 0.06696495301824251,
        "date": 0.06696495301824251,
        "on": 0.06696495301824251,
        "commits": 0.06696495301824251,
        "prs": 0.06696495301824251,
        "supports": 0.06696495301824251,
        "multiple": 0.06696495301824251,
        "languages": 0.06696495301824251,
        "project": 0.06696495301824251,
        "types": 0.06696495301824251,
        "via": 0.06696495301824251,
        "analyzers": 0.13392990603648502,
        "non": 0.06696495301824251,
        "goals": 0.06696495301824251,
        "for": 0.06696495301824251,
        "the": 0.06696495301824251,
        "poc": 0.06696495301824251,
        "multi": 0.06696495301824251,
        "repo": 0.13392990603648502,
        "orchestration": 0.06696495301824251,
        "full": 0.06696495301824251,
        "website": 0.06696495301824251,
        "api": 0.06696495301824251,
        "reference": 0.06696495301824251,
        "extraction": 0.06696495301824251,
        "beyond": 0.06696495301824251,
        "summaries": 0.06696495301824251,
        "cloud": 0.06696495301824251,
        "llms": 0.06696495301824251,
        "2": 0.06696495301824251,
        "level": 0.06696495301824251,
        "at": 0.06696495301824251,
        "glance": 0.06696495301824251,
        "events": 0.06696495301824251,
        "event": 0.06696495301824251,
        "sources": 0.06696495301824251,
        "cli": 0.06696495301824251,
        "commands": 0.06696495301824251,
        "hooks": 0.06696495301824251,
        "webhooks": 0.06696495301824251,
        "ci": 0.06696495301824251,
        "commit": 0.13392990603648502,
        "pr": 0.13392990603648502,
        "orchestr": 0.06696495301824251,
        "async": 0.06696495301824251,
        "task": 0.06696495301824251,
        "graph": 0.13392990603648502,
        "scanner": 0.06696495301824251,
        "doc": 0.06696495301824251,
        "store": 0.06696495301824251,
        "indexer": 0.06696495301824251,
        "language": 0.06696495301824251,
        "artifacts": 0.06696495301824251,
        "fs": 0.06696495301824251,
        "deps": 0.06696495301824251,
        "cache": 0.06696495301824251,
        "versions": 0.06696495301824251,
        "knowledge": 0.06696495301824251,
        "embeddings": 0.06696495301824251,
        "prompt": 0.06696495301824251,
        "builder": 0.06696495301824251,
        "templates": 0.06696495301824251,
        "rag": 0.06696495301824251,
        "runner": 0.06696495301824251,
        "llama": 0.06696495301824251,
        "cpp": 0.06696495301824251,
        "ollama": 0.06696495301824251,
        "post": 0.06696495301824251,
        "processor": 0.06696495301824251,
        "lint": 0.06696495301824251,
        "toc": 0.06696495301824251,
        "badges": 0.06696495301824251,
        "links": 0.06696495301824251,
        "publisher": 0.06696495301824251,
        "branch": 0.06696495301824251
      },
      "text": "# Intelligent README Generator \u2014 Architecture & Spec (Python, Local LLM) ## 1) Purpose & Scope Build a Python-based system that **analyzes a Git repository** (structure, code, dependencies), then **generates and maintains a high-quality README.md** using a **local LLM**. It initializes repos with no docs and **keeps docs up to date** on commits/PRs. Supports **multiple languages/project types** via analyzers. Non-goals (for the POC): multi-repo orchestration, full website docs, API reference extraction (beyond README summaries), cloud LLMs. --- ## 2) High-Level Architecture (at a glance) ``` \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 Git Events \u2502 Event Sources \u2502 CLI commands, Git hooks, Webhooks/CI (commit/PR) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Orchestr \u2502 (Async task graph) \u2514\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Repo Scanner\u2502 \u2502 Analyzers \u2502 \u2502 Doc Store \u2502 \u2502 + Indexer \u2502 \u2502 (Language, \u2502 \u2502 (Artifacts, \u2502 \u2502 (Git, FS) \u2502 \u2502 Build, Deps) \u2502 \u2502 Cache, \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 Versions) \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 Knowledge Graph \u2502 \u2502 \u2502 \u2502 & Embeddings \u2502<\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 Prompt Builder \u2502 (Templates + RAG) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 Local LLM Runner \u2502 (llama.cpp/Ollama) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25b6\u2502 Post-Processor \u2502 (lint, ToC, badges, links) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Git Publisher \u2502 (branch/PR/commit) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 ``` --- ##",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#1",
      "vector": {
        "rag": 0.053074489243427524,
        "local": 0.053074489243427524,
        "llm": 0.053074489243427524,
        "runner": 0.053074489243427524,
        "llama": 0.053074489243427524,
        "cpp": 0.053074489243427524,
        "ollama": 0.053074489243427524,
        "post": 0.053074489243427524,
        "processor": 0.053074489243427524,
        "lint": 0.053074489243427524,
        "toc": 0.053074489243427524,
        "badges": 0.053074489243427524,
        "links": 0.053074489243427524,
        "git": 0.10614897848685505,
        "publisher": 0.053074489243427524,
        "branch": 0.053074489243427524,
        "pr": 0.053074489243427524,
        "commit": 0.053074489243427524,
        "3": 0.2653724462171376,
        "components": 0.053074489243427524,
        "responsibilities": 0.053074489243427524,
        "1": 0.053074489243427524,
        "orchestrator": 0.053074489243427524,
        "coordinates": 0.053074489243427524,
        "end": 0.10614897848685505,
        "to": 0.2122979569737101,
        "pipelines": 0.053074489243427524,
        "init": 0.053074489243427524,
        "update": 0.10614897848685505,
        "regenerate": 0.10614897848685505,
        "computes": 0.053074489243427524,
        "change": 0.10614897848685505,
        "impact": 0.053074489243427524,
        "from": 0.10614897848685505,
        "diff": 0.053074489243427524,
        "decides": 0.053074489243427524,
        "whether": 0.053074489243427524,
        "full": 0.053074489243427524,
        "readme": 0.053074489243427524,
        "or": 0.10614897848685505,
        "patch": 0.053074489243427524,
        "sections": 0.053074489243427524,
        "schedules": 0.053074489243427524,
        "tasks": 0.053074489243427524,
        "and": 0.15922346773028256,
        "caches": 0.053074489243427524,
        "intermediate": 0.053074489243427524,
        "results": 0.053074489243427524,
        "reuses": 0.053074489243427524,
        "analyzer": 0.10614897848685505,
        "outputs": 0.053074489243427524,
        "docgen": 0.2122979569737101,
        "analyzers": 0.2653724462171376,
        "cache": 0.053074489243427524,
        "json": 0.2122979569737101,
        "invalidating": 0.053074489243427524,
        "entries": 0.053074489243427524,
        "when": 0.10614897848685505,
        "file": 0.053074489243427524,
        "hashes": 0.053074489243427524,
        "signatures": 0.053074489243427524,
        "emits": 0.053074489243427524,
        "structured": 0.053074489243427524,
        "logs": 0.053074489243427524,
        "info": 0.053074489243427524,
        "by": 0.053074489243427524,
        "default": 0.053074489243427524,
        "debug": 0.053074489243427524,
        "with": 0.053074489243427524,
        "verbose": 0.053074489243427524,
        "respects": 0.053074489243427524,
        "yml": 0.053074489243427524,
        "ci": 0.053074489243427524,
        "watched_globs": 0.053074489243427524,
        "skip": 0.053074489243427524,
        "unrelated": 0.053074489243427524,
        "diffs": 0.053074489243427524,
        "substitutes": 0.053074489243427524,
        "fail": 0.053074489243427524,
        "safe": 0.053074489243427524,
        "stubs": 0.053074489243427524,
        "generation": 0.053074489243427524,
        "fails": 0.053074489243427524,
        "supports": 0.053074489243427524,
        "dry": 0.10614897848685505,
        "run": 0.15922346773028256,
        "previews": 0.053074489243427524,
        "records": 0.053074489243427524,
        "scorecards": 0.053074489243427524,
        "for": 0.053074489243427524,
        "each": 0.053074489243427524,
        "under": 0.053074489243427524,
        "2": 0.053074489243427524,
        "repo": 0.15922346773028256,
        "scanner": 0.053074489243427524,
        "indexer": 0.053074489243427524,
        "walks": 0.053074489243427524,
        "builds": 0.053074489243427524,
        "normalized": 0.053074489243427524,
        "manifest": 0.053074489243427524,
        "files": 0.10614897848685505,
        "sizes": 0.053074489243427524,
        "language": 0.10614897848685505,
        "tags": 0.053074489243427524,
        "path": 0.053074489243427524,
        "roles": 0.053074489243427524,
        "src": 0.053074489243427524,
        "test": 0.10614897848685505,
        "docs": 0.053074489243427524,
        "examples": 0.053074489243427524,
        "build": 0.15922346773028256,
        "dependency": 0.10614897848685505,
        "manifests": 0.053074489243427524,
        "e": 0.053074489243427524,
        "g": 0.053074489243427524,
        "pom": 0.053074489243427524,
        "xml": 0.053074489243427524,
        "gradle": 0.10614897848685505,
        "package": 0.053074489243427524,
        "requirements": 0.053074489243427524,
        "txt": 0.053074489243427524,
        "pyproject": 0.053074489243427524,
        "toml": 0.10614897848685505,
        "go": 0.15922346773028256,
        "mod": 0.053074489243427524,
        "cargo": 0.10614897848685505,
        "gemfile": 0.053074489243427524,
        "composer": 0.053074489243427524,
        "entrypoints": 0.10614897848685505,
        "clis": 0.053074489243427524,
        "services": 0.053074489243427524,
        "coverage": 0.053074489243427524,
        "artifacts": 0.053074489243427524,
        "if": 0.053074489243427524,
        "available": 0.053074489243427524,
        "stores": 0.053074489243427524,
        "a": 0.053074489243427524,
        "per": 0.053074489243427524,
        "index": 0.053074489243427524,
        "speed": 0.053074489243427524,
        "future": 0.053074489243427524,
        "runs": 0.053074489243427524,
        "plugin": 0.053074489243427524,
        "based": 0.053074489243427524,
        "detect": 0.053074489243427524,
        "idioms": 0.053074489243427524,
        "frameworks": 0.053074489243427524,
        "spring": 0.053074489243427524,
        "boot": 0.053074489243427524,
        "fastapi": 0.053074489243427524,
        "node": 0.053074489243427524,
        "express": 0.053074489243427524,
        "react": 0.053074489243427524,
        "next": 0.053074489243427524,
        "js": 0.053074489243427524,
        "http": 0.053074489243427524,
        "rust": 0.053074489243427524,
        "bin": 0.053074489243427524,
        "lib": 0.053074489243427524,
        "maven": 0.053074489243427524,
        "setuptools": 0.053074489243427524,
        "poetry": 0.053074489243427524,
        "npm": 0.053074489243427524,
        "pnpm": 0.053074489243427524,
        "yarn": 0.053074489243427524,
        "extract": 0.053074489243427524,
        "top": 0.053074489243427524,
        "level": 0.053074489243427524
      },
      "text": "+ RAG) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 Local LLM Runner \u2502 (llama.cpp/Ollama) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25b6\u2502 Post-Processor \u2502 (lint, ToC, badges, links) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Git Publisher \u2502 (branch/PR/commit) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 ``` --- ## 3) Components & Responsibilities ### 3.1 Orchestrator * Coordinates end-to-end pipelines (init, update, regenerate). * Computes *change impact* from Git diff; decides whether to regenerate full README or patch sections. * Schedules tasks and caches intermediate results. * Reuses analyzer outputs from `.docgen/analyzers/cache.json`, invalidating entries when file hashes or analyzer signatures change. * Emits structured logs (info by default, debug with `--verbose`), respects `.docgen.yml` `ci.watched_globs` to skip unrelated diffs, and substitutes fail-safe stubs when generation fails. * Supports dry-run previews (`docgen update --dry-run`) and records scorecards for each run under `.docgen/`. ### 3.2 Repo Scanner & Indexer * Walks repo; builds normalized manifest: * Files, sizes, language tags, path roles (src/test/docs/examples). * Build files & dependency manifests (e.g., `pom.xml`, `build.gradle`, `package.json`, `requirements.txt`, `pyproject.toml`, `go.mod`, `Cargo.toml`, `Gemfile`, `composer.json`). * Entrypoints (CLIs, services), test coverage artifacts if available. * Stores a per-repo index (JSON) to speed future runs. ### 3.3 Analyzers (Plugin-based) * **Language analyzers** (detect idioms, entrypoints, frameworks: Spring Boot, FastAPI, Node/Express, React, Next.js, Go HTTP, Rust bin/lib). * **Build analyzers** (Maven/Gradle, setuptools/Poetry, npm/pnpm/yarn, Go, Cargo). * **Dependency analyzers** (extract top-level",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#2",
      "vector": {
        "index": 0.0536828127095019,
        "json": 0.0536828127095019,
        "to": 0.1073656254190038,
        "speed": 0.0536828127095019,
        "future": 0.0536828127095019,
        "runs": 0.0536828127095019,
        "3": 0.2147312508380076,
        "analyzers": 0.3220968762570114,
        "plugin": 0.0536828127095019,
        "based": 0.0536828127095019,
        "language": 0.0536828127095019,
        "detect": 0.0536828127095019,
        "idioms": 0.0536828127095019,
        "entrypoints": 0.0536828127095019,
        "frameworks": 0.0536828127095019,
        "spring": 0.1073656254190038,
        "boot": 0.1073656254190038,
        "fastapi": 0.1073656254190038,
        "node": 0.1073656254190038,
        "express": 0.0536828127095019,
        "react": 0.0536828127095019,
        "next": 0.0536828127095019,
        "js": 0.0536828127095019,
        "go": 0.1073656254190038,
        "http": 0.0536828127095019,
        "rust": 0.0536828127095019,
        "bin": 0.0536828127095019,
        "lib": 0.0536828127095019,
        "build": 0.1073656254190038,
        "maven": 0.0536828127095019,
        "gradle": 0.0536828127095019,
        "setuptools": 0.0536828127095019,
        "poetry": 0.0536828127095019,
        "npm": 0.0536828127095019,
        "pnpm": 0.0536828127095019,
        "yarn": 0.0536828127095019,
        "cargo": 0.0536828127095019,
        "dependency": 0.0536828127095019,
        "extract": 0.0536828127095019,
        "top": 0.1073656254190038,
        "level": 0.0536828127095019,
        "libs": 0.0536828127095019,
        "notable": 0.0536828127095019,
        "transitive": 0.0536828127095019,
        "categories": 0.0536828127095019,
        "entrypoint": 0.0536828127095019,
        "infer": 0.0536828127095019,
        "run": 0.0536828127095019,
        "commands": 0.0536828127095019,
        "for": 0.1073656254190038,
        "django": 0.0536828127095019,
        "scripts": 0.1073656254190038,
        "pattern": 0.0536828127095019,
        "monorepo": 0.0536828127095019,
        "layout": 0.0536828127095019,
        "ci": 0.0536828127095019,
        "cd": 0.0536828127095019,
        "containerization": 0.0536828127095019,
        "k8s": 0.0536828127095019,
        "heuristics": 0.0536828127095019,
        "structure": 0.0536828127095019,
        "analyzer": 0.1610484381285057,
        "module": 0.0536828127095019,
        "topology": 0.0536828127095019,
        "detected": 0.0536828127095019,
        "entities": 0.1073656254190038,
        "dtos": 0.0536828127095019,
        "api": 0.0536828127095019,
        "endpoint": 0.0536828127095019,
        "sequences": 0.0536828127095019,
        "service": 0.0536828127095019,
        "interactions": 0.0536828127095019,
        "tree": 0.0536828127095019,
        "sitter": 0.0536828127095019,
        "symbol": 0.0536828127095019,
        "python": 0.0536828127095019,
        "java": 0.0536828127095019,
        "typescript": 0.0536828127095019,
        "extracts": 0.0536828127095019,
        "functions": 0.0536828127095019,
        "classes": 0.0536828127095019,
        "when": 0.0536828127095019,
        "parsers": 0.0536828127095019,
        "available": 0.0536828127095019,
        "and": 0.2147312508380076,
        "degrades": 0.0536828127095019,
        "gracefully": 0.0536828127095019,
        "otherwise": 0.0536828127095019,
        "each": 0.0536828127095019,
        "returns": 0.0536828127095019,
        "signals": 0.1073656254190038,
        "key": 0.1073656254190038,
        "facts": 0.0536828127095019,
        "the": 0.1073656254190038,
        "knowledge": 0.1073656254190038,
        "graph": 0.1610484381285057,
        "4": 0.0536828127095019,
        "embeddings": 0.1073656254190038,
        "rag": 0.0536828127095019,
        "of": 0.1073656254190038,
        "repo": 0.1073656254190038,
        "modules": 0.0536828127095019,
        "packages": 0.0536828127095019,
        "services": 0.0536828127095019,
        "configs": 0.0536828127095019,
        "tests": 0.0536828127095019,
        "docs": 0.1073656254190038,
        "lightweight": 0.0536828127095019,
        "embedding": 0.0536828127095019,
        "store": 0.0536828127095019,
        "e": 0.0536828127095019,
        "g": 0.0536828127095019,
        "faiss": 0.0536828127095019,
        "in": 0.0536828127095019,
        "memory": 0.0536828127095019,
        "chunks": 0.0536828127095019,
        "code": 0.0536828127095019,
        "comments": 0.0536828127095019,
        "readme": 0.1073656254190038,
        "fragments": 0.0536828127095019,
        "changelog": 0.0536828127095019,
        "issues": 0.0536828127095019,
        "optional": 0.0536828127095019,
        "commit": 0.0536828127095019,
        "messages": 0.1073656254190038,
        "provides": 0.0536828127095019,
        "context": 0.1073656254190038,
        "retrieval": 0.0536828127095019,
        "prompt": 0.1073656254190038,
        "building": 0.0536828127095019,
        "k": 0.0536828127095019,
        "by": 0.0536828127095019,
        "section": 0.1610484381285057,
        "persists": 0.0536828127095019,
        "under": 0.0536828127095019,
        "docgen": 0.0536828127095019,
        "refreshing": 0.0536828127095019,
        "only": 0.0536828127095019,
        "files": 0.0536828127095019,
        "whose": 0.0536828127095019,
        "hashes": 0.0536828127095019,
        "changed": 0.0536828127095019,
        "5": 0.0536828127095019,
        "builder": 0.0536828127095019,
        "aware": 0.0536828127095019,
        "jinja2": 0.0536828127095019,
        "templates": 0.0536828127095019,
        "with": 0.1073656254190038,
        "guardrails": 0.0536828127095019,
        "project": 0.0536828127095019,
        "intro": 0.0536828127095019,
        "features": 0.0536828127095019,
        "architecture": 0.0536828127095019,
        "overview": 0.0536828127095019,
        "quick": 0.0536828127095019,
        "start": 0.0536828127095019,
        "configuration": 0.0536828127095019,
        "test": 0.0536828127095019,
        "deployment": 0.0536828127095019,
        "troubleshooting": 0.0536828127095019,
        "faq": 0.0536828127095019,
        "roadmap": 0.0536828127095019,
        "contribution": 0.0536828127095019,
        "license": 0.0536828127095019,
        "badges": 0.0536828127095019,
        "dynamically": 0.0536828127095019,
        "injects": 0.0536828127095019,
        "retrieved": 0.0536828127095019,
        "per": 0.0536828127095019,
        "produces": 0.0536828127095019,
        "llm": 0.0536828127095019,
        "ready": 0.0536828127095019,
        "structured": 0.0536828127095019,
        "prompts": 0.0536828127095019,
        "system": 0.0536828127095019,
        "user": 0.0536828127095019,
        "token": 0.0536828127095019,
        "budgets": 0.0536828127095019,
        "honours": 0.0536828127095019,
        "style": 0.0536828127095019,
        "presets": 0.0536828127095019,
        "concise": 0.0536828127095019,
        "trims": 0.0536828127095019,
        "list": 0.0536828127095019,
        "heavy": 0.0536828127095019,
        "sections": 0.0536828127095019
      },
      "text": "index (JSON) to speed future runs. ### 3.3 Analyzers (Plugin-based) * **Language analyzers** (detect idioms, entrypoints, frameworks: Spring Boot, FastAPI, Node/Express, React, Next.js, Go HTTP, Rust bin/lib). * **Build analyzers** (Maven/Gradle, setuptools/Poetry, npm/pnpm/yarn, Go, Cargo). * **Dependency analyzers** (extract top-level libs & notable transitive categories). * **Entrypoint analyzers** (infer run commands for FastAPI, Django, Spring Boot, Node scripts). * **Pattern analyzers** (monorepo layout, CI/CD, containerization/K8s heuristics). * **Structure analyzer** (module topology, detected entities/DTOs, API endpoint sequences, service interactions). * **Tree-sitter symbol analyzer** (Python/Java/TypeScript) extracts functions/classes when parsers available and degrades gracefully otherwise. * Each analyzer returns **Signals** (key facts) to the knowledge graph. ### 3.4 Knowledge Graph & Embeddings (RAG) * Graph of Repo entities: modules, packages, services, scripts, configs, tests, docs. * Lightweight embedding store (e.g., `faiss`/in-memory) of **chunks**: code comments, README fragments, `docs/`, `CHANGELOG`, issues (optional), commit messages. * Provides **context retrieval** for prompt building (top-k by section) and persists embeddings under `.docgen/`, refreshing only the files whose hashes changed. ### 3.5 Prompt Builder * **Section-aware** Jinja2 templates with **guardrails**: * Project intro, key features, architecture overview, quick start, configuration, build/test, deployment, troubleshooting, FAQ, roadmap, contribution, license, badges. * Dynamically injects repo signals and retrieved context per section. * Produces **LLM-ready structured prompts** (system + user messages) with token budgets and honours `readme.style` presets (`concise` trims list-heavy sections,",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#3",
      "vector": {
        "start": 0.09690031662230184,
        "configuration": 0.09690031662230184,
        "build": 0.04845015831115092,
        "test": 0.04845015831115092,
        "deployment": 0.04845015831115092,
        "troubleshooting": 0.04845015831115092,
        "faq": 0.04845015831115092,
        "roadmap": 0.04845015831115092,
        "contribution": 0.04845015831115092,
        "license": 0.04845015831115092,
        "badges": 0.09690031662230184,
        "dynamically": 0.04845015831115092,
        "injects": 0.09690031662230184,
        "repo": 0.04845015831115092,
        "signals": 0.04845015831115092,
        "and": 0.4360514248003583,
        "retrieved": 0.04845015831115092,
        "context": 0.09690031662230184,
        "per": 0.04845015831115092,
        "section": 0.14535047493345277,
        "produces": 0.04845015831115092,
        "llm": 0.09690031662230184,
        "ready": 0.04845015831115092,
        "structured": 0.09690031662230184,
        "prompts": 0.04845015831115092,
        "system": 0.04845015831115092,
        "user": 0.04845015831115092,
        "messages": 0.04845015831115092,
        "with": 0.14535047493345277,
        "token": 0.04845015831115092,
        "budgets": 0.04845015831115092,
        "honours": 0.04845015831115092,
        "readme": 0.14535047493345277,
        "style": 0.14535047493345277,
        "presets": 0.04845015831115092,
        "concise": 0.04845015831115092,
        "trims": 0.04845015831115092,
        "list": 0.04845015831115092,
        "heavy": 0.04845015831115092,
        "sections": 0.14535047493345277,
        "comprehensive": 0.04845015831115092,
        "keeps": 0.04845015831115092,
        "full": 0.04845015831115092,
        "detail": 0.04845015831115092,
        "detected": 0.09690031662230184,
        "entrypoints": 0.04845015831115092,
        "infrastructure": 0.04845015831115092,
        "patterns": 0.04845015831115092,
        "into": 0.04845015831115092,
        "quick": 0.04845015831115092,
        "guidance": 0.04845015831115092,
        "e": 0.04845015831115092,
        "g": 0.04845015831115092,
        "uvicorn": 0.04845015831115092,
        "docker": 0.14535047493345277,
        "compose": 0.04845015831115092,
        "up": 0.04845015831115092,
        "generates": 0.04845015831115092,
        "mermaid": 0.04845015831115092,
        "sequence": 0.04845015831115092,
        "diagrams": 0.04845015831115092,
        "highlighting": 0.04845015831115092,
        "request": 0.04845015831115092,
        "flow": 0.04845015831115092,
        "across": 0.04845015831115092,
        "services": 0.04845015831115092,
        "when": 0.09690031662230184,
        "api": 0.09690031662230184,
        "endpoints": 0.04845015831115092,
        "are": 0.04845015831115092,
        "3": 0.09690031662230184,
        "6": 0.04845015831115092,
        "local": 0.14535047493345277,
        "runner": 0.14535047493345277,
        "pluggable": 0.04845015831115092,
        "runtime": 0.04845015831115092,
        "that": 0.04845015831115092,
        "prefers": 0.04845015831115092,
        "the": 0.04845015831115092,
        "model": 0.14535047493345277,
        "http": 0.14535047493345277,
        "endpoint": 0.04845015831115092,
        "host": 0.04845015831115092,
        "localhost": 0.04845015831115092,
        "12434": 0.04845015831115092,
        "engines": 0.09690031662230184,
        "v1": 0.09690031662230184,
        "container": 0.04845015831115092,
        "internal": 0.14535047493345277,
        "environment": 0.04845015831115092,
        "overrides": 0.04845015831115092,
        "an": 0.04845015831115092,
        "ollama": 0.04845015831115092,
        "cli": 0.09690031662230184,
        "fallback": 0.04845015831115092,
        "defaults": 0.04845015831115092,
        "to": 0.14535047493345277,
        "ai": 0.04845015831115092,
        "smollm2": 0.04845015831115092,
        "360m": 0.04845015831115092,
        "q4_k_m": 0.04845015831115092,
        "but": 0.04845015831115092,
        "respects": 0.04845015831115092,
        "docgen": 0.09690031662230184,
        "yml": 0.04845015831115092,
        "openai": 0.04845015831115092,
        "compatible": 0.04845015831115092,
        "env": 0.04845015831115092,
        "vars": 0.04845015831115092,
        "for": 0.14535047493345277,
        "alternate": 0.04845015831115092,
        "weights": 0.04845015831115092,
        "keys": 0.04845015831115092,
        "supports": 0.04845015831115092,
        "function": 0.04845015831115092,
        "calling": 0.04845015831115092,
        "outputs": 0.04845015831115092,
        "available": 0.04845015831115092,
        "streaming": 0.04845015831115092,
        "decode": 0.04845015831115092,
        "stop": 0.04845015831115092,
        "tokens": 0.04845015831115092,
        "by": 0.09690031662230184,
        "generation": 0.04845015831115092,
        "stay": 0.09690031662230184,
        "within": 0.04845015831115092,
        "limits": 0.04845015831115092,
        "validates": 0.09690031662230184,
        "ensure": 0.04845015831115092,
        "runners": 0.04845015831115092,
        "loopback": 0.04845015831115092,
        "hosts": 0.04845015831115092,
        "only": 0.09690031662230184,
        "includes": 0.04845015831115092,
        "a": 0.09690031662230184,
        "llamacpprunner": 0.04845015831115092,
        "adapter": 0.04845015831115092,
        "llama": 0.04845015831115092,
        "cpp": 0.04845015831115092,
        "binaries": 0.04845015831115092,
        "enforcing": 0.04845015831115092,
        "filesystem": 0.04845015831115092,
        "backed": 0.04845015831115092,
        "paths": 0.04845015831115092,
        "execution": 0.04845015831115092,
        "7": 0.04845015831115092,
        "post": 0.04845015831115092,
        "processor": 0.04845015831115092,
        "lints": 0.04845015831115092,
        "markdown": 0.04845015831115092,
        "builds": 0.04845015831115092,
        "toc": 0.04845015831115092,
        "adds": 0.04845015831115092,
        "shields": 0.04845015831115092,
        "normalizes": 0.04845015831115092,
        "heading": 0.04845015831115092,
        "hierarchy": 0.04845015831115092,
        "enforces": 0.04845015831115092,
        "guide": 0.04845015831115092,
        "contract": 0.04845015831115092,
        "required": 0.04845015831115092,
        "links": 0.04845015831115092,
        "relative": 0.04845015831115092,
        "absolute": 0.04845015831115092,
        "code": 0.04845015831115092,
        "block": 0.04845015831115092,
        "languages": 0.04845015831115092,
        "line": 0.04845015831115092,
        "length": 0.04845015831115092,
        "computes": 0.04845015831115092,
        "diff": 0.04845015831115092,
        "aware": 0.04845015831115092,
        "updates": 0.04845015831115092,
        "modifies": 0.04845015831115092,
        "impacted": 0.04845015831115092,
        "changes": 0.04845015831115092,
        "persists": 0.04845015831115092,
        "scorecard": 0.09690031662230184,
        "json": 0.04845015831115092
      },
      "text": "start, configuration, build/test, deployment, troubleshooting, FAQ, roadmap, contribution, license, badges. * Dynamically injects repo signals and retrieved context per section. * Produces **LLM-ready structured prompts** (system + user messages) with token budgets and honours `readme.style` presets (`concise` trims list-heavy sections, `comprehensive` keeps full detail). * Injects detected entrypoints and infrastructure patterns into Quick Start guidance (e.g., `uvicorn ...`, `docker compose up`). * Generates Mermaid sequence diagrams highlighting request flow across services when API endpoints are detected. ### 3.6 Local LLM Runner * Pluggable runtime that prefers the Docker Model Runner HTTP endpoint (host `http://localhost:12434/engines/v1`, container `http://model-runner.docker.internal/engines/v1`) with environment overrides and an `ollama` CLI fallback. * Defaults to `ai/smollm2:360M-Q4_K_M` but respects `.docgen.yml` and OpenAI-compatible env vars for alternate weights and API keys. * Supports **function calling style** for structured outputs when available. * Streaming decode with stop tokens; **section-by-section** generation to stay within context limits. * Validates configuration to ensure runners stay local (loopback/`*.internal` hosts only). * Includes a `LlamaCppRunner` adapter for local `llama.cpp` binaries, enforcing filesystem-backed model paths and CLI execution. ### 3.7 Post-Processor * Lints Markdown, builds ToC, adds shields/badges, normalizes heading hierarchy. * Enforces internal style guide and **README contract** (required sections). * Validates links (relative/absolute), code block languages, and line length. * Computes **diff-aware updates**: only modifies sections impacted by changes. * Persists a README scorecard (`.docgen/scorecard.json`)",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#4",
      "vector": {
        "shields": 0.04339630366027462,
        "badges": 0.08679260732054923,
        "normalizes": 0.08679260732054923,
        "heading": 0.04339630366027462,
        "hierarchy": 0.04339630366027462,
        "enforces": 0.04339630366027462,
        "internal": 0.04339630366027462,
        "style": 0.04339630366027462,
        "guide": 0.04339630366027462,
        "and": 0.6075482512438447,
        "readme": 0.13018891098082386,
        "contract": 0.04339630366027462,
        "required": 0.04339630366027462,
        "sections": 0.17358521464109847,
        "validates": 0.04339630366027462,
        "links": 0.04339630366027462,
        "relative": 0.04339630366027462,
        "absolute": 0.04339630366027462,
        "code": 0.04339630366027462,
        "block": 0.04339630366027462,
        "languages": 0.04339630366027462,
        "line": 0.04339630366027462,
        "length": 0.04339630366027462,
        "computes": 0.04339630366027462,
        "diff": 0.04339630366027462,
        "aware": 0.04339630366027462,
        "updates": 0.04339630366027462,
        "only": 0.04339630366027462,
        "modifies": 0.04339630366027462,
        "impacted": 0.04339630366027462,
        "by": 0.04339630366027462,
        "changes": 0.08679260732054923,
        "persists": 0.04339630366027462,
        "a": 0.13018891098082386,
        "scorecard": 0.08679260732054923,
        "docgen": 0.2169815183013731,
        "json": 0.17358521464109847,
        "capturing": 0.08679260732054923,
        "coverage": 0.08679260732054923,
        "quick": 0.04339630366027462,
        "start": 0.04339630366027462,
        "health": 0.04339630366027462,
        "link": 0.08679260732054923,
        "results": 0.04339630366027462,
        "adds": 0.04339630366027462,
        "build": 0.04339630366027462,
        "license": 0.04339630366027462,
        "with": 0.13018891098082386,
        "safe": 0.08679260732054923,
        "defaults": 0.04339630366027462,
        "reports": 0.04339630366027462,
        "warnings": 0.04339630366027462,
        "during": 0.04339630366027462,
        "post": 0.04339630366027462,
        "processing": 0.04339630366027462,
        "3": 0.13018891098082386,
        "8": 0.04339630366027462,
        "validation": 0.17358521464109847,
        "layer": 0.04339630366027462,
        "runs": 0.08679260732054923,
        "after": 0.04339630366027462,
        "section": 0.08679260732054923,
        "rendering": 0.04339630366027462,
        "before": 0.04339630366027462,
        "linting": 0.04339630366027462,
        "publishing": 0.04339630366027462,
        "to": 0.04339630366027462,
        "ensure": 0.04339630366027462,
        "generated": 0.08679260732054923,
        "claims": 0.04339630366027462,
        "are": 0.04339630366027462,
        "grounded": 0.04339630366027462,
        "analyzer": 0.08679260732054923,
        "signals": 0.04339630366027462,
        "metadata": 0.04339630366027462,
        "retrieved": 0.04339630366027462,
        "context": 0.04339630366027462,
        "into": 0.04339630366027462,
        "an": 0.04339630366027462,
        "evidence": 0.13018891098082386,
        "index": 0.04339630366027462,
        "used": 0.04339630366027462,
        "for": 0.13018891098082386,
        "token": 0.04339630366027462,
        "overlap": 0.04339630366027462,
        "checks": 0.04339630366027462,
        "default": 0.04339630366027462,
        "nohallucinationvalidator": 0.04339630366027462,
        "rejects": 0.04339630366027462,
        "sentences": 0.04339630366027462,
        "lacking": 0.04339630366027462,
        "supporting": 0.04339630366027462,
        "replaces": 0.04339630366027462,
        "offending": 0.04339630366027462,
        "fail": 0.04339630366027462,
        "stubs": 0.04339630366027462,
        "raises": 0.04339630366027462,
        "actionable": 0.04339630366027462,
        "errors": 0.04339630366027462,
        "writes": 0.04339630366027462,
        "validator": 0.04339630366027462,
        "status": 0.04339630366027462,
        "issues": 0.04339630366027462,
        "summaries": 0.04339630366027462,
        "auditability": 0.04339630366027462,
        "respects": 0.04339630366027462,
        "yml": 0.04339630366027462,
        "no_hallucination": 0.04339630366027462,
        "toggle": 0.04339630366027462,
        "docgen_validation_no_hallucination": 0.04339630366027462,
        "environment": 0.04339630366027462,
        "override": 0.04339630366027462,
        "cli": 0.04339630366027462,
        "skip": 0.04339630366027462,
        "flag": 0.04339630366027462,
        "one": 0.04339630366027462,
        "off": 0.04339630366027462,
        "bypasses": 0.04339630366027462,
        "9": 0.04339630366027462,
        "doc": 0.04339630366027462,
        "store": 0.04339630366027462,
        "artifacts": 0.08679260732054923,
        "versions": 0.04339630366027462,
        "keeps": 0.04339630366027462,
        "drafts": 0.04339630366027462,
        "logs": 0.04339630366027462,
        "prompts": 0.04339630366027462,
        "inputs": 0.04339630366027462,
        "outputs": 0.04339630366027462,
        "diffs": 0.04339630366027462,
        "under": 0.04339630366027462,
        "per": 0.04339630366027462,
        "repo": 0.04339630366027462,
        "supports": 0.04339630366027462,
        "rollback": 0.04339630366027462,
        "regression": 0.04339630366027462,
        "testing": 0.04339630366027462,
        "via": 0.04339630366027462,
        "golden": 0.04339630366027462,
        "readmes": 0.04339630366027462,
        "stores": 0.04339630366027462,
        "embedding": 0.04339630366027462,
        "cache": 0.08679260732054923,
        "embeddings": 0.04339630366027462,
        "analyzers": 0.04339630366027462,
        "schema": 0.04339630366027462,
        "versioning": 0.04339630366027462,
        "so": 0.04339630366027462,
        "subsequent": 0.04339630366027462,
        "reuse": 0.04339630366027462,
        "work": 0.04339630366027462,
        "when": 0.04339630366027462,
        "file": 0.04339630366027462,
        "hashes": 0.04339630366027462,
        "remain": 0.04339630366027462,
        "unchanged": 0.04339630366027462,
        "10": 0.04339630366027462,
        "git": 0.04339630366027462,
        "publisher": 0.04339630366027462,
        "creates": 0.04339630366027462,
        "branch": 0.04339630366027462,
        "e": 0.04339630366027462,
        "g": 0.04339630366027462,
        "update": 0.04339630366027462,
        "yyyymmdd": 0.04339630366027462,
        "pr": 0.08679260732054923,
        "body": 0.04339630366027462,
        "explains": 0.04339630366027462,
        "detected": 0.04339630366027462,
        "what": 0.04339630366027462,
        "were": 0.04339630366027462,
        "updated": 0.04339630366027462,
        "can": 0.04339630366027462,
        "commit": 0.04339630366027462
      },
      "text": "shields/badges, normalizes heading hierarchy. * Enforces internal style guide and **README contract** (required sections). * Validates links (relative/absolute), code block languages, and line length. * Computes **diff-aware updates**: only modifies sections impacted by changes. * Persists a README scorecard (`.docgen/scorecard.json`) capturing coverage, quick start health, and link results. * Adds build/coverage/license badges with safe defaults and reports link warnings during post-processing. ### 3.8 Validation Layer * Runs after section rendering and before linting/publishing to ensure generated claims are grounded. * Normalizes analyzer signals, section metadata, and retrieved context into an **Evidence Index** used for token overlap checks. * Default `NoHallucinationValidator` rejects sentences lacking supporting evidence, replaces offending sections with fail-safe stubs, and raises actionable errors. * Writes `.docgen/validation.json` capturing validator status, issues, and evidence summaries for auditability. * Respects `.docgen.yml` `validation.no_hallucination` toggle, `DOCGEN_VALIDATION_NO_HALLUCINATION` environment override, and CLI `--skip-validation` flag for one-off bypasses. ### 3.9 Doc Store (Artifacts & Versions) * Keeps generated drafts, logs, prompts, inputs/outputs, and diffs under `.docgen/` per repo. * Supports rollback and regression testing via \u201cgolden\u201d READMEs. * Stores embedding cache (`embeddings.json`) and analyzer artifacts (`analyzers/cache.json`) with schema versioning so subsequent runs reuse work when file hashes remain unchanged. ### 3.10 Git Publisher * Creates a branch (e.g., `docgen/readme-update-YYYYMMDD`) and a PR. * PR body explains detected changes and what sections were updated. * Can commit",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#5",
      "vector": {
        "with": 0.0746913686973271,
        "schema": 0.03734568434866355,
        "versioning": 0.03734568434866355,
        "so": 0.03734568434866355,
        "subsequent": 0.03734568434866355,
        "runs": 0.03734568434866355,
        "reuse": 0.03734568434866355,
        "work": 0.03734568434866355,
        "when": 0.0746913686973271,
        "file": 0.03734568434866355,
        "hashes": 0.03734568434866355,
        "remain": 0.03734568434866355,
        "unchanged": 0.03734568434866355,
        "3": 0.0746913686973271,
        "10": 0.03734568434866355,
        "git": 0.03734568434866355,
        "publisher": 0.03734568434866355,
        "creates": 0.03734568434866355,
        "a": 0.0746913686973271,
        "branch": 0.03734568434866355,
        "e": 0.0746913686973271,
        "g": 0.0746913686973271,
        "docgen": 0.0746913686973271,
        "readme": 0.03734568434866355,
        "update": 0.0746913686973271,
        "yyyymmdd": 0.03734568434866355,
        "and": 0.18672842174331777,
        "pr": 0.0746913686973271,
        "body": 0.03734568434866355,
        "explains": 0.03734568434866355,
        "detected": 0.03734568434866355,
        "changes": 0.03734568434866355,
        "what": 0.03734568434866355,
        "sections": 0.03734568434866355,
        "were": 0.03734568434866355,
        "updated": 0.03734568434866355,
        "can": 0.03734568434866355,
        "commit": 0.03734568434866355,
        "directly": 0.03734568434866355,
        "configurable": 0.03734568434866355,
        "on": 0.03734568434866355,
        "init": 0.0746913686973271,
        "for": 0.1493827373946542,
        "empty": 0.03734568434866355,
        "repos": 0.03734568434866355,
        "applies": 0.03734568434866355,
        "labels": 0.03734568434866355,
        "docs": 0.0746913686973271,
        "auto": 0.03734568434866355,
        "updates": 0.03734568434866355,
        "existing": 0.03734568434866355,
        "prs": 0.03734568434866355,
        "configured": 0.03734568434866355,
        "11": 0.03734568434866355,
        "service": 0.1493827373946542,
        "mode": 0.03734568434866355,
        "fastapi": 0.0746913686973271,
        "app": 0.03734568434866355,
        "exposes": 0.03734568434866355,
        "post": 0.03734568434866355,
        "endpoints": 0.03734568434866355,
        "plus": 0.03734568434866355,
        "health": 0.03734568434866355,
        "readiness": 0.03734568434866355,
        "reuses": 0.03734568434866355,
        "the": 0.11203705304599065,
        "orchestrator": 0.03734568434866355,
        "dependency": 0.03734568434866355,
        "executes": 0.03734568434866355,
        "operations": 0.03734568434866355,
        "in": 0.03734568434866355,
        "thread": 0.03734568434866355,
        "pools": 0.03734568434866355,
        "to": 0.03734568434866355,
        "keep": 0.03734568434866355,
        "event": 0.03734568434866355,
        "loop": 0.03734568434866355,
        "responsive": 0.03734568434866355,
        "cli": 0.0746913686973271,
        "host": 0.03734568434866355,
        "0": 0.1493827373946542,
        "port": 0.03734568434866355,
        "8000": 0.03734568434866355,
        "boots": 0.03734568434866355,
        "authentication": 0.03734568434866355,
        "hooks": 0.03734568434866355,
        "ready": 0.03734568434866355,
        "future": 0.03734568434866355,
        "hardening": 0.03734568434866355,
        "error": 0.03734568434866355,
        "handlers": 0.03734568434866355,
        "surface": 0.03734568434866355,
        "actionable": 0.03734568434866355,
        "json": 0.03734568434866355,
        "detail": 0.0746913686973271,
        "field": 0.03734568434866355,
        "common": 0.03734568434866355,
        "runtime": 0.03734568434866355,
        "issues": 0.03734568434866355,
        "4": 0.03734568434866355,
        "data": 0.03734568434866355,
        "model": 0.03734568434866355,
        "python": 0.0746913686973271,
        "pydantic": 0.03734568434866355,
        "dataclasses": 0.0746913686973271,
        "from": 0.0746913686973271,
        "import": 0.0746913686973271,
        "dataclass": 0.2614197904406449,
        "typing": 0.03734568434866355,
        "list": 0.1493827373946542,
        "dict": 0.1493827373946542,
        "optional": 0.0746913686973271,
        "class": 0.2240741060919813,
        "filemeta": 0.0746913686973271,
        "path": 0.03734568434866355,
        "str": 0.6348766339272804,
        "size": 0.03734568434866355,
        "int": 0.03734568434866355,
        "language": 0.03734568434866355,
        "role": 0.03734568434866355,
        "src": 0.03734568434866355,
        "test": 0.0746913686973271,
        "config": 0.03734568434866355,
        "build": 0.03734568434866355,
        "script": 0.03734568434866355,
        "infra": 0.03734568434866355,
        "other": 0.03734568434866355,
        "hash": 0.03734568434866355,
        "repomanifest": 0.0746913686973271,
        "root": 0.03734568434866355,
        "files": 0.03734568434866355,
        "detectors": 0.03734568434866355,
        "build_system": 0.03734568434866355,
        "maven": 0.03734568434866355,
        "framework": 0.0746913686973271,
        "spring": 0.03734568434866355,
        "boot": 0.03734568434866355,
        "dependency_files": 0.03734568434866355,
        "pom": 0.03734568434866355,
        "xml": 0.03734568434866355,
        "requirements": 0.03734568434866355,
        "txt": 0.03734568434866355,
        "signal": 0.0746913686973271,
        "kind": 0.03734568434866355,
        "db": 0.03734568434866355,
        "queue": 0.03734568434866355,
        "dep": 0.03734568434866355,
        "entrypoint": 0.03734568434866355,
        "name": 0.03734568434866355,
        "analysisresult": 0.03734568434866355,
        "manifest": 0.03734568434866355,
        "signals": 0.03734568434866355,
        "embedding_index_path": 0.03734568434866355,
        "sectionspec": 0.03734568434866355,
        "key": 0.03734568434866355,
        "intro": 0.03734568434866355,
        "features": 0.03734568434866355,
        "arch": 0.03734568434866355,
        "quickstart": 0.03734568434866355,
        "required": 0.03734568434866355,
        "bool": 0.03734568434866355,
        "sources": 0.03734568434866355,
        "preferred": 0.03734568434866355,
        "retrieval": 0.03734568434866355,
        "tags": 0.03734568434866355,
        "template_name": 0.03734568434866355,
        "readmedraft": 0.03734568434866355
      },
      "text": "with schema versioning so subsequent runs reuse work when file hashes remain unchanged. ### 3.10 Git Publisher * Creates a branch (e.g., `docgen/readme-update-YYYYMMDD`) and a PR. * PR body explains detected changes and what sections were updated. * Can commit directly (configurable) on init for empty repos. * Applies labels (e.g., `docs:auto`) and updates existing PRs when configured. ### 3.11 Service Mode (FastAPI) * FastAPI app exposes `/init` and `/update` POST endpoints plus `/health` for readiness. * Reuses the orchestrator dependency and executes operations in thread pools to keep the event loop responsive. * CLI `docgen service --host 0.0.0.0 --port 8000` boots the service with authentication hooks ready for future hardening. * Error handlers surface actionable JSON (`detail` field) for common runtime issues. --- ## 4) Data Model (Python `pydantic`/`dataclasses`) ```python from dataclasses import dataclass from typing import List, Dict, Optional @dataclass class FileMeta: path: str size: int language: Optional[str] role: str # src|test|docs|config|build|script|infra|other hash: str @dataclass class RepoManifest: root: str files: List[FileMeta] detectors: Dict[str, str] # {\"build_system\": \"maven\", \"framework\":\"spring-boot\", ...} dependency_files: Dict[str, str] # {\"pom.xml\": \"...\", \"requirements.txt\": \"...\"} @dataclass class Signal: kind: str # \"framework\",\"service\",\"cli\",\"db\",\"queue\",\"dep\",\"entrypoint\",\"test\" name: str detail: Dict[str, str] @dataclass class AnalysisResult: manifest: RepoManifest signals: List[Signal] embedding_index_path: str @dataclass class SectionSpec: key: str # \"intro\",\"features\",\"arch\",\"quickstart\",... required: bool sources: List[str] # preferred retrieval tags template_name: str @dataclass class ReadmeDraft:",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#6",
      "vector": {
        "class": 0.22011272658140596,
        "signal": 0.08804509063256238,
        "kind": 0.04402254531628119,
        "str": 0.6603381797442178,
        "framework": 0.04402254531628119,
        "service": 0.04402254531628119,
        "cli": 0.08804509063256238,
        "db": 0.04402254531628119,
        "queue": 0.04402254531628119,
        "dep": 0.04402254531628119,
        "entrypoint": 0.04402254531628119,
        "test": 0.04402254531628119,
        "name": 0.04402254531628119,
        "detail": 0.04402254531628119,
        "dict": 0.13206763594884358,
        "dataclass": 0.17609018126512477,
        "analysisresult": 0.04402254531628119,
        "manifest": 0.04402254531628119,
        "repomanifest": 0.04402254531628119,
        "signals": 0.04402254531628119,
        "list": 0.13206763594884358,
        "embedding_index_path": 0.04402254531628119,
        "sectionspec": 0.04402254531628119,
        "key": 0.04402254531628119,
        "intro": 0.08804509063256238,
        "features": 0.08804509063256238,
        "arch": 0.04402254531628119,
        "quickstart": 0.08804509063256238,
        "required": 0.04402254531628119,
        "bool": 0.04402254531628119,
        "sources": 0.04402254531628119,
        "preferred": 0.04402254531628119,
        "retrieval": 0.04402254531628119,
        "tags": 0.04402254531628119,
        "template_name": 0.04402254531628119,
        "readmedraft": 0.04402254531628119,
        "sections": 0.04402254531628119,
        "full_markdown": 0.04402254531628119,
        "updateplan": 0.04402254531628119,
        "strategy": 0.04402254531628119,
        "full": 0.04402254531628119,
        "patch": 0.04402254531628119,
        "changed_sections": 0.04402254531628119,
        "reasons": 0.04402254531628119,
        "section": 0.04402254531628119,
        "why": 0.04402254531628119,
        "5": 0.04402254531628119,
        "configuration": 0.08804509063256238,
        "docgen": 0.17609018126512477,
        "yml": 0.04402254531628119,
        "at": 0.04402254531628119,
        "repo": 0.04402254531628119,
        "root": 0.04402254531628119,
        "yaml": 0.04402254531628119,
        "llm": 0.04402254531628119,
        "runner": 0.04402254531628119,
        "ollama": 0.08804509063256238,
        "or": 0.13206763594884358,
        "llama": 0.04402254531628119,
        "cpp": 0.04402254531628119,
        "executable": 0.04402254531628119,
        "optional": 0.08804509063256238,
        "override": 0.04402254531628119,
        "for": 0.04402254531628119,
        "binaries": 0.04402254531628119,
        "model": 0.04402254531628119,
        "llama3": 0.04402254531628119,
        "8b": 0.04402254531628119,
        "instruct": 0.04402254531628119,
        "example": 0.04402254531628119,
        "local": 0.04402254531628119,
        "only": 0.08804509063256238,
        "max_tokens": 0.04402254531628119,
        "2048": 0.04402254531628119,
        "temperature": 0.04402254531628119,
        "0": 0.08804509063256238,
        "2": 0.04402254531628119,
        "readme": 0.13206763594884358,
        "style": 0.04402254531628119,
        "concise": 0.04402254531628119,
        "comprehensive": 0.04402254531628119,
        "template_pack": 0.04402254531628119,
        "enterprise": 0.04402254531628119,
        "bundle": 0.04402254531628119,
        "shipped": 0.04402254531628119,
        "with": 0.04402254531628119,
        "required_sections": 0.04402254531628119,
        "architecture": 0.04402254531628119,
        "build_and_test": 0.04402254531628119,
        "deployment": 0.04402254531628119,
        "troubleshooting": 0.04402254531628119,
        "faq": 0.04402254531628119,
        "license": 0.04402254531628119,
        "validation": 0.04402254531628119,
        "no_hallucination": 0.04402254531628119,
        "true": 0.08804509063256238,
        "set": 0.04402254531628119,
        "to": 0.08804509063256238,
        "false": 0.04402254531628119,
        "use": 0.04402254531628119,
        "docgen_validation_no_hallucination": 0.04402254531628119,
        "disable": 0.04402254531628119,
        "publish": 0.04402254531628119,
        "mode": 0.04402254531628119,
        "pr": 0.13206763594884358,
        "commit": 0.04402254531628119,
        "dry": 0.04402254531628119,
        "run": 0.04402254531628119,
        "branch_prefix": 0.04402254531628119,
        "labels": 0.04402254531628119,
        "docs": 0.04402254531628119,
        "auto": 0.04402254531628119,
        "update_existing": 0.04402254531628119,
        "refresh": 0.04402254531628119,
        "an": 0.04402254531628119,
        "existing": 0.04402254531628119,
        "instead": 0.04402254531628119,
        "of": 0.04402254531628119,
        "opening": 0.04402254531628119,
        "a": 0.04402254531628119,
        "new": 0.04402254531628119,
        "one": 0.04402254531628119,
        "analyzers": 0.04402254531628119,
        "enabled": 0.04402254531628119,
        "language": 0.04402254531628119,
        "build": 0.08804509063256238,
        "dependencies": 0.04402254531628119,
        "patterns": 0.04402254531628119,
        "exclude_paths": 0.04402254531628119,
        "git": 0.04402254531628119,
        "node_modules": 0.04402254531628119,
        "dist": 0.04402254531628119,
        "ci": 0.04402254531628119,
        "update": 0.04402254531628119,
        "if": 0.08804509063256238,
        "these": 0.04402254531628119,
        "paths": 0.04402254531628119,
        "change": 0.04402254531628119,
        "watched_globs": 0.04402254531628119,
        "src": 0.04402254531628119,
        "app": 0.04402254531628119,
        "cmd": 0.04402254531628119,
        "pom": 0.04402254531628119,
        "xml": 0.04402254531628119,
        "gradle": 0.04402254531628119,
        "package": 0.04402254531628119,
        "json": 0.04402254531628119,
        "requirements": 0.04402254531628119,
        "txt": 0.04402254531628119,
        "pyproject": 0.04402254531628119,
        "toml": 0.04402254531628119,
        "dockerfile": 0.04402254531628119,
        "no": 0.04402254531628119,
        "templates_dir": 0.04402254531628119,
        "is": 0.04402254531628119,
        "provided": 0.04402254531628119
      },
      "text": "class Signal: kind: str # \"framework\",\"service\",\"cli\",\"db\",\"queue\",\"dep\",\"entrypoint\",\"test\" name: str detail: Dict[str, str] @dataclass class AnalysisResult: manifest: RepoManifest signals: List[Signal] embedding_index_path: str @dataclass class SectionSpec: key: str # \"intro\",\"features\",\"arch\",\"quickstart\",... required: bool sources: List[str] # preferred retrieval tags template_name: str @dataclass class ReadmeDraft: sections: Dict[str, str] full_markdown: str @dataclass class UpdatePlan: strategy: str # \"full\"|\"patch\" changed_sections: List[str] reasons: Dict[str, str] # section->why ``` --- ## 5) Configuration (`.docgen.yml` at repo root) ```yaml llm: runner: \"ollama\" # or \"llama.cpp\" executable: \"ollama\" # optional override for CLI binaries model: \"llama3:8b-instruct\" # example; local only max_tokens: 2048 temperature: 0.2 readme: style: \"concise\" # or \"comprehensive\" template_pack: \"enterprise\" # optional bundle shipped with docgen required_sections: - intro - features - architecture - quickstart - configuration - build_and_test - deployment - troubleshooting - faq - license validation: no_hallucination: true # set to false or use DOCGEN_VALIDATION_NO_HALLUCINATION=0 to disable publish: mode: \"pr\" # \"commit\" | \"pr\" | \"dry-run\" branch_prefix: \"docgen/\" labels: - \"docs:auto\" update_existing: true # refresh an existing PR instead of opening a new one analyzers: enabled: - language - build - dependencies - patterns exclude_paths: - \".git/\" - \"node_modules/\" - \"dist/\" ci: # Only update README if these paths change watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" - \"requirements.txt\" - \"pyproject.toml\" - \"Dockerfile\" ``` > If no `readme.templates_dir` is provided, docgen",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#7",
      "vector": {
        "node_modules": 0.05006261743217589,
        "dist": 0.05006261743217589,
        "ci": 0.15018785229652767,
        "only": 0.10012523486435178,
        "update": 0.15018785229652767,
        "readme": 0.25031308716087947,
        "if": 0.15018785229652767,
        "these": 0.05006261743217589,
        "paths": 0.05006261743217589,
        "change": 0.05006261743217589,
        "watched_globs": 0.10012523486435178,
        "src": 0.10012523486435178,
        "app": 0.05006261743217589,
        "cmd": 0.05006261743217589,
        "pom": 0.10012523486435178,
        "xml": 0.10012523486435178,
        "build": 0.25031308716087947,
        "gradle": 0.10012523486435178,
        "package": 0.05006261743217589,
        "json": 0.05006261743217589,
        "requirements": 0.05006261743217589,
        "txt": 0.05006261743217589,
        "pyproject": 0.05006261743217589,
        "toml": 0.05006261743217589,
        "dockerfile": 0.10012523486435178,
        "no": 0.10012523486435178,
        "templates_dir": 0.05006261743217589,
        "is": 0.05006261743217589,
        "provided": 0.05006261743217589,
        "docgen": 0.25031308716087947,
        "automatically": 0.05006261743217589,
        "picks": 0.05006261743217589,
        "up": 0.05006261743217589,
        "docs": 0.05006261743217589,
        "templates": 0.10012523486435178,
        "bundles": 0.05006261743217589,
        "in": 0.10012523486435178,
        "the": 0.05006261743217589,
        "repository": 0.05006261743217589,
        "root": 0.05006261743217589,
        "and": 0.10012523486435178,
        "supports": 0.05006261743217589,
        "built": 0.05006261743217589,
        "template": 0.05006261743217589,
        "packs": 0.05006261743217589,
        "via": 0.10012523486435178,
        "template_pack": 0.05006261743217589,
        "6": 0.25031308716087947,
        "workflows": 0.05006261743217589,
        "1": 0.15018785229652767,
        "initialization": 0.05006261743217589,
        "repo": 0.05006261743217589,
        "without": 0.10012523486435178,
        "scan": 0.05006261743217589,
        "analyze": 0.05006261743217589,
        "manifest": 0.05006261743217589,
        "signals": 0.05006261743217589,
        "embeddings": 0.05006261743217589,
        "2": 0.15018785229652767,
        "prompt": 0.05006261743217589,
        "with": 0.10012523486435178,
        "default": 0.05006261743217589,
        "include": 0.05006261743217589,
        "getting": 0.05006261743217589,
        "started": 0.05006261743217589,
        "suggestions": 0.05006261743217589,
        "3": 0.15018785229652767,
        "generate": 0.10012523486435178,
        "sections": 0.20025046972870356,
        "sequentially": 0.05006261743217589,
        "streaming": 0.05006261743217589,
        "4": 0.10012523486435178,
        "post": 0.10012523486435178,
        "process": 0.10012523486435178,
        "toc": 0.05006261743217589,
        "badges": 0.05006261743217589,
        "status": 0.05006261743217589,
        "placeholder": 0.05006261743217589,
        "lint": 0.05006261743217589,
        "5": 0.10012523486435178,
        "publish": 0.05006261743217589,
        "direct": 0.05006261743217589,
        "commit": 0.10012523486435178,
        "md": 0.05006261743217589,
        "artifacts": 0.05006261743217589,
        "on": 0.05006261743217589,
        "pr": 0.10012523486435178,
        "detect": 0.05006261743217589,
        "changes": 0.05006261743217589,
        "git": 0.05006261743217589,
        "diff": 0.05006261743217589,
        "map": 0.05006261743217589,
        "files": 0.05006261743217589,
        "to": 0.15018785229652767,
        "using": 0.05006261743217589,
        "a": 0.05006261743217589,
        "rules": 0.05006261743217589,
        "matrix": 0.05006261743217589,
        "test": 0.05006261743217589,
        "quick": 0.05006261743217589,
        "start": 0.05006261743217589,
        "k8s": 0.05006261743217589,
        "deployment": 0.05006261743217589,
        "entrypoints": 0.05006261743217589,
        "architecture": 0.05006261743217589,
        "features": 0.05006261743217589,
        "decide": 0.05006261743217589,
        "updateplan": 0.05006261743217589,
        "patch": 0.05006261743217589,
        "impacted": 0.05006261743217589,
        "regenerate": 0.15018785229652767,
        "those": 0.05006261743217589,
        "skip": 0.05006261743217589,
        "changed": 0.05006261743217589,
        "file": 0.05006261743217589,
        "matches": 0.05006261743217589,
        "yml": 0.05006261743217589,
        "allows": 0.05006261743217589,
        "avoid": 0.05006261743217589,
        "unnecessary": 0.05006261743217589,
        "runs": 0.05006261743217589,
        "rag": 0.05006261743217589,
        "retrieval": 0.05006261743217589,
        "fetch": 0.05006261743217589,
        "top": 0.05006261743217589,
        "k": 0.05006261743217589,
        "chunks": 0.05006261743217589,
        "relevant": 0.05006261743217589,
        "each": 0.05006261743217589,
        "section": 0.10012523486435178,
        "open": 0.05006261743217589,
        "summary": 0.05006261743217589,
        "of": 0.05006261743217589,
        "deltas": 0.05006261743217589,
        "dry": 0.10012523486435178,
        "run": 0.10012523486435178,
        "support": 0.05006261743217589,
        "computes": 0.05006261743217589,
        "diffs": 0.05006261743217589,
        "scorecards": 0.05006261743217589,
        "writing": 0.05006261743217589,
        "or": 0.10012523486435178,
        "publishing": 0.05006261743217589,
        "manual": 0.05006261743217589,
        "full": 0.05006261743217589,
        "intro": 0.05006261743217589,
        "arch": 0.05006261743217589,
        "7": 0.05006261743217589,
        "contract": 0.05006261743217589
      },
      "text": "- \"node_modules/\" - \"dist/\" ci: # Only update README if these paths change watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" - \"requirements.txt\" - \"pyproject.toml\" - \"Dockerfile\" ``` > If no `readme.templates_dir` is provided, docgen automatically picks up `docs/templates/` bundles in the repository root and supports built-in template packs via `readme.template_pack`. --- ## 6) Workflows ### 6.1 Initialization (Repo without README) 1. **Scan & Analyze** \u2192 Manifest + Signals + Embeddings. 2. **Prompt Build** with default templates, include \u201cgetting started\u201d suggestions. 3. **Generate Sections** sequentially (streaming). 4. **Post-process** \u2192 ToC, badges (build status placeholder), lint. 5. **Publish**: direct commit `README.md` + `.docgen/` artifacts. ### 6.2 Update on Commit/PR 1. **Detect changes** via Git diff; map files to sections using a rules matrix: * `pom.xml`/`build.gradle` \u2192 *Build & Test*, *Quick Start*. * `Dockerfile`/`k8s` \u2192 *Deployment*. * `src/**` entrypoints \u2192 *Architecture*, *Features*. 2. **Decide UpdatePlan**: patch impacted sections; regenerate only those. 3. **Skip** if no changed file matches `.docgen.yml` `ci.watched_globs` (allows CI to avoid unnecessary runs). 4. **RAG retrieval**: fetch top-k chunks relevant to each section. 5. **Generate** \u2192 **Post-process** \u2192 **Open PR** with summary of deltas. 6. Dry-run support: `docgen update --dry-run` computes diffs and scorecards without writing or publishing. ### 6.3 Regenerate (Manual) * `docgen regenerate --full` or `--sections intro,arch`. --- ## 7) Section Contract",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#8",
      "vector": {
        "generate": 0.05923488777590923,
        "post": 0.11846977555181847,
        "process": 0.05923488777590923,
        "open": 0.05923488777590923,
        "pr": 0.05923488777590923,
        "with": 0.05923488777590923,
        "summary": 0.05923488777590923,
        "of": 0.05923488777590923,
        "deltas": 0.05923488777590923,
        "6": 0.11846977555181847,
        "dry": 0.11846977555181847,
        "run": 0.11846977555181847,
        "support": 0.11846977555181847,
        "docgen": 0.11846977555181847,
        "update": 0.05923488777590923,
        "computes": 0.05923488777590923,
        "diffs": 0.05923488777590923,
        "and": 0.11846977555181847,
        "scorecards": 0.05923488777590923,
        "without": 0.05923488777590923,
        "writing": 0.05923488777590923,
        "or": 0.1777046633277277,
        "publishing": 0.05923488777590923,
        "3": 0.05923488777590923,
        "regenerate": 0.11846977555181847,
        "manual": 0.05923488777590923,
        "full": 0.05923488777590923,
        "sections": 0.05923488777590923,
        "intro": 0.11846977555181847,
        "arch": 0.05923488777590923,
        "7": 0.05923488777590923,
        "section": 0.23693955110363693,
        "contract": 0.05923488777590923,
        "readme": 0.05923488777590923,
        "what": 0.05923488777590923,
        "why": 0.05923488777590923,
        "who": 0.05923488777590923,
        "it": 0.05923488777590923,
        "s": 0.05923488777590923,
        "for": 0.05923488777590923,
        "key": 0.05923488777590923,
        "features": 0.05923488777590923,
        "bullets": 0.05923488777590923,
        "grounded": 0.05923488777590923,
        "in": 0.05923488777590923,
        "real": 0.05923488777590923,
        "repo": 0.11846977555181847,
        "signals": 0.11846977555181847,
        "architecture": 0.05923488777590923,
        "overview": 0.05923488777590923,
        "diagram": 0.05923488777590923,
        "ascii": 0.05923488777590923,
        "components": 0.05923488777590923,
        "quick": 0.05923488777590923,
        "start": 0.05923488777590923,
        "minimal": 0.05923488777590923,
        "commands": 0.23693955110363693,
        "per": 0.11846977555181847,
        "build": 0.11846977555181847,
        "system": 0.11846977555181847,
        "configuration": 0.05923488777590923,
        "env": 0.05923488777590923,
        "vars": 0.05923488777590923,
        "files": 0.05923488777590923,
        "examples": 0.05923488777590923,
        "test": 0.05923488777590923,
        "coverage": 0.05923488777590923,
        "hint": 0.05923488777590923,
        "deployment": 0.05923488777590923,
        "container": 0.05923488777590923,
        "k8s": 0.05923488777590923,
        "instructions": 0.05923488777590923,
        "if": 0.1777046633277277,
        "detected": 0.1777046633277277,
        "troubleshooting": 0.05923488777590923,
        "common": 0.05923488777590923,
        "failures": 0.05923488777590923,
        "faq": 0.05923488777590923,
        "5": 0.05923488777590923,
        "10": 0.05923488777590923,
        "concise": 0.05923488777590923,
        "q": 0.05923488777590923,
        "a": 0.11846977555181847,
        "contributing": 0.11846977555181847,
        "md": 0.05923488777590923,
        "absent": 0.05923488777590923,
        "license": 0.05923488777590923,
        "templated": 0.05923488777590923,
        "each": 0.05923488777590923,
        "must": 0.05923488777590923,
        "be": 0.11846977555181847,
        "independently": 0.05923488777590923,
        "regenerable": 0.05923488777590923,
        "self": 0.05923488777590923,
        "contained": 0.05923488777590923,
        "8": 0.05923488777590923,
        "prompting": 0.05923488777590923,
        "strategy": 0.05923488777590923,
        "local": 0.05923488777590923,
        "llm": 0.05923488777590923,
        "message": 0.11846977555181847,
        "fixed": 0.05923488777590923,
        "guardrails": 0.05923488777590923,
        "you": 0.05923488777590923,
        "are": 0.05923488777590923,
        "senior": 0.05923488777590923,
        "dev": 0.05923488777590923,
        "doc": 0.05923488777590923,
        "writer": 0.05923488777590923,
        "precise": 0.05923488777590923,
        "cite": 0.05923488777590923,
        "facts": 0.05923488777590923,
        "only": 0.05923488777590923,
        "no": 0.05923488777590923,
        "speculation": 0.05923488777590923,
        "never": 0.05923488777590923,
        "invent": 0.05923488777590923,
        "prefer": 0.05923488777590923,
        "by": 0.05923488777590923,
        "analyzers": 0.05923488777590923,
        "user": 0.05923488777590923,
        "objective": 0.05923488777590923,
        "constraints": 0.05923488777590923,
        "tone": 0.05923488777590923,
        "length": 0.05923488777590923,
        "inject": 0.05923488777590923,
        "top": 0.05923488777590923,
        "k": 0.05923488777590923,
        "chunks": 0.05923488777590923,
        "rag": 0.05923488777590923,
        "provide": 0.05923488777590923,
        "style": 0.05923488777590923,
        "tokens": 0.05923488777590923,
        "headings": 0.05923488777590923,
        "code": 0.05923488777590923,
        "blocks": 0.05923488777590923,
        "tables": 0.05923488777590923,
        "filters": 0.05923488777590923,
        "refuse": 0.05923488777590923,
        "insufficient": 0.05923488777590923,
        "evidence": 0.05923488777590923,
        "fall": 0.05923488777590923,
        "back": 0.05923488777590923,
        "to": 0.05923488777590923,
        "template": 0.05923488777590923,
        "stubs": 0.05923488777590923,
        "9": 0.05923488777590923,
        "language": 0.05923488777590923,
        "project": 0.05923488777590923,
        "poc": 0.11846977555181847,
        "targets": 0.05923488777590923,
        "tier": 0.11846977555181847,
        "1": 0.05923488777590923,
        "python": 0.05923488777590923,
        "poetry": 0.05923488777590923,
        "setuptools": 0.05923488777590923,
        "java": 0.05923488777590923,
        "maven": 0.05923488777590923,
        "gradle": 0.05923488777590923,
        "spring": 0.05923488777590923,
        "boot": 0.05923488777590923,
        "node": 0.05923488777590923,
        "js": 0.05923488777590923,
        "npm": 0.05923488777590923,
        "pnpm": 0.05923488777590923,
        "express": 0.05923488777590923,
        "next": 0.05923488777590923,
        "2": 0.05923488777590923,
        "soon": 0.05923488777590923,
        "go": 0.05923488777590923,
        "modules": 0.05923488777590923
      },
      "text": "**Generate** \u2192 **Post-process** \u2192 **Open PR** with summary of deltas. 6. Dry-run support: `docgen update --dry-run` computes diffs and scorecards without writing or publishing. ### 6.3 Regenerate (Manual) * `docgen regenerate --full` or `--sections intro,arch`. --- ## 7) Section Contract (README) * **Intro**: what, why, who it\u2019s for * **Key Features**: bullets grounded in real repo signals * **Architecture**: overview diagram (ASCII) + components * **Quick Start**: minimal commands (per build system) * **Configuration**: env vars, files, examples * **Build & Test**: commands, coverage hint * **Deployment**: container/K8s instructions if detected * **Troubleshooting**: common failures * **FAQ**: 5\u201310 concise Q\\&A * **Contributing** (if `CONTRIBUTING.md` absent) * **License** (detected or templated) > Each section must be independently regenerable and self-contained. --- ## 8) Prompting Strategy (Local LLM) * **System message (fixed guardrails)**: * \u201cYou are a senior dev doc writer. Be precise. Cite repo facts only. No speculation.\u201d * \u201cNever invent commands. Prefer commands detected by analyzers.\u201d * **User message per section**: * Section objective + constraints (tone, length). * Inject **Signals** + **Top-k chunks** (RAG). * Provide **style tokens** (headings, code blocks, tables). * **Post-filters**: refuse if insufficient evidence; fall back to template stubs. --- ## 9) Language & Project Support (POC targets) * **Tier-1 (POC)**: Python (Poetry/Setuptools), Java (Maven/Gradle, Spring Boot), Node.js (npm/pnpm, Express/Next). * **Tier-2 (soon)**: Go (modules),",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#9",
      "vector": {
        "code": 0.0636929755298482,
        "blocks": 0.0318464877649241,
        "tables": 0.0318464877649241,
        "post": 0.0636929755298482,
        "filters": 0.0318464877649241,
        "refuse": 0.0318464877649241,
        "if": 0.0318464877649241,
        "insufficient": 0.0318464877649241,
        "evidence": 0.0318464877649241,
        "fall": 0.0318464877649241,
        "back": 0.0318464877649241,
        "to": 0.0318464877649241,
        "template": 0.0318464877649241,
        "stubs": 0.0636929755298482,
        "9": 0.0318464877649241,
        "language": 0.0636929755298482,
        "project": 0.0318464877649241,
        "support": 0.0318464877649241,
        "poc": 0.0636929755298482,
        "targets": 0.0318464877649241,
        "tier": 0.0636929755298482,
        "1": 0.0318464877649241,
        "python": 0.0955394632947723,
        "poetry": 0.0318464877649241,
        "setuptools": 0.0318464877649241,
        "java": 0.0318464877649241,
        "maven": 0.0318464877649241,
        "gradle": 0.0318464877649241,
        "spring": 0.0636929755298482,
        "boot": 0.0318464877649241,
        "node": 0.0318464877649241,
        "js": 0.0318464877649241,
        "npm": 0.0318464877649241,
        "pnpm": 0.0318464877649241,
        "express": 0.0318464877649241,
        "next": 0.0318464877649241,
        "2": 0.0318464877649241,
        "soon": 0.0318464877649241,
        "go": 0.0318464877649241,
        "modules": 0.0318464877649241,
        "rust": 0.0318464877649241,
        "cargo": 0.0318464877649241,
        "ruby": 0.0318464877649241,
        "bundler": 0.0318464877649241,
        "php": 0.0318464877649241,
        "composer": 0.0318464877649241,
        "detection": 0.0318464877649241,
        "via": 0.0318464877649241,
        "file": 0.0318464877649241,
        "heuristics": 0.0318464877649241,
        "optional": 0.0636929755298482,
        "tree": 0.0318464877649241,
        "sitter": 0.0318464877649241,
        "for": 0.0636929755298482,
        "function": 0.0318464877649241,
        "class": 0.0636929755298482,
        "extraction": 0.0318464877649241,
        "pluggable": 0.0318464877649241,
        "entry": 0.0318464877649241,
        "points": 0.0318464877649241,
        "main": 0.0636929755298482,
        "springbootapplication": 0.0318464877649241,
        "fastapi": 0.0636929755298482,
        "app": 0.1273859510596964,
        "bin": 0.0318464877649241,
        "cmd": 0.0318464877649241,
        "10": 0.0318464877649241,
        "interfaces": 0.0318464877649241,
        "skeleton": 0.0318464877649241,
        "docgen": 0.0318464877649241,
        "__init__": 0.0318464877649241,
        "py": 0.7961621941231025,
        "cli": 0.0955394632947723,
        "click": 0.0318464877649241,
        "typer": 0.0636929755298482,
        "failsafe": 0.0318464877649241,
        "fail": 0.0318464877649241,
        "safe": 0.0318464877649241,
        "readme": 0.0318464877649241,
        "logging": 0.0636929755298482,
        "configuration": 0.0318464877649241,
        "helpers": 0.0318464877649241,
        "orchestrator": 0.0318464877649241,
        "repo_scanner": 0.0318464877649241,
        "analyzers": 0.0318464877649241,
        "base": 0.0318464877649241,
        "analyzer": 0.0955394632947723,
        "abc": 0.1592324388246205,
        "build": 0.0318464877649241,
        "dependencies": 0.0318464877649241,
        "entrypoints": 0.0318464877649241,
        "patterns": 0.0318464877649241,
        "rag": 0.0318464877649241,
        "embedder": 0.0318464877649241,
        "local": 0.0318464877649241,
        "embedding": 0.0318464877649241,
        "model": 0.0318464877649241,
        "store": 0.0318464877649241,
        "prompting": 0.0318464877649241,
        "builder": 0.0318464877649241,
        "jinja2": 0.0318464877649241,
        "templates": 0.0636929755298482,
        "token": 0.0318464877649241,
        "mgmt": 0.0318464877649241,
        "constants": 0.0318464877649241,
        "j2": 0.0318464877649241,
        "per": 0.0318464877649241,
        "section": 0.0318464877649241,
        "llm": 0.0318464877649241,
        "runner": 0.0318464877649241,
        "adapter": 0.0318464877649241,
        "ollama": 0.0318464877649241,
        "llama": 0.0318464877649241,
        "cpp": 0.0318464877649241,
        "postproc": 0.0318464877649241,
        "lint": 0.0318464877649241,
        "links": 0.0318464877649241,
        "markers": 0.0318464877649241,
        "toc": 0.0318464877649241,
        "git": 0.0318464877649241,
        "diff": 0.0318464877649241,
        "publisher": 0.0318464877649241,
        "config": 0.0318464877649241,
        "models": 0.0636929755298482,
        "from": 0.0636929755298482,
        "import": 0.0636929755298482,
        "abstractmethod": 0.0955394632947723,
        "repomanifest": 0.0955394632947723,
        "signal": 0.0636929755298482,
        "def": 0.1592324388246205,
        "supports": 0.0318464877649241,
        "self": 0.0636929755298482,
        "manifest": 0.0636929755298482,
        "bool": 0.0955394632947723,
        "analyze": 0.0318464877649241,
        "list": 0.0318464877649241,
        "command": 0.0955394632947723,
        "init": 0.0318464877649241,
        "path": 0.0636929755298482,
        "str": 0.1592324388246205,
        "publish": 0.0318464877649241,
        "true": 0.0318464877649241,
        "update": 0.0318464877649241,
        "event": 0.0318464877649241,
        "commit": 0.0318464877649241,
        "diff_base": 0.0318464877649241,
        "origin": 0.0318464877649241,
        "regenerate": 0.0318464877649241,
        "sections": 0.0318464877649241,
        "full": 0.0318464877649241,
        "false": 0.0318464877649241,
        "service": 0.0318464877649241,
        "mode": 0.0318464877649241
      },
      "text": "code blocks, tables). * **Post-filters**: refuse if insufficient evidence; fall back to template stubs. --- ## 9) Language & Project Support (POC targets) * **Tier-1 (POC)**: Python (Poetry/Setuptools), Java (Maven/Gradle, Spring Boot), Node.js (npm/pnpm, Express/Next). * **Tier-2 (soon)**: Go (modules), Rust (Cargo), Ruby (Bundler), PHP (Composer). * Detection via: * File heuristics + optional tree-sitter for function/class extraction (pluggable). * Entry points: `main()`; Spring `@SpringBootApplication`; FastAPI app; `bin/`, `cmd/`. --- ## 10) Interfaces (Code Skeleton) ``` docgen/ __init__.py cli.py # click/typer CLI failsafe.py # fail-safe README stubs logging.py # logging configuration helpers orchestrator.py repo_scanner.py analyzers/ base.py # Analyzer ABC language.py build.py dependencies.py entrypoints.py patterns.py rag/ embedder.py # local embedding model store.py prompting/ builder.py # Jinja2 templates, token mgmt constants.py templates/ # *.j2 per section llm/ runner.py # adapter for ollama/llama.cpp postproc/ lint.py links.py markers.py toc.py git/ diff.py publisher.py config.py models.py ``` **Analyzer ABC** ```python from abc import ABC, abstractmethod from .models import RepoManifest, Signal class Analyzer(ABC): @abstractmethod def supports(self, manifest: RepoManifest) -> bool: ... @abstractmethod def analyze(self, manifest: RepoManifest) -> list[Signal]: ... ``` **CLI (Typer)** ```python @app.command() def init(path: str = \".\", publish: bool = True): ... @app.command() def update(path: str = \".\", event: str = \"commit\", diff_base: str = \"origin/main\"): ... @app.command() def regenerate(sections: str = \"\", full: bool = False): ... ``` **FastAPI (optional service mode)** * `POST",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#10",
      "vector": {
        "publish": 0.17586311452816478,
        "bool": 0.11724207635210984,
        "true": 0.05862103817605492,
        "app": 0.17586311452816478,
        "command": 0.11724207635210984,
        "def": 0.11724207635210984,
        "update": 0.17586311452816478,
        "path": 0.11724207635210984,
        "str": 0.23448415270421968,
        "event": 0.05862103817605492,
        "commit": 0.11724207635210984,
        "diff_base": 0.05862103817605492,
        "origin": 0.05862103817605492,
        "main": 0.05862103817605492,
        "regenerate": 0.05862103817605492,
        "sections": 0.23448415270421968,
        "full": 0.05862103817605492,
        "false": 0.05862103817605492,
        "fastapi": 0.05862103817605492,
        "optional": 0.11724207635210984,
        "service": 0.05862103817605492,
        "mode": 0.05862103817605492,
        "post": 0.35172622905632955,
        "analyze": 0.05862103817605492,
        "generate": 0.05862103817605492,
        "arch": 0.05862103817605492,
        "quickstart": 0.17586311452816478,
        "get": 0.05862103817605492,
        "status": 0.05862103817605492,
        "run_id": 0.05862103817605492,
        "11": 0.05862103817605492,
        "change": 0.05862103817605492,
        "impact": 0.05862103817605492,
        "matrix": 0.05862103817605492,
        "examples": 0.05862103817605492,
        "changed": 0.11724207635210984,
        "pattern": 0.05862103817605492,
        "to": 0.11724207635210984,
        "rebuild": 0.05862103817605492,
        "notes": 0.05862103817605492,
        "pom": 0.05862103817605492,
        "xml": 0.05862103817605492,
        "build": 0.23448415270421968,
        "gradle": 0.05862103817605492,
        "_and": 0.11724207635210984,
        "_test": 0.11724207635210984,
        "recompute": 0.05862103817605492,
        "commands": 0.05862103817605492,
        "requirements": 0.05862103817605492,
        "txt": 0.05862103817605492,
        "pyproject": 0.05862103817605492,
        "toml": 0.05862103817605492,
        "install": 0.05862103817605492,
        "steps": 0.05862103817605492,
        "dockerfile": 0.05862103817605492,
        "k8s": 0.05862103817605492,
        "deployment": 0.05862103817605492,
        "container": 0.05862103817605492,
        "changes": 0.05862103817605492,
        "src": 0.05862103817605492,
        "cmd": 0.05862103817605492,
        "features": 0.05862103817605492,
        "architecture": 0.17586311452816478,
        "if": 0.05862103817605492,
        "entrypoint": 0.05862103817605492,
        "intro": 0.05862103817605492,
        "too": 0.05862103817605492,
        "docs": 0.05862103817605492,
        "all": 0.05862103817605492,
        "patch": 0.05862103817605492,
        "prefer": 0.05862103817605492,
        "doc": 0.05862103817605492,
        "driven": 0.05862103817605492,
        "readme": 0.11724207635210984,
        "md": 0.05862103817605492,
        "none": 0.05862103817605492,
        "unless": 0.05862103817605492,
        "empty": 0.05862103817605492,
        "prevent": 0.05862103817605492,
        "loops": 0.05862103817605492,
        "12": 0.05862103817605492,
        "processing": 0.05862103817605492,
        "rules": 0.05862103817605492,
        "headings": 0.05862103817605492,
        "start": 0.05862103817605492,
        "at": 0.05862103817605492,
        "for": 0.11724207635210984,
        "title": 0.05862103817605492,
        "then": 0.05862103817605492,
        "add": 0.05862103817605492,
        "auto": 0.05862103817605492,
        "toc": 0.05862103817605492,
        "level": 0.05862103817605492,
        "3": 0.05862103817605492,
        "validate": 0.05862103817605492,
        "code": 0.05862103817605492,
        "blocks": 0.05862103817605492,
        "bash": 0.05862103817605492,
        "python": 0.05862103817605492,
        "convert": 0.05862103817605492,
        "absolute": 0.05862103817605492,
        "github": 0.05862103817605492,
        "links": 0.05862103817605492,
        "relative": 0.05862103817605492,
        "where": 0.05862103817605492,
        "possible": 0.05862103817605492,
        "ensure": 0.05862103817605492,
        "idempotency": 0.05862103817605492,
        "only": 0.05862103817605492,
        "edit": 0.05862103817605492,
        "between": 0.05862103817605492,
        "managed": 0.05862103817605492,
        "markers": 0.11724207635210984,
        "docgen": 0.11724207635210984,
        "begin": 0.05862103817605492,
        "end": 0.05862103817605492,
        "13": 0.05862103817605492,
        "git": 0.05862103817605492,
        "ci": 0.05862103817605492,
        "integration": 0.05862103817605492,
        "local": 0.05862103817605492,
        "pre": 0.05862103817605492,
        "forbid": 0.05862103817605492,
        "direct": 0.05862103817605492,
        "edits": 0.05862103817605492,
        "outside": 0.05862103817605492,
        "merge": 0.05862103817605492,
        "checkout": 0.05862103817605492,
        "remind": 0.05862103817605492
      },
      "text": "= \".\", publish: bool = True): ... @app.command() def update(path: str = \".\", event: str = \"commit\", diff_base: str = \"origin/main\"): ... @app.command() def regenerate(sections: str = \"\", full: bool = False): ... ``` **FastAPI (optional service mode)** * `POST /analyze` * `POST /generate?sections=arch,quickstart` * `POST /publish` * `GET /status/{run_id}` --- ## 11) Change Impact Matrix (examples) | Changed Path Pattern | Sections to Rebuild | Notes | | ------------------------------------ | ---------------------------- | --------------------------------------- | | `pom.xml`, `build.gradle*` | build\\_and\\_test, quickstart | Recompute build commands | | `requirements.txt`, `pyproject.toml` | build\\_and\\_test, quickstart | Update install steps | | `Dockerfile`, `k8s/**` | deployment | Publish container changes | | `src/**`, `app/**`, `cmd/**` | features, architecture | If entrypoint changed, update intro too | | `docs/**` | all (patch) | Prefer doc-driven | | `README.md` | none (unless empty) | Prevent loops | --- ## 12) Post-Processing Rules * Headings start at `#` for title then `##` for sections. * Add **auto ToC** (<= level 3). * Validate code blocks (` ```bash`, ` ```python`). * Convert absolute GitHub links to relative where possible. * Ensure **idempotency**: only edit between managed markers: * `<!-- docgen:begin:architecture -->` \u2026 `<!-- docgen:end:architecture -->` --- ## 13) Git & CI Integration ### Local * **pre-commit**: forbid direct README edits outside markers (optional). * **post-merge / post-checkout**: remind",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#11",
      "vector": {
        "possible": 0.11162911443718952,
        "ensure": 0.05581455721859476,
        "idempotency": 0.05581455721859476,
        "only": 0.16744367165578428,
        "edit": 0.05581455721859476,
        "between": 0.05581455721859476,
        "managed": 0.05581455721859476,
        "markers": 0.11162911443718952,
        "docgen": 0.22325822887437904,
        "begin": 0.05581455721859476,
        "architecture": 0.11162911443718952,
        "end": 0.05581455721859476,
        "13": 0.05581455721859476,
        "git": 0.11162911443718952,
        "ci": 0.11162911443718952,
        "integration": 0.05581455721859476,
        "local": 0.16744367165578428,
        "pre": 0.05581455721859476,
        "commit": 0.05581455721859476,
        "forbid": 0.05581455721859476,
        "direct": 0.05581455721859476,
        "readme": 0.05581455721859476,
        "edits": 0.05581455721859476,
        "outside": 0.05581455721859476,
        "optional": 0.16744367165578428,
        "post": 0.16744367165578428,
        "merge": 0.05581455721859476,
        "checkout": 0.11162911443718952,
        "remind": 0.05581455721859476,
        "to": 0.05581455721859476,
        "run": 0.05581455721859476,
        "update": 0.16744367165578428,
        "github": 0.11162911443718952,
        "gitlab": 0.05581455721859476,
        "bitbucket": 0.05581455721859476,
        "on": 0.05581455721859476,
        "push": 0.05581455721859476,
        "pr": 0.2790727860929738,
        "1": 0.11162911443718952,
        "repo": 0.11162911443718952,
        "2": 0.16744367165578428,
        "event": 0.05581455721859476,
        "diff": 0.11162911443718952,
        "base": 0.05581455721859476,
        "base_sha": 0.05581455721859476,
        "3": 0.05581455721859476,
        "if": 0.16744367165578428,
        "changes": 0.05581455721859476,
        "open": 0.05581455721859476,
        "with": 0.05581455721859476,
        "labeled": 0.05581455721859476,
        "docs": 0.11162911443718952,
        "auto": 0.05581455721859476,
        "tokenless": 0.05581455721859476,
        "mode": 0.05581455721859476,
        "created": 0.05581455721859476,
        "from": 0.05581455721859476,
        "a": 0.05581455721859476,
        "app": 0.05581455721859476,
        "bot": 0.05581455721859476,
        "account": 0.05581455721859476,
        "14": 0.05581455721859476,
        "quality": 0.05581455721859476,
        "gates": 0.05581455721859476,
        "evaluation": 0.05581455721859476,
        "consistency": 0.05581455721859476,
        "checks": 0.05581455721859476,
        "commands": 0.11162911443718952,
        "exist": 0.05581455721859476,
        "in": 0.11162911443718952,
        "ports": 0.05581455721859476,
        "env": 0.05581455721859476,
        "vars": 0.05581455721859476,
        "match": 0.05581455721859476,
        "configs": 0.05581455721859476,
        "no": 0.11162911443718952,
        "hallucinations": 0.05581455721859476,
        "reject": 0.05581455721859476,
        "new": 0.05581455721859476,
        "facts": 0.05581455721859476,
        "not": 0.05581455721859476,
        "found": 0.11162911443718952,
        "signals": 0.05581455721859476,
        "rag": 0.11162911443718952,
        "style": 0.05581455721859476,
        "concise": 0.05581455721859476,
        "paragraphs": 0.05581455721859476,
        "actionable": 0.05581455721859476,
        "filler": 0.05581455721859476,
        "marketing": 0.05581455721859476,
        "scorecard": 0.05581455721859476,
        "0": 0.05581455721859476,
        "100": 0.05581455721859476,
        "coverage": 0.05581455721859476,
        "of": 0.11162911443718952,
        "required": 0.05581455721859476,
        "sections": 0.05581455721859476,
        "30": 0.05581455721859476,
        "buildability": 0.05581455721859476,
        "quick": 0.05581455721859476,
        "start": 0.05581455721859476,
        "20": 0.11162911443718952,
        "link": 0.05581455721859476,
        "validity": 0.05581455721859476,
        "10": 0.16744367165578428,
        "alignment": 0.05581455721859476,
        "w": 0.05581455721859476,
        "change": 0.05581455721859476,
        "set": 0.05581455721859476,
        "lint": 0.05581455721859476,
        "reviewer": 0.05581455721859476,
        "feedback": 0.05581455721859476,
        "loop": 0.05581455721859476,
        "15": 0.05581455721859476,
        "security": 0.05581455721859476,
        "privacy": 0.05581455721859476,
        "llm": 0.11162911443718952,
        "and": 0.05581455721859476,
        "embedding": 0.05581455721859476,
        "models": 0.05581455721859476,
        "respect": 0.05581455721859476,
        "gitignore": 0.05581455721859476,
        "configurable": 0.05581455721859476,
        "exclude_paths": 0.05581455721859476,
        "never": 0.05581455721859476,
        "index": 0.05581455721859476,
        "large": 0.05581455721859476,
        "binaries": 0.05581455721859476,
        "secret": 0.11162911443718952,
        "files": 0.05581455721859476,
        "simple": 0.05581455721859476,
        "scan": 0.05581455721859476,
        "block": 0.05581455721859476,
        "16": 0.05581455721859476,
        "mvp": 0.05581455721859476,
        "plan": 0.05581455721859476,
        "weeks": 0.05581455721859476,
        "suggested": 0.05581455721859476,
        "breakdown": 0.05581455721859476,
        "core": 0.05581455721859476,
        "path": 0.05581455721859476,
        "cli": 0.05581455721859476,
        "scanner": 0.05581455721859476,
        "language": 0.05581455721859476,
        "build": 0.05581455721859476,
        "analyzers": 0.05581455721859476,
        "python": 0.05581455721859476,
        "java": 0.05581455721859476,
        "node": 0.05581455721859476,
        "prompt": 0.05581455721859476,
        "builder": 0.05581455721859476,
        "runner": 0.05581455721859476,
        "ollama": 0.05581455721859476,
        "adapter": 0.05581455721859476,
        "processor": 0.05581455721859476,
        "publisher": 0.05581455721859476,
        "lite": 0.05581455721859476,
        "embed": 0.05581455721859476
      },
      "text": "possible. * Ensure **idempotency**: only edit between managed markers: * `<!-- docgen:begin:architecture -->` \u2026 `<!-- docgen:end:architecture -->` --- ## 13) Git & CI Integration ### Local * **pre-commit**: forbid direct README edits outside markers (optional). * **post-merge / post-checkout**: remind to run `docgen update` (optional). ### CI (GitHub/GitLab/Bitbucket) * On push/PR: 1. Checkout repo. 2. `docgen update --event pr --diff-base $BASE_SHA` 3. If changes \u2192 open/update PR with labeled `docs:auto`. * Tokenless mode possible if PR created from a GitHub App/bot account. --- ## 14) Quality Gates & Evaluation * **Consistency checks**: commands exist in repo; ports/env vars match configs. * **No hallucinations**: reject new facts not found in signals/RAG. * **Style**: concise paragraphs, actionable commands, no filler marketing. * **Scorecard** (0\u2013100): * Coverage of required sections (30) * Buildability of quick start (20) * Link validity (10) * Diff alignment w/ change set (20) * Lint (10) * Reviewer feedback loop (10) --- ## 15) Security & Privacy * **Local only** LLM and embedding models. * Respect `.gitignore` + configurable `exclude_paths`. * Never index large binaries/secret files. * Optional simple **secret scan**; block if found. --- ## 16) MVP Plan (2 weeks suggested breakdown) 1. **Core path**: CLI, Scanner, Language+Build analyzers (Python/Java/Node), Prompt Builder, Local LLM runner (Ollama adapter), Post-processor, Git Publisher (PR). 2. **RAG Lite**: embed only `/docs`,",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#12",
      "vector": {
        "simple": 0.058823529411764705,
        "secret": 0.058823529411764705,
        "scan": 0.058823529411764705,
        "block": 0.058823529411764705,
        "if": 0.058823529411764705,
        "found": 0.058823529411764705,
        "16": 0.058823529411764705,
        "mvp": 0.058823529411764705,
        "plan": 0.058823529411764705,
        "2": 0.17647058823529413,
        "weeks": 0.058823529411764705,
        "suggested": 0.058823529411764705,
        "breakdown": 0.058823529411764705,
        "1": 0.11764705882352941,
        "core": 0.058823529411764705,
        "path": 0.058823529411764705,
        "cli": 0.058823529411764705,
        "scanner": 0.058823529411764705,
        "language": 0.058823529411764705,
        "build": 0.17647058823529413,
        "analyzers": 0.058823529411764705,
        "python": 0.17647058823529413,
        "java": 0.058823529411764705,
        "node": 0.058823529411764705,
        "prompt": 0.058823529411764705,
        "builder": 0.058823529411764705,
        "local": 0.058823529411764705,
        "llm": 0.058823529411764705,
        "runner": 0.058823529411764705,
        "ollama": 0.058823529411764705,
        "adapter": 0.058823529411764705,
        "post": 0.058823529411764705,
        "processor": 0.058823529411764705,
        "git": 0.058823529411764705,
        "publisher": 0.058823529411764705,
        "pr": 0.11764705882352941,
        "rag": 0.058823529411764705,
        "lite": 0.058823529411764705,
        "embed": 0.058823529411764705,
        "only": 0.058823529411764705,
        "docs": 0.058823529411764705,
        "existing": 0.058823529411764705,
        "readme": 0.11764705882352941,
        "top": 0.058823529411764705,
        "20": 0.058823529411764705,
        "largest": 0.058823529411764705,
        "source": 0.058823529411764705,
        "files": 0.058823529411764705,
        "heads": 0.058823529411764705,
        "3": 0.058823529411764705,
        "triggers": 0.058823529411764705,
        "single": 0.058823529411764705,
        "commit": 0.058823529411764705,
        "mode": 0.11764705882352941,
        "as": 0.11764705882352941,
        "stretch": 0.058823529411764705,
        "4": 0.058823529411764705,
        "templates": 0.11764705882352941,
        "8": 0.058823529411764705,
        "sections": 0.058823529411764705,
        "jinja2": 0.23529411764705882,
        "managed": 0.058823529411764705,
        "markers": 0.058823529411764705,
        "5": 0.058823529411764705,
        "config": 0.058823529411764705,
        "docgen": 0.058823529411764705,
        "yml": 0.058823529411764705,
        "minimal": 0.11764705882352941,
        "17": 0.17647058823529413,
        "example": 0.058823529411764705,
        "section": 0.11764705882352941,
        "template": 0.058823529411764705,
        "architecture": 0.23529411764705882,
        "j2": 0.11764705882352941,
        "project_name": 0.11764705882352941,
        "is": 0.058823529411764705,
        "structured": 0.058823529411764705,
        "ascii": 0.058823529411764705,
        "_architecture": 0.058823529411764705,
        "key": 0.058823529411764705,
        "components": 0.11764705882352941,
        "for": 0.11764705882352941,
        "comp": 0.17647058823529413,
        "in": 0.058823529411764705,
        "name": 0.058823529411764705,
        "summary": 0.058823529411764705,
        "endfor": 0.058823529411764705,
        "data": 0.058823529411764705,
        "flow": 0.058823529411764705,
        "data_flow": 0.058823529411764705,
        "generated": 0.058823529411764705,
        "from": 0.058823529411764705,
        "detected": 0.058823529411764705,
        "signals": 0.058823529411764705,
        "signals_summary": 0.058823529411764705,
        "frame": 0.058823529411764705,
        "composed": 0.058823529411764705,
        "intro": 0.058823529411764705,
        "features": 0.17647058823529413,
        "include": 0.058823529411764705,
        "quick": 0.058823529411764705,
        "start": 0.058823529411764705,
        "quickstart": 0.058823529411764705,
        "configuration": 0.11764705882352941,
        "test": 0.058823529411764705,
        "build_and_test": 0.11764705882352941,
        "deployment": 0.17647058823529413,
        "troubleshooting": 0.11764705882352941,
        "faq": 0.11764705882352941,
        "license": 0.11764705882352941,
        "18": 0.058823529411764705,
        "snippets": 0.058823529411764705,
        "change": 0.058823529411764705,
        "impact": 0.058823529411764705,
        "heuristic": 0.058823529411764705,
        "section_rules": 0.058823529411764705,
        "pom": 0.058823529411764705,
        "xml": 0.058823529411764705,
        "gradle": 0.058823529411764705,
        "requirements": 0.058823529411764705,
        "txt": 0.058823529411764705,
        "pyproject": 0.058823529411764705,
        "toml": 0.058823529411764705,
        "package": 0.058823529411764705,
        "json": 0.058823529411764705,
        "dockerfile": 0.058823529411764705,
        "k8s": 0.058823529411764705,
        "src": 0.11764705882352941,
        "app": 0.11764705882352941,
        "cmd": 0.11764705882352941,
        "def": 0.058823529411764705,
        "sections_from_diff": 0.058823529411764705,
        "paths": 0.058823529411764705,
        "list": 0.058823529411764705,
        "str": 0.11764705882352941,
        "set": 0.11764705882352941,
        "out": 0.058823529411764705
      },
      "text": "simple **secret scan**; block if found. --- ## 16) MVP Plan (2 weeks suggested breakdown) 1. **Core path**: CLI, Scanner, Language+Build analyzers (Python/Java/Node), Prompt Builder, Local LLM runner (Ollama adapter), Post-processor, Git Publisher (PR). 2. **RAG Lite**: embed only `/docs`, existing `README`, top 20 largest source files\u2019 heads. 3. **Triggers**: single \u201ccommit\u201d mode; PR mode as stretch. 4. **Templates**: 8 sections, Jinja2; managed markers. 5. **Config**: `.docgen.yml` minimal. --- ## 17) Example Templates ### 17.1 Section Template (Jinja2 \u2014 architecture.j2) ```jinja2 ## Architecture {{ project_name }} is structured as: ``` {{ ascii\\_architecture }} ``` **Key components** {% for comp in components %} - **{{ comp.name }}** \u2014 {{ comp.summary }} {% endfor %} **Data flow** {{ data_flow }} > Generated from detected signals: {{ signals_summary }} ``` ### 17.2 README Frame (composed) ```jinja2 # {{ project_name }} {{ intro }} ## Features {{ features }} {% include \"architecture.j2\" %} ## Quick Start {{ quickstart }} ## Configuration {{ configuration }} ## Build & Test {{ build_and_test }} ## Deployment {{ deployment }} ## Troubleshooting {{ troubleshooting }} ## FAQ {{ faq }} ## License {{ license }} ``` --- ## 18) Minimal Python Snippets **Change impact heuristic** ```python SECTION_RULES = [ (\"build_and_test\", [\"pom.xml\",\"build.gradle\",\"requirements.txt\",\"pyproject.toml\",\"package.json\"]), (\"deployment\", [\"Dockerfile\",\"k8s/\"]), (\"architecture\", [\"src/\",\"app/\",\"cmd/\"]), (\"features\", [\"src/\",\"app/\",\"cmd/\"]), ] def sections_from_diff(paths: list[str]) -> set[str]: out = set() for section,",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#13",
      "vector": {
        "faq": 0.04432422071779363,
        "license": 0.08864844143558726,
        "18": 0.04432422071779363,
        "minimal": 0.04432422071779363,
        "python": 0.13297266215338088,
        "snippets": 0.04432422071779363,
        "change": 0.04432422071779363,
        "impact": 0.04432422071779363,
        "heuristic": 0.04432422071779363,
        "section_rules": 0.08864844143558726,
        "build_and_test": 0.04432422071779363,
        "pom": 0.08864844143558726,
        "xml": 0.08864844143558726,
        "build": 0.13297266215338088,
        "gradle": 0.08864844143558726,
        "requirements": 0.04432422071779363,
        "txt": 0.04432422071779363,
        "pyproject": 0.04432422071779363,
        "toml": 0.04432422071779363,
        "package": 0.08864844143558726,
        "json": 0.08864844143558726,
        "deployment": 0.04432422071779363,
        "dockerfile": 0.04432422071779363,
        "k8s": 0.04432422071779363,
        "architecture": 0.04432422071779363,
        "src": 0.13297266215338088,
        "app": 0.13297266215338088,
        "cmd": 0.13297266215338088,
        "features": 0.04432422071779363,
        "def": 0.08864844143558726,
        "sections_from_diff": 0.04432422071779363,
        "paths": 0.08864844143558726,
        "list": 0.04432422071779363,
        "str": 0.26594532430676177,
        "set": 0.08864844143558726,
        "out": 0.13297266215338088,
        "for": 0.2216211035889681,
        "section": 0.08864844143558726,
        "patterns": 0.13297266215338088,
        "in": 0.2216211035889681,
        "if": 0.2216211035889681,
        "any": 0.04432422071779363,
        "p": 0.13297266215338088,
        "pat": 0.08864844143558726,
        "startswith": 0.04432422071779363,
        "add": 0.04432422071779363,
        "return": 0.13297266215338088,
        "or": 0.08864844143558726,
        "intro": 0.08864844143558726,
        "fall": 0.04432422071779363,
        "back": 0.04432422071779363,
        "to": 0.08864844143558726,
        "uncertain": 0.04432422071779363,
        "managed": 0.04432422071779363,
        "markers": 0.08864844143558726,
        "patch": 0.04432422071779363,
        "replace_block": 0.04432422071779363,
        "md": 0.2216211035889681,
        "key": 0.13297266215338088,
        "new": 0.08864844143558726,
        "start": 0.1772968828711745,
        "f": 0.13297266215338088,
        "docgen": 0.1772968828711745,
        "begin": 0.04432422071779363,
        "end": 0.2216211035889681,
        "and": 0.04432422071779363,
        "pre": 0.08864844143558726,
        "rest": 0.08864844143558726,
        "split": 0.08864844143558726,
        "1": 0.08864844143558726,
        "_": 0.04432422071779363,
        "post": 0.08864844143558726,
        "n": 0.08864844143558726,
        "insert": 0.04432422071779363,
        "missing": 0.04432422071779363,
        "19": 0.04432422071779363,
        "open": 0.04432422071779363,
        "questions": 0.04432422071779363,
        "trade": 0.04432422071779363,
        "offs": 0.04432422071779363,
        "embeddings": 0.04432422071779363,
        "use": 0.04432422071779363,
        "a": 0.13297266215338088,
        "tiny": 0.04432422071779363,
        "local": 0.04432422071779363,
        "model": 0.08864844143558726,
        "vs": 0.08864844143558726,
        "rule": 0.04432422071779363,
        "based": 0.04432422071779363,
        "retrieval": 0.04432422071779363,
        "mvp": 0.04432422071779363,
        "tree": 0.04432422071779363,
        "sitter": 0.04432422071779363,
        "adds": 0.04432422071779363,
        "power": 0.04432422071779363,
        "but": 0.04432422071779363,
        "increases": 0.04432422071779363,
        "footprint": 0.04432422071779363,
        "gate": 0.04432422071779363,
        "behind": 0.04432422071779363,
        "flag": 0.04432422071779363,
        "pr": 0.08864844143558726,
        "author": 0.04432422071779363,
        "bot": 0.04432422071779363,
        "account": 0.04432422071779363,
        "developer": 0.04432422071779363,
        "token": 0.04432422071779363,
        "decide": 0.04432422071779363,
        "per": 0.04432422071779363,
        "environment": 0.04432422071779363,
        "markdown": 0.04432422071779363,
        "diffs": 0.04432422071779363,
        "keep": 0.04432422071779363,
        "sections": 0.04432422071779363,
        "atomic": 0.04432422071779363,
        "minimize": 0.04432422071779363,
        "noisy": 0.04432422071779363,
        "prs": 0.04432422071779363,
        "20": 0.04432422071779363,
        "example": 0.04432422071779363,
        "yml": 0.04432422071779363,
        "mixed": 0.04432422071779363,
        "repo": 0.04432422071779363,
        "yaml": 0.04432422071779363,
        "llm": 0.04432422071779363,
        "runner": 0.04432422071779363,
        "ollama": 0.04432422071779363,
        "llama3": 0.04432422071779363,
        "8b": 0.04432422071779363,
        "instruct": 0.04432422071779363,
        "temperature": 0.04432422071779363,
        "0": 0.04432422071779363,
        "15": 0.04432422071779363,
        "readme": 0.04432422071779363,
        "style": 0.04432422071779363,
        "comprehensive": 0.04432422071779363,
        "publish": 0.04432422071779363,
        "mode": 0.04432422071779363,
        "branch_prefix": 0.04432422071779363,
        "analyzers": 0.04432422071779363,
        "enabled": 0.04432422071779363,
        "language": 0.04432422071779363,
        "dependencies": 0.04432422071779363,
        "exclude_paths": 0.04432422071779363,
        "git": 0.04432422071779363,
        "node_modules": 0.04432422071779363,
        "dist": 0.04432422071779363,
        "target": 0.04432422071779363,
        "ci": 0.04432422071779363,
        "watched_globs": 0.04432422071779363
      },
      "text": "faq }} ## License {{ license }} ``` --- ## 18) Minimal Python Snippets **Change impact heuristic** ```python SECTION_RULES = [ (\"build_and_test\", [\"pom.xml\",\"build.gradle\",\"requirements.txt\",\"pyproject.toml\",\"package.json\"]), (\"deployment\", [\"Dockerfile\",\"k8s/\"]), (\"architecture\", [\"src/\",\"app/\",\"cmd/\"]), (\"features\", [\"src/\",\"app/\",\"cmd/\"]), ] def sections_from_diff(paths: list[str]) -> set[str]: out = set() for section, patterns in SECTION_RULES: if any(p for p in paths for pat in patterns if p.startswith(pat)): out.add(section) return out or {\"intro\"} # fall back to intro if uncertain ``` **Managed markers (patch)** ```python def replace_block(md: str, key: str, new: str) -> str: start = f\"<!-- docgen:begin:{key} -->\" end = f\"<!-- docgen:end:{key} -->\" if start in md and end in md: pre, rest = md.split(start, 1) _, post = rest.split(end, 1) return f\"{pre}{start}\\n{new}\\n{end}{post}\" return md # or insert markers if missing ``` --- ## 19) Open Questions / Trade-offs * **Embeddings**: Use a tiny local model vs. rule-based retrieval for MVP? * **Tree-sitter**: Adds power but increases footprint\u2014gate behind a flag. * **PR author**: Bot account vs. developer token\u2014decide per environment. * **Markdown diffs**: Keep sections atomic to minimize noisy PRs. --- ## 20) Example `.docgen.yml` for a Mixed Repo ```yaml llm: runner: \"ollama\" model: \"llama3:8b-instruct\" temperature: 0.15 readme: style: \"comprehensive\" publish: mode: \"pr\" branch_prefix: \"docgen/\" analyzers: enabled: [language, build, dependencies, patterns] exclude_paths: [\".git/\", \"node_modules/\", \"dist/\", \"target/\"] ci: watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" -",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#14",
      "vector": {
        "runner": 0.07715167498104596,
        "ollama": 0.1543033499620919,
        "model": 0.07715167498104596,
        "llama3": 0.07715167498104596,
        "8b": 0.07715167498104596,
        "instruct": 0.07715167498104596,
        "temperature": 0.07715167498104596,
        "0": 0.07715167498104596,
        "15": 0.07715167498104596,
        "readme": 0.1543033499620919,
        "style": 0.1543033499620919,
        "comprehensive": 0.07715167498104596,
        "publish": 0.07715167498104596,
        "mode": 0.07715167498104596,
        "pr": 0.1543033499620919,
        "branch_prefix": 0.07715167498104596,
        "docgen": 0.23145502494313785,
        "analyzers": 0.1543033499620919,
        "enabled": 0.07715167498104596,
        "language": 0.07715167498104596,
        "build": 0.1543033499620919,
        "dependencies": 0.07715167498104596,
        "patterns": 0.07715167498104596,
        "exclude_paths": 0.07715167498104596,
        "git": 0.07715167498104596,
        "node_modules": 0.07715167498104596,
        "dist": 0.07715167498104596,
        "target": 0.07715167498104596,
        "ci": 0.07715167498104596,
        "watched_globs": 0.07715167498104596,
        "src": 0.07715167498104596,
        "app": 0.07715167498104596,
        "cmd": 0.07715167498104596,
        "pom": 0.1543033499620919,
        "xml": 0.1543033499620919,
        "gradle": 0.07715167498104596,
        "package": 0.07715167498104596,
        "json": 0.07715167498104596,
        "requirements": 0.1543033499620919,
        "txt": 0.1543033499620919,
        "dockerfile": 0.07715167498104596,
        "21": 0.07715167498104596,
        "success": 0.07715167498104596,
        "criteria": 0.07715167498104596,
        "poc": 0.07715167498104596,
        "for": 0.07715167498104596,
        "3": 0.07715167498104596,
        "diverse": 0.07715167498104596,
        "repos": 0.07715167498104596,
        "python": 0.07715167498104596,
        "cli": 0.1543033499620919,
        "spring": 0.07715167498104596,
        "boot": 0.07715167498104596,
        "api": 0.07715167498104596,
        "node": 0.07715167498104596,
        "webapp": 0.07715167498104596,
        "init": 0.1543033499620919,
        "produces": 0.07715167498104596,
        "a": 0.23145502494313785,
        "working": 0.07715167498104596,
        "linted": 0.07715167498104596,
        "with": 0.07715167498104596,
        "runnable": 0.07715167498104596,
        "quick": 0.07715167498104596,
        "start": 0.07715167498104596,
        "on": 0.07715167498104596,
        "changing": 0.07715167498104596,
        "or": 0.07715167498104596,
        "updates": 0.07715167498104596,
        "only": 0.07715167498104596,
        "relevant": 0.07715167498104596,
        "sections": 0.07715167498104596,
        "no": 0.07715167498104596,
        "hallucinated": 0.07715167498104596,
        "commands": 0.07715167498104596,
        "links": 0.07715167498104596,
        "and": 0.23145502494313785,
        "badges": 0.07715167498104596,
        "validate": 0.07715167498104596,
        "consistent": 0.07715167498104596,
        "if": 0.07715167498104596,
        "you": 0.1543033499620919,
        "want": 0.07715167498104596,
        "i": 0.07715167498104596,
        "can": 0.1543033499620919,
        "spin": 0.07715167498104596,
        "up": 0.07715167498104596,
        "starter": 0.07715167498104596,
        "repo": 0.07715167498104596,
        "layout": 0.07715167498104596,
        "templates": 0.07715167498104596,
        "simple": 0.07715167498104596,
        "adapter": 0.07715167498104596,
        "so": 0.07715167498104596,
        "drop": 0.07715167498104596,
        "it": 0.07715167498104596,
        "into": 0.07715167498104596,
        "your": 0.07715167498104596,
        "environment": 0.07715167498104596,
        "run": 0.07715167498104596,
        "right": 0.07715167498104596,
        "away": 0.07715167498104596
      },
      "text": "runner: \"ollama\" model: \"llama3:8b-instruct\" temperature: 0.15 readme: style: \"comprehensive\" publish: mode: \"pr\" branch_prefix: \"docgen/\" analyzers: enabled: [language, build, dependencies, patterns] exclude_paths: [\".git/\", \"node_modules/\", \"dist/\", \"target/\"] ci: watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" - \"requirements.txt\" - \"Dockerfile\" ``` --- ## 21) Success Criteria (POC) * For 3 diverse repos (Python CLI, Spring Boot API, Node webapp): * `docgen init` produces a working, linted README with runnable Quick Start. * On changing `pom.xml` or `requirements.txt`, PR updates only relevant sections. * No hallucinated commands; links and badges validate; style consistent. --- If you want, I can spin up a **starter repo layout** (CLI, analyzers, templates, and a simple Ollama adapter) so you can drop it into your environment and run `docgen init` right away.",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "docgen/prompting/builder.py#0",
      "vector": {
        "builds": 0.039374961547907886,
        "prompts": 0.07874992309581577,
        "and": 0.23624976928744731,
        "templates": 0.07874992309581577,
        "for": 0.11812488464372366,
        "the": 0.07874992309581577,
        "local": 0.039374961547907886,
        "llm": 0.11812488464372366,
        "from": 0.3937496154790789,
        "__future__": 0.039374961547907886,
        "import": 0.3937496154790789,
        "annotations": 0.039374961547907886,
        "collections": 0.039374961547907886,
        "defaultdict": 0.039374961547907886,
        "dataclasses": 0.039374961547907886,
        "dataclass": 0.15749984619163154,
        "field": 0.07874992309581577,
        "json": 0.039374961547907886,
        "pathlib": 0.039374961547907886,
        "path": 0.07874992309581577,
        "typing": 0.039374961547907886,
        "dict": 0.19687480773953944,
        "iterable": 0.039374961547907886,
        "list": 0.07874992309581577,
        "sequence": 0.039374961547907886,
        "tuple": 0.039374961547907886,
        "try": 0.039374961547907886,
        "pragma": 0.07874992309581577,
        "no": 0.07874992309581577,
        "cover": 0.07874992309581577,
        "optional": 0.07874992309581577,
        "dependency": 0.07874992309581577,
        "jinja2": 0.039374961547907886,
        "environment": 0.11812488464372366,
        "filesystemloader": 0.039374961547907886,
        "templatenotfound": 0.07874992309581577,
        "except": 0.039374961547907886,
        "modulenotfounderror": 0.039374961547907886,
        "none": 0.07874992309581577,
        "exception": 0.039374961547907886,
        "type": 0.039374961547907886,
        "ignore": 0.039374961547907886,
        "assignment": 0.039374961547907886,
        "models": 0.039374961547907886,
        "repomanifest": 0.039374961547907886,
        "signal": 0.039374961547907886,
        "postproc": 0.039374961547907886,
        "toc": 0.039374961547907886,
        "tableofcontentsbuilder": 0.039374961547907886,
        "constants": 0.039374961547907886,
        "default_sections": 0.039374961547907886,
        "section_titles": 0.039374961547907886,
        "_role_descriptions": 0.039374961547907886,
        "str": 0.3937496154790789,
        "src": 0.039374961547907886,
        "primary": 0.039374961547907886,
        "application": 0.039374961547907886,
        "library": 0.039374961547907886,
        "code": 0.07874992309581577,
        "test": 0.039374961547907886,
        "automated": 0.039374961547907886,
        "tests": 0.039374961547907886,
        "that": 0.039374961547907886,
        "guard": 0.039374961547907886,
        "behaviour": 0.039374961547907886,
        "docs": 0.039374961547907886,
        "project": 0.039374961547907886,
        "documentation": 0.07874992309581577,
        "assets": 0.039374961547907886,
        "config": 0.039374961547907886,
        "configuration": 0.039374961547907886,
        "infrastructure": 0.07874992309581577,
        "files": 0.039374961547907886,
        "infra": 0.039374961547907886,
        "as": 0.039374961547907886,
        "or": 0.07874992309581577,
        "definitions": 0.039374961547907886,
        "examples": 0.039374961547907886,
        "example": 0.039374961547907886,
        "usages": 0.039374961547907886,
        "samples": 0.039374961547907886,
        "class": 0.15749984619163154,
        "section": 0.19687480773953944,
        "rendered": 0.039374961547907886,
        "readme": 0.07874992309581577,
        "details": 0.039374961547907886,
        "name": 0.039374961547907886,
        "title": 0.039374961547907886,
        "body": 0.039374961547907886,
        "metadata": 0.07874992309581577,
        "object": 0.07874992309581577,
        "frozen": 0.039374961547907886,
        "true": 0.039374961547907886,
        "promptmessage": 0.07874992309581577,
        "represents": 0.039374961547907886,
        "a": 0.11812488464372366,
        "single": 0.039374961547907886,
        "chat": 0.039374961547907886,
        "message": 0.039374961547907886,
        "prompting": 0.039374961547907886,
        "role": 0.039374961547907886,
        "content": 0.039374961547907886,
        "promptrequest": 0.039374961547907886,
        "encapsulates": 0.039374961547907886,
        "an": 0.039374961547907886,
        "prompt": 0.039374961547907886,
        "request": 0.039374961547907886,
        "messages": 0.039374961547907886,
        "max_tokens": 0.039374961547907886,
        "int": 0.039374961547907886,
        "default_factory": 0.039374961547907886,
        "promptbuilder": 0.039374961547907886,
        "assembles": 0.039374961547907886,
        "aware": 0.039374961547907886,
        "signals": 0.039374961547907886,
        "system_prompt": 0.039374961547907886,
        "you": 0.039374961547907886,
        "are": 0.039374961547907886,
        "senior": 0.039374961547907886,
        "developer": 0.039374961547907886,
        "writer": 0.039374961547907886,
        "stay": 0.039374961547907886,
        "grounded": 0.039374961547907886,
        "in": 0.039374961547907886,
        "repository": 0.039374961547907886,
        "facts": 0.039374961547907886,
        "follow": 0.039374961547907886,
        "requested": 0.039374961547907886,
        "outline": 0.039374961547907886,
        "keep": 0.039374961547907886,
        "explanations": 0.039374961547907886,
        "crisp": 0.039374961547907886,
        "never": 0.039374961547907886,
        "invent": 0.039374961547907886,
        "commands": 0.039374961547907886,
        "tools": 0.039374961547907886,
        "def": 0.039374961547907886,
        "__init__": 0.039374961547907886,
        "self": 0.039374961547907886,
        "templates_dir": 0.039374961547907886
      },
      "text": "\"\"\"Builds prompts and templates for the local LLM.\"\"\" from __future__ import annotations from collections import defaultdict from dataclasses import dataclass, field import json from pathlib import Path from typing import Dict, Iterable, List, Sequence, Tuple try: # pragma: no cover - optional dependency from jinja2 import Environment, FileSystemLoader, TemplateNotFound except ModuleNotFoundError: # pragma: no cover - optional dependency Environment = None TemplateNotFound = Exception # type: ignore[assignment] from ..models import RepoManifest, Signal from ..postproc.toc import TableOfContentsBuilder from .constants import DEFAULT_SECTIONS, SECTION_TITLES _ROLE_DESCRIPTIONS: Dict[str, str] = { \"src\": \"Primary application and library code\", \"test\": \"Automated tests that guard behaviour\", \"docs\": \"Project documentation assets\", \"config\": \"Configuration and infrastructure files\", \"infra\": \"Infrastructure as code or environment definitions\", \"examples\": \"Example usages and samples\", } @dataclass class Section: \"\"\"Rendered README section details.\"\"\" name: str title: str body: str metadata: Dict[str, object] @dataclass(frozen=True) class PromptMessage: \"\"\"Represents a single chat message for LLM prompting.\"\"\" role: str content: str @dataclass class PromptRequest: \"\"\"Encapsulates an LLM prompt request for a README section.\"\"\" section: str messages: List[PromptMessage] max_tokens: int | None metadata: Dict[str, object] = field(default_factory=dict) class PromptBuilder: \"\"\"Assembles section-aware prompts from templates and signals.\"\"\" SYSTEM_PROMPT = ( \"You are a senior developer documentation writer. Stay grounded in repository facts. \" \"Follow the requested outline, keep explanations crisp, and never invent commands or tools.\" ) def __init__( self, templates_dir: Path",
      "metadata": {
        "path": "docgen/prompting/builder.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "b61b4aa2e5ec913b530ea7cfc1709db70994df86841055e513eb4d87c4136020"
      }
    },
    {
      "id": "docgen/prompting/builder.py#1",
      "vector": {
        "prompts": 0.14907119849998599,
        "from": 0.14907119849998599,
        "templates": 0.14907119849998599,
        "and": 0.29814239699997197,
        "signals": 0.14907119849998599,
        "system_prompt": 0.14907119849998599,
        "you": 0.14907119849998599,
        "are": 0.14907119849998599,
        "a": 0.14907119849998599,
        "senior": 0.14907119849998599,
        "developer": 0.14907119849998599,
        "documentation": 0.14907119849998599,
        "writer": 0.14907119849998599,
        "stay": 0.14907119849998599,
        "grounded": 0.14907119849998599,
        "in": 0.14907119849998599,
        "repository": 0.14907119849998599,
        "facts": 0.14907119849998599,
        "follow": 0.14907119849998599,
        "the": 0.14907119849998599,
        "requested": 0.14907119849998599,
        "outline": 0.14907119849998599,
        "keep": 0.14907119849998599,
        "explanations": 0.14907119849998599,
        "crisp": 0.14907119849998599,
        "never": 0.14907119849998599,
        "invent": 0.14907119849998599,
        "commands": 0.14907119849998599,
        "or": 0.14907119849998599,
        "tools": 0.14907119849998599,
        "def": 0.14907119849998599,
        "__init__": 0.14907119849998599,
        "self": 0.14907119849998599,
        "templates_dir": 0.14907119849998599,
        "path": 0.14907119849998599,
        "none": 0.29814239699997197,
        "style": 0.14907119849998599,
        "str": 0.14907119849998599,
        "non": 0.14907119849998599
      },
      "text": "prompts from templates and signals.\"\"\" SYSTEM_PROMPT = ( \"You are a senior developer documentation writer. Stay grounded in repository facts. \" \"Follow the requested outline, keep explanations crisp, and never invent commands or tools.\" ) def __init__( self, templates_dir: Path | None = None, *, style: str | Non",
      "metadata": {
        "path": "docgen/prompting/builder.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "b61b4aa2e5ec913b530ea7cfc1709db70994df86841055e513eb4d87c4136020"
      }
    },
    {
      "id": "docgen/orchestrator.py#0",
      "vector": {
        "pipeline": 0.022750787759664503,
        "orchestration": 0.022750787759664503,
        "for": 0.022750787759664503,
        "init": 0.022750787759664503,
        "update": 0.045501575519329006,
        "regenerate": 0.022750787759664503,
        "flows": 0.022750787759664503,
        "from": 0.5687696939916126,
        "__future__": 0.022750787759664503,
        "import": 0.7052744205495997,
        "annotations": 0.022750787759664503,
        "hashlib": 0.022750787759664503,
        "inspect": 0.022750787759664503,
        "json": 0.022750787759664503,
        "logging": 0.045501575519329006,
        "os": 0.022750787759664503,
        "dataclasses": 0.022750787759664503,
        "dataclass": 0.045501575519329006,
        "datetime": 0.045501575519329006,
        "utc": 0.022750787759664503,
        "difflib": 0.022750787759664503,
        "pathlib": 0.022750787759664503,
        "path": 0.0682523632789935,
        "typing": 0.022750787759664503,
        "dict": 0.022750787759664503,
        "iterable": 0.045501575519329006,
        "list": 0.022750787759664503,
        "mapping": 0.022750787759664503,
        "optional": 0.045501575519329006,
        "sequence": 0.022750787759664503,
        "cast": 0.022750787759664503,
        "analyzers": 0.045501575519329006,
        "analyzer": 0.045501575519329006,
        "discover_analyzers": 0.022750787759664503,
        "config": 0.022750787759664503,
        "configerror": 0.022750787759664503,
        "docgenconfig": 0.022750787759664503,
        "llmconfig": 0.022750787759664503,
        "load_config": 0.022750787759664503,
        "failsafe": 0.022750787759664503,
        "build_readme_stub": 0.022750787759664503,
        "build_section_stubs": 0.022750787759664503,
        "git": 0.045501575519329006,
        "diff": 0.045501575519329006,
        "diffanalyzer": 0.022750787759664503,
        "diffresult": 0.022750787759664503,
        "_pattern_matches": 0.022750787759664503,
        "as": 0.045501575519329006,
        "diff_pattern_matches": 0.022750787759664503,
        "publisher": 0.09100315103865801,
        "get_logger": 0.022750787759664503,
        "models": 0.022750787759664503,
        "repomanifest": 0.022750787759664503,
        "signal": 0.022750787759664503,
        "postproc": 0.136504726557987,
        "lint": 0.022750787759664503,
        "markdownlinter": 0.045501575519329006,
        "markers": 0.022750787759664503,
        "markermanager": 0.022750787759664503,
        "toc": 0.022750787759664503,
        "tableofcontentsbuilder": 0.045501575519329006,
        "badges": 0.022750787759664503,
        "badgemanager": 0.022750787759664503,
        "links": 0.022750787759664503,
        "linkvalidator": 0.022750787759664503,
        "scorecard": 0.022750787759664503,
        "readmescorecard": 0.022750787759664503,
        "llm": 0.022750787759664503,
        "runner": 0.022750787759664503,
        "llmrunner": 0.022750787759664503,
        "prompting": 0.045501575519329006,
        "builder": 0.022750787759664503,
        "promptbuilder": 0.045501575519329006,
        "section": 0.022750787759664503,
        "constants": 0.022750787759664503,
        "default_sections": 0.022750787759664503,
        "section_titles": 0.022750787759664503,
        "rag": 0.022750787759664503,
        "indexer": 0.022750787759664503,
        "ragindexer": 0.022750787759664503,
        "repo_scanner": 0.022750787759664503,
        "reposcanner": 0.045501575519329006,
        "stores": 0.022750787759664503,
        "analyzercache": 0.022750787759664503,
        "validators": 0.022750787759664503,
        "nohallucinationvalidator": 0.022750787759664503,
        "validationcontext": 0.022750787759664503,
        "validationerror": 0.022750787759664503,
        "validationissue": 0.022750787759664503,
        "validator": 0.022750787759664503,
        "build_evidence_index": 0.022750787759664503,
        "class": 0.045501575519329006,
        "updateoutcome": 0.022750787759664503,
        "result": 0.022750787759664503,
        "of": 0.022750787759664503,
        "a": 0.022750787759664503,
        "readme": 0.022750787759664503,
        "operation": 0.022750787759664503,
        "str": 0.022750787759664503,
        "dry_run": 0.022750787759664503,
        "bool": 0.022750787759664503,
        "orchestrator": 0.022750787759664503,
        "coordinates": 0.022750787759664503,
        "doc": 0.022750787759664503,
        "generation": 0.022750787759664503,
        "pipelines": 0.022750787759664503,
        "described": 0.022750787759664503,
        "in": 0.022750787759664503,
        "the": 0.022750787759664503,
        "spec": 0.022750787759664503,
        "def": 0.022750787759664503,
        "__init__": 0.022750787759664503,
        "self": 0.022750787759664503,
        "scanner": 0.022750787759664503,
        "none": 0.25025866535630953,
        "prompt_builder": 0.022750787759664503,
        "linter": 0.022750787759664503,
        "toc_builder": 0.022750787759664503,
        "rag_in": 0.022750787759664503
      },
      "text": "\"\"\"Pipeline orchestration for init/update/regenerate flows.\"\"\" from __future__ import annotations import hashlib import inspect import json import logging import os from dataclasses import dataclass from datetime import UTC, datetime import difflib from pathlib import Path from typing import Dict, Iterable, List, Mapping, Optional, Sequence, cast from .analyzers import Analyzer, discover_analyzers from .config import ConfigError, DocGenConfig, LLMConfig, load_config from .failsafe import build_readme_stub, build_section_stubs from .git.diff import DiffAnalyzer, DiffResult, _pattern_matches as diff_pattern_matches from .git.publisher import Publisher from .logging import get_logger from .models import RepoManifest, Signal from .postproc.lint import MarkdownLinter from .postproc.markers import MarkerManager from .postproc.toc import TableOfContentsBuilder from .postproc.badges import BadgeManager from .postproc.links import LinkValidator from .postproc.scorecard import ReadmeScorecard from .llm.runner import LLMRunner from .prompting.builder import PromptBuilder, Section from .prompting.constants import DEFAULT_SECTIONS, SECTION_TITLES from .rag.indexer import RAGIndexer from .repo_scanner import RepoScanner from .stores import AnalyzerCache from .validators import ( NoHallucinationValidator, ValidationContext, ValidationError, ValidationIssue, Validator, build_evidence_index, ) @dataclass class UpdateOutcome: \"\"\"Result of a README update operation.\"\"\" path: Path diff: str dry_run: bool class Orchestrator: \"\"\"Coordinates doc generation pipelines as described in the spec.\"\"\" def __init__( self, scanner: RepoScanner | None = None, analyzers: Optional[Iterable[Analyzer]] = None, prompt_builder: PromptBuilder | None = None, publisher: Publisher | None = None, linter: MarkdownLinter | None = None, toc_builder: TableOfContentsBuilder | None = None, rag_in",
      "metadata": {
        "path": "docgen/orchestrator.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "310d781a9aeb95c49a0bb5542ed5b4bdebd1c951c5c2b0f49170b730b8369e2e"
      }
    },
    {
      "id": "docgen/config.py#0",
      "vector": {
        "configuration": 0.0564782494724905,
        "loading": 0.02823912473624525,
        "for": 0.0564782494724905,
        "docgen": 0.112956498944981,
        "yml": 0.08471737420873575,
        "from": 0.14119562368122626,
        "__future__": 0.02823912473624525,
        "import": 0.14119562368122626,
        "annotations": 0.02823912473624525,
        "dataclasses": 0.02823912473624525,
        "dataclass": 0.19767387315371676,
        "field": 0.225912997889962,
        "pathlib": 0.02823912473624525,
        "path": 0.08471737420873575,
        "typing": 0.02823912473624525,
        "any": 0.02823912473624525,
        "dict": 0.02823912473624525,
        "list": 0.31063037209869776,
        "optional": 0.4800651205161693,
        "sequence": 0.02823912473624525,
        "try": 0.02823912473624525,
        "pragma": 0.0564782494724905,
        "no": 0.0564782494724905,
        "cover": 0.0564782494724905,
        "dependency": 0.0564782494724905,
        "yaml": 0.02823912473624525,
        "as": 0.02823912473624525,
        "_yaml": 0.0564782494724905,
        "type": 0.02823912473624525,
        "ignore": 0.02823912473624525,
        "except": 0.02823912473624525,
        "modulenotfounderror": 0.02823912473624525,
        "none": 0.42358687104367876,
        "class": 0.19767387315371676,
        "configerror": 0.02823912473624525,
        "runtimeerror": 0.02823912473624525,
        "raised": 0.02823912473624525,
        "when": 0.02823912473624525,
        "the": 0.0564782494724905,
        "file": 0.02823912473624525,
        "cannot": 0.02823912473624525,
        "be": 0.02823912473624525,
        "parsed": 0.02823912473624525,
        "llmconfig": 0.0564782494724905,
        "llm": 0.0564782494724905,
        "runtime": 0.02823912473624525,
        "settings": 0.08471737420873575,
        "runner": 0.02823912473624525,
        "str": 0.3671086215711883,
        "model": 0.02823912473624525,
        "executable": 0.02823912473624525,
        "temperature": 0.02823912473624525,
        "float": 0.0564782494724905,
        "max_tokens": 0.02823912473624525,
        "int": 0.02823912473624525,
        "base_url": 0.02823912473624525,
        "api_key": 0.02823912473624525,
        "request_timeout": 0.02823912473624525,
        "publishconfig": 0.0564782494724905,
        "publish": 0.0564782494724905,
        "strategy": 0.02823912473624525,
        "readme": 0.02823912473624525,
        "updates": 0.02823912473624525,
        "mode": 0.02823912473624525,
        "branch_prefix": 0.02823912473624525,
        "labels": 0.02823912473624525,
        "default_factory": 0.19767387315371676,
        "update_existing": 0.02823912473624525,
        "bool": 0.0564782494724905,
        "false": 0.02823912473624525,
        "analyzerconfig": 0.08471737420873575,
        "analyzer": 0.02823912473624525,
        "enablement": 0.02823912473624525,
        "and": 0.02823912473624525,
        "exclusions": 0.02823912473624525,
        "enabled": 0.02823912473624525,
        "exclude_paths": 0.0564782494724905,
        "ciconfig": 0.08471737420873575,
        "continuous": 0.02823912473624525,
        "integration": 0.02823912473624525,
        "triggers": 0.02823912473624525,
        "watched_globs": 0.02823912473624525,
        "validationconfig": 0.02823912473624525,
        "validation": 0.02823912473624525,
        "related": 0.02823912473624525,
        "no_hallucination": 0.02823912473624525,
        "true": 0.02823912473624525,
        "docgenconfig": 0.02823912473624525,
        "represents": 0.02823912473624525,
        "high": 0.02823912473624525,
        "level": 0.02823912473624525,
        "defined": 0.02823912473624525,
        "in": 0.02823912473624525,
        "root": 0.02823912473624525,
        "readme_style": 0.02823912473624525,
        "analyzers": 0.02823912473624525,
        "ci": 0.02823912473624525,
        "templates_dir": 0.02823912473624525,
        "temp": 0.02823912473624525
      },
      "text": "\"\"\"Configuration loading for docgen (.docgen.yml).\"\"\" from __future__ import annotations from dataclasses import dataclass, field from pathlib import Path from typing import Any, Dict, List, Optional, Sequence try: # pragma: no cover - optional dependency import yaml as _yaml # type: ignore except ModuleNotFoundError: # pragma: no cover - optional dependency _yaml = None class ConfigError(RuntimeError): \"\"\"Raised when the configuration file cannot be parsed.\"\"\" @dataclass class LLMConfig: \"\"\"LLM runtime settings from .docgen.yml.\"\"\" runner: Optional[str] = None model: Optional[str] = None executable: Optional[str] = None temperature: Optional[float] = None max_tokens: Optional[int] = None base_url: Optional[str] = None api_key: Optional[str] = None request_timeout: Optional[float] = None @dataclass class PublishConfig: \"\"\"Publish strategy for README updates.\"\"\" mode: Optional[str] = None branch_prefix: Optional[str] = None labels: List[str] = field(default_factory=list) update_existing: bool = False @dataclass class AnalyzerConfig: \"\"\"Analyzer enablement and exclusions.\"\"\" enabled: List[str] = field(default_factory=list) exclude_paths: List[str] = field(default_factory=list) @dataclass class CIConfig: \"\"\"Continuous integration triggers.\"\"\" watched_globs: List[str] = field(default_factory=list) @dataclass class ValidationConfig: \"\"\"Validation related settings.\"\"\" no_hallucination: bool = True @dataclass class DocGenConfig: \"\"\"Represents the high-level settings defined in .docgen.yml.\"\"\" root: Path llm: Optional[LLMConfig] = None readme_style: Optional[str] = None analyzers: AnalyzerConfig = field(default_factory=AnalyzerConfig) publish: Optional[PublishConfig] = None ci: CIConfig = field(default_factory=CIConfig) exclude_paths: List[str] = field(default_factory=list) templates_dir: Optional[Path] = None temp",
      "metadata": {
        "path": "docgen/config.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "42fb0dc835b55915141d615a99ce73c3e7c8524ac52326446fabbfc39313e0ce"
      }
    },
    {
      "id": "docgen/analyzers/endpoints/detectors.py#0",
      "vector": {
        "built": 0.03140371465106639,
        "in": 0.09421114395319916,
        "endpoint": 0.12561485860426555,
        "detectors": 0.06280742930213278,
        "from": 0.21982600255746468,
        "__future__": 0.03140371465106639,
        "import": 0.1884222879063983,
        "annotations": 0.03140371465106639,
        "json": 0.12561485860426555,
        "re": 0.21982600255746468,
        "pathlib": 0.03140371465106639,
        "path": 0.5966705783702613,
        "typing": 0.09421114395319916,
        "iterable": 0.09421114395319916,
        "iterator": 0.03140371465106639,
        "optional": 0.06280742930213278,
        "core": 0.03140371465106639,
        "endpointdetector": 0.06280742930213278,
        "join_paths": 0.03140371465106639,
        "line_of": 0.03140371465106639,
        "def": 0.12561485860426555,
        "_read_text": 0.06280742930213278,
        "root": 0.28263343185959744,
        "relative": 0.12561485860426555,
        "str": 0.09421114395319916,
        "try": 0.03140371465106639,
        "if": 0.09421114395319916,
        "exists": 0.03140371465106639,
        "and": 0.03140371465106639,
        "is_file": 0.03140371465106639,
        "return": 0.12561485860426555,
        "read_text": 0.03140371465106639,
        "encoding": 0.03140371465106639,
        "utf": 0.03140371465106639,
        "8": 0.03140371465106639,
        "errors": 0.03140371465106639,
        "ignore": 0.03140371465106639,
        "except": 0.03140371465106639,
        "oserror": 0.03140371465106639,
        "none": 0.09421114395319916,
        "specification": 0.06280742930213278,
        "openapi": 0.06280742930213278,
        "postman": 0.03140371465106639,
        "insomnia": 0.06280742930213278,
        "_spec_pattern": 0.09421114395319916,
        "compile": 0.09421114395319916,
        "r": 0.09421114395319916,
        "swagger": 0.03140371465106639,
        "ya": 0.03140371465106639,
        "ml": 0.03140371465106639,
        "ignorecase": 0.09421114395319916,
        "_postman_pattern": 0.09421114395319916,
        "postman_collection": 0.03140371465106639,
        "_insomnia_pattern": 0.09421114395319916,
        "class": 0.03140371465106639,
        "specdetector": 0.03140371465106639,
        "parse": 0.03140371465106639,
        "api": 0.03140371465106639,
        "files": 0.09421114395319916,
        "when": 0.03140371465106639,
        "available": 0.03140371465106639,
        "supports_repo": 0.03140371465106639,
        "self": 0.1884222879063983,
        "manifest": 0.15701857325533192,
        "bool": 0.03140371465106639,
        "noqa": 0.06280742930213278,
        "ann001": 0.06280742930213278,
        "dynamic": 0.06280742930213278,
        "any": 0.03140371465106639,
        "search": 0.1884222879063983,
        "file": 0.1884222879063983,
        "or": 0.06280742930213278,
        "for": 0.06280742930213278,
        "extract": 0.03140371465106639,
        "yield": 0.09421114395319916,
        "_from_openapi": 0.06280742930213278,
        "elif": 0.06280742930213278,
        "_from_postman": 0.03140371465106639,
        "_from_insomnia": 0.03140371465106639,
        "text": 0.06280742930213278,
        "is": 0.03140371465106639,
        "retu": 0.03140371465106639
      },
      "text": "\"\"\"Built-in endpoint detectors.\"\"\" from __future__ import annotations import json import re from pathlib import Path from typing import Iterable, Iterator, Optional from .core import Endpoint, EndpointDetector, join_paths, line_of def _read_text(root: Path, relative: str) -> Optional[str]: path = root / relative try: if path.exists() and path.is_file(): return path.read_text(encoding=\"utf-8\", errors=\"ignore\") except OSError: return None return None # --------------------------------------------------------------------------- # Specification detectors (OpenAPI / Postman / Insomnia) # --------------------------------------------------------------------------- _SPEC_PATTERN = re.compile(r\"(openapi|swagger).*?\\.(json|ya?ml)$\", re.IGNORECASE) _POSTMAN_PATTERN = re.compile(r\"postman_collection\\.json$\", re.IGNORECASE) _INSOMNIA_PATTERN = re.compile(r\"insomnia.*\\.json$\", re.IGNORECASE) class SpecDetector(EndpointDetector): \"\"\"Parse API specification files when available.\"\"\" def supports_repo(self, manifest) -> bool: # noqa: ANN001 - dynamic typing return any( _SPEC_PATTERN.search(file.path) or _POSTMAN_PATTERN.search(file.path) or _INSOMNIA_PATTERN.search(file.path) for file in manifest.files ) def extract(self, manifest) -> Iterable[Endpoint]: # noqa: ANN001 - dynamic typing root = Path(manifest.root) for file in manifest.files: path = file.path if _SPEC_PATTERN.search(path): yield from self._from_openapi(root, path) elif _POSTMAN_PATTERN.search(path): yield from self._from_postman(root, path) elif _INSOMNIA_PATTERN.search(path): yield from self._from_insomnia(root, path) def _from_openapi(self, root: Path, relative: str) -> Iterable[Endpoint]: text = _read_text(root, relative) if text is None: retu",
      "metadata": {
        "path": "docgen/analyzers/endpoints/detectors.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "ea2e81889bfad4bc475da4832b8ffe4b022f89c4586f000a1ff4bbab158f427a"
      }
    },
    {
      "id": "docgen/llm/runner.py#0",
      "vector": {
        "adapters": 0.03477340712103605,
        "around": 0.03477340712103605,
        "local": 0.10432022136310813,
        "model": 0.2781872569682884,
        "runtimes": 0.03477340712103605,
        "runner": 0.1390936284841442,
        "ollama": 0.0695468142420721,
        "from": 0.20864044272621626,
        "__future__": 0.03477340712103605,
        "import": 0.34773407121036043,
        "annotations": 0.03477340712103605,
        "ipaddress": 0.03477340712103605,
        "json": 0.03477340712103605,
        "os": 0.03477340712103605,
        "subprocess": 0.03477340712103605,
        "dataclasses": 0.03477340712103605,
        "dataclass": 0.0695468142420721,
        "typing": 0.03477340712103605,
        "callable": 0.0695468142420721,
        "optional": 0.3825074783313965,
        "sequence": 0.03477340712103605,
        "urllib": 0.10432022136310813,
        "error": 0.03477340712103605,
        "httperror": 0.03477340712103605,
        "urlerror": 0.03477340712103605,
        "parse": 0.03477340712103605,
        "urlparse": 0.03477340712103605,
        "request": 0.10432022136310813,
        "urlopen": 0.03477340712103605,
        "_auto_base_url": 0.0695468142420721,
        "object": 0.1390936284841442,
        "_auto_api_key": 0.0695468142420721,
        "class": 0.0695468142420721,
        "llmrequest": 0.0695468142420721,
        "represents": 0.03477340712103605,
        "an": 0.03477340712103605,
        "inference": 0.03477340712103605,
        "for": 0.03477340712103605,
        "the": 0.0695468142420721,
        "prompt": 0.03477340712103605,
        "str": 0.3825074783313965,
        "system": 0.03477340712103605,
        "temperature": 0.1390936284841442,
        "float": 0.1390936284841442,
        "max_tokens": 0.1390936284841442,
        "int": 0.0695468142420721,
        "executable": 0.1390936284841442,
        "base_url": 0.1390936284841442,
        "api_key": 0.0695468142420721,
        "request_timeout": 0.0695468142420721,
        "llmrunner": 0.03477340712103605,
        "executes": 0.03477340712103605,
        "prompts": 0.03477340712103605,
        "against": 0.03477340712103605,
        "configured": 0.03477340712103605,
        "runtime": 0.03477340712103605,
        "default_model": 0.03477340712103605,
        "ai": 0.03477340712103605,
        "smollm2": 0.03477340712103605,
        "360m": 0.03477340712103605,
        "q4_k_m": 0.03477340712103605,
        "default_base_urls": 0.03477340712103605,
        "http": 0.0695468142420721,
        "localhost": 0.03477340712103605,
        "12434": 0.03477340712103605,
        "engines": 0.0695468142420721,
        "v1": 0.0695468142420721,
        "docker": 0.03477340712103605,
        "internal": 0.03477340712103605,
        "env_model_keys": 0.03477340712103605,
        "docgen_llm_model": 0.03477340712103605,
        "model_runner_model": 0.03477340712103605,
        "openai_model": 0.03477340712103605,
        "env_base_url_keys": 0.03477340712103605,
        "docgen_llm_base_url": 0.03477340712103605,
        "model_runner_base_url": 0.03477340712103605,
        "openai_base_url": 0.03477340712103605,
        "env_api_key_keys": 0.03477340712103605,
        "docgen_llm_api_key": 0.03477340712103605,
        "model_runner_api_key": 0.03477340712103605,
        "openai_api_key": 0.03477340712103605,
        "def": 0.03477340712103605,
        "__init__": 0.03477340712103605,
        "self": 0.2781872569682884,
        "none": 0.2781872569682884,
        "0": 0.0695468142420721,
        "2": 0.03477340712103605,
        "60": 0.03477340712103605,
        "_resolve_model": 0.03477340712103605,
        "_resolve_base_url": 0.03477340712103605
      },
      "text": "\"\"\"Adapters around local model runtimes (Model Runner / Ollama).\"\"\" from __future__ import annotations import ipaddress import json import os import subprocess from dataclasses import dataclass from typing import Callable, Optional, Sequence from urllib.error import HTTPError, URLError from urllib.parse import urlparse from urllib.request import Request, urlopen _AUTO_BASE_URL = object() _AUTO_API_KEY = object() @dataclass class LLMRequest: \"\"\"Represents an inference request for the local runner.\"\"\" prompt: str system: Optional[str] model: str temperature: Optional[float] max_tokens: Optional[int] executable: Optional[str] base_url: Optional[str] api_key: Optional[str] request_timeout: Optional[float] class LLMRunner: \"\"\"Executes prompts against the configured local model runtime.\"\"\" DEFAULT_MODEL = \"ai/smollm2:360M-Q4_K_M\" DEFAULT_BASE_URLS = ( \"http://localhost:12434/engines/v1\", \"http://model-runner.docker.internal/engines/v1\", ) ENV_MODEL_KEYS = (\"DOCGEN_LLM_MODEL\", \"MODEL_RUNNER_MODEL\", \"OPENAI_MODEL\") ENV_BASE_URL_KEYS = ( \"DOCGEN_LLM_BASE_URL\", \"MODEL_RUNNER_BASE_URL\", \"OPENAI_BASE_URL\", ) ENV_API_KEY_KEYS = ( \"DOCGEN_LLM_API_KEY\", \"MODEL_RUNNER_API_KEY\", \"OPENAI_API_KEY\", ) def __init__( self, model: str | None = None, *, base_url: str | None | object = _AUTO_BASE_URL, executable: str = \"ollama\", temperature: Optional[float] = 0.2, max_tokens: Optional[int] = None, api_key: str | None | object = _AUTO_API_KEY, request_timeout: Optional[float] = 60.0, runner: Callable[[LLMRequest], str] | None = None, ) -> None: self.model = self._resolve_model(model) self.base_url = self._resolve_base_url(base_url) self.executable = executable self.temperature = temperature self.max_tokens = max_tokens",
      "metadata": {
        "path": "docgen/llm/runner.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "c7388b0b628144f852bedd5c6bbc861437021fedd7b92b47ce7d80a1c4ca55aa"
      }
    },
    {
      "id": "docgen/analyzers/entrypoints.py#0",
      "vector": {
        "analyzer": 0.1138784427001685,
        "to": 0.037959480900056165,
        "detect": 0.07591896180011233,
        "executable": 0.07591896180011233,
        "entrypoints": 0.3795948090005617,
        "across": 0.037959480900056165,
        "supported": 0.037959480900056165,
        "languages": 0.037959480900056165,
        "from": 0.2657163663003932,
        "__future__": 0.037959480900056165,
        "import": 0.3036758472004493,
        "annotations": 0.037959480900056165,
        "re": 0.037959480900056165,
        "dataclasses": 0.037959480900056165,
        "dataclass": 0.07591896180011233,
        "pathlib": 0.037959480900056165,
        "path": 0.1138784427001685,
        "typing": 0.037959480900056165,
        "iterable": 0.07591896180011233,
        "list": 0.1138784427001685,
        "optional": 0.07591896180011233,
        "base": 0.037959480900056165,
        "utils": 0.037959480900056165,
        "build_node_script_command": 0.037959480900056165,
        "detect_node_package_manager": 0.037959480900056165,
        "load_node_dependencies": 0.037959480900056165,
        "load_package_json": 0.037959480900056165,
        "models": 0.037959480900056165,
        "repomanifest": 0.1138784427001685,
        "signal": 0.18979740450028085,
        "class": 0.07591896180011233,
        "entrypoint": 0.15183792360022466,
        "represents": 0.037959480900056165,
        "a": 0.037959480900056165,
        "detected": 0.037959480900056165,
        "with": 0.037959480900056165,
        "an": 0.037959480900056165,
        "associated": 0.037959480900056165,
        "command": 0.18979740450028085,
        "name": 0.1138784427001685,
        "str": 0.15183792360022466,
        "label": 0.1138784427001685,
        "priority": 0.18979740450028085,
        "int": 0.037959480900056165,
        "50": 0.037959480900056165,
        "framework": 0.15183792360022466,
        "none": 0.037959480900056165,
        "entrypointanalyzer": 0.037959480900056165,
        "for": 0.1138784427001685,
        "quick": 0.037959480900056165,
        "start": 0.037959480900056165,
        "guidance": 0.037959480900056165,
        "def": 0.07591896180011233,
        "supports": 0.037959480900056165,
        "self": 0.18979740450028085,
        "manifest": 0.2657163663003932,
        "bool": 0.07591896180011233,
        "return": 0.037959480900056165,
        "files": 0.07591896180011233,
        "analyze": 0.037959480900056165,
        "manifest_paths": 0.07591896180011233,
        "file": 0.07591896180011233,
        "in": 0.07591896180011233,
        "extend": 0.1138784427001685,
        "_python_entrypoints": 0.037959480900056165,
        "_node_entrypoints": 0.037959480900056165,
        "root": 0.037959480900056165,
        "_java_entrypoints": 0.037959480900056165,
        "signals": 0.1138784427001685,
        "entry": 0.3036758472004493,
        "sorted": 0.037959480900056165,
        "key": 0.07591896180011233,
        "lambda": 0.07591896180011233,
        "ep": 0.15183792360022466,
        "metadata": 0.15183792360022466,
        "if": 0.07591896180011233,
        "append": 0.07591896180011233,
        "f": 0.037959480900056165,
        "value": 0.037959480900056165,
        "source": 0.037959480900056165,
        "primary": 0.037959480900056165,
        "min": 0.037959480900056165
      },
      "text": "\"\"\"Analyzer to detect executable entrypoints across supported languages.\"\"\" from __future__ import annotations import re from dataclasses import dataclass from pathlib import Path from typing import Iterable, List, Optional from .base import Analyzer from .utils import ( build_node_script_command, detect_node_package_manager, load_node_dependencies, load_package_json, ) from ..models import RepoManifest, Signal @dataclass class EntryPoint: \"\"\"Represents a detected entrypoint with an associated command.\"\"\" name: str command: str label: str priority: int = 50 framework: Optional[str] = None class EntryPointAnalyzer(Analyzer): \"\"\"Detect executable entrypoints for quick-start guidance.\"\"\" def supports(self, manifest: RepoManifest) -> bool: return bool(manifest.files) def analyze(self, manifest: RepoManifest) -> Iterable[Signal]: entrypoints: List[EntryPoint] = [] manifest_paths = {file.path for file in manifest.files} entrypoints.extend(self._python_entrypoints(manifest)) entrypoints.extend(self._node_entrypoints(Path(manifest.root), manifest_paths)) entrypoints.extend(self._java_entrypoints(manifest)) signals: List[Signal] = [] for entry in sorted(entrypoints, key=lambda ep: ep.priority): metadata = { \"command\": entry.command, \"label\": entry.label, \"priority\": entry.priority, } if entry.framework: metadata[\"framework\"] = entry.framework signals.append( Signal( name=f\"entrypoint.{entry.name}\", value=entry.command, source=\"entrypoints\", metadata=metadata, ) ) if entrypoints: primary = min(entrypoints, key=lambda ep: ep.priority) signals.append( Signal(",
      "metadata": {
        "path": "docgen/analyzers/entrypoints.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "d14f60bd019671d92af370c3b1a0aaf5bf16fd3f50ae7fe6a538c86f089ec87c"
      }
    },
    {
      "id": "docgen/validators/base.py#0",
      "vector": {
        "core": 0.04481107149482209,
        "validation": 0.17924428597928835,
        "data": 0.04481107149482209,
        "structures": 0.04481107149482209,
        "and": 0.13443321448446624,
        "helpers": 0.04481107149482209,
        "from": 0.3584885719585767,
        "__future__": 0.04481107149482209,
        "import": 0.3584885719585767,
        "annotations": 0.04481107149482209,
        "collections": 0.04481107149482209,
        "defaultdict": 0.04481107149482209,
        "dataclasses": 0.04481107149482209,
        "dataclass": 0.13443321448446624,
        "re": 0.13443321448446624,
        "typing": 0.13443321448446624,
        "iterable": 0.04481107149482209,
        "list": 0.17924428597928835,
        "mapping": 0.04481107149482209,
        "mutablemapping": 0.04481107149482209,
        "optional": 0.04481107149482209,
        "protocol": 0.13443321448446624,
        "sequence": 0.08962214298964417,
        "set": 0.04481107149482209,
        "type_checking": 0.08962214298964417,
        "if": 0.04481107149482209,
        "pragma": 0.04481107149482209,
        "no": 0.04481107149482209,
        "cover": 0.04481107149482209,
        "aid": 0.04481107149482209,
        "docgen": 0.13443321448446624,
        "models": 0.04481107149482209,
        "repomanifest": 0.04481107149482209,
        "signal": 0.04481107149482209,
        "prompting": 0.04481107149482209,
        "builder": 0.04481107149482209,
        "section": 0.13443321448446624,
        "_token_pattern": 0.04481107149482209,
        "compile": 0.08962214298964417,
        "r": 0.08962214298964417,
        "a": 0.22405535747411043,
        "za": 0.08962214298964417,
        "z0": 0.08962214298964417,
        "9": 0.04481107149482209,
        "9_": 0.04481107149482209,
        "_camel_pattern": 0.04481107149482209,
        "z": 0.04481107149482209,
        "_stopwords": 0.04481107149482209,
        "about": 0.04481107149482209,
        "after": 0.04481107149482209,
        "against": 0.04481107149482209,
        "all": 0.04481107149482209,
        "also": 0.04481107149482209,
        "any": 0.08962214298964417,
        "are": 0.04481107149482209,
        "because": 0.04481107149482209,
        "being": 0.04481107149482209,
        "between": 0.04481107149482209,
        "both": 0.04481107149482209,
        "but": 0.04481107149482209,
        "docs": 0.04481107149482209,
        "context": 0.08962214298964417,
        "follow": 0.04481107149482209,
        "highlight": 0.04481107149482209,
        "highlights": 0.04481107149482209,
        "step": 0.04481107149482209,
        "steps": 0.04481107149482209,
        "started": 0.04481107149482209,
        "below": 0.04481107149482209,
        "each": 0.04481107149482209,
        "have": 0.04481107149482209,
        "into": 0.04481107149482209,
        "its": 0.04481107149482209,
        "more": 0.08962214298964417,
        "must": 0.04481107149482209,
        "only": 0.04481107149482209,
        "other": 0.04481107149482209,
        "over": 0.04481107149482209,
        "some": 0.04481107149482209,
        "than": 0.04481107149482209,
        "that": 0.04481107149482209,
        "the": 0.04481107149482209,
        "their": 0.04481107149482209,
        "them": 0.04481107149482209,
        "there": 0.04481107149482209,
        "these": 0.04481107149482209,
        "they": 0.04481107149482209,
        "this": 0.04481107149482209,
        "those": 0.04481107149482209,
        "through": 0.04481107149482209,
        "under": 0.04481107149482209,
        "using": 0.04481107149482209,
        "very": 0.04481107149482209,
        "were": 0.04481107149482209,
        "when": 0.08962214298964417,
        "where": 0.04481107149482209,
        "which": 0.04481107149482209,
        "will": 0.04481107149482209,
        "with": 0.04481107149482209,
        "within": 0.04481107149482209,
        "class": 0.17924428597928835,
        "validationissue": 0.13443321448446624,
        "represents": 0.04481107149482209,
        "single": 0.04481107149482209,
        "failure": 0.04481107149482209,
        "for": 0.08962214298964417,
        "readme": 0.08962214298964417,
        "str": 0.2688664289689325,
        "sentence": 0.04481107149482209,
        "missing_terms": 0.04481107149482209,
        "detail": 0.04481107149482209,
        "validationerror": 0.04481107149482209,
        "runtimeerror": 0.04481107149482209,
        "raised": 0.04481107149482209,
        "fails": 0.04481107149482209,
        "one": 0.04481107149482209,
        "or": 0.04481107149482209,
        "sections": 0.04481107149482209,
        "def": 0.08962214298964417,
        "__init__": 0.08962214298964417,
        "self": 0.13443321448446624,
        "message": 0.08962214298964417,
        "issues": 0.17924428597928835,
        "none": 0.04481107149482209,
        "super": 0.04481107149482209,
        "validator": 0.04481107149482209,
        "implemented": 0.04481107149482209,
        "by": 0.04481107149482209,
        "validators": 0.04481107149482209,
        "name": 0.04481107149482209,
        "validate": 0.04481107149482209,
        "validationcontext": 0.04481107149482209,
        "run": 0.04481107149482209,
        "return": 0.04481107149482209,
        "evidencesnapshot": 0.04481107149482209,
        "summari": 0.04481107149482209
      },
      "text": "\"\"\"Core validation data structures and helpers.\"\"\" from __future__ import annotations from collections import defaultdict from dataclasses import dataclass import re from typing import Iterable, List, Mapping, MutableMapping, Optional, Protocol, Sequence, Set from typing import TYPE_CHECKING if TYPE_CHECKING: # pragma: no cover - typing aid from docgen.models import RepoManifest, Signal from docgen.prompting.builder import Section _TOKEN_PATTERN = re.compile(r\"[A-Za-z0-9][A-Za-z0-9_.:/-]*\") _CAMEL_PATTERN = re.compile(r\"(?<!^)(?=[A-Z])\") _STOPWORDS = { \"about\", \"after\", \"against\", \"all\", \"also\", \"and\", \"any\", \"are\", \"because\", \"being\", \"between\", \"both\", \"but\", \"docs\", \"docgen\", \"context\", \"follow\", \"highlight\", \"highlights\", \"step\", \"steps\", \"started\", \"below\", \"each\", \"from\", \"have\", \"into\", \"its\", \"more\", \"must\", \"only\", \"other\", \"over\", \"some\", \"than\", \"that\", \"the\", \"their\", \"them\", \"there\", \"these\", \"they\", \"this\", \"those\", \"through\", \"under\", \"using\", \"very\", \"were\", \"when\", \"where\", \"which\", \"will\", \"with\", \"within\", } @dataclass class ValidationIssue: \"\"\"Represents a single validation failure for a README section.\"\"\" section: str sentence: str missing_terms: List[str] detail: str class ValidationError(RuntimeError): \"\"\"Raised when validation fails for one or more sections.\"\"\" def __init__(self, message: str, issues: Sequence[ValidationIssue]) -> None: super().__init__(message) self.issues = list(issues) class Validator(Protocol): \"\"\"Protocol implemented by README validators.\"\"\" name: str def validate(self, context: \"ValidationContext\") -> List[ValidationIssue]: \"\"\"Run validation and return any issues.\"\"\" @dataclass class EvidenceSnapshot: \"\"\"Summari",
      "metadata": {
        "path": "docgen/validators/base.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "69ff1f7f8207dbf94253f17a1038f98d28fe9e9b59fcf86fd4f048a6cd9b8670"
      }
    },
    {
      "id": "docgen/analyzers/tree_sitter.py#0",
      "vector": {
        "tree": 0.07367094686837573,
        "sitter": 0.07367094686837573,
        "powered": 0.03683547343418787,
        "symbol": 0.03683547343418787,
        "analyzer": 0.1105064203025636,
        "from": 0.29468378747350293,
        "__future__": 0.03683547343418787,
        "import": 0.29468378747350293,
        "annotations": 0.03683547343418787,
        "dataclasses": 0.03683547343418787,
        "dataclass": 0.07367094686837573,
        "pathlib": 0.03683547343418787,
        "path": 0.2578483140393151,
        "typing": 0.03683547343418787,
        "dict": 0.07367094686837573,
        "iterable": 0.07367094686837573,
        "list": 0.07367094686837573,
        "optional": 0.18417736717093933,
        "base": 0.03683547343418787,
        "models": 0.03683547343418787,
        "repomanifest": 0.1105064203025636,
        "signal": 0.1105064203025636,
        "try": 0.07367094686837573,
        "pragma": 0.07367094686837573,
        "no": 0.07367094686837573,
        "cover": 0.07367094686837573,
        "dependency": 0.07367094686837573,
        "tree_sitter": 0.03683547343418787,
        "parser": 0.18417736717093933,
        "tree_sitter_languages": 0.03683547343418787,
        "get_language": 0.07367094686837573,
        "tree_sitter_available": 0.1105064203025636,
        "true": 0.03683547343418787,
        "except": 0.07367094686837573,
        "modulenotfounderror": 0.03683547343418787,
        "none": 0.2210128406051272,
        "type": 0.07367094686837573,
        "ignore": 0.07367094686837573,
        "assignment": 0.07367094686837573,
        "false": 0.07367094686837573,
        "_supported_languages": 0.03683547343418787,
        "python": 0.07367094686837573,
        "java": 0.07367094686837573,
        "typescript": 0.07367094686837573,
        "class": 0.1105064203025636,
        "_parsedsymbol": 0.03683547343418787,
        "name": 0.03683547343418787,
        "str": 0.14734189373675147,
        "kind": 0.03683547343418787,
        "signature": 0.03683547343418787,
        "treesitteranalyzer": 0.03683547343418787,
        "extracts": 0.03683547343418787,
        "function": 0.03683547343418787,
        "and": 0.03683547343418787,
        "symbols": 0.03683547343418787,
        "using": 0.03683547343418787,
        "parsers": 0.03683547343418787,
        "cache_version": 0.03683547343418787,
        "1": 0.03683547343418787,
        "def": 0.1105064203025636,
        "__init__": 0.03683547343418787,
        "self": 0.36835473434187865,
        "enabled": 0.1105064203025636,
        "bool": 0.07367094686837573,
        "_enabled": 0.1105064203025636,
        "if": 0.18417736717093933,
        "is": 0.07367094686837573,
        "else": 0.03683547343418787,
        "_parsers": 0.03683547343418787,
        "supports": 0.03683547343418787,
        "manifest": 0.18417736717093933,
        "not": 0.1105064203025636,
        "return": 0.1105064203025636,
        "any": 0.03683547343418787,
        "_language_for_file": 0.07367094686837573,
        "meta": 0.2578483140393151,
        "language": 0.07367094686837573,
        "for": 0.07367094686837573,
        "in": 0.07367094686837573,
        "files": 0.07367094686837573,
        "analyze": 0.03683547343418787,
        "signals": 0.03683547343418787,
        "language_key": 0.1105064203025636,
        "continue": 0.1105064203025636,
        "_get_parser": 0.03683547343418787,
        "root": 0.03683547343418787,
        "source": 0.03683547343418787,
        "read_text": 0.03683547343418787,
        "encoding": 0.03683547343418787,
        "utf": 0.03683547343418787,
        "8": 0.03683547343418787,
        "oserror": 0.03683547343418787,
        "unicodedecodeerror": 0.03683547343418787
      },
      "text": "\"\"\"Tree-sitter powered symbol analyzer.\"\"\" from __future__ import annotations from dataclasses import dataclass from pathlib import Path from typing import Dict, Iterable, List, Optional from .base import Analyzer from ..models import RepoManifest, Signal try: # pragma: no cover - optional dependency from tree_sitter import Parser from tree_sitter_languages import get_language TREE_SITTER_AVAILABLE = True except ModuleNotFoundError: # pragma: no cover - optional dependency Parser = None # type: ignore[assignment] get_language = None # type: ignore[assignment] TREE_SITTER_AVAILABLE = False _SUPPORTED_LANGUAGES = { \"Python\": \"python\", \"Java\": \"java\", \"TypeScript\": \"typescript\", } @dataclass class _ParsedSymbol: name: str kind: str signature: Optional[str] class TreeSitterAnalyzer(Analyzer): \"\"\"Extracts function and class symbols using tree-sitter parsers.\"\"\" cache_version = \"1\" def __init__(self, enabled: Optional[bool] = None) -> None: self._enabled = TREE_SITTER_AVAILABLE if enabled is None else enabled self._parsers: Dict[str, Parser] = {} def supports(self, manifest: RepoManifest) -> bool: if not self._enabled: return False return any(self._language_for_file(meta.path, meta.language) for meta in manifest.files) def analyze(self, manifest: RepoManifest) -> Iterable[Signal]: if not self._enabled: return [] signals: List[Signal] = [] for meta in manifest.files: language_key = self._language_for_file(meta.path, meta.language) if not language_key: continue parser = self._get_parser(language_key) if parser is None: continue path = Path(manifest.root) / meta.path try: source = path.read_text(encoding=\"utf-8\") except (OSError, UnicodeDecodeError): continue",
      "metadata": {
        "path": "docgen/analyzers/tree_sitter.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "c2d062f2d46ba6c4e130bf64054f426daf8d112801b4f586692b4f617890e929"
      }
    },
    {
      "id": "docgen/analyzers/utils.py#0",
      "vector": {
        "shared": 0.03313147809612858,
        "helper": 0.03313147809612858,
        "utilities": 0.03313147809612858,
        "for": 0.13252591238451433,
        "analyzer": 0.03313147809612858,
        "implementations": 0.03313147809612858,
        "from": 0.13252591238451433,
        "__future__": 0.03313147809612858,
        "import": 0.23192034667290007,
        "annotations": 0.03313147809612858,
        "json": 0.03313147809612858,
        "re": 0.09939443428838575,
        "tomllib": 0.06626295619225717,
        "xml": 0.03313147809612858,
        "etree": 0.03313147809612858,
        "elementtree": 0.03313147809612858,
        "as": 0.03313147809612858,
        "et": 0.03313147809612858,
        "pathlib": 0.03313147809612858,
        "path": 0.26505182476902867,
        "typing": 0.03313147809612858,
        "dict": 0.13252591238451433,
        "iterable": 0.03313147809612858,
        "list": 0.1656573904806429,
        "set": 0.1656573904806429,
        "python": 0.06626295619225717,
        "dependency": 0.03313147809612858,
        "helpers": 0.03313147809612858,
        "def": 0.09939443428838575,
        "load_python_dependencies": 0.03313147809612858,
        "root": 0.09939443428838575,
        "str": 0.23192034667290007,
        "collect": 0.03313147809612858,
        "dependencies": 0.2981833028651572,
        "requirements": 0.1656573904806429,
        "txt": 0.06626295619225717,
        "and": 0.06626295619225717,
        "pyproject": 0.1656573904806429,
        "toml": 0.06626295619225717,
        "deps": 0.13252591238451433,
        "if": 0.2981833028651572,
        "exists": 0.06626295619225717,
        "update": 0.06626295619225717,
        "_parse_requirements": 0.06626295619225717,
        "_parse_pyproject": 0.06626295619225717,
        "return": 0.09939443428838575,
        "sorted": 0.03313147809612858,
        "packages": 0.13252591238451433,
        "line": 0.06626295619225717,
        "in": 0.09939443428838575,
        "read_text": 0.06626295619225717,
        "encoding": 0.06626295619225717,
        "utf": 0.06626295619225717,
        "8": 0.06626295619225717,
        "splitlines": 0.03313147809612858,
        "stripped": 0.13252591238451433,
        "strip": 0.09939443428838575,
        "not": 0.03313147809612858,
        "or": 0.1656573904806429,
        "startswith": 0.03313147809612858,
        "r": 0.09939443428838575,
        "continue": 0.03313147809612858,
        "name": 0.1987888685767715,
        "split": 0.06626295619225717,
        "1": 0.06626295619225717,
        "0": 0.06626295619225717,
        "append": 0.03313147809612858,
        "try": 0.03313147809612858,
        "data": 0.13252591238451433,
        "loads": 0.03313147809612858,
        "except": 0.03313147809612858,
        "exception": 0.03313147809612858,
        "project": 0.1656573904806429,
        "get": 0.23192034667290007,
        "isinstance": 0.13252591238451433,
        "extend": 0.09939443428838575,
        "optional": 0.09939443428838575,
        "values": 0.09939443428838575,
        "poetry": 0.13252591238451433,
        "tool": 0.06626295619225717,
        "else": 0.03313147809612858,
        "poetry_deps": 0.06626295619225717,
        "keys": 0.03313147809612858,
        "dep": 0.09939443428838575,
        "lower": 0.03313147809612858
      },
      "text": "\ufeff\"\"\"Shared helper utilities for analyzer implementations.\"\"\" from __future__ import annotations import json import re import tomllib import xml.etree.ElementTree as ET from pathlib import Path from typing import Dict, Iterable, List, Set # Python dependency helpers def load_python_dependencies(root: Path) -> List[str]: \"\"\"Collect Python dependencies from requirements.txt and pyproject.toml.\"\"\" deps: Set[str] = set() requirements = root / \"requirements.txt\" if requirements.exists(): deps.update(_parse_requirements(requirements)) pyproject = root / \"pyproject.toml\" if pyproject.exists(): deps.update(_parse_pyproject(pyproject)) return sorted(deps) def _parse_requirements(path: Path) -> List[str]: packages: List[str] = [] for line in path.read_text(encoding=\"utf-8\").splitlines(): stripped = line.strip() if not stripped or stripped.startswith((\"#\", \"-r\")): continue name = re.split(r\"[<>=!~]\", stripped, 1)[0].strip() if name: packages.append(name) return packages def _parse_pyproject(path: Path) -> List[str]: packages: Set[str] = set() try: data = tomllib.loads(path.read_text(encoding=\"utf-8\")) except Exception: return [] dependencies = [] project = data.get(\"project\") if isinstance(project, dict): dependencies.extend(project.get(\"dependencies\", []) or []) optional = project.get(\"optional-dependencies\", {}) or {} for values in optional.values(): dependencies.extend(values or []) poetry = data.get(\"tool\", {}).get(\"poetry\", {}) if isinstance(data.get(\"tool\"), dict) else {} if isinstance(poetry, dict): poetry_deps = poetry.get(\"dependencies\", {}) or {} dependencies.extend(poetry_deps.keys()) for dep in dependencies: if isinstance(dep, str): name = re.split(r\"[<>=!~]\", dep, 1)[0].strip() if name and name.lower() != \"",
      "metadata": {
        "path": "docgen/analyzers/utils.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "930b9270766c59bb0b911a4faa374adb8d46b8e91d2a1e20c2715eb0683e1087"
      }
    },
    {
      "id": "docgen/rag/indexer.py#0",
      "vector": {
        "index": 0.09933992677987828,
        "builder": 0.033113308926626096,
        "for": 0.29801978033963483,
        "minimal": 0.033113308926626096,
        "retrieval": 0.033113308926626096,
        "augmented": 0.033113308926626096,
        "generation": 0.06622661785325219,
        "from": 0.29801978033963483,
        "__future__": 0.033113308926626096,
        "import": 0.33113308926626095,
        "annotations": 0.033113308926626096,
        "dataclasses": 0.033113308926626096,
        "dataclass": 0.06622661785325219,
        "pathlib": 0.033113308926626096,
        "path": 0.13245323570650439,
        "typing": 0.033113308926626096,
        "dict": 0.09933992677987828,
        "iterable": 0.033113308926626096,
        "list": 0.19867985355975656,
        "sequence": 0.06622661785325219,
        "set": 0.09933992677987828,
        "hashlib": 0.033113308926626096,
        "models": 0.033113308926626096,
        "repomanifest": 0.06622661785325219,
        "repo_scanner": 0.033113308926626096,
        "filemeta": 0.033113308926626096,
        "constants": 0.033113308926626096,
        "section_tags": 0.06622661785325219,
        "tag_sections": 0.033113308926626096,
        "embedder": 0.13245323570650439,
        "localembedder": 0.09933992677987828,
        "store": 0.29801978033963483,
        "embeddingstore": 0.06622661785325219,
        "class": 0.06622661785325219,
        "ragindex": 0.06622661785325219,
        "holds": 0.033113308926626096,
        "contexts": 0.13245323570650439,
        "readme": 0.06622661785325219,
        "sections": 0.13245323570650439,
        "and": 0.033113308926626096,
        "metadata": 0.033113308926626096,
        "str": 0.19867985355975656,
        "store_path": 0.09933992677987828,
        "ragindexer": 0.033113308926626096,
        "builds": 0.033113308926626096,
        "a": 0.033113308926626096,
        "lightweight": 0.033113308926626096,
        "embedding": 0.033113308926626096,
        "def": 0.06622661785325219,
        "__init__": 0.033113308926626096,
        "self": 0.23179316248638265,
        "none": 0.16556654463313047,
        "top_source_files": 0.09933992677987828,
        "int": 0.033113308926626096,
        "20": 0.033113308926626096,
        "or": 0.033113308926626096,
        "build": 0.033113308926626096,
        "manifest": 0.16556654463313047,
        "target_sections": 0.09933992677987828,
        "if": 0.06622661785325219,
        "else": 0.033113308926626096,
        "keys": 0.033113308926626096,
        "root": 0.19867985355975656,
        "docgen": 0.033113308926626096,
        "embeddings": 0.033113308926626096,
        "json": 0.033113308926626096,
        "load_existing": 0.033113308926626096,
        "true": 0.033113308926626096,
        "section": 0.16556654463313047,
        "in": 0.23179316248638265,
        "meta_lookup": 0.06622661785325219,
        "file": 0.09933992677987828,
        "files": 0.09933992677987828,
        "visited_paths": 0.16556654463313047,
        "_index_readme": 0.033113308926626096,
        "_index_docs": 0.033113308926626096,
        "_index_source_files": 0.033113308926626096,
        "existing": 0.09933992677987828,
        "paths": 0.033113308926626096,
        "not": 0.033113308926626096,
        "remove_path": 0.033113308926626096,
        "persist": 0.033113308926626096,
        "entries": 0.06622661785325219,
        "query": 0.033113308926626096,
        "top_k": 0.033113308926626096,
        "2": 0.033113308926626096,
        "snippets": 0.033113308926626096,
        "_trim_snippet": 0.033113308926626096,
        "entry": 0.06622661785325219,
        "text": 0.033113308926626096,
        "snippet": 0.06622661785325219
      },
      "text": "\"\"\"Index builder for minimal retrieval augmented generation.\"\"\" from __future__ import annotations from dataclasses import dataclass from pathlib import Path from typing import Dict, Iterable, List, Sequence, Set import hashlib from ..models import RepoManifest from ..repo_scanner import FileMeta from .constants import SECTION_TAGS, TAG_SECTIONS from .embedder import LocalEmbedder from .store import EmbeddingStore @dataclass class RAGIndex: \"\"\"Holds contexts for README sections and index metadata.\"\"\" contexts: Dict[str, List[str]] store_path: Path class RAGIndexer: \"\"\"Builds a lightweight embedding index for README generation.\"\"\" def __init__(self, *, embedder: LocalEmbedder | None = None, top_source_files: int = 20) -> None: self.embedder = embedder or LocalEmbedder() self.top_source_files = top_source_files def build(self, manifest: RepoManifest, *, sections: Sequence[str] | None = None) -> RAGIndex: target_sections = list(sections) if sections else list(SECTION_TAGS.keys()) root = Path(manifest.root) store_path = root / \".docgen\" / \"embeddings.json\" store = EmbeddingStore(store_path, load_existing=True) contexts: Dict[str, List[str]] = {section: [] for section in target_sections} meta_lookup = {file.path: file for file in manifest.files} visited_paths: Set[str] = set() self._index_readme(root, store, meta_lookup, visited_paths) self._index_docs(manifest.files, root, store, visited_paths) self._index_source_files(manifest.files, root, store, visited_paths) for existing in list(store.paths()): if existing not in visited_paths: store.remove_path(existing) store.persist() for section in target_sections: entries = store.query(section, top_k=2) snippets = [_trim_snippet(entry[\"text\"]) for entry in entries] contexts[section] = [snippet for snippet in",
      "metadata": {
        "path": "docgen/rag/indexer.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "1c5240048a95787e0b54e5fc674b7d7c2df7b5a4072a47d585e56be61c7d837a"
      }
    },
    {
      "id": "docgen/analyzers/structure.py#0",
      "vector": {
        "analyzer": 0.10790250018984096,
        "that": 0.03596750006328032,
        "infers": 0.03596750006328032,
        "repository": 0.03596750006328032,
        "architecture": 0.07193500012656064,
        "constructs": 0.03596750006328032,
        "for": 0.07193500012656064,
        "readme": 0.03596750006328032,
        "init": 0.03596750006328032,
        "from": 0.3596750006328032,
        "__future__": 0.03596750006328032,
        "import": 0.3596750006328032,
        "annotations": 0.03596750006328032,
        "re": 0.07193500012656064,
        "collections": 0.03596750006328032,
        "defaultdict": 0.07193500012656064,
        "pathlib": 0.03596750006328032,
        "path": 0.03596750006328032,
        "dataclasses": 0.03596750006328032,
        "dataclass": 0.07193500012656064,
        "typing": 0.03596750006328032,
        "dict": 0.10790250018984096,
        "iterable": 0.07193500012656064,
        "list": 0.10790250018984096,
        "sequence": 0.07193500012656064,
        "base": 0.03596750006328032,
        "endpoints": 0.07193500012656064,
        "core": 0.03596750006328032,
        "detectorregistry": 0.03596750006328032,
        "detectors": 0.03596750006328032,
        "expressdetector": 0.07193500012656064,
        "fastapidetector": 0.07193500012656064,
        "specdetector": 0.07193500012656064,
        "springdetector": 0.07193500012656064,
        "models": 0.03596750006328032,
        "repomanifest": 0.14387000025312127,
        "signal": 0.14387000025312127,
        "_py_model_class": 0.03596750006328032,
        "compile": 0.03596750006328032,
        "r": 0.03596750006328032,
        "class": 0.10790250018984096,
        "s": 0.03596750006328032,
        "w": 0.03596750006328032,
        "_filesummary": 0.10790250018984096,
        "count": 0.03596750006328032,
        "int": 0.03596750006328032,
        "0": 0.03596750006328032,
        "roles": 0.10790250018984096,
        "set": 0.14387000025312127,
        "str": 0.14387000025312127,
        "none": 0.1798375003164016,
        "type": 0.07193500012656064,
        "ignore": 0.07193500012656064,
        "assignment": 0.07193500012656064,
        "languages": 0.10790250018984096,
        "def": 0.14387000025312127,
        "__post_init__": 0.03596750006328032,
        "self": 0.39564250069608353,
        "if": 0.10790250018984096,
        "is": 0.07193500012656064,
        "structureanalyzer": 0.03596750006328032,
        "derives": 0.03596750006328032,
        "architectural": 0.03596750006328032,
        "signals": 0.21580500037968192,
        "source": 0.07193500012656064,
        "files": 0.10790250018984096,
        "and": 0.03596750006328032,
        "layout": 0.03596750006328032,
        "_endpoint_detectors": 0.03596750006328032,
        "supports": 0.03596750006328032,
        "manifest": 0.28774000050624254,
        "bool": 0.07193500012656064,
        "return": 0.07193500012656064,
        "analyze": 0.03596750006328032,
        "modules": 0.21580500037968192,
        "_summarise_modules": 0.07193500012656064,
        "append": 0.03596750006328032,
        "name": 0.03596750006328032,
        "value": 0.03596750006328032,
        "structure": 0.03596750006328032,
        "metadata": 0.03596750006328032,
        "extend": 0.07193500012656064,
        "_detect_api_endpoints": 0.03596750006328032,
        "_detect_entities": 0.03596750006328032,
        "object": 0.03596750006328032,
        "summaries": 0.03596750006328032,
        "meta": 0.03596750006328032,
        "in": 0.03596750006328032
      },
      "text": "\"\"\"Analyzer that infers repository architecture constructs for README init.\"\"\" from __future__ import annotations import re from collections import defaultdict from pathlib import Path from dataclasses import dataclass from typing import Dict, Iterable, List, Sequence from .base import Analyzer from .endpoints.core import DetectorRegistry from .endpoints.detectors import ExpressDetector, FastAPIDetector, SpecDetector, SpringDetector from ..models import RepoManifest, Signal _PY_MODEL_CLASS = re.compile(r\"class\\s+(\\w+)\\(([^)]*)\\):\") @dataclass class _FileSummary: count: int = 0 roles: set[str] = None # type: ignore[assignment] languages: set[str] = None # type: ignore[assignment] def __post_init__(self) -> None: if self.roles is None: self.roles = set() if self.languages is None: self.languages = set() class StructureAnalyzer(Analyzer): \"\"\"Derives architectural signals from source files and layout.\"\"\" _ENDPOINT_DETECTORS: Sequence = ( SpecDetector(), FastAPIDetector(), ExpressDetector(), SpringDetector(), ) def supports(self, manifest: RepoManifest) -> bool: return bool(manifest.files) def analyze(self, manifest: RepoManifest) -> Iterable[Signal]: signals: List[Signal] = [] modules = self._summarise_modules(manifest) if modules: signals.append( Signal( name=\"architecture.modules\", value=\"modules\", source=\"structure\", metadata={\"modules\": modules}, ) ) signals.extend(self._detect_api_endpoints(manifest)) signals.extend(self._detect_entities(manifest)) return signals def _summarise_modules(self, manifest: RepoManifest) -> List[Dict[str, object]]: summaries: Dict[str, _FileSummary] = defaultdict(_FileSummary) for meta in manifest.files:",
      "metadata": {
        "path": "docgen/analyzers/structure.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "605d812fa565f89873c2fd4cc2d31872f5ea5c304f36e0158eca6b0d149f53a6"
      }
    },
    {
      "id": "docgen/cli.py#0",
      "vector": {
        "cli": 0.04271788288583805,
        "entrypoints": 0.04271788288583805,
        "for": 0.1708715315433522,
        "docgen": 0.0854357657716761,
        "commands": 0.04271788288583805,
        "from": 0.21358941442919022,
        "__future__": 0.04271788288583805,
        "import": 0.2990251802008663,
        "annotations": 0.04271788288583805,
        "argparse": 0.25630729731502827,
        "sys": 0.04271788288583805,
        "pathlib": 0.04271788288583805,
        "path": 0.21358941442919022,
        "orchestrator": 0.0854357657716761,
        "service": 0.04271788288583805,
        "run_service": 0.04271788288583805,
        "logging": 0.04271788288583805,
        "configure_logging": 0.04271788288583805,
        "def": 0.12815364865751414,
        "_add_verbose_option": 0.1708715315433522,
        "parser": 0.2990251802008663,
        "argumentparser": 0.1708715315433522,
        "suppress_default": 0.1708715315433522,
        "bool": 0.04271788288583805,
        "false": 0.0854357657716761,
        "none": 0.0854357657716761,
        "kwargs": 0.1708715315433522,
        "dict": 0.04271788288583805,
        "str": 0.04271788288583805,
        "object": 0.04271788288583805,
        "action": 0.0854357657716761,
        "store_true": 0.0854357657716761,
        "help": 0.25630729731502827,
        "increase": 0.04271788288583805,
        "log": 0.04271788288583805,
        "verbosity": 0.04271788288583805,
        "troubleshooting": 0.04271788288583805,
        "if": 0.04271788288583805,
        "default": 0.1708715315433522,
        "suppress": 0.04271788288583805,
        "else": 0.04271788288583805,
        "add_argument": 0.1708715315433522,
        "v": 0.04271788288583805,
        "verbose": 0.04271788288583805,
        "_add_skip_validation_option": 0.12815364865751414,
        "skip": 0.0854357657716761,
        "validation": 0.0854357657716761,
        "readme": 0.1708715315433522,
        "guards": 0.04271788288583805,
        "this": 0.04271788288583805,
        "run": 0.04271788288583805,
        "not": 0.04271788288583805,
        "recommended": 0.04271788288583805,
        "_build_parser": 0.04271788288583805,
        "prog": 0.04271788288583805,
        "description": 0.04271788288583805,
        "generate": 0.04271788288583805,
        "and": 0.04271788288583805,
        "maintain": 0.04271788288583805,
        "files": 0.04271788288583805,
        "using": 0.04271788288583805,
        "repository": 0.1708715315433522,
        "analysis": 0.04271788288583805,
        "subparsers": 0.12815364865751414,
        "add_subparsers": 0.04271788288583805,
        "dest": 0.04271788288583805,
        "command": 0.04271788288583805,
        "required": 0.04271788288583805,
        "true": 0.12815364865751414,
        "init_parser": 0.1708715315433522,
        "add_parser": 0.0854357657716761,
        "init": 0.04271788288583805,
        "initialize": 0.04271788288583805,
        "a": 0.0854357657716761,
        "that": 0.04271788288583805,
        "lacks": 0.04271788288583805,
        "one": 0.04271788288583805,
        "nargs": 0.0854357657716761,
        "to": 0.12815364865751414,
        "the": 0.0854357657716761,
        "root": 0.04271788288583805,
        "defaults": 0.04271788288583805,
        "current": 0.04271788288583805,
        "directory": 0.04271788288583805,
        "update_parser": 0.1708715315433522,
        "update": 0.0854357657716761,
        "sections": 0.04271788288583805,
        "after": 0.04271788288583805,
        "changes": 0.04271788288583805,
        "re": 0.04271788288583805
      },
      "text": "\ufeff\"\"\"CLI entrypoints for docgen commands.\"\"\" from __future__ import annotations import argparse import sys from pathlib import Path from .orchestrator import Orchestrator from .service import run_service from .logging import configure_logging def _add_verbose_option( parser: argparse.ArgumentParser, *, suppress_default: bool = False ) -> None: kwargs: dict[str, object] = { \"action\": \"store_true\", \"help\": \"Increase log verbosity for troubleshooting.\", } if suppress_default: kwargs[\"default\"] = argparse.SUPPRESS else: kwargs[\"default\"] = False parser.add_argument( \"-v\", \"--verbose\", **kwargs, ) def _add_skip_validation_option(parser: argparse.ArgumentParser) -> None: parser.add_argument( \"--skip-validation\", action=\"store_true\", help=\"Skip README validation guards for this run (not recommended).\", ) def _build_parser() -> argparse.ArgumentParser: parser = argparse.ArgumentParser( prog=\"docgen\", description=\"Generate and maintain README files using repository analysis.\", ) _add_verbose_option(parser) subparsers = parser.add_subparsers(dest=\"command\", required=True) init_parser = subparsers.add_parser( \"init\", help=\"Initialize a README for a repository that lacks one.\", ) _add_verbose_option(init_parser, suppress_default=True) _add_skip_validation_option(init_parser) init_parser.add_argument( \"path\", nargs=\"?\", default=\".\", help=\"Path to the repository root (defaults to current directory).\", ) update_parser = subparsers.add_parser( \"update\", help=\"Update README sections after repository changes.\", ) _add_verbose_option(update_parser, suppress_default=True) _add_skip_validation_option(update_parser) update_parser.add_argument( \"path\", nargs=\"?\", default=\".\", help=\"Path to the re",
      "metadata": {
        "path": "docgen/cli.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "e99c0948e5b7f8283685fadd5986ae972c25b37a54f1b27c65f3875d2669fdb5"
      }
    },
    {
      "id": "docgen/git/publisher.py#0",
      "vector": {
        "git": 0.23596995186213474,
        "publishing": 0.033709993123162106,
        "utilities": 0.033709993123162106,
        "from": 0.10112997936948631,
        "__future__": 0.033709993123162106,
        "import": 0.1685499656158105,
        "annotations": 0.033709993123162106,
        "os": 0.06741998624632421,
        "subprocess": 0.033709993123162106,
        "pathlib": 0.033709993123162106,
        "path": 0.20225995873897262,
        "typing": 0.033709993123162106,
        "callable": 0.06741998624632421,
        "iterable": 0.033709993123162106,
        "sequence": 0.13483997249264842,
        "class": 0.033709993123162106,
        "publisher": 0.033709993123162106,
        "handles": 0.033709993123162106,
        "branch": 0.06741998624632421,
        "management": 0.033709993123162106,
        "and": 0.10112997936948631,
        "pr": 0.06741998624632421,
        "creation": 0.033709993123162106,
        "for": 0.10112997936948631,
        "readme": 0.06741998624632421,
        "updates": 0.033709993123162106,
        "def": 0.10112997936948631,
        "__init__": 0.033709993123162106,
        "self": 0.30338993810845893,
        "runner": 0.06741998624632421,
        "str": 0.37080992435478316,
        "none": 0.23596995186213474,
        "_runner": 0.033709993123162106,
        "or": 0.033709993123162106,
        "_default_runner": 0.033709993123162106,
        "commit": 0.13483997249264842,
        "repo_path": 0.13483997249264842,
        "files": 0.1685499656158105,
        "message": 0.06741998624632421,
        "docs": 0.033709993123162106,
        "bootstrap": 0.033709993123162106,
        "via": 0.06741998624632421,
        "docgen": 0.10112997936948631,
        "init": 0.033709993123162106,
        "bool": 0.13483997249264842,
        "stage": 0.033709993123162106,
        "the": 0.10112997936948631,
        "provided": 0.033709993123162106,
        "create": 0.06741998624632421,
        "a": 0.10112997936948631,
        "if": 0.13483997249264842,
        "changes": 0.033709993123162106,
        "exist": 0.033709993123162106,
        "repo": 0.26967994498529685,
        "not": 0.10112997936948631,
        "exists": 0.06741998624632421,
        "return": 0.13483997249264842,
        "false": 0.13483997249264842,
        "relative_files": 0.06741998624632421,
        "_to_relative": 0.033709993123162106,
        "file": 0.06741998624632421,
        "in": 0.06741998624632421,
        "rel": 0.06741998624632421,
        "_run": 0.10112997936948631,
        "add": 0.033709993123162106,
        "cwd": 0.10112997936948631,
        "status": 0.10112997936948631,
        "porcelain": 0.033709993123162106,
        "capture_output": 0.033709993123162106,
        "true": 0.10112997936948631,
        "strip": 0.033709993123162106,
        "env": 0.30338993810845893,
        "environ": 0.033709993123162106,
        "copy": 0.033709993123162106,
        "setdefault": 0.13483997249264842,
        "git_author_name": 0.06741998624632421,
        "git_author_email": 0.06741998624632421,
        "example": 0.033709993123162106,
        "com": 0.033709993123162106,
        "git_committer_name": 0.033709993123162106,
        "git_committer_email": 0.033709993123162106,
        "m": 0.033709993123162106,
        "publish_pr": 0.033709993123162106,
        "branch_name": 0.033709993123162106,
        "base_branch": 0.033709993123162106,
        "title": 0.033709993123162106,
        "body": 0.033709993123162106,
        "push": 0.033709993123162106,
        "labels": 0.033709993123162106,
        "update_existing": 0.033709993123162106,
        "open": 0.033709993123162106,
        "github": 0.033709993123162106,
        "cli": 0.033709993123162106,
        "checkout_cmd": 0.033709993123162106
      },
      "text": "\ufeff\"\"\"Git publishing utilities.\"\"\" from __future__ import annotations import os import subprocess from pathlib import Path from typing import Callable, Iterable, Sequence class Publisher: \"\"\"Handles branch management and PR creation for README updates.\"\"\" def __init__(self, runner: Callable[..., str] | None = None) -> None: self._runner = runner or self._default_runner def commit( self, repo_path: str, files: Sequence[Path | str], *, message: str = \"docs: bootstrap README via docgen init\", ) -> bool: \"\"\"Stage the provided files and create a commit if changes exist.\"\"\" repo = Path(repo_path) if not (repo / \".git\").exists(): return False relative_files = [self._to_relative(repo, Path(file)) for file in files] for rel in relative_files: self._run([\"git\", \"add\", rel], cwd=repo) status = self._run([\"git\", \"status\", \"--porcelain\"], cwd=repo, capture_output=True) if not status.strip(): return False env = os.environ.copy() env.setdefault(\"GIT_AUTHOR_NAME\", \"docgen\") env.setdefault(\"GIT_AUTHOR_EMAIL\", \"docgen@example.com\") env.setdefault(\"GIT_COMMITTER_NAME\", env[\"GIT_AUTHOR_NAME\"]) env.setdefault(\"GIT_COMMITTER_EMAIL\", env[\"GIT_AUTHOR_EMAIL\"]) self._run([\"git\", \"commit\", \"-m\", message], cwd=repo, env=env) return True def publish_pr( self, repo_path: str, files: Sequence[Path | str], *, branch_name: str, base_branch: str | None = None, title: str, body: str, push: bool = True, labels: Sequence[str] | None = None, update_existing: bool = False, ) -> bool: \"\"\"Create a branch, commit the files, and open a PR via the GitHub CLI.\"\"\" repo = Path(repo_path) if not (repo / \".git\").exists(): return False checkout_cmd = [\"git\", \"",
      "metadata": {
        "path": "docgen/git/publisher.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "fb514d3f5ecabe125a3980238c32fe8a297b3aeb8e3a8fd50c21818502f8fbf0"
      }
    },
    {
      "id": "docgen/validators/no_hallucination.py#0",
      "vector": {
        "validator": 0.13376338862031295,
        "that": 0.08917559241354196,
        "blocks": 0.04458779620677098,
        "readme": 0.17835118482708393,
        "hallucinations": 0.04458779620677098,
        "from": 0.13376338862031295,
        "__future__": 0.04458779620677098,
        "import": 0.17835118482708393,
        "annotations": 0.04458779620677098,
        "re": 0.08917559241354196,
        "typing": 0.04458779620677098,
        "iterable": 0.04458779620677098,
        "list": 0.17835118482708393,
        "sequence": 0.04458779620677098,
        "set": 0.08917559241354196,
        "base": 0.04458779620677098,
        "evidenceindex": 0.04458779620677098,
        "validationcontext": 0.08917559241354196,
        "validationissue": 0.13376338862031295,
        "_sentence_boundary": 0.04458779620677098,
        "compile": 0.04458779620677098,
        "r": 0.04458779620677098,
        "s": 0.04458779620677098,
        "a": 0.13376338862031295,
        "z0": 0.04458779620677098,
        "9": 0.04458779620677098,
        "_safe_prefixes": 0.04458779620677098,
        "replace": 0.08917559241354196,
        "this": 0.17835118482708393,
        "text": 0.08917559241354196,
        "document": 0.13376338862031295,
        "the": 0.2675267772406259,
        "project": 0.13376338862031295,
        "structure": 0.08917559241354196,
        "ready": 0.04458779620677098,
        "for": 0.17835118482708393,
        "continuous": 0.04458779620677098,
        "generation": 0.04458779620677098,
        "use": 0.04458779620677098,
        "section": 0.13376338862031295,
        "add": 0.13376338862031295,
        "deployment": 0.08917559241354196,
        "details": 0.08917559241354196,
        "troubleshooting": 0.04458779620677098,
        "guidance": 0.04458779620677098,
        "configuration": 0.04458779620677098,
        "docgen": 0.13376338862031295,
        "could": 0.08917559241354196,
        "not": 0.17835118482708393,
        "populate": 0.04458779620677098,
        "gather": 0.04458779620677098,
        "follow": 0.04458779620677098,
        "steps": 0.04458779620677098,
        "below": 0.04458779620677098,
        "_observed": 0.04458779620677098,
        "frameworks": 0.04458779620677098,
        "_safe_exact": 0.04458779620677098,
        "was": 0.04458779620677098,
        "bootstrapped": 0.04458779620677098,
        "by": 0.04458779620677098,
        "init": 0.04458779620677098,
        "to": 0.08917559241354196,
        "summarize": 0.04458779620677098,
        "repository": 0.13376338862031295,
        "at": 0.04458779620677098,
        "glance": 0.04458779620677098,
        "with": 0.08917559241354196,
        "concise": 0.04458779620677098,
        "mission": 0.04458779620677098,
        "statement": 0.04458779620677098,
        "here": 0.08917559241354196,
        "how": 0.04458779620677098,
        "up": 0.04458779620677098,
        "and": 0.04458779620677098,
        "run": 0.04458779620677098,
        "locally": 0.04458779620677098,
        "container": 0.04458779620677098,
        "image": 0.08917559241354196,
        "can": 0.04458779620677098,
        "be": 0.04458779620677098,
        "built": 0.04458779620677098,
        "docker": 0.04458779620677098,
        "build": 0.04458779620677098,
        "t": 0.04458779620677098,
        "outline": 0.04458779620677098,
        "strategies": 0.04458779620677098,
        "or": 0.04458779620677098,
        "hosting": 0.04458779620677098,
        "targets": 0.04458779620677098,
        "class": 0.04458779620677098,
        "nohallucinationvalidator": 0.04458779620677098,
        "rejects": 0.04458779620677098,
        "content": 0.04458779620677098,
        "is": 0.04458779620677098,
        "grounded": 0.04458779620677098,
        "in": 0.13376338862031295,
        "evidence": 0.08917559241354196,
        "name": 0.04458779620677098,
        "no_hallucination": 0.04458779620677098,
        "def": 0.08917559241354196,
        "__init__": 0.04458779620677098,
        "self": 0.35670236965416785,
        "min_overlap": 0.08917559241354196,
        "int": 0.04458779620677098,
        "1": 0.04458779620677098,
        "none": 0.04458779620677098,
        "_min_overlap": 0.08917559241354196,
        "validate": 0.04458779620677098,
        "context": 0.13376338862031295,
        "issues": 0.04458779620677098,
        "section_name": 0.08917559241354196,
        "sections": 0.04458779620677098,
        "items": 0.04458779620677098,
        "sentences": 0.08917559241354196,
        "_iter_sentences": 0.04458779620677098,
        "body": 0.04458779620677098,
        "sentence": 0.13376338862031295,
        "if": 0.13376338862031295,
        "_should_skip": 0.04458779620677098,
        "continue": 0.13376338862031295,
        "tokens": 0.13376338862031295,
        "_extract_tokens": 0.04458779620677098,
        "overlap": 0.08917559241354196,
        "_count_overlap": 0.04458779620677098
      },
      "text": "\"\"\"Validator that blocks README hallucinations.\"\"\" from __future__ import annotations import re from typing import Iterable, List, Sequence, Set from .base import EvidenceIndex, ValidationContext, ValidationIssue, Validator _SENTENCE_BOUNDARY = re.compile(r\"(?<=[.!?])\\s+(?=[A-Z0-9`])\") _SAFE_PREFIXES = ( \"Replace this text\", \"Document the project structure\", \"Ready for continuous README generation\", \"Use this section\", \"Add deployment details\", \"Add troubleshooting guidance\", \"Add configuration details\", \"docgen could not populate\", \"docgen could not gather\", \"Follow the steps below\", \"_Observed frameworks\", ) _SAFE_EXACT = { \"This README was bootstrapped by ``docgen init`` to summarize the repository at a glance.\", \"Replace this text with a concise mission statement for the repository.\", \"Document the project structure here.\", \"Document how to set up and run the project locally.\", \"Container image can be built with `docker build -t <image> .`.\", \"Outline deployment strategies or hosting targets here.\", } class NoHallucinationValidator(Validator): \"\"\"Rejects README content that is not grounded in repository evidence.\"\"\" name = \"no_hallucination\" def __init__(self, *, min_overlap: int = 1) -> None: self._min_overlap = min_overlap def validate(self, context: ValidationContext) -> List[ValidationIssue]: issues: List[ValidationIssue] = [] for section_name, section in context.sections.items(): sentences = list(self._iter_sentences(section.body)) for sentence in sentences: if self._should_skip(sentence): continue tokens = self._extract_tokens(sentence) if not tokens: continue overlap = self._count_overlap(tokens, context.evidence, section_name) if overlap >= self._min_overlap: continue",
      "metadata": {
        "path": "docgen/validators/no_hallucination.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "6aac52147da3cd7ddbf4ced05771a3754e99fbb48d52477d95575454fdac4f69"
      }
    },
    {
      "id": "docgen/service/app.py#0",
      "vector": {
        "fastapi": 0.36178730264621084,
        "application": 0.07235746052924216,
        "entrypoint": 0.03617873026462108,
        "for": 0.07235746052924216,
        "docgen": 0.10853619079386324,
        "service": 0.14471492105848432,
        "mode": 0.10853619079386324,
        "from": 0.25325111185234755,
        "__future__": 0.03617873026462108,
        "import": 0.28942984211696865,
        "annotations": 0.03617873026462108,
        "asyncio": 0.03617873026462108,
        "pathlib": 0.03617873026462108,
        "path": 0.10853619079386324,
        "typing": 0.03617873026462108,
        "any": 0.03617873026462108,
        "callable": 0.07235746052924216,
        "optional": 0.2170723815877265,
        "try": 0.03617873026462108,
        "pragma": 0.10853619079386324,
        "no": 0.10853619079386324,
        "cover": 0.10853619079386324,
        "dependency": 0.03617873026462108,
        "depends": 0.07235746052924216,
        "responses": 0.03617873026462108,
        "jsonresponse": 0.07235746052924216,
        "pydantic": 0.03617873026462108,
        "basemodel": 0.25325111185234755,
        "_fastapi_available": 0.10853619079386324,
        "true": 0.03617873026462108,
        "except": 0.03617873026462108,
        "modulenotfounderror": 0.03617873026462108,
        "none": 0.2170723815877265,
        "type": 0.14471492105848432,
        "ignore": 0.14471492105848432,
        "assignment": 0.14471492105848432,
        "object": 0.03617873026462108,
        "false": 0.14471492105848432,
        "orchestrator": 0.2170723815877265,
        "updateoutcome": 0.03617873026462108,
        "class": 0.18089365132310542,
        "initrequest": 0.03617873026462108,
        "str": 0.28942984211696865,
        "skip_validation": 0.07235746052924216,
        "bool": 0.14471492105848432,
        "initresponse": 0.03617873026462108,
        "readme_path": 0.07235746052924216,
        "updaterequest": 0.03617873026462108,
        "diff_base": 0.03617873026462108,
        "origin": 0.03617873026462108,
        "main": 0.03617873026462108,
        "dry_run": 0.07235746052924216,
        "updateresponse": 0.03617873026462108,
        "status": 0.07235746052924216,
        "diff": 0.03617873026462108,
        "healthresponse": 0.07235746052924216,
        "def": 0.14471492105848432,
        "_default_orchestrator": 0.07235746052924216,
        "return": 0.07235746052924216,
        "create_app": 0.03617873026462108,
        "orchestrator_factory": 0.07235746052924216,
        "create": 0.03617873026462108,
        "the": 0.03617873026462108,
        "exposing": 0.03617873026462108,
        "operations": 0.03617873026462108,
        "if": 0.03617873026462108,
        "not": 0.03617873026462108,
        "validated": 0.03617873026462108,
        "via": 0.03617873026462108,
        "unit": 0.03617873026462108,
        "tests": 0.03617873026462108,
        "raise": 0.03617873026462108,
        "runtimeerror": 0.03617873026462108,
        "is": 0.03617873026462108,
        "required": 0.03617873026462108,
        "install": 0.07235746052924216,
        "it": 0.03617873026462108,
        "with": 0.03617873026462108,
        "pip": 0.03617873026462108,
        "uvicorn": 0.03617873026462108,
        "app": 0.07235746052924216,
        "title": 0.03617873026462108,
        "version": 0.03617873026462108,
        "1": 0.03617873026462108,
        "0": 0.07235746052924216,
        "async": 0.07235746052924216,
        "get_orchestrator": 0.03617873026462108,
        "lazy": 0.03617873026462108,
        "instantiate": 0.03617873026462108,
        "per": 0.03617873026462108,
        "request": 0.03617873026462108,
        "to": 0.03617873026462108,
        "keep": 0.03617873026462108,
        "state": 0.03617873026462108,
        "predictable": 0.03617873026462108,
        "get": 0.03617873026462108,
        "health": 0.07235746052924216,
        "response_model": 0.03617873026462108,
        "healthrespon": 0.03617873026462108
      },
      "text": "\"\"\"FastAPI application entrypoint for docgen service mode.\"\"\" from __future__ import annotations import asyncio from pathlib import Path from typing import Any, Callable, Optional try: # pragma: no cover - optional dependency from fastapi import Depends, FastAPI from fastapi.responses import JSONResponse from pydantic import BaseModel _FASTAPI_AVAILABLE = True except ModuleNotFoundError: # pragma: no cover - service mode optional FastAPI = None # type: ignore[assignment] Depends = None # type: ignore[assignment] JSONResponse = None # type: ignore[assignment] BaseModel = object # type: ignore[assignment] _FASTAPI_AVAILABLE = False from ..orchestrator import Orchestrator, UpdateOutcome class InitRequest(BaseModel): path: str skip_validation: bool = False class InitResponse(BaseModel): readme_path: str class UpdateRequest(BaseModel): path: str diff_base: str = \"origin/main\" dry_run: bool = False skip_validation: bool = False class UpdateResponse(BaseModel): status: str readme_path: Optional[str] = None diff: Optional[str] = None dry_run: Optional[bool] = None class HealthResponse(BaseModel): status: str def _default_orchestrator() -> Orchestrator: return Orchestrator() def create_app( orchestrator_factory: Callable[[], Orchestrator] = _default_orchestrator, ) -> FastAPI: \"\"\"Create the FastAPI application exposing docgen operations.\"\"\" if not _FASTAPI_AVAILABLE: # pragma: no cover - validated via unit tests raise RuntimeError( \"FastAPI is required for service mode. Install it with `pip install fastapi uvicorn`.\" ) app = FastAPI(title=\"DocGen Service\", version=\"1.0.0\") async def get_orchestrator() -> Orchestrator: # Lazy-instantiate per request to keep state predictable. return orchestrator_factory() @app.get(\"/health\", response_model=HealthResponse) async def health() -> HealthRespon",
      "metadata": {
        "path": "docgen/service/app.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "b1de2b75672b8fd38bde1441471d9b05cd0753800c86c141f6e4431a7a779a7f"
      }
    },
    {
      "id": "docgen/analyzers/build.py#0",
      "vector": {
        "build": 0.19477234678290495,
        "system": 0.03895446935658099,
        "analyzer": 0.11686340806974296,
        "implementation": 0.03895446935658099,
        "from": 0.23372681613948593,
        "__future__": 0.03895446935658099,
        "import": 0.2726812854960669,
        "annotations": 0.03895446935658099,
        "os": 0.03895446935658099,
        "pathlib": 0.03895446935658099,
        "path": 0.11686340806974296,
        "typing": 0.03895446935658099,
        "iterable": 0.07790893871316198,
        "list": 0.07790893871316198,
        "optional": 0.07790893871316198,
        "base": 0.03895446935658099,
        "models": 0.03895446935658099,
        "repomanifest": 0.11686340806974296,
        "signal": 0.19477234678290495,
        "utils": 0.03895446935658099,
        "detect_node_package_manager": 0.03895446935658099,
        "class": 0.03895446935658099,
        "buildanalyzer": 0.03895446935658099,
        "detects": 0.03895446935658099,
        "systems": 0.03895446935658099,
        "and": 0.03895446935658099,
        "associated": 0.03895446935658099,
        "developer": 0.03895446935658099,
        "workflows": 0.03895446935658099,
        "_py_build_files": 0.07790893871316198,
        "pyproject": 0.03895446935658099,
        "toml": 0.03895446935658099,
        "setup": 0.03895446935658099,
        "cfg": 0.03895446935658099,
        "requirements": 0.11686340806974296,
        "txt": 0.11686340806974296,
        "def": 0.11686340806974296,
        "supports": 0.03895446935658099,
        "self": 0.31163575485264794,
        "manifest": 0.19477234678290495,
        "bool": 0.07790893871316198,
        "return": 0.11686340806974296,
        "files": 0.07790893871316198,
        "analyze": 0.03895446935658099,
        "root": 0.11686340806974296,
        "manifest_paths": 0.23372681613948593,
        "file": 0.07790893871316198,
        "for": 0.03895446935658099,
        "in": 0.07790893871316198,
        "signals": 0.2726812854960669,
        "python_signal": 0.11686340806974296,
        "_python_signal": 0.07790893871316198,
        "if": 0.2726812854960669,
        "is": 0.11686340806974296,
        "not": 0.23372681613948593,
        "none": 0.15581787742632397,
        "append": 0.15581787742632397,
        "node_signal": 0.11686340806974296,
        "_node_signal": 0.03895446935658099,
        "java_signal": 0.11686340806974296,
        "_java_signal": 0.03895446935658099,
        "name": 0.03895446935658099,
        "generic": 0.07790893871316198,
        "value": 0.03895446935658099,
        "source": 0.07790893871316198,
        "metadata": 0.03895446935658099,
        "commands": 0.07790893871316198,
        "document": 0.03895446935658099,
        "steps": 0.03895446935658099,
        "here": 0.03895446935658099,
        "set": 0.03895446935658099,
        "str": 0.03895446935658099,
        "python_files": 0.07790893871316198,
        "intersection": 0.03895446935658099,
        "python": 0.07790893871316198,
        "m": 0.07790893871316198,
        "venv": 0.15581787742632397,
        "bin": 0.03895446935658099,
        "activate": 0.07790893871316198,
        "_is_windows": 0.03895446935658099,
        "else": 0.03895446935658099,
        "scripts": 0.03895446935658099,
        "pip": 0.03895446935658099,
        "install": 0.03895446935658099,
        "r": 0.03895446935658099,
        "man": 0.03895446935658099
      },
      "text": "\ufeff\"\"\"Build system analyzer implementation.\"\"\" from __future__ import annotations import os from pathlib import Path from typing import Iterable, List, Optional from .base import Analyzer from ..models import RepoManifest, Signal from .utils import detect_node_package_manager class BuildAnalyzer(Analyzer): \"\"\"Detects build systems and associated developer workflows.\"\"\" _PY_BUILD_FILES = { \"pyproject.toml\", \"setup.cfg\", \"requirements.txt\", } def supports(self, manifest: RepoManifest) -> bool: return bool(manifest.files) def analyze(self, manifest: RepoManifest) -> Iterable[Signal]: root = Path(manifest.root) manifest_paths = {file.path for file in manifest.files} signals: List[Signal] = [] python_signal = self._python_signal(manifest_paths) if python_signal is not None: signals.append(python_signal) node_signal = self._node_signal(manifest_paths) if node_signal is not None: signals.append(node_signal) java_signal = self._java_signal(root, manifest_paths) if java_signal is not None: signals.append(java_signal) if not signals: signals.append( Signal( name=\"build.generic\", value=\"generic\", source=\"build\", metadata={\"commands\": [\"# Document build steps here.\"]}, ) ) return signals def _python_signal(self, manifest_paths: set[str]) -> Optional[Signal]: python_files = self._PY_BUILD_FILES.intersection(manifest_paths) if not python_files: return None commands = [ \"python -m venv .venv\", \"source .venv/bin/activate\" if not self._is_windows() else \".\\\\.venv\\\\Scripts\\\\activate\", \"python -m pip install -r requirements.txt\" if \"requirements.txt\" in man",
      "metadata": {
        "path": "docgen/analyzers/build.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "8beaf0849c580084a2f6faacb8619a121f3d00b86db69b6c67bc4677e48603d8"
      }
    },
    {
      "id": "docgen/stores/analyzer_cache.py#0",
      "vector": {
        "persistent": 0.029285370632871136,
        "cache": 0.029285370632871136,
        "for": 0.1464268531643557,
        "analyzer": 0.0878561118986134,
        "outputs": 0.029285370632871136,
        "from": 0.1757122237972268,
        "__future__": 0.029285370632871136,
        "import": 0.20499759443009796,
        "annotations": 0.029285370632871136,
        "dataclasses": 0.029285370632871136,
        "asdict": 0.029285370632871136,
        "datetime": 0.0878561118986134,
        "utc": 0.05857074126574227,
        "json": 0.029285370632871136,
        "pathlib": 0.029285370632871136,
        "path": 0.11714148253148454,
        "typing": 0.029285370632871136,
        "dict": 0.0878561118986134,
        "iterable": 0.05857074126574227,
        "list": 0.11714148253148454,
        "optional": 0.05857074126574227,
        "sequence": 0.05857074126574227,
        "models": 0.029285370632871136,
        "signal": 0.2635683356958402,
        "_cache_version": 0.029285370632871136,
        "1": 0.029285370632871136,
        "class": 0.029285370632871136,
        "analyzercache": 0.029285370632871136,
        "stores": 0.029285370632871136,
        "signals": 0.23428296506296908,
        "keyed": 0.029285370632871136,
        "by": 0.029285370632871136,
        "identity": 0.029285370632871136,
        "and": 0.029285370632871136,
        "manifest": 0.029285370632871136,
        "fingerprint": 0.20499759443009796,
        "def": 0.11714148253148454,
        "__init__": 0.029285370632871136,
        "self": 0.4099951888601959,
        "none": 0.2928537063287114,
        "_path": 0.0878561118986134,
        "_entries": 0.11714148253148454,
        "str": 0.2635683356958402,
        "object": 0.029285370632871136,
        "_dirty": 0.05857074126574227,
        "false": 0.029285370632871136,
        "if": 0.23428296506296908,
        "is": 0.05857074126574227,
        "not": 0.1464268531643557,
        "_load": 0.029285370632871136,
        "get": 0.1464268531643557,
        "key": 0.23428296506296908,
        "signature": 0.1757122237972268,
        "entry": 0.1464268531643557,
        "return": 0.1464268531643557,
        "signals_payload": 0.0878561118986134,
        "isinstance": 0.029285370632871136,
        "payload": 0.05857074126574227,
        "in": 0.1464268531643557,
        "_signal_from_dict": 0.029285370632871136,
        "append": 0.029285370632871136,
        "store": 0.029285370632871136,
        "serialised": 0.05857074126574227,
        "_signal_to_dict": 0.029285370632871136,
        "updated_at": 0.029285370632871136,
        "now": 0.029285370632871136,
        "isoformat": 0.029285370632871136,
        "replace": 0.029285370632871136,
        "00": 0.05857074126574227,
        "z": 0.029285370632871136,
        "true": 0.029285370632871136,
        "prune": 0.029285370632871136,
        "keys_to_keep": 0.05857074126574227,
        "keep": 0.05857074126574227,
        "set": 0.029285370632871136,
        "removed": 0.05857074126574227,
        "remove": 0.029285370632871136
      },
      "text": "\"\"\"Persistent cache for analyzer outputs.\"\"\" from __future__ import annotations from dataclasses import asdict from datetime import UTC, datetime import json from pathlib import Path from typing import Dict, Iterable, List, Optional, Sequence from ..models import Signal _CACHE_VERSION = 1 class AnalyzerCache: \"\"\"Stores analyzer signals keyed by analyzer identity and manifest fingerprint.\"\"\" def __init__(self, path: Path | None) -> None: self._path = path self._entries: Dict[str, Dict[str, object]] = {} self._dirty = False if self._path is not None: self._load(self._path) def get(self, key: str, *, signature: str, fingerprint: str) -> Optional[List[Signal]]: entry = self._entries.get(key) if not entry: return None if entry.get(\"signature\") != signature: return None if entry.get(\"fingerprint\") != fingerprint: return None signals_payload = entry.get(\"signals\") if not isinstance(signals_payload, list): return None signals: List[Signal] = [] for payload in signals_payload: signal = _signal_from_dict(payload) if signal is not None: signals.append(signal) return signals def store( self, key: str, *, signature: str, fingerprint: str, signals: Sequence[Signal], ) -> None: serialised = [_signal_to_dict(signal) for signal in signals] self._entries[key] = { \"signature\": signature, \"fingerprint\": fingerprint, \"signals\": serialised, \"updated_at\": datetime.now(UTC).isoformat().replace(\"+00:00\", \"Z\"), } self._dirty = True def prune(self, keys_to_keep: Iterable[str]) -> None: keep = set(keys_to_keep) removed = [key for key in self._entries if key not in keep] if removed: for key in remove",
      "metadata": {
        "path": "docgen/stores/analyzer_cache.py",
        "tags": [
          "source",
          "python"
        ],
        "hash": "d35eecd9bbc699d377535fa814d6d3a57b9fa5323784ef77f1dba56890f1f144"
      }
    }
  ],
  "configuration": [
    {
      "id": "AGENTS.md#0",
      "vector": {
        "repository": 0.06757373783994859,
        "guidelines": 0.1013606067599229,
        "project": 0.033786868919974296,
        "structure": 0.033786868919974296,
        "module": 0.06757373783994859,
        "organization": 0.033786868919974296,
        "spec": 0.06757373783994859,
        "md": 0.033786868919974296,
        "captures": 0.033786868919974296,
        "the": 0.27029495135979437,
        "end": 0.06757373783994859,
        "to": 0.1013606067599229,
        "architecture": 0.033786868919974296,
        "component": 0.06757373783994859,
        "contracts": 0.033786868919974296,
        "and": 0.43922929595966587,
        "must": 0.033786868919974296,
        "be": 0.033786868919974296,
        "updated": 0.033786868919974296,
        "whenever": 0.033786868919974296,
        "responsibilities": 0.033786868919974296,
        "shift": 0.033786868919974296,
        "place": 0.033786868919974296,
        "python": 0.2027212135198458,
        "source": 0.033786868919974296,
        "in": 0.16893434459987147,
        "a": 0.23650808243982008,
        "docgen": 0.16893434459987147,
        "package": 0.033786868919974296,
        "create": 0.033786868919974296,
        "it": 0.033786868919974296,
        "when": 0.06757373783994859,
        "implementation": 0.033786868919974296,
        "starts": 0.033786868919974296,
        "with": 0.16893434459987147,
        "clear": 0.033786868919974296,
        "submodules": 0.033786868919974296,
        "for": 0.1013606067599229,
        "orchestrator": 0.1013606067599229,
        "analyzers": 0.033786868919974296,
        "runners": 0.033786868919974296,
        "stores": 0.033786868919974296,
        "avoid": 0.06757373783994859,
        "leaving": 0.033786868919974296,
        "logic": 0.033786868919974296,
        "repo": 0.06757373783994859,
        "root": 0.033786868919974296,
        "mirror": 0.033786868919974296,
        "runtime": 0.033786868919974296,
        "modules": 0.06757373783994859,
        "under": 0.1013606067599229,
        "tests": 0.2027212135198458,
        "using": 0.033786868919974296,
        "test_": 0.033786868919974296,
        "py": 0.1013606067599229,
        "co": 0.033786868919974296,
        "locate": 0.033786868919974296,
        "fixtures": 0.06757373783994859,
        "_fixtures": 0.033786868919974296,
        "so": 0.13514747567989718,
        "imports": 0.06757373783994859,
        "stay": 0.06757373783994859,
        "clean": 0.033786868919974296,
        "reusable": 0.033786868919974296,
        "keep": 0.13514747567989718,
        "throwaway": 0.033786868919974296,
        "experiments": 0.033786868919974296,
        "inside": 0.033786868919974296,
        "an": 0.06757373783994859,
        "ignored": 0.033786868919974296,
        "sandbox": 0.033786868919974296,
        "directory": 0.033786868919974296,
        "scans": 0.033786868919974296,
        "remain": 0.033786868919974296,
        "focused": 0.033786868919974296,
        "on": 0.06757373783994859,
        "production": 0.033786868919974296,
        "code": 0.033786868919974296,
        "paths": 0.033786868919974296,
        "build": 0.033786868919974296,
        "test": 0.06757373783994859,
        "development": 0.033786868919974296,
        "commands": 0.033786868919974296,
        "m": 0.16893434459987147,
        "venv": 0.1013606067599229,
        "followed": 0.033786868919974296,
        "by": 0.033786868919974296,
        "scripts": 0.06757373783994859,
        "activate": 0.033786868919974296,
        "aligns": 0.033786868919974296,
        "local": 0.033786868919974296,
        "shells": 0.033786868919974296,
        "pycharm": 0.033786868919974296,
        "interpreter": 0.033786868919974296,
        "settings": 0.033786868919974296,
        "pip": 0.033786868919974296,
        "install": 0.033786868919974296,
        "e": 0.033786868919974296,
        "dev": 0.033786868919974296,
        "after": 0.06757373783994859,
        "pyproject": 0.033786868919974296,
        "toml": 0.033786868919974296,
        "is": 0.1013606067599229,
        "committed": 0.033786868919974296,
        "exposes": 0.033786868919974296,
        "cli": 0.033786868919974296,
        "plugins": 0.033786868919974296,
        "editable": 0.033786868919974296,
        "form": 0.033786868919974296,
        "without": 0.033786868919974296,
        "repeated": 0.033786868919974296,
        "reinstalls": 0.033786868919974296,
        "pytest": 0.06757373783994859,
        "runs": 0.033786868919974296,
        "full": 0.033786868919974296,
        "suite": 0.033786868919974296,
        "append": 0.033786868919974296,
        "k": 0.033786868919974296,
        "pattern": 0.033786868919974296,
        "iterate": 0.033786868919974296,
        "single": 0.06757373783994859,
        "analyzer": 0.06757373783994859,
        "or": 0.06757373783994859,
        "pipeline": 0.1013606067599229,
        "stage": 0.033786868919974296,
        "mypy": 0.033786868919974296,
        "ruff": 0.033786868919974296,
        "check": 0.033786868919974296,
        "catch": 0.033786868919974296,
        "type": 0.033786868919974296,
        "drift": 0.033786868919974296,
        "lint": 0.033786868919974296,
        "violations": 0.033786868919974296,
        "before": 0.06757373783994859,
        "readme": 0.06757373783994859,
        "generation": 0.06757373783994859,
        "attempted": 0.033786868919974296,
        "coding": 0.033786868919974296,
        "style": 0.033786868919974296,
        "naming": 0.033786868919974296,
        "conventions": 0.033786868919974296,
        "follow": 0.06757373783994859,
        "pep": 0.033786868919974296,
        "8": 0.033786868919974296,
        "4": 0.033786868919974296,
        "space": 0.033786868919974296,
        "indents": 0.033786868919974296,
        "explicit": 0.033786868919974296,
        "example": 0.033786868919974296,
        "from": 0.033786868919974296,
        "import": 0.033786868919974296,
        "static": 0.033786868919974296,
        "tooling": 0.033786868919974296,
        "can": 0.033786868919974296,
        "trace": 0.033786868919974296,
        "dependencies": 0.033786868919974296,
        "name": 0.033786868919974296,
        "their": 0.033786868919974296,
        "roles": 0.033786868919974296,
        "prompt_builder": 0.033786868919974296,
        "functions": 0.033786868919974296,
        "snake_case": 0.033786868919974296,
        "descriptive": 0.06757373783994859,
        "nouns": 0.033786868919974296,
        "first": 0.033786868919974296,
        "build_prompt_section": 0.033786868919974296,
        "run": 0.033786868919974296,
        "black": 0.033786868919974296,
        "commits": 0.06757373783994859,
        "manual": 0.033786868919974296,
        "reformatting": 0.033786868919974296,
        "unless": 0.033786868919974296,
        "formatter": 0.033786868919974296,
        "cannot": 0.033786868919974296,
        "resolve": 0.033786868919974296,
        "construct": 0.033786868919974296,
        "testing": 0.06757373783994859,
        "default": 0.033786868919974296,
        "harness": 0.033786868919974296,
        "every": 0.033786868919974296,
        "needs": 0.033786868919974296,
        "unit": 0.033786868919974296,
        "coverage": 0.033786868919974296,
        "plus": 0.033786868919974296,
        "integration": 0.06757373783994859,
        "case": 0.033786868919974296,
        "that": 0.06757373783994859,
        "walks": 0.033786868919974296,
        "snapshot": 0.033786868919974296,
        "through": 0.033786868919974296,
        "use": 0.033786868919974296,
        "names": 0.033786868919974296,
        "such": 0.033786868919974296,
        "as": 0.033786868919974296,
        "test_prompt_builder_handles_missing_signals": 0.033786868919974296,
        "arrange": 0.033786868919974296,
        "act": 0.033786868919974296,
        "assert": 0.033786868919974296,
        "comments": 0.033786868919974296,
        "minimal": 0.033786868919974296,
        "but": 0.033786868919974296,
        "intentional": 0.033786868919974296,
        "store": 0.033786868919974296,
        "regression": 0.033786868919974296,
        "generated": 0.033786868919974296,
        "slices": 0.033786868919974296,
        "data": 0.033786868919974296,
        "update": 0.033786868919974296,
        "them": 0.033786868919974296,
        "helper": 0.033786868919974296,
        "diffs": 0.033786868919974296,
        "reviewable": 0.033786868919974296,
        "commit": 0.033786868919974296,
        "pull": 0.033786868919974296,
        "request": 0.033786868919974296,
        "conventional": 0.033786868919974296,
        "feat": 0.033786868919974296,
        "fix": 0.033786868919974296,
        "docs": 0.033786868919974296,
        "subject": 0.033786868919974296,
        "lines": 0.033786868919974296,
        "72": 0.033786868919974296,
        "characters": 0.033786868919974296,
        "explain": 0.033786868919974296,
        "broader": 0.033786868919974296,
        "scope": 0.033786868919974296,
        "body": 0.033786868919974296,
        "multiple": 0.033786868919974296,
        "subsystems": 0.033786868919974296,
        "change": 0.033786868919974296,
        "bundle": 0.033786868919974296,
        "related": 0.033786868919974296,
        "work": 0.033786868919974296,
        "into": 0.033786868919974296,
        "pr": 0.033786868919974296,
        "includes": 0.033786868919974296,
        "summary": 0.033786868919974296,
        "notes": 0.033786868919974296,
        "links": 0.033786868919974296
      },
      "text": "# Repository Guidelines ## Project Structure & Module Organization - `spec/spec.md` captures the end-to-end architecture, component contracts, and must be updated whenever responsibilities shift. - Place Python source in a `docgen/` package (create it when implementation starts) with clear submodules for orchestrator, analyzers, runners, and stores; avoid leaving logic in the repo root. - Mirror runtime modules under `tests/` using `test_<module>.py`; co-locate fixtures in `tests/_fixtures/` so imports stay clean and reusable. - Keep throwaway experiments inside an ignored `sandbox/` directory so repository scans remain focused on production code paths. ## Build, Test, and Development Commands - `python -m venv .venv` followed by `.\\\\.venv\\\\Scripts\\\\activate` aligns local shells with the PyCharm interpreter settings. - `python -m pip install -e .[dev]` (after a `pyproject.toml` is committed) exposes the CLI and plugins in editable form without repeated reinstalls. - `python -m pytest` runs the full suite; append `-k <pattern>` to iterate on a single analyzer or pipeline stage. - `python -m mypy docgen` and `python -m ruff check docgen tests` catch type drift and lint violations before README generation is attempted. ## Coding Style & Naming Conventions - Follow PEP 8 with 4-space indents and explicit imports (for example, `from docgen.orchestrator import Pipeline`) so static tooling can trace dependencies. - Name modules after their roles (`orchestrator.py`, `prompt_builder.py`) and keep functions snake_case with descriptive nouns first (`build_prompt_section`). - Run `black docgen tests` before commits; avoid manual reformatting unless the formatter cannot resolve a construct. ## Testing Guidelines - Pytest is the default harness; every analyzer or pipeline component needs unit coverage plus an integration case under `tests/integration/` that walks a repo snapshot through generation. - Use descriptive test names such as `test_prompt_builder_handles_missing_signals` and keep Arrange-Act-Assert comments minimal but intentional. - Store regression fixtures for generated README slices under `tests/data/` and update them with helper scripts so diffs stay reviewable. ## Commit & Pull Request Guidelines - Follow Conventional Commits (`feat:`, `fix:`, `docs:`); keep subject lines <=72 characters and explain broader scope in the body when multiple subsystems change. - Bundle related work into a single PR that includes a summary, testing notes, and links to",
      "metadata": {
        "path": "AGENTS.md",
        "tags": [
          "docs"
        ],
        "hash": "dfeeea63c97ae7cb3036fbb0312edaee5f377b31178db6fbde6c843da7ceb8d2"
      }
    },
    {
      "id": "AGENTS.md#1",
      "vector": {
        "readme": 0.1270001270001905,
        "slices": 0.06350006350009525,
        "under": 0.06350006350009525,
        "tests": 0.06350006350009525,
        "data": 0.06350006350009525,
        "and": 0.4445004445006667,
        "update": 0.06350006350009525,
        "them": 0.06350006350009525,
        "with": 0.06350006350009525,
        "helper": 0.06350006350009525,
        "scripts": 0.06350006350009525,
        "so": 0.06350006350009525,
        "diffs": 0.06350006350009525,
        "stay": 0.06350006350009525,
        "reviewable": 0.06350006350009525,
        "commit": 0.1270001270001905,
        "pull": 0.06350006350009525,
        "request": 0.06350006350009525,
        "guidelines": 0.06350006350009525,
        "follow": 0.06350006350009525,
        "conventional": 0.06350006350009525,
        "commits": 0.06350006350009525,
        "feat": 0.06350006350009525,
        "fix": 0.06350006350009525,
        "docs": 0.1270001270001905,
        "keep": 0.1270001270001905,
        "subject": 0.06350006350009525,
        "lines": 0.06350006350009525,
        "72": 0.06350006350009525,
        "characters": 0.06350006350009525,
        "explain": 0.06350006350009525,
        "broader": 0.06350006350009525,
        "scope": 0.06350006350009525,
        "in": 0.254000254000381,
        "the": 0.31750031750047625,
        "body": 0.06350006350009525,
        "when": 0.1270001270001905,
        "multiple": 0.06350006350009525,
        "subsystems": 0.06350006350009525,
        "change": 0.06350006350009525,
        "bundle": 0.06350006350009525,
        "related": 0.06350006350009525,
        "work": 0.1270001270001905,
        "into": 0.06350006350009525,
        "a": 0.254000254000381,
        "single": 0.06350006350009525,
        "pr": 0.1270001270001905,
        "that": 0.06350006350009525,
        "includes": 0.06350006350009525,
        "summary": 0.06350006350009525,
        "testing": 0.06350006350009525,
        "notes": 0.1270001270001905,
        "links": 0.06350006350009525,
        "to": 0.06350006350009525,
        "relevant": 0.06350006350009525,
        "issues": 0.06350006350009525,
        "or": 0.06350006350009525,
        "spec": 0.06350006350009525,
        "sections": 0.06350006350009525,
        "attach": 0.06350006350009525,
        "before": 0.1270001270001905,
        "after": 0.06350006350009525,
        "excerpts": 0.06350006350009525,
        "altering": 0.06350006350009525,
        "generation": 0.06350006350009525,
        "output": 0.06350006350009525,
        "run": 0.06350006350009525,
        "lint": 0.06350006350009525,
        "type": 0.06350006350009525,
        "check": 0.06350006350009525,
        "test": 0.06350006350009525,
        "commands": 0.06350006350009525,
        "opening": 0.06350006350009525,
        "paste": 0.06350006350009525,
        "condensed": 0.06350006350009525,
        "results": 0.06350006350009525,
        "description": 0.06350006350009525,
        "for": 0.06350006350009525,
        "quick": 0.06350006350009525,
        "verification": 0.06350006350009525,
        "environment": 0.1270001270001905,
        "tooling": 0.06350006350009525,
        "reuse": 0.06350006350009525,
        "local": 0.1270001270001905,
        "venv": 0.06350006350009525,
        "seeded": 0.06350006350009525,
        "by": 0.1270001270001905,
        "pycharm": 0.06350006350009525,
        "do": 0.06350006350009525,
        "not": 0.06350006350009525,
        "artifacts": 0.06350006350009525,
        "store": 0.06350006350009525,
        "secrets": 0.06350006350009525,
        "env": 0.06350006350009525,
        "consumed": 0.06350006350009525,
        "llm": 0.06350006350009525,
        "runner": 0.06350006350009525,
        "large": 0.06350006350009525,
        "model": 0.06350006350009525,
        "weights": 0.06350006350009525,
        "outside": 0.06350006350009525,
        "repository": 0.06350006350009525,
        "document": 0.06350006350009525,
        "their": 0.06350006350009525,
        "locations": 0.06350006350009525,
        "models": 0.06350006350009525,
        "md": 0.06350006350009525,
        "once": 0.06350006350009525,
        "integration": 0.06350006350009525,
        "begins": 0.06350006350009525
      },
      "text": "README slices under `tests/data/` and update them with helper scripts so diffs stay reviewable. ## Commit & Pull Request Guidelines - Follow Conventional Commits (`feat:`, `fix:`, `docs:`); keep subject lines <=72 characters and explain broader scope in the body when multiple subsystems change. - Bundle related work into a single PR that includes a summary, testing notes, and links to relevant issues or spec sections; attach before/after README excerpts when altering generation output. - Run lint, type-check, and test commands before opening a PR and paste condensed results in the description for quick verification. ## Environment & Tooling Notes - Reuse the local `.venv` seeded by PyCharm; do not commit environment artifacts and store secrets in a `.env` consumed by the local LLM runner. - Keep large model weights outside the repository and document their locations in `docs/models.md` once integration work begins.",
      "metadata": {
        "path": "AGENTS.md",
        "tags": [
          "docs"
        ],
        "hash": "dfeeea63c97ae7cb3036fbb0312edaee5f377b31178db6fbde6c843da7ceb8d2"
      }
    },
    {
      "id": "README_before.md#0",
      "vector": {
        "docgen": 0.6611099775215866,
        "begin": 0.12592571000411173,
        "badges": 0.06296285500205587,
        "build": 0.15740713750513965,
        "status": 0.031481427501027934,
        "https": 0.0944442825030838,
        "img": 0.0944442825030838,
        "shields": 0.0944442825030838,
        "io": 0.0944442825030838,
        "badge": 0.0944442825030838,
        "pending": 0.031481427501027934,
        "lightgrey": 0.0944442825030838,
        "svg": 0.0944442825030838,
        "coverage": 0.06296285500205587,
        "review": 0.031481427501027934,
        "needed": 0.031481427501027934,
        "license": 0.12592571000411173,
        "tbd": 0.031481427501027934,
        "end": 0.0944442825030838,
        "toc": 0.06296285500205587,
        "table": 0.031481427501027934,
        "of": 0.031481427501027934,
        "contents": 0.031481427501027934,
        "features": 0.12592571000411173,
        "architecture": 0.06296285500205587,
        "high": 0.06296285500205587,
        "level": 0.06296285500205587,
        "flow": 0.06296285500205587,
        "component": 0.06296285500205587,
        "responsibilities": 0.06296285500205587,
        "artifacts": 0.06296285500205587,
        "and": 0.2833328475092514,
        "data": 0.06296285500205587,
        "stores": 0.06296285500205587,
        "pipeline": 0.06296285500205587,
        "sequence": 0.12592571000411173,
        "init": 0.0944442825030838,
        "patch": 0.06296285500205587,
        "update": 0.0944442825030838,
        "api": 0.06296285500205587,
        "signal": 0.06296285500205587,
        "extraction": 0.06296285500205587,
        "quick": 0.06296285500205587,
        "start": 0.06296285500205587,
        "configuration": 0.06296285500205587,
        "test": 0.06296285500205587,
        "deployment": 0.06296285500205587,
        "troubleshooting": 0.06296285500205587,
        "faq": 0.06296285500205587,
        "intro": 0.06296285500205587,
        "is": 0.031481427501027934,
        "a": 0.0944442825030838,
        "local": 0.0944442825030838,
        "first": 0.031481427501027934,
        "readme": 0.06296285500205587,
        "generator": 0.031481427501027934,
        "for": 0.0944442825030838,
        "polyglot": 0.031481427501027934,
        "repositories": 0.031481427501027934,
        "it": 0.031481427501027934,
        "scans": 0.031481427501027934,
        "every": 0.06296285500205587,
        "tracked": 0.031481427501027934,
        "file": 0.031481427501027934,
        "publishes": 0.031481427501027934,
        "analyzer": 0.06296285500205587,
        "signals": 0.0944442825030838,
        "retrieves": 0.031481427501027934,
        "grounded": 0.031481427501027934,
        "context": 0.06296285500205587,
        "guides": 0.031481427501027934,
        "llm": 0.06296285500205587,
        "through": 0.031481427501027934,
        "templated": 0.031481427501027934,
        "sections": 0.031481427501027934,
        "to": 0.031481427501027934,
        "produce": 0.031481427501027934,
        "or": 0.031481427501027934,
        "documentation": 0.031481427501027934,
        "this": 0.031481427501027934,
        "overview": 0.031481427501027934,
        "reflects": 0.031481427501027934,
        "complete": 0.031481427501027934,
        "pass": 0.031481427501027934,
        "across": 0.031481427501027934,
        "tests": 0.031481427501027934,
        "spec": 0.031481427501027934,
        "docs": 0.06296285500205587,
        "so": 0.031481427501027934,
        "contributors": 0.031481427501027934,
        "understand": 0.031481427501027934,
        "abstraction": 0.031481427501027934,
        "before": 0.031481427501027934,
        "running": 0.031481427501027934,
        "repository": 0.06296285500205587,
        "manifest": 0.031481427501027934,
        "caching": 0.031481427501027934,
        "repo_scanner": 0.031481427501027934,
        "py": 0.15740713750513965,
        "walks": 0.031481427501027934,
        "the": 0.031481427501027934,
        "tree": 0.031481427501027934,
        "respects": 0.031481427501027934,
        "gitignore": 0.031481427501027934,
        "yml": 0.031481427501027934,
        "hashes": 0.031481427501027934,
        "files": 0.031481427501027934,
        "persists": 0.031481427501027934,
        "manifest_cache": 0.031481427501027934,
        "json": 0.06296285500205587,
        "incremental": 0.031481427501027934,
        "runs": 0.031481427501027934,
        "plugin": 0.031481427501027934,
        "system": 0.031481427501027934,
        "analyzers": 0.031481427501027934,
        "discover": 0.031481427501027934,
        "language": 0.031481427501027934,
        "dependency": 0.031481427501027934,
        "entrypoint": 0.031481427501027934,
        "pattern": 0.031481427501027934,
        "structure": 0.031481427501027934,
        "that": 0.031481427501027934,
        "describe": 0.031481427501027934,
        "frameworks": 0.031481427501027934,
        "commands": 0.06296285500205587,
        "apis": 0.031481427501027934,
        "entities": 0.031481427501027934,
        "topology": 0.031481427501027934,
        "template": 0.031481427501027934,
        "driven": 0.031481427501027934,
        "prompting": 0.06296285500205587,
        "builder": 0.031481427501027934,
        "merges": 0.031481427501027934,
        "with": 0.031481427501027934,
        "jinja": 0.031481427501027934,
        "templates": 0.031481427501027934,
        "validates": 0.031481427501027934,
        "applies": 0.031481427501027934,
        "style": 0.031481427501027934,
        "presets": 0.031481427501027934,
        "injects": 0.031481427501027934,
        "retrieved": 0.031481427501027934,
        "per": 0.031481427501027934,
        "section": 0.06296285500205587,
        "lightweight": 0.031481427501027934,
        "rag": 0.06296285500205587,
        "index": 0.031481427501027934,
        "indexer": 0.031481427501027934,
        "embedder": 0.031481427501027934,
        "store": 0.031481427501027934,
        "embed": 0.031481427501027934,
        "source": 0.031481427501027934,
        "excerpts": 0.031481427501027934,
        "into": 0.031481427501027934,
        "embeddings": 0.031481427501027934,
        "scoped": 0.031481427501027934,
        "retrieval": 0.031481427501027934,
        "enforcement": 0.031481427501027934
      },
      "text": "# docgen <!-- docgen:begin:badges --> [![Build Status](https://img.shields.io/badge/build-pending-lightgrey.svg)](#) [![Coverage](https://img.shields.io/badge/coverage-review--needed-lightgrey.svg)](#) [![License](https://img.shields.io/badge/license-tbd-lightgrey.svg)](#) <!-- docgen:end:badges --> <!-- docgen:begin:toc --> ## Table of Contents - [Features](#features) - [Architecture](#architecture) - [High-Level Flow](#high-level-flow) - [Component Responsibilities](#component-responsibilities) - [Artifacts and Data Stores](#artifacts-and-data-stores) - [Pipeline Sequence (`docgen init`)](#pipeline-sequence-docgen-init) - [Patch Sequence (`docgen update`)](#patch-sequence-docgen-update) - [API Signal Extraction](#api-signal-extraction) - [Quick Start](#quick-start) - [Configuration](#configuration) - [Build & Test](#build-test) - [Deployment](#deployment) - [Troubleshooting](#troubleshooting) - [FAQ](#faq) - [License](#license) <!-- docgen:end:toc --> <!-- docgen:begin:intro --> docgen is a local-first README generator for polyglot repositories. It scans every tracked file, publishes analyzer signals, retrieves grounded context, and guides a local LLM through templated sections to produce or update documentation. This overview reflects a complete pass across `docgen/`, `tests/`, `spec/`, and `docs/` so contributors understand every abstraction before running `docgen init`. <!-- docgen:end:intro --> ## Features <!-- docgen:begin:features --> - **Repository manifest & caching** - `docgen/repo_scanner.py` walks the tree, respects `.gitignore`/`.docgen.yml`, hashes files, and persists `manifest_cache.json` for incremental runs. - **Analyzer plugin system** - `docgen/analyzers/*` discover language, build, dependency, entrypoint, pattern, and structure signals that describe frameworks, commands, APIs, entities, and repository topology. - **Template-driven prompting** - `docgen/prompting/builder.py` merges signals with Jinja templates, validates commands, applies style presets, and injects retrieved context per section. - **Lightweight RAG index** - `docgen/rag/indexer.py`, `embedder.py`, and `store.py` embed README/docs/source excerpts into `.docgen/embeddings.json` for section-scoped retrieval. - **Local LLM enforcement** -",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#1",
      "vector": {
        "docgen": 0.48261708906584017,
        "prompting": 0.06434894520877868,
        "builder": 0.03217447260438934,
        "py": 0.3217447260438934,
        "merges": 0.03217447260438934,
        "signals": 0.03217447260438934,
        "with": 0.06434894520877868,
        "jinja": 0.06434894520877868,
        "templates": 0.06434894520877868,
        "validates": 0.03217447260438934,
        "commands": 0.03217447260438934,
        "applies": 0.03217447260438934,
        "style": 0.03217447260438934,
        "presets": 0.03217447260438934,
        "and": 0.2252213082307254,
        "injects": 0.03217447260438934,
        "retrieved": 0.03217447260438934,
        "context": 0.03217447260438934,
        "per": 0.03217447260438934,
        "section": 0.06434894520877868,
        "lightweight": 0.03217447260438934,
        "rag": 0.1608723630219467,
        "index": 0.03217447260438934,
        "indexer": 0.03217447260438934,
        "embedder": 0.03217447260438934,
        "store": 0.03217447260438934,
        "embed": 0.03217447260438934,
        "readme": 0.09652341781316803,
        "docs": 0.03217447260438934,
        "source": 0.03217447260438934,
        "excerpts": 0.03217447260438934,
        "into": 0.03217447260438934,
        "embeddings": 0.06434894520877868,
        "json": 0.06434894520877868,
        "for": 0.03217447260438934,
        "scoped": 0.03217447260438934,
        "retrieval": 0.03217447260438934,
        "local": 0.06434894520877868,
        "llm": 0.19304683562633607,
        "enforcement": 0.03217447260438934,
        "runner": 0.06434894520877868,
        "targets": 0.03217447260438934,
        "loopback": 0.03217447260438934,
        "model": 0.06434894520877868,
        "or": 0.06434894520877868,
        "ollama": 0.03217447260438934,
        "blocks": 0.03217447260438934,
        "remote": 0.03217447260438934,
        "hosts": 0.03217447260438934,
        "exposes": 0.03217447260438934,
        "configurable": 0.03217447260438934,
        "temperature": 0.03217447260438934,
        "token": 0.03217447260438934,
        "limits": 0.03217447260438934,
        "post": 0.2252213082307254,
        "processing": 0.09652341781316803,
        "contract": 0.03217447260438934,
        "postproc": 0.03217447260438934,
        "add": 0.03217447260438934,
        "badges": 0.06434894520877868,
        "rebuild": 0.03217447260438934,
        "the": 0.1608723630219467,
        "toc": 0.06434894520877868,
        "lint": 0.06434894520877868,
        "markdown": 0.03217447260438934,
        "validate": 0.03217447260438934,
        "links": 0.06434894520877868,
        "manage": 0.03217447260438934,
        "markers": 0.03217447260438934,
        "compute": 0.03217447260438934,
        "scorecards": 0.03217447260438934,
        "saved": 0.03217447260438934,
        "to": 0.09652341781316803,
        "scorecard": 0.06434894520877868,
        "git": 0.1608723630219467,
        "aware": 0.03217447260438934,
        "publishing": 0.06434894520877868,
        "diff": 0.03217447260438934,
        "maps": 0.03217447260438934,
        "changed": 0.03217447260438934,
        "files": 0.03217447260438934,
        "sections": 0.03217447260438934,
        "while": 0.03217447260438934,
        "publisher": 0.06434894520877868,
        "commits": 0.03217447260438934,
        "opens": 0.03217447260438934,
        "prs": 0.03217447260438934,
        "generated": 0.03217447260438934,
        "deltas": 0.03217447260438934,
        "via": 0.03217447260438934,
        "github": 0.03217447260438934,
        "cli": 0.19304683562633607,
        "resilient": 0.03217447260438934,
        "ux": 0.03217447260438934,
        "failsafe": 0.03217447260438934,
        "provide": 0.03217447260438934,
        "verbose": 0.03217447260438934,
        "logging": 0.03217447260438934,
        "hooks": 0.03217447260438934,
        "dry": 0.03217447260438934,
        "run": 0.03217447260438934,
        "preview": 0.03217447260438934,
        "support": 0.03217447260438934,
        "fallback": 0.03217447260438934,
        "stubs": 0.03217447260438934,
        "when": 0.03217447260438934,
        "pipeline": 0.06434894520877868,
        "cannot": 0.03217447260438934,
        "complete": 0.03217447260438934,
        "end": 0.09652341781316803,
        "features": 0.03217447260438934,
        "architecture": 0.06434894520877868,
        "begin": 0.03217447260438934,
        "high": 0.03217447260438934,
        "level": 0.03217447260438934,
        "flow": 0.03217447260438934,
        "orchestrator": 0.09652341781316803,
        "coordinates": 0.03217447260438934,
        "described": 0.03217447260438934,
        "in": 0.03217447260438934,
        "spec": 0.06434894520877868,
        "md": 0.06434894520877868,
        "composing": 0.03217447260438934,
        "scanners": 0.03217447260438934,
        "analyzers": 0.06434894520877868,
        "services": 0.03217447260438934,
        "mermaid": 0.03217447260438934,
        "flowchart": 0.03217447260438934,
        "lr": 0.03217447260438934,
        "init": 0.03217447260438934,
        "update": 0.03217447260438934,
        "orc": 0.2573957808351147,
        "scan": 0.06434894520877868,
        "reposcanner": 0.03217447260438934,
        "n": 0.2252213082307254,
        "manifest": 0.03217447260438934,
        "ana": 0.06434894520877868,
        "language": 0.03217447260438934,
        "build": 0.03217447260438934,
        "etc": 0.03217447260438934,
        "ragindexer": 0.03217447260438934,
        "prompt": 0.1608723630219467,
        "promptbuilder": 0.03217447260438934,
        "llmrunner": 0.03217447260438934,
        "commit": 0.03217447260438934,
        "pr": 0.03217447260438934,
        "output": 0.06434894520877868,
        "artifacts": 0.03217447260438934,
        "component": 0.03217447260438934,
        "responsibilities": 0.03217447260438934,
        "layer": 0.03217447260438934,
        "key": 0.03217447260438934
      },
      "text": "- `docgen/prompting/builder.py` merges signals with Jinja templates, validates commands, applies style presets, and injects retrieved context per section. - **Lightweight RAG index** - `docgen/rag/indexer.py`, `embedder.py`, and `store.py` embed README/docs/source excerpts into `.docgen/embeddings.json` for section-scoped retrieval. - **Local LLM enforcement** - `docgen/llm/runner.py` targets loopback Model Runner or Ollama, blocks remote hosts, and exposes configurable temperature/token limits. - **Post-processing contract** - `docgen/postproc/*` add badges, rebuild the ToC, lint markdown, validate links, manage markers, and compute scorecards saved to `.docgen/scorecard.json`. - **Git-aware publishing** - `docgen/git/diff.py` maps changed files to sections while `docgen/git/publisher.py` commits or opens PRs with generated README deltas via the GitHub CLI. - **Resilient CLI UX** - `docgen/cli.py` and `docgen/failsafe.py` provide verbose logging hooks, dry-run preview support, and fallback stubs when the LLM pipeline cannot complete. <!-- docgen:end:features --> ## Architecture <!-- docgen:begin:architecture --> ### High-Level Flow The orchestrator (`docgen/orchestrator.py`) coordinates the end-to-end pipeline described in `spec/spec.md`, composing scanners, analyzers, prompting, RAG, post-processing, and publishing services. ```mermaid flowchart LR CLI[\"CLI (docgen init/update)\"] Orc[\"Orchestrator\"] Scan[\"RepoScanner\\n(manifest)\"] Ana[\"Analyzers\\n(language/build/etc)\"] RAG[\"RAGIndexer\\n(embeddings)\"] Prompt[\"PromptBuilder\\n(Jinja templates)\"] LLM[\"LLMRunner\\n(local model)\"] Post[\"Post-Processing\\n(lint, ToC, badges, links, scorecard)\"] Git[\"Publisher\\n(commit/PR)\"] Output[\"README.md + .docgen artifacts\"] CLI --> Orc Orc --> Scan Orc --> Ana Orc --> RAG Orc --> Prompt Prompt --> LLM LLM --> Prompt Prompt --> Orc Orc --> Post Post --> Output Post --> Git ``` ### Component Responsibilities | Layer | Key",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#2",
      "vector": {
        "orc": 0.2960684541064695,
        "scan": 0.042295493443781355,
        "ana": 0.042295493443781355,
        "rag": 0.12688648033134406,
        "prompt": 0.16918197377512542,
        "llm": 0.16918197377512542,
        "post": 0.16918197377512542,
        "output": 0.042295493443781355,
        "git": 0.042295493443781355,
        "component": 0.042295493443781355,
        "responsibilities": 0.042295493443781355,
        "layer": 0.042295493443781355,
        "key": 0.042295493443781355,
        "modules": 0.08459098688756271,
        "purpose": 0.042295493443781355,
        "cli": 0.12688648033134406,
        "logging": 0.08459098688756271,
        "docgen": 0.46525042788159493,
        "py": 0.42295493443781357,
        "parses": 0.08459098688756271,
        "subcommands": 0.042295493443781355,
        "wires": 0.042295493443781355,
        "verbose": 0.042295493443781355,
        "and": 0.33836394755025084,
        "configures": 0.042295493443781355,
        "namespaced": 0.042295493443781355,
        "loggers": 0.042295493443781355,
        "configuration": 0.042295493443781355,
        "config": 0.042295493443781355,
        "yml": 0.042295493443781355,
        "into": 0.042295493443781355,
        "docgenconfig": 0.042295493443781355,
        "llmconfig": 0.042295493443781355,
        "publishconfig": 0.042295493443781355,
        "analyzerconfig": 0.042295493443781355,
        "ciconfig": 0.042295493443781355,
        "with": 0.042295493443781355,
        "a": 0.042295493443781355,
        "handwritten": 0.042295493443781355,
        "yaml": 0.042295493443781355,
        "fallback": 0.042295493443781355,
        "repository": 0.042295493443781355,
        "scanning": 0.042295493443781355,
        "repo_scanner": 0.042295493443781355,
        "builds": 0.08459098688756271,
        "repomanifest": 0.042295493443781355,
        "of": 0.08459098688756271,
        "filemeta": 0.042295493443781355,
        "entries": 0.042295493443781355,
        "enforces": 0.042295493443781355,
        "ignore": 0.042295493443781355,
        "rules": 0.042295493443781355,
        "infers": 0.042295493443781355,
        "file": 0.042295493443781355,
        "roles": 0.042295493443781355,
        "caches": 0.042295493443781355,
        "hashes": 0.042295493443781355,
        "in": 0.042295493443781355,
        "manifest_cache": 0.042295493443781355,
        "json": 0.042295493443781355,
        "analyzer": 0.042295493443781355,
        "plugins": 0.042295493443781355,
        "analyzers": 0.042295493443781355,
        "emit": 0.042295493443781355,
        "signal": 0.042295493443781355,
        "objects": 0.042295493443781355,
        "for": 0.042295493443781355,
        "languages": 0.042295493443781355,
        "frameworks": 0.042295493443781355,
        "build": 0.042295493443781355,
        "tools": 0.042295493443781355,
        "dependencies": 0.042295493443781355,
        "entrypoints": 0.042295493443781355,
        "structural": 0.042295493443781355,
        "api": 0.042295493443781355,
        "routes": 0.042295493443781355,
        "entities": 0.042295493443781355,
        "patterns": 0.042295493443781355,
        "monorepo": 0.042295493443781355,
        "hints": 0.042295493443781355,
        "prompting": 0.08459098688756271,
        "builder": 0.042295493443781355,
        "templates": 0.08459098688756271,
        "groups": 0.042295493443781355,
        "signals": 0.042295493443781355,
        "retrieves": 0.042295493443781355,
        "context": 0.08459098688756271,
        "renders": 0.042295493443781355,
        "section": 0.08459098688756271,
        "performs": 0.042295493443781355,
        "command": 0.042295493443781355,
        "validation": 0.042295493443781355,
        "estimates": 0.042295493443781355,
        "token": 0.042295493443781355,
        "budgets": 0.042295493443781355,
        "retrieval": 0.042295493443781355,
        "indexer": 0.042295493443781355,
        "embedder": 0.042295493443781355,
        "store": 0.042295493443781355,
        "constants": 0.042295493443781355,
        "chunks": 0.042295493443781355,
        "readme": 0.042295493443781355,
        "docs": 0.042295493443781355,
        "source": 0.042295493443781355,
        "files": 0.042295493443781355,
        "computes": 0.042295493443781355,
        "bag": 0.042295493443781355,
        "words": 0.042295493443781355,
        "embeddings": 0.042295493443781355,
        "persists": 0.042295493443781355,
        "per": 0.042295493443781355,
        "prunes": 0.042295493443781355,
        "stale": 0.042295493443781355,
        "vectors": 0.042295493443781355,
        "runtime": 0.042295493443781355,
        "runner": 0.042295493443781355,
        "chooses": 0.042295493443781355,
        "http": 0.042295493443781355,
        "or": 0.042295493443781355,
        "execution": 0.042295493443781355,
        "openai": 0.042295493443781355,
        "compatible": 0.042295493443781355,
        "payloads": 0.042295493443781355,
        "restricts": 0.042295493443781355,
        "to": 0.042295493443781355,
        "loopback": 0.042295493443781355,
        "hosts": 0.042295493443781355,
        "normalizes": 0.042295493443781355,
        "responses": 0.042295493443781355,
        "processing": 0.042295493443781355,
        "postproc": 0.042295493443781355,
        "manages": 0.042295493443781355,
        "markers": 0.042295493443781355,
        "regenerates": 0.042295493443781355,
        "toc": 0.042295493443781355,
        "applies": 0.042295493443781355,
        "badges": 0.042295493443781355,
        "lints": 0.042295493443781355,
        "markdown": 0.042295493443781355,
        "validates": 0.042295493443781355,
        "links": 0.042295493443781355
      },
      "text": "--> Orc Orc --> Scan Orc --> Ana Orc --> RAG Orc --> Prompt Prompt --> LLM LLM --> Prompt Prompt --> Orc Orc --> Post Post --> Output Post --> Git ``` ### Component Responsibilities | Layer | Key modules | Purpose | | --- | --- | --- | | CLI & Logging | `docgen/cli.py`, `docgen/logging.py` | Parses subcommands, wires `--verbose`, and configures namespaced loggers. | | Configuration | `docgen/config.py` | Parses `.docgen.yml` into `DocGenConfig`, `LLMConfig`, `PublishConfig`, `AnalyzerConfig`, and `CIConfig`, with a handwritten YAML fallback. | | Repository scanning | `docgen/repo_scanner.py` | Builds `RepoManifest` of `FileMeta` entries, enforces ignore rules, infers file roles, and caches hashes in `.docgen/manifest_cache.json`. | | Analyzer plugins | `docgen/analyzers/*` | Emit `Signal` objects for languages, frameworks, build tools, dependencies, entrypoints, structural modules, API routes, entities, patterns, and monorepo hints. | | Prompting | `docgen/prompting/builder.py`, `templates/` | Groups signals, retrieves context, renders section templates, performs command validation, and estimates token budgets. | | Retrieval (RAG) | `docgen/rag/indexer.py`, `embedder.py`, `store.py`, `constants.py` | Chunks README/docs/source files, computes bag-of-words embeddings, persists context per section, and prunes stale vectors. | | LLM runtime | `docgen/llm/runner.py` | Chooses HTTP or CLI execution, builds OpenAI-compatible payloads, restricts to loopback hosts, and normalizes responses. | | Post-processing | `docgen/postproc/*` | Manages markers, regenerates ToC, applies badges, lints markdown, validates links, and",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#3",
      "vector": {
        "vectors": 0.08497185773241747,
        "llm": 0.12745778659862622,
        "runtime": 0.08497185773241747,
        "docgen": 0.4248592886620874,
        "runner": 0.08497185773241747,
        "py": 0.16994371546483494,
        "chooses": 0.042485928866208736,
        "http": 0.042485928866208736,
        "or": 0.12745778659862622,
        "cli": 0.16994371546483494,
        "execution": 0.042485928866208736,
        "builds": 0.042485928866208736,
        "openai": 0.042485928866208736,
        "compatible": 0.042485928866208736,
        "payloads": 0.042485928866208736,
        "restricts": 0.042485928866208736,
        "to": 0.08497185773241747,
        "loopback": 0.042485928866208736,
        "hosts": 0.042485928866208736,
        "and": 0.3398874309296699,
        "normalizes": 0.042485928866208736,
        "responses": 0.042485928866208736,
        "post": 0.08497185773241747,
        "processing": 0.08497185773241747,
        "postproc": 0.042485928866208736,
        "manages": 0.042485928866208736,
        "markers": 0.042485928866208736,
        "regenerates": 0.042485928866208736,
        "toc": 0.042485928866208736,
        "applies": 0.042485928866208736,
        "badges": 0.042485928866208736,
        "lints": 0.042485928866208736,
        "markdown": 0.042485928866208736,
        "validates": 0.042485928866208736,
        "links": 0.042485928866208736,
        "records": 0.042485928866208736,
        "readme": 0.08497185773241747,
        "quality": 0.08497185773241747,
        "metrics": 0.042485928866208736,
        "git": 0.2124296443310437,
        "integration": 0.042485928866208736,
        "diff": 0.042485928866208736,
        "publisher": 0.08497185773241747,
        "maps": 0.042485928866208736,
        "file": 0.08497185773241747,
        "diffs": 0.042485928866208736,
        "affected": 0.042485928866208736,
        "sections": 0.08497185773241747,
        "handles": 0.042485928866208736,
        "staged": 0.042485928866208736,
        "changes": 0.042485928866208736,
        "pushes": 0.042485928866208736,
        "commits": 0.08497185773241747,
        "prs": 0.08497185773241747,
        "with": 0.08497185773241747,
        "optional": 0.042485928866208736,
        "labels": 0.042485928866208736,
        "safety": 0.042485928866208736,
        "nets": 0.042485928866208736,
        "failsafe": 0.042485928866208736,
        "generates": 0.042485928866208736,
        "placeholder": 0.042485928866208736,
        "full": 0.042485928866208736,
        "stubs": 0.08497185773241747,
        "when": 0.042485928866208736,
        "prompting": 0.08497185773241747,
        "fails": 0.042485928866208736,
        "reference": 0.042485928866208736,
        "material": 0.042485928866208736,
        "spec": 0.16994371546483494,
        "md": 0.16994371546483494,
        "feature_order": 0.042485928866208736,
        "feature_checklist": 0.042485928866208736,
        "docs": 0.042485928866208736,
        "ci": 0.08497185773241747,
        "agents": 0.042485928866208736,
        "capture": 0.042485928866208736,
        "architectural": 0.042485928866208736,
        "contracts": 0.042485928866208736,
        "delivery": 0.042485928866208736,
        "roadmap": 0.042485928866208736,
        "feature": 0.042485928866208736,
        "status": 0.042485928866208736,
        "playbooks": 0.042485928866208736,
        "agent": 0.042485928866208736,
        "guidance": 0.042485928866208736,
        "tests": 0.08497185773241747,
        "mirroring": 0.042485928866208736,
        "modules": 0.042485928866208736,
        "pytest": 0.042485928866208736,
        "suite": 0.042485928866208736,
        "covering": 0.042485928866208736,
        "orchestrator": 0.08497185773241747,
        "analyzers": 0.042485928866208736,
        "workflows": 0.042485928866208736,
        "helpers": 0.042485928866208736,
        "artifacts": 0.042485928866208736,
        "data": 0.042485928866208736,
        "stores": 0.042485928866208736,
        "manifest_cache": 0.042485928866208736,
        "json": 0.12745778659862622,
        "cache": 0.042485928866208736,
        "of": 0.08497185773241747,
        "sizes": 0.042485928866208736,
        "mtimes": 0.042485928866208736,
        "hashes": 0.042485928866208736,
        "for": 0.042485928866208736,
        "fast": 0.042485928866208736,
        "re": 0.042485928866208736,
        "scans": 0.042485928866208736,
        "embeddings": 0.042485928866208736,
        "persisted": 0.042485928866208736,
        "embedding": 0.042485928866208736,
        "keyed": 0.042485928866208736,
        "by": 0.08497185773241747,
        "section": 0.042485928866208736,
        "tag": 0.042485928866208736,
        "via": 0.042485928866208736,
        "embeddingstore": 0.042485928866208736,
        "scorecard": 0.042485928866208736,
        "output": 0.042485928866208736,
        "readmescorecard": 0.042485928866208736,
        "evaluate": 0.042485928866208736,
        "tracking": 0.042485928866208736,
        "coverage": 0.042485928866208736,
        "link": 0.042485928866208736,
        "health": 0.042485928866208736,
        "quick": 0.042485928866208736,
        "start": 0.042485928866208736,
        "metadata": 0.042485928866208736,
        "branches": 0.042485928866208736,
        "created": 0.042485928866208736,
        "summaries": 0.042485928866208736,
        "from": 0.042485928866208736,
        "diffanalyzer": 0.042485928866208736,
        "pipeline": 0.042485928866208736,
        "sequence": 0.042485928866208736,
        "init": 0.042485928866208736,
        "mermaid": 0.042485928866208736,
        "sequencediagram": 0.042485928866208736,
        "participant": 0.25491557319725244,
        "dev": 0.042485928866208736,
        "as": 0.25491557319725244,
        "developer": 0.042485928866208736,
        "orc": 0.042485928866208736,
        "scan": 0.042485928866208736,
        "reposcanner": 0.042485928866208736,
        "ana": 0.042485928866208736,
        "analyzer": 0.042485928866208736,
        "plugins": 0.042485928866208736,
        "rag": 0.042485928866208736
      },
      "text": "vectors. | | LLM runtime | `docgen/llm/runner.py` | Chooses HTTP or CLI execution, builds OpenAI-compatible payloads, restricts to loopback hosts, and normalizes responses. | | Post-processing | `docgen/postproc/*` | Manages markers, regenerates ToC, applies badges, lints markdown, validates links, and records README quality metrics. | | Git integration | `docgen/git/diff.py`, `docgen/git/publisher.py` | Maps file diffs to affected sections, handles staged changes, and pushes commits or PRs with optional labels. | | Safety nets | `docgen/failsafe.py` | Generates placeholder sections or full README stubs when prompting fails. | | Reference material | `spec/spec.md`, `spec/feature_order.md`, `spec/feature_checklist.md`, `docs/ci/*`, `AGENTS.md` | Capture architectural contracts, delivery roadmap, feature status, CI playbooks, and agent guidance. | | Tests | `tests/` mirroring runtime modules | Pytest suite covering CLI, orchestrator, analyzers, prompting, git workflows, LLM runner stubs, and post-processing helpers. | ### Artifacts and Data Stores - `.docgen/manifest_cache.json` - cache of file sizes, mtimes, and hashes for fast re-scans. - `.docgen/embeddings.json` - persisted embedding vectors keyed by section/tag via `EmbeddingStore`. - `.docgen/scorecard.json` - output of `ReadmeScorecard.evaluate`, tracking coverage, link health, and quick-start quality. - Git metadata - branches/commits/PRs created by `Publisher` with summaries from `DiffAnalyzer`. ### Pipeline Sequence (`docgen init`) ```mermaid sequenceDiagram participant Dev as Developer participant CLI as docgen CLI participant Orc as Orchestrator participant Scan as RepoScanner participant Ana as Analyzer plugins participant RAG as",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#4",
      "vector": {
        "branches": 0.01984580179179854,
        "commits": 0.01984580179179854,
        "prs": 0.01984580179179854,
        "created": 0.01984580179179854,
        "by": 0.01984580179179854,
        "publisher": 0.03969160358359708,
        "with": 0.01984580179179854,
        "summaries": 0.01984580179179854,
        "from": 0.01984580179179854,
        "diffanalyzer": 0.03969160358359708,
        "pipeline": 0.01984580179179854,
        "sequence": 0.03969160358359708,
        "docgen": 0.11907481075079124,
        "init": 0.03969160358359708,
        "mermaid": 0.03969160358359708,
        "sequencediagram": 0.03969160358359708,
        "participant": 0.4167618376277693,
        "dev": 0.07938320716719416,
        "as": 0.4167618376277693,
        "developer": 0.03969160358359708,
        "cli": 0.15876641433438832,
        "orc": 0.6152198555457548,
        "orchestrator": 0.03969160358359708,
        "scan": 0.15876641433438832,
        "reposcanner": 0.03969160358359708,
        "ana": 0.11907481075079124,
        "analyzer": 0.03969160358359708,
        "plugins": 0.03969160358359708,
        "rag": 0.11907481075079124,
        "ragindexer": 0.03969160358359708,
        "prompt": 0.17861221612618686,
        "promptbuilder": 0.03969160358359708,
        "llm": 0.05953740537539562,
        "llmrunner": 0.01984580179179854,
        "post": 0.15876641433438832,
        "processing": 0.03969160358359708,
        "fs": 0.03969160358359708,
        "filesystem": 0.01984580179179854,
        "run_init": 0.01984580179179854,
        "path": 0.03969160358359708,
        "repomanifest": 0.03969160358359708,
        "filemeta": 0.01984580179179854,
        "analyze": 0.03969160358359708,
        "manifest": 0.0992290089589927,
        "signal": 0.03969160358359708,
        "build": 0.05953740537539562,
        "contexts": 0.03969160358359708,
        "per": 0.01984580179179854,
        "section": 0.07938320716719416,
        "signals": 0.01984580179179854,
        "invoke": 0.01984580179179854,
        "system": 0.01984580179179854,
        "markdown": 0.05953740537539562,
        "full": 0.01984580179179854,
        "readme": 0.07938320716719416,
        "draft": 0.01984580179179854,
        "lint": 0.03969160358359708,
        "toc": 0.03969160358359708,
        "badges": 0.03969160358359708,
        "links": 0.01984580179179854,
        "scorecard": 0.03969160358359708,
        "final": 0.03969160358359708,
        "quality": 0.01984580179179854,
        "report": 0.01984580179179854,
        "write": 0.01984580179179854,
        "md": 0.01984580179179854,
        "git": 0.01984580179179854,
        "optional": 0.01984580179179854,
        "commit": 0.05953740537539562,
        "publish": 0.01984580179179854,
        "mode": 0.01984580179179854,
        "patch": 0.01984580179179854,
        "update": 0.03969160358359708,
        "ci": 0.01984580179179854,
        "diff": 0.0992290089589927,
        "mark": 0.05953740537539562,
        "markermanager": 0.01984580179179854,
        "pub": 0.03969160358359708,
        "base": 0.05953740537539562,
        "ref": 0.01984580179179854,
        "run_update": 0.01984580179179854,
        "compute": 0.01984580179179854,
        "repo": 0.01984580179179854,
        "diffresult": 0.01984580179179854,
        "changed_files": 0.01984580179179854,
        "sections": 0.05953740537539562,
        "context": 0.01984580179179854,
        "snippets": 0.01984580179179854,
        "render_sections": 0.01984580179179854,
        "new": 0.01984580179179854,
        "bodies": 0.01984580179179854,
        "replace": 0.01984580179179854,
        "patched": 0.01984580179179854,
        "link": 0.01984580179179854,
        "check": 0.01984580179179854
      },
      "text": "branches/commits/PRs created by `Publisher` with summaries from `DiffAnalyzer`. ### Pipeline Sequence (`docgen init`) ```mermaid sequenceDiagram participant Dev as Developer participant CLI as docgen CLI participant Orc as Orchestrator participant Scan as RepoScanner participant Ana as Analyzer plugins participant RAG as RAGIndexer participant Prompt as PromptBuilder participant LLM as LLMRunner participant Post as Post-processing participant FS as Filesystem Dev->>CLI: docgen init . CLI->>Orc: run_init(path) Orc->>Scan: scan() Scan-->>Orc: RepoManifest(FileMeta[]) Orc->>Ana: analyze(manifest) Ana-->>Orc: Signal[] Orc->>RAG: build(manifest) RAG-->>Orc: contexts per section Orc->>Prompt: build(manifest, signals, contexts) Prompt->>LLM: invoke(system, prompt) LLM-->>Prompt: section markdown Prompt-->>Orc: full README draft Orc->>Post: lint -> toc -> badges -> links -> scorecard Post-->>Orc: final markdown + quality report Orc->>FS: write README.md Orc->>Git: optional commit (publish mode \"commit\") ``` ### Patch Sequence (`docgen update`) ```mermaid sequenceDiagram participant Dev as Developer/CI participant CLI as docgen CLI participant Orc as Orchestrator participant Diff as DiffAnalyzer participant Scan as RepoScanner participant Ana as Analyzer plugins participant RAG as RAGIndexer participant Prompt as PromptBuilder participant Mark as MarkerManager participant Post as Post-processing participant Pub as Publisher Dev->>CLI: docgen update --diff-base <ref> CLI->>Orc: run_update(path, base) Orc->>Diff: compute(repo, base) Diff-->>Orc: DiffResult(changed_files, sections) Orc->>Scan: scan() Scan-->>Orc: RepoManifest Orc->>Ana: analyze(manifest) Ana-->>Orc: Signal[] Orc->>RAG: build(manifest, sections) RAG-->>Orc: context snippets Orc->>Prompt: render_sections(sections) Prompt-->>Orc: new section bodies Orc->>Mark: replace(markdown, section) Mark-->>Orc: patched README Orc->>Post: lint/toc/badges/link check/scorecard Post-->>Orc: final README + diff Orc->>Pub: commit",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#5",
      "vector": {
        "base": 0.03639372626234195,
        "diff": 0.0727874525246839,
        "orc": 0.5095121676727873,
        "diffresult": 0.03639372626234195,
        "changed_files": 0.03639372626234195,
        "sections": 0.1455749050493678,
        "scan": 0.10918117878702585,
        "repomanifest": 0.03639372626234195,
        "ana": 0.0727874525246839,
        "analyze": 0.03639372626234195,
        "manifest": 0.10918117878702585,
        "signal": 0.1455749050493678,
        "rag": 0.0727874525246839,
        "build": 0.0727874525246839,
        "context": 0.03639372626234195,
        "snippets": 0.03639372626234195,
        "prompt": 0.0727874525246839,
        "render_sections": 0.03639372626234195,
        "new": 0.03639372626234195,
        "section": 0.0727874525246839,
        "bodies": 0.03639372626234195,
        "mark": 0.0727874525246839,
        "replace": 0.03639372626234195,
        "markdown": 0.03639372626234195,
        "patched": 0.03639372626234195,
        "readme": 0.0727874525246839,
        "post": 0.1455749050493678,
        "lint": 0.03639372626234195,
        "toc": 0.03639372626234195,
        "badges": 0.03639372626234195,
        "link": 0.03639372626234195,
        "check": 0.03639372626234195,
        "scorecard": 0.03639372626234195,
        "final": 0.03639372626234195,
        "pub": 0.03639372626234195,
        "commit": 0.03639372626234195,
        "or": 0.03639372626234195,
        "pr": 0.03639372626234195,
        "branch": 0.03639372626234195,
        "title": 0.03639372626234195,
        "body": 0.03639372626234195,
        "api": 0.2911498100987356,
        "extraction": 0.03639372626234195,
        "structureanalyzer": 0.03639372626234195,
        "inspects": 0.03639372626234195,
        "source": 0.03639372626234195,
        "files": 0.0727874525246839,
        "for": 0.03639372626234195,
        "fastapi": 0.10918117878702585,
        "decorators": 0.03639372626234195,
        "express": 0.03639372626234195,
        "route": 0.03639372626234195,
        "calls": 0.0727874525246839,
        "and": 0.3275435363610775,
        "pydantic": 0.03639372626234195,
        "orm": 0.03639372626234195,
        "entities": 0.03639372626234195,
        "each": 0.03639372626234195,
        "match": 0.03639372626234195,
        "emits": 0.03639372626234195,
        "metadata": 0.03639372626234195,
        "such": 0.03639372626234195,
        "as": 0.18196863131170973,
        "handler": 0.03639372626234195,
        "names": 0.03639372626234195,
        "http": 0.03639372626234195,
        "verbs": 0.03639372626234195,
        "detected": 0.03639372626234195,
        "external": 0.0727874525246839,
        "requests": 0.0727874525246839,
        "session": 0.0727874525246839,
        "db": 0.1455749050493678,
        "assembled": 0.03639372626234195,
        "sequence": 0.03639372626234195,
        "steps": 0.03639372626234195,
        "that": 0.0727874525246839,
        "downstream": 0.03639372626234195,
        "templates": 0.03639372626234195,
        "render": 0.03639372626234195,
        "diagrams": 0.03639372626234195,
        "mermaid": 0.03639372626234195,
        "sequencediagram": 0.03639372626234195,
        "participant": 0.1455749050493678,
        "client": 0.10918117878702585,
        "endpoint": 0.03639372626234195,
        "auth": 0.10918117878702585,
        "service": 0.03639372626234195,
        "database": 0.03639372626234195,
        "login": 0.03639372626234195,
        "token": 0.03639372626234195,
        "response": 0.0727874525246839,
        "write": 0.03639372626234195,
        "ack": 0.03639372626234195,
        "authenticated": 0.03639372626234195,
        "other": 0.03639372626234195,
        "analyzers": 0.0727874525246839,
        "complement": 0.03639372626234195,
        "these": 0.03639372626234195,
        "signals": 0.03639372626234195,
        "entrypointanalyzer": 0.03639372626234195,
        "ranks": 0.03639372626234195,
        "executable": 0.03639372626234195,
        "commands": 0.0727874525246839,
        "uvicorn": 0.03639372626234195,
        "django": 0.03639372626234195,
        "runserver": 0.03639372626234195,
        "npm": 0.03639372626234195,
        "dev": 0.03639372626234195,
        "spring": 0.03639372626234195,
        "boot": 0.03639372626234195,
        "bootrun": 0.03639372626234195,
        "buildanalyzer": 0.03639372626234195,
        "pairs": 0.03639372626234195,
        "with": 0.03639372626234195,
        "reproducible": 0.03639372626234195,
        "test": 0.03639372626234195,
        "os": 0.03639372626234195,
        "aware": 0.03639372626234195,
        "scripts": 0.0727874525246839,
        "dependencyanalyzer": 0.03639372626234195,
        "patternanalyzer": 0.03639372626234195,
        "languageanalyzer": 0.03639372626234195,
        "describe": 0.03639372626234195,
        "frameworks": 0.03639372626234195,
        "docker": 0.03639372626234195,
        "k8s": 0.03639372626234195,
        "ci": 0.03639372626234195,
        "layouts": 0.03639372626234195,
        "monorepo": 0.03639372626234195,
        "hints": 0.03639372626234195,
        "feed": 0.03639372626234195,
        "the": 0.03639372626234195,
        "features": 0.03639372626234195,
        "architecture": 0.0727874525246839,
        "quick": 0.0727874525246839,
        "start": 0.0727874525246839,
        "tests": 0.1455749050493678,
        "under": 0.03639372626234195,
        "prompting": 0.03639372626234195,
        "git": 0.03639372626234195,
        "assert": 0.03639372626234195,
        "accuracy": 0.03639372626234195,
        "command": 0.03639372626234195,
        "selection": 0.03639372626234195,
        "publishing": 0.03639372626234195,
        "behavior": 0.03639372626234195,
        "docgen": 0.0727874525246839,
        "end": 0.03639372626234195,
        "begin": 0.03639372626234195,
        "quickstart": 0.03639372626234195,
        "1": 0.03639372626234195,
        "create": 0.03639372626234195,
        "a": 0.03639372626234195,
        "virtual": 0.03639372626234195,
        "environment": 0.03639372626234195,
        "activate": 0.0727874525246839,
        "it": 0.03639372626234195,
        "windows": 0.03639372626234195,
        "python": 0.0727874525246839,
        "m": 0.0727874525246839,
        "venv": 0.18196863131170973,
        "then": 0.03639372626234195,
        "macos": 0.03639372626234195,
        "linux": 0.03639372626234195
      },
      "text": "base) Diff-->>Orc: DiffResult(changed_files, sections) Orc->>Scan: scan() Scan-->>Orc: RepoManifest Orc->>Ana: analyze(manifest) Ana-->>Orc: Signal[] Orc->>RAG: build(manifest, sections) RAG-->>Orc: context snippets Orc->>Prompt: render_sections(sections) Prompt-->>Orc: new section bodies Orc->>Mark: replace(markdown, section) Mark-->>Orc: patched README Orc->>Post: lint/toc/badges/link check/scorecard Post-->>Orc: final README + diff Orc->>Pub: commit or PR (branch, title, body) ``` ### API Signal Extraction `StructureAnalyzer` inspects source files for FastAPI decorators, Express route calls, and Pydantic/ORM entities. Each match emits `Signal` metadata such as handler names, HTTP verbs, detected external calls (`requests`, `session`, `db`), and assembled `sequence` steps that downstream templates render as diagrams. ```mermaid sequenceDiagram participant Client participant API as FastAPI endpoint participant Auth as External service participant DB as Database Client->>API: POST /login API->>Auth: requests.post() Auth-->>API: token/response API->>DB: session.write() DB-->>API: ack API-->>Client: Authenticated response ``` Other analyzers complement these signals: - `EntryPointAnalyzer` ranks executable commands (FastAPI `uvicorn`, Django `runserver`, npm `dev`, Spring Boot `bootRun`). - `BuildAnalyzer` pairs manifest files with reproducible build/test commands and OS-aware scripts. - `DependencyAnalyzer`, `PatternAnalyzer`, and `LanguageAnalyzer` describe frameworks, Docker/K8s/CI layouts, and monorepo hints that feed the features, architecture, and quick-start sections. - Tests under `tests/analyzers/`, `tests/prompting/`, and `tests/git/` assert signal accuracy, command selection, and publishing behavior. <!-- docgen:end:architecture --> ## Quick Start <!-- docgen:begin:quickstart --> 1. Create a virtual environment and activate it: - Windows: `python -m venv .venv` then `.\\.venv\\Scripts\\activate` - macOS/Linux: `python -m venv .venv`",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#6",
      "vector": {
        "tests": 0.04214497519610896,
        "git": 0.04214497519610896,
        "assert": 0.04214497519610896,
        "signal": 0.04214497519610896,
        "accuracy": 0.04214497519610896,
        "command": 0.04214497519610896,
        "selection": 0.04214497519610896,
        "and": 0.16857990078443583,
        "publishing": 0.04214497519610896,
        "behavior": 0.04214497519610896,
        "docgen": 0.5057397023533075,
        "end": 0.08428995039221791,
        "architecture": 0.04214497519610896,
        "quick": 0.04214497519610896,
        "start": 0.04214497519610896,
        "begin": 0.08428995039221791,
        "quickstart": 0.08428995039221791,
        "1": 0.04214497519610896,
        "create": 0.04214497519610896,
        "a": 0.08428995039221791,
        "virtual": 0.04214497519610896,
        "environment": 0.04214497519610896,
        "activate": 0.12643492558832686,
        "it": 0.04214497519610896,
        "windows": 0.04214497519610896,
        "python": 0.2528698511766537,
        "m": 0.2528698511766537,
        "venv": 0.2528698511766537,
        "then": 0.08428995039221791,
        "scripts": 0.04214497519610896,
        "macos": 0.04214497519610896,
        "linux": 0.04214497519610896,
        "source": 0.04214497519610896,
        "bin": 0.04214497519610896,
        "2": 0.08428995039221791,
        "install": 0.12643492558832686,
        "dependencies": 0.04214497519610896,
        "in": 0.04214497519610896,
        "editable": 0.04214497519610896,
        "mode": 0.08428995039221791,
        "includes": 0.04214497519610896,
        "cli": 0.12643492558832686,
        "entry": 0.04214497519610896,
        "point": 0.04214497519610896,
        "test": 0.04214497519610896,
        "tooling": 0.04214497519610896,
        "bash": 0.12643492558832686,
        "pip": 0.12643492558832686,
        "upgrade": 0.04214497519610896,
        "e": 0.04214497519610896,
        "dev": 0.04214497519610896,
        "3": 0.04214497519610896,
        "configure": 0.04214497519610896,
        "yml": 0.08428995039221791,
        "with": 0.08428995039221791,
        "local": 0.04214497519610896,
        "llm": 0.08428995039221791,
        "runner": 0.12643492558832686,
        "details": 0.04214497519610896,
        "see": 0.04214497519610896,
        "configuration": 0.12643492558832686,
        "below": 0.04214497519610896,
        "4": 0.04214497519610896,
        "generate": 0.04214497519610896,
        "an": 0.04214497519610896,
        "initial": 0.04214497519610896,
        "readme": 0.12643492558832686,
        "from": 0.04214497519610896,
        "the": 0.04214497519610896,
        "repository": 0.04214497519610896,
        "root": 0.04214497519610896,
        "init": 0.04214497519610896,
        "5": 0.04214497519610896,
        "after": 0.04214497519610896,
        "subsequent": 0.04214497519610896,
        "changes": 0.04214497519610896,
        "refresh": 0.04214497519610896,
        "documentation": 0.04214497519610896,
        "update": 0.08428995039221791,
        "diff": 0.04214497519610896,
        "base": 0.04214497519610896,
        "origin": 0.04214497519610896,
        "main": 0.04214497519610896,
        "6": 0.04214497519610896,
        "use": 0.04214497519610896,
        "dry": 0.04214497519610896,
        "run": 0.04214497519610896,
        "to": 0.04214497519610896,
        "preview": 0.04214497519610896,
        "diffs": 0.04214497519610896,
        "or": 0.16857990078443583,
        "verbose": 0.04214497519610896,
        "for": 0.04214497519610896,
        "deeper": 0.04214497519610896,
        "logs": 0.04214497519610896,
        "while": 0.04214497519610896,
        "iterating": 0.04214497519610896,
        "on": 0.04214497519610896,
        "analyzers": 0.08428995039221791,
        "config": 0.04214497519610896,
        "py": 0.04214497519610896,
        "loads": 0.04214497519610896,
        "into": 0.04214497519610896,
        "strongly": 0.04214497519610896,
        "typed": 0.04214497519610896,
        "dataclasses": 0.04214497519610896,
        "provides": 0.04214497519610896,
        "minimal": 0.04214497519610896,
        "yaml": 0.08428995039221791,
        "parser": 0.04214497519610896,
        "when": 0.04214497519610896,
        "pyyaml": 0.04214497519610896,
        "is": 0.04214497519610896,
        "absent": 0.04214497519610896,
        "common": 0.04214497519610896,
        "fields": 0.04214497519610896,
        "ollama": 0.04214497519610896,
        "model": 0.08428995039221791,
        "llama3": 0.04214497519610896,
        "8b": 0.04214497519610896,
        "instruct": 0.04214497519610896,
        "base_url": 0.04214497519610896,
        "http": 0.04214497519610896,
        "localhost": 0.04214497519610896,
        "12434": 0.04214497519610896,
        "engines": 0.04214497519610896,
        "v1": 0.04214497519610896,
        "temperature": 0.04214497519610896,
        "0": 0.04214497519610896,
        "max_tokens": 0.04214497519610896,
        "2048": 0.04214497519610896,
        "style": 0.04214497519610896,
        "comprehensive": 0.04214497519610896,
        "concise": 0.04214497519610896,
        "template_pack": 0.04214497519610896,
        "null": 0.04214497519610896,
        "optional": 0.04214497519610896,
        "alt": 0.04214497519610896,
        "templates": 0.08428995039221791,
        "under": 0.04214497519610896,
        "prompting": 0.04214497519610896,
        "publish": 0.04214497519610896,
        "pr": 0.08428995039221791,
        "commit": 0.04214497519610896,
        "branch_prefix": 0.04214497519610896,
        "labels": 0.04214497519610896,
        "docs": 0.08428995039221791,
        "auto": 0.04214497519610896,
        "update_existing": 0.04214497519610896,
        "false": 0.04214497519610896,
        "enabled": 0.04214497519610896,
        "subset": 0.04214497519610896,
        "of": 0.04214497519610896,
        "plugin": 0.04214497519610896,
        "names": 0.04214497519610896,
        "empty": 0.04214497519610896,
        "uses": 0.04214497519610896,
        "all": 0.04214497519610896,
        "built": 0.04214497519610896,
        "ins": 0.04214497519610896,
        "exclude_paths": 0.08428995039221791,
        "sandbox": 0.08428995039221791,
        "ci": 0.04214497519610896,
        "watched_globs": 0.04214497519610896
      },
      "text": "`tests/git/` assert signal accuracy, command selection, and publishing behavior. <!-- docgen:end:architecture --> ## Quick Start <!-- docgen:begin:quickstart --> 1. Create a virtual environment and activate it: - Windows: `python -m venv .venv` then `.\\.venv\\Scripts\\activate` - macOS/Linux: `python -m venv .venv` then `source .venv/bin/activate` 2. Install dependencies in editable mode (includes CLI entry point and test tooling): ```bash python -m pip install --upgrade pip python -m pip install -e .[dev] ``` 3. Configure `.docgen.yml` with local LLM runner details (see Configuration below). 4. Generate an initial README from the repository root: ```bash python -m docgen.cli init . ``` 5. After subsequent changes, refresh documentation with: ```bash python -m docgen.cli update --diff-base origin/main ``` 6. Use `--dry-run` to preview diffs or `--verbose` for deeper logs while iterating on analyzers. <!-- docgen:end:quickstart --> ## Configuration <!-- docgen:begin:configuration --> `docgen/config.py` loads `.docgen.yml` into strongly typed dataclasses and provides a minimal YAML parser when PyYAML is absent. Common fields: ```yaml llm: runner: \"ollama\" # or \"model-runner\" model: \"llama3:8b-instruct\" base_url: \"http://localhost:12434/engines/v1\" temperature: 0.2 max_tokens: 2048 readme: style: \"comprehensive\" # or \"concise\" template_pack: null # optional alt templates under docgen/prompting/templates/ publish: mode: \"pr\" # \"pr\" or \"commit\" branch_prefix: \"docgen/readme-update\" labels: [\"docs:auto\"] update_existing: false analyzers: enabled: [] # subset of plugin names, empty uses all built-ins exclude_paths: - \"sandbox/\" ci: watched_globs: - \"docgen/**\" - \"docs/**\" exclude_paths: - \"sandbox/\"",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#7",
      "vector": {
        "templates": 0.12058018065872111,
        "under": 0.12058018065872111,
        "docgen": 0.5225141161877915,
        "prompting": 0.08038678710581408,
        "publish": 0.04019339355290704,
        "mode": 0.08038678710581408,
        "pr": 0.16077357421162816,
        "or": 0.12058018065872111,
        "commit": 0.04019339355290704,
        "branch_prefix": 0.04019339355290704,
        "readme": 0.08038678710581408,
        "update": 0.12058018065872111,
        "labels": 0.04019339355290704,
        "docs": 0.24116036131744223,
        "auto": 0.04019339355290704,
        "update_existing": 0.04019339355290704,
        "false": 0.04019339355290704,
        "analyzers": 0.12058018065872111,
        "enabled": 0.04019339355290704,
        "subset": 0.04019339355290704,
        "of": 0.04019339355290704,
        "plugin": 0.04019339355290704,
        "names": 0.04019339355290704,
        "empty": 0.04019339355290704,
        "uses": 0.04019339355290704,
        "all": 0.04019339355290704,
        "built": 0.04019339355290704,
        "ins": 0.04019339355290704,
        "exclude_paths": 0.12058018065872111,
        "sandbox": 0.08038678710581408,
        "ci": 0.24116036131744223,
        "watched_globs": 0.08038678710581408,
        "highlights": 0.04019339355290704,
        "llmconfig": 0.04019339355290704,
        "supports": 0.04019339355290704,
        "env": 0.04019339355290704,
        "overrides": 0.08038678710581408,
        "docgen_llm_model": 0.04019339355290704,
        "docgen_llm_base_url": 0.04019339355290704,
        "docgen_llm_api_key": 0.04019339355290704,
        "and": 0.12058018065872111,
        "enforces": 0.04019339355290704,
        "loopback": 0.04019339355290704,
        "urls": 0.04019339355290704,
        "publishconfig": 0.04019339355290704,
        "toggles": 0.04019339355290704,
        "automatic": 0.04019339355290704,
        "commits": 0.04019339355290704,
        "creation": 0.04019339355290704,
        "publisher": 0.04019339355290704,
        "relies": 0.04019339355290704,
        "on": 0.04019339355290704,
        "the": 0.16077357421162816,
        "github": 0.12058018065872111,
        "cli": 0.08038678710581408,
        "when": 0.12058018065872111,
        "analyzerconfig": 0.04019339355290704,
        "removes": 0.04019339355290704,
        "noisy": 0.04019339355290704,
        "directories": 0.04019339355290704,
        "from": 0.04019339355290704,
        "analysis": 0.04019339355290704,
        "without": 0.04019339355290704,
        "editing": 0.04019339355290704,
        "gitignore": 0.04019339355290704,
        "template": 0.04019339355290704,
        "can": 0.04019339355290704,
        "live": 0.04019339355290704,
        "are": 0.04019339355290704,
        "picked": 0.04019339355290704,
        "up": 0.04019339355290704,
        "automatically": 0.04019339355290704,
        "present": 0.04019339355290704,
        "watchers": 0.04019339355290704,
        "skip": 0.04019339355290704,
        "updates": 0.04019339355290704,
        "changed": 0.04019339355290704,
        "files": 0.04019339355290704,
        "do": 0.04019339355290704,
        "not": 0.04019339355290704,
        "match": 0.04019339355290704,
        "aligning": 0.04019339355290704,
        "with": 0.04019339355290704,
        "workflow": 0.04019339355290704,
        "in": 0.12058018065872111,
        "yml": 0.08038678710581408,
        "end": 0.08038678710581408,
        "configuration": 0.04019339355290704,
        "build": 0.04019339355290704,
        "test": 0.08038678710581408,
        "begin": 0.08038678710581408,
        "build_and_test": 0.08038678710581408,
        "format": 0.04019339355290704,
        "lint": 0.04019339355290704,
        "bash": 0.16077357421162816,
        "black": 0.04019339355290704,
        "tests": 0.12058018065872111,
        "python": 0.2009669677645352,
        "m": 0.2009669677645352,
        "ruff": 0.04019339355290704,
        "check": 0.08038678710581408,
        "type": 0.04019339355290704,
        "core": 0.04019339355290704,
        "modules": 0.08038678710581408,
        "mypy": 0.04019339355290704,
        "run": 0.04019339355290704,
        "full": 0.04019339355290704,
        "suite": 0.04019339355290704,
        "mirrors": 0.04019339355290704,
        "runtime": 0.04019339355290704,
        "orchestrator": 0.08038678710581408,
        "git": 0.04019339355290704,
        "rag": 0.04019339355290704,
        "post": 0.04019339355290704,
        "processing": 0.04019339355290704,
        "pytest": 0.12058018065872111,
        "target": 0.04019339355290704,
        "specific": 0.04019339355290704,
        "areas": 0.04019339355290704,
        "while": 0.04019339355290704,
        "iterating": 0.04019339355290704,
        "k": 0.04019339355290704,
        "test_structure": 0.04019339355290704,
        "py": 0.04019339355290704,
        "regenerate": 0.04019339355290704,
        "fixtures": 0.04019339355290704,
        "inspect": 0.04019339355290704,
        "scorecards": 0.04019339355290704,
        "stored": 0.04019339355290704,
        "to": 0.04019339355290704,
        "validate": 0.04019339355290704,
        "generated": 0.04019339355290704,
        "content": 0.04019339355290704,
        "deployment": 0.08038678710581408,
        "actions": 0.08038678710581408,
        "recipe": 0.04019339355290704,
        "documented": 0.04019339355290704,
        "md": 0.04019339355290704,
        "installs": 0.04019339355290704,
        "package": 0.04019339355290704,
        "editable": 0.04019339355290704
      },
      "text": "templates under docgen/prompting/templates/ publish: mode: \"pr\" # \"pr\" or \"commit\" branch_prefix: \"docgen/readme-update\" labels: [\"docs:auto\"] update_existing: false analyzers: enabled: [] # subset of plugin names, empty uses all built-ins exclude_paths: - \"sandbox/\" ci: watched_globs: - \"docgen/**\" - \"docs/**\" exclude_paths: - \"sandbox/\" ``` Highlights: - `LLMConfig` supports env overrides (`DOCGEN_LLM_MODEL`, `DOCGEN_LLM_BASE_URL`, `DOCGEN_LLM_API_KEY`) and enforces loopback URLs. - `PublishConfig` toggles automatic commits or PR creation; `Publisher` relies on the GitHub CLI when `mode=\"pr\"`. - `AnalyzerConfig.exclude_paths` removes noisy directories from analysis without editing `.gitignore`. - Template overrides can live under `docs/templates/` and are picked up automatically when present. - CI watchers skip updates when changed files do not match `ci.watched_globs`, aligning with the workflow in `docs/ci/docgen-update.yml`. <!-- docgen:end:configuration --> ## Build & Test <!-- docgen:begin:build_and_test --> - Format and lint: ```bash black docgen tests python -m ruff check docgen tests ``` - Type-check core modules: ```bash python -m mypy docgen ``` - Run the full test suite (mirrors runtime modules: CLI, orchestrator, analyzers, prompting, git, RAG, post-processing): ```bash python -m pytest ``` - Target specific areas while iterating: ```bash python -m pytest -k orchestrator python -m pytest tests/analyzers/test_structure.py ``` - Regenerate README fixtures or inspect scorecards stored under `.docgen/` to validate generated content. <!-- docgen:end:build_and_test --> ## Deployment <!-- docgen:begin:deployment --> - GitHub Actions recipe: `docs/ci/docgen-update.yml` (documented in `docs/ci/github-actions.md`) installs the package in editable",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#8",
      "vector": {
        "python": 0.040555355282690636,
        "m": 0.040555355282690636,
        "pytest": 0.040555355282690636,
        "tests": 0.040555355282690636,
        "analyzers": 0.040555355282690636,
        "test_structure": 0.040555355282690636,
        "py": 0.08111071056538127,
        "regenerate": 0.040555355282690636,
        "readme": 0.12166606584807191,
        "fixtures": 0.040555355282690636,
        "or": 0.24333213169614382,
        "inspect": 0.08111071056538127,
        "scorecards": 0.040555355282690636,
        "stored": 0.040555355282690636,
        "under": 0.040555355282690636,
        "docgen": 0.48666426339228763,
        "to": 0.20277677641345318,
        "validate": 0.040555355282690636,
        "generated": 0.08111071056538127,
        "content": 0.040555355282690636,
        "end": 0.08111071056538127,
        "build_and_test": 0.040555355282690636,
        "deployment": 0.12166606584807191,
        "begin": 0.08111071056538127,
        "github": 0.12166606584807191,
        "actions": 0.08111071056538127,
        "recipe": 0.040555355282690636,
        "docs": 0.12166606584807191,
        "ci": 0.12166606584807191,
        "update": 0.16222142113076254,
        "yml": 0.040555355282690636,
        "documented": 0.040555355282690636,
        "in": 0.12166606584807191,
        "md": 0.040555355282690636,
        "installs": 0.040555355282690636,
        "the": 0.40555355282690636,
        "package": 0.040555355282690636,
        "editable": 0.040555355282690636,
        "mode": 0.08111071056538127,
        "runs": 0.040555355282690636,
        "and": 0.16222142113076254,
        "optionally": 0.040555355282690636,
        "commits": 0.08111071056538127,
        "changes": 0.040555355282690636,
        "back": 0.040555355282690636,
        "branch": 0.040555355282690636,
        "self": 0.040555355282690636,
        "hosted": 0.040555355282690636,
        "runners": 0.040555355282690636,
        "are": 0.12166606584807191,
        "recommended": 0.040555355282690636,
        "so": 0.040555355282690636,
        "workflow": 0.040555355282690636,
        "can": 0.08111071056538127,
        "reach": 0.040555355282690636,
        "your": 0.040555355282690636,
        "local": 0.08111071056538127,
        "inference": 0.040555355282690636,
        "endpoint": 0.040555355282690636,
        "docgen_llm_base_url": 0.040555355282690636,
        "same": 0.040555355282690636,
        "settings": 0.040555355282690636,
        "apply": 0.040555355282690636,
        "when": 0.12166606584807191,
        "running": 0.040555355282690636,
        "cd": 0.040555355282690636,
        "pipelines": 0.040555355282690636,
        "outside": 0.040555355282690636,
        "publisher": 0.040555355282690636,
        "push": 0.040555355282690636,
        "directly": 0.040555355282690636,
        "publish": 0.040555355282690636,
        "commit": 0.040555355282690636,
        "for": 0.040555355282690636,
        "bootstrap": 0.040555355282690636,
        "scenarios": 0.040555355282690636,
        "open": 0.040555355282690636,
        "prs": 0.040555355282690636,
        "with": 0.040555355282690636,
        "labeled": 0.040555355282690636,
        "summaries": 0.040555355282690636,
        "gh": 0.040555355282690636,
        "cli": 0.040555355282690636,
        "credentials": 0.040555355282690636,
        "available": 0.040555355282690636,
        "troubleshooting": 0.08111071056538127,
        "use": 0.040555355282690636,
        "verbose": 0.040555355282690636,
        "surface": 0.040555355282690636,
        "analyzer": 0.08111071056538127,
        "selection": 0.040555355282690636,
        "prompt": 0.08111071056538127,
        "generation": 0.040555355282690636,
        "post": 0.040555355282690636,
        "processing": 0.040555355282690636,
        "diagnostics": 0.040555355282690636,
        "emitted": 0.040555355282690636,
        "by": 0.040555355282690636,
        "get_logger": 0.040555355282690636,
        "orchestrator": 0.040555355282690636,
        "if": 0.040555355282690636,
        "already": 0.040555355282690636,
        "exists": 0.040555355282690636,
        "init": 0.040555355282690636,
        "will": 0.040555355282690636,
        "abort": 0.040555355282690636,
        "switch": 0.040555355282690636,
        "remove": 0.040555355282690636,
        "file": 0.040555355282690636,
        "before": 0.08111071056538127,
        "re": 0.040555355282690636,
        "initialising": 0.040555355282690636,
        "empty": 0.040555355282690636,
        "failing": 0.040555355282690636,
        "sections": 0.040555355282690636,
        "trigger": 0.040555355282690636,
        "fallback": 0.040555355282690636,
        "stubs": 0.040555355282690636,
        "from": 0.040555355282690636,
        "failsafe": 0.040555355282690636,
        "raised": 0.040555355282690636,
        "reason": 0.040555355282690636,
        "rerun": 0.040555355282690636,
        "once": 0.040555355282690636,
        "underlying": 0.040555355282690636,
        "issue": 0.040555355282690636,
        "is": 0.08111071056538127,
        "fixed": 0.040555355282690636,
        "link": 0.040555355282690636,
        "validation": 0.040555355282690636,
        "issues": 0.040555355282690636,
        "logged": 0.040555355282690636,
        "as": 0.040555355282690636,
        "warnings": 0.040555355282690636,
        "relative": 0.040555355282690636,
        "paths": 0.040555355282690636,
        "add": 0.040555355282690636,
        "missing": 0.040555355282690636,
        "files": 0.040555355282690636,
        "committing": 0.040555355282690636,
        "clear": 0.040555355282690636,
        "manifest_cache": 0.040555355282690636,
        "json": 0.08111071056538127,
        "embeddings": 0.040555355282690636,
        "refactoring": 0.040555355282690636,
        "large": 0.040555355282690636,
        "parts": 0.040555355282690636,
        "of": 0.040555355282690636,
        "repo": 0.040555355282690636,
        "structure": 0.040555355282690636,
        "force": 0.040555355282690636,
        "a": 0.08111071056538127,
        "fresh": 0.040555355282690636,
        "scan": 0.040555355282690636,
        "ensure": 0.040555355282690636,
        "model": 0.040555355282690636,
        "runner": 0.040555355282690636,
        "reachable": 0.040555355282690636,
        "at": 0.040555355282690636,
        "loopback": 0.040555355282690636,
        "url": 0.040555355282690636,
        "remote": 0.040555355282690636
      },
      "text": "python -m pytest tests/analyzers/test_structure.py ``` - Regenerate README fixtures or inspect scorecards stored under `.docgen/` to validate generated content. <!-- docgen:end:build_and_test --> ## Deployment <!-- docgen:begin:deployment --> - GitHub Actions recipe: `docs/ci/docgen-update.yml` (documented in `docs/ci/github-actions.md`) installs the package in editable mode, runs `docgen update`, and optionally commits README changes back to the branch. - Self-hosted runners are recommended so the workflow can reach your local inference endpoint (`DOCGEN_LLM_BASE_URL`). The same settings apply when running in CI/CD pipelines outside GitHub. - `Publisher` can push commits directly (`publish.mode: commit`) for bootstrap scenarios or open PRs with labeled summaries when `gh` CLI credentials are available. <!-- docgen:end:deployment --> ## Troubleshooting <!-- docgen:begin:troubleshooting --> - Use `--verbose` to surface analyzer selection, prompt generation, and post-processing diagnostics emitted by `get_logger(\"orchestrator\")`. - If the README already exists, `docgen init` will abort; switch to `docgen update` or remove the file before re-initialising. - Empty or failing sections trigger fallback stubs from `docgen/failsafe.py`; inspect the raised reason and rerun once the underlying analyzer or prompt issue is fixed. - Link validation issues are logged as warnings. Update relative paths or add missing files before committing generated docs. - Clear `.docgen/manifest_cache.json` and `.docgen/embeddings.json` when refactoring large parts of the repo structure to force a fresh scan. - Ensure the local model runner is reachable at a loopback URL; remote",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#9",
      "vector": {
        "paths": 0.03782347372361169,
        "or": 0.26476431606528184,
        "add": 0.11347042117083507,
        "missing": 0.03782347372361169,
        "files": 0.03782347372361169,
        "before": 0.03782347372361169,
        "committing": 0.03782347372361169,
        "generated": 0.03782347372361169,
        "docs": 0.03782347372361169,
        "clear": 0.03782347372361169,
        "docgen": 0.4538816846833403,
        "manifest_cache": 0.03782347372361169,
        "json": 0.07564694744722338,
        "and": 0.11347042117083507,
        "embeddings": 0.03782347372361169,
        "when": 0.07564694744722338,
        "refactoring": 0.03782347372361169,
        "large": 0.03782347372361169,
        "parts": 0.03782347372361169,
        "of": 0.03782347372361169,
        "the": 0.3404112635125052,
        "repo": 0.03782347372361169,
        "structure": 0.03782347372361169,
        "to": 0.03782347372361169,
        "force": 0.03782347372361169,
        "a": 0.4538816846833403,
        "fresh": 0.03782347372361169,
        "scan": 0.03782347372361169,
        "ensure": 0.03782347372361169,
        "local": 0.07564694744722338,
        "model": 0.07564694744722338,
        "runner": 0.07564694744722338,
        "is": 0.07564694744722338,
        "reachable": 0.03782347372361169,
        "at": 0.03782347372361169,
        "loopback": 0.07564694744722338,
        "url": 0.03782347372361169,
        "remote": 0.07564694744722338,
        "hosts": 0.07564694744722338,
        "are": 0.07564694744722338,
        "intentionally": 0.03782347372361169,
        "rejected": 0.03782347372361169,
        "by": 0.03782347372361169,
        "llmrunner": 0.07564694744722338,
        "for": 0.03782347372361169,
        "security": 0.03782347372361169,
        "end": 0.11347042117083507,
        "troubleshooting": 0.03782347372361169,
        "faq": 0.11347042117083507,
        "begin": 0.07564694744722338,
        "q": 0.15129389489444675,
        "how": 0.03782347372361169,
        "this": 0.07564694744722338,
        "readme": 0.03782347372361169,
        "maintained": 0.03782347372361169,
        "generate": 0.03782347372361169,
        "with": 0.03782347372361169,
        "init": 0.03782347372361169,
        "keep": 0.03782347372361169,
        "it": 0.03782347372361169,
        "current": 0.03782347372361169,
        "via": 0.07564694744722338,
        "update": 0.03782347372361169,
        "optionally": 0.03782347372361169,
        "in": 0.15129389489444675,
        "ci": 0.03782347372361169,
        "using": 0.03782347372361169,
        "provided": 0.03782347372361169,
        "workflow": 0.03782347372361169,
        "what": 0.03782347372361169,
        "happens": 0.03782347372361169,
        "if": 0.03782347372361169,
        "analyzers": 0.11347042117083507,
        "miss": 0.03782347372361169,
        "framework": 0.03782347372361169,
        "command": 0.03782347372361169,
        "signals": 0.03782347372361169,
        "pluggable": 0.03782347372361169,
        "custom": 0.03782347372361169,
        "analyzer": 0.03782347372361169,
        "entry": 0.03782347372361169,
        "point": 0.03782347372361169,
        "group": 0.03782347372361169,
        "extend": 0.03782347372361169,
        "existing": 0.03782347372361169,
        "utilities": 0.03782347372361169,
        "under": 0.03782347372361169,
        "utils": 0.03782347372361169,
        "py": 0.03782347372361169,
        "can": 0.03782347372361169,
        "use": 0.03782347372361169,
        "llm": 0.03782347372361169,
        "endpoint": 0.03782347372361169,
        "no": 0.03782347372361169,
        "enforces": 0.03782347372361169,
        "internal": 0.03782347372361169,
        "supply": 0.03782347372361169,
        "ollama": 0.03782347372361169,
        "instance": 0.03782347372361169,
        "instead": 0.03782347372361169,
        "where": 0.03782347372361169,
        "do": 0.03782347372361169,
        "i": 0.03782347372361169,
        "report": 0.03782347372361169,
        "issues": 0.03782347372361169,
        "propose": 0.03782347372361169,
        "enhancements": 0.03782347372361169,
        "file": 0.03782347372361169,
        "an": 0.03782347372361169,
        "issue": 0.03782347372361169,
        "open": 0.03782347372361169,
        "discussion": 0.03782347372361169,
        "repository": 0.03782347372361169,
        "reference": 0.03782347372361169,
        "relevant": 0.03782347372361169,
        "sections": 0.03782347372361169,
        "spec": 0.15129389489444675,
        "md": 0.11347042117083507,
        "feature_order": 0.07564694744722338,
        "describing": 0.03782347372361169,
        "change": 0.03782347372361169,
        "license": 0.15129389489444675,
        "licensing": 0.03782347372361169,
        "information": 0.03782347372361169,
        "once": 0.03782347372361169,
        "project": 0.03782347372361169,
        "selects": 0.03782347372361169,
        "track": 0.03782347372361169,
        "candidate": 0.03782347372361169,
        "licenses": 0.03782347372361169,
        "alongside": 0.03782347372361169,
        "roadmap": 0.03782347372361169
      },
      "text": "paths or add missing files before committing generated docs. - Clear `.docgen/manifest_cache.json` and `.docgen/embeddings.json` when refactoring large parts of the repo structure to force a fresh scan. - Ensure the local model runner is reachable at a loopback URL; remote hosts are intentionally rejected by `LLMRunner` for security. <!-- docgen:end:troubleshooting --> ## FAQ <!-- docgen:begin:faq --> **Q: How is this README maintained?** A: Generate with `docgen init` and keep it current via `docgen update` (optionally in CI using the provided workflow). **Q: What happens if analyzers miss a framework or command?** A: Signals are pluggable\u2014add a custom analyzer via the `docgen.analyzers` entry-point group or extend the existing utilities under `docgen/analyzers/utils.py`. **Q: Can docgen use a remote LLM endpoint?** A: No. `LLMRunner` enforces loopback/`.internal` hosts; supply a local model runner or Ollama instance instead. **Q: Where do I report issues or propose enhancements?** A: File an issue or open a discussion in this repository and reference the relevant sections in `spec/spec.md` or `spec/feature_order.md` when describing the change. <!-- docgen:end:faq --> ## License <!-- docgen:begin:license --> Add licensing information once the project selects a license. Track candidate licenses alongside the roadmap in `spec/feature_order.md`. <!-- docgen:end:license -->",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "docs/ci/docgen-update.yml#0",
      "vector": {
        "name": 0.2773500981126145,
        "docgen": 0.1849000654084097,
        "update": 0.2311250817605121,
        "on": 0.09245003270420485,
        "push": 0.046225016352102424,
        "branches": 0.09245003270420485,
        "main": 0.13867504905630726,
        "pull_request": 0.13867504905630726,
        "jobs": 0.046225016352102424,
        "readme": 0.1849000654084097,
        "runs": 0.046225016352102424,
        "self": 0.046225016352102424,
        "hosted": 0.046225016352102424,
        "steps": 0.09245003270420485,
        "uses": 0.13867504905630726,
        "actions": 0.2311250817605121,
        "checkout": 0.046225016352102424,
        "v4": 0.09245003270420485,
        "with": 0.13867504905630726,
        "fetch": 0.046225016352102424,
        "depth": 0.046225016352102424,
        "0": 0.046225016352102424,
        "setup": 0.046225016352102424,
        "python": 0.2311250817605121,
        "v5": 0.046225016352102424,
        "version": 0.046225016352102424,
        "3": 0.046225016352102424,
        "11": 0.046225016352102424,
        "cache": 0.09245003270420485,
        "path": 0.046225016352102424,
        "pip": 0.2773500981126145,
        "key": 0.046225016352102424,
        "runner": 0.09245003270420485,
        "os": 0.09245003270420485,
        "hashfiles": 0.046225016352102424,
        "pyproject": 0.046225016352102424,
        "toml": 0.046225016352102424,
        "restore": 0.046225016352102424,
        "keys": 0.046225016352102424,
        "install": 0.13867504905630726,
        "dependencies": 0.046225016352102424,
        "run": 0.2311250817605121,
        "m": 0.13867504905630726,
        "upgrade": 0.046225016352102424,
        "e": 0.046225016352102424,
        "dev": 0.046225016352102424,
        "determine": 0.046225016352102424,
        "diff": 0.1849000654084097,
        "base": 0.2773500981126145,
        "id": 0.046225016352102424,
        "if": 0.09245003270420485,
        "github": 0.2311250817605121,
        "event_name": 0.046225016352102424,
        "then": 0.09245003270420485,
        "echo": 0.09245003270420485,
        "event": 0.046225016352102424,
        "sha": 0.046225016352102424,
        "github_output": 0.09245003270420485,
        "else": 0.046225016352102424,
        "origin": 0.046225016352102424,
        "fi": 0.09245003270420485,
        "env": 0.046225016352102424,
        "docgen_llm_base_url": 0.046225016352102424,
        "http": 0.046225016352102424,
        "localhost": 0.046225016352102424,
        "12434": 0.046225016352102424,
        "engines": 0.046225016352102424,
        "v1": 0.046225016352102424,
        "cli": 0.046225016352102424,
        "outputs": 0.046225016352102424,
        "commit": 0.09245003270420485,
        "md": 0.09245003270420485,
        "optional": 0.046225016352102424,
        "git": 0.1849000654084097,
        "status": 0.046225016352102424,
        "short": 0.046225016352102424,
        "grep": 0.046225016352102424,
        "q": 0.046225016352102424,
        "config": 0.09245003270420485,
        "user": 0.09245003270420485,
        "email": 0.046225016352102424,
        "users": 0.046225016352102424,
        "noreply": 0.046225016352102424,
        "com": 0.046225016352102424,
        "am": 0.046225016352102424,
        "docs": 0.046225016352102424,
        "via": 0.046225016352102424
      },
      "text": "name: docgen-update on: push: branches: [ main ] pull_request: branches: [ main ] jobs: update-readme: runs-on: self-hosted steps: - uses: actions/checkout@v4 with: fetch-depth: 0 - uses: actions/setup-python@v5 with: python-version: '3.11' - uses: actions/cache@v4 with: path: ~/.cache/pip key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }} restore-keys: ${{ runner.os }}-pip- - name: Install dependencies run: | python -m pip install --upgrade pip python -m pip install -e .[dev] - name: Determine diff base id: diff run: | if [ \"${{ github.event_name }}\" = \"pull_request\" ]; then echo \"base=${{ github.event.pull_request.base.sha }}\" >> \"$GITHUB_OUTPUT\" else echo \"base=origin/main\" >> \"$GITHUB_OUTPUT\" fi - name: Run docgen update env: DOCGEN_LLM_BASE_URL: http://localhost:12434/engines/v1 run: python -m docgen.cli update --diff-base ${{ steps.diff.outputs.base }} - name: Commit README.md (optional) run: | if git status --short | grep -q README.md; then git config user.name \"github-actions\" git config user.email \"github-actions@users.noreply.github.com\" git commit -am \"docs: update README via docgen\" fi",
      "metadata": {
        "path": "docs/ci/docgen-update.yml",
        "tags": [
          "docs"
        ],
        "hash": "f3bf5ea7b740892011a0aa14cb06b4bb27a4f3ea348599d85003a66032594538"
      }
    },
    {
      "id": "docs/ci/github-actions.md#0",
      "vector": {
        "github": 0.25925925925925924,
        "actions": 0.2222222222222222,
        "integration": 0.037037037037037035,
        "the": 0.1111111111111111,
        "workflow": 0.037037037037037035,
        "below": 0.037037037037037035,
        "runs": 0.07407407407407407,
        "docgen": 0.25925925925925924,
        "update": 0.2222222222222222,
        "on": 0.1111111111111111,
        "pushes": 0.037037037037037035,
        "and": 0.037037037037037035,
        "pull": 0.037037037037037035,
        "requests": 0.037037037037037035,
        "it": 0.037037037037037035,
        "assumes": 0.037037037037037035,
        "a": 0.037037037037037035,
        "self": 0.07407407407407407,
        "hosted": 0.1111111111111111,
        "runner": 0.14814814814814814,
        "or": 0.037037037037037035,
        "with": 0.14814814814814814,
        "network": 0.037037037037037035,
        "access": 0.07407407407407407,
        "to": 0.037037037037037035,
        "your": 0.037037037037037035,
        "local": 0.07407407407407407,
        "model": 0.037037037037037035,
        "runtime": 0.037037037037037035,
        "job": 0.037037037037037035,
        "skips": 0.037037037037037035,
        "early": 0.037037037037037035,
        "when": 0.037037037037037035,
        "no": 0.037037037037037035,
        "files": 0.037037037037037035,
        "match": 0.037037037037037035,
        "yml": 0.037037037037037035,
        "s": 0.037037037037037035,
        "ci": 0.037037037037037035,
        "watched_globs": 0.037037037037037035,
        "entries": 0.037037037037037035,
        "so": 0.037037037037037035,
        "that": 0.037037037037037035,
        "purely": 0.037037037037037035,
        "documentation": 0.037037037037037035,
        "only": 0.037037037037037035,
        "changes": 0.037037037037037035,
        "do": 0.037037037037037035,
        "not": 0.037037037037037035,
        "trigger": 0.037037037037037035,
        "generator": 0.037037037037037035,
        "yaml": 0.037037037037037035,
        "name": 0.3333333333333333,
        "push": 0.037037037037037035,
        "branches": 0.07407407407407407,
        "main": 0.1111111111111111,
        "pull_request": 0.1111111111111111,
        "jobs": 0.037037037037037035,
        "readme": 0.14814814814814814,
        "requires": 0.037037037037037035,
        "llm": 0.037037037037037035,
        "steps": 0.07407407407407407,
        "checkout": 0.07407407407407407,
        "repository": 0.037037037037037035,
        "uses": 0.1111111111111111,
        "v4": 0.07407407407407407,
        "fetch": 0.037037037037037035,
        "depth": 0.037037037037037035,
        "0": 0.037037037037037035,
        "set": 0.037037037037037035,
        "up": 0.037037037037037035,
        "python": 0.2222222222222222,
        "setup": 0.037037037037037035,
        "v5": 0.037037037037037035,
        "version": 0.037037037037037035,
        "3": 0.037037037037037035,
        "11": 0.037037037037037035,
        "cache": 0.1111111111111111,
        "pip": 0.25925925925925924,
        "dependencies": 0.037037037037037035,
        "path": 0.037037037037037035,
        "key": 0.037037037037037035,
        "os": 0.07407407407407407,
        "hashfiles": 0.037037037037037035,
        "pyproject": 0.037037037037037035,
        "toml": 0.037037037037037035,
        "restore": 0.037037037037037035,
        "keys": 0.037037037037037035,
        "install": 0.1111111111111111,
        "in": 0.037037037037037035,
        "editable": 0.037037037037037035,
        "mode": 0.037037037037037035,
        "run": 0.18518518518518517,
        "m": 0.1111111111111111,
        "upgrade": 0.037037037037037035,
        "e": 0.037037037037037035,
        "dev": 0.037037037037037035,
        "determine": 0.037037037037037035,
        "diff": 0.14814814814814814,
        "base": 0.2222222222222222,
        "id": 0.037037037037037035,
        "if": 0.1111111111111111,
        "event_name": 0.037037037037037035,
        "then": 0.07407407407407407,
        "echo": 0.07407407407407407,
        "event": 0.037037037037037035,
        "sha": 0.037037037037037035,
        "github_output": 0.07407407407407407,
        "else": 0.037037037037037035,
        "origin": 0.037037037037037035,
        "fi": 0.07407407407407407,
        "env": 0.037037037037037035,
        "docgen_llm_base_url": 0.037037037037037035,
        "http": 0.037037037037037035,
        "localhost": 0.037037037037037035,
        "12434": 0.037037037037037035,
        "engines": 0.037037037037037035,
        "v1": 0.037037037037037035,
        "cli": 0.037037037037037035,
        "outputs": 0.037037037037037035,
        "commit": 0.07407407407407407,
        "updates": 0.037037037037037035,
        "any": 0.037037037037037035,
        "git": 0.14814814814814814,
        "status": 0.037037037037037035,
        "short": 0.037037037037037035,
        "grep": 0.037037037037037035,
        "q": 0.037037037037037035,
        "md": 0.037037037037037035,
        "config": 0.07407407407407407,
        "user": 0.07407407407407407,
        "email": 0.037037037037037035,
        "users": 0.037037037037037035,
        "noreply": 0.037037037037037035,
        "com": 0.037037037037037035,
        "am": 0.037037037037037035,
        "docs": 0.037037037037037035,
        "via": 0.037037037037037035
      },
      "text": "# GitHub Actions Integration The workflow below runs `docgen update` on pushes and pull requests. It assumes a self-hosted runner (or GitHub-hosted runner with network access to your local model runtime). The job skips early when no files match `.docgen.yml`'s `ci.watched_globs` entries so that purely documentation-only changes do not trigger the generator. ```yaml name: docgen-update on: push: branches: [ main ] pull_request: branches: [ main ] jobs: update-readme: runs-on: self-hosted # requires local LLM access steps: - name: Checkout repository uses: actions/checkout@v4 with: fetch-depth: 0 - name: Set up Python uses: actions/setup-python@v5 with: python-version: '3.11' - name: Cache pip dependencies uses: actions/cache@v4 with: path: ~/.cache/pip key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }} restore-keys: ${{ runner.os }}-pip- - name: Install docgen in editable mode run: | python -m pip install --upgrade pip python -m pip install -e .[dev] - name: Determine diff base id: diff run: | if [ \"${{ github.event_name }}\" = \"pull_request\" ]; then echo \"base=${{ github.event.pull_request.base.sha }}\" >> \"$GITHUB_OUTPUT\" else echo \"base=origin/main\" >> \"$GITHUB_OUTPUT\" fi - name: Run docgen update env: DOCGEN_LLM_BASE_URL: http://localhost:12434/engines/v1 run: | python -m docgen.cli update --diff-base ${{ steps.diff.outputs.base }} - name: Commit README updates (if any) run: | if git status --short | grep -q README.md; then git config user.name \"github-actions\" git config user.email \"github-actions@users.noreply.github.com\" git commit -am \"docs: update README via docgen\" fi -",
      "metadata": {
        "path": "docs/ci/github-actions.md",
        "tags": [
          "docs"
        ],
        "hash": "518fe87441e7f08aadb0ed175d54a5ce3c227af17677678096af6df070190e59"
      }
    },
    {
      "id": "docs/ci/github-actions.md#1",
      "vector": {
        "diff": 0.1363988678940947,
        "base": 0.1363988678940947,
        "steps": 0.06819943394704735,
        "outputs": 0.06819943394704735,
        "name": 0.2727977357881894,
        "commit": 0.1363988678940947,
        "readme": 0.4091966036822841,
        "updates": 0.06819943394704735,
        "if": 0.20459830184114206,
        "any": 0.06819943394704735,
        "run": 0.06819943394704735,
        "git": 0.2727977357881894,
        "status": 0.06819943394704735,
        "short": 0.06819943394704735,
        "grep": 0.06819943394704735,
        "q": 0.06819943394704735,
        "md": 0.1363988678940947,
        "then": 0.06819943394704735,
        "config": 0.1363988678940947,
        "user": 0.1363988678940947,
        "github": 0.2727977357881894,
        "actions": 0.20459830184114206,
        "email": 0.06819943394704735,
        "users": 0.06819943394704735,
        "noreply": 0.06819943394704735,
        "com": 0.06819943394704735,
        "am": 0.06819943394704735,
        "docs": 0.06819943394704735,
        "update": 0.06819943394704735,
        "via": 0.06819943394704735,
        "docgen": 0.06819943394704735,
        "fi": 0.06819943394704735,
        "upload": 0.1363988678940947,
        "artifact": 0.1363988678940947,
        "success": 0.06819943394704735,
        "uses": 0.06819943394704735,
        "v4": 0.06819943394704735,
        "with": 0.1363988678940947,
        "generated": 0.06819943394704735,
        "path": 0.06819943394704735,
        "note": 0.06819943394704735,
        "the": 0.20459830184114206,
        "workflow": 0.06819943394704735,
        "relies": 0.06819943394704735,
        "on": 0.06819943394704735,
        "docgen_llm_base_url": 0.06819943394704735,
        "pointing": 0.06819943394704735,
        "to": 0.20459830184114206,
        "a": 0.06819943394704735,
        "local": 0.06819943394704735,
        "or": 0.1363988678940947,
        "private": 0.1363988678940947,
        "inference": 0.06819943394704735,
        "endpoint": 0.06819943394704735,
        "for": 0.06819943394704735,
        "hosted": 0.06819943394704735,
        "runners": 0.06819943394704735,
        "you": 0.06819943394704735,
        "will": 0.06819943394704735,
        "need": 0.06819943394704735,
        "expose": 0.06819943394704735,
        "runner": 0.06819943394704735,
        "within": 0.06819943394704735,
        "your": 0.06819943394704735,
        "network": 0.06819943394704735,
        "switch": 0.06819943394704735,
        "ollama": 0.06819943394704735,
        "cli": 0.06819943394704735,
        "appropriate": 0.06819943394704735,
        "caching": 0.06819943394704735
      },
      "text": "--diff-base ${{ steps.diff.outputs.base }} - name: Commit README updates (if any) run: | if git status --short | grep -q README.md; then git config user.name \"github-actions\" git config user.email \"github-actions@users.noreply.github.com\" git commit -am \"docs: update README via docgen\" fi - name: Upload README artifact if: success() uses: actions/upload-artifact@v4 with: name: generated-readme path: README.md ``` > **Note:** the workflow relies on `DOCGEN_LLM_BASE_URL` pointing to a local or > private inference endpoint. For GitHub-hosted runners you will need to expose > the runner within your private network or switch to the `ollama` CLI with > appropriate caching. ```",
      "metadata": {
        "path": "docs/ci/github-actions.md",
        "tags": [
          "docs"
        ],
        "hash": "518fe87441e7f08aadb0ed175d54a5ce3c227af17677678096af6df070190e59"
      }
    },
    {
      "id": "spec/feature_checklist.md#0",
      "vector": {
        "intelligent": 0.03809696588797296,
        "readme": 0.1142908976639189,
        "generator": 0.03809696588797296,
        "feature": 0.03809696588797296,
        "checklist": 0.03809696588797296,
        "status": 0.03809696588797296,
        "legend": 0.03809696588797296,
        "not": 0.03809696588797296,
        "started": 0.03809696588797296,
        "in": 0.03809696588797296,
        "progress": 0.03809696588797296,
        "done": 0.03809696588797296,
        "scope": 0.03809696588797296,
        "tags": 0.03809696588797296,
        "mvp": 0.4571635906556756,
        "required": 0.03809696588797296,
        "for": 0.1142908976639189,
        "proof": 0.03809696588797296,
        "of": 0.07619393177594593,
        "concept": 0.03809696588797296,
        "next": 0.19048482943986483,
        "nice": 0.03809696588797296,
        "to": 0.1142908976639189,
        "have": 0.03809696588797296,
        "soon": 0.03809696588797296,
        "stretch": 0.1142908976639189,
        "later": 0.03809696588797296,
        "1": 0.07619393177594593,
        "core": 0.03809696588797296,
        "workflows": 0.03809696588797296,
        "x": 0.6095514542075674,
        "docgen": 0.15238786355189185,
        "init": 0.03809696588797296,
        "initialize": 0.03809696588797296,
        "repos": 0.03809696588797296,
        "without": 0.07619393177594593,
        "docs": 0.1142908976639189,
        "update": 0.03809696588797296,
        "detect": 0.03809696588797296,
        "changes": 0.03809696588797296,
        "on": 0.03809696588797296,
        "commit": 0.03809696588797296,
        "pr": 0.03809696588797296,
        "and": 0.03809696588797296,
        "patch": 0.03809696588797296,
        "affected": 0.03809696588797296,
        "sections": 0.03809696588797296,
        "regenerate": 0.03809696588797296,
        "manual": 0.03809696588797296,
        "full": 0.03809696588797296,
        "partial": 0.03809696588797296,
        "regeneration": 0.03809696588797296,
        "dry": 0.07619393177594593,
        "run": 0.07619393177594593,
        "mode": 0.07619393177594593,
        "preview": 0.03809696588797296,
        "diffs": 0.03809696588797296,
        "writing": 0.03809696588797296,
        "service": 0.03809696588797296,
        "fastapi": 0.07619393177594593,
        "endpoints": 0.03809696588797296,
        "ci": 0.07619393177594593,
        "bots": 0.03809696588797296,
        "2": 0.03809696588797296,
        "repository": 0.03809696588797296,
        "scanning": 0.03809696588797296,
        "indexing": 0.03809696588797296,
        "walk": 0.03809696588797296,
        "filesystem": 0.03809696588797296,
        "with": 0.03809696588797296,
        "ignore": 0.03809696588797296,
        "rules": 0.03809696588797296,
        "gitignore": 0.03809696588797296,
        "yml": 0.03809696588797296,
        "build": 0.07619393177594593,
        "normalized": 0.03809696588797296,
        "manifest": 0.07619393177594593,
        "files": 0.07619393177594593,
        "roles": 0.03809696588797296,
        "src": 0.03809696588797296,
        "test": 0.03809696588797296,
        "config": 0.07619393177594593,
        "infra": 0.03809696588797296,
        "hash": 0.03809696588797296,
        "cache": 0.03809696588797296,
        "file": 0.03809696588797296,
        "metadata": 0.03809696588797296,
        "speed": 0.03809696588797296,
        "subsequent": 0.03809696588797296,
        "runs": 0.03809696588797296,
        "entrypoint": 0.07619393177594593,
        "detection": 0.07619393177594593,
        "e": 0.03809696588797296,
        "g": 0.03809696588797296,
        "main": 0.03809696588797296,
        "springbootapplication": 0.03809696588797296,
        "app": 0.03809696588797296,
        "monorepo": 0.07619393177594593,
        "module": 0.03809696588797296,
        "3": 0.03809696588797296,
        "analyzers": 0.19048482943986483,
        "plugin": 0.03809696588797296,
        "based": 0.03809696588797296,
        "language": 0.03809696588797296,
        "python": 0.03809696588797296,
        "java": 0.03809696588797296,
        "node": 0.03809696588797296,
        "js": 0.03809696588797296,
        "tier": 0.03809696588797296,
        "poetry": 0.03809696588797296,
        "setuptools": 0.03809696588797296,
        "maven": 0.03809696588797296,
        "gradle": 0.03809696588797296,
        "npm": 0.03809696588797296,
        "pnpm": 0.03809696588797296,
        "yarn": 0.03809696588797296,
        "dependency": 0.03809696588797296,
        "from": 0.03809696588797296,
        "pattern": 0.03809696588797296,
        "docker": 0.03809696588797296,
        "k8s": 0.03809696588797296,
        "layout": 0.03809696588797296,
        "tree": 0.03809696588797296,
        "sitter": 0.03809696588797296,
        "powered": 0.03809696588797296,
        "symbol": 0.03809696588797296,
        "extraction": 0.03809696588797296,
        "flagged": 0.03809696588797296,
        "4": 0.03809696588797296,
        "knowledge": 0.03809696588797296,
        "store": 0.03809696588797296,
        "rag": 0.03809696588797296,
        "local": 0.03809696588797296,
        "embedding": 0.03809696588797296,
        "model": 0.03809696588797296,
        "chunking": 0.03809696588797296,
        "strategy": 0.03809696588797296,
        "index": 0.03809696588797296,
        "top": 0.03809696588797296,
        "n": 0.03809696588797296,
        "source": 0.03809696588797296,
        "headers": 0.03809696588797296,
        "comments": 0.03809696588797296
      },
      "text": "# Intelligent README Generator \u2014 Feature Checklist > Status legend: \u2610 Not started \u00b7 \u25d0 In progress \u00b7 \u2714 Done > Scope tags: **[MVP]** required for proof\u2011of\u2011concept, **[NEXT]** nice\u2011to\u2011have soon, **[STRETCH]** later ## 1) Core Workflows - [x] **docgen init** \u2014 Initialize README for repos without docs **[MVP]** - [x] **docgen update** \u2014 Detect changes on commit/PR and patch affected sections **[MVP]** - [ ] **docgen regenerate** \u2014 Manual full/partial regeneration **[MVP]** - [x] Dry\u2011run mode (`--dry-run`) to preview diffs without writing **[NEXT]** - [x] Service mode (FastAPI) endpoints for CI/bots **[STRETCH]** ## 2) Repository Scanning & Indexing - [x] Walk filesystem with ignore rules (`.gitignore`, `.docgen.yml`) **[MVP]** - [x] Build normalized manifest of files, roles (src/test/docs/config/infra) **[MVP]** - [x] Hash & cache file metadata to speed subsequent runs **[MVP]** - [x] Entrypoint detection (e.g., `main()`, `@SpringBootApplication`, FastAPI app) **[NEXT]** - [x] Monorepo module detection **[NEXT]** ## 3) Analyzers (Plugin\u2011based) - [x] Language analyzers: Python, Java, Node.js (Tier\u20111) **[MVP]** - [x] Build analyzers: Poetry/Setuptools, Maven/Gradle, npm/pnpm/yarn **[MVP]** - [x] Dependency analyzers from manifest files **[MVP]** - [x] Pattern analyzers: Docker/K8s, CI config, monorepo layout **[NEXT]** - [x] Tree\u2011sitter powered symbol/entrypoint extraction (flagged) **[STRETCH]** ## 4) Knowledge Store (RAG) - [x] Local embedding model + chunking strategy **[MVP]** - [x] Index `README`, `/docs`, top N source headers & comments **[MVP]** -",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_checklist.md#1",
      "vector": {
        "ci": 0.03943615033625495,
        "config": 0.0788723006725099,
        "monorepo": 0.03943615033625495,
        "layout": 0.03943615033625495,
        "next": 0.3154892026900396,
        "x": 0.6309784053800792,
        "tree": 0.03943615033625495,
        "sitter": 0.03943615033625495,
        "powered": 0.03943615033625495,
        "symbol": 0.03943615033625495,
        "entrypoint": 0.03943615033625495,
        "extraction": 0.03943615033625495,
        "flagged": 0.03943615033625495,
        "stretch": 0.0788723006725099,
        "4": 0.03943615033625495,
        "knowledge": 0.0788723006725099,
        "store": 0.03943615033625495,
        "rag": 0.03943615033625495,
        "local": 0.0788723006725099,
        "embedding": 0.03943615033625495,
        "model": 0.0788723006725099,
        "chunking": 0.03943615033625495,
        "strategy": 0.03943615033625495,
        "mvp": 0.3943615033625495,
        "index": 0.03943615033625495,
        "readme": 0.03943615033625495,
        "docs": 0.0788723006725099,
        "top": 0.0788723006725099,
        "n": 0.03943615033625495,
        "source": 0.03943615033625495,
        "headers": 0.03943615033625495,
        "comments": 0.03943615033625495,
        "section": 0.19718075168127475,
        "scoped": 0.03943615033625495,
        "retrieval": 0.03943615033625495,
        "k": 0.03943615033625495,
        "per": 0.0788723006725099,
        "lightweight": 0.03943615033625495,
        "graph": 0.03943615033625495,
        "of": 0.03943615033625495,
        "modules": 0.03943615033625495,
        "services": 0.03943615033625495,
        "signals": 0.03943615033625495,
        "5": 0.03943615033625495,
        "prompting": 0.03943615033625495,
        "templates": 0.11830845100876484,
        "jinja2": 0.03943615033625495,
        "intro": 0.03943615033625495,
        "features": 0.03943615033625495,
        "architecture": 0.0788723006725099,
        "quickstart": 0.03943615033625495,
        "build": 0.0788723006725099,
        "test": 0.03943615033625495,
        "deployment": 0.03943615033625495,
        "troubleshooting": 0.03943615033625495,
        "faq": 0.03943615033625495,
        "license": 0.0788723006725099,
        "guardrailed": 0.03943615033625495,
        "system": 0.03943615033625495,
        "prompt": 0.03943615033625495,
        "no": 0.03943615033625495,
        "speculation": 0.03943615033625495,
        "cite": 0.03943615033625495,
        "repo": 0.03943615033625495,
        "facts": 0.03943615033625495,
        "only": 0.03943615033625495,
        "token": 0.03943615033625495,
        "budgeting": 0.03943615033625495,
        "streaming": 0.03943615033625495,
        "by": 0.03943615033625495,
        "generation": 0.03943615033625495,
        "template": 0.03943615033625495,
        "override": 0.03943615033625495,
        "mechanism": 0.03943615033625495,
        "j2": 0.03943615033625495,
        "style": 0.03943615033625495,
        "presets": 0.03943615033625495,
        "concise": 0.03943615033625495,
        "vs": 0.03943615033625495,
        "comprehensive": 0.03943615033625495,
        "mermaid": 0.03943615033625495,
        "js": 0.03943615033625495,
        "diagrams": 0.03943615033625495,
        "for": 0.0788723006725099,
        "flow": 0.03943615033625495,
        "sections": 0.0788723006725099,
        "where": 0.03943615033625495,
        "appropriate": 0.03943615033625495,
        "6": 0.03943615033625495,
        "llm": 0.03943615033625495,
        "runner": 0.0788723006725099,
        "http": 0.03943615033625495,
        "adapter": 0.0788723006725099,
        "host": 0.03943615033625495,
        "container": 0.03943615033625495,
        "defaults": 0.0788723006725099,
        "env": 0.03943615033625495,
        "api": 0.03943615033625495,
        "key": 0.03943615033625495,
        "overrides": 0.03943615033625495,
        "llama": 0.03943615033625495,
        "cpp": 0.03943615033625495,
        "structured": 0.03943615033625495,
        "outputs": 0.03943615033625495,
        "tool": 0.03943615033625495,
        "use": 0.03943615033625495,
        "compatibility": 0.03943615033625495,
        "7": 0.03943615033625495,
        "post": 0.03943615033625495,
        "processing": 0.03943615033625495,
        "markdown": 0.03943615033625495,
        "lint": 0.03943615033625495,
        "heading": 0.03943615033625495,
        "hierarchy": 0.03943615033625495,
        "code": 0.03943615033625495,
        "fences": 0.03943615033625495,
        "line": 0.03943615033625495,
        "length": 0.03943615033625495,
        "auto": 0.03943615033625495,
        "toc": 0.03943615033625495,
        "level": 0.03943615033625495,
        "3": 0.03943615033625495,
        "badges": 0.03943615033625495,
        "coverage": 0.03943615033625495,
        "with": 0.03943615033625495,
        "safe": 0.03943615033625495,
        "link": 0.03943615033625495,
        "validator": 0.03943615033625495,
        "relative": 0.03943615033625495,
        "absolute": 0.03943615033625495,
        "managed": 0.03943615033625495,
        "markers": 0.03943615033625495,
        "idempotent": 0.03943615033625495,
        "patching": 0.03943615033625495,
        "docgen": 0.03943615033625495,
        "begin": 0.03943615033625495,
        "end": 0.03943615033625495,
        "8": 0.03943615033625495,
        "git": 0.03943615033625495,
        "integration": 0.03943615033625495,
        "diff": 0.03943615033625495,
        "detection": 0.03943615033625495,
        "map": 0.03943615033625495,
        "changed": 0.03943615033625495,
        "files": 0.03943615033625495,
        "impacted": 0.03943615033625495
      },
      "text": "CI config, monorepo layout **[NEXT]** - [x] Tree\u2011sitter powered symbol/entrypoint extraction (flagged) **[STRETCH]** ## 4) Knowledge Store (RAG) - [x] Local embedding model + chunking strategy **[MVP]** - [x] Index `README`, `/docs`, top N source headers & comments **[MVP]** - [x] Section\u2011scoped retrieval (top\u2011k per section) **[MVP]** - [ ] Lightweight knowledge graph of modules/services/signals **[NEXT]** ## 5) Prompting & Templates - [x] Jinja2 templates per section (intro, features, architecture, quickstart, config, build/test, deployment, troubleshooting, FAQ, license) **[MVP]** - [ ] Guardrailed system prompt (\u201cno speculation; cite repo facts only\u201d) **[MVP]** - [ ] Token budgeting & streaming section-by-section generation **[MVP]** - [x] Template override mechanism (`docs/templates/*.j2`) **[NEXT]** - [x] Style presets: concise vs comprehensive **[NEXT]** - [x] Mermaid.js diagrams for architecture/flow sections where appropriate **[NEXT]** ## 6) Local LLM Runner - [x] Model Runner HTTP adapter (host/container defaults, env/API key overrides) **[MVP]** - [x] llama.cpp adapter **[NEXT]** - [ ] Structured outputs / tool\u2011use compatibility **[STRETCH]** ## 7) Post\u2011Processing - [x] Markdown lint: heading hierarchy, code fences, line length **[MVP]** - [x] Auto ToC (\u2264 level 3) **[MVP]** - [x] Badges (build, coverage, license) with safe defaults **[NEXT]** - [x] Link validator (relative/absolute) **[NEXT]** - [x] Managed markers for idempotent patching (`<!-- docgen:begin:end -->`) **[MVP]** ## 8) Git Integration - [x] Diff detection (map changed files \u2192 impacted sections)",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_checklist.md#2",
      "vector": {
        "x": 0.6172133998483676,
        "badges": 0.03857583749052298,
        "build": 0.07715167498104596,
        "coverage": 0.03857583749052298,
        "license": 0.03857583749052298,
        "with": 0.07715167498104596,
        "safe": 0.03857583749052298,
        "defaults": 0.03857583749052298,
        "next": 0.3086066999241838,
        "link": 0.03857583749052298,
        "validator": 0.03857583749052298,
        "relative": 0.03857583749052298,
        "absolute": 0.03857583749052298,
        "managed": 0.03857583749052298,
        "markers": 0.03857583749052298,
        "for": 0.11572751247156893,
        "idempotent": 0.03857583749052298,
        "patching": 0.03857583749052298,
        "docgen": 0.07715167498104596,
        "begin": 0.03857583749052298,
        "end": 0.03857583749052298,
        "mvp": 0.4629100498862757,
        "8": 0.03857583749052298,
        "git": 0.03857583749052298,
        "integration": 0.07715167498104596,
        "diff": 0.03857583749052298,
        "detection": 0.03857583749052298,
        "map": 0.03857583749052298,
        "changed": 0.03857583749052298,
        "files": 0.03857583749052298,
        "impacted": 0.03857583749052298,
        "sections": 0.03857583749052298,
        "branch": 0.03857583749052298,
        "pr": 0.07715167498104596,
        "creation": 0.03857583749052298,
        "summary": 0.03857583749052298,
        "of": 0.03857583749052298,
        "readme": 0.11572751247156893,
        "deltas": 0.03857583749052298,
        "commit": 0.03857583749052298,
        "mode": 0.03857583749052298,
        "init": 0.03857583749052298,
        "or": 0.03857583749052298,
        "small": 0.03857583749052298,
        "changes": 0.07715167498104596,
        "configurable": 0.03857583749052298,
        "prevent": 0.03857583749052298,
        "loops": 0.03857583749052298,
        "on": 0.07715167498104596,
        "only": 0.07715167498104596,
        "9": 0.03857583749052298,
        "configuration": 0.03857583749052298,
        "parse": 0.03857583749052298,
        "yml": 0.03857583749052298,
        "llm": 0.03857583749052298,
        "style": 0.03857583749052298,
        "analyzers": 0.03857583749052298,
        "publish": 0.03857583749052298,
        "path": 0.03857583749052298,
        "exclusions": 0.03857583749052298,
        "watched_globs": 0.03857583749052298,
        "ci": 0.11572751247156893,
        "triggers": 0.03857583749052298,
        "per": 0.07715167498104596,
        "section": 0.03857583749052298,
        "off": 0.03857583749052298,
        "toggles": 0.03857583749052298,
        "and": 0.11572751247156893,
        "titles": 0.03857583749052298,
        "10": 0.03857583749052298,
        "github": 0.03857583749052298,
        "actions": 0.03857583749052298,
        "example": 0.03857583749052298,
        "workflow": 0.03857583749052298,
        "gitlab": 0.03857583749052298,
        "bitbucket": 0.03857583749052298,
        "pipelines": 0.03857583749052298,
        "samples": 0.03857583749052298,
        "labeling": 0.03857583749052298,
        "docs": 0.03857583749052298,
        "auto": 0.03857583749052298,
        "update": 0.03857583749052298,
        "behavior": 0.03857583749052298,
        "11": 0.03857583749052298,
        "security": 0.03857583749052298,
        "privacy": 0.03857583749052298,
        "local": 0.03857583749052298,
        "models": 0.03857583749052298,
        "never": 0.03857583749052298,
        "exfiltrate": 0.03857583749052298,
        "code": 0.03857583749052298,
        "respect": 0.03857583749052298,
        "gitignore": 0.03857583749052298,
        "exclude": 0.03857583749052298,
        "large": 0.03857583749052298,
        "binaries": 0.03857583749052298,
        "secrets": 0.03857583749052298,
        "optional": 0.03857583749052298,
        "simple": 0.03857583749052298,
        "secret": 0.03857583749052298,
        "scanner": 0.03857583749052298,
        "gate": 0.03857583749052298,
        "12": 0.03857583749052298,
        "multi": 0.03857583749052298,
        "language": 0.03857583749052298,
        "project": 0.03857583749052298,
        "types": 0.03857583749052298,
        "tier": 0.07715167498104596,
        "1": 0.03857583749052298,
        "python": 0.03857583749052298,
        "poetry": 0.03857583749052298,
        "setuptools": 0.03857583749052298,
        "java": 0.03857583749052298,
        "maven": 0.03857583749052298,
        "gradle": 0.03857583749052298,
        "spring": 0.03857583749052298,
        "boot": 0.03857583749052298,
        "node": 0.03857583749052298,
        "js": 0.03857583749052298,
        "npm": 0.03857583749052298,
        "pnpm": 0.03857583749052298,
        "express": 0.03857583749052298,
        "2": 0.03857583749052298,
        "go": 0.03857583749052298,
        "rust": 0.03857583749052298,
        "ruby": 0.03857583749052298,
        "php": 0.03857583749052298,
        "stretch": 0.03857583749052298,
        "framework": 0.03857583749052298,
        "aware": 0.03857583749052298,
        "quickstart": 0.03857583749052298,
        "commands": 0.03857583749052298,
        "system": 0.03857583749052298,
        "13": 0.03857583749052298,
        "quality": 0.03857583749052298,
        "gates": 0.03857583749052298,
        "evaluation": 0.03857583749052298,
        "command": 0.03857583749052298,
        "validation": 0.03857583749052298,
        "existence": 0.03857583749052298,
        "checks": 0.07715167498104596,
        "no": 0.03857583749052298,
        "hallucination": 0.03857583749052298,
        "reject": 0.03857583749052298,
        "facts": 0.03857583749052298,
        "not": 0.03857583749052298
      },
      "text": "[x] Badges (build, coverage, license) with safe defaults **[NEXT]** - [x] Link validator (relative/absolute) **[NEXT]** - [x] Managed markers for idempotent patching (`<!-- docgen:begin:end -->`) **[MVP]** ## 8) Git Integration - [x] Diff detection (map changed files \u2192 impacted sections) **[MVP]** - [x] Branch + PR creation with summary of README deltas **[MVP]** - [x] Commit mode for init or small changes (configurable) **[NEXT]** - [x] Prevent loops on README\u2011only changes **[MVP]** ## 9) Configuration - [x] Parse `.docgen.yml` (LLM, readme style, analyzers, publish) **[MVP]** - [x] Path exclusions & `watched_globs` for CI triggers **[MVP]** - [ ] Per-section on/off toggles and titles **[NEXT]** ## 10) CI Integration - [x] GitHub Actions example workflow **[MVP]** - [ ] GitLab CI and Bitbucket Pipelines samples **[NEXT]** - [x] Labeling (`docs:auto`) and PR update behavior **[NEXT]** ## 11) Security & Privacy - [x] Local-only models; never exfiltrate code **[MVP]** - [ ] Respect `.gitignore`; exclude large binaries/secrets **[MVP]** - [ ] Optional simple secret scanner gate **[NEXT]** ## 12) Multi\u2011Language & Project Types - [x] Tier\u20111: Python (Poetry/Setuptools), Java (Maven/Gradle/Spring Boot), Node.js (npm/pnpm/Express/Next) **[MVP]** - [ ] Tier\u20112: Go, Rust, Ruby, PHP **[STRETCH]** - [x] Framework\u2011aware quickstart commands per build system **[MVP]** ## 13) Quality Gates & Evaluation - [x] Command validation (existence checks) **[MVP]** - [x] No-hallucination checks: reject facts not",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_checklist.md#3",
      "vector": {
        "npm": 0.052999894000318,
        "pnpm": 0.052999894000318,
        "express": 0.052999894000318,
        "next": 0.211999576001272,
        "mvp": 0.476999046002862,
        "tier": 0.052999894000318,
        "2": 0.052999894000318,
        "go": 0.052999894000318,
        "rust": 0.052999894000318,
        "ruby": 0.052999894000318,
        "php": 0.052999894000318,
        "stretch": 0.052999894000318,
        "x": 0.5829988340034981,
        "framework": 0.052999894000318,
        "aware": 0.052999894000318,
        "quickstart": 0.052999894000318,
        "commands": 0.052999894000318,
        "per": 0.105999788000636,
        "build": 0.052999894000318,
        "system": 0.052999894000318,
        "13": 0.052999894000318,
        "quality": 0.052999894000318,
        "gates": 0.052999894000318,
        "evaluation": 0.052999894000318,
        "command": 0.052999894000318,
        "validation": 0.052999894000318,
        "existence": 0.052999894000318,
        "checks": 0.105999788000636,
        "no": 0.052999894000318,
        "hallucination": 0.052999894000318,
        "reject": 0.052999894000318,
        "facts": 0.052999894000318,
        "not": 0.052999894000318,
        "in": 0.052999894000318,
        "signals": 0.052999894000318,
        "rag": 0.105999788000636,
        "readme": 0.105999788000636,
        "scorecard": 0.052999894000318,
        "coverage": 0.052999894000318,
        "buildability": 0.052999894000318,
        "link": 0.052999894000318,
        "validity": 0.052999894000318,
        "diff": 0.052999894000318,
        "alignment": 0.052999894000318,
        "lint": 0.105999788000636,
        "14": 0.052999894000318,
        "performance": 0.052999894000318,
        "caching": 0.052999894000318,
        "persist": 0.052999894000318,
        "analyzer": 0.105999788000636,
        "outputs": 0.052999894000318,
        "embeddings": 0.052999894000318,
        "under": 0.052999894000318,
        "docgen": 0.052999894000318,
        "incremental": 0.052999894000318,
        "refresh": 0.052999894000318,
        "changed": 0.052999894000318,
        "files": 0.052999894000318,
        "only": 0.052999894000318,
        "15": 0.052999894000318,
        "error": 0.052999894000318,
        "handling": 0.052999894000318,
        "ux": 0.052999894000318,
        "fail": 0.052999894000318,
        "safe": 0.052999894000318,
        "stub": 0.052999894000318,
        "generation": 0.052999894000318,
        "when": 0.052999894000318,
        "evidence": 0.052999894000318,
        "is": 0.052999894000318,
        "insufficient": 0.052999894000318,
        "clear": 0.052999894000318,
        "run": 0.052999894000318,
        "logs": 0.052999894000318,
        "pr": 0.052999894000318,
        "body": 0.052999894000318,
        "with": 0.052999894000318,
        "rationale": 0.052999894000318,
        "sections": 0.052999894000318,
        "updated": 0.052999894000318,
        "because": 0.052999894000318,
        "helpful": 0.052999894000318,
        "cli": 0.052999894000318,
        "errors": 0.052999894000318,
        "and": 0.105999788000636,
        "verbose": 0.052999894000318,
        "flag": 0.052999894000318,
        "works": 0.052999894000318,
        "pre": 0.052999894000318,
        "post": 0.052999894000318,
        "subcommand": 0.052999894000318,
        "16": 0.052999894000318,
        "extensibility": 0.052999894000318,
        "abc": 0.052999894000318,
        "plugin": 0.052999894000318,
        "discovery": 0.052999894000318,
        "template": 0.052999894000318,
        "packs": 0.052999894000318,
        "org": 0.052999894000318,
        "style": 0.105999788000636,
        "definition": 0.052999894000318,
        "of": 0.052999894000318,
        "done": 0.052999894000318,
        "section": 0.052999894000318,
        "passing": 0.052999894000318,
        "unit": 0.052999894000318,
        "integration": 0.052999894000318,
        "tests": 0.052999894000318,
        "for": 0.052999894000318,
        "core": 0.052999894000318,
        "logic": 0.052999894000318,
        "golden": 0.052999894000318,
        "regression": 0.052999894000318,
        "test": 0.052999894000318,
        "s": 0.052999894000318,
        "meets": 0.052999894000318,
        "requirements": 0.052999894000318
      },
      "text": "(npm/pnpm/Express/Next) **[MVP]** - [ ] Tier\u20112: Go, Rust, Ruby, PHP **[STRETCH]** - [x] Framework\u2011aware quickstart commands per build system **[MVP]** ## 13) Quality Gates & Evaluation - [x] Command validation (existence checks) **[MVP]** - [x] No-hallucination checks: reject facts not in signals/RAG **[MVP]** - [x] README scorecard (coverage, buildability, link validity, diff alignment, lint) **[NEXT]** ## 14) Performance & Caching - [x] Persist analyzer outputs & embeddings under `.docgen/` **[MVP]** - [x] Incremental RAG refresh (changed files only) **[NEXT]** ## 15) Error Handling & UX - [x] Fail-safe stub generation when evidence is insufficient **[MVP]** - [x] Clear run logs + PR body with rationale (\u201csections updated because\u2026\u201d) **[MVP]** - [x] Helpful CLI errors and `--verbose` flag (works pre/post subcommand) **[MVP]** ## 16) Extensibility - [x] Analyzer ABC and plugin discovery **[MVP]** - [x] Template packs (org\u2011style) **[NEXT]** --- ### Definition of Done (per section) - [ ] Passing unit & integration tests for core logic - [ ] Golden README regression test(s) - [ ] Meets lint/style requirements",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_order.md#0",
      "vector": {
        "docgen": 0.25491557319725244,
        "development": 0.042485928866208736,
        "roadmap": 0.042485928866208736,
        "phase": 0.12745778659862622,
        "0": 0.042485928866208736,
        "bootstrap": 0.042485928866208736,
        "the": 0.042485928866208736,
        "skeleton": 0.08497185773241747,
        "1": 0.3398874309296699,
        "project": 0.042485928866208736,
        "cli": 0.042485928866208736,
        "config": 0.08497185773241747,
        "loader": 0.042485928866208736,
        "yml": 0.042485928866208736,
        "models": 0.042485928866208736,
        "done": 0.3823733597958786,
        "covers": 0.3823733597958786,
        "commands": 0.042485928866208736,
        "scaffolding": 0.042485928866208736,
        "9": 0.042485928866208736,
        "parse": 0.042485928866208736,
        "16": 0.08497185773241747,
        "analyzer": 0.08497185773241747,
        "abc": 0.08497185773241747,
        "2": 0.2124296443310437,
        "plugin": 0.08497185773241747,
        "discovery": 0.08497185773241747,
        "init": 0.16994371546483494,
        "happy": 0.042485928866208736,
        "path": 0.042485928866208736,
        "single": 0.042485928866208736,
        "repo": 0.12745778659862622,
        "local": 0.08497185773241747,
        "scanner": 0.042485928866208736,
        "manifest": 0.08497185773241747,
        "roles": 0.042485928866208736,
        "hashing": 0.042485928866208736,
        "ignores": 0.08497185773241747,
        "walk": 0.042485928866208736,
        "fs": 0.042485928866208736,
        "cache": 0.042485928866208736,
        "tier": 0.042485928866208736,
        "analyzers": 0.12745778659862622,
        "python": 0.042485928866208736,
        "java": 0.042485928866208736,
        "node": 0.042485928866208736,
        "build": 0.08497185773241747,
        "dependency": 0.042485928866208736,
        "3": 0.08497185773241747,
        "language": 0.042485928866208736,
        "deps": 0.042485928866208736,
        "templates": 0.12745778659862622,
        "prompt": 0.12745778659862622,
        "builder": 0.08497185773241747,
        "section": 0.12745778659862622,
        "by": 0.042485928866208736,
        "guardrailed": 0.042485928866208736,
        "system": 0.042485928866208736,
        "partial": 0.042485928866208736,
        "guardrails": 0.08497185773241747,
        "unused": 0.042485928866208736,
        "5": 0.08497185773241747,
        "jinja2": 0.042485928866208736,
        "token": 0.042485928866208736,
        "budget": 0.042485928866208736,
        "4": 0.042485928866208736,
        "llm": 0.042485928866208736,
        "runner": 0.042485928866208736,
        "ollama": 0.08497185773241747,
        "adapter": 0.042485928866208736,
        "6": 0.08497185773241747,
        "post": 0.042485928866208736,
        "processor": 0.042485928866208736,
        "managed": 0.042485928866208736,
        "markers": 0.12745778659862622,
        "toc": 0.08497185773241747,
        "markdown": 0.042485928866208736,
        "lint": 0.08497185773241747,
        "7": 0.042485928866208736,
        "git": 0.08497185773241747,
        "publisher": 0.08497185773241747,
        "commit": 0.08497185773241747,
        "mode": 0.08497185773241747,
        "for": 0.08497185773241747,
        "only": 0.042485928866208736,
        "8": 0.08497185773241747,
        "end": 0.08497185773241747,
        "to": 0.042485928866208736,
        "milestone": 0.042485928866208736,
        "generates": 0.042485928866208736,
        "a": 0.08497185773241747,
        "clean": 0.042485928866208736,
        "readme": 0.042485928866208736,
        "with": 0.042485928866208736,
        "no": 0.042485928866208736,
        "docs": 0.042485928866208736,
        "update": 0.08497185773241747,
        "on": 0.042485928866208736,
        "change": 0.08497185773241747,
        "pr": 0.042485928866208736,
        "workflow": 0.042485928866208736,
        "diff": 0.08497185773241747,
        "detection": 0.042485928866208736,
        "mapping": 0.08497185773241747,
        "patching": 0.042485928866208736,
        "inside": 0.042485928866208736,
        "prevent": 0.042485928866208736,
        "loops": 0.042485928866208736
      },
      "text": "# DocGen Development Roadmap ## Phase 0 \u2014 Bootstrap the skeleton 1. **Project skeleton + CLI (`docgen`) + config loader (`.docgen.yml`) + models** \u2014 \u2714 Done * Covers: 1 (commands scaffolding), 9 (parse config), 16 (Analyzer ABC) 2. **Analyzer plugin ABC & discovery** \u2014 \u2714 Done * Covers: 16 (plugin discovery) ## Phase 1 \u2014 \"Init\" happy-path (single repo, local) 1. **Repo scanner & manifest (roles, hashing, ignores)** \u2014 \u2714 Done * Covers: 2 (walk FS, manifest, cache, ignores) 2. **Tier-1 analyzers (Python, Java, Node) + build analyzers + dependency analyzers** \u2014 \u2714 Done * Covers: 3 (language/build/deps) 3. **Templates + prompt builder (section-by-section) + guardrailed system prompt** \u2014 \u25d0 Partial (templates/prompt builder done; guardrails unused) * Covers: 5 (Jinja2 templates, guardrails, token budget) 4. **Local LLM runner (Ollama adapter)** \u2014 \u2714 Done * Covers: 6 (Ollama) 5. **Post-processor: managed markers, ToC, markdown lint** \u2014 \u2714 Done * Covers: 7 (markers, ToC, lint) 6. **Git publisher: commit mode (for init only)** \u2014 \u2714 Done * Covers: 8 (commit mode), 1 (`docgen init` end-to-end) \u2705 **Milestone**: `docgen init` generates a clean README for a repo with no docs. ## Phase 2 \u2014 Update-on-change (PR workflow) 1. **Diff detection + change\u2192section mapping + patching inside markers** \u2014 \u2714 Done * Covers: 8 (diff mapping, prevent loops), 1 (`docgen update`) 2. **Git publisher:",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/feature_order.md#1",
      "vector": {
        "readme": 0.09035079029052513,
        "for": 0.045175395145262566,
        "a": 0.09035079029052513,
        "repo": 0.09035079029052513,
        "with": 0.1355261854357877,
        "no": 0.18070158058105026,
        "docs": 0.09035079029052513,
        "phase": 0.22587697572631282,
        "2": 0.22587697572631282,
        "update": 0.18070158058105026,
        "on": 0.045175395145262566,
        "change": 0.09035079029052513,
        "pr": 0.22587697572631282,
        "workflow": 0.045175395145262566,
        "1": 0.22587697572631282,
        "diff": 0.09035079029052513,
        "detection": 0.045175395145262566,
        "section": 0.1355261854357877,
        "mapping": 0.09035079029052513,
        "patching": 0.045175395145262566,
        "inside": 0.045175395145262566,
        "markers": 0.045175395145262566,
        "done": 0.36140316116210053,
        "covers": 0.36140316116210053,
        "8": 0.09035079029052513,
        "prevent": 0.045175395145262566,
        "loops": 0.045175395145262566,
        "docgen": 0.1355261854357877,
        "git": 0.045175395145262566,
        "publisher": 0.045175395145262566,
        "branch": 0.09035079029052513,
        "delta": 0.045175395145262566,
        "summary": 0.045175395145262566,
        "10": 0.09035079029052513,
        "labeling": 0.045175395145262566,
        "later": 0.045175395145262566,
        "milestone": 0.09035079029052513,
        "opens": 0.045175395145262566,
        "updating": 0.045175395145262566,
        "only": 0.09035079029052513,
        "impacted": 0.045175395145262566,
        "sections": 0.045175395145262566,
        "3": 0.045175395145262566,
        "minimal": 0.045175395145262566,
        "rag": 0.09035079029052513,
        "accuracy": 0.045175395145262566,
        "lite": 0.045175395145262566,
        "embed": 0.045175395145262566,
        "top": 0.045175395145262566,
        "n": 0.045175395145262566,
        "source": 0.045175395145262566,
        "headers": 0.045175395145262566,
        "scoped": 0.045175395145262566,
        "retrieval": 0.09035079029052513,
        "4": 0.09035079029052513,
        "local": 0.09035079029052513,
        "embedding": 0.045175395145262566,
        "index": 0.045175395145262566,
        "sources": 0.045175395145262566,
        "per": 0.045175395145262566,
        "hallucination": 0.1355261854357877,
        "command": 0.1355261854357877,
        "existence": 0.045175395145262566,
        "checks": 0.045175395145262566,
        "partial": 0.045175395145262566,
        "validation": 0.09035079029052513,
        "guard": 0.045175395145262566,
        "not": 0.045175395145262566,
        "implemented": 0.045175395145262566,
        "13": 0.045175395145262566,
        "outputs": 0.045175395145262566,
        "grounded": 0.045175395145262566,
        "in": 0.045175395145262566,
        "facts": 0.045175395145262566,
        "targeted": 0.045175395145262566,
        "context": 0.045175395145262566,
        "hardening": 0.045175395145262566,
        "dx": 0.045175395145262566,
        "error": 0.045175395145262566,
        "handling": 0.045175395145262566,
        "clear": 0.045175395145262566,
        "logs": 0.09035079029052513,
        "verbose": 0.045175395145262566,
        "fail": 0.09035079029052513,
        "safe": 0.09035079029052513,
        "stubs": 0.045175395145262566,
        "15": 0.045175395145262566,
        "cli": 0.045175395145262566,
        "ux": 0.045175395145262566,
        "security": 0.045175395145262566,
        "gitignore": 0.045175395145262566,
        "respect": 0.045175395145262566,
        "path": 0.045175395145262566,
        "excludes": 0.09035079029052513,
        "enforcement": 0.045175395145262566,
        "11": 0.045175395145262566,
        "privacy": 0.045175395145262566,
        "5": 0.09035079029052513,
        "ci": 0.045175395145262566,
        "integration": 0.045175395145262566,
        "config": 0.09035079029052513,
        "polish": 0.045175395145262566,
        "github": 0.045175395145262566,
        "actions": 0.09035079029052513,
        "sample": 0.045175395145262566,
        "push": 0.045175395145262566,
        "trigger": 0.045175395145262566,
        "calling": 0.045175395145262566,
        "gh": 0.045175395145262566,
        "refinements": 0.045175395145262566,
        "watched": 0.045175395145262566,
        "globs": 0.045175395145262566,
        "style": 0.09035079029052513,
        "preset": 0.045175395145262566,
        "concise": 0.045175395145262566,
        "comprehensive": 0.045175395145262566,
        "9": 0.045175395145262566,
        "watched_globs": 0.045175395145262566,
        "presets": 0.045175395145262566,
        "6": 0.045175395145262566,
        "multi": 0.045175395145262566,
        "language": 0.045175395145262566,
        "breadth": 0.045175395145262566
      },
      "text": "README for a repo with no docs. ## Phase 2 \u2014 Update-on-change (PR workflow) 1. **Diff detection + change\u2192section mapping + patching inside markers** \u2014 \u2714 Done * Covers: 8 (diff mapping, prevent loops), 1 (`docgen update`) 2. **Git publisher: branch + PR with delta summary** \u2014 \u2714 Done * Covers: 8 (branch/PR), 10 (labeling later) \u2705 **Milestone**: `docgen update` opens a PR updating only impacted sections. ## Phase 3 \u2014 Minimal RAG & accuracy 1. **RAG Lite: embed README/docs/top N source headers; section-scoped retrieval** \u2014 \u2714 Done * Covers: 4 (local embedding, index sources, per-section retrieval) 2. **No-hallucination & command existence checks** \u2014 \u25d0 Partial (command validation done; no-hallucination guard not implemented) * Covers: 13 (command validation, no-hallucination) \u2705 **Milestone**: outputs grounded in repo facts with targeted context. ## Phase 4 \u2014 Hardening & DX 1. **Error handling, clear logs, `--verbose`, fail-safe stubs** \u2014 \u2714 Done * Covers: 15 (fail-safe, logs, CLI UX) 2. **Security: .gitignore respect, path excludes, local-only enforcement** \u2014 \u2714 Done * Covers: 11 (privacy, excludes) ## Phase 5 \u2014 CI integration & config polish 1. **GitHub Actions sample (push/PR trigger calling `docgen update`)** \u2014 \u2714 Done * Covers: 10 (GH Actions) 2. **Config refinements: watched globs, style preset (concise/comprehensive)** \u2014 \u2714 Done * Covers: 9 (watched_globs), 5 (style presets) ## Phase 6 \u2014 Multi-language breadth",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/feature_order.md#2",
      "vector": {
        "github": 0.046274481338274755,
        "actions": 0.09254896267654951,
        "sample": 0.046274481338274755,
        "push": 0.046274481338274755,
        "pr": 0.18509792535309902,
        "trigger": 0.046274481338274755,
        "calling": 0.046274481338274755,
        "docgen": 0.13882344401482424,
        "update": 0.046274481338274755,
        "done": 0.32392136936792326,
        "covers": 0.41647033204447276,
        "10": 0.09254896267654951,
        "gh": 0.046274481338274755,
        "2": 0.23137240669137377,
        "config": 0.09254896267654951,
        "refinements": 0.046274481338274755,
        "watched": 0.046274481338274755,
        "globs": 0.046274481338274755,
        "style": 0.09254896267654951,
        "preset": 0.046274481338274755,
        "concise": 0.046274481338274755,
        "comprehensive": 0.046274481338274755,
        "9": 0.046274481338274755,
        "watched_globs": 0.046274481338274755,
        "5": 0.09254896267654951,
        "presets": 0.046274481338274755,
        "phase": 0.13882344401482424,
        "6": 0.09254896267654951,
        "multi": 0.046274481338274755,
        "language": 0.046274481338274755,
        "breadth": 0.046274481338274755,
        "framework": 0.13882344401482424,
        "smarts": 0.046274481338274755,
        "1": 0.23137240669137377,
        "entrypoint": 0.046274481338274755,
        "detection": 0.046274481338274755,
        "main": 0.046274481338274755,
        "spring": 0.046274481338274755,
        "boot": 0.046274481338274755,
        "fastapi": 0.09254896267654951,
        "aware": 0.09254896267654951,
        "quick": 0.046274481338274755,
        "start": 0.046274481338274755,
        "entrypoints": 0.046274481338274755,
        "12": 0.046274481338274755,
        "commands": 0.046274481338274755,
        "pattern": 0.09254896267654951,
        "analyzers": 0.09254896267654951,
        "docker": 0.046274481338274755,
        "k8s": 0.046274481338274755,
        "ci": 0.046274481338274755,
        "monorepo": 0.046274481338274755,
        "layout": 0.046274481338274755,
        "3": 0.13882344401482424,
        "7": 0.13882344401482424,
        "quality": 0.046274481338274755,
        "gates": 0.046274481338274755,
        "performance": 0.046274481338274755,
        "readme": 0.09254896267654951,
        "scorecard": 0.13882344401482424,
        "link": 0.09254896267654951,
        "validator": 0.09254896267654951,
        "badges": 0.09254896267654951,
        "13": 0.046274481338274755,
        "artifact": 0.09254896267654951,
        "embedding": 0.046274481338274755,
        "caching": 0.046274481338274755,
        "in": 0.046274481338274755,
        "incremental": 0.09254896267654951,
        "rag": 0.09254896267654951,
        "refresh": 0.09254896267654951,
        "partial": 0.046274481338274755,
        "embeddings": 0.046274481338274755,
        "cached": 0.046274481338274755,
        "no": 0.046274481338274755,
        "analyzer": 0.046274481338274755,
        "store": 0.046274481338274755,
        "14": 0.046274481338274755,
        "persist": 0.046274481338274755,
        "outputs": 0.046274481338274755,
        "8": 0.046274481338274755,
        "nice": 0.046274481338274755,
        "to": 0.09254896267654951,
        "have": 0.046274481338274755,
        "stretch": 0.046274481338274755,
        "dry": 0.09254896267654951,
        "run": 0.09254896267654951,
        "mode": 0.13882344401482424,
        "labeling": 0.09254896267654951,
        "updates": 0.09254896267654951,
        "commit": 0.046274481338274755,
        "policy": 0.046274481338274755,
        "tuning": 0.046274481338274755,
        "template": 0.13882344401482424,
        "overrides": 0.046274481338274755,
        "docs": 0.046274481338274755,
        "templates": 0.046274481338274755,
        "j2": 0.046274481338274755,
        "org": 0.046274481338274755,
        "packs": 0.09254896267654951,
        "override": 0.046274481338274755,
        "16": 0.046274481338274755,
        "service": 0.09254896267654951,
        "llama": 0.09254896267654951,
        "cpp": 0.09254896267654951,
        "adapter": 0.046274481338274755,
        "tree": 0.09254896267654951,
        "sitter": 0.09254896267654951,
        "extraction": 0.046274481338274755,
        "not": 0.046274481338274755,
        "started": 0.046274481338274755,
        "why": 0.046274481338274755,
        "this": 0.046274481338274755,
        "order": 0.046274481338274755,
        "fastest": 0.046274481338274755,
        "path": 0.046274481338274755,
        "value": 0.046274481338274755,
        "get": 0.046274481338274755,
        "init": 0.046274481338274755,
        "producing": 0.046274481338274755,
        "a": 0.046274481338274755,
        "solid": 0.046274481338274755,
        "before": 0.046274481338274755,
        "adding": 0.046274481338274755,
        "diffing": 0.046274481338274755
      },
      "text": "**GitHub Actions sample (push/PR trigger calling `docgen update`)** \u2014 \u2714 Done * Covers: 10 (GH Actions) 2. **Config refinements: watched globs, style preset (concise/comprehensive)** \u2014 \u2714 Done * Covers: 9 (watched_globs), 5 (style presets) ## Phase 6 \u2014 Multi-language breadth & framework smarts 1. **Entrypoint detection (main, Spring Boot, FastAPI) + framework-aware Quick Start** \u2014 \u2714 Done * Covers: 2 (entrypoints), 12 (framework-aware commands) 2. **Pattern analyzers (Docker/K8s, CI config, monorepo layout)** \u2014 \u2714 Done * Covers: 3 (pattern analyzers) ## Phase 7 \u2014 Quality gates & performance 1. **README scorecard + link validator + badges** \u2014 \u2714 Done * Covers: 13 (scorecard), 7 (link validator), 7 (badges) 2. **Artifact & embedding caching in `.docgen/` + incremental RAG refresh** \u2014 \u25d0 Partial (embeddings/scorecard cached; no analyzer artifact store) * Covers: 14 (persist outputs, incremental refresh) ## Phase 8 \u2014 \"Nice to have\" & stretch 1. **Dry-run mode, PR labeling/updates, commit/PR policy tuning** \u2014 \u2714 Done * Covers: 1 (dry-run), 10 (labeling/PR updates) 2. **Template overrides (`docs/templates/*.j2`) & org template packs** \u2014 \u2714 Done * Covers: 5 (override), 16 (template packs) 3. **Service mode (FastAPI), llama.cpp adapter, tree-sitter extraction** \u2014 \u2610 Not started * Covers: 1 (service mode), 6 (llama.cpp), 3 (tree-sitter) ## Why this order * **Fastest path to value**: get `docgen init` producing a solid README before adding diffing/RAG.",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/feature_order.md#3",
      "vector": {
        "3": 0.18333969940564226,
        "service": 0.18333969940564226,
        "mode": 0.18333969940564226,
        "fastapi": 0.09166984970282113,
        "llama": 0.18333969940564226,
        "cpp": 0.18333969940564226,
        "adapter": 0.09166984970282113,
        "tree": 0.18333969940564226,
        "sitter": 0.18333969940564226,
        "extraction": 0.09166984970282113,
        "not": 0.09166984970282113,
        "started": 0.09166984970282113,
        "covers": 0.09166984970282113,
        "1": 0.09166984970282113,
        "6": 0.09166984970282113,
        "why": 0.09166984970282113,
        "this": 0.09166984970282113,
        "order": 0.09166984970282113,
        "fastest": 0.09166984970282113,
        "path": 0.09166984970282113,
        "to": 0.18333969940564226,
        "value": 0.09166984970282113,
        "get": 0.09166984970282113,
        "docgen": 0.09166984970282113,
        "init": 0.09166984970282113,
        "producing": 0.09166984970282113,
        "a": 0.09166984970282113,
        "solid": 0.09166984970282113,
        "readme": 0.09166984970282113,
        "before": 0.09166984970282113,
        "adding": 0.09166984970282113,
        "diffing": 0.09166984970282113,
        "rag": 0.18333969940564226,
        "contain": 0.09166984970282113,
        "risk": 0.09166984970282113,
        "early": 0.09166984970282113,
        "section": 0.09166984970282113,
        "markers": 0.09166984970282113,
        "lint": 0.09166984970282113,
        "and": 0.2750095491084634,
        "commit": 0.09166984970282113,
        "publishing": 0.09166984970282113,
        "ensure": 0.09166984970282113,
        "safe": 0.09166984970282113,
        "idempotent": 0.09166984970282113,
        "edits": 0.09166984970282113,
        "accuracy": 0.09166984970282113,
        "next": 0.09166984970282113,
        "add": 0.09166984970282113,
        "validation": 0.09166984970282113,
        "avoid": 0.09166984970282113,
        "hallucinations": 0.09166984970282113,
        "once": 0.09166984970282113,
        "the": 0.18333969940564226,
        "pipeline": 0.09166984970282113,
        "works": 0.09166984970282113,
        "scale": 0.09166984970282113,
        "breadth": 0.09166984970282113,
        "later": 0.09166984970282113,
        "only": 0.09166984970282113,
        "after": 0.09166984970282113,
        "core": 0.09166984970282113,
        "loop": 0.09166984970282113,
        "is": 0.09166984970282113,
        "robust": 0.09166984970282113,
        "do": 0.09166984970282113,
        "we": 0.09166984970282113,
        "widen": 0.09166984970282113,
        "language": 0.09166984970282113,
        "framework": 0.09166984970282113,
        "coverage": 0.09166984970282113,
        "polish": 0.09166984970282113,
        "last": 0.09166984970282113,
        "ci": 0.09166984970282113,
        "caching": 0.09166984970282113,
        "quality": 0.09166984970282113,
        "gates": 0.09166984970282113,
        "refine": 0.09166984970282113,
        "dev": 0.09166984970282113,
        "experience": 0.09166984970282113,
        "performance": 0.09166984970282113
      },
      "text": "3. **Service mode (FastAPI), llama.cpp adapter, tree-sitter extraction** \u2014 \u2610 Not started * Covers: 1 (service mode), 6 (llama.cpp), 3 (tree-sitter) ## Why this order * **Fastest path to value**: get `docgen init` producing a solid README before adding diffing/RAG. * **Contain risk early**: section markers, lint, and commit publishing ensure safe/idempotent edits. * **Accuracy next**: add RAG + validation to avoid hallucinations once the pipeline works. * **Scale breadth later**: only after the core loop is robust do we widen language/framework coverage. * **Polish last**: CI, caching, and quality gates refine dev experience and performance.",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/jira_stories.md#0",
      "vector": {
        "docgen": 0.15037641213512565,
        "jira": 0.05012547071170855,
        "stories": 0.1002509414234171,
        "remaining": 0.05012547071170855,
        "are": 0.1002509414234171,
        "ordered": 0.05012547071170855,
        "by": 0.1002509414234171,
        "the": 0.25062735355854276,
        "recommended": 0.05012547071170855,
        "completion": 0.05012547071170855,
        "sequence": 0.05012547071170855,
        "and": 0.3508782949819598,
        "formatted": 0.05012547071170855,
        "per": 0.05012547071170855,
        "prompt": 0.05012547071170855,
        "template": 0.05012547071170855,
        "guidance": 0.05012547071170855,
        "all": 0.05012547071170855,
        "prior": 0.05012547071170855,
        "milestones": 0.05012547071170855,
        "complete": 0.05012547071170855,
        "only": 0.05012547071170855,
        "work": 0.05012547071170855,
        "listed": 0.05012547071170855,
        "below": 0.05012547071170855,
        "remains": 0.05012547071170855,
        "story": 0.1002509414234171,
        "s": 0.15037641213512565,
        "032": 0.05012547071170855,
        "no": 0.05012547071170855,
        "hallucination": 0.05012547071170855,
        "validation": 0.15037641213512565,
        "status": 0.05012547071170855,
        "done": 0.05012547071170855,
        "text": 0.05012547071170855,
        "introduce": 0.05012547071170855,
        "a": 0.3508782949819598,
        "layer": 0.05012547071170855,
        "that": 0.1002509414234171,
        "rejects": 0.05012547071170855,
        "readme": 0.05012547071170855,
        "content": 0.15037641213512565,
        "containing": 0.05012547071170855,
        "facts": 0.05012547071170855,
        "not": 0.05012547071170855,
        "backed": 0.05012547071170855,
        "analyzer": 0.1002509414234171,
        "signals": 0.15037641213512565,
        "or": 0.2005018828468342,
        "rag": 0.1002509414234171,
        "context": 0.1002509414234171,
        "surfacing": 0.05012547071170855,
        "actionable": 0.05012547071170855,
        "errors": 0.05012547071170855,
        "to": 0.05012547071170855,
        "users": 0.05012547071170855,
        "dependencies": 0.05012547071170855,
        "already": 0.05012547071170855,
        "completed": 0.05012547071170855,
        "031": 0.05012547071170855,
        "guardrailed": 0.05012547071170855,
        "execution": 0.05012547071170855,
        "011": 0.05012547071170855,
        "contexts": 0.05012547071170855,
        "constraints": 0.05012547071170855,
        "must": 0.05012547071170855,
        "run": 0.05012547071170855,
        "after": 0.1002509414234171,
        "section": 0.1002509414234171,
        "rendering": 0.1002509414234171,
        "but": 0.05012547071170855,
        "before": 0.1002509414234171,
        "writing": 0.05012547071170855,
        "files": 0.05012547071170855,
        "publishing": 0.05012547071170855,
        "prs": 0.05012547071170855,
        "provide": 0.05012547071170855,
        "clear": 0.05012547071170855,
        "remediation": 0.05012547071170855,
        "logs": 0.1002509414234171,
        "referencing": 0.05012547071170855,
        "missing": 0.1002509414234171,
        "affected": 0.05012547071170855,
        "sections": 0.1002509414234171,
        "allow": 0.05012547071170855,
        "an": 0.05012547071170855,
        "opt": 0.05012547071170855,
        "out": 0.05012547071170855,
        "toggle": 0.05012547071170855,
        "in": 0.05012547071170855,
        "yml": 0.05012547071170855,
        "for": 0.05012547071170855,
        "edge": 0.05012547071170855,
        "cases": 0.05012547071170855,
        "non": 0.05012547071170855,
        "goals": 0.05012547071170855,
        "external": 0.05012547071170855,
        "api": 0.05012547071170855,
        "calls": 0.05012547071170855,
        "complex": 0.05012547071170855,
        "semantic": 0.05012547071170855,
        "similarity": 0.05012547071170855,
        "checks": 0.05012547071170855,
        "acceptance": 0.1002509414234171,
        "criteria": 0.05012547071170855,
        "validator": 0.1002509414234171,
        "cross": 0.05012547071170855,
        "references": 0.05012547071170855,
        "generated": 0.05012547071170855,
        "claims": 0.05012547071170855,
        "against": 0.05012547071170855,
        "available": 0.05012547071170855,
        "disallowed": 0.05012547071170855,
        "triggers": 0.05012547071170855,
        "failure": 0.05012547071170855,
        "path": 0.05012547071170855,
        "with": 0.1002509414234171,
        "stub": 0.05012547071170855,
        "fallback": 0.05012547071170855,
        "unit": 0.05012547071170855,
        "tests": 0.05012547071170855,
        "cover": 0.05012547071170855,
        "of": 0.1002509414234171,
        "grounded": 0.05012547071170855,
        "rejection": 0.05012547071170855,
        "injected": 0.05012547071170855,
        "hallucinations": 0.05012547071170855,
        "cli": 0.05012547071170855,
        "surfaces": 0.05012547071170855,
        "concise": 0.05012547071170855,
        "error": 0.05012547071170855,
        "messages": 0.05012547071170855,
        "verbose": 0.05012547071170855,
        "list": 0.05012547071170855,
        "offending": 0.05012547071170855,
        "evidence": 0.05012547071170855,
        "implementation": 0.1002509414234171,
        "plan": 0.05012547071170855,
        "create": 0.05012547071170855,
        "dedicated": 0.05012547071170855,
        "validators": 0.1002509414234171,
        "package": 0.05012547071170855,
        "lightweight": 0.05012547071170855,
        "validationissue": 0.05012547071170855,
        "dataclass": 0.05012547071170855,
        "protocol": 0.05012547071170855,
        "nohallucinationvalidator": 0.05012547071170855,
        "concrete": 0.05012547071170855,
        "orchestrator": 0.05012547071170855,
        "registers": 0.05012547071170855,
        "executes": 0.05012547071170855,
        "them": 0.05012547071170855,
        "post": 0.05012547071170855,
        "processing": 0.05012547071170855,
        "io": 0.05012547071170855,
        "add": 0.05012547071170855,
        "shared": 0.05012547071170855,
        "evidenceindex": 0.05012547071170855,
        "builder": 0.05012547071170855,
        "normalizes": 0.05012547071170855
      },
      "text": "# DocGen Jira Stories (Remaining) > Stories are ordered by the recommended completion sequence and formatted per the prompt template guidance. All prior milestones are complete; only the work listed below remains. --- ## Story S-032 \u2014 No-Hallucination Validation - **Status:** \u2714 Done - **Story Text:** Introduce a validation layer that rejects README content containing facts not backed by analyzer signals or RAG context, surfacing actionable errors to users. - **Dependencies already completed:** S-031 (guardrailed execution), S-011 (RAG contexts) - **Constraints:** - Validation must run after section rendering but before writing files or publishing PRs. - Provide clear remediation logs referencing the missing signals and affected sections. - Allow an opt-out toggle in `.docgen.yml` for edge cases. - **Non-Goals:** External API calls or complex semantic similarity checks. - **Acceptance Criteria:** - Validator cross-references generated claims against available signals/context; disallowed content triggers a failure path with stub fallback. - Unit tests cover acceptance of grounded content and rejection of injected hallucinations. - CLI surfaces concise error messages and `--verbose` logs list offending sections and missing evidence. - **Implementation Plan:** - Create a dedicated `docgen.validators` package with a lightweight `ValidationIssue` dataclass, a `Validator` protocol, and a `NoHallucinationValidator` concrete implementation. The orchestrator registers validators after section rendering and executes them before post-processing or IO. - Add a shared `EvidenceIndex` builder that normalizes analyzer",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#1",
      "vector": {
        "a": 0.37435064886346636,
        "dedicated": 0.04159451654038515,
        "docgen": 0.12478354962115545,
        "validators": 0.12478354962115545,
        "package": 0.04159451654038515,
        "with": 0.2495670992423109,
        "lightweight": 0.04159451654038515,
        "validationissue": 0.04159451654038515,
        "dataclass": 0.04159451654038515,
        "validator": 0.04159451654038515,
        "protocol": 0.04159451654038515,
        "and": 0.29116161578269606,
        "nohallucinationvalidator": 0.04159451654038515,
        "concrete": 0.04159451654038515,
        "implementation": 0.04159451654038515,
        "the": 0.4991341984846218,
        "orchestrator": 0.04159451654038515,
        "registers": 0.04159451654038515,
        "after": 0.04159451654038515,
        "section": 0.0831890330807703,
        "rendering": 0.04159451654038515,
        "executes": 0.04159451654038515,
        "them": 0.04159451654038515,
        "before": 0.04159451654038515,
        "post": 0.04159451654038515,
        "processing": 0.04159451654038515,
        "or": 0.04159451654038515,
        "io": 0.04159451654038515,
        "add": 0.0831890330807703,
        "shared": 0.04159451654038515,
        "evidenceindex": 0.04159451654038515,
        "builder": 0.0831890330807703,
        "that": 0.12478354962115545,
        "normalizes": 0.04159451654038515,
        "analyzer": 0.04159451654038515,
        "signals": 0.0831890330807703,
        "names": 0.04159451654038515,
        "kinds": 0.04159451654038515,
        "key": 0.04159451654038515,
        "attributes": 0.04159451654038515,
        "retrieved": 0.04159451654038515,
        "rag": 0.04159451654038515,
        "chunks": 0.04159451654038515,
        "path": 0.04159451654038515,
        "heading": 0.04159451654038515,
        "snippet": 0.04159451654038515,
        "persist": 0.04159451654038515,
        "normalized": 0.0831890330807703,
        "evidence": 0.0831890330807703,
        "in": 0.0831890330807703,
        "run": 0.04159451654038515,
        "context": 0.04159451654038515,
        "so": 0.04159451654038515,
        "verbose": 0.04159451654038515,
        "logging": 0.04159451654038515,
        "receive": 0.04159451654038515,
        "same": 0.04159451654038515,
        "data": 0.04159451654038515,
        "extend": 0.04159451654038515,
        "prompt": 0.04159451654038515,
        "to": 0.20797258270192576,
        "annotate": 0.04159451654038515,
        "each": 0.0831890330807703,
        "render": 0.04159451654038515,
        "sectionevidence": 0.04159451654038515,
        "metadata": 0.0831890330807703,
        "describing": 0.04159451654038515,
        "which": 0.04159451654038515,
        "chunk": 0.04159451654038515,
        "ids": 0.04159451654038515,
        "were": 0.04159451654038515,
        "injected": 0.04159451654038515,
        "this": 0.04159451654038515,
        "is": 0.04159451654038515,
        "stored": 0.04159451654038515,
        "alongside": 0.04159451654038515,
        "rendered": 0.0831890330807703,
        "markdown": 0.04159451654038515,
        "avoid": 0.04159451654038515,
        "re": 0.04159451654038515,
        "parsing": 0.04159451654038515,
        "prompts": 0.04159451654038515,
        "implement": 0.04159451654038515,
        "lexical": 0.04159451654038515,
        "matching": 0.04159451654038515,
        "heuristics": 0.04159451654038515,
        "split": 0.04159451654038515,
        "sections": 0.0831890330807703,
        "into": 0.04159451654038515,
        "sentences": 0.0831890330807703,
        "ignore": 0.04159451654038515,
        "boilerplate": 0.04159451654038515,
        "phrases": 0.04159451654038515,
        "require": 0.04159451654038515,
        "remaining": 0.04159451654038515,
        "sentence": 0.04159451654038515,
        "introduces": 0.04159451654038515,
        "facts": 0.04159451654038515,
        "numbers": 0.04159451654038515,
        "detected": 0.0831890330807703,
        "entities": 0.04159451654038515,
        "verbs": 0.04159451654038515,
        "direct": 0.04159451654038515,
        "objects": 0.04159451654038515,
        "have": 0.04159451654038515,
        "at": 0.04159451654038515,
        "least": 0.04159451654038515,
        "one": 0.04159451654038515,
        "overlapping": 0.04159451654038515,
        "n": 0.04159451654038515,
        "gram": 0.04159451654038515,
        "len": 0.04159451654038515,
        "3": 0.04159451654038515,
        "flag": 0.0831890330807703,
        "unmatched": 0.04159451654038515,
        "as": 0.04159451654038515,
        "hallucinations": 0.0831890330807703,
        "when": 0.04159451654038515,
        "are": 0.04159451654038515,
        "short": 0.04159451654038515,
        "circuit": 0.04159451654038515,
        "pipeline": 0.04159451654038515,
        "emit": 0.04159451654038515,
        "fail": 0.04159451654038515,
        "safe": 0.04159451654038515,
        "stubs": 0.04159451654038515,
        "for": 0.12478354962115545,
        "offending": 0.04159451654038515,
        "reuse": 0.04159451654038515,
        "existing": 0.04159451654038515,
        "stub": 0.04159451654038515,
        "generator": 0.04159451654038515,
        "bubble": 0.04159451654038515,
        "validationerror": 0.04159451654038515,
        "back": 0.04159451654038515,
        "cli": 0.0831890330807703,
        "actionable": 0.04159451654038515,
        "hints": 0.04159451654038515,
        "yml": 0.04159451654038515,
        "updates": 0.04159451654038515,
        "introduce": 0.04159451654038515,
        "validation": 0.0831890330807703,
        "map": 0.04159451654038515,
        "no_hallucination": 0.04159451654038515,
        "boolean": 0.04159451654038515,
        "default": 0.04159451654038515,
        "true": 0.04159451654038515,
        "respect": 0.04159451654038515,
        "repo": 0.04159451654038515,
        "level": 0.04159451654038515,
        "overrides": 0.04159451654038515,
        "while": 0.04159451654038515,
        "allowing": 0.04159451654038515,
        "docgen_validation_no_hallucination": 0.04159451654038515,
        "false": 0.04159451654038515,
        "disable": 0.04159451654038515,
        "check": 0.04159451654038515,
        "ci": 0.04159451654038515,
        "emergencies": 0.04159451654038515,
        "skip": 0.04159451654038515,
        "init": 0.04159451654038515,
        "update": 0.04159451654038515,
        "regenerate": 0.04159451654038515,
        "flips": 0.04159451654038515,
        "toggle": 0.04159451654038515
      },
      "text": "a dedicated `docgen.validators` package with a lightweight `ValidationIssue` dataclass, a `Validator` protocol, and a `NoHallucinationValidator` concrete implementation. The orchestrator registers validators after section rendering and executes them before post-processing or IO. - Add a shared `EvidenceIndex` builder that normalizes analyzer signals (names, kinds, key attributes) and retrieved RAG chunks (path, heading, snippet). Persist the normalized evidence in the run context so validators and verbose logging receive the same data. - Extend the prompt builder to annotate each section render with `SectionEvidence` metadata describing which signals and chunk IDs were injected. This metadata is stored alongside the rendered markdown to avoid re-parsing prompts. - Implement lexical matching heuristics: split rendered sections into sentences, ignore boilerplate phrases, and require each remaining sentence that introduces facts (numbers, detected entities, verbs with direct objects) to have at least one overlapping n-gram (len \u22653) with the normalized evidence. Flag unmatched sentences as hallucinations. - When hallucinations are detected, short-circuit the pipeline, emit fail-safe stubs for the offending sections (reuse existing stub generator), and bubble a `ValidationError` back to the CLI with actionable hints. - **`.docgen.yml` & CLI Updates:** - Introduce a `validation` map with a `no_hallucination` boolean (default `true`). Respect repo-level overrides while allowing `DOCGEN_VALIDATION_NO_HALLUCINATION=false` to disable the check in CI emergencies. - Add a `--skip-validation` flag for `docgen init|update|regenerate` that flips the toggle for",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#2",
      "vector": {
        "cli": 0.18856180831641267,
        "updates": 0.04714045207910317,
        "introduce": 0.04714045207910317,
        "a": 0.23570226039551584,
        "validation": 0.23570226039551584,
        "map": 0.04714045207910317,
        "with": 0.09428090415820634,
        "no_hallucination": 0.04714045207910317,
        "boolean": 0.04714045207910317,
        "default": 0.04714045207910317,
        "true": 0.04714045207910317,
        "respect": 0.04714045207910317,
        "repo": 0.09428090415820634,
        "level": 0.04714045207910317,
        "overrides": 0.04714045207910317,
        "while": 0.04714045207910317,
        "allowing": 0.04714045207910317,
        "docgen_validation_no_hallucination": 0.04714045207910317,
        "false": 0.04714045207910317,
        "to": 0.1414213562373095,
        "disable": 0.04714045207910317,
        "the": 0.4242640687119285,
        "check": 0.04714045207910317,
        "in": 0.1414213562373095,
        "ci": 0.04714045207910317,
        "emergencies": 0.04714045207910317,
        "add": 0.09428090415820634,
        "skip": 0.04714045207910317,
        "flag": 0.04714045207910317,
        "for": 0.18856180831641267,
        "docgen": 0.09428090415820634,
        "init": 0.04714045207910317,
        "update": 0.04714045207910317,
        "regenerate": 0.04714045207910317,
        "that": 0.1414213562373095,
        "flips": 0.04714045207910317,
        "toggle": 0.04714045207910317,
        "current": 0.04714045207910317,
        "execution": 0.04714045207910317,
        "only": 0.04714045207910317,
        "and": 0.282842712474619,
        "is": 0.04714045207910317,
        "surfaced": 0.04714045207910317,
        "run": 0.09428090415820634,
        "summary": 0.04714045207910317,
        "encourage": 0.04714045207910317,
        "re": 0.04714045207910317,
        "enabling": 0.04714045207910317,
        "logging": 0.09428090415820634,
        "ux": 0.04714045207910317,
        "errors": 0.04714045207910317,
        "show": 0.04714045207910317,
        "one": 0.04714045207910317,
        "line": 0.04714045207910317,
        "summaries": 0.04714045207910317,
        "per": 0.04714045207910317,
        "section": 0.04714045207910317,
        "quickstart": 0.04714045207910317,
        "references": 0.04714045207910317,
        "docker": 0.04714045207910317,
        "compose": 0.04714045207910317,
        "without": 0.09428090415820634,
        "supporting": 0.04714045207910317,
        "analyzer": 0.1414213562373095,
        "signal": 0.04714045207910317,
        "verbose": 0.09428090415820634,
        "prints": 0.04714045207910317,
        "offending": 0.04714045207910317,
        "sentence": 0.04714045207910317,
        "missing": 0.04714045207910317,
        "tokens": 0.04714045207910317,
        "short": 0.04714045207910317,
        "list": 0.04714045207910317,
        "of": 0.04714045207910317,
        "nearby": 0.04714045207910317,
        "evidence": 0.09428090415820634,
        "persist": 0.09428090415820634,
        "json": 0.04714045207910317,
        "report": 0.04714045207910317,
        "under": 0.04714045207910317,
        "capturing": 0.04714045207910317,
        "validator": 0.04714045207910317,
        "status": 0.09428090415820634,
        "issues": 0.04714045207910317,
        "selected": 0.04714045207910317,
        "forensic": 0.04714045207910317,
        "review": 0.04714045207910317,
        "testing": 0.04714045207910317,
        "strategy": 0.04714045207910317,
        "unit": 0.04714045207910317,
        "tests": 0.1414213562373095,
        "cover": 0.04714045207910317,
        "positive": 0.04714045207910317,
        "negative": 0.04714045207910317,
        "cases": 0.09428090415820634,
        "nohallucinationvalidator": 0.04714045207910317,
        "including": 0.04714045207910317,
        "edge": 0.04714045207910317,
        "such": 0.04714045207910317,
        "as": 0.04714045207910317,
        "citations": 0.04714045207910317,
        "using": 0.04714045207910317,
        "synonyms": 0.04714045207910317,
        "or": 0.04714045207910317,
        "pluralization": 0.04714045207910317,
        "bullet": 0.04714045207910317,
        "lists": 0.04714045207910317,
        "code": 0.04714045207910317,
        "blocks": 0.04714045207910317,
        "integration": 0.04714045207910317,
        "full": 0.04714045207910317,
        "on": 0.04714045207910317,
        "synthetic": 0.04714045207910317,
        "repos": 0.04714045207910317,
        "stored": 0.04714045207910317,
        "data": 0.04714045207910317,
        "confirm": 0.04714045207910317,
        "grounded": 0.04714045207910317,
        "readmes": 0.04714045207910317,
        "pass": 0.04714045207910317,
        "tampered": 0.04714045207910317,
        "outputs": 0.09428090415820634,
        "fail": 0.04714045207910317,
        "fast": 0.04714045207910317,
        "stub": 0.04714045207910317,
        "replacements": 0.04714045207910317,
        "regression": 0.04714045207910317,
        "fixtures": 0.04714045207910317,
        "asserting": 0.04714045207910317,
        "disabling": 0.04714045207910317,
        "via": 0.04714045207910317,
        "config": 0.04714045207910317,
        "leaves": 0.04714045207910317,
        "runs": 0.09428090415820634,
        "untouched": 0.04714045207910317,
        "enumerates": 0.04714045207910317,
        "flagged": 0.04714045207910317,
        "sentences": 0.04714045207910317,
        "story": 0.09428090415820634,
        "s": 0.1414213562373095,
        "033": 0.04714045207910317,
        "artifact": 0.04714045207910317,
        "persistence": 0.04714045207910317,
        "done": 0.04714045207910317,
        "text": 0.04714045207910317,
        "alongside": 0.04714045207910317,
        "embeddings": 0.04714045207910317,
        "so": 0.04714045207910317,
        "repeated": 0.04714045207910317,
        "can": 0.04714045207910317,
        "reuse": 0.04714045207910317,
        "structured": 0.04714045207910317,
        "signals": 0.04714045207910317,
        "reprocessing": 0.04714045207910317,
        "unchanged": 0.04714045207910317,
        "files": 0.04714045207910317,
        "dependencies": 0.04714045207910317,
        "already": 0.04714045207910317,
        "completed": 0.04714045207910317,
        "003": 0.04714045207910317,
        "scanner": 0.04714045207910317,
        "020": 0.04714045207910317,
        "embedding": 0.04714045207910317,
        "cache": 0.04714045207910317
      },
      "text": "& CLI Updates:** - Introduce a `validation` map with a `no_hallucination` boolean (default `true`). Respect repo-level overrides while allowing `DOCGEN_VALIDATION_NO_HALLUCINATION=false` to disable the check in CI emergencies. - Add a `--skip-validation` flag for `docgen init|update|regenerate` that flips the toggle for the current execution only and is surfaced in the run summary to encourage re-enabling. - **Logging & UX:** - CLI errors show one-line summaries per section (`quickstart: references docker compose without supporting analyzer signal`). `--verbose` prints the offending sentence, the missing tokens, and a short list of nearby evidence. - Persist a `validation.json` report under `.docgen/` capturing the validator status, issues, and selected evidence for forensic review. - **Testing Strategy:** - Unit tests cover positive/negative cases for the `NoHallucinationValidator`, including edge cases such as citations using synonyms or pluralization, bullet lists, and code blocks. - Integration tests run the full CLI on synthetic repos stored in `tests/data/validation/` to confirm grounded READMEs pass and tampered outputs fail fast with stub replacements. - Add regression fixtures asserting that disabling validation via config/CLI leaves runs untouched and that verbose logging enumerates flagged sentences. ## Story S-033 \u2014 Analyzer Artifact Persistence - **Status:** \u2714 Done - **Story Text:** Persist analyzer outputs alongside embeddings so repeated runs can reuse structured signals without reprocessing unchanged files. - **Dependencies already completed:** S-003 (Repo scanner), S-020 (embedding cache",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#3",
      "vector": {
        "story": 0.19975046777556893,
        "s": 0.2996257016633534,
        "033": 0.04993761694389223,
        "analyzer": 0.19975046777556893,
        "artifact": 0.09987523388778446,
        "persistence": 0.04993761694389223,
        "status": 0.09987523388778446,
        "done": 0.09987523388778446,
        "text": 0.09987523388778446,
        "persist": 0.04993761694389223,
        "outputs": 0.09987523388778446,
        "alongside": 0.04993761694389223,
        "embeddings": 0.04993761694389223,
        "so": 0.04993761694389223,
        "repeated": 0.04993761694389223,
        "runs": 0.09987523388778446,
        "can": 0.04993761694389223,
        "reuse": 0.04993761694389223,
        "structured": 0.04993761694389223,
        "signals": 0.09987523388778446,
        "without": 0.04993761694389223,
        "reprocessing": 0.04993761694389223,
        "unchanged": 0.09987523388778446,
        "files": 0.09987523388778446,
        "dependencies": 0.09987523388778446,
        "already": 0.09987523388778446,
        "completed": 0.09987523388778446,
        "003": 0.04993761694389223,
        "repo": 0.09987523388778446,
        "scanner": 0.04993761694389223,
        "020": 0.04993761694389223,
        "embedding": 0.04993761694389223,
        "cache": 0.09987523388778446,
        "groundwork": 0.09987523388778446,
        "constraints": 0.09987523388778446,
        "store": 0.04993761694389223,
        "artifacts": 0.04993761694389223,
        "under": 0.04993761694389223,
        "docgen": 0.04993761694389223,
        "with": 0.1498128508316767,
        "versioning": 0.04993761694389223,
        "to": 0.19975046777556893,
        "handle": 0.04993761694389223,
        "schema": 0.04993761694389223,
        "changes": 0.04993761694389223,
        "refresh": 0.04993761694389223,
        "results": 0.04993761694389223,
        "incrementally": 0.04993761694389223,
        "based": 0.09987523388778446,
        "on": 0.04993761694389223,
        "file": 0.04993761694389223,
        "hashes": 0.04993761694389223,
        "and": 0.2996257016633534,
        "invalidate": 0.04993761694389223,
        "when": 0.19975046777556893,
        "analyzers": 0.04993761694389223,
        "change": 0.04993761694389223,
        "keep": 0.04993761694389223,
        "storage": 0.04993761694389223,
        "format": 0.04993761694389223,
        "json": 0.04993761694389223,
        "serializable": 0.04993761694389223,
        "human": 0.04993761694389223,
        "auditable": 0.04993761694389223,
        "non": 0.09987523388778446,
        "goals": 0.1498128508316767,
        "remote": 0.04993761694389223,
        "backends": 0.04993761694389223,
        "or": 0.04993761694389223,
        "cross": 0.04993761694389223,
        "sharing": 0.04993761694389223,
        "acceptance": 0.04993761694389223,
        "criteria": 0.04993761694389223,
        "saved": 0.04993761694389223,
        "reloaded": 0.04993761694389223,
        "during": 0.04993761694389223,
        "orchestrator": 0.04993761694389223,
        "skipping": 0.04993761694389223,
        "recomputation": 0.04993761694389223,
        "inputs": 0.04993761694389223,
        "integration": 0.09987523388778446,
        "tests": 0.04993761694389223,
        "demonstrate": 0.04993761694389223,
        "speed": 0.04993761694389223,
        "up": 0.04993761694389223,
        "by": 0.09987523388778446,
        "reusing": 0.04993761694389223,
        "cached": 0.04993761694389223,
        "correct": 0.04993761694389223,
        "invalidation": 0.04993761694389223,
        "mutate": 0.04993761694389223,
        "documentation": 0.04993761694389223,
        "in": 0.04993761694389223,
        "spec": 0.09987523388778446,
        "md": 0.04993761694389223,
        "updated": 0.04993761694389223,
        "reflect": 0.04993761694389223,
        "caching": 0.04993761694389223,
        "behavior": 0.04993761694389223,
        "034": 0.04993761694389223,
        "service": 0.1498128508316767,
        "mode": 0.09987523388778446,
        "extended": 0.04993761694389223,
        "runtimes": 0.04993761694389223,
        "deliver": 0.04993761694389223,
        "fastapi": 0.09987523388778446,
        "llama": 0.09987523388778446,
        "cpp": 0.09987523388778446,
        "runtime": 0.04993761694389223,
        "adapter": 0.09987523388778446,
        "tree": 0.09987523388778446,
        "sitter": 0.09987523388778446,
        "powered": 0.04993761694389223,
        "symbol": 0.04993761694389223,
        "extraction": 0.04993761694389223,
        "round": 0.04993761694389223,
        "out": 0.04993761694389223,
        "stretch": 0.04993761694389223,
        "010": 0.04993761694389223,
        "git": 0.04993761694389223,
        "publishing": 0.04993761694389223,
        "infrastructure": 0.04993761694389223,
        "017": 0.04993761694389223,
        "entrypoint": 0.04993761694389223,
        "detection": 0.04993761694389223,
        "must": 0.04993761694389223,
        "expose": 0.04993761694389223,
        "endpoints": 0.04993761694389223,
        "for": 0.09987523388778446,
        "init": 0.04993761694389223,
        "update": 0.04993761694389223,
        "dry": 0.04993761694389223,
        "run": 0.04993761694389223,
        "authentication": 0.04993761694389223,
        "disabled": 0.04993761694389223,
        "default": 0.04993761694389223,
        "but": 0.04993761694389223,
        "ready": 0.04993761694389223,
        "future": 0.04993761694389223,
        "hardening": 0.04993761694389223,
        "hooks": 0.04993761694389223,
        "should": 0.04993761694389223,
        "mirror": 0.04993761694389223,
        "llmrunner": 0.04993761694389223,
        "interface": 0.04993761694389223,
        "enforce": 0.04993761694389223,
        "local": 0.04993761694389223,
        "execution": 0.04993761694389223,
        "paths": 0.04993761694389223,
        "limited": 0.04993761694389223,
        "supported": 0.04993761694389223,
        "languages": 0.04993761694389223,
        "python": 0.04993761694389223,
        "java": 0.04993761694389223,
        "typescript": 0.04993761694389223,
        "graceful": 0.04993761694389223,
        "degradation": 0.04993761694389223,
        "parsers": 0.04993761694389223,
        "unavailable": 0.04993761694389223,
        "production": 0.04993761694389223
      },
      "text": "## Story S-033 \u2014 Analyzer Artifact Persistence - **Status:** \u2714 Done - **Story Text:** Persist analyzer outputs alongside embeddings so repeated runs can reuse structured signals without reprocessing unchanged files. - **Dependencies already completed:** S-003 (Repo scanner), S-020 (embedding cache groundwork) - **Constraints:** - Store artifacts under `.docgen/` with versioning to handle schema changes. - Refresh analyzer results incrementally based on file hashes and invalidate when analyzers change. - Keep storage format JSON-serializable and human-auditable. - **Non-Goals:** Remote cache backends or cross-repo sharing. - **Acceptance Criteria:** - Analyzer outputs saved and reloaded during orchestrator runs, skipping recomputation when inputs unchanged. - Integration tests demonstrate speed-up by reusing cached signals and correct invalidation when files mutate. - Documentation in `spec/spec.md` updated to reflect artifact caching behavior. ## Story S-034 \u2014 Service Mode & Extended Runtimes - **Status:** \u2714 Done - **Story Text:** Deliver FastAPI-based service mode, llama.cpp runtime adapter, and tree-sitter powered symbol extraction to round out stretch goals. - **Dependencies already completed:** S-010 (Git publishing infrastructure), S-017 (entrypoint detection groundwork) - **Constraints:** - FastAPI service must expose endpoints for init/update/dry-run with authentication disabled by default but ready for future hardening hooks. - llama.cpp adapter should mirror `LLMRunner` interface and enforce local execution paths. - Tree-sitter integration limited to supported languages (Python/Java/TypeScript) with graceful degradation when parsers unavailable. - **Non-Goals:** Production",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#4",
      "vector": {
        "with": 0.21594472522460836,
        "authentication": 0.07198157507486945,
        "disabled": 0.07198157507486945,
        "by": 0.1439631501497389,
        "default": 0.07198157507486945,
        "but": 0.07198157507486945,
        "ready": 0.07198157507486945,
        "for": 0.1439631501497389,
        "future": 0.07198157507486945,
        "hardening": 0.07198157507486945,
        "hooks": 0.07198157507486945,
        "llama": 0.1439631501497389,
        "cpp": 0.1439631501497389,
        "adapter": 0.1439631501497389,
        "should": 0.07198157507486945,
        "mirror": 0.07198157507486945,
        "llmrunner": 0.07198157507486945,
        "interface": 0.07198157507486945,
        "and": 0.4318894504492167,
        "enforce": 0.07198157507486945,
        "local": 0.07198157507486945,
        "execution": 0.07198157507486945,
        "paths": 0.07198157507486945,
        "tree": 0.1439631501497389,
        "sitter": 0.1439631501497389,
        "integration": 0.07198157507486945,
        "limited": 0.07198157507486945,
        "to": 0.1439631501497389,
        "supported": 0.07198157507486945,
        "languages": 0.07198157507486945,
        "python": 0.07198157507486945,
        "java": 0.07198157507486945,
        "typescript": 0.07198157507486945,
        "graceful": 0.07198157507486945,
        "degradation": 0.07198157507486945,
        "when": 0.07198157507486945,
        "parsers": 0.07198157507486945,
        "unavailable": 0.07198157507486945,
        "non": 0.07198157507486945,
        "goals": 0.1439631501497389,
        "production": 0.07198157507486945,
        "deployment": 0.07198157507486945,
        "tooling": 0.07198157507486945,
        "or": 0.07198157507486945,
        "advanced": 0.07198157507486945,
        "queueing": 0.07198157507486945,
        "acceptance": 0.07198157507486945,
        "criteria": 0.07198157507486945,
        "service": 0.1439631501497389,
        "mode": 0.07198157507486945,
        "passes": 0.07198157507486945,
        "end": 0.1439631501497389,
        "tests": 0.21594472522460836,
        "invoking": 0.07198157507486945,
        "fastapi": 0.07198157507486945,
        "routes": 0.07198157507486945,
        "reusing": 0.07198157507486945,
        "orchestrator": 0.07198157507486945,
        "logic": 0.07198157507486945,
        "covered": 0.07198157507486945,
        "unit": 0.07198157507486945,
        "simulating": 0.07198157507486945,
        "cli": 0.07198157507486945,
        "shared": 0.07198157507486945,
        "configuration": 0.07198157507486945,
        "analyzer": 0.07198157507486945,
        "enriches": 0.07198157507486945,
        "signals": 0.07198157507486945,
        "symbol": 0.07198157507486945,
        "metadata": 0.07198157507486945,
        "associated": 0.07198157507486945,
        "validate": 0.07198157507486945,
        "extraction": 0.07198157507486945,
        "on": 0.07198157507486945,
        "fixtures": 0.07198157507486945,
        "updated": 0.07198157507486945,
        "documentation": 0.07198157507486945,
        "usage": 0.07198157507486945,
        "extended": 0.07198157507486945,
        "runtimes": 0.07198157507486945,
        "in": 0.1439631501497389,
        "docs": 0.07198157507486945,
        "spec": 0.1439631501497389,
        "md": 0.07198157507486945,
        "next": 0.07198157507486945,
        "actions": 0.07198157507486945,
        "execute": 0.07198157507486945,
        "the": 0.07198157507486945,
        "stories": 0.07198157507486945,
        "above": 0.07198157507486945,
        "sequentially": 0.07198157507486945,
        "upon": 0.07198157507486945,
        "completion": 0.07198157507486945,
        "reassess": 0.07198157507486945,
        "remaining": 0.07198157507486945,
        "stretch": 0.07198157507486945,
        "knowledge": 0.07198157507486945,
        "graph": 0.07198157507486945,
        "secret": 0.07198157507486945,
        "scanning": 0.07198157507486945,
        "if": 0.07198157507486945,
        "still": 0.07198157507486945,
        "scope": 0.07198157507486945
      },
      "text": "with authentication disabled by default but ready for future hardening hooks. - llama.cpp adapter should mirror `LLMRunner` interface and enforce local execution paths. - Tree-sitter integration limited to supported languages (Python/Java/TypeScript) with graceful degradation when parsers unavailable. - **Non-Goals:** Production deployment tooling or advanced queueing. - **Acceptance Criteria:** - Service mode passes end-to-end tests invoking FastAPI routes and reusing orchestrator logic. - llama.cpp adapter covered by unit tests simulating CLI and shared configuration. - Tree-sitter analyzer enriches signals with symbol metadata and associated tests validate extraction on fixtures. - Updated documentation for service usage and extended runtimes in `docs/` and `spec/spec.md`. --- **Next Actions:** Execute the stories above sequentially; upon completion reassess remaining stretch goals (knowledge graph, secret scanning) if still in scope.",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/prompt_template.md#0",
      "vector": {
        "below": 0.09417632186960222,
        "is": 0.09417632186960222,
        "a": 0.18835264373920443,
        "drop": 0.04708816093480111,
        "in": 0.18835264373920443,
        "prompt": 0.09417632186960222,
        "template": 0.09417632186960222,
        "you": 0.14126448280440332,
        "can": 0.04708816093480111,
        "reuse": 0.04708816093480111,
        "for": 0.18835264373920443,
        "each": 0.04708816093480111,
        "single": 0.09417632186960222,
        "story": 0.5179697702828122,
        "s": 0.18835264373920443,
        "001": 0.09417632186960222,
        "044": 0.04708816093480111,
        "followed": 0.04708816093480111,
        "by": 0.04708816093480111,
        "two": 0.04708816093480111,
        "filled": 0.04708816093480111,
        "examples": 0.04708816093480111,
        "and": 0.18835264373920443,
        "016": 0.04708816093480111,
        "one": 0.04708816093480111,
        "at": 0.09417632186960222,
        "time": 0.04708816093480111,
        "implementation": 0.04708816093480111,
        "use": 0.09417632186960222,
        "this": 0.09417632186960222,
        "exact": 0.04708816093480111,
        "structure": 0.04708816093480111,
        "every": 0.04708816093480111,
        "replace": 0.04708816093480111,
        "placeholders": 0.04708816093480111,
        "with": 0.04708816093480111,
        "your": 0.04708816093480111,
        "specifics": 0.04708816093480111,
        "before": 0.04708816093480111,
        "sending": 0.04708816093480111,
        "system": 0.04708816093480111,
        "role": 0.04708816093480111,
        "are": 0.04708816093480111,
        "principal": 0.04708816093480111,
        "python": 0.14126448280440332,
        "engineer": 0.04708816093480111,
        "implementing": 0.04708816093480111,
        "tightly": 0.04708816093480111,
        "scoped": 0.04708816093480111,
        "an": 0.04708816093480111,
        "existing": 0.04708816093480111,
        "repository": 0.04708816093480111,
        "must": 0.04708816093480111,
        "implement": 0.04708816093480111,
        "only": 0.04708816093480111,
        "the": 0.14126448280440332,
        "no": 0.14126448280440332,
        "scope": 0.04708816093480111,
        "drift": 0.04708816093480111,
        "future": 0.04708816093480111,
        "stories": 0.04708816093480111,
        "produce": 0.04708816093480111,
        "production": 0.04708816093480111,
        "grade": 0.04708816093480111,
        "cross": 0.04708816093480111,
        "platform": 0.04708816093480111,
        "code": 0.09417632186960222,
        "windows": 0.04708816093480111,
        "macos": 0.04708816093480111,
        "3": 0.09417632186960222,
        "11": 0.09417632186960222,
        "follow": 0.04708816093480111,
        "repo": 0.04708816093480111,
        "conventions": 0.04708816093480111,
        "poetry": 0.09417632186960222,
        "ruff": 0.09417632186960222,
        "black": 0.09417632186960222,
        "mypy": 0.09417632186960222,
        "strict": 0.09417632186960222,
        "pytest": 0.14126448280440332,
        "logging": 0.04708816093480111,
        "prints": 0.04708816093480111,
        "library": 0.04708816093480111,
        "type": 0.04708816093480111,
        "hints": 0.04708816093480111,
        "everywhere": 0.04708816093480111,
        "keep": 0.04708816093480111,
        "audio": 0.09417632186960222,
        "callbacks": 0.04708816093480111,
        "non": 0.09417632186960222,
        "blocking": 0.04708816093480111,
        "prefer": 0.04708816093480111,
        "ring": 0.04708816093480111,
        "buffers": 0.04708816093480111,
        "preallocated": 0.04708816093480111,
        "arrays": 0.04708816093480111,
        "avoid": 0.04708816093480111,
        "os": 0.04708816093480111,
        "specific": 0.04708816093480111,
        "imports": 0.04708816093480111,
        "module": 0.04708816093480111,
        "top": 0.04708816093480111,
        "level": 0.04708816093480111,
        "when": 0.04708816093480111,
        "something": 0.04708816093480111,
        "ambiguous": 0.04708816093480111,
        "make": 0.04708816093480111,
        "smallest": 0.04708816093480111,
        "reasonable": 0.04708816093480111,
        "assumption": 0.04708816093480111,
        "state": 0.04708816093480111,
        "it": 0.04708816093480111,
        "assumptions": 0.04708816093480111,
        "section": 0.04708816093480111,
        "proceed": 0.04708816093480111,
        "context": 0.04708816093480111,
        "id": 0.04708816093480111,
        "story_id": 0.04708816093480111,
        "title": 0.04708816093480111,
        "story_title": 0.04708816093480111,
        "text": 0.04708816093480111,
        "story_text": 0.04708816093480111,
        "dependencies": 0.04708816093480111,
        "already": 0.04708816093480111,
        "completed": 0.04708816093480111,
        "dependencies_list_or_none": 0.04708816093480111,
        "constraints": 0.04708816093480111,
        "from": 0.04708816093480111,
        "prd": 0.04708816093480111,
        "backlog": 0.04708816093480111,
        "key_constraints": 0.04708816093480111,
        "goals": 0.04708816093480111,
        "non_goals": 0.04708816093480111,
        "environment": 0.04708816093480111,
        "tooling": 0.04708816093480111,
        "fixed": 0.04708816093480111,
        "package": 0.04708816093480111,
        "manager": 0.04708816093480111,
        "linters": 0.04708816093480111,
        "formatters": 0.04708816093480111,
        "static": 0.04708816093480111,
        "typing": 0.04708816093480111,
        "tests": 0.04708816093480111,
        "cov": 0.04708816093480111,
        "ui": 0.04708816093480111,
        "pyside6": 0.04708816093480111,
        "if": 0.09417632186960222,
        "relevant": 0.09417632186960222,
        "to": 0.04708816093480111,
        "i": 0.04708816093480111,
        "o": 0.04708816093480111,
        "sounddevice": 0.04708816093480111,
        "portaudio": 0.04708816093480111
      },
      "text": "Below is a **drop\u2011in prompt template** you can reuse for **each single story (S\u2011001 \u2192 S\u2011044)**, followed by **two filled examples** (for S\u2011001 and S\u2011016). --- ## \ud83d\udd27 One\u2011Story\u2011At\u2011A\u2011Time Implementation Prompt (Template) > **Use this exact structure for every story.** Replace `{{\u2026}}` placeholders with your specifics before sending. --- **SYSTEM / ROLE** You are a **Principal Python engineer** implementing a single, tightly scoped story in an existing repository. You must: * Implement **only the story below** (no scope drift, no future stories). * Produce production\u2011grade, cross\u2011platform code (Windows/macOS), Python 3.11. * Follow repo conventions: Poetry, ruff, black, mypy (strict), pytest. * Use logging (no prints) in library code, and type hints everywhere. * Keep audio callbacks non\u2011blocking; prefer ring buffers and preallocated arrays. * Avoid OS\u2011specific imports at module top level. * When something is ambiguous, **make the smallest reasonable assumption**, state it in the *Assumptions* section, and proceed. --- ### Story Context * **Story ID:** {{STORY_ID}} * **Story Title:** {{STORY_TITLE}} * **Story Text:** {{STORY_TEXT}} * **Dependencies already completed:** {{DEPENDENCIES_LIST_OR_NONE}} * **Constraints from PRD/backlog:** {{KEY_CONSTRAINTS}} * **Non\u2011Goals for this story:** {{NON_GOALS}} ### Environment & Tooling (fixed) * **Python:** 3.11 * **Package manager:** Poetry * **Linters/formatters:** ruff, black * **Static typing:** mypy (strict) * **Tests:** pytest + pytest\u2011cov * **UI:** PySide6 (if relevant to story) * **Audio I/O:** sounddevice/PortAudio (if relevant)",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#1",
      "vector": {
        "non_goals": 0.05581455721859476,
        "environment": 0.05581455721859476,
        "tooling": 0.05581455721859476,
        "fixed": 0.05581455721859476,
        "python": 0.16744367165578428,
        "3": 0.11162911443718952,
        "11": 0.05581455721859476,
        "package": 0.05581455721859476,
        "manager": 0.05581455721859476,
        "poetry": 0.05581455721859476,
        "linters": 0.05581455721859476,
        "formatters": 0.05581455721859476,
        "ruff": 0.11162911443718952,
        "black": 0.11162911443718952,
        "static": 0.05581455721859476,
        "typing": 0.05581455721859476,
        "mypy": 0.11162911443718952,
        "strict": 0.05581455721859476,
        "tests": 0.11162911443718952,
        "pytest": 0.16744367165578428,
        "cov": 0.05581455721859476,
        "ui": 0.05581455721859476,
        "pyside6": 0.05581455721859476,
        "if": 0.2790727860929738,
        "relevant": 0.2790727860929738,
        "to": 0.16744367165578428,
        "story": 0.05581455721859476,
        "audio": 0.05581455721859476,
        "i": 0.11162911443718952,
        "o": 0.05581455721859476,
        "sounddevice": 0.05581455721859476,
        "portaudio": 0.05581455721859476,
        "ml": 0.05581455721859476,
        "runtime": 0.05581455721859476,
        "onnxruntime": 0.05581455721859476,
        "current": 0.05581455721859476,
        "repository": 0.05581455721859476,
        "snapshot": 0.05581455721859476,
        "paste": 0.11162911443718952,
        "fresh": 0.05581455721859476,
        "snapshots": 0.05581455721859476,
        "so": 0.05581455721859476,
        "the": 0.11162911443718952,
        "model": 0.05581455721859476,
        "does": 0.05581455721859476,
        "not": 0.05581455721859476,
        "hallucinate": 0.05581455721859476,
        "keep": 0.05581455721859476,
        "these": 0.05581455721859476,
        "short": 0.11162911443718952,
        "but": 0.05581455721859476,
        "sufficient": 0.05581455721859476,
        "root": 0.05581455721859476,
        "tree": 0.11162911443718952,
        "a": 0.05581455721859476,
        "git": 0.11162911443718952,
        "or": 0.11162911443718952,
        "ls": 0.05581455721859476,
        "files": 0.22325822887437904,
        "repo_tree": 0.05581455721859476,
        "key": 0.05581455721859476,
        "only": 0.05581455721859476,
        "sections": 0.11162911443718952,
        "path": 0.11162911443718952,
        "file1": 0.05581455721859476,
        "file1_relevant_snippet": 0.05581455721859476,
        "file2": 0.05581455721859476,
        "file2_relevant_snippet": 0.05581455721859476,
        "pinned": 0.05581455721859476,
        "pyproject": 0.05581455721859476,
        "toml": 0.11162911443718952,
        "parts": 0.05581455721859476,
        "pyproject_snippet": 0.05581455721859476,
        "acceptance": 0.05581455721859476,
        "criteria": 0.05581455721859476,
        "definition": 0.05581455721859476,
        "of": 0.16744367165578428,
        "done": 0.05581455721859476,
        "functional": 0.05581455721859476,
        "functional_doc": 0.05581455721859476,
        "quality": 0.05581455721859476,
        "pass": 0.05581455721859476,
        "passes": 0.05581455721859476,
        "with": 0.11162911443718952,
        "90": 0.05581455721859476,
        "coverage": 0.05581455721859476,
        "for": 0.05581455721859476,
        "new": 0.05581455721859476,
        "code": 0.05581455721859476,
        "cross": 0.05581455721859476,
        "platform": 0.05581455721859476,
        "no": 0.11162911443718952,
        "os": 0.05581455721859476,
        "specific": 0.05581455721859476,
        "breakage": 0.05581455721859476,
        "guarded": 0.05581455721859476,
        "imports": 0.05581455721859476,
        "where": 0.05581455721859476,
        "needed": 0.05581455721859476,
        "performance": 0.05581455721859476,
        "applicable": 0.05581455721859476,
        "perf_requirements": 0.05581455721859476,
        "docs": 0.11162911443718952,
        "inline": 0.05581455721859476,
        "docstrings": 0.05581455721859476,
        "readme": 0.05581455721859476,
        "module": 0.05581455721859476,
        "level": 0.05581455721859476,
        "updated": 0.05581455721859476,
        "user": 0.05581455721859476,
        "facing": 0.05581455721859476,
        "unrelated": 0.05581455721859476,
        "refactors": 0.05581455721859476,
        "minimal": 0.05581455721859476,
        "diff": 0.05581455721859476,
        "outside": 0.05581455721859476,
        "touched": 0.05581455721859476,
        "scope": 0.05581455721859476,
        "deliverables": 0.05581455721859476,
        "output": 0.05581455721859476,
        "contract": 0.05581455721859476,
        "return": 0.05581455721859476,
        "following": 0.05581455721859476,
        "in": 0.05581455721859476,
        "order": 0.05581455721859476,
        "exact": 0.11162911443718952,
        "headings": 0.05581455721859476,
        "1": 0.05581455721859476,
        "assumptions": 0.11162911443718952,
        "decisions": 0.05581455721859476,
        "bullet": 0.05581455721859476,
        "list": 0.05581455721859476,
        "any": 0.05581455721859476,
        "reasonable": 0.05581455721859476,
        "you": 0.11162911443718952,
        "made": 0.05581455721859476,
        "2": 0.05581455721859476,
        "planned": 0.05581455721859476,
        "changes": 0.05581455721859476,
        "tl": 0.05581455721859476,
        "dr": 0.05581455721859476,
        "summary": 0.05581455721859476,
        "what": 0.05581455721859476,
        "will": 0.05581455721859476,
        "add": 0.05581455721859476,
        "modify": 0.05581455721859476,
        "and": 0.11162911443718952,
        "why": 0.05581455721859476,
        "full": 0.05581455721859476,
        "test": 0.05581455721859476,
        "covering": 0.05581455721859476,
        "success": 0.05581455721859476,
        "edge": 0.05581455721859476,
        "cases": 0.05581455721859476,
        "error": 0.05581455721859476,
        "paths": 0.05581455721859476,
        "4": 0.05581455721859476,
        "validation": 0.05581455721859476,
        "steps": 0.05581455721859476,
        "local": 0.05581455721859476
      },
      "text": "{{NON_GOALS}} ### Environment & Tooling (fixed) * **Python:** 3.11 * **Package manager:** Poetry * **Linters/formatters:** ruff, black * **Static typing:** mypy (strict) * **Tests:** pytest + pytest\u2011cov * **UI:** PySide6 (if relevant to story) * **Audio I/O:** sounddevice/PortAudio (if relevant) * **ML runtime:** onnxruntime (if relevant) ### Current Repository Snapshot > Paste fresh snapshots so the model does not hallucinate. Keep these short but sufficient. * **Root tree (`tree -a -I .git` or `git ls-files`):** ``` {{REPO_TREE}} ``` * **Key files (paste only relevant sections):** * `{{PATH/TO/FILE1}}` ```python {{FILE1_RELEVANT_SNIPPET}} ``` * `{{PATH/TO/FILE2}}` ```python {{FILE2_RELEVANT_SNIPPET}} ``` * **Pinned pyproject.toml (relevant parts):** ```toml {{PYPROJECT_SNIPPET}} ``` ### Acceptance Criteria (Definition of Done) * Functional: {{FUNCTIONAL_DOC}} * Quality: **ruff/black/mypy** pass; **pytest** passes with **\u2265 90%** coverage for new code. * Cross\u2011platform: No OS\u2011specific breakage; guarded imports where needed. * Performance (if applicable): {{PERF_REQUIREMENTS}} * Docs: Inline docstrings; README or module\u2011level docs updated if user\u2011facing. * No unrelated refactors; minimal diff outside touched scope. ### Deliverables \u2014 **Output Contract** Return the following sections **in order**, with exact headings: 1. **Assumptions & Decisions** \u2013 bullet list of any reasonable assumptions you made. 2. **Planned Changes (TL;DR)** \u2013 short summary of what files you will add/modify and why. 3. **Tests** \u2013 full test files covering success, edge cases, and error paths. 4. **Validation Steps (Local)** \u2013 exact",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#2",
      "vector": {
        "of": 0.1487044791289829,
        "any": 0.04956815970966096,
        "reasonable": 0.04956815970966096,
        "assumptions": 0.04956815970966096,
        "you": 0.09913631941932192,
        "made": 0.04956815970966096,
        "2": 0.04956815970966096,
        "planned": 0.04956815970966096,
        "changes": 0.04956815970966096,
        "tl": 0.04956815970966096,
        "dr": 0.04956815970966096,
        "short": 0.04956815970966096,
        "summary": 0.04956815970966096,
        "what": 0.04956815970966096,
        "files": 0.1487044791289829,
        "will": 0.04956815970966096,
        "add": 0.04956815970966096,
        "modify": 0.04956815970966096,
        "and": 0.3965452776772877,
        "why": 0.04956815970966096,
        "3": 0.04956815970966096,
        "tests": 0.04956815970966096,
        "full": 0.04956815970966096,
        "test": 0.09913631941932192,
        "covering": 0.04956815970966096,
        "success": 0.04956815970966096,
        "edge": 0.04956815970966096,
        "cases": 0.04956815970966096,
        "error": 0.04956815970966096,
        "paths": 0.04956815970966096,
        "4": 0.04956815970966096,
        "validation": 0.04956815970966096,
        "steps": 0.04956815970966096,
        "local": 0.04956815970966096,
        "exact": 0.04956815970966096,
        "commands": 0.04956815970966096,
        "to": 0.09913631941932192,
        "run": 0.04956815970966096,
        "poetry": 0.04956815970966096,
        "install": 0.04956815970966096,
        "lint": 0.04956815970966096,
        "type": 0.04956815970966096,
        "expected": 0.04956815970966096,
        "outputs": 0.04956815970966096,
        "5": 0.04956815970966096,
        "conventional": 0.04956815970966096,
        "commit": 0.09913631941932192,
        "message": 0.09913631941932192,
        "a": 0.24784079854830482,
        "single": 0.04956815970966096,
        "with": 0.09913631941932192,
        "the": 0.24784079854830482,
        "story": 0.24784079854830482,
        "description": 0.04956815970966096,
        "ex": 0.04956815970966096,
        "s": 0.1487044791289829,
        "001": 0.1487044791289829,
        "implemented": 0.04956815970966096,
        "get": 0.04956815970966096,
        "customers": 0.04956815970966096,
        "endpoint": 0.04956815970966096,
        "implementation": 0.04956815970966096,
        "hints": 0.04956815970966096,
        "if": 0.1487044791289829,
        "helpful": 0.04956815970966096,
        "keep": 0.04956815970966096,
        "per": 0.04956815970966096,
        "frame": 0.04956815970966096,
        "allocations": 0.04956815970966096,
        "near": 0.04956815970966096,
        "zero": 0.04956815970966096,
        "in": 0.19827263883864385,
        "audio": 0.04956815970966096,
        "callbacks": 0.04956815970966096,
        "use": 0.04956815970966096,
        "dependency": 0.04956815970966096,
        "inversion": 0.04956815970966096,
        "define": 0.04956815970966096,
        "clear": 0.04956815970966096,
        "interfaces": 0.04956815970966096,
        "core": 0.1487044791289829,
        "or": 0.1487044791289829,
        "ml": 0.04956815970966096,
        "where": 0.04956815970966096,
        "specified": 0.04956815970966096,
        "backlog": 0.04956815970966096,
        "an": 0.04956815970966096,
        "external": 0.04956815970966096,
        "binary": 0.04956815970966096,
        "model": 0.04956815970966096,
        "is": 0.04956815970966096,
        "out": 0.04956815970966096,
        "scope": 0.04956815970966096,
        "for": 0.04956815970966096,
        "this": 0.09913631941932192,
        "provide": 0.04956815970966096,
        "deterministic": 0.04956815970966096,
        "stub": 0.04956815970966096,
        "todo": 0.04956815970966096,
        "feature": 0.04956815970966096,
        "flag": 0.04956815970966096,
        "important": 0.04956815970966096,
        "guardrails": 0.04956815970966096,
        "do": 0.1487044791289829,
        "not": 0.1487044791289829,
        "implement": 0.04956815970966096,
        "future": 0.04956815970966096,
        "stories": 0.04956815970966096,
        "introduce": 0.04956815970966096,
        "new": 0.04956815970966096,
        "dependencies": 0.04956815970966096,
        "without": 0.04956815970966096,
        "updating": 0.04956815970966096,
        "pyproject": 0.04956815970966096,
        "toml": 0.04956815970966096,
        "justifying": 0.04956815970966096,
        "them": 0.04956815970966096,
        "change": 0.04956815970966096,
        "licensing": 0.04956815970966096,
        "repo": 0.04956815970966096,
        "name": 0.04956815970966096,
        "ci": 0.04956815970966096,
        "workflows": 0.04956815970966096,
        "unless": 0.04956815970966096,
        "explicitly": 0.04956815970966096,
        "requested": 0.04956815970966096,
        "output": 0.04956815970966096,
        "would": 0.04956815970966096,
        "exceed": 0.04956815970966096,
        "limits": 0.04956815970966096,
        "split": 0.04956815970966096,
        "patch": 0.04956815970966096,
        "file": 0.04956815970966096,
        "contents": 0.04956815970966096,
        "by": 0.04956815970966096,
        "directory": 0.04956815970966096,
        "but": 0.04956815970966096,
        "still": 0.04956815970966096,
        "include": 0.04956815970966096,
        "all": 0.04956815970966096,
        "required": 0.04956815970966096,
        "example": 0.04956815970966096,
        "instantiation": 0.04956815970966096,
        "1": 0.04956815970966096,
        "initialize": 0.09913631941932192,
        "repository": 0.09913631941932192,
        "metadata": 0.04956815970966096,
        "copy": 0.04956815970966096,
        "adjust": 0.04956815970966096,
        "paste": 0.04956815970966096,
        "following": 0.04956815970966096,
        "as": 0.04956815970966096,
        "real": 0.04956815970966096,
        "prompt": 0.04956815970966096,
        "your": 0.04956815970966096,
        "llm": 0.04956815970966096,
        "id": 0.04956815970966096,
        "title": 0.04956815970966096
      },
      "text": "of any reasonable assumptions you made. 2. **Planned Changes (TL;DR)** \u2013 short summary of what files you will add/modify and why. 3. **Tests** \u2013 full test files covering success, edge cases, and error paths. 4. **Validation Steps (Local)** \u2013 exact commands to run (Poetry install, lint, type, test) and expected outputs. 5. **Conventional Commit Message** \u2013 a single commit with the story and a description, ex: \"S-001: Implemented the GET customers endpoint\" ### Implementation Hints (if helpful) * Keep per\u2011frame allocations near zero in audio callbacks. * Use dependency inversion: define clear interfaces in `core/` or `ml/` where specified in the backlog. * If an external binary or model is out of scope for this story, provide a deterministic stub with TODO and a feature flag. ### Important Guardrails * **Do not** implement future stories. * **Do not** introduce new dependencies without updating `pyproject.toml` and justifying them. * **Do not** change licensing, repo name, or CI workflows unless explicitly requested in this story. * If output would exceed message limits, **split the Patch and File Contents by directory** but still include all required files. --- ## \u2705 Example Instantiation #1 \u2014 S\u2011001 (Initialize repository & core metadata) > Copy, adjust, and paste the following as a real prompt to your LLM. **Story ID:** S\u2011001 **Story Title:** Initialize repository & core",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#3",
      "vector": {
        "include": 0.09611386626644254,
        "all": 0.04805693313322127,
        "required": 0.04805693313322127,
        "files": 0.04805693313322127,
        "example": 0.09611386626644254,
        "instantiation": 0.09611386626644254,
        "1": 0.09611386626644254,
        "s": 0.19222773253288508,
        "001": 0.09611386626644254,
        "initialize": 0.09611386626644254,
        "repository": 0.14417079939966382,
        "core": 0.09611386626644254,
        "metadata": 0.14417079939966382,
        "copy": 0.04805693313322127,
        "adjust": 0.04805693313322127,
        "and": 0.09611386626644254,
        "paste": 0.09611386626644254,
        "the": 0.19222773253288508,
        "following": 0.04805693313322127,
        "as": 0.09611386626644254,
        "a": 0.04805693313322127,
        "real": 0.04805693313322127,
        "prompt": 0.04805693313322127,
        "to": 0.04805693313322127,
        "your": 0.04805693313322127,
        "llm": 0.04805693313322127,
        "story": 0.28834159879932764,
        "id": 0.09611386626644254,
        "title": 0.09611386626644254,
        "text": 0.09611386626644254,
        "create": 0.04805693313322127,
        "poetry": 0.19222773253288508,
        "project": 0.09611386626644254,
        "voice": 0.09611386626644254,
        "xform": 0.09611386626644254,
        "add": 0.14417079939966382,
        "license": 0.04805693313322127,
        "apache": 0.04805693313322127,
        "2": 0.09611386626644254,
        "0": 0.14417079939966382,
        "readme": 0.14417079939966382,
        "with": 0.04805693313322127,
        "purpose": 0.09611386626644254,
        "install": 0.14417079939966382,
        "quickstart": 0.09611386626644254,
        "contributing": 0.04805693313322127,
        "editorconfig": 0.04805693313322127,
        "gitattributes": 0.04805693313322127,
        "gitignore": 0.09611386626644254,
        "pyproject": 0.09611386626644254,
        "toml": 0.09611386626644254,
        "python": 0.24028466566610635,
        "3": 0.14417079939966382,
        "11": 0.14417079939966382,
        "dependencies": 0.04805693313322127,
        "already": 0.04805693313322127,
        "completed": 0.04805693313322127,
        "none": 0.04805693313322127,
        "constraints": 0.04805693313322127,
        "use": 0.09611386626644254,
        "repo": 0.04805693313322127,
        "name": 0.09611386626644254,
        "keep": 0.09611386626644254,
        "docs": 0.04805693313322127,
        "concise": 0.04805693313322127,
        "but": 0.04805693313322127,
        "actionable": 0.04805693313322127,
        "non": 0.04805693313322127,
        "goals": 0.04805693313322127,
        "no": 0.14417079939966382,
        "code": 0.04805693313322127,
        "beyond": 0.04805693313322127,
        "scaffolding": 0.04805693313322127,
        "ci": 0.09611386626644254,
        "package": 0.04805693313322127,
        "layout": 0.04805693313322127,
        "yet": 0.09611386626644254,
        "current": 0.04805693313322127,
        "snapshot": 0.04805693313322127,
        "empty": 0.09611386626644254,
        "directory": 0.04805693313322127,
        "acceptance": 0.04805693313322127,
        "criteria": 0.04805693313322127,
        "definition": 0.04805693313322127,
        "of": 0.04805693313322127,
        "done": 0.04805693313322127,
        "succeeds": 0.04805693313322127,
        "on": 0.04805693313322127,
        "macos": 0.09611386626644254,
        "windows": 0.09611386626644254,
        "md": 0.04805693313322127,
        "includes": 0.04805693313322127,
        "instructions": 0.04805693313322127,
        "placeholder": 0.04805693313322127,
        "running": 0.04805693313322127,
        "run": 0.04805693313322127,
        "v": 0.04805693313322127,
        "prints": 0.04805693313322127,
        "x": 0.04805693313322127,
        "deliverables": 0.09611386626644254,
        "output": 0.04805693313322127,
        "contract": 0.04805693313322127,
        "then": 0.04805693313322127,
        "list": 0.04805693313322127,
        "from": 0.04805693313322127,
        "template": 0.04805693313322127,
        "implementation": 0.04805693313322127,
        "hints": 0.04805693313322127,
        "standard": 0.04805693313322127,
        "for": 0.04805693313322127,
        "version": 0.04805693313322127,
        "authors": 0.04805693313322127,
        "in": 0.04805693313322127,
        "important": 0.04805693313322127,
        "guardrails": 0.04805693313322127,
        "do": 0.04805693313322127,
        "not": 0.04805693313322127,
        "or": 0.04805693313322127,
        "tests": 0.04805693313322127,
        "succinct": 0.04805693313322127,
        "section": 0.04805693313322127,
        "headers": 0.04805693313322127,
        "placeholders": 0.04805693313322127,
        "016": 0.09611386626644254,
        "model": 0.09611386626644254,
        "registry": 0.09611386626644254,
        "provider": 0.09611386626644254,
        "detection": 0.09611386626644254,
        "implement": 0.04805693313322127,
        "ml": 0.04805693313322127,
        "runtime": 0.14417079939966382,
        "onnx_loader": 0.04805693313322127,
        "py": 0.04805693313322127,
        "that": 0.04805693313322127,
        "chooses": 0.04805693313322127,
        "best": 0.04805693313322127,
        "onnx": 0.04805693313322127,
        "ep": 0.04805693313322127,
        "at": 0.04805693313322127,
        "tensorrt": 0.04805693313322127,
        "directml": 0.04805693313322127
      },
      "text": "include all required files. --- ## \u2705 Example Instantiation #1 \u2014 S\u2011001 (Initialize repository & core metadata) > Copy, adjust, and paste the following as a real prompt to your LLM. **Story ID:** S\u2011001 **Story Title:** Initialize repository & core metadata **Story Text:** Create Poetry project `voice-xform`; add LICENSE (Apache\u20112.0), README with purpose/install/quickstart, CONTRIBUTING, .editorconfig, .gitattributes, .gitignore, pyproject.toml (Python 3.11). **Dependencies already completed:** none **Constraints:** Use Poetry; repo name `voice-xform`; Python 3.11; keep docs concise but actionable. **Non\u2011Goals:** No code beyond scaffolding; no CI; no package layout yet. **Current Repository Snapshot** *(empty directory)* ``` (Empty) ``` **Acceptance Criteria (Definition of Done)** * `poetry install` succeeds on macOS & Windows. * `README.md` includes purpose, install instructions, and placeholder quickstart. * Running `poetry run python -V` prints Python 3.11.x. **Deliverables \u2014 Output Contract** (then paste the **Deliverables** list from the template) **Implementation Hints** * Use standard `.gitignore` for Python + macOS + Windows. * Include project metadata (name, version `0.1.0`, authors) in `pyproject.toml`. **Important Guardrails** * Do not add CI or tests yet. * Keep README succinct; add section headers as placeholders. --- ## \u2705 Example Instantiation #2 \u2014 S\u2011016 (Model registry & provider detection) **Story ID:** S\u2011016 **Story Title:** Model registry & provider detection **Story Text:** Implement `ml/runtime/onnx_loader.py` that chooses the best ONNX Runtime EP at runtime (TensorRT > DirectML >",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#4",
      "vector": {
        "example": 0.045267873021259265,
        "instantiation": 0.045267873021259265,
        "2": 0.045267873021259265,
        "s": 0.22633936510629632,
        "016": 0.09053574604251853,
        "model": 0.18107149208503706,
        "registry": 0.18107149208503706,
        "provider": 0.18107149208503706,
        "detection": 0.09053574604251853,
        "story": 0.1358036190637778,
        "id": 0.045267873021259265,
        "title": 0.045267873021259265,
        "text": 0.045267873021259265,
        "implement": 0.09053574604251853,
        "ml": 0.1358036190637778,
        "runtime": 0.18107149208503706,
        "onnx_loader": 0.09053574604251853,
        "py": 0.2716072381275556,
        "that": 0.09053574604251853,
        "chooses": 0.045267873021259265,
        "the": 0.18107149208503706,
        "best": 0.045267873021259265,
        "onnx": 0.045267873021259265,
        "ep": 0.1358036190637778,
        "at": 0.09053574604251853,
        "tensorrt": 0.045267873021259265,
        "directml": 0.045267873021259265,
        "cpu": 0.09053574604251853,
        "mps": 0.045267873021259265,
        "coreml": 0.045267873021259265,
        "on": 0.22633936510629632,
        "macos": 0.1358036190637778,
        "for": 0.09053574604251853,
        "paths": 0.045267873021259265,
        "versioning": 0.045267873021259265,
        "provide": 0.045267873021259265,
        "tests": 0.1358036190637778,
        "monkeypatch": 0.09053574604251853,
        "availability": 0.1358036190637778,
        "dependencies": 0.09053574604251853,
        "already": 0.045267873021259265,
        "completed": 0.045267873021259265,
        "004": 0.045267873021259265,
        "package": 0.045267873021259265,
        "layout": 0.045267873021259265,
        "002": 0.045267873021259265,
        "tooling": 0.045267873021259265,
        "003": 0.045267873021259265,
        "ci": 0.045267873021259265,
        "constraints": 0.045267873021259265,
        "no": 0.18107149208503706,
        "gpu": 0.045267873021259265,
        "specific": 0.045267873021259265,
        "imports": 0.045267873021259265,
        "module": 0.045267873021259265,
        "top": 0.045267873021259265,
        "level": 0.045267873021259265,
        "log": 0.045267873021259265,
        "chosen": 0.045267873021259265,
        "and": 0.18107149208503706,
        "fallbacks": 0.045267873021259265,
        "non": 0.045267873021259265,
        "goals": 0.045267873021259265,
        "real": 0.045267873021259265,
        "files": 0.09053574604251853,
        "yet": 0.045267873021259265,
        "inference": 0.045267873021259265,
        "calls": 0.045267873021259265,
        "current": 0.045267873021259265,
        "repository": 0.045267873021259265,
        "snapshot": 0.045267873021259265,
        "voice": 0.09053574604251853,
        "xform": 0.09053574604251853,
        "app": 0.045267873021259265,
        "core": 0.045267873021259265,
        "version": 0.09053574604251853,
        "__init__": 0.09053574604251853,
        "empty": 0.045267873021259265,
        "placeholder": 0.045267873021259265,
        "pyproject": 0.09053574604251853,
        "toml": 0.1358036190637778,
        "key": 0.045267873021259265,
        "relevant": 0.045267873021259265,
        "parts": 0.045267873021259265,
        "tool": 0.09053574604251853,
        "poetry": 0.09053574604251853,
        "name": 0.045267873021259265,
        "0": 0.1358036190637778,
        "1": 0.09053574604251853,
        "python": 0.045267873021259265,
        "3": 0.045267873021259265,
        "11": 0.045267873021259265,
        "onnxruntime": 0.09053574604251853,
        "18": 0.045267873021259265,
        "acceptance": 0.045267873021259265,
        "criteria": 0.045267873021259265,
        "definition": 0.045267873021259265,
        "of": 0.045267873021259265,
        "done": 0.045267873021259265,
        "select_providers": 0.045267873021259265,
        "returns": 0.045267873021259265,
        "an": 0.045267873021259265,
        "ordered": 0.045267873021259265,
        "list": 0.1358036190637778,
        "based": 0.045267873021259265,
        "platform": 0.09053574604251853,
        "logs": 0.045267873021259265,
        "contain": 0.045267873021259265,
        "selected": 0.045267873021259265,
        "reason": 0.045267873021259265,
        "fallback": 0.045267873021259265,
        "simulate": 0.045267873021259265,
        "get_available_providers": 0.045267873021259265,
        "assert": 0.045267873021259265,
        "selection": 0.045267873021259265,
        "order": 0.045267873021259265,
        "across": 0.045267873021259265,
        "windows": 0.09053574604251853,
        "linux": 0.045267873021259265,
        "mypy": 0.045267873021259265,
        "ruff": 0.045267873021259265,
        "pytest": 0.045267873021259265,
        "pass": 0.045267873021259265,
        "deliverables": 0.09053574604251853,
        "output": 0.045267873021259265,
        "contract": 0.045267873021259265,
        "then": 0.045267873021259265,
        "paste": 0.045267873021259265,
        "from": 0.045267873021259265,
        "template": 0.045267873021259265,
        "implementation": 0.045267873021259265,
        "hints": 0.045267873021259265,
        "detect": 0.045267873021259265,
        "os": 0.045267873021259265,
        "with": 0.045267873021259265,
        "system": 0.045267873021259265,
        "prefer": 0.045267873021259265,
        "tensorrtexecutionprovider": 0.045267873021259265,
        "nvidia": 0.045267873021259265,
        "dmlexecutionprovider": 0.045267873021259265,
        "coremlexecutionprovider": 0.045267873021259265,
        "or": 0.045267873021259265,
        "mpsexecutionprovider": 0.045267873021259265,
        "else": 0.045267873021259265,
        "expose": 0.045267873021259265,
        "a": 0.045267873021259265,
        "helper": 0.045267873021259265,
        "create_session": 0.045267873021259265,
        "path": 0.045267873021259265,
        "str": 0.09053574604251853,
        "preferred": 0.045267873021259265,
        "none": 0.045267873021259265,
        "inferencesession": 0.045267873021259265,
        "important": 0.045267873021259265,
        "guardrails": 0.045267873021259265,
        "actual": 0.045267873021259265
      },
      "text": "--- ## \u2705 Example Instantiation #2 \u2014 S\u2011016 (Model registry & provider detection) **Story ID:** S\u2011016 **Story Title:** Model registry & provider detection **Story Text:** Implement `ml/runtime/onnx_loader.py` that chooses the best ONNX Runtime EP at runtime (TensorRT > DirectML > CPU; MPS/CoreML on macOS). Implement `ml/registry.py` for model paths/versioning. Provide tests that monkeypatch provider availability. **Dependencies already completed:** S\u2011004 (package layout), S\u2011002 (tooling), S\u2011003 (CI) **Constraints:** No GPU\u2011specific imports at module top level. Log chosen EP and fallbacks. **Non\u2011Goals:** No real model files yet; no inference calls. **Current Repository Snapshot** ``` voice-xform/ app/ core/ version.py ml/ __init__.py runtime/ __init__.py registry.py # (empty placeholder) tests/ pyproject.toml ``` **Key files:** `pyproject.toml` (relevant parts) ```toml [tool.poetry] name = \"voice-xform\" version = \"0.1.0\" [tool.poetry.dependencies] python = \"^3.11\" onnxruntime = \"^1.18.0\" ``` **Acceptance Criteria (Definition of Done)** * `onnx_loader.select_providers()` returns an ordered provider list based on platform and availability. * Logs contain the selected EP and reason for fallback. * Tests simulate availability (monkeypatch `onnxruntime.get_available_providers`) and assert selection order across Windows/macOS/Linux. * mypy/ruff/pytest pass. **Deliverables \u2014 Output Contract** (then paste the **Deliverables** list from the template) **Implementation Hints** * Detect OS with `platform.system()`. * Prefer `\"TensorrtExecutionProvider\"` on NVIDIA, `\"DmlExecutionProvider\"` on Windows, `\"CoreMLExecutionProvider\"` or `\"MPSExecutionProvider\"` on macOS, else CPU. * Expose a helper `create_session(path: str, preferred: list[str] | None) -> InferenceSession`. **Important Guardrails** * No actual",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#5",
      "vector": {
        "template": 0.08971226080325131,
        "implementation": 0.04485613040162566,
        "hints": 0.04485613040162566,
        "detect": 0.04485613040162566,
        "os": 0.04485613040162566,
        "with": 0.08971226080325131,
        "platform": 0.08971226080325131,
        "system": 0.08971226080325131,
        "prefer": 0.04485613040162566,
        "tensorrtexecutionprovider": 0.04485613040162566,
        "on": 0.17942452160650263,
        "nvidia": 0.04485613040162566,
        "dmlexecutionprovider": 0.04485613040162566,
        "windows": 0.08971226080325131,
        "coremlexecutionprovider": 0.04485613040162566,
        "or": 0.08971226080325131,
        "mpsexecutionprovider": 0.04485613040162566,
        "macos": 0.08971226080325131,
        "else": 0.04485613040162566,
        "cpu": 0.04485613040162566,
        "expose": 0.04485613040162566,
        "a": 0.26913678240975397,
        "helper": 0.04485613040162566,
        "create_session": 0.04485613040162566,
        "path": 0.04485613040162566,
        "str": 0.08971226080325131,
        "preferred": 0.04485613040162566,
        "list": 0.04485613040162566,
        "none": 0.04485613040162566,
        "inferencesession": 0.04485613040162566,
        "important": 0.04485613040162566,
        "guardrails": 0.04485613040162566,
        "no": 0.08971226080325131,
        "actual": 0.04485613040162566,
        "model": 0.04485613040162566,
        "downloads": 0.04485613040162566,
        "global": 0.04485613040162566,
        "provider": 0.04485613040162566,
        "checks": 0.08971226080325131,
        "at": 0.04485613040162566,
        "import": 0.04485613040162566,
        "time": 0.08971226080325131,
        "run": 0.17942452160650263,
        "inside": 0.04485613040162566,
        "functions": 0.04485613040162566,
        "verification": 0.04485613040162566,
        "checklist": 0.04485613040162566,
        "you": 0.13456839120487699,
        "this": 0.04485613040162566,
        "after": 0.04485613040162566,
        "each": 0.08971226080325131,
        "story": 0.26913678240975397,
        "locally": 0.04485613040162566,
        "and": 0.3139929128113796,
        "produce": 0.04485613040162566,
        "these": 0.04485613040162566,
        "commands": 0.04485613040162566,
        "in": 0.13456839120487699,
        "the": 0.4485613040162566,
        "validation": 0.04485613040162566,
        "steps": 0.04485613040162566,
        "section": 0.08971226080325131,
        "bash": 0.04485613040162566,
        "make": 0.04485613040162566,
        "all": 0.04485613040162566,
        "confirm": 0.04485613040162566,
        "tests": 0.08971226080325131,
        "pass": 0.04485613040162566,
        "coverage": 0.04485613040162566,
        "for": 0.13456839120487699,
        "new": 0.04485613040162566,
        "code": 0.04485613040162566,
        "95": 0.04485613040162566,
        "spot": 0.04485613040162566,
        "check": 0.04485613040162566,
        "specific": 0.04485613040162566,
        "issues": 0.08971226080325131,
        "if": 0.13456839120487699,
        "touches": 0.04485613040162566,
        "features": 0.04485613040162566,
        "command": 0.04485613040162566,
        "review": 0.08971226080325131,
        "do": 0.04485613040162566,
        "pr": 0.04485613040162566,
        "of": 0.04485613040162566,
        "diff": 0.04485613040162566,
        "fix": 0.04485613040162566,
        "any": 0.04485613040162566,
        "find": 0.04485613040162566,
        "tips": 0.04485613040162566,
        "working": 0.04485613040162566,
        "always": 0.04485613040162566,
        "update": 0.04485613040162566,
        "current": 0.04485613040162566,
        "repository": 0.04485613040162566,
        "snapshot": 0.04485613040162566,
        "before": 0.04485613040162566,
        "so": 0.04485613040162566,
        "llm": 0.08971226080325131,
        "is": 0.13456839120487699,
        "grounded": 0.04485613040162566,
        "reality": 0.04485613040162566,
        "keep": 0.04485613040162566,
        "acceptance": 0.08971226080325131,
        "criteria": 0.08971226080325131,
        "crisp": 0.04485613040162566,
        "testable": 0.04485613040162566,
        "output": 0.04485613040162566,
        "contract": 0.04485613040162566,
        "ensures": 0.04485613040162566,
        "get": 0.04485613040162566,
        "git": 0.04485613040162566,
        "apply": 0.04485613040162566,
        "able": 0.04485613040162566,
        "patch": 0.04485613040162566,
        "full": 0.04485613040162566,
        "file": 0.04485613040162566,
        "contents": 0.04485613040162566,
        "commit": 0.04485613040162566,
        "message": 0.04485613040162566,
        "every": 0.04485613040162566,
        "ui": 0.08971226080325131,
        "heavy": 0.04485613040162566,
        "add": 0.04485613040162566,
        "screenshots": 0.04485613040162566,
        "state": 0.04485613040162566,
        "diagrams": 0.04485613040162566,
        "to": 0.13456839120487699,
        "context": 0.04485613040162566,
        "steer": 0.04485613040162566,
        "layout": 0.04485613040162566,
        "naming": 0.04485613040162566,
        "performance": 0.04485613040162566,
        "sensitive": 0.04485613040162566,
        "put": 0.04485613040162566,
        "explicit": 0.04485613040162566,
        "budgets": 0.04485613040162566,
        "into": 0.04485613040162566,
        "ask": 0.04485613040162566,
        "print": 0.04485613040162566,
        "measured": 0.04485613040162566,
        "timings": 0.04485613040162566
      },
      "text": "template) **Implementation Hints** * Detect OS with `platform.system()`. * Prefer `\"TensorrtExecutionProvider\"` on NVIDIA, `\"DmlExecutionProvider\"` on Windows, `\"CoreMLExecutionProvider\"` or `\"MPSExecutionProvider\"` on macOS, else CPU. * Expose a helper `create_session(path: str, preferred: list[str] | None) -> InferenceSession`. **Important Guardrails** * No actual model downloads. * No global provider checks at import time; run checks inside functions. --- ## \ud83e\uddea Verification Checklist (You run this after each story) Run locally and produce these commands in the **Validation Steps** section: ```bash make all ``` * Confirm tests pass and coverage for new code \u2265 95%. * On Windows/macOS, spot\u2011check for platform\u2011specific issues if the story touches system features. * Run the command /review and do a PR review of the diff. Fix any issues you find. --- ## \ud83d\udcdd Tips for Working With the Template * Always **update the \u201cCurrent Repository Snapshot\u201d** before each story so the LLM is grounded in reality. * Keep **Acceptance Criteria** crisp and testable. * The **Output Contract** ensures you get a `git apply`\u2011able patch, full file contents, tests, and a commit message \u2014 every time. * If a story is UI\u2011heavy, add screenshots or UI state diagrams to the **Story Context** section to steer layout and naming. * If a story is performance\u2011sensitive, put explicit budgets into **Acceptance Criteria** and ask the LLM to print measured timings in",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#6",
      "vector": {
        "story": 0.3849001794597505,
        "is": 0.19245008972987526,
        "ui": 0.19245008972987526,
        "heavy": 0.09622504486493763,
        "add": 0.09622504486493763,
        "screenshots": 0.09622504486493763,
        "or": 0.09622504486493763,
        "state": 0.09622504486493763,
        "diagrams": 0.09622504486493763,
        "to": 0.28867513459481287,
        "the": 0.28867513459481287,
        "context": 0.19245008972987526,
        "section": 0.09622504486493763,
        "steer": 0.09622504486493763,
        "layout": 0.09622504486493763,
        "and": 0.28867513459481287,
        "naming": 0.09622504486493763,
        "if": 0.09622504486493763,
        "a": 0.09622504486493763,
        "performance": 0.09622504486493763,
        "sensitive": 0.09622504486493763,
        "put": 0.09622504486493763,
        "explicit": 0.09622504486493763,
        "budgets": 0.09622504486493763,
        "into": 0.09622504486493763,
        "acceptance": 0.19245008972987526,
        "criteria": 0.19245008972987526,
        "ask": 0.09622504486493763,
        "llm": 0.09622504486493763,
        "print": 0.09622504486493763,
        "measured": 0.09622504486493763,
        "timings": 0.09622504486493763,
        "in": 0.19245008972987526,
        "test": 0.09622504486493763,
        "logs": 0.09622504486493763,
        "use": 0.09622504486493763,
        "this": 0.09622504486493763,
        "template": 0.09622504486493763,
        "verbatim": 0.09622504486493763,
        "for": 0.09622504486493763,
        "s": 0.19245008972987526,
        "001": 0.09622504486493763,
        "through": 0.09622504486493763,
        "044": 0.09622504486493763,
        "by": 0.09622504486493763,
        "swapping": 0.09622504486493763,
        "relevant": 0.09622504486493763,
        "snapshot": 0.09622504486493763
      },
      "text": "story is UI\u2011heavy, add screenshots or UI state diagrams to the **Story Context** section to steer layout and naming. * If a story is performance\u2011sensitive, put explicit budgets into **Acceptance Criteria** and ask the LLM to print measured timings in test logs. --- Use this template verbatim for S\u2011001 through S\u2011044 by swapping in the relevant **Story Context**, **Snapshot**, and **Acceptance Criteria**.",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/spec.md#0",
      "vector": {
        "intelligent": 0.06696495301824251,
        "readme": 0.2008948590547275,
        "generator": 0.06696495301824251,
        "architecture": 0.13392990603648502,
        "spec": 0.06696495301824251,
        "python": 0.13392990603648502,
        "local": 0.2008948590547275,
        "llm": 0.2008948590547275,
        "1": 0.06696495301824251,
        "purpose": 0.06696495301824251,
        "scope": 0.06696495301824251,
        "build": 0.13392990603648502,
        "a": 0.3348247650912125,
        "based": 0.06696495301824251,
        "system": 0.06696495301824251,
        "that": 0.06696495301824251,
        "analyzes": 0.06696495301824251,
        "git": 0.3348247650912125,
        "repository": 0.06696495301824251,
        "structure": 0.06696495301824251,
        "code": 0.06696495301824251,
        "dependencies": 0.06696495301824251,
        "then": 0.06696495301824251,
        "generates": 0.06696495301824251,
        "and": 0.13392990603648502,
        "maintains": 0.06696495301824251,
        "high": 0.13392990603648502,
        "quality": 0.06696495301824251,
        "md": 0.06696495301824251,
        "using": 0.06696495301824251,
        "it": 0.06696495301824251,
        "initializes": 0.06696495301824251,
        "repos": 0.06696495301824251,
        "with": 0.06696495301824251,
        "no": 0.06696495301824251,
        "docs": 0.2008948590547275,
        "keeps": 0.06696495301824251,
        "up": 0.06696495301824251,
        "to": 0.06696495301824251,
        "date": 0.06696495301824251,
        "on": 0.06696495301824251,
        "commits": 0.06696495301824251,
        "prs": 0.06696495301824251,
        "supports": 0.06696495301824251,
        "multiple": 0.06696495301824251,
        "languages": 0.06696495301824251,
        "project": 0.06696495301824251,
        "types": 0.06696495301824251,
        "via": 0.06696495301824251,
        "analyzers": 0.13392990603648502,
        "non": 0.06696495301824251,
        "goals": 0.06696495301824251,
        "for": 0.06696495301824251,
        "the": 0.06696495301824251,
        "poc": 0.06696495301824251,
        "multi": 0.06696495301824251,
        "repo": 0.13392990603648502,
        "orchestration": 0.06696495301824251,
        "full": 0.06696495301824251,
        "website": 0.06696495301824251,
        "api": 0.06696495301824251,
        "reference": 0.06696495301824251,
        "extraction": 0.06696495301824251,
        "beyond": 0.06696495301824251,
        "summaries": 0.06696495301824251,
        "cloud": 0.06696495301824251,
        "llms": 0.06696495301824251,
        "2": 0.06696495301824251,
        "level": 0.06696495301824251,
        "at": 0.06696495301824251,
        "glance": 0.06696495301824251,
        "events": 0.06696495301824251,
        "event": 0.06696495301824251,
        "sources": 0.06696495301824251,
        "cli": 0.06696495301824251,
        "commands": 0.06696495301824251,
        "hooks": 0.06696495301824251,
        "webhooks": 0.06696495301824251,
        "ci": 0.06696495301824251,
        "commit": 0.13392990603648502,
        "pr": 0.13392990603648502,
        "orchestr": 0.06696495301824251,
        "async": 0.06696495301824251,
        "task": 0.06696495301824251,
        "graph": 0.13392990603648502,
        "scanner": 0.06696495301824251,
        "doc": 0.06696495301824251,
        "store": 0.06696495301824251,
        "indexer": 0.06696495301824251,
        "language": 0.06696495301824251,
        "artifacts": 0.06696495301824251,
        "fs": 0.06696495301824251,
        "deps": 0.06696495301824251,
        "cache": 0.06696495301824251,
        "versions": 0.06696495301824251,
        "knowledge": 0.06696495301824251,
        "embeddings": 0.06696495301824251,
        "prompt": 0.06696495301824251,
        "builder": 0.06696495301824251,
        "templates": 0.06696495301824251,
        "rag": 0.06696495301824251,
        "runner": 0.06696495301824251,
        "llama": 0.06696495301824251,
        "cpp": 0.06696495301824251,
        "ollama": 0.06696495301824251,
        "post": 0.06696495301824251,
        "processor": 0.06696495301824251,
        "lint": 0.06696495301824251,
        "toc": 0.06696495301824251,
        "badges": 0.06696495301824251,
        "links": 0.06696495301824251,
        "publisher": 0.06696495301824251,
        "branch": 0.06696495301824251
      },
      "text": "# Intelligent README Generator \u2014 Architecture & Spec (Python, Local LLM) ## 1) Purpose & Scope Build a Python-based system that **analyzes a Git repository** (structure, code, dependencies), then **generates and maintains a high-quality README.md** using a **local LLM**. It initializes repos with no docs and **keeps docs up to date** on commits/PRs. Supports **multiple languages/project types** via analyzers. Non-goals (for the POC): multi-repo orchestration, full website docs, API reference extraction (beyond README summaries), cloud LLMs. --- ## 2) High-Level Architecture (at a glance) ``` \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 Git Events \u2502 Event Sources \u2502 CLI commands, Git hooks, Webhooks/CI (commit/PR) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Orchestr \u2502 (Async task graph) \u2514\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Repo Scanner\u2502 \u2502 Analyzers \u2502 \u2502 Doc Store \u2502 \u2502 + Indexer \u2502 \u2502 (Language, \u2502 \u2502 (Artifacts, \u2502 \u2502 (Git, FS) \u2502 \u2502 Build, Deps) \u2502 \u2502 Cache, \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 Versions) \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 Knowledge Graph \u2502 \u2502 \u2502 \u2502 & Embeddings \u2502<\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 Prompt Builder \u2502 (Templates + RAG) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 Local LLM Runner \u2502 (llama.cpp/Ollama) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25b6\u2502 Post-Processor \u2502 (lint, ToC, badges, links) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Git Publisher \u2502 (branch/PR/commit) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 ``` --- ##",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#1",
      "vector": {
        "rag": 0.053074489243427524,
        "local": 0.053074489243427524,
        "llm": 0.053074489243427524,
        "runner": 0.053074489243427524,
        "llama": 0.053074489243427524,
        "cpp": 0.053074489243427524,
        "ollama": 0.053074489243427524,
        "post": 0.053074489243427524,
        "processor": 0.053074489243427524,
        "lint": 0.053074489243427524,
        "toc": 0.053074489243427524,
        "badges": 0.053074489243427524,
        "links": 0.053074489243427524,
        "git": 0.10614897848685505,
        "publisher": 0.053074489243427524,
        "branch": 0.053074489243427524,
        "pr": 0.053074489243427524,
        "commit": 0.053074489243427524,
        "3": 0.2653724462171376,
        "components": 0.053074489243427524,
        "responsibilities": 0.053074489243427524,
        "1": 0.053074489243427524,
        "orchestrator": 0.053074489243427524,
        "coordinates": 0.053074489243427524,
        "end": 0.10614897848685505,
        "to": 0.2122979569737101,
        "pipelines": 0.053074489243427524,
        "init": 0.053074489243427524,
        "update": 0.10614897848685505,
        "regenerate": 0.10614897848685505,
        "computes": 0.053074489243427524,
        "change": 0.10614897848685505,
        "impact": 0.053074489243427524,
        "from": 0.10614897848685505,
        "diff": 0.053074489243427524,
        "decides": 0.053074489243427524,
        "whether": 0.053074489243427524,
        "full": 0.053074489243427524,
        "readme": 0.053074489243427524,
        "or": 0.10614897848685505,
        "patch": 0.053074489243427524,
        "sections": 0.053074489243427524,
        "schedules": 0.053074489243427524,
        "tasks": 0.053074489243427524,
        "and": 0.15922346773028256,
        "caches": 0.053074489243427524,
        "intermediate": 0.053074489243427524,
        "results": 0.053074489243427524,
        "reuses": 0.053074489243427524,
        "analyzer": 0.10614897848685505,
        "outputs": 0.053074489243427524,
        "docgen": 0.2122979569737101,
        "analyzers": 0.2653724462171376,
        "cache": 0.053074489243427524,
        "json": 0.2122979569737101,
        "invalidating": 0.053074489243427524,
        "entries": 0.053074489243427524,
        "when": 0.10614897848685505,
        "file": 0.053074489243427524,
        "hashes": 0.053074489243427524,
        "signatures": 0.053074489243427524,
        "emits": 0.053074489243427524,
        "structured": 0.053074489243427524,
        "logs": 0.053074489243427524,
        "info": 0.053074489243427524,
        "by": 0.053074489243427524,
        "default": 0.053074489243427524,
        "debug": 0.053074489243427524,
        "with": 0.053074489243427524,
        "verbose": 0.053074489243427524,
        "respects": 0.053074489243427524,
        "yml": 0.053074489243427524,
        "ci": 0.053074489243427524,
        "watched_globs": 0.053074489243427524,
        "skip": 0.053074489243427524,
        "unrelated": 0.053074489243427524,
        "diffs": 0.053074489243427524,
        "substitutes": 0.053074489243427524,
        "fail": 0.053074489243427524,
        "safe": 0.053074489243427524,
        "stubs": 0.053074489243427524,
        "generation": 0.053074489243427524,
        "fails": 0.053074489243427524,
        "supports": 0.053074489243427524,
        "dry": 0.10614897848685505,
        "run": 0.15922346773028256,
        "previews": 0.053074489243427524,
        "records": 0.053074489243427524,
        "scorecards": 0.053074489243427524,
        "for": 0.053074489243427524,
        "each": 0.053074489243427524,
        "under": 0.053074489243427524,
        "2": 0.053074489243427524,
        "repo": 0.15922346773028256,
        "scanner": 0.053074489243427524,
        "indexer": 0.053074489243427524,
        "walks": 0.053074489243427524,
        "builds": 0.053074489243427524,
        "normalized": 0.053074489243427524,
        "manifest": 0.053074489243427524,
        "files": 0.10614897848685505,
        "sizes": 0.053074489243427524,
        "language": 0.10614897848685505,
        "tags": 0.053074489243427524,
        "path": 0.053074489243427524,
        "roles": 0.053074489243427524,
        "src": 0.053074489243427524,
        "test": 0.10614897848685505,
        "docs": 0.053074489243427524,
        "examples": 0.053074489243427524,
        "build": 0.15922346773028256,
        "dependency": 0.10614897848685505,
        "manifests": 0.053074489243427524,
        "e": 0.053074489243427524,
        "g": 0.053074489243427524,
        "pom": 0.053074489243427524,
        "xml": 0.053074489243427524,
        "gradle": 0.10614897848685505,
        "package": 0.053074489243427524,
        "requirements": 0.053074489243427524,
        "txt": 0.053074489243427524,
        "pyproject": 0.053074489243427524,
        "toml": 0.10614897848685505,
        "go": 0.15922346773028256,
        "mod": 0.053074489243427524,
        "cargo": 0.10614897848685505,
        "gemfile": 0.053074489243427524,
        "composer": 0.053074489243427524,
        "entrypoints": 0.10614897848685505,
        "clis": 0.053074489243427524,
        "services": 0.053074489243427524,
        "coverage": 0.053074489243427524,
        "artifacts": 0.053074489243427524,
        "if": 0.053074489243427524,
        "available": 0.053074489243427524,
        "stores": 0.053074489243427524,
        "a": 0.053074489243427524,
        "per": 0.053074489243427524,
        "index": 0.053074489243427524,
        "speed": 0.053074489243427524,
        "future": 0.053074489243427524,
        "runs": 0.053074489243427524,
        "plugin": 0.053074489243427524,
        "based": 0.053074489243427524,
        "detect": 0.053074489243427524,
        "idioms": 0.053074489243427524,
        "frameworks": 0.053074489243427524,
        "spring": 0.053074489243427524,
        "boot": 0.053074489243427524,
        "fastapi": 0.053074489243427524,
        "node": 0.053074489243427524,
        "express": 0.053074489243427524,
        "react": 0.053074489243427524,
        "next": 0.053074489243427524,
        "js": 0.053074489243427524,
        "http": 0.053074489243427524,
        "rust": 0.053074489243427524,
        "bin": 0.053074489243427524,
        "lib": 0.053074489243427524,
        "maven": 0.053074489243427524,
        "setuptools": 0.053074489243427524,
        "poetry": 0.053074489243427524,
        "npm": 0.053074489243427524,
        "pnpm": 0.053074489243427524,
        "yarn": 0.053074489243427524,
        "extract": 0.053074489243427524,
        "top": 0.053074489243427524,
        "level": 0.053074489243427524
      },
      "text": "+ RAG) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 Local LLM Runner \u2502 (llama.cpp/Ollama) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25b6\u2502 Post-Processor \u2502 (lint, ToC, badges, links) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Git Publisher \u2502 (branch/PR/commit) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 ``` --- ## 3) Components & Responsibilities ### 3.1 Orchestrator * Coordinates end-to-end pipelines (init, update, regenerate). * Computes *change impact* from Git diff; decides whether to regenerate full README or patch sections. * Schedules tasks and caches intermediate results. * Reuses analyzer outputs from `.docgen/analyzers/cache.json`, invalidating entries when file hashes or analyzer signatures change. * Emits structured logs (info by default, debug with `--verbose`), respects `.docgen.yml` `ci.watched_globs` to skip unrelated diffs, and substitutes fail-safe stubs when generation fails. * Supports dry-run previews (`docgen update --dry-run`) and records scorecards for each run under `.docgen/`. ### 3.2 Repo Scanner & Indexer * Walks repo; builds normalized manifest: * Files, sizes, language tags, path roles (src/test/docs/examples). * Build files & dependency manifests (e.g., `pom.xml`, `build.gradle`, `package.json`, `requirements.txt`, `pyproject.toml`, `go.mod`, `Cargo.toml`, `Gemfile`, `composer.json`). * Entrypoints (CLIs, services), test coverage artifacts if available. * Stores a per-repo index (JSON) to speed future runs. ### 3.3 Analyzers (Plugin-based) * **Language analyzers** (detect idioms, entrypoints, frameworks: Spring Boot, FastAPI, Node/Express, React, Next.js, Go HTTP, Rust bin/lib). * **Build analyzers** (Maven/Gradle, setuptools/Poetry, npm/pnpm/yarn, Go, Cargo). * **Dependency analyzers** (extract top-level",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#2",
      "vector": {
        "index": 0.0536828127095019,
        "json": 0.0536828127095019,
        "to": 0.1073656254190038,
        "speed": 0.0536828127095019,
        "future": 0.0536828127095019,
        "runs": 0.0536828127095019,
        "3": 0.2147312508380076,
        "analyzers": 0.3220968762570114,
        "plugin": 0.0536828127095019,
        "based": 0.0536828127095019,
        "language": 0.0536828127095019,
        "detect": 0.0536828127095019,
        "idioms": 0.0536828127095019,
        "entrypoints": 0.0536828127095019,
        "frameworks": 0.0536828127095019,
        "spring": 0.1073656254190038,
        "boot": 0.1073656254190038,
        "fastapi": 0.1073656254190038,
        "node": 0.1073656254190038,
        "express": 0.0536828127095019,
        "react": 0.0536828127095019,
        "next": 0.0536828127095019,
        "js": 0.0536828127095019,
        "go": 0.1073656254190038,
        "http": 0.0536828127095019,
        "rust": 0.0536828127095019,
        "bin": 0.0536828127095019,
        "lib": 0.0536828127095019,
        "build": 0.1073656254190038,
        "maven": 0.0536828127095019,
        "gradle": 0.0536828127095019,
        "setuptools": 0.0536828127095019,
        "poetry": 0.0536828127095019,
        "npm": 0.0536828127095019,
        "pnpm": 0.0536828127095019,
        "yarn": 0.0536828127095019,
        "cargo": 0.0536828127095019,
        "dependency": 0.0536828127095019,
        "extract": 0.0536828127095019,
        "top": 0.1073656254190038,
        "level": 0.0536828127095019,
        "libs": 0.0536828127095019,
        "notable": 0.0536828127095019,
        "transitive": 0.0536828127095019,
        "categories": 0.0536828127095019,
        "entrypoint": 0.0536828127095019,
        "infer": 0.0536828127095019,
        "run": 0.0536828127095019,
        "commands": 0.0536828127095019,
        "for": 0.1073656254190038,
        "django": 0.0536828127095019,
        "scripts": 0.1073656254190038,
        "pattern": 0.0536828127095019,
        "monorepo": 0.0536828127095019,
        "layout": 0.0536828127095019,
        "ci": 0.0536828127095019,
        "cd": 0.0536828127095019,
        "containerization": 0.0536828127095019,
        "k8s": 0.0536828127095019,
        "heuristics": 0.0536828127095019,
        "structure": 0.0536828127095019,
        "analyzer": 0.1610484381285057,
        "module": 0.0536828127095019,
        "topology": 0.0536828127095019,
        "detected": 0.0536828127095019,
        "entities": 0.1073656254190038,
        "dtos": 0.0536828127095019,
        "api": 0.0536828127095019,
        "endpoint": 0.0536828127095019,
        "sequences": 0.0536828127095019,
        "service": 0.0536828127095019,
        "interactions": 0.0536828127095019,
        "tree": 0.0536828127095019,
        "sitter": 0.0536828127095019,
        "symbol": 0.0536828127095019,
        "python": 0.0536828127095019,
        "java": 0.0536828127095019,
        "typescript": 0.0536828127095019,
        "extracts": 0.0536828127095019,
        "functions": 0.0536828127095019,
        "classes": 0.0536828127095019,
        "when": 0.0536828127095019,
        "parsers": 0.0536828127095019,
        "available": 0.0536828127095019,
        "and": 0.2147312508380076,
        "degrades": 0.0536828127095019,
        "gracefully": 0.0536828127095019,
        "otherwise": 0.0536828127095019,
        "each": 0.0536828127095019,
        "returns": 0.0536828127095019,
        "signals": 0.1073656254190038,
        "key": 0.1073656254190038,
        "facts": 0.0536828127095019,
        "the": 0.1073656254190038,
        "knowledge": 0.1073656254190038,
        "graph": 0.1610484381285057,
        "4": 0.0536828127095019,
        "embeddings": 0.1073656254190038,
        "rag": 0.0536828127095019,
        "of": 0.1073656254190038,
        "repo": 0.1073656254190038,
        "modules": 0.0536828127095019,
        "packages": 0.0536828127095019,
        "services": 0.0536828127095019,
        "configs": 0.0536828127095019,
        "tests": 0.0536828127095019,
        "docs": 0.1073656254190038,
        "lightweight": 0.0536828127095019,
        "embedding": 0.0536828127095019,
        "store": 0.0536828127095019,
        "e": 0.0536828127095019,
        "g": 0.0536828127095019,
        "faiss": 0.0536828127095019,
        "in": 0.0536828127095019,
        "memory": 0.0536828127095019,
        "chunks": 0.0536828127095019,
        "code": 0.0536828127095019,
        "comments": 0.0536828127095019,
        "readme": 0.1073656254190038,
        "fragments": 0.0536828127095019,
        "changelog": 0.0536828127095019,
        "issues": 0.0536828127095019,
        "optional": 0.0536828127095019,
        "commit": 0.0536828127095019,
        "messages": 0.1073656254190038,
        "provides": 0.0536828127095019,
        "context": 0.1073656254190038,
        "retrieval": 0.0536828127095019,
        "prompt": 0.1073656254190038,
        "building": 0.0536828127095019,
        "k": 0.0536828127095019,
        "by": 0.0536828127095019,
        "section": 0.1610484381285057,
        "persists": 0.0536828127095019,
        "under": 0.0536828127095019,
        "docgen": 0.0536828127095019,
        "refreshing": 0.0536828127095019,
        "only": 0.0536828127095019,
        "files": 0.0536828127095019,
        "whose": 0.0536828127095019,
        "hashes": 0.0536828127095019,
        "changed": 0.0536828127095019,
        "5": 0.0536828127095019,
        "builder": 0.0536828127095019,
        "aware": 0.0536828127095019,
        "jinja2": 0.0536828127095019,
        "templates": 0.0536828127095019,
        "with": 0.1073656254190038,
        "guardrails": 0.0536828127095019,
        "project": 0.0536828127095019,
        "intro": 0.0536828127095019,
        "features": 0.0536828127095019,
        "architecture": 0.0536828127095019,
        "overview": 0.0536828127095019,
        "quick": 0.0536828127095019,
        "start": 0.0536828127095019,
        "configuration": 0.0536828127095019,
        "test": 0.0536828127095019,
        "deployment": 0.0536828127095019,
        "troubleshooting": 0.0536828127095019,
        "faq": 0.0536828127095019,
        "roadmap": 0.0536828127095019,
        "contribution": 0.0536828127095019,
        "license": 0.0536828127095019,
        "badges": 0.0536828127095019,
        "dynamically": 0.0536828127095019,
        "injects": 0.0536828127095019,
        "retrieved": 0.0536828127095019,
        "per": 0.0536828127095019,
        "produces": 0.0536828127095019,
        "llm": 0.0536828127095019,
        "ready": 0.0536828127095019,
        "structured": 0.0536828127095019,
        "prompts": 0.0536828127095019,
        "system": 0.0536828127095019,
        "user": 0.0536828127095019,
        "token": 0.0536828127095019,
        "budgets": 0.0536828127095019,
        "honours": 0.0536828127095019,
        "style": 0.0536828127095019,
        "presets": 0.0536828127095019,
        "concise": 0.0536828127095019,
        "trims": 0.0536828127095019,
        "list": 0.0536828127095019,
        "heavy": 0.0536828127095019,
        "sections": 0.0536828127095019
      },
      "text": "index (JSON) to speed future runs. ### 3.3 Analyzers (Plugin-based) * **Language analyzers** (detect idioms, entrypoints, frameworks: Spring Boot, FastAPI, Node/Express, React, Next.js, Go HTTP, Rust bin/lib). * **Build analyzers** (Maven/Gradle, setuptools/Poetry, npm/pnpm/yarn, Go, Cargo). * **Dependency analyzers** (extract top-level libs & notable transitive categories). * **Entrypoint analyzers** (infer run commands for FastAPI, Django, Spring Boot, Node scripts). * **Pattern analyzers** (monorepo layout, CI/CD, containerization/K8s heuristics). * **Structure analyzer** (module topology, detected entities/DTOs, API endpoint sequences, service interactions). * **Tree-sitter symbol analyzer** (Python/Java/TypeScript) extracts functions/classes when parsers available and degrades gracefully otherwise. * Each analyzer returns **Signals** (key facts) to the knowledge graph. ### 3.4 Knowledge Graph & Embeddings (RAG) * Graph of Repo entities: modules, packages, services, scripts, configs, tests, docs. * Lightweight embedding store (e.g., `faiss`/in-memory) of **chunks**: code comments, README fragments, `docs/`, `CHANGELOG`, issues (optional), commit messages. * Provides **context retrieval** for prompt building (top-k by section) and persists embeddings under `.docgen/`, refreshing only the files whose hashes changed. ### 3.5 Prompt Builder * **Section-aware** Jinja2 templates with **guardrails**: * Project intro, key features, architecture overview, quick start, configuration, build/test, deployment, troubleshooting, FAQ, roadmap, contribution, license, badges. * Dynamically injects repo signals and retrieved context per section. * Produces **LLM-ready structured prompts** (system + user messages) with token budgets and honours `readme.style` presets (`concise` trims list-heavy sections,",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#3",
      "vector": {
        "start": 0.09690031662230184,
        "configuration": 0.09690031662230184,
        "build": 0.04845015831115092,
        "test": 0.04845015831115092,
        "deployment": 0.04845015831115092,
        "troubleshooting": 0.04845015831115092,
        "faq": 0.04845015831115092,
        "roadmap": 0.04845015831115092,
        "contribution": 0.04845015831115092,
        "license": 0.04845015831115092,
        "badges": 0.09690031662230184,
        "dynamically": 0.04845015831115092,
        "injects": 0.09690031662230184,
        "repo": 0.04845015831115092,
        "signals": 0.04845015831115092,
        "and": 0.4360514248003583,
        "retrieved": 0.04845015831115092,
        "context": 0.09690031662230184,
        "per": 0.04845015831115092,
        "section": 0.14535047493345277,
        "produces": 0.04845015831115092,
        "llm": 0.09690031662230184,
        "ready": 0.04845015831115092,
        "structured": 0.09690031662230184,
        "prompts": 0.04845015831115092,
        "system": 0.04845015831115092,
        "user": 0.04845015831115092,
        "messages": 0.04845015831115092,
        "with": 0.14535047493345277,
        "token": 0.04845015831115092,
        "budgets": 0.04845015831115092,
        "honours": 0.04845015831115092,
        "readme": 0.14535047493345277,
        "style": 0.14535047493345277,
        "presets": 0.04845015831115092,
        "concise": 0.04845015831115092,
        "trims": 0.04845015831115092,
        "list": 0.04845015831115092,
        "heavy": 0.04845015831115092,
        "sections": 0.14535047493345277,
        "comprehensive": 0.04845015831115092,
        "keeps": 0.04845015831115092,
        "full": 0.04845015831115092,
        "detail": 0.04845015831115092,
        "detected": 0.09690031662230184,
        "entrypoints": 0.04845015831115092,
        "infrastructure": 0.04845015831115092,
        "patterns": 0.04845015831115092,
        "into": 0.04845015831115092,
        "quick": 0.04845015831115092,
        "guidance": 0.04845015831115092,
        "e": 0.04845015831115092,
        "g": 0.04845015831115092,
        "uvicorn": 0.04845015831115092,
        "docker": 0.14535047493345277,
        "compose": 0.04845015831115092,
        "up": 0.04845015831115092,
        "generates": 0.04845015831115092,
        "mermaid": 0.04845015831115092,
        "sequence": 0.04845015831115092,
        "diagrams": 0.04845015831115092,
        "highlighting": 0.04845015831115092,
        "request": 0.04845015831115092,
        "flow": 0.04845015831115092,
        "across": 0.04845015831115092,
        "services": 0.04845015831115092,
        "when": 0.09690031662230184,
        "api": 0.09690031662230184,
        "endpoints": 0.04845015831115092,
        "are": 0.04845015831115092,
        "3": 0.09690031662230184,
        "6": 0.04845015831115092,
        "local": 0.14535047493345277,
        "runner": 0.14535047493345277,
        "pluggable": 0.04845015831115092,
        "runtime": 0.04845015831115092,
        "that": 0.04845015831115092,
        "prefers": 0.04845015831115092,
        "the": 0.04845015831115092,
        "model": 0.14535047493345277,
        "http": 0.14535047493345277,
        "endpoint": 0.04845015831115092,
        "host": 0.04845015831115092,
        "localhost": 0.04845015831115092,
        "12434": 0.04845015831115092,
        "engines": 0.09690031662230184,
        "v1": 0.09690031662230184,
        "container": 0.04845015831115092,
        "internal": 0.14535047493345277,
        "environment": 0.04845015831115092,
        "overrides": 0.04845015831115092,
        "an": 0.04845015831115092,
        "ollama": 0.04845015831115092,
        "cli": 0.09690031662230184,
        "fallback": 0.04845015831115092,
        "defaults": 0.04845015831115092,
        "to": 0.14535047493345277,
        "ai": 0.04845015831115092,
        "smollm2": 0.04845015831115092,
        "360m": 0.04845015831115092,
        "q4_k_m": 0.04845015831115092,
        "but": 0.04845015831115092,
        "respects": 0.04845015831115092,
        "docgen": 0.09690031662230184,
        "yml": 0.04845015831115092,
        "openai": 0.04845015831115092,
        "compatible": 0.04845015831115092,
        "env": 0.04845015831115092,
        "vars": 0.04845015831115092,
        "for": 0.14535047493345277,
        "alternate": 0.04845015831115092,
        "weights": 0.04845015831115092,
        "keys": 0.04845015831115092,
        "supports": 0.04845015831115092,
        "function": 0.04845015831115092,
        "calling": 0.04845015831115092,
        "outputs": 0.04845015831115092,
        "available": 0.04845015831115092,
        "streaming": 0.04845015831115092,
        "decode": 0.04845015831115092,
        "stop": 0.04845015831115092,
        "tokens": 0.04845015831115092,
        "by": 0.09690031662230184,
        "generation": 0.04845015831115092,
        "stay": 0.09690031662230184,
        "within": 0.04845015831115092,
        "limits": 0.04845015831115092,
        "validates": 0.09690031662230184,
        "ensure": 0.04845015831115092,
        "runners": 0.04845015831115092,
        "loopback": 0.04845015831115092,
        "hosts": 0.04845015831115092,
        "only": 0.09690031662230184,
        "includes": 0.04845015831115092,
        "a": 0.09690031662230184,
        "llamacpprunner": 0.04845015831115092,
        "adapter": 0.04845015831115092,
        "llama": 0.04845015831115092,
        "cpp": 0.04845015831115092,
        "binaries": 0.04845015831115092,
        "enforcing": 0.04845015831115092,
        "filesystem": 0.04845015831115092,
        "backed": 0.04845015831115092,
        "paths": 0.04845015831115092,
        "execution": 0.04845015831115092,
        "7": 0.04845015831115092,
        "post": 0.04845015831115092,
        "processor": 0.04845015831115092,
        "lints": 0.04845015831115092,
        "markdown": 0.04845015831115092,
        "builds": 0.04845015831115092,
        "toc": 0.04845015831115092,
        "adds": 0.04845015831115092,
        "shields": 0.04845015831115092,
        "normalizes": 0.04845015831115092,
        "heading": 0.04845015831115092,
        "hierarchy": 0.04845015831115092,
        "enforces": 0.04845015831115092,
        "guide": 0.04845015831115092,
        "contract": 0.04845015831115092,
        "required": 0.04845015831115092,
        "links": 0.04845015831115092,
        "relative": 0.04845015831115092,
        "absolute": 0.04845015831115092,
        "code": 0.04845015831115092,
        "block": 0.04845015831115092,
        "languages": 0.04845015831115092,
        "line": 0.04845015831115092,
        "length": 0.04845015831115092,
        "computes": 0.04845015831115092,
        "diff": 0.04845015831115092,
        "aware": 0.04845015831115092,
        "updates": 0.04845015831115092,
        "modifies": 0.04845015831115092,
        "impacted": 0.04845015831115092,
        "changes": 0.04845015831115092,
        "persists": 0.04845015831115092,
        "scorecard": 0.09690031662230184,
        "json": 0.04845015831115092
      },
      "text": "start, configuration, build/test, deployment, troubleshooting, FAQ, roadmap, contribution, license, badges. * Dynamically injects repo signals and retrieved context per section. * Produces **LLM-ready structured prompts** (system + user messages) with token budgets and honours `readme.style` presets (`concise` trims list-heavy sections, `comprehensive` keeps full detail). * Injects detected entrypoints and infrastructure patterns into Quick Start guidance (e.g., `uvicorn ...`, `docker compose up`). * Generates Mermaid sequence diagrams highlighting request flow across services when API endpoints are detected. ### 3.6 Local LLM Runner * Pluggable runtime that prefers the Docker Model Runner HTTP endpoint (host `http://localhost:12434/engines/v1`, container `http://model-runner.docker.internal/engines/v1`) with environment overrides and an `ollama` CLI fallback. * Defaults to `ai/smollm2:360M-Q4_K_M` but respects `.docgen.yml` and OpenAI-compatible env vars for alternate weights and API keys. * Supports **function calling style** for structured outputs when available. * Streaming decode with stop tokens; **section-by-section** generation to stay within context limits. * Validates configuration to ensure runners stay local (loopback/`*.internal` hosts only). * Includes a `LlamaCppRunner` adapter for local `llama.cpp` binaries, enforcing filesystem-backed model paths and CLI execution. ### 3.7 Post-Processor * Lints Markdown, builds ToC, adds shields/badges, normalizes heading hierarchy. * Enforces internal style guide and **README contract** (required sections). * Validates links (relative/absolute), code block languages, and line length. * Computes **diff-aware updates**: only modifies sections impacted by changes. * Persists a README scorecard (`.docgen/scorecard.json`)",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#4",
      "vector": {
        "shields": 0.04339630366027462,
        "badges": 0.08679260732054923,
        "normalizes": 0.08679260732054923,
        "heading": 0.04339630366027462,
        "hierarchy": 0.04339630366027462,
        "enforces": 0.04339630366027462,
        "internal": 0.04339630366027462,
        "style": 0.04339630366027462,
        "guide": 0.04339630366027462,
        "and": 0.6075482512438447,
        "readme": 0.13018891098082386,
        "contract": 0.04339630366027462,
        "required": 0.04339630366027462,
        "sections": 0.17358521464109847,
        "validates": 0.04339630366027462,
        "links": 0.04339630366027462,
        "relative": 0.04339630366027462,
        "absolute": 0.04339630366027462,
        "code": 0.04339630366027462,
        "block": 0.04339630366027462,
        "languages": 0.04339630366027462,
        "line": 0.04339630366027462,
        "length": 0.04339630366027462,
        "computes": 0.04339630366027462,
        "diff": 0.04339630366027462,
        "aware": 0.04339630366027462,
        "updates": 0.04339630366027462,
        "only": 0.04339630366027462,
        "modifies": 0.04339630366027462,
        "impacted": 0.04339630366027462,
        "by": 0.04339630366027462,
        "changes": 0.08679260732054923,
        "persists": 0.04339630366027462,
        "a": 0.13018891098082386,
        "scorecard": 0.08679260732054923,
        "docgen": 0.2169815183013731,
        "json": 0.17358521464109847,
        "capturing": 0.08679260732054923,
        "coverage": 0.08679260732054923,
        "quick": 0.04339630366027462,
        "start": 0.04339630366027462,
        "health": 0.04339630366027462,
        "link": 0.08679260732054923,
        "results": 0.04339630366027462,
        "adds": 0.04339630366027462,
        "build": 0.04339630366027462,
        "license": 0.04339630366027462,
        "with": 0.13018891098082386,
        "safe": 0.08679260732054923,
        "defaults": 0.04339630366027462,
        "reports": 0.04339630366027462,
        "warnings": 0.04339630366027462,
        "during": 0.04339630366027462,
        "post": 0.04339630366027462,
        "processing": 0.04339630366027462,
        "3": 0.13018891098082386,
        "8": 0.04339630366027462,
        "validation": 0.17358521464109847,
        "layer": 0.04339630366027462,
        "runs": 0.08679260732054923,
        "after": 0.04339630366027462,
        "section": 0.08679260732054923,
        "rendering": 0.04339630366027462,
        "before": 0.04339630366027462,
        "linting": 0.04339630366027462,
        "publishing": 0.04339630366027462,
        "to": 0.04339630366027462,
        "ensure": 0.04339630366027462,
        "generated": 0.08679260732054923,
        "claims": 0.04339630366027462,
        "are": 0.04339630366027462,
        "grounded": 0.04339630366027462,
        "analyzer": 0.08679260732054923,
        "signals": 0.04339630366027462,
        "metadata": 0.04339630366027462,
        "retrieved": 0.04339630366027462,
        "context": 0.04339630366027462,
        "into": 0.04339630366027462,
        "an": 0.04339630366027462,
        "evidence": 0.13018891098082386,
        "index": 0.04339630366027462,
        "used": 0.04339630366027462,
        "for": 0.13018891098082386,
        "token": 0.04339630366027462,
        "overlap": 0.04339630366027462,
        "checks": 0.04339630366027462,
        "default": 0.04339630366027462,
        "nohallucinationvalidator": 0.04339630366027462,
        "rejects": 0.04339630366027462,
        "sentences": 0.04339630366027462,
        "lacking": 0.04339630366027462,
        "supporting": 0.04339630366027462,
        "replaces": 0.04339630366027462,
        "offending": 0.04339630366027462,
        "fail": 0.04339630366027462,
        "stubs": 0.04339630366027462,
        "raises": 0.04339630366027462,
        "actionable": 0.04339630366027462,
        "errors": 0.04339630366027462,
        "writes": 0.04339630366027462,
        "validator": 0.04339630366027462,
        "status": 0.04339630366027462,
        "issues": 0.04339630366027462,
        "summaries": 0.04339630366027462,
        "auditability": 0.04339630366027462,
        "respects": 0.04339630366027462,
        "yml": 0.04339630366027462,
        "no_hallucination": 0.04339630366027462,
        "toggle": 0.04339630366027462,
        "docgen_validation_no_hallucination": 0.04339630366027462,
        "environment": 0.04339630366027462,
        "override": 0.04339630366027462,
        "cli": 0.04339630366027462,
        "skip": 0.04339630366027462,
        "flag": 0.04339630366027462,
        "one": 0.04339630366027462,
        "off": 0.04339630366027462,
        "bypasses": 0.04339630366027462,
        "9": 0.04339630366027462,
        "doc": 0.04339630366027462,
        "store": 0.04339630366027462,
        "artifacts": 0.08679260732054923,
        "versions": 0.04339630366027462,
        "keeps": 0.04339630366027462,
        "drafts": 0.04339630366027462,
        "logs": 0.04339630366027462,
        "prompts": 0.04339630366027462,
        "inputs": 0.04339630366027462,
        "outputs": 0.04339630366027462,
        "diffs": 0.04339630366027462,
        "under": 0.04339630366027462,
        "per": 0.04339630366027462,
        "repo": 0.04339630366027462,
        "supports": 0.04339630366027462,
        "rollback": 0.04339630366027462,
        "regression": 0.04339630366027462,
        "testing": 0.04339630366027462,
        "via": 0.04339630366027462,
        "golden": 0.04339630366027462,
        "readmes": 0.04339630366027462,
        "stores": 0.04339630366027462,
        "embedding": 0.04339630366027462,
        "cache": 0.08679260732054923,
        "embeddings": 0.04339630366027462,
        "analyzers": 0.04339630366027462,
        "schema": 0.04339630366027462,
        "versioning": 0.04339630366027462,
        "so": 0.04339630366027462,
        "subsequent": 0.04339630366027462,
        "reuse": 0.04339630366027462,
        "work": 0.04339630366027462,
        "when": 0.04339630366027462,
        "file": 0.04339630366027462,
        "hashes": 0.04339630366027462,
        "remain": 0.04339630366027462,
        "unchanged": 0.04339630366027462,
        "10": 0.04339630366027462,
        "git": 0.04339630366027462,
        "publisher": 0.04339630366027462,
        "creates": 0.04339630366027462,
        "branch": 0.04339630366027462,
        "e": 0.04339630366027462,
        "g": 0.04339630366027462,
        "update": 0.04339630366027462,
        "yyyymmdd": 0.04339630366027462,
        "pr": 0.08679260732054923,
        "body": 0.04339630366027462,
        "explains": 0.04339630366027462,
        "detected": 0.04339630366027462,
        "what": 0.04339630366027462,
        "were": 0.04339630366027462,
        "updated": 0.04339630366027462,
        "can": 0.04339630366027462,
        "commit": 0.04339630366027462
      },
      "text": "shields/badges, normalizes heading hierarchy. * Enforces internal style guide and **README contract** (required sections). * Validates links (relative/absolute), code block languages, and line length. * Computes **diff-aware updates**: only modifies sections impacted by changes. * Persists a README scorecard (`.docgen/scorecard.json`) capturing coverage, quick start health, and link results. * Adds build/coverage/license badges with safe defaults and reports link warnings during post-processing. ### 3.8 Validation Layer * Runs after section rendering and before linting/publishing to ensure generated claims are grounded. * Normalizes analyzer signals, section metadata, and retrieved context into an **Evidence Index** used for token overlap checks. * Default `NoHallucinationValidator` rejects sentences lacking supporting evidence, replaces offending sections with fail-safe stubs, and raises actionable errors. * Writes `.docgen/validation.json` capturing validator status, issues, and evidence summaries for auditability. * Respects `.docgen.yml` `validation.no_hallucination` toggle, `DOCGEN_VALIDATION_NO_HALLUCINATION` environment override, and CLI `--skip-validation` flag for one-off bypasses. ### 3.9 Doc Store (Artifacts & Versions) * Keeps generated drafts, logs, prompts, inputs/outputs, and diffs under `.docgen/` per repo. * Supports rollback and regression testing via \u201cgolden\u201d READMEs. * Stores embedding cache (`embeddings.json`) and analyzer artifacts (`analyzers/cache.json`) with schema versioning so subsequent runs reuse work when file hashes remain unchanged. ### 3.10 Git Publisher * Creates a branch (e.g., `docgen/readme-update-YYYYMMDD`) and a PR. * PR body explains detected changes and what sections were updated. * Can commit",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#5",
      "vector": {
        "with": 0.0746913686973271,
        "schema": 0.03734568434866355,
        "versioning": 0.03734568434866355,
        "so": 0.03734568434866355,
        "subsequent": 0.03734568434866355,
        "runs": 0.03734568434866355,
        "reuse": 0.03734568434866355,
        "work": 0.03734568434866355,
        "when": 0.0746913686973271,
        "file": 0.03734568434866355,
        "hashes": 0.03734568434866355,
        "remain": 0.03734568434866355,
        "unchanged": 0.03734568434866355,
        "3": 0.0746913686973271,
        "10": 0.03734568434866355,
        "git": 0.03734568434866355,
        "publisher": 0.03734568434866355,
        "creates": 0.03734568434866355,
        "a": 0.0746913686973271,
        "branch": 0.03734568434866355,
        "e": 0.0746913686973271,
        "g": 0.0746913686973271,
        "docgen": 0.0746913686973271,
        "readme": 0.03734568434866355,
        "update": 0.0746913686973271,
        "yyyymmdd": 0.03734568434866355,
        "and": 0.18672842174331777,
        "pr": 0.0746913686973271,
        "body": 0.03734568434866355,
        "explains": 0.03734568434866355,
        "detected": 0.03734568434866355,
        "changes": 0.03734568434866355,
        "what": 0.03734568434866355,
        "sections": 0.03734568434866355,
        "were": 0.03734568434866355,
        "updated": 0.03734568434866355,
        "can": 0.03734568434866355,
        "commit": 0.03734568434866355,
        "directly": 0.03734568434866355,
        "configurable": 0.03734568434866355,
        "on": 0.03734568434866355,
        "init": 0.0746913686973271,
        "for": 0.1493827373946542,
        "empty": 0.03734568434866355,
        "repos": 0.03734568434866355,
        "applies": 0.03734568434866355,
        "labels": 0.03734568434866355,
        "docs": 0.0746913686973271,
        "auto": 0.03734568434866355,
        "updates": 0.03734568434866355,
        "existing": 0.03734568434866355,
        "prs": 0.03734568434866355,
        "configured": 0.03734568434866355,
        "11": 0.03734568434866355,
        "service": 0.1493827373946542,
        "mode": 0.03734568434866355,
        "fastapi": 0.0746913686973271,
        "app": 0.03734568434866355,
        "exposes": 0.03734568434866355,
        "post": 0.03734568434866355,
        "endpoints": 0.03734568434866355,
        "plus": 0.03734568434866355,
        "health": 0.03734568434866355,
        "readiness": 0.03734568434866355,
        "reuses": 0.03734568434866355,
        "the": 0.11203705304599065,
        "orchestrator": 0.03734568434866355,
        "dependency": 0.03734568434866355,
        "executes": 0.03734568434866355,
        "operations": 0.03734568434866355,
        "in": 0.03734568434866355,
        "thread": 0.03734568434866355,
        "pools": 0.03734568434866355,
        "to": 0.03734568434866355,
        "keep": 0.03734568434866355,
        "event": 0.03734568434866355,
        "loop": 0.03734568434866355,
        "responsive": 0.03734568434866355,
        "cli": 0.0746913686973271,
        "host": 0.03734568434866355,
        "0": 0.1493827373946542,
        "port": 0.03734568434866355,
        "8000": 0.03734568434866355,
        "boots": 0.03734568434866355,
        "authentication": 0.03734568434866355,
        "hooks": 0.03734568434866355,
        "ready": 0.03734568434866355,
        "future": 0.03734568434866355,
        "hardening": 0.03734568434866355,
        "error": 0.03734568434866355,
        "handlers": 0.03734568434866355,
        "surface": 0.03734568434866355,
        "actionable": 0.03734568434866355,
        "json": 0.03734568434866355,
        "detail": 0.0746913686973271,
        "field": 0.03734568434866355,
        "common": 0.03734568434866355,
        "runtime": 0.03734568434866355,
        "issues": 0.03734568434866355,
        "4": 0.03734568434866355,
        "data": 0.03734568434866355,
        "model": 0.03734568434866355,
        "python": 0.0746913686973271,
        "pydantic": 0.03734568434866355,
        "dataclasses": 0.0746913686973271,
        "from": 0.0746913686973271,
        "import": 0.0746913686973271,
        "dataclass": 0.2614197904406449,
        "typing": 0.03734568434866355,
        "list": 0.1493827373946542,
        "dict": 0.1493827373946542,
        "optional": 0.0746913686973271,
        "class": 0.2240741060919813,
        "filemeta": 0.0746913686973271,
        "path": 0.03734568434866355,
        "str": 0.6348766339272804,
        "size": 0.03734568434866355,
        "int": 0.03734568434866355,
        "language": 0.03734568434866355,
        "role": 0.03734568434866355,
        "src": 0.03734568434866355,
        "test": 0.0746913686973271,
        "config": 0.03734568434866355,
        "build": 0.03734568434866355,
        "script": 0.03734568434866355,
        "infra": 0.03734568434866355,
        "other": 0.03734568434866355,
        "hash": 0.03734568434866355,
        "repomanifest": 0.0746913686973271,
        "root": 0.03734568434866355,
        "files": 0.03734568434866355,
        "detectors": 0.03734568434866355,
        "build_system": 0.03734568434866355,
        "maven": 0.03734568434866355,
        "framework": 0.0746913686973271,
        "spring": 0.03734568434866355,
        "boot": 0.03734568434866355,
        "dependency_files": 0.03734568434866355,
        "pom": 0.03734568434866355,
        "xml": 0.03734568434866355,
        "requirements": 0.03734568434866355,
        "txt": 0.03734568434866355,
        "signal": 0.0746913686973271,
        "kind": 0.03734568434866355,
        "db": 0.03734568434866355,
        "queue": 0.03734568434866355,
        "dep": 0.03734568434866355,
        "entrypoint": 0.03734568434866355,
        "name": 0.03734568434866355,
        "analysisresult": 0.03734568434866355,
        "manifest": 0.03734568434866355,
        "signals": 0.03734568434866355,
        "embedding_index_path": 0.03734568434866355,
        "sectionspec": 0.03734568434866355,
        "key": 0.03734568434866355,
        "intro": 0.03734568434866355,
        "features": 0.03734568434866355,
        "arch": 0.03734568434866355,
        "quickstart": 0.03734568434866355,
        "required": 0.03734568434866355,
        "bool": 0.03734568434866355,
        "sources": 0.03734568434866355,
        "preferred": 0.03734568434866355,
        "retrieval": 0.03734568434866355,
        "tags": 0.03734568434866355,
        "template_name": 0.03734568434866355,
        "readmedraft": 0.03734568434866355
      },
      "text": "with schema versioning so subsequent runs reuse work when file hashes remain unchanged. ### 3.10 Git Publisher * Creates a branch (e.g., `docgen/readme-update-YYYYMMDD`) and a PR. * PR body explains detected changes and what sections were updated. * Can commit directly (configurable) on init for empty repos. * Applies labels (e.g., `docs:auto`) and updates existing PRs when configured. ### 3.11 Service Mode (FastAPI) * FastAPI app exposes `/init` and `/update` POST endpoints plus `/health` for readiness. * Reuses the orchestrator dependency and executes operations in thread pools to keep the event loop responsive. * CLI `docgen service --host 0.0.0.0 --port 8000` boots the service with authentication hooks ready for future hardening. * Error handlers surface actionable JSON (`detail` field) for common runtime issues. --- ## 4) Data Model (Python `pydantic`/`dataclasses`) ```python from dataclasses import dataclass from typing import List, Dict, Optional @dataclass class FileMeta: path: str size: int language: Optional[str] role: str # src|test|docs|config|build|script|infra|other hash: str @dataclass class RepoManifest: root: str files: List[FileMeta] detectors: Dict[str, str] # {\"build_system\": \"maven\", \"framework\":\"spring-boot\", ...} dependency_files: Dict[str, str] # {\"pom.xml\": \"...\", \"requirements.txt\": \"...\"} @dataclass class Signal: kind: str # \"framework\",\"service\",\"cli\",\"db\",\"queue\",\"dep\",\"entrypoint\",\"test\" name: str detail: Dict[str, str] @dataclass class AnalysisResult: manifest: RepoManifest signals: List[Signal] embedding_index_path: str @dataclass class SectionSpec: key: str # \"intro\",\"features\",\"arch\",\"quickstart\",... required: bool sources: List[str] # preferred retrieval tags template_name: str @dataclass class ReadmeDraft:",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#6",
      "vector": {
        "class": 0.22011272658140596,
        "signal": 0.08804509063256238,
        "kind": 0.04402254531628119,
        "str": 0.6603381797442178,
        "framework": 0.04402254531628119,
        "service": 0.04402254531628119,
        "cli": 0.08804509063256238,
        "db": 0.04402254531628119,
        "queue": 0.04402254531628119,
        "dep": 0.04402254531628119,
        "entrypoint": 0.04402254531628119,
        "test": 0.04402254531628119,
        "name": 0.04402254531628119,
        "detail": 0.04402254531628119,
        "dict": 0.13206763594884358,
        "dataclass": 0.17609018126512477,
        "analysisresult": 0.04402254531628119,
        "manifest": 0.04402254531628119,
        "repomanifest": 0.04402254531628119,
        "signals": 0.04402254531628119,
        "list": 0.13206763594884358,
        "embedding_index_path": 0.04402254531628119,
        "sectionspec": 0.04402254531628119,
        "key": 0.04402254531628119,
        "intro": 0.08804509063256238,
        "features": 0.08804509063256238,
        "arch": 0.04402254531628119,
        "quickstart": 0.08804509063256238,
        "required": 0.04402254531628119,
        "bool": 0.04402254531628119,
        "sources": 0.04402254531628119,
        "preferred": 0.04402254531628119,
        "retrieval": 0.04402254531628119,
        "tags": 0.04402254531628119,
        "template_name": 0.04402254531628119,
        "readmedraft": 0.04402254531628119,
        "sections": 0.04402254531628119,
        "full_markdown": 0.04402254531628119,
        "updateplan": 0.04402254531628119,
        "strategy": 0.04402254531628119,
        "full": 0.04402254531628119,
        "patch": 0.04402254531628119,
        "changed_sections": 0.04402254531628119,
        "reasons": 0.04402254531628119,
        "section": 0.04402254531628119,
        "why": 0.04402254531628119,
        "5": 0.04402254531628119,
        "configuration": 0.08804509063256238,
        "docgen": 0.17609018126512477,
        "yml": 0.04402254531628119,
        "at": 0.04402254531628119,
        "repo": 0.04402254531628119,
        "root": 0.04402254531628119,
        "yaml": 0.04402254531628119,
        "llm": 0.04402254531628119,
        "runner": 0.04402254531628119,
        "ollama": 0.08804509063256238,
        "or": 0.13206763594884358,
        "llama": 0.04402254531628119,
        "cpp": 0.04402254531628119,
        "executable": 0.04402254531628119,
        "optional": 0.08804509063256238,
        "override": 0.04402254531628119,
        "for": 0.04402254531628119,
        "binaries": 0.04402254531628119,
        "model": 0.04402254531628119,
        "llama3": 0.04402254531628119,
        "8b": 0.04402254531628119,
        "instruct": 0.04402254531628119,
        "example": 0.04402254531628119,
        "local": 0.04402254531628119,
        "only": 0.08804509063256238,
        "max_tokens": 0.04402254531628119,
        "2048": 0.04402254531628119,
        "temperature": 0.04402254531628119,
        "0": 0.08804509063256238,
        "2": 0.04402254531628119,
        "readme": 0.13206763594884358,
        "style": 0.04402254531628119,
        "concise": 0.04402254531628119,
        "comprehensive": 0.04402254531628119,
        "template_pack": 0.04402254531628119,
        "enterprise": 0.04402254531628119,
        "bundle": 0.04402254531628119,
        "shipped": 0.04402254531628119,
        "with": 0.04402254531628119,
        "required_sections": 0.04402254531628119,
        "architecture": 0.04402254531628119,
        "build_and_test": 0.04402254531628119,
        "deployment": 0.04402254531628119,
        "troubleshooting": 0.04402254531628119,
        "faq": 0.04402254531628119,
        "license": 0.04402254531628119,
        "validation": 0.04402254531628119,
        "no_hallucination": 0.04402254531628119,
        "true": 0.08804509063256238,
        "set": 0.04402254531628119,
        "to": 0.08804509063256238,
        "false": 0.04402254531628119,
        "use": 0.04402254531628119,
        "docgen_validation_no_hallucination": 0.04402254531628119,
        "disable": 0.04402254531628119,
        "publish": 0.04402254531628119,
        "mode": 0.04402254531628119,
        "pr": 0.13206763594884358,
        "commit": 0.04402254531628119,
        "dry": 0.04402254531628119,
        "run": 0.04402254531628119,
        "branch_prefix": 0.04402254531628119,
        "labels": 0.04402254531628119,
        "docs": 0.04402254531628119,
        "auto": 0.04402254531628119,
        "update_existing": 0.04402254531628119,
        "refresh": 0.04402254531628119,
        "an": 0.04402254531628119,
        "existing": 0.04402254531628119,
        "instead": 0.04402254531628119,
        "of": 0.04402254531628119,
        "opening": 0.04402254531628119,
        "a": 0.04402254531628119,
        "new": 0.04402254531628119,
        "one": 0.04402254531628119,
        "analyzers": 0.04402254531628119,
        "enabled": 0.04402254531628119,
        "language": 0.04402254531628119,
        "build": 0.08804509063256238,
        "dependencies": 0.04402254531628119,
        "patterns": 0.04402254531628119,
        "exclude_paths": 0.04402254531628119,
        "git": 0.04402254531628119,
        "node_modules": 0.04402254531628119,
        "dist": 0.04402254531628119,
        "ci": 0.04402254531628119,
        "update": 0.04402254531628119,
        "if": 0.08804509063256238,
        "these": 0.04402254531628119,
        "paths": 0.04402254531628119,
        "change": 0.04402254531628119,
        "watched_globs": 0.04402254531628119,
        "src": 0.04402254531628119,
        "app": 0.04402254531628119,
        "cmd": 0.04402254531628119,
        "pom": 0.04402254531628119,
        "xml": 0.04402254531628119,
        "gradle": 0.04402254531628119,
        "package": 0.04402254531628119,
        "json": 0.04402254531628119,
        "requirements": 0.04402254531628119,
        "txt": 0.04402254531628119,
        "pyproject": 0.04402254531628119,
        "toml": 0.04402254531628119,
        "dockerfile": 0.04402254531628119,
        "no": 0.04402254531628119,
        "templates_dir": 0.04402254531628119,
        "is": 0.04402254531628119,
        "provided": 0.04402254531628119
      },
      "text": "class Signal: kind: str # \"framework\",\"service\",\"cli\",\"db\",\"queue\",\"dep\",\"entrypoint\",\"test\" name: str detail: Dict[str, str] @dataclass class AnalysisResult: manifest: RepoManifest signals: List[Signal] embedding_index_path: str @dataclass class SectionSpec: key: str # \"intro\",\"features\",\"arch\",\"quickstart\",... required: bool sources: List[str] # preferred retrieval tags template_name: str @dataclass class ReadmeDraft: sections: Dict[str, str] full_markdown: str @dataclass class UpdatePlan: strategy: str # \"full\"|\"patch\" changed_sections: List[str] reasons: Dict[str, str] # section->why ``` --- ## 5) Configuration (`.docgen.yml` at repo root) ```yaml llm: runner: \"ollama\" # or \"llama.cpp\" executable: \"ollama\" # optional override for CLI binaries model: \"llama3:8b-instruct\" # example; local only max_tokens: 2048 temperature: 0.2 readme: style: \"concise\" # or \"comprehensive\" template_pack: \"enterprise\" # optional bundle shipped with docgen required_sections: - intro - features - architecture - quickstart - configuration - build_and_test - deployment - troubleshooting - faq - license validation: no_hallucination: true # set to false or use DOCGEN_VALIDATION_NO_HALLUCINATION=0 to disable publish: mode: \"pr\" # \"commit\" | \"pr\" | \"dry-run\" branch_prefix: \"docgen/\" labels: - \"docs:auto\" update_existing: true # refresh an existing PR instead of opening a new one analyzers: enabled: - language - build - dependencies - patterns exclude_paths: - \".git/\" - \"node_modules/\" - \"dist/\" ci: # Only update README if these paths change watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" - \"requirements.txt\" - \"pyproject.toml\" - \"Dockerfile\" ``` > If no `readme.templates_dir` is provided, docgen",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#7",
      "vector": {
        "node_modules": 0.05006261743217589,
        "dist": 0.05006261743217589,
        "ci": 0.15018785229652767,
        "only": 0.10012523486435178,
        "update": 0.15018785229652767,
        "readme": 0.25031308716087947,
        "if": 0.15018785229652767,
        "these": 0.05006261743217589,
        "paths": 0.05006261743217589,
        "change": 0.05006261743217589,
        "watched_globs": 0.10012523486435178,
        "src": 0.10012523486435178,
        "app": 0.05006261743217589,
        "cmd": 0.05006261743217589,
        "pom": 0.10012523486435178,
        "xml": 0.10012523486435178,
        "build": 0.25031308716087947,
        "gradle": 0.10012523486435178,
        "package": 0.05006261743217589,
        "json": 0.05006261743217589,
        "requirements": 0.05006261743217589,
        "txt": 0.05006261743217589,
        "pyproject": 0.05006261743217589,
        "toml": 0.05006261743217589,
        "dockerfile": 0.10012523486435178,
        "no": 0.10012523486435178,
        "templates_dir": 0.05006261743217589,
        "is": 0.05006261743217589,
        "provided": 0.05006261743217589,
        "docgen": 0.25031308716087947,
        "automatically": 0.05006261743217589,
        "picks": 0.05006261743217589,
        "up": 0.05006261743217589,
        "docs": 0.05006261743217589,
        "templates": 0.10012523486435178,
        "bundles": 0.05006261743217589,
        "in": 0.10012523486435178,
        "the": 0.05006261743217589,
        "repository": 0.05006261743217589,
        "root": 0.05006261743217589,
        "and": 0.10012523486435178,
        "supports": 0.05006261743217589,
        "built": 0.05006261743217589,
        "template": 0.05006261743217589,
        "packs": 0.05006261743217589,
        "via": 0.10012523486435178,
        "template_pack": 0.05006261743217589,
        "6": 0.25031308716087947,
        "workflows": 0.05006261743217589,
        "1": 0.15018785229652767,
        "initialization": 0.05006261743217589,
        "repo": 0.05006261743217589,
        "without": 0.10012523486435178,
        "scan": 0.05006261743217589,
        "analyze": 0.05006261743217589,
        "manifest": 0.05006261743217589,
        "signals": 0.05006261743217589,
        "embeddings": 0.05006261743217589,
        "2": 0.15018785229652767,
        "prompt": 0.05006261743217589,
        "with": 0.10012523486435178,
        "default": 0.05006261743217589,
        "include": 0.05006261743217589,
        "getting": 0.05006261743217589,
        "started": 0.05006261743217589,
        "suggestions": 0.05006261743217589,
        "3": 0.15018785229652767,
        "generate": 0.10012523486435178,
        "sections": 0.20025046972870356,
        "sequentially": 0.05006261743217589,
        "streaming": 0.05006261743217589,
        "4": 0.10012523486435178,
        "post": 0.10012523486435178,
        "process": 0.10012523486435178,
        "toc": 0.05006261743217589,
        "badges": 0.05006261743217589,
        "status": 0.05006261743217589,
        "placeholder": 0.05006261743217589,
        "lint": 0.05006261743217589,
        "5": 0.10012523486435178,
        "publish": 0.05006261743217589,
        "direct": 0.05006261743217589,
        "commit": 0.10012523486435178,
        "md": 0.05006261743217589,
        "artifacts": 0.05006261743217589,
        "on": 0.05006261743217589,
        "pr": 0.10012523486435178,
        "detect": 0.05006261743217589,
        "changes": 0.05006261743217589,
        "git": 0.05006261743217589,
        "diff": 0.05006261743217589,
        "map": 0.05006261743217589,
        "files": 0.05006261743217589,
        "to": 0.15018785229652767,
        "using": 0.05006261743217589,
        "a": 0.05006261743217589,
        "rules": 0.05006261743217589,
        "matrix": 0.05006261743217589,
        "test": 0.05006261743217589,
        "quick": 0.05006261743217589,
        "start": 0.05006261743217589,
        "k8s": 0.05006261743217589,
        "deployment": 0.05006261743217589,
        "entrypoints": 0.05006261743217589,
        "architecture": 0.05006261743217589,
        "features": 0.05006261743217589,
        "decide": 0.05006261743217589,
        "updateplan": 0.05006261743217589,
        "patch": 0.05006261743217589,
        "impacted": 0.05006261743217589,
        "regenerate": 0.15018785229652767,
        "those": 0.05006261743217589,
        "skip": 0.05006261743217589,
        "changed": 0.05006261743217589,
        "file": 0.05006261743217589,
        "matches": 0.05006261743217589,
        "yml": 0.05006261743217589,
        "allows": 0.05006261743217589,
        "avoid": 0.05006261743217589,
        "unnecessary": 0.05006261743217589,
        "runs": 0.05006261743217589,
        "rag": 0.05006261743217589,
        "retrieval": 0.05006261743217589,
        "fetch": 0.05006261743217589,
        "top": 0.05006261743217589,
        "k": 0.05006261743217589,
        "chunks": 0.05006261743217589,
        "relevant": 0.05006261743217589,
        "each": 0.05006261743217589,
        "section": 0.10012523486435178,
        "open": 0.05006261743217589,
        "summary": 0.05006261743217589,
        "of": 0.05006261743217589,
        "deltas": 0.05006261743217589,
        "dry": 0.10012523486435178,
        "run": 0.10012523486435178,
        "support": 0.05006261743217589,
        "computes": 0.05006261743217589,
        "diffs": 0.05006261743217589,
        "scorecards": 0.05006261743217589,
        "writing": 0.05006261743217589,
        "or": 0.10012523486435178,
        "publishing": 0.05006261743217589,
        "manual": 0.05006261743217589,
        "full": 0.05006261743217589,
        "intro": 0.05006261743217589,
        "arch": 0.05006261743217589,
        "7": 0.05006261743217589,
        "contract": 0.05006261743217589
      },
      "text": "- \"node_modules/\" - \"dist/\" ci: # Only update README if these paths change watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" - \"requirements.txt\" - \"pyproject.toml\" - \"Dockerfile\" ``` > If no `readme.templates_dir` is provided, docgen automatically picks up `docs/templates/` bundles in the repository root and supports built-in template packs via `readme.template_pack`. --- ## 6) Workflows ### 6.1 Initialization (Repo without README) 1. **Scan & Analyze** \u2192 Manifest + Signals + Embeddings. 2. **Prompt Build** with default templates, include \u201cgetting started\u201d suggestions. 3. **Generate Sections** sequentially (streaming). 4. **Post-process** \u2192 ToC, badges (build status placeholder), lint. 5. **Publish**: direct commit `README.md` + `.docgen/` artifacts. ### 6.2 Update on Commit/PR 1. **Detect changes** via Git diff; map files to sections using a rules matrix: * `pom.xml`/`build.gradle` \u2192 *Build & Test*, *Quick Start*. * `Dockerfile`/`k8s` \u2192 *Deployment*. * `src/**` entrypoints \u2192 *Architecture*, *Features*. 2. **Decide UpdatePlan**: patch impacted sections; regenerate only those. 3. **Skip** if no changed file matches `.docgen.yml` `ci.watched_globs` (allows CI to avoid unnecessary runs). 4. **RAG retrieval**: fetch top-k chunks relevant to each section. 5. **Generate** \u2192 **Post-process** \u2192 **Open PR** with summary of deltas. 6. Dry-run support: `docgen update --dry-run` computes diffs and scorecards without writing or publishing. ### 6.3 Regenerate (Manual) * `docgen regenerate --full` or `--sections intro,arch`. --- ## 7) Section Contract",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#8",
      "vector": {
        "generate": 0.05923488777590923,
        "post": 0.11846977555181847,
        "process": 0.05923488777590923,
        "open": 0.05923488777590923,
        "pr": 0.05923488777590923,
        "with": 0.05923488777590923,
        "summary": 0.05923488777590923,
        "of": 0.05923488777590923,
        "deltas": 0.05923488777590923,
        "6": 0.11846977555181847,
        "dry": 0.11846977555181847,
        "run": 0.11846977555181847,
        "support": 0.11846977555181847,
        "docgen": 0.11846977555181847,
        "update": 0.05923488777590923,
        "computes": 0.05923488777590923,
        "diffs": 0.05923488777590923,
        "and": 0.11846977555181847,
        "scorecards": 0.05923488777590923,
        "without": 0.05923488777590923,
        "writing": 0.05923488777590923,
        "or": 0.1777046633277277,
        "publishing": 0.05923488777590923,
        "3": 0.05923488777590923,
        "regenerate": 0.11846977555181847,
        "manual": 0.05923488777590923,
        "full": 0.05923488777590923,
        "sections": 0.05923488777590923,
        "intro": 0.11846977555181847,
        "arch": 0.05923488777590923,
        "7": 0.05923488777590923,
        "section": 0.23693955110363693,
        "contract": 0.05923488777590923,
        "readme": 0.05923488777590923,
        "what": 0.05923488777590923,
        "why": 0.05923488777590923,
        "who": 0.05923488777590923,
        "it": 0.05923488777590923,
        "s": 0.05923488777590923,
        "for": 0.05923488777590923,
        "key": 0.05923488777590923,
        "features": 0.05923488777590923,
        "bullets": 0.05923488777590923,
        "grounded": 0.05923488777590923,
        "in": 0.05923488777590923,
        "real": 0.05923488777590923,
        "repo": 0.11846977555181847,
        "signals": 0.11846977555181847,
        "architecture": 0.05923488777590923,
        "overview": 0.05923488777590923,
        "diagram": 0.05923488777590923,
        "ascii": 0.05923488777590923,
        "components": 0.05923488777590923,
        "quick": 0.05923488777590923,
        "start": 0.05923488777590923,
        "minimal": 0.05923488777590923,
        "commands": 0.23693955110363693,
        "per": 0.11846977555181847,
        "build": 0.11846977555181847,
        "system": 0.11846977555181847,
        "configuration": 0.05923488777590923,
        "env": 0.05923488777590923,
        "vars": 0.05923488777590923,
        "files": 0.05923488777590923,
        "examples": 0.05923488777590923,
        "test": 0.05923488777590923,
        "coverage": 0.05923488777590923,
        "hint": 0.05923488777590923,
        "deployment": 0.05923488777590923,
        "container": 0.05923488777590923,
        "k8s": 0.05923488777590923,
        "instructions": 0.05923488777590923,
        "if": 0.1777046633277277,
        "detected": 0.1777046633277277,
        "troubleshooting": 0.05923488777590923,
        "common": 0.05923488777590923,
        "failures": 0.05923488777590923,
        "faq": 0.05923488777590923,
        "5": 0.05923488777590923,
        "10": 0.05923488777590923,
        "concise": 0.05923488777590923,
        "q": 0.05923488777590923,
        "a": 0.11846977555181847,
        "contributing": 0.11846977555181847,
        "md": 0.05923488777590923,
        "absent": 0.05923488777590923,
        "license": 0.05923488777590923,
        "templated": 0.05923488777590923,
        "each": 0.05923488777590923,
        "must": 0.05923488777590923,
        "be": 0.11846977555181847,
        "independently": 0.05923488777590923,
        "regenerable": 0.05923488777590923,
        "self": 0.05923488777590923,
        "contained": 0.05923488777590923,
        "8": 0.05923488777590923,
        "prompting": 0.05923488777590923,
        "strategy": 0.05923488777590923,
        "local": 0.05923488777590923,
        "llm": 0.05923488777590923,
        "message": 0.11846977555181847,
        "fixed": 0.05923488777590923,
        "guardrails": 0.05923488777590923,
        "you": 0.05923488777590923,
        "are": 0.05923488777590923,
        "senior": 0.05923488777590923,
        "dev": 0.05923488777590923,
        "doc": 0.05923488777590923,
        "writer": 0.05923488777590923,
        "precise": 0.05923488777590923,
        "cite": 0.05923488777590923,
        "facts": 0.05923488777590923,
        "only": 0.05923488777590923,
        "no": 0.05923488777590923,
        "speculation": 0.05923488777590923,
        "never": 0.05923488777590923,
        "invent": 0.05923488777590923,
        "prefer": 0.05923488777590923,
        "by": 0.05923488777590923,
        "analyzers": 0.05923488777590923,
        "user": 0.05923488777590923,
        "objective": 0.05923488777590923,
        "constraints": 0.05923488777590923,
        "tone": 0.05923488777590923,
        "length": 0.05923488777590923,
        "inject": 0.05923488777590923,
        "top": 0.05923488777590923,
        "k": 0.05923488777590923,
        "chunks": 0.05923488777590923,
        "rag": 0.05923488777590923,
        "provide": 0.05923488777590923,
        "style": 0.05923488777590923,
        "tokens": 0.05923488777590923,
        "headings": 0.05923488777590923,
        "code": 0.05923488777590923,
        "blocks": 0.05923488777590923,
        "tables": 0.05923488777590923,
        "filters": 0.05923488777590923,
        "refuse": 0.05923488777590923,
        "insufficient": 0.05923488777590923,
        "evidence": 0.05923488777590923,
        "fall": 0.05923488777590923,
        "back": 0.05923488777590923,
        "to": 0.05923488777590923,
        "template": 0.05923488777590923,
        "stubs": 0.05923488777590923,
        "9": 0.05923488777590923,
        "language": 0.05923488777590923,
        "project": 0.05923488777590923,
        "poc": 0.11846977555181847,
        "targets": 0.05923488777590923,
        "tier": 0.11846977555181847,
        "1": 0.05923488777590923,
        "python": 0.05923488777590923,
        "poetry": 0.05923488777590923,
        "setuptools": 0.05923488777590923,
        "java": 0.05923488777590923,
        "maven": 0.05923488777590923,
        "gradle": 0.05923488777590923,
        "spring": 0.05923488777590923,
        "boot": 0.05923488777590923,
        "node": 0.05923488777590923,
        "js": 0.05923488777590923,
        "npm": 0.05923488777590923,
        "pnpm": 0.05923488777590923,
        "express": 0.05923488777590923,
        "next": 0.05923488777590923,
        "2": 0.05923488777590923,
        "soon": 0.05923488777590923,
        "go": 0.05923488777590923,
        "modules": 0.05923488777590923
      },
      "text": "**Generate** \u2192 **Post-process** \u2192 **Open PR** with summary of deltas. 6. Dry-run support: `docgen update --dry-run` computes diffs and scorecards without writing or publishing. ### 6.3 Regenerate (Manual) * `docgen regenerate --full` or `--sections intro,arch`. --- ## 7) Section Contract (README) * **Intro**: what, why, who it\u2019s for * **Key Features**: bullets grounded in real repo signals * **Architecture**: overview diagram (ASCII) + components * **Quick Start**: minimal commands (per build system) * **Configuration**: env vars, files, examples * **Build & Test**: commands, coverage hint * **Deployment**: container/K8s instructions if detected * **Troubleshooting**: common failures * **FAQ**: 5\u201310 concise Q\\&A * **Contributing** (if `CONTRIBUTING.md` absent) * **License** (detected or templated) > Each section must be independently regenerable and self-contained. --- ## 8) Prompting Strategy (Local LLM) * **System message (fixed guardrails)**: * \u201cYou are a senior dev doc writer. Be precise. Cite repo facts only. No speculation.\u201d * \u201cNever invent commands. Prefer commands detected by analyzers.\u201d * **User message per section**: * Section objective + constraints (tone, length). * Inject **Signals** + **Top-k chunks** (RAG). * Provide **style tokens** (headings, code blocks, tables). * **Post-filters**: refuse if insufficient evidence; fall back to template stubs. --- ## 9) Language & Project Support (POC targets) * **Tier-1 (POC)**: Python (Poetry/Setuptools), Java (Maven/Gradle, Spring Boot), Node.js (npm/pnpm, Express/Next). * **Tier-2 (soon)**: Go (modules),",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#9",
      "vector": {
        "code": 0.0636929755298482,
        "blocks": 0.0318464877649241,
        "tables": 0.0318464877649241,
        "post": 0.0636929755298482,
        "filters": 0.0318464877649241,
        "refuse": 0.0318464877649241,
        "if": 0.0318464877649241,
        "insufficient": 0.0318464877649241,
        "evidence": 0.0318464877649241,
        "fall": 0.0318464877649241,
        "back": 0.0318464877649241,
        "to": 0.0318464877649241,
        "template": 0.0318464877649241,
        "stubs": 0.0636929755298482,
        "9": 0.0318464877649241,
        "language": 0.0636929755298482,
        "project": 0.0318464877649241,
        "support": 0.0318464877649241,
        "poc": 0.0636929755298482,
        "targets": 0.0318464877649241,
        "tier": 0.0636929755298482,
        "1": 0.0318464877649241,
        "python": 0.0955394632947723,
        "poetry": 0.0318464877649241,
        "setuptools": 0.0318464877649241,
        "java": 0.0318464877649241,
        "maven": 0.0318464877649241,
        "gradle": 0.0318464877649241,
        "spring": 0.0636929755298482,
        "boot": 0.0318464877649241,
        "node": 0.0318464877649241,
        "js": 0.0318464877649241,
        "npm": 0.0318464877649241,
        "pnpm": 0.0318464877649241,
        "express": 0.0318464877649241,
        "next": 0.0318464877649241,
        "2": 0.0318464877649241,
        "soon": 0.0318464877649241,
        "go": 0.0318464877649241,
        "modules": 0.0318464877649241,
        "rust": 0.0318464877649241,
        "cargo": 0.0318464877649241,
        "ruby": 0.0318464877649241,
        "bundler": 0.0318464877649241,
        "php": 0.0318464877649241,
        "composer": 0.0318464877649241,
        "detection": 0.0318464877649241,
        "via": 0.0318464877649241,
        "file": 0.0318464877649241,
        "heuristics": 0.0318464877649241,
        "optional": 0.0636929755298482,
        "tree": 0.0318464877649241,
        "sitter": 0.0318464877649241,
        "for": 0.0636929755298482,
        "function": 0.0318464877649241,
        "class": 0.0636929755298482,
        "extraction": 0.0318464877649241,
        "pluggable": 0.0318464877649241,
        "entry": 0.0318464877649241,
        "points": 0.0318464877649241,
        "main": 0.0636929755298482,
        "springbootapplication": 0.0318464877649241,
        "fastapi": 0.0636929755298482,
        "app": 0.1273859510596964,
        "bin": 0.0318464877649241,
        "cmd": 0.0318464877649241,
        "10": 0.0318464877649241,
        "interfaces": 0.0318464877649241,
        "skeleton": 0.0318464877649241,
        "docgen": 0.0318464877649241,
        "__init__": 0.0318464877649241,
        "py": 0.7961621941231025,
        "cli": 0.0955394632947723,
        "click": 0.0318464877649241,
        "typer": 0.0636929755298482,
        "failsafe": 0.0318464877649241,
        "fail": 0.0318464877649241,
        "safe": 0.0318464877649241,
        "readme": 0.0318464877649241,
        "logging": 0.0636929755298482,
        "configuration": 0.0318464877649241,
        "helpers": 0.0318464877649241,
        "orchestrator": 0.0318464877649241,
        "repo_scanner": 0.0318464877649241,
        "analyzers": 0.0318464877649241,
        "base": 0.0318464877649241,
        "analyzer": 0.0955394632947723,
        "abc": 0.1592324388246205,
        "build": 0.0318464877649241,
        "dependencies": 0.0318464877649241,
        "entrypoints": 0.0318464877649241,
        "patterns": 0.0318464877649241,
        "rag": 0.0318464877649241,
        "embedder": 0.0318464877649241,
        "local": 0.0318464877649241,
        "embedding": 0.0318464877649241,
        "model": 0.0318464877649241,
        "store": 0.0318464877649241,
        "prompting": 0.0318464877649241,
        "builder": 0.0318464877649241,
        "jinja2": 0.0318464877649241,
        "templates": 0.0636929755298482,
        "token": 0.0318464877649241,
        "mgmt": 0.0318464877649241,
        "constants": 0.0318464877649241,
        "j2": 0.0318464877649241,
        "per": 0.0318464877649241,
        "section": 0.0318464877649241,
        "llm": 0.0318464877649241,
        "runner": 0.0318464877649241,
        "adapter": 0.0318464877649241,
        "ollama": 0.0318464877649241,
        "llama": 0.0318464877649241,
        "cpp": 0.0318464877649241,
        "postproc": 0.0318464877649241,
        "lint": 0.0318464877649241,
        "links": 0.0318464877649241,
        "markers": 0.0318464877649241,
        "toc": 0.0318464877649241,
        "git": 0.0318464877649241,
        "diff": 0.0318464877649241,
        "publisher": 0.0318464877649241,
        "config": 0.0318464877649241,
        "models": 0.0636929755298482,
        "from": 0.0636929755298482,
        "import": 0.0636929755298482,
        "abstractmethod": 0.0955394632947723,
        "repomanifest": 0.0955394632947723,
        "signal": 0.0636929755298482,
        "def": 0.1592324388246205,
        "supports": 0.0318464877649241,
        "self": 0.0636929755298482,
        "manifest": 0.0636929755298482,
        "bool": 0.0955394632947723,
        "analyze": 0.0318464877649241,
        "list": 0.0318464877649241,
        "command": 0.0955394632947723,
        "init": 0.0318464877649241,
        "path": 0.0636929755298482,
        "str": 0.1592324388246205,
        "publish": 0.0318464877649241,
        "true": 0.0318464877649241,
        "update": 0.0318464877649241,
        "event": 0.0318464877649241,
        "commit": 0.0318464877649241,
        "diff_base": 0.0318464877649241,
        "origin": 0.0318464877649241,
        "regenerate": 0.0318464877649241,
        "sections": 0.0318464877649241,
        "full": 0.0318464877649241,
        "false": 0.0318464877649241,
        "service": 0.0318464877649241,
        "mode": 0.0318464877649241
      },
      "text": "code blocks, tables). * **Post-filters**: refuse if insufficient evidence; fall back to template stubs. --- ## 9) Language & Project Support (POC targets) * **Tier-1 (POC)**: Python (Poetry/Setuptools), Java (Maven/Gradle, Spring Boot), Node.js (npm/pnpm, Express/Next). * **Tier-2 (soon)**: Go (modules), Rust (Cargo), Ruby (Bundler), PHP (Composer). * Detection via: * File heuristics + optional tree-sitter for function/class extraction (pluggable). * Entry points: `main()`; Spring `@SpringBootApplication`; FastAPI app; `bin/`, `cmd/`. --- ## 10) Interfaces (Code Skeleton) ``` docgen/ __init__.py cli.py # click/typer CLI failsafe.py # fail-safe README stubs logging.py # logging configuration helpers orchestrator.py repo_scanner.py analyzers/ base.py # Analyzer ABC language.py build.py dependencies.py entrypoints.py patterns.py rag/ embedder.py # local embedding model store.py prompting/ builder.py # Jinja2 templates, token mgmt constants.py templates/ # *.j2 per section llm/ runner.py # adapter for ollama/llama.cpp postproc/ lint.py links.py markers.py toc.py git/ diff.py publisher.py config.py models.py ``` **Analyzer ABC** ```python from abc import ABC, abstractmethod from .models import RepoManifest, Signal class Analyzer(ABC): @abstractmethod def supports(self, manifest: RepoManifest) -> bool: ... @abstractmethod def analyze(self, manifest: RepoManifest) -> list[Signal]: ... ``` **CLI (Typer)** ```python @app.command() def init(path: str = \".\", publish: bool = True): ... @app.command() def update(path: str = \".\", event: str = \"commit\", diff_base: str = \"origin/main\"): ... @app.command() def regenerate(sections: str = \"\", full: bool = False): ... ``` **FastAPI (optional service mode)** * `POST",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#10",
      "vector": {
        "publish": 0.17586311452816478,
        "bool": 0.11724207635210984,
        "true": 0.05862103817605492,
        "app": 0.17586311452816478,
        "command": 0.11724207635210984,
        "def": 0.11724207635210984,
        "update": 0.17586311452816478,
        "path": 0.11724207635210984,
        "str": 0.23448415270421968,
        "event": 0.05862103817605492,
        "commit": 0.11724207635210984,
        "diff_base": 0.05862103817605492,
        "origin": 0.05862103817605492,
        "main": 0.05862103817605492,
        "regenerate": 0.05862103817605492,
        "sections": 0.23448415270421968,
        "full": 0.05862103817605492,
        "false": 0.05862103817605492,
        "fastapi": 0.05862103817605492,
        "optional": 0.11724207635210984,
        "service": 0.05862103817605492,
        "mode": 0.05862103817605492,
        "post": 0.35172622905632955,
        "analyze": 0.05862103817605492,
        "generate": 0.05862103817605492,
        "arch": 0.05862103817605492,
        "quickstart": 0.17586311452816478,
        "get": 0.05862103817605492,
        "status": 0.05862103817605492,
        "run_id": 0.05862103817605492,
        "11": 0.05862103817605492,
        "change": 0.05862103817605492,
        "impact": 0.05862103817605492,
        "matrix": 0.05862103817605492,
        "examples": 0.05862103817605492,
        "changed": 0.11724207635210984,
        "pattern": 0.05862103817605492,
        "to": 0.11724207635210984,
        "rebuild": 0.05862103817605492,
        "notes": 0.05862103817605492,
        "pom": 0.05862103817605492,
        "xml": 0.05862103817605492,
        "build": 0.23448415270421968,
        "gradle": 0.05862103817605492,
        "_and": 0.11724207635210984,
        "_test": 0.11724207635210984,
        "recompute": 0.05862103817605492,
        "commands": 0.05862103817605492,
        "requirements": 0.05862103817605492,
        "txt": 0.05862103817605492,
        "pyproject": 0.05862103817605492,
        "toml": 0.05862103817605492,
        "install": 0.05862103817605492,
        "steps": 0.05862103817605492,
        "dockerfile": 0.05862103817605492,
        "k8s": 0.05862103817605492,
        "deployment": 0.05862103817605492,
        "container": 0.05862103817605492,
        "changes": 0.05862103817605492,
        "src": 0.05862103817605492,
        "cmd": 0.05862103817605492,
        "features": 0.05862103817605492,
        "architecture": 0.17586311452816478,
        "if": 0.05862103817605492,
        "entrypoint": 0.05862103817605492,
        "intro": 0.05862103817605492,
        "too": 0.05862103817605492,
        "docs": 0.05862103817605492,
        "all": 0.05862103817605492,
        "patch": 0.05862103817605492,
        "prefer": 0.05862103817605492,
        "doc": 0.05862103817605492,
        "driven": 0.05862103817605492,
        "readme": 0.11724207635210984,
        "md": 0.05862103817605492,
        "none": 0.05862103817605492,
        "unless": 0.05862103817605492,
        "empty": 0.05862103817605492,
        "prevent": 0.05862103817605492,
        "loops": 0.05862103817605492,
        "12": 0.05862103817605492,
        "processing": 0.05862103817605492,
        "rules": 0.05862103817605492,
        "headings": 0.05862103817605492,
        "start": 0.05862103817605492,
        "at": 0.05862103817605492,
        "for": 0.11724207635210984,
        "title": 0.05862103817605492,
        "then": 0.05862103817605492,
        "add": 0.05862103817605492,
        "auto": 0.05862103817605492,
        "toc": 0.05862103817605492,
        "level": 0.05862103817605492,
        "3": 0.05862103817605492,
        "validate": 0.05862103817605492,
        "code": 0.05862103817605492,
        "blocks": 0.05862103817605492,
        "bash": 0.05862103817605492,
        "python": 0.05862103817605492,
        "convert": 0.05862103817605492,
        "absolute": 0.05862103817605492,
        "github": 0.05862103817605492,
        "links": 0.05862103817605492,
        "relative": 0.05862103817605492,
        "where": 0.05862103817605492,
        "possible": 0.05862103817605492,
        "ensure": 0.05862103817605492,
        "idempotency": 0.05862103817605492,
        "only": 0.05862103817605492,
        "edit": 0.05862103817605492,
        "between": 0.05862103817605492,
        "managed": 0.05862103817605492,
        "markers": 0.11724207635210984,
        "docgen": 0.11724207635210984,
        "begin": 0.05862103817605492,
        "end": 0.05862103817605492,
        "13": 0.05862103817605492,
        "git": 0.05862103817605492,
        "ci": 0.05862103817605492,
        "integration": 0.05862103817605492,
        "local": 0.05862103817605492,
        "pre": 0.05862103817605492,
        "forbid": 0.05862103817605492,
        "direct": 0.05862103817605492,
        "edits": 0.05862103817605492,
        "outside": 0.05862103817605492,
        "merge": 0.05862103817605492,
        "checkout": 0.05862103817605492,
        "remind": 0.05862103817605492
      },
      "text": "= \".\", publish: bool = True): ... @app.command() def update(path: str = \".\", event: str = \"commit\", diff_base: str = \"origin/main\"): ... @app.command() def regenerate(sections: str = \"\", full: bool = False): ... ``` **FastAPI (optional service mode)** * `POST /analyze` * `POST /generate?sections=arch,quickstart` * `POST /publish` * `GET /status/{run_id}` --- ## 11) Change Impact Matrix (examples) | Changed Path Pattern | Sections to Rebuild | Notes | | ------------------------------------ | ---------------------------- | --------------------------------------- | | `pom.xml`, `build.gradle*` | build\\_and\\_test, quickstart | Recompute build commands | | `requirements.txt`, `pyproject.toml` | build\\_and\\_test, quickstart | Update install steps | | `Dockerfile`, `k8s/**` | deployment | Publish container changes | | `src/**`, `app/**`, `cmd/**` | features, architecture | If entrypoint changed, update intro too | | `docs/**` | all (patch) | Prefer doc-driven | | `README.md` | none (unless empty) | Prevent loops | --- ## 12) Post-Processing Rules * Headings start at `#` for title then `##` for sections. * Add **auto ToC** (<= level 3). * Validate code blocks (` ```bash`, ` ```python`). * Convert absolute GitHub links to relative where possible. * Ensure **idempotency**: only edit between managed markers: * `<!-- docgen:begin:architecture -->` \u2026 `<!-- docgen:end:architecture -->` --- ## 13) Git & CI Integration ### Local * **pre-commit**: forbid direct README edits outside markers (optional). * **post-merge / post-checkout**: remind",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#11",
      "vector": {
        "possible": 0.11162911443718952,
        "ensure": 0.05581455721859476,
        "idempotency": 0.05581455721859476,
        "only": 0.16744367165578428,
        "edit": 0.05581455721859476,
        "between": 0.05581455721859476,
        "managed": 0.05581455721859476,
        "markers": 0.11162911443718952,
        "docgen": 0.22325822887437904,
        "begin": 0.05581455721859476,
        "architecture": 0.11162911443718952,
        "end": 0.05581455721859476,
        "13": 0.05581455721859476,
        "git": 0.11162911443718952,
        "ci": 0.11162911443718952,
        "integration": 0.05581455721859476,
        "local": 0.16744367165578428,
        "pre": 0.05581455721859476,
        "commit": 0.05581455721859476,
        "forbid": 0.05581455721859476,
        "direct": 0.05581455721859476,
        "readme": 0.05581455721859476,
        "edits": 0.05581455721859476,
        "outside": 0.05581455721859476,
        "optional": 0.16744367165578428,
        "post": 0.16744367165578428,
        "merge": 0.05581455721859476,
        "checkout": 0.11162911443718952,
        "remind": 0.05581455721859476,
        "to": 0.05581455721859476,
        "run": 0.05581455721859476,
        "update": 0.16744367165578428,
        "github": 0.11162911443718952,
        "gitlab": 0.05581455721859476,
        "bitbucket": 0.05581455721859476,
        "on": 0.05581455721859476,
        "push": 0.05581455721859476,
        "pr": 0.2790727860929738,
        "1": 0.11162911443718952,
        "repo": 0.11162911443718952,
        "2": 0.16744367165578428,
        "event": 0.05581455721859476,
        "diff": 0.11162911443718952,
        "base": 0.05581455721859476,
        "base_sha": 0.05581455721859476,
        "3": 0.05581455721859476,
        "if": 0.16744367165578428,
        "changes": 0.05581455721859476,
        "open": 0.05581455721859476,
        "with": 0.05581455721859476,
        "labeled": 0.05581455721859476,
        "docs": 0.11162911443718952,
        "auto": 0.05581455721859476,
        "tokenless": 0.05581455721859476,
        "mode": 0.05581455721859476,
        "created": 0.05581455721859476,
        "from": 0.05581455721859476,
        "a": 0.05581455721859476,
        "app": 0.05581455721859476,
        "bot": 0.05581455721859476,
        "account": 0.05581455721859476,
        "14": 0.05581455721859476,
        "quality": 0.05581455721859476,
        "gates": 0.05581455721859476,
        "evaluation": 0.05581455721859476,
        "consistency": 0.05581455721859476,
        "checks": 0.05581455721859476,
        "commands": 0.11162911443718952,
        "exist": 0.05581455721859476,
        "in": 0.11162911443718952,
        "ports": 0.05581455721859476,
        "env": 0.05581455721859476,
        "vars": 0.05581455721859476,
        "match": 0.05581455721859476,
        "configs": 0.05581455721859476,
        "no": 0.11162911443718952,
        "hallucinations": 0.05581455721859476,
        "reject": 0.05581455721859476,
        "new": 0.05581455721859476,
        "facts": 0.05581455721859476,
        "not": 0.05581455721859476,
        "found": 0.11162911443718952,
        "signals": 0.05581455721859476,
        "rag": 0.11162911443718952,
        "style": 0.05581455721859476,
        "concise": 0.05581455721859476,
        "paragraphs": 0.05581455721859476,
        "actionable": 0.05581455721859476,
        "filler": 0.05581455721859476,
        "marketing": 0.05581455721859476,
        "scorecard": 0.05581455721859476,
        "0": 0.05581455721859476,
        "100": 0.05581455721859476,
        "coverage": 0.05581455721859476,
        "of": 0.11162911443718952,
        "required": 0.05581455721859476,
        "sections": 0.05581455721859476,
        "30": 0.05581455721859476,
        "buildability": 0.05581455721859476,
        "quick": 0.05581455721859476,
        "start": 0.05581455721859476,
        "20": 0.11162911443718952,
        "link": 0.05581455721859476,
        "validity": 0.05581455721859476,
        "10": 0.16744367165578428,
        "alignment": 0.05581455721859476,
        "w": 0.05581455721859476,
        "change": 0.05581455721859476,
        "set": 0.05581455721859476,
        "lint": 0.05581455721859476,
        "reviewer": 0.05581455721859476,
        "feedback": 0.05581455721859476,
        "loop": 0.05581455721859476,
        "15": 0.05581455721859476,
        "security": 0.05581455721859476,
        "privacy": 0.05581455721859476,
        "llm": 0.11162911443718952,
        "and": 0.05581455721859476,
        "embedding": 0.05581455721859476,
        "models": 0.05581455721859476,
        "respect": 0.05581455721859476,
        "gitignore": 0.05581455721859476,
        "configurable": 0.05581455721859476,
        "exclude_paths": 0.05581455721859476,
        "never": 0.05581455721859476,
        "index": 0.05581455721859476,
        "large": 0.05581455721859476,
        "binaries": 0.05581455721859476,
        "secret": 0.11162911443718952,
        "files": 0.05581455721859476,
        "simple": 0.05581455721859476,
        "scan": 0.05581455721859476,
        "block": 0.05581455721859476,
        "16": 0.05581455721859476,
        "mvp": 0.05581455721859476,
        "plan": 0.05581455721859476,
        "weeks": 0.05581455721859476,
        "suggested": 0.05581455721859476,
        "breakdown": 0.05581455721859476,
        "core": 0.05581455721859476,
        "path": 0.05581455721859476,
        "cli": 0.05581455721859476,
        "scanner": 0.05581455721859476,
        "language": 0.05581455721859476,
        "build": 0.05581455721859476,
        "analyzers": 0.05581455721859476,
        "python": 0.05581455721859476,
        "java": 0.05581455721859476,
        "node": 0.05581455721859476,
        "prompt": 0.05581455721859476,
        "builder": 0.05581455721859476,
        "runner": 0.05581455721859476,
        "ollama": 0.05581455721859476,
        "adapter": 0.05581455721859476,
        "processor": 0.05581455721859476,
        "publisher": 0.05581455721859476,
        "lite": 0.05581455721859476,
        "embed": 0.05581455721859476
      },
      "text": "possible. * Ensure **idempotency**: only edit between managed markers: * `<!-- docgen:begin:architecture -->` \u2026 `<!-- docgen:end:architecture -->` --- ## 13) Git & CI Integration ### Local * **pre-commit**: forbid direct README edits outside markers (optional). * **post-merge / post-checkout**: remind to run `docgen update` (optional). ### CI (GitHub/GitLab/Bitbucket) * On push/PR: 1. Checkout repo. 2. `docgen update --event pr --diff-base $BASE_SHA` 3. If changes \u2192 open/update PR with labeled `docs:auto`. * Tokenless mode possible if PR created from a GitHub App/bot account. --- ## 14) Quality Gates & Evaluation * **Consistency checks**: commands exist in repo; ports/env vars match configs. * **No hallucinations**: reject new facts not found in signals/RAG. * **Style**: concise paragraphs, actionable commands, no filler marketing. * **Scorecard** (0\u2013100): * Coverage of required sections (30) * Buildability of quick start (20) * Link validity (10) * Diff alignment w/ change set (20) * Lint (10) * Reviewer feedback loop (10) --- ## 15) Security & Privacy * **Local only** LLM and embedding models. * Respect `.gitignore` + configurable `exclude_paths`. * Never index large binaries/secret files. * Optional simple **secret scan**; block if found. --- ## 16) MVP Plan (2 weeks suggested breakdown) 1. **Core path**: CLI, Scanner, Language+Build analyzers (Python/Java/Node), Prompt Builder, Local LLM runner (Ollama adapter), Post-processor, Git Publisher (PR). 2. **RAG Lite**: embed only `/docs`,",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#12",
      "vector": {
        "simple": 0.058823529411764705,
        "secret": 0.058823529411764705,
        "scan": 0.058823529411764705,
        "block": 0.058823529411764705,
        "if": 0.058823529411764705,
        "found": 0.058823529411764705,
        "16": 0.058823529411764705,
        "mvp": 0.058823529411764705,
        "plan": 0.058823529411764705,
        "2": 0.17647058823529413,
        "weeks": 0.058823529411764705,
        "suggested": 0.058823529411764705,
        "breakdown": 0.058823529411764705,
        "1": 0.11764705882352941,
        "core": 0.058823529411764705,
        "path": 0.058823529411764705,
        "cli": 0.058823529411764705,
        "scanner": 0.058823529411764705,
        "language": 0.058823529411764705,
        "build": 0.17647058823529413,
        "analyzers": 0.058823529411764705,
        "python": 0.17647058823529413,
        "java": 0.058823529411764705,
        "node": 0.058823529411764705,
        "prompt": 0.058823529411764705,
        "builder": 0.058823529411764705,
        "local": 0.058823529411764705,
        "llm": 0.058823529411764705,
        "runner": 0.058823529411764705,
        "ollama": 0.058823529411764705,
        "adapter": 0.058823529411764705,
        "post": 0.058823529411764705,
        "processor": 0.058823529411764705,
        "git": 0.058823529411764705,
        "publisher": 0.058823529411764705,
        "pr": 0.11764705882352941,
        "rag": 0.058823529411764705,
        "lite": 0.058823529411764705,
        "embed": 0.058823529411764705,
        "only": 0.058823529411764705,
        "docs": 0.058823529411764705,
        "existing": 0.058823529411764705,
        "readme": 0.11764705882352941,
        "top": 0.058823529411764705,
        "20": 0.058823529411764705,
        "largest": 0.058823529411764705,
        "source": 0.058823529411764705,
        "files": 0.058823529411764705,
        "heads": 0.058823529411764705,
        "3": 0.058823529411764705,
        "triggers": 0.058823529411764705,
        "single": 0.058823529411764705,
        "commit": 0.058823529411764705,
        "mode": 0.11764705882352941,
        "as": 0.11764705882352941,
        "stretch": 0.058823529411764705,
        "4": 0.058823529411764705,
        "templates": 0.11764705882352941,
        "8": 0.058823529411764705,
        "sections": 0.058823529411764705,
        "jinja2": 0.23529411764705882,
        "managed": 0.058823529411764705,
        "markers": 0.058823529411764705,
        "5": 0.058823529411764705,
        "config": 0.058823529411764705,
        "docgen": 0.058823529411764705,
        "yml": 0.058823529411764705,
        "minimal": 0.11764705882352941,
        "17": 0.17647058823529413,
        "example": 0.058823529411764705,
        "section": 0.11764705882352941,
        "template": 0.058823529411764705,
        "architecture": 0.23529411764705882,
        "j2": 0.11764705882352941,
        "project_name": 0.11764705882352941,
        "is": 0.058823529411764705,
        "structured": 0.058823529411764705,
        "ascii": 0.058823529411764705,
        "_architecture": 0.058823529411764705,
        "key": 0.058823529411764705,
        "components": 0.11764705882352941,
        "for": 0.11764705882352941,
        "comp": 0.17647058823529413,
        "in": 0.058823529411764705,
        "name": 0.058823529411764705,
        "summary": 0.058823529411764705,
        "endfor": 0.058823529411764705,
        "data": 0.058823529411764705,
        "flow": 0.058823529411764705,
        "data_flow": 0.058823529411764705,
        "generated": 0.058823529411764705,
        "from": 0.058823529411764705,
        "detected": 0.058823529411764705,
        "signals": 0.058823529411764705,
        "signals_summary": 0.058823529411764705,
        "frame": 0.058823529411764705,
        "composed": 0.058823529411764705,
        "intro": 0.058823529411764705,
        "features": 0.17647058823529413,
        "include": 0.058823529411764705,
        "quick": 0.058823529411764705,
        "start": 0.058823529411764705,
        "quickstart": 0.058823529411764705,
        "configuration": 0.11764705882352941,
        "test": 0.058823529411764705,
        "build_and_test": 0.11764705882352941,
        "deployment": 0.17647058823529413,
        "troubleshooting": 0.11764705882352941,
        "faq": 0.11764705882352941,
        "license": 0.11764705882352941,
        "18": 0.058823529411764705,
        "snippets": 0.058823529411764705,
        "change": 0.058823529411764705,
        "impact": 0.058823529411764705,
        "heuristic": 0.058823529411764705,
        "section_rules": 0.058823529411764705,
        "pom": 0.058823529411764705,
        "xml": 0.058823529411764705,
        "gradle": 0.058823529411764705,
        "requirements": 0.058823529411764705,
        "txt": 0.058823529411764705,
        "pyproject": 0.058823529411764705,
        "toml": 0.058823529411764705,
        "package": 0.058823529411764705,
        "json": 0.058823529411764705,
        "dockerfile": 0.058823529411764705,
        "k8s": 0.058823529411764705,
        "src": 0.11764705882352941,
        "app": 0.11764705882352941,
        "cmd": 0.11764705882352941,
        "def": 0.058823529411764705,
        "sections_from_diff": 0.058823529411764705,
        "paths": 0.058823529411764705,
        "list": 0.058823529411764705,
        "str": 0.11764705882352941,
        "set": 0.11764705882352941,
        "out": 0.058823529411764705
      },
      "text": "simple **secret scan**; block if found. --- ## 16) MVP Plan (2 weeks suggested breakdown) 1. **Core path**: CLI, Scanner, Language+Build analyzers (Python/Java/Node), Prompt Builder, Local LLM runner (Ollama adapter), Post-processor, Git Publisher (PR). 2. **RAG Lite**: embed only `/docs`, existing `README`, top 20 largest source files\u2019 heads. 3. **Triggers**: single \u201ccommit\u201d mode; PR mode as stretch. 4. **Templates**: 8 sections, Jinja2; managed markers. 5. **Config**: `.docgen.yml` minimal. --- ## 17) Example Templates ### 17.1 Section Template (Jinja2 \u2014 architecture.j2) ```jinja2 ## Architecture {{ project_name }} is structured as: ``` {{ ascii\\_architecture }} ``` **Key components** {% for comp in components %} - **{{ comp.name }}** \u2014 {{ comp.summary }} {% endfor %} **Data flow** {{ data_flow }} > Generated from detected signals: {{ signals_summary }} ``` ### 17.2 README Frame (composed) ```jinja2 # {{ project_name }} {{ intro }} ## Features {{ features }} {% include \"architecture.j2\" %} ## Quick Start {{ quickstart }} ## Configuration {{ configuration }} ## Build & Test {{ build_and_test }} ## Deployment {{ deployment }} ## Troubleshooting {{ troubleshooting }} ## FAQ {{ faq }} ## License {{ license }} ``` --- ## 18) Minimal Python Snippets **Change impact heuristic** ```python SECTION_RULES = [ (\"build_and_test\", [\"pom.xml\",\"build.gradle\",\"requirements.txt\",\"pyproject.toml\",\"package.json\"]), (\"deployment\", [\"Dockerfile\",\"k8s/\"]), (\"architecture\", [\"src/\",\"app/\",\"cmd/\"]), (\"features\", [\"src/\",\"app/\",\"cmd/\"]), ] def sections_from_diff(paths: list[str]) -> set[str]: out = set() for section,",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#13",
      "vector": {
        "faq": 0.04432422071779363,
        "license": 0.08864844143558726,
        "18": 0.04432422071779363,
        "minimal": 0.04432422071779363,
        "python": 0.13297266215338088,
        "snippets": 0.04432422071779363,
        "change": 0.04432422071779363,
        "impact": 0.04432422071779363,
        "heuristic": 0.04432422071779363,
        "section_rules": 0.08864844143558726,
        "build_and_test": 0.04432422071779363,
        "pom": 0.08864844143558726,
        "xml": 0.08864844143558726,
        "build": 0.13297266215338088,
        "gradle": 0.08864844143558726,
        "requirements": 0.04432422071779363,
        "txt": 0.04432422071779363,
        "pyproject": 0.04432422071779363,
        "toml": 0.04432422071779363,
        "package": 0.08864844143558726,
        "json": 0.08864844143558726,
        "deployment": 0.04432422071779363,
        "dockerfile": 0.04432422071779363,
        "k8s": 0.04432422071779363,
        "architecture": 0.04432422071779363,
        "src": 0.13297266215338088,
        "app": 0.13297266215338088,
        "cmd": 0.13297266215338088,
        "features": 0.04432422071779363,
        "def": 0.08864844143558726,
        "sections_from_diff": 0.04432422071779363,
        "paths": 0.08864844143558726,
        "list": 0.04432422071779363,
        "str": 0.26594532430676177,
        "set": 0.08864844143558726,
        "out": 0.13297266215338088,
        "for": 0.2216211035889681,
        "section": 0.08864844143558726,
        "patterns": 0.13297266215338088,
        "in": 0.2216211035889681,
        "if": 0.2216211035889681,
        "any": 0.04432422071779363,
        "p": 0.13297266215338088,
        "pat": 0.08864844143558726,
        "startswith": 0.04432422071779363,
        "add": 0.04432422071779363,
        "return": 0.13297266215338088,
        "or": 0.08864844143558726,
        "intro": 0.08864844143558726,
        "fall": 0.04432422071779363,
        "back": 0.04432422071779363,
        "to": 0.08864844143558726,
        "uncertain": 0.04432422071779363,
        "managed": 0.04432422071779363,
        "markers": 0.08864844143558726,
        "patch": 0.04432422071779363,
        "replace_block": 0.04432422071779363,
        "md": 0.2216211035889681,
        "key": 0.13297266215338088,
        "new": 0.08864844143558726,
        "start": 0.1772968828711745,
        "f": 0.13297266215338088,
        "docgen": 0.1772968828711745,
        "begin": 0.04432422071779363,
        "end": 0.2216211035889681,
        "and": 0.04432422071779363,
        "pre": 0.08864844143558726,
        "rest": 0.08864844143558726,
        "split": 0.08864844143558726,
        "1": 0.08864844143558726,
        "_": 0.04432422071779363,
        "post": 0.08864844143558726,
        "n": 0.08864844143558726,
        "insert": 0.04432422071779363,
        "missing": 0.04432422071779363,
        "19": 0.04432422071779363,
        "open": 0.04432422071779363,
        "questions": 0.04432422071779363,
        "trade": 0.04432422071779363,
        "offs": 0.04432422071779363,
        "embeddings": 0.04432422071779363,
        "use": 0.04432422071779363,
        "a": 0.13297266215338088,
        "tiny": 0.04432422071779363,
        "local": 0.04432422071779363,
        "model": 0.08864844143558726,
        "vs": 0.08864844143558726,
        "rule": 0.04432422071779363,
        "based": 0.04432422071779363,
        "retrieval": 0.04432422071779363,
        "mvp": 0.04432422071779363,
        "tree": 0.04432422071779363,
        "sitter": 0.04432422071779363,
        "adds": 0.04432422071779363,
        "power": 0.04432422071779363,
        "but": 0.04432422071779363,
        "increases": 0.04432422071779363,
        "footprint": 0.04432422071779363,
        "gate": 0.04432422071779363,
        "behind": 0.04432422071779363,
        "flag": 0.04432422071779363,
        "pr": 0.08864844143558726,
        "author": 0.04432422071779363,
        "bot": 0.04432422071779363,
        "account": 0.04432422071779363,
        "developer": 0.04432422071779363,
        "token": 0.04432422071779363,
        "decide": 0.04432422071779363,
        "per": 0.04432422071779363,
        "environment": 0.04432422071779363,
        "markdown": 0.04432422071779363,
        "diffs": 0.04432422071779363,
        "keep": 0.04432422071779363,
        "sections": 0.04432422071779363,
        "atomic": 0.04432422071779363,
        "minimize": 0.04432422071779363,
        "noisy": 0.04432422071779363,
        "prs": 0.04432422071779363,
        "20": 0.04432422071779363,
        "example": 0.04432422071779363,
        "yml": 0.04432422071779363,
        "mixed": 0.04432422071779363,
        "repo": 0.04432422071779363,
        "yaml": 0.04432422071779363,
        "llm": 0.04432422071779363,
        "runner": 0.04432422071779363,
        "ollama": 0.04432422071779363,
        "llama3": 0.04432422071779363,
        "8b": 0.04432422071779363,
        "instruct": 0.04432422071779363,
        "temperature": 0.04432422071779363,
        "0": 0.04432422071779363,
        "15": 0.04432422071779363,
        "readme": 0.04432422071779363,
        "style": 0.04432422071779363,
        "comprehensive": 0.04432422071779363,
        "publish": 0.04432422071779363,
        "mode": 0.04432422071779363,
        "branch_prefix": 0.04432422071779363,
        "analyzers": 0.04432422071779363,
        "enabled": 0.04432422071779363,
        "language": 0.04432422071779363,
        "dependencies": 0.04432422071779363,
        "exclude_paths": 0.04432422071779363,
        "git": 0.04432422071779363,
        "node_modules": 0.04432422071779363,
        "dist": 0.04432422071779363,
        "target": 0.04432422071779363,
        "ci": 0.04432422071779363,
        "watched_globs": 0.04432422071779363
      },
      "text": "faq }} ## License {{ license }} ``` --- ## 18) Minimal Python Snippets **Change impact heuristic** ```python SECTION_RULES = [ (\"build_and_test\", [\"pom.xml\",\"build.gradle\",\"requirements.txt\",\"pyproject.toml\",\"package.json\"]), (\"deployment\", [\"Dockerfile\",\"k8s/\"]), (\"architecture\", [\"src/\",\"app/\",\"cmd/\"]), (\"features\", [\"src/\",\"app/\",\"cmd/\"]), ] def sections_from_diff(paths: list[str]) -> set[str]: out = set() for section, patterns in SECTION_RULES: if any(p for p in paths for pat in patterns if p.startswith(pat)): out.add(section) return out or {\"intro\"} # fall back to intro if uncertain ``` **Managed markers (patch)** ```python def replace_block(md: str, key: str, new: str) -> str: start = f\"<!-- docgen:begin:{key} -->\" end = f\"<!-- docgen:end:{key} -->\" if start in md and end in md: pre, rest = md.split(start, 1) _, post = rest.split(end, 1) return f\"{pre}{start}\\n{new}\\n{end}{post}\" return md # or insert markers if missing ``` --- ## 19) Open Questions / Trade-offs * **Embeddings**: Use a tiny local model vs. rule-based retrieval for MVP? * **Tree-sitter**: Adds power but increases footprint\u2014gate behind a flag. * **PR author**: Bot account vs. developer token\u2014decide per environment. * **Markdown diffs**: Keep sections atomic to minimize noisy PRs. --- ## 20) Example `.docgen.yml` for a Mixed Repo ```yaml llm: runner: \"ollama\" model: \"llama3:8b-instruct\" temperature: 0.15 readme: style: \"comprehensive\" publish: mode: \"pr\" branch_prefix: \"docgen/\" analyzers: enabled: [language, build, dependencies, patterns] exclude_paths: [\".git/\", \"node_modules/\", \"dist/\", \"target/\"] ci: watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" -",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#14",
      "vector": {
        "runner": 0.07715167498104596,
        "ollama": 0.1543033499620919,
        "model": 0.07715167498104596,
        "llama3": 0.07715167498104596,
        "8b": 0.07715167498104596,
        "instruct": 0.07715167498104596,
        "temperature": 0.07715167498104596,
        "0": 0.07715167498104596,
        "15": 0.07715167498104596,
        "readme": 0.1543033499620919,
        "style": 0.1543033499620919,
        "comprehensive": 0.07715167498104596,
        "publish": 0.07715167498104596,
        "mode": 0.07715167498104596,
        "pr": 0.1543033499620919,
        "branch_prefix": 0.07715167498104596,
        "docgen": 0.23145502494313785,
        "analyzers": 0.1543033499620919,
        "enabled": 0.07715167498104596,
        "language": 0.07715167498104596,
        "build": 0.1543033499620919,
        "dependencies": 0.07715167498104596,
        "patterns": 0.07715167498104596,
        "exclude_paths": 0.07715167498104596,
        "git": 0.07715167498104596,
        "node_modules": 0.07715167498104596,
        "dist": 0.07715167498104596,
        "target": 0.07715167498104596,
        "ci": 0.07715167498104596,
        "watched_globs": 0.07715167498104596,
        "src": 0.07715167498104596,
        "app": 0.07715167498104596,
        "cmd": 0.07715167498104596,
        "pom": 0.1543033499620919,
        "xml": 0.1543033499620919,
        "gradle": 0.07715167498104596,
        "package": 0.07715167498104596,
        "json": 0.07715167498104596,
        "requirements": 0.1543033499620919,
        "txt": 0.1543033499620919,
        "dockerfile": 0.07715167498104596,
        "21": 0.07715167498104596,
        "success": 0.07715167498104596,
        "criteria": 0.07715167498104596,
        "poc": 0.07715167498104596,
        "for": 0.07715167498104596,
        "3": 0.07715167498104596,
        "diverse": 0.07715167498104596,
        "repos": 0.07715167498104596,
        "python": 0.07715167498104596,
        "cli": 0.1543033499620919,
        "spring": 0.07715167498104596,
        "boot": 0.07715167498104596,
        "api": 0.07715167498104596,
        "node": 0.07715167498104596,
        "webapp": 0.07715167498104596,
        "init": 0.1543033499620919,
        "produces": 0.07715167498104596,
        "a": 0.23145502494313785,
        "working": 0.07715167498104596,
        "linted": 0.07715167498104596,
        "with": 0.07715167498104596,
        "runnable": 0.07715167498104596,
        "quick": 0.07715167498104596,
        "start": 0.07715167498104596,
        "on": 0.07715167498104596,
        "changing": 0.07715167498104596,
        "or": 0.07715167498104596,
        "updates": 0.07715167498104596,
        "only": 0.07715167498104596,
        "relevant": 0.07715167498104596,
        "sections": 0.07715167498104596,
        "no": 0.07715167498104596,
        "hallucinated": 0.07715167498104596,
        "commands": 0.07715167498104596,
        "links": 0.07715167498104596,
        "and": 0.23145502494313785,
        "badges": 0.07715167498104596,
        "validate": 0.07715167498104596,
        "consistent": 0.07715167498104596,
        "if": 0.07715167498104596,
        "you": 0.1543033499620919,
        "want": 0.07715167498104596,
        "i": 0.07715167498104596,
        "can": 0.1543033499620919,
        "spin": 0.07715167498104596,
        "up": 0.07715167498104596,
        "starter": 0.07715167498104596,
        "repo": 0.07715167498104596,
        "layout": 0.07715167498104596,
        "templates": 0.07715167498104596,
        "simple": 0.07715167498104596,
        "adapter": 0.07715167498104596,
        "so": 0.07715167498104596,
        "drop": 0.07715167498104596,
        "it": 0.07715167498104596,
        "into": 0.07715167498104596,
        "your": 0.07715167498104596,
        "environment": 0.07715167498104596,
        "run": 0.07715167498104596,
        "right": 0.07715167498104596,
        "away": 0.07715167498104596
      },
      "text": "runner: \"ollama\" model: \"llama3:8b-instruct\" temperature: 0.15 readme: style: \"comprehensive\" publish: mode: \"pr\" branch_prefix: \"docgen/\" analyzers: enabled: [language, build, dependencies, patterns] exclude_paths: [\".git/\", \"node_modules/\", \"dist/\", \"target/\"] ci: watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" - \"requirements.txt\" - \"Dockerfile\" ``` --- ## 21) Success Criteria (POC) * For 3 diverse repos (Python CLI, Spring Boot API, Node webapp): * `docgen init` produces a working, linted README with runnable Quick Start. * On changing `pom.xml` or `requirements.txt`, PR updates only relevant sections. * No hallucinated commands; links and badges validate; style consistent. --- If you want, I can spin up a **starter repo layout** (CLI, analyzers, templates, and a simple Ollama adapter) so you can drop it into your environment and run `docgen init` right away.",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    }
  ],
  "build_and_test": [
    {
      "id": "AGENTS.md#0",
      "vector": {
        "repository": 0.06757373783994859,
        "guidelines": 0.1013606067599229,
        "project": 0.033786868919974296,
        "structure": 0.033786868919974296,
        "module": 0.06757373783994859,
        "organization": 0.033786868919974296,
        "spec": 0.06757373783994859,
        "md": 0.033786868919974296,
        "captures": 0.033786868919974296,
        "the": 0.27029495135979437,
        "end": 0.06757373783994859,
        "to": 0.1013606067599229,
        "architecture": 0.033786868919974296,
        "component": 0.06757373783994859,
        "contracts": 0.033786868919974296,
        "and": 0.43922929595966587,
        "must": 0.033786868919974296,
        "be": 0.033786868919974296,
        "updated": 0.033786868919974296,
        "whenever": 0.033786868919974296,
        "responsibilities": 0.033786868919974296,
        "shift": 0.033786868919974296,
        "place": 0.033786868919974296,
        "python": 0.2027212135198458,
        "source": 0.033786868919974296,
        "in": 0.16893434459987147,
        "a": 0.23650808243982008,
        "docgen": 0.16893434459987147,
        "package": 0.033786868919974296,
        "create": 0.033786868919974296,
        "it": 0.033786868919974296,
        "when": 0.06757373783994859,
        "implementation": 0.033786868919974296,
        "starts": 0.033786868919974296,
        "with": 0.16893434459987147,
        "clear": 0.033786868919974296,
        "submodules": 0.033786868919974296,
        "for": 0.1013606067599229,
        "orchestrator": 0.1013606067599229,
        "analyzers": 0.033786868919974296,
        "runners": 0.033786868919974296,
        "stores": 0.033786868919974296,
        "avoid": 0.06757373783994859,
        "leaving": 0.033786868919974296,
        "logic": 0.033786868919974296,
        "repo": 0.06757373783994859,
        "root": 0.033786868919974296,
        "mirror": 0.033786868919974296,
        "runtime": 0.033786868919974296,
        "modules": 0.06757373783994859,
        "under": 0.1013606067599229,
        "tests": 0.2027212135198458,
        "using": 0.033786868919974296,
        "test_": 0.033786868919974296,
        "py": 0.1013606067599229,
        "co": 0.033786868919974296,
        "locate": 0.033786868919974296,
        "fixtures": 0.06757373783994859,
        "_fixtures": 0.033786868919974296,
        "so": 0.13514747567989718,
        "imports": 0.06757373783994859,
        "stay": 0.06757373783994859,
        "clean": 0.033786868919974296,
        "reusable": 0.033786868919974296,
        "keep": 0.13514747567989718,
        "throwaway": 0.033786868919974296,
        "experiments": 0.033786868919974296,
        "inside": 0.033786868919974296,
        "an": 0.06757373783994859,
        "ignored": 0.033786868919974296,
        "sandbox": 0.033786868919974296,
        "directory": 0.033786868919974296,
        "scans": 0.033786868919974296,
        "remain": 0.033786868919974296,
        "focused": 0.033786868919974296,
        "on": 0.06757373783994859,
        "production": 0.033786868919974296,
        "code": 0.033786868919974296,
        "paths": 0.033786868919974296,
        "build": 0.033786868919974296,
        "test": 0.06757373783994859,
        "development": 0.033786868919974296,
        "commands": 0.033786868919974296,
        "m": 0.16893434459987147,
        "venv": 0.1013606067599229,
        "followed": 0.033786868919974296,
        "by": 0.033786868919974296,
        "scripts": 0.06757373783994859,
        "activate": 0.033786868919974296,
        "aligns": 0.033786868919974296,
        "local": 0.033786868919974296,
        "shells": 0.033786868919974296,
        "pycharm": 0.033786868919974296,
        "interpreter": 0.033786868919974296,
        "settings": 0.033786868919974296,
        "pip": 0.033786868919974296,
        "install": 0.033786868919974296,
        "e": 0.033786868919974296,
        "dev": 0.033786868919974296,
        "after": 0.06757373783994859,
        "pyproject": 0.033786868919974296,
        "toml": 0.033786868919974296,
        "is": 0.1013606067599229,
        "committed": 0.033786868919974296,
        "exposes": 0.033786868919974296,
        "cli": 0.033786868919974296,
        "plugins": 0.033786868919974296,
        "editable": 0.033786868919974296,
        "form": 0.033786868919974296,
        "without": 0.033786868919974296,
        "repeated": 0.033786868919974296,
        "reinstalls": 0.033786868919974296,
        "pytest": 0.06757373783994859,
        "runs": 0.033786868919974296,
        "full": 0.033786868919974296,
        "suite": 0.033786868919974296,
        "append": 0.033786868919974296,
        "k": 0.033786868919974296,
        "pattern": 0.033786868919974296,
        "iterate": 0.033786868919974296,
        "single": 0.06757373783994859,
        "analyzer": 0.06757373783994859,
        "or": 0.06757373783994859,
        "pipeline": 0.1013606067599229,
        "stage": 0.033786868919974296,
        "mypy": 0.033786868919974296,
        "ruff": 0.033786868919974296,
        "check": 0.033786868919974296,
        "catch": 0.033786868919974296,
        "type": 0.033786868919974296,
        "drift": 0.033786868919974296,
        "lint": 0.033786868919974296,
        "violations": 0.033786868919974296,
        "before": 0.06757373783994859,
        "readme": 0.06757373783994859,
        "generation": 0.06757373783994859,
        "attempted": 0.033786868919974296,
        "coding": 0.033786868919974296,
        "style": 0.033786868919974296,
        "naming": 0.033786868919974296,
        "conventions": 0.033786868919974296,
        "follow": 0.06757373783994859,
        "pep": 0.033786868919974296,
        "8": 0.033786868919974296,
        "4": 0.033786868919974296,
        "space": 0.033786868919974296,
        "indents": 0.033786868919974296,
        "explicit": 0.033786868919974296,
        "example": 0.033786868919974296,
        "from": 0.033786868919974296,
        "import": 0.033786868919974296,
        "static": 0.033786868919974296,
        "tooling": 0.033786868919974296,
        "can": 0.033786868919974296,
        "trace": 0.033786868919974296,
        "dependencies": 0.033786868919974296,
        "name": 0.033786868919974296,
        "their": 0.033786868919974296,
        "roles": 0.033786868919974296,
        "prompt_builder": 0.033786868919974296,
        "functions": 0.033786868919974296,
        "snake_case": 0.033786868919974296,
        "descriptive": 0.06757373783994859,
        "nouns": 0.033786868919974296,
        "first": 0.033786868919974296,
        "build_prompt_section": 0.033786868919974296,
        "run": 0.033786868919974296,
        "black": 0.033786868919974296,
        "commits": 0.06757373783994859,
        "manual": 0.033786868919974296,
        "reformatting": 0.033786868919974296,
        "unless": 0.033786868919974296,
        "formatter": 0.033786868919974296,
        "cannot": 0.033786868919974296,
        "resolve": 0.033786868919974296,
        "construct": 0.033786868919974296,
        "testing": 0.06757373783994859,
        "default": 0.033786868919974296,
        "harness": 0.033786868919974296,
        "every": 0.033786868919974296,
        "needs": 0.033786868919974296,
        "unit": 0.033786868919974296,
        "coverage": 0.033786868919974296,
        "plus": 0.033786868919974296,
        "integration": 0.06757373783994859,
        "case": 0.033786868919974296,
        "that": 0.06757373783994859,
        "walks": 0.033786868919974296,
        "snapshot": 0.033786868919974296,
        "through": 0.033786868919974296,
        "use": 0.033786868919974296,
        "names": 0.033786868919974296,
        "such": 0.033786868919974296,
        "as": 0.033786868919974296,
        "test_prompt_builder_handles_missing_signals": 0.033786868919974296,
        "arrange": 0.033786868919974296,
        "act": 0.033786868919974296,
        "assert": 0.033786868919974296,
        "comments": 0.033786868919974296,
        "minimal": 0.033786868919974296,
        "but": 0.033786868919974296,
        "intentional": 0.033786868919974296,
        "store": 0.033786868919974296,
        "regression": 0.033786868919974296,
        "generated": 0.033786868919974296,
        "slices": 0.033786868919974296,
        "data": 0.033786868919974296,
        "update": 0.033786868919974296,
        "them": 0.033786868919974296,
        "helper": 0.033786868919974296,
        "diffs": 0.033786868919974296,
        "reviewable": 0.033786868919974296,
        "commit": 0.033786868919974296,
        "pull": 0.033786868919974296,
        "request": 0.033786868919974296,
        "conventional": 0.033786868919974296,
        "feat": 0.033786868919974296,
        "fix": 0.033786868919974296,
        "docs": 0.033786868919974296,
        "subject": 0.033786868919974296,
        "lines": 0.033786868919974296,
        "72": 0.033786868919974296,
        "characters": 0.033786868919974296,
        "explain": 0.033786868919974296,
        "broader": 0.033786868919974296,
        "scope": 0.033786868919974296,
        "body": 0.033786868919974296,
        "multiple": 0.033786868919974296,
        "subsystems": 0.033786868919974296,
        "change": 0.033786868919974296,
        "bundle": 0.033786868919974296,
        "related": 0.033786868919974296,
        "work": 0.033786868919974296,
        "into": 0.033786868919974296,
        "pr": 0.033786868919974296,
        "includes": 0.033786868919974296,
        "summary": 0.033786868919974296,
        "notes": 0.033786868919974296,
        "links": 0.033786868919974296
      },
      "text": "# Repository Guidelines ## Project Structure & Module Organization - `spec/spec.md` captures the end-to-end architecture, component contracts, and must be updated whenever responsibilities shift. - Place Python source in a `docgen/` package (create it when implementation starts) with clear submodules for orchestrator, analyzers, runners, and stores; avoid leaving logic in the repo root. - Mirror runtime modules under `tests/` using `test_<module>.py`; co-locate fixtures in `tests/_fixtures/` so imports stay clean and reusable. - Keep throwaway experiments inside an ignored `sandbox/` directory so repository scans remain focused on production code paths. ## Build, Test, and Development Commands - `python -m venv .venv` followed by `.\\\\.venv\\\\Scripts\\\\activate` aligns local shells with the PyCharm interpreter settings. - `python -m pip install -e .[dev]` (after a `pyproject.toml` is committed) exposes the CLI and plugins in editable form without repeated reinstalls. - `python -m pytest` runs the full suite; append `-k <pattern>` to iterate on a single analyzer or pipeline stage. - `python -m mypy docgen` and `python -m ruff check docgen tests` catch type drift and lint violations before README generation is attempted. ## Coding Style & Naming Conventions - Follow PEP 8 with 4-space indents and explicit imports (for example, `from docgen.orchestrator import Pipeline`) so static tooling can trace dependencies. - Name modules after their roles (`orchestrator.py`, `prompt_builder.py`) and keep functions snake_case with descriptive nouns first (`build_prompt_section`). - Run `black docgen tests` before commits; avoid manual reformatting unless the formatter cannot resolve a construct. ## Testing Guidelines - Pytest is the default harness; every analyzer or pipeline component needs unit coverage plus an integration case under `tests/integration/` that walks a repo snapshot through generation. - Use descriptive test names such as `test_prompt_builder_handles_missing_signals` and keep Arrange-Act-Assert comments minimal but intentional. - Store regression fixtures for generated README slices under `tests/data/` and update them with helper scripts so diffs stay reviewable. ## Commit & Pull Request Guidelines - Follow Conventional Commits (`feat:`, `fix:`, `docs:`); keep subject lines <=72 characters and explain broader scope in the body when multiple subsystems change. - Bundle related work into a single PR that includes a summary, testing notes, and links to",
      "metadata": {
        "path": "AGENTS.md",
        "tags": [
          "docs"
        ],
        "hash": "dfeeea63c97ae7cb3036fbb0312edaee5f377b31178db6fbde6c843da7ceb8d2"
      }
    },
    {
      "id": "AGENTS.md#1",
      "vector": {
        "readme": 0.1270001270001905,
        "slices": 0.06350006350009525,
        "under": 0.06350006350009525,
        "tests": 0.06350006350009525,
        "data": 0.06350006350009525,
        "and": 0.4445004445006667,
        "update": 0.06350006350009525,
        "them": 0.06350006350009525,
        "with": 0.06350006350009525,
        "helper": 0.06350006350009525,
        "scripts": 0.06350006350009525,
        "so": 0.06350006350009525,
        "diffs": 0.06350006350009525,
        "stay": 0.06350006350009525,
        "reviewable": 0.06350006350009525,
        "commit": 0.1270001270001905,
        "pull": 0.06350006350009525,
        "request": 0.06350006350009525,
        "guidelines": 0.06350006350009525,
        "follow": 0.06350006350009525,
        "conventional": 0.06350006350009525,
        "commits": 0.06350006350009525,
        "feat": 0.06350006350009525,
        "fix": 0.06350006350009525,
        "docs": 0.1270001270001905,
        "keep": 0.1270001270001905,
        "subject": 0.06350006350009525,
        "lines": 0.06350006350009525,
        "72": 0.06350006350009525,
        "characters": 0.06350006350009525,
        "explain": 0.06350006350009525,
        "broader": 0.06350006350009525,
        "scope": 0.06350006350009525,
        "in": 0.254000254000381,
        "the": 0.31750031750047625,
        "body": 0.06350006350009525,
        "when": 0.1270001270001905,
        "multiple": 0.06350006350009525,
        "subsystems": 0.06350006350009525,
        "change": 0.06350006350009525,
        "bundle": 0.06350006350009525,
        "related": 0.06350006350009525,
        "work": 0.1270001270001905,
        "into": 0.06350006350009525,
        "a": 0.254000254000381,
        "single": 0.06350006350009525,
        "pr": 0.1270001270001905,
        "that": 0.06350006350009525,
        "includes": 0.06350006350009525,
        "summary": 0.06350006350009525,
        "testing": 0.06350006350009525,
        "notes": 0.1270001270001905,
        "links": 0.06350006350009525,
        "to": 0.06350006350009525,
        "relevant": 0.06350006350009525,
        "issues": 0.06350006350009525,
        "or": 0.06350006350009525,
        "spec": 0.06350006350009525,
        "sections": 0.06350006350009525,
        "attach": 0.06350006350009525,
        "before": 0.1270001270001905,
        "after": 0.06350006350009525,
        "excerpts": 0.06350006350009525,
        "altering": 0.06350006350009525,
        "generation": 0.06350006350009525,
        "output": 0.06350006350009525,
        "run": 0.06350006350009525,
        "lint": 0.06350006350009525,
        "type": 0.06350006350009525,
        "check": 0.06350006350009525,
        "test": 0.06350006350009525,
        "commands": 0.06350006350009525,
        "opening": 0.06350006350009525,
        "paste": 0.06350006350009525,
        "condensed": 0.06350006350009525,
        "results": 0.06350006350009525,
        "description": 0.06350006350009525,
        "for": 0.06350006350009525,
        "quick": 0.06350006350009525,
        "verification": 0.06350006350009525,
        "environment": 0.1270001270001905,
        "tooling": 0.06350006350009525,
        "reuse": 0.06350006350009525,
        "local": 0.1270001270001905,
        "venv": 0.06350006350009525,
        "seeded": 0.06350006350009525,
        "by": 0.1270001270001905,
        "pycharm": 0.06350006350009525,
        "do": 0.06350006350009525,
        "not": 0.06350006350009525,
        "artifacts": 0.06350006350009525,
        "store": 0.06350006350009525,
        "secrets": 0.06350006350009525,
        "env": 0.06350006350009525,
        "consumed": 0.06350006350009525,
        "llm": 0.06350006350009525,
        "runner": 0.06350006350009525,
        "large": 0.06350006350009525,
        "model": 0.06350006350009525,
        "weights": 0.06350006350009525,
        "outside": 0.06350006350009525,
        "repository": 0.06350006350009525,
        "document": 0.06350006350009525,
        "their": 0.06350006350009525,
        "locations": 0.06350006350009525,
        "models": 0.06350006350009525,
        "md": 0.06350006350009525,
        "once": 0.06350006350009525,
        "integration": 0.06350006350009525,
        "begins": 0.06350006350009525
      },
      "text": "README slices under `tests/data/` and update them with helper scripts so diffs stay reviewable. ## Commit & Pull Request Guidelines - Follow Conventional Commits (`feat:`, `fix:`, `docs:`); keep subject lines <=72 characters and explain broader scope in the body when multiple subsystems change. - Bundle related work into a single PR that includes a summary, testing notes, and links to relevant issues or spec sections; attach before/after README excerpts when altering generation output. - Run lint, type-check, and test commands before opening a PR and paste condensed results in the description for quick verification. ## Environment & Tooling Notes - Reuse the local `.venv` seeded by PyCharm; do not commit environment artifacts and store secrets in a `.env` consumed by the local LLM runner. - Keep large model weights outside the repository and document their locations in `docs/models.md` once integration work begins.",
      "metadata": {
        "path": "AGENTS.md",
        "tags": [
          "docs"
        ],
        "hash": "dfeeea63c97ae7cb3036fbb0312edaee5f377b31178db6fbde6c843da7ceb8d2"
      }
    },
    {
      "id": "README_before.md#0",
      "vector": {
        "docgen": 0.6611099775215866,
        "begin": 0.12592571000411173,
        "badges": 0.06296285500205587,
        "build": 0.15740713750513965,
        "status": 0.031481427501027934,
        "https": 0.0944442825030838,
        "img": 0.0944442825030838,
        "shields": 0.0944442825030838,
        "io": 0.0944442825030838,
        "badge": 0.0944442825030838,
        "pending": 0.031481427501027934,
        "lightgrey": 0.0944442825030838,
        "svg": 0.0944442825030838,
        "coverage": 0.06296285500205587,
        "review": 0.031481427501027934,
        "needed": 0.031481427501027934,
        "license": 0.12592571000411173,
        "tbd": 0.031481427501027934,
        "end": 0.0944442825030838,
        "toc": 0.06296285500205587,
        "table": 0.031481427501027934,
        "of": 0.031481427501027934,
        "contents": 0.031481427501027934,
        "features": 0.12592571000411173,
        "architecture": 0.06296285500205587,
        "high": 0.06296285500205587,
        "level": 0.06296285500205587,
        "flow": 0.06296285500205587,
        "component": 0.06296285500205587,
        "responsibilities": 0.06296285500205587,
        "artifacts": 0.06296285500205587,
        "and": 0.2833328475092514,
        "data": 0.06296285500205587,
        "stores": 0.06296285500205587,
        "pipeline": 0.06296285500205587,
        "sequence": 0.12592571000411173,
        "init": 0.0944442825030838,
        "patch": 0.06296285500205587,
        "update": 0.0944442825030838,
        "api": 0.06296285500205587,
        "signal": 0.06296285500205587,
        "extraction": 0.06296285500205587,
        "quick": 0.06296285500205587,
        "start": 0.06296285500205587,
        "configuration": 0.06296285500205587,
        "test": 0.06296285500205587,
        "deployment": 0.06296285500205587,
        "troubleshooting": 0.06296285500205587,
        "faq": 0.06296285500205587,
        "intro": 0.06296285500205587,
        "is": 0.031481427501027934,
        "a": 0.0944442825030838,
        "local": 0.0944442825030838,
        "first": 0.031481427501027934,
        "readme": 0.06296285500205587,
        "generator": 0.031481427501027934,
        "for": 0.0944442825030838,
        "polyglot": 0.031481427501027934,
        "repositories": 0.031481427501027934,
        "it": 0.031481427501027934,
        "scans": 0.031481427501027934,
        "every": 0.06296285500205587,
        "tracked": 0.031481427501027934,
        "file": 0.031481427501027934,
        "publishes": 0.031481427501027934,
        "analyzer": 0.06296285500205587,
        "signals": 0.0944442825030838,
        "retrieves": 0.031481427501027934,
        "grounded": 0.031481427501027934,
        "context": 0.06296285500205587,
        "guides": 0.031481427501027934,
        "llm": 0.06296285500205587,
        "through": 0.031481427501027934,
        "templated": 0.031481427501027934,
        "sections": 0.031481427501027934,
        "to": 0.031481427501027934,
        "produce": 0.031481427501027934,
        "or": 0.031481427501027934,
        "documentation": 0.031481427501027934,
        "this": 0.031481427501027934,
        "overview": 0.031481427501027934,
        "reflects": 0.031481427501027934,
        "complete": 0.031481427501027934,
        "pass": 0.031481427501027934,
        "across": 0.031481427501027934,
        "tests": 0.031481427501027934,
        "spec": 0.031481427501027934,
        "docs": 0.06296285500205587,
        "so": 0.031481427501027934,
        "contributors": 0.031481427501027934,
        "understand": 0.031481427501027934,
        "abstraction": 0.031481427501027934,
        "before": 0.031481427501027934,
        "running": 0.031481427501027934,
        "repository": 0.06296285500205587,
        "manifest": 0.031481427501027934,
        "caching": 0.031481427501027934,
        "repo_scanner": 0.031481427501027934,
        "py": 0.15740713750513965,
        "walks": 0.031481427501027934,
        "the": 0.031481427501027934,
        "tree": 0.031481427501027934,
        "respects": 0.031481427501027934,
        "gitignore": 0.031481427501027934,
        "yml": 0.031481427501027934,
        "hashes": 0.031481427501027934,
        "files": 0.031481427501027934,
        "persists": 0.031481427501027934,
        "manifest_cache": 0.031481427501027934,
        "json": 0.06296285500205587,
        "incremental": 0.031481427501027934,
        "runs": 0.031481427501027934,
        "plugin": 0.031481427501027934,
        "system": 0.031481427501027934,
        "analyzers": 0.031481427501027934,
        "discover": 0.031481427501027934,
        "language": 0.031481427501027934,
        "dependency": 0.031481427501027934,
        "entrypoint": 0.031481427501027934,
        "pattern": 0.031481427501027934,
        "structure": 0.031481427501027934,
        "that": 0.031481427501027934,
        "describe": 0.031481427501027934,
        "frameworks": 0.031481427501027934,
        "commands": 0.06296285500205587,
        "apis": 0.031481427501027934,
        "entities": 0.031481427501027934,
        "topology": 0.031481427501027934,
        "template": 0.031481427501027934,
        "driven": 0.031481427501027934,
        "prompting": 0.06296285500205587,
        "builder": 0.031481427501027934,
        "merges": 0.031481427501027934,
        "with": 0.031481427501027934,
        "jinja": 0.031481427501027934,
        "templates": 0.031481427501027934,
        "validates": 0.031481427501027934,
        "applies": 0.031481427501027934,
        "style": 0.031481427501027934,
        "presets": 0.031481427501027934,
        "injects": 0.031481427501027934,
        "retrieved": 0.031481427501027934,
        "per": 0.031481427501027934,
        "section": 0.06296285500205587,
        "lightweight": 0.031481427501027934,
        "rag": 0.06296285500205587,
        "index": 0.031481427501027934,
        "indexer": 0.031481427501027934,
        "embedder": 0.031481427501027934,
        "store": 0.031481427501027934,
        "embed": 0.031481427501027934,
        "source": 0.031481427501027934,
        "excerpts": 0.031481427501027934,
        "into": 0.031481427501027934,
        "embeddings": 0.031481427501027934,
        "scoped": 0.031481427501027934,
        "retrieval": 0.031481427501027934,
        "enforcement": 0.031481427501027934
      },
      "text": "# docgen <!-- docgen:begin:badges --> [![Build Status](https://img.shields.io/badge/build-pending-lightgrey.svg)](#) [![Coverage](https://img.shields.io/badge/coverage-review--needed-lightgrey.svg)](#) [![License](https://img.shields.io/badge/license-tbd-lightgrey.svg)](#) <!-- docgen:end:badges --> <!-- docgen:begin:toc --> ## Table of Contents - [Features](#features) - [Architecture](#architecture) - [High-Level Flow](#high-level-flow) - [Component Responsibilities](#component-responsibilities) - [Artifacts and Data Stores](#artifacts-and-data-stores) - [Pipeline Sequence (`docgen init`)](#pipeline-sequence-docgen-init) - [Patch Sequence (`docgen update`)](#patch-sequence-docgen-update) - [API Signal Extraction](#api-signal-extraction) - [Quick Start](#quick-start) - [Configuration](#configuration) - [Build & Test](#build-test) - [Deployment](#deployment) - [Troubleshooting](#troubleshooting) - [FAQ](#faq) - [License](#license) <!-- docgen:end:toc --> <!-- docgen:begin:intro --> docgen is a local-first README generator for polyglot repositories. It scans every tracked file, publishes analyzer signals, retrieves grounded context, and guides a local LLM through templated sections to produce or update documentation. This overview reflects a complete pass across `docgen/`, `tests/`, `spec/`, and `docs/` so contributors understand every abstraction before running `docgen init`. <!-- docgen:end:intro --> ## Features <!-- docgen:begin:features --> - **Repository manifest & caching** - `docgen/repo_scanner.py` walks the tree, respects `.gitignore`/`.docgen.yml`, hashes files, and persists `manifest_cache.json` for incremental runs. - **Analyzer plugin system** - `docgen/analyzers/*` discover language, build, dependency, entrypoint, pattern, and structure signals that describe frameworks, commands, APIs, entities, and repository topology. - **Template-driven prompting** - `docgen/prompting/builder.py` merges signals with Jinja templates, validates commands, applies style presets, and injects retrieved context per section. - **Lightweight RAG index** - `docgen/rag/indexer.py`, `embedder.py`, and `store.py` embed README/docs/source excerpts into `.docgen/embeddings.json` for section-scoped retrieval. - **Local LLM enforcement** -",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#1",
      "vector": {
        "docgen": 0.48261708906584017,
        "prompting": 0.06434894520877868,
        "builder": 0.03217447260438934,
        "py": 0.3217447260438934,
        "merges": 0.03217447260438934,
        "signals": 0.03217447260438934,
        "with": 0.06434894520877868,
        "jinja": 0.06434894520877868,
        "templates": 0.06434894520877868,
        "validates": 0.03217447260438934,
        "commands": 0.03217447260438934,
        "applies": 0.03217447260438934,
        "style": 0.03217447260438934,
        "presets": 0.03217447260438934,
        "and": 0.2252213082307254,
        "injects": 0.03217447260438934,
        "retrieved": 0.03217447260438934,
        "context": 0.03217447260438934,
        "per": 0.03217447260438934,
        "section": 0.06434894520877868,
        "lightweight": 0.03217447260438934,
        "rag": 0.1608723630219467,
        "index": 0.03217447260438934,
        "indexer": 0.03217447260438934,
        "embedder": 0.03217447260438934,
        "store": 0.03217447260438934,
        "embed": 0.03217447260438934,
        "readme": 0.09652341781316803,
        "docs": 0.03217447260438934,
        "source": 0.03217447260438934,
        "excerpts": 0.03217447260438934,
        "into": 0.03217447260438934,
        "embeddings": 0.06434894520877868,
        "json": 0.06434894520877868,
        "for": 0.03217447260438934,
        "scoped": 0.03217447260438934,
        "retrieval": 0.03217447260438934,
        "local": 0.06434894520877868,
        "llm": 0.19304683562633607,
        "enforcement": 0.03217447260438934,
        "runner": 0.06434894520877868,
        "targets": 0.03217447260438934,
        "loopback": 0.03217447260438934,
        "model": 0.06434894520877868,
        "or": 0.06434894520877868,
        "ollama": 0.03217447260438934,
        "blocks": 0.03217447260438934,
        "remote": 0.03217447260438934,
        "hosts": 0.03217447260438934,
        "exposes": 0.03217447260438934,
        "configurable": 0.03217447260438934,
        "temperature": 0.03217447260438934,
        "token": 0.03217447260438934,
        "limits": 0.03217447260438934,
        "post": 0.2252213082307254,
        "processing": 0.09652341781316803,
        "contract": 0.03217447260438934,
        "postproc": 0.03217447260438934,
        "add": 0.03217447260438934,
        "badges": 0.06434894520877868,
        "rebuild": 0.03217447260438934,
        "the": 0.1608723630219467,
        "toc": 0.06434894520877868,
        "lint": 0.06434894520877868,
        "markdown": 0.03217447260438934,
        "validate": 0.03217447260438934,
        "links": 0.06434894520877868,
        "manage": 0.03217447260438934,
        "markers": 0.03217447260438934,
        "compute": 0.03217447260438934,
        "scorecards": 0.03217447260438934,
        "saved": 0.03217447260438934,
        "to": 0.09652341781316803,
        "scorecard": 0.06434894520877868,
        "git": 0.1608723630219467,
        "aware": 0.03217447260438934,
        "publishing": 0.06434894520877868,
        "diff": 0.03217447260438934,
        "maps": 0.03217447260438934,
        "changed": 0.03217447260438934,
        "files": 0.03217447260438934,
        "sections": 0.03217447260438934,
        "while": 0.03217447260438934,
        "publisher": 0.06434894520877868,
        "commits": 0.03217447260438934,
        "opens": 0.03217447260438934,
        "prs": 0.03217447260438934,
        "generated": 0.03217447260438934,
        "deltas": 0.03217447260438934,
        "via": 0.03217447260438934,
        "github": 0.03217447260438934,
        "cli": 0.19304683562633607,
        "resilient": 0.03217447260438934,
        "ux": 0.03217447260438934,
        "failsafe": 0.03217447260438934,
        "provide": 0.03217447260438934,
        "verbose": 0.03217447260438934,
        "logging": 0.03217447260438934,
        "hooks": 0.03217447260438934,
        "dry": 0.03217447260438934,
        "run": 0.03217447260438934,
        "preview": 0.03217447260438934,
        "support": 0.03217447260438934,
        "fallback": 0.03217447260438934,
        "stubs": 0.03217447260438934,
        "when": 0.03217447260438934,
        "pipeline": 0.06434894520877868,
        "cannot": 0.03217447260438934,
        "complete": 0.03217447260438934,
        "end": 0.09652341781316803,
        "features": 0.03217447260438934,
        "architecture": 0.06434894520877868,
        "begin": 0.03217447260438934,
        "high": 0.03217447260438934,
        "level": 0.03217447260438934,
        "flow": 0.03217447260438934,
        "orchestrator": 0.09652341781316803,
        "coordinates": 0.03217447260438934,
        "described": 0.03217447260438934,
        "in": 0.03217447260438934,
        "spec": 0.06434894520877868,
        "md": 0.06434894520877868,
        "composing": 0.03217447260438934,
        "scanners": 0.03217447260438934,
        "analyzers": 0.06434894520877868,
        "services": 0.03217447260438934,
        "mermaid": 0.03217447260438934,
        "flowchart": 0.03217447260438934,
        "lr": 0.03217447260438934,
        "init": 0.03217447260438934,
        "update": 0.03217447260438934,
        "orc": 0.2573957808351147,
        "scan": 0.06434894520877868,
        "reposcanner": 0.03217447260438934,
        "n": 0.2252213082307254,
        "manifest": 0.03217447260438934,
        "ana": 0.06434894520877868,
        "language": 0.03217447260438934,
        "build": 0.03217447260438934,
        "etc": 0.03217447260438934,
        "ragindexer": 0.03217447260438934,
        "prompt": 0.1608723630219467,
        "promptbuilder": 0.03217447260438934,
        "llmrunner": 0.03217447260438934,
        "commit": 0.03217447260438934,
        "pr": 0.03217447260438934,
        "output": 0.06434894520877868,
        "artifacts": 0.03217447260438934,
        "component": 0.03217447260438934,
        "responsibilities": 0.03217447260438934,
        "layer": 0.03217447260438934,
        "key": 0.03217447260438934
      },
      "text": "- `docgen/prompting/builder.py` merges signals with Jinja templates, validates commands, applies style presets, and injects retrieved context per section. - **Lightweight RAG index** - `docgen/rag/indexer.py`, `embedder.py`, and `store.py` embed README/docs/source excerpts into `.docgen/embeddings.json` for section-scoped retrieval. - **Local LLM enforcement** - `docgen/llm/runner.py` targets loopback Model Runner or Ollama, blocks remote hosts, and exposes configurable temperature/token limits. - **Post-processing contract** - `docgen/postproc/*` add badges, rebuild the ToC, lint markdown, validate links, manage markers, and compute scorecards saved to `.docgen/scorecard.json`. - **Git-aware publishing** - `docgen/git/diff.py` maps changed files to sections while `docgen/git/publisher.py` commits or opens PRs with generated README deltas via the GitHub CLI. - **Resilient CLI UX** - `docgen/cli.py` and `docgen/failsafe.py` provide verbose logging hooks, dry-run preview support, and fallback stubs when the LLM pipeline cannot complete. <!-- docgen:end:features --> ## Architecture <!-- docgen:begin:architecture --> ### High-Level Flow The orchestrator (`docgen/orchestrator.py`) coordinates the end-to-end pipeline described in `spec/spec.md`, composing scanners, analyzers, prompting, RAG, post-processing, and publishing services. ```mermaid flowchart LR CLI[\"CLI (docgen init/update)\"] Orc[\"Orchestrator\"] Scan[\"RepoScanner\\n(manifest)\"] Ana[\"Analyzers\\n(language/build/etc)\"] RAG[\"RAGIndexer\\n(embeddings)\"] Prompt[\"PromptBuilder\\n(Jinja templates)\"] LLM[\"LLMRunner\\n(local model)\"] Post[\"Post-Processing\\n(lint, ToC, badges, links, scorecard)\"] Git[\"Publisher\\n(commit/PR)\"] Output[\"README.md + .docgen artifacts\"] CLI --> Orc Orc --> Scan Orc --> Ana Orc --> RAG Orc --> Prompt Prompt --> LLM LLM --> Prompt Prompt --> Orc Orc --> Post Post --> Output Post --> Git ``` ### Component Responsibilities | Layer | Key",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#2",
      "vector": {
        "orc": 0.2960684541064695,
        "scan": 0.042295493443781355,
        "ana": 0.042295493443781355,
        "rag": 0.12688648033134406,
        "prompt": 0.16918197377512542,
        "llm": 0.16918197377512542,
        "post": 0.16918197377512542,
        "output": 0.042295493443781355,
        "git": 0.042295493443781355,
        "component": 0.042295493443781355,
        "responsibilities": 0.042295493443781355,
        "layer": 0.042295493443781355,
        "key": 0.042295493443781355,
        "modules": 0.08459098688756271,
        "purpose": 0.042295493443781355,
        "cli": 0.12688648033134406,
        "logging": 0.08459098688756271,
        "docgen": 0.46525042788159493,
        "py": 0.42295493443781357,
        "parses": 0.08459098688756271,
        "subcommands": 0.042295493443781355,
        "wires": 0.042295493443781355,
        "verbose": 0.042295493443781355,
        "and": 0.33836394755025084,
        "configures": 0.042295493443781355,
        "namespaced": 0.042295493443781355,
        "loggers": 0.042295493443781355,
        "configuration": 0.042295493443781355,
        "config": 0.042295493443781355,
        "yml": 0.042295493443781355,
        "into": 0.042295493443781355,
        "docgenconfig": 0.042295493443781355,
        "llmconfig": 0.042295493443781355,
        "publishconfig": 0.042295493443781355,
        "analyzerconfig": 0.042295493443781355,
        "ciconfig": 0.042295493443781355,
        "with": 0.042295493443781355,
        "a": 0.042295493443781355,
        "handwritten": 0.042295493443781355,
        "yaml": 0.042295493443781355,
        "fallback": 0.042295493443781355,
        "repository": 0.042295493443781355,
        "scanning": 0.042295493443781355,
        "repo_scanner": 0.042295493443781355,
        "builds": 0.08459098688756271,
        "repomanifest": 0.042295493443781355,
        "of": 0.08459098688756271,
        "filemeta": 0.042295493443781355,
        "entries": 0.042295493443781355,
        "enforces": 0.042295493443781355,
        "ignore": 0.042295493443781355,
        "rules": 0.042295493443781355,
        "infers": 0.042295493443781355,
        "file": 0.042295493443781355,
        "roles": 0.042295493443781355,
        "caches": 0.042295493443781355,
        "hashes": 0.042295493443781355,
        "in": 0.042295493443781355,
        "manifest_cache": 0.042295493443781355,
        "json": 0.042295493443781355,
        "analyzer": 0.042295493443781355,
        "plugins": 0.042295493443781355,
        "analyzers": 0.042295493443781355,
        "emit": 0.042295493443781355,
        "signal": 0.042295493443781355,
        "objects": 0.042295493443781355,
        "for": 0.042295493443781355,
        "languages": 0.042295493443781355,
        "frameworks": 0.042295493443781355,
        "build": 0.042295493443781355,
        "tools": 0.042295493443781355,
        "dependencies": 0.042295493443781355,
        "entrypoints": 0.042295493443781355,
        "structural": 0.042295493443781355,
        "api": 0.042295493443781355,
        "routes": 0.042295493443781355,
        "entities": 0.042295493443781355,
        "patterns": 0.042295493443781355,
        "monorepo": 0.042295493443781355,
        "hints": 0.042295493443781355,
        "prompting": 0.08459098688756271,
        "builder": 0.042295493443781355,
        "templates": 0.08459098688756271,
        "groups": 0.042295493443781355,
        "signals": 0.042295493443781355,
        "retrieves": 0.042295493443781355,
        "context": 0.08459098688756271,
        "renders": 0.042295493443781355,
        "section": 0.08459098688756271,
        "performs": 0.042295493443781355,
        "command": 0.042295493443781355,
        "validation": 0.042295493443781355,
        "estimates": 0.042295493443781355,
        "token": 0.042295493443781355,
        "budgets": 0.042295493443781355,
        "retrieval": 0.042295493443781355,
        "indexer": 0.042295493443781355,
        "embedder": 0.042295493443781355,
        "store": 0.042295493443781355,
        "constants": 0.042295493443781355,
        "chunks": 0.042295493443781355,
        "readme": 0.042295493443781355,
        "docs": 0.042295493443781355,
        "source": 0.042295493443781355,
        "files": 0.042295493443781355,
        "computes": 0.042295493443781355,
        "bag": 0.042295493443781355,
        "words": 0.042295493443781355,
        "embeddings": 0.042295493443781355,
        "persists": 0.042295493443781355,
        "per": 0.042295493443781355,
        "prunes": 0.042295493443781355,
        "stale": 0.042295493443781355,
        "vectors": 0.042295493443781355,
        "runtime": 0.042295493443781355,
        "runner": 0.042295493443781355,
        "chooses": 0.042295493443781355,
        "http": 0.042295493443781355,
        "or": 0.042295493443781355,
        "execution": 0.042295493443781355,
        "openai": 0.042295493443781355,
        "compatible": 0.042295493443781355,
        "payloads": 0.042295493443781355,
        "restricts": 0.042295493443781355,
        "to": 0.042295493443781355,
        "loopback": 0.042295493443781355,
        "hosts": 0.042295493443781355,
        "normalizes": 0.042295493443781355,
        "responses": 0.042295493443781355,
        "processing": 0.042295493443781355,
        "postproc": 0.042295493443781355,
        "manages": 0.042295493443781355,
        "markers": 0.042295493443781355,
        "regenerates": 0.042295493443781355,
        "toc": 0.042295493443781355,
        "applies": 0.042295493443781355,
        "badges": 0.042295493443781355,
        "lints": 0.042295493443781355,
        "markdown": 0.042295493443781355,
        "validates": 0.042295493443781355,
        "links": 0.042295493443781355
      },
      "text": "--> Orc Orc --> Scan Orc --> Ana Orc --> RAG Orc --> Prompt Prompt --> LLM LLM --> Prompt Prompt --> Orc Orc --> Post Post --> Output Post --> Git ``` ### Component Responsibilities | Layer | Key modules | Purpose | | --- | --- | --- | | CLI & Logging | `docgen/cli.py`, `docgen/logging.py` | Parses subcommands, wires `--verbose`, and configures namespaced loggers. | | Configuration | `docgen/config.py` | Parses `.docgen.yml` into `DocGenConfig`, `LLMConfig`, `PublishConfig`, `AnalyzerConfig`, and `CIConfig`, with a handwritten YAML fallback. | | Repository scanning | `docgen/repo_scanner.py` | Builds `RepoManifest` of `FileMeta` entries, enforces ignore rules, infers file roles, and caches hashes in `.docgen/manifest_cache.json`. | | Analyzer plugins | `docgen/analyzers/*` | Emit `Signal` objects for languages, frameworks, build tools, dependencies, entrypoints, structural modules, API routes, entities, patterns, and monorepo hints. | | Prompting | `docgen/prompting/builder.py`, `templates/` | Groups signals, retrieves context, renders section templates, performs command validation, and estimates token budgets. | | Retrieval (RAG) | `docgen/rag/indexer.py`, `embedder.py`, `store.py`, `constants.py` | Chunks README/docs/source files, computes bag-of-words embeddings, persists context per section, and prunes stale vectors. | | LLM runtime | `docgen/llm/runner.py` | Chooses HTTP or CLI execution, builds OpenAI-compatible payloads, restricts to loopback hosts, and normalizes responses. | | Post-processing | `docgen/postproc/*` | Manages markers, regenerates ToC, applies badges, lints markdown, validates links, and",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#3",
      "vector": {
        "vectors": 0.08497185773241747,
        "llm": 0.12745778659862622,
        "runtime": 0.08497185773241747,
        "docgen": 0.4248592886620874,
        "runner": 0.08497185773241747,
        "py": 0.16994371546483494,
        "chooses": 0.042485928866208736,
        "http": 0.042485928866208736,
        "or": 0.12745778659862622,
        "cli": 0.16994371546483494,
        "execution": 0.042485928866208736,
        "builds": 0.042485928866208736,
        "openai": 0.042485928866208736,
        "compatible": 0.042485928866208736,
        "payloads": 0.042485928866208736,
        "restricts": 0.042485928866208736,
        "to": 0.08497185773241747,
        "loopback": 0.042485928866208736,
        "hosts": 0.042485928866208736,
        "and": 0.3398874309296699,
        "normalizes": 0.042485928866208736,
        "responses": 0.042485928866208736,
        "post": 0.08497185773241747,
        "processing": 0.08497185773241747,
        "postproc": 0.042485928866208736,
        "manages": 0.042485928866208736,
        "markers": 0.042485928866208736,
        "regenerates": 0.042485928866208736,
        "toc": 0.042485928866208736,
        "applies": 0.042485928866208736,
        "badges": 0.042485928866208736,
        "lints": 0.042485928866208736,
        "markdown": 0.042485928866208736,
        "validates": 0.042485928866208736,
        "links": 0.042485928866208736,
        "records": 0.042485928866208736,
        "readme": 0.08497185773241747,
        "quality": 0.08497185773241747,
        "metrics": 0.042485928866208736,
        "git": 0.2124296443310437,
        "integration": 0.042485928866208736,
        "diff": 0.042485928866208736,
        "publisher": 0.08497185773241747,
        "maps": 0.042485928866208736,
        "file": 0.08497185773241747,
        "diffs": 0.042485928866208736,
        "affected": 0.042485928866208736,
        "sections": 0.08497185773241747,
        "handles": 0.042485928866208736,
        "staged": 0.042485928866208736,
        "changes": 0.042485928866208736,
        "pushes": 0.042485928866208736,
        "commits": 0.08497185773241747,
        "prs": 0.08497185773241747,
        "with": 0.08497185773241747,
        "optional": 0.042485928866208736,
        "labels": 0.042485928866208736,
        "safety": 0.042485928866208736,
        "nets": 0.042485928866208736,
        "failsafe": 0.042485928866208736,
        "generates": 0.042485928866208736,
        "placeholder": 0.042485928866208736,
        "full": 0.042485928866208736,
        "stubs": 0.08497185773241747,
        "when": 0.042485928866208736,
        "prompting": 0.08497185773241747,
        "fails": 0.042485928866208736,
        "reference": 0.042485928866208736,
        "material": 0.042485928866208736,
        "spec": 0.16994371546483494,
        "md": 0.16994371546483494,
        "feature_order": 0.042485928866208736,
        "feature_checklist": 0.042485928866208736,
        "docs": 0.042485928866208736,
        "ci": 0.08497185773241747,
        "agents": 0.042485928866208736,
        "capture": 0.042485928866208736,
        "architectural": 0.042485928866208736,
        "contracts": 0.042485928866208736,
        "delivery": 0.042485928866208736,
        "roadmap": 0.042485928866208736,
        "feature": 0.042485928866208736,
        "status": 0.042485928866208736,
        "playbooks": 0.042485928866208736,
        "agent": 0.042485928866208736,
        "guidance": 0.042485928866208736,
        "tests": 0.08497185773241747,
        "mirroring": 0.042485928866208736,
        "modules": 0.042485928866208736,
        "pytest": 0.042485928866208736,
        "suite": 0.042485928866208736,
        "covering": 0.042485928866208736,
        "orchestrator": 0.08497185773241747,
        "analyzers": 0.042485928866208736,
        "workflows": 0.042485928866208736,
        "helpers": 0.042485928866208736,
        "artifacts": 0.042485928866208736,
        "data": 0.042485928866208736,
        "stores": 0.042485928866208736,
        "manifest_cache": 0.042485928866208736,
        "json": 0.12745778659862622,
        "cache": 0.042485928866208736,
        "of": 0.08497185773241747,
        "sizes": 0.042485928866208736,
        "mtimes": 0.042485928866208736,
        "hashes": 0.042485928866208736,
        "for": 0.042485928866208736,
        "fast": 0.042485928866208736,
        "re": 0.042485928866208736,
        "scans": 0.042485928866208736,
        "embeddings": 0.042485928866208736,
        "persisted": 0.042485928866208736,
        "embedding": 0.042485928866208736,
        "keyed": 0.042485928866208736,
        "by": 0.08497185773241747,
        "section": 0.042485928866208736,
        "tag": 0.042485928866208736,
        "via": 0.042485928866208736,
        "embeddingstore": 0.042485928866208736,
        "scorecard": 0.042485928866208736,
        "output": 0.042485928866208736,
        "readmescorecard": 0.042485928866208736,
        "evaluate": 0.042485928866208736,
        "tracking": 0.042485928866208736,
        "coverage": 0.042485928866208736,
        "link": 0.042485928866208736,
        "health": 0.042485928866208736,
        "quick": 0.042485928866208736,
        "start": 0.042485928866208736,
        "metadata": 0.042485928866208736,
        "branches": 0.042485928866208736,
        "created": 0.042485928866208736,
        "summaries": 0.042485928866208736,
        "from": 0.042485928866208736,
        "diffanalyzer": 0.042485928866208736,
        "pipeline": 0.042485928866208736,
        "sequence": 0.042485928866208736,
        "init": 0.042485928866208736,
        "mermaid": 0.042485928866208736,
        "sequencediagram": 0.042485928866208736,
        "participant": 0.25491557319725244,
        "dev": 0.042485928866208736,
        "as": 0.25491557319725244,
        "developer": 0.042485928866208736,
        "orc": 0.042485928866208736,
        "scan": 0.042485928866208736,
        "reposcanner": 0.042485928866208736,
        "ana": 0.042485928866208736,
        "analyzer": 0.042485928866208736,
        "plugins": 0.042485928866208736,
        "rag": 0.042485928866208736
      },
      "text": "vectors. | | LLM runtime | `docgen/llm/runner.py` | Chooses HTTP or CLI execution, builds OpenAI-compatible payloads, restricts to loopback hosts, and normalizes responses. | | Post-processing | `docgen/postproc/*` | Manages markers, regenerates ToC, applies badges, lints markdown, validates links, and records README quality metrics. | | Git integration | `docgen/git/diff.py`, `docgen/git/publisher.py` | Maps file diffs to affected sections, handles staged changes, and pushes commits or PRs with optional labels. | | Safety nets | `docgen/failsafe.py` | Generates placeholder sections or full README stubs when prompting fails. | | Reference material | `spec/spec.md`, `spec/feature_order.md`, `spec/feature_checklist.md`, `docs/ci/*`, `AGENTS.md` | Capture architectural contracts, delivery roadmap, feature status, CI playbooks, and agent guidance. | | Tests | `tests/` mirroring runtime modules | Pytest suite covering CLI, orchestrator, analyzers, prompting, git workflows, LLM runner stubs, and post-processing helpers. | ### Artifacts and Data Stores - `.docgen/manifest_cache.json` - cache of file sizes, mtimes, and hashes for fast re-scans. - `.docgen/embeddings.json` - persisted embedding vectors keyed by section/tag via `EmbeddingStore`. - `.docgen/scorecard.json` - output of `ReadmeScorecard.evaluate`, tracking coverage, link health, and quick-start quality. - Git metadata - branches/commits/PRs created by `Publisher` with summaries from `DiffAnalyzer`. ### Pipeline Sequence (`docgen init`) ```mermaid sequenceDiagram participant Dev as Developer participant CLI as docgen CLI participant Orc as Orchestrator participant Scan as RepoScanner participant Ana as Analyzer plugins participant RAG as",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#4",
      "vector": {
        "branches": 0.01984580179179854,
        "commits": 0.01984580179179854,
        "prs": 0.01984580179179854,
        "created": 0.01984580179179854,
        "by": 0.01984580179179854,
        "publisher": 0.03969160358359708,
        "with": 0.01984580179179854,
        "summaries": 0.01984580179179854,
        "from": 0.01984580179179854,
        "diffanalyzer": 0.03969160358359708,
        "pipeline": 0.01984580179179854,
        "sequence": 0.03969160358359708,
        "docgen": 0.11907481075079124,
        "init": 0.03969160358359708,
        "mermaid": 0.03969160358359708,
        "sequencediagram": 0.03969160358359708,
        "participant": 0.4167618376277693,
        "dev": 0.07938320716719416,
        "as": 0.4167618376277693,
        "developer": 0.03969160358359708,
        "cli": 0.15876641433438832,
        "orc": 0.6152198555457548,
        "orchestrator": 0.03969160358359708,
        "scan": 0.15876641433438832,
        "reposcanner": 0.03969160358359708,
        "ana": 0.11907481075079124,
        "analyzer": 0.03969160358359708,
        "plugins": 0.03969160358359708,
        "rag": 0.11907481075079124,
        "ragindexer": 0.03969160358359708,
        "prompt": 0.17861221612618686,
        "promptbuilder": 0.03969160358359708,
        "llm": 0.05953740537539562,
        "llmrunner": 0.01984580179179854,
        "post": 0.15876641433438832,
        "processing": 0.03969160358359708,
        "fs": 0.03969160358359708,
        "filesystem": 0.01984580179179854,
        "run_init": 0.01984580179179854,
        "path": 0.03969160358359708,
        "repomanifest": 0.03969160358359708,
        "filemeta": 0.01984580179179854,
        "analyze": 0.03969160358359708,
        "manifest": 0.0992290089589927,
        "signal": 0.03969160358359708,
        "build": 0.05953740537539562,
        "contexts": 0.03969160358359708,
        "per": 0.01984580179179854,
        "section": 0.07938320716719416,
        "signals": 0.01984580179179854,
        "invoke": 0.01984580179179854,
        "system": 0.01984580179179854,
        "markdown": 0.05953740537539562,
        "full": 0.01984580179179854,
        "readme": 0.07938320716719416,
        "draft": 0.01984580179179854,
        "lint": 0.03969160358359708,
        "toc": 0.03969160358359708,
        "badges": 0.03969160358359708,
        "links": 0.01984580179179854,
        "scorecard": 0.03969160358359708,
        "final": 0.03969160358359708,
        "quality": 0.01984580179179854,
        "report": 0.01984580179179854,
        "write": 0.01984580179179854,
        "md": 0.01984580179179854,
        "git": 0.01984580179179854,
        "optional": 0.01984580179179854,
        "commit": 0.05953740537539562,
        "publish": 0.01984580179179854,
        "mode": 0.01984580179179854,
        "patch": 0.01984580179179854,
        "update": 0.03969160358359708,
        "ci": 0.01984580179179854,
        "diff": 0.0992290089589927,
        "mark": 0.05953740537539562,
        "markermanager": 0.01984580179179854,
        "pub": 0.03969160358359708,
        "base": 0.05953740537539562,
        "ref": 0.01984580179179854,
        "run_update": 0.01984580179179854,
        "compute": 0.01984580179179854,
        "repo": 0.01984580179179854,
        "diffresult": 0.01984580179179854,
        "changed_files": 0.01984580179179854,
        "sections": 0.05953740537539562,
        "context": 0.01984580179179854,
        "snippets": 0.01984580179179854,
        "render_sections": 0.01984580179179854,
        "new": 0.01984580179179854,
        "bodies": 0.01984580179179854,
        "replace": 0.01984580179179854,
        "patched": 0.01984580179179854,
        "link": 0.01984580179179854,
        "check": 0.01984580179179854
      },
      "text": "branches/commits/PRs created by `Publisher` with summaries from `DiffAnalyzer`. ### Pipeline Sequence (`docgen init`) ```mermaid sequenceDiagram participant Dev as Developer participant CLI as docgen CLI participant Orc as Orchestrator participant Scan as RepoScanner participant Ana as Analyzer plugins participant RAG as RAGIndexer participant Prompt as PromptBuilder participant LLM as LLMRunner participant Post as Post-processing participant FS as Filesystem Dev->>CLI: docgen init . CLI->>Orc: run_init(path) Orc->>Scan: scan() Scan-->>Orc: RepoManifest(FileMeta[]) Orc->>Ana: analyze(manifest) Ana-->>Orc: Signal[] Orc->>RAG: build(manifest) RAG-->>Orc: contexts per section Orc->>Prompt: build(manifest, signals, contexts) Prompt->>LLM: invoke(system, prompt) LLM-->>Prompt: section markdown Prompt-->>Orc: full README draft Orc->>Post: lint -> toc -> badges -> links -> scorecard Post-->>Orc: final markdown + quality report Orc->>FS: write README.md Orc->>Git: optional commit (publish mode \"commit\") ``` ### Patch Sequence (`docgen update`) ```mermaid sequenceDiagram participant Dev as Developer/CI participant CLI as docgen CLI participant Orc as Orchestrator participant Diff as DiffAnalyzer participant Scan as RepoScanner participant Ana as Analyzer plugins participant RAG as RAGIndexer participant Prompt as PromptBuilder participant Mark as MarkerManager participant Post as Post-processing participant Pub as Publisher Dev->>CLI: docgen update --diff-base <ref> CLI->>Orc: run_update(path, base) Orc->>Diff: compute(repo, base) Diff-->>Orc: DiffResult(changed_files, sections) Orc->>Scan: scan() Scan-->>Orc: RepoManifest Orc->>Ana: analyze(manifest) Ana-->>Orc: Signal[] Orc->>RAG: build(manifest, sections) RAG-->>Orc: context snippets Orc->>Prompt: render_sections(sections) Prompt-->>Orc: new section bodies Orc->>Mark: replace(markdown, section) Mark-->>Orc: patched README Orc->>Post: lint/toc/badges/link check/scorecard Post-->>Orc: final README + diff Orc->>Pub: commit",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#5",
      "vector": {
        "base": 0.03639372626234195,
        "diff": 0.0727874525246839,
        "orc": 0.5095121676727873,
        "diffresult": 0.03639372626234195,
        "changed_files": 0.03639372626234195,
        "sections": 0.1455749050493678,
        "scan": 0.10918117878702585,
        "repomanifest": 0.03639372626234195,
        "ana": 0.0727874525246839,
        "analyze": 0.03639372626234195,
        "manifest": 0.10918117878702585,
        "signal": 0.1455749050493678,
        "rag": 0.0727874525246839,
        "build": 0.0727874525246839,
        "context": 0.03639372626234195,
        "snippets": 0.03639372626234195,
        "prompt": 0.0727874525246839,
        "render_sections": 0.03639372626234195,
        "new": 0.03639372626234195,
        "section": 0.0727874525246839,
        "bodies": 0.03639372626234195,
        "mark": 0.0727874525246839,
        "replace": 0.03639372626234195,
        "markdown": 0.03639372626234195,
        "patched": 0.03639372626234195,
        "readme": 0.0727874525246839,
        "post": 0.1455749050493678,
        "lint": 0.03639372626234195,
        "toc": 0.03639372626234195,
        "badges": 0.03639372626234195,
        "link": 0.03639372626234195,
        "check": 0.03639372626234195,
        "scorecard": 0.03639372626234195,
        "final": 0.03639372626234195,
        "pub": 0.03639372626234195,
        "commit": 0.03639372626234195,
        "or": 0.03639372626234195,
        "pr": 0.03639372626234195,
        "branch": 0.03639372626234195,
        "title": 0.03639372626234195,
        "body": 0.03639372626234195,
        "api": 0.2911498100987356,
        "extraction": 0.03639372626234195,
        "structureanalyzer": 0.03639372626234195,
        "inspects": 0.03639372626234195,
        "source": 0.03639372626234195,
        "files": 0.0727874525246839,
        "for": 0.03639372626234195,
        "fastapi": 0.10918117878702585,
        "decorators": 0.03639372626234195,
        "express": 0.03639372626234195,
        "route": 0.03639372626234195,
        "calls": 0.0727874525246839,
        "and": 0.3275435363610775,
        "pydantic": 0.03639372626234195,
        "orm": 0.03639372626234195,
        "entities": 0.03639372626234195,
        "each": 0.03639372626234195,
        "match": 0.03639372626234195,
        "emits": 0.03639372626234195,
        "metadata": 0.03639372626234195,
        "such": 0.03639372626234195,
        "as": 0.18196863131170973,
        "handler": 0.03639372626234195,
        "names": 0.03639372626234195,
        "http": 0.03639372626234195,
        "verbs": 0.03639372626234195,
        "detected": 0.03639372626234195,
        "external": 0.0727874525246839,
        "requests": 0.0727874525246839,
        "session": 0.0727874525246839,
        "db": 0.1455749050493678,
        "assembled": 0.03639372626234195,
        "sequence": 0.03639372626234195,
        "steps": 0.03639372626234195,
        "that": 0.0727874525246839,
        "downstream": 0.03639372626234195,
        "templates": 0.03639372626234195,
        "render": 0.03639372626234195,
        "diagrams": 0.03639372626234195,
        "mermaid": 0.03639372626234195,
        "sequencediagram": 0.03639372626234195,
        "participant": 0.1455749050493678,
        "client": 0.10918117878702585,
        "endpoint": 0.03639372626234195,
        "auth": 0.10918117878702585,
        "service": 0.03639372626234195,
        "database": 0.03639372626234195,
        "login": 0.03639372626234195,
        "token": 0.03639372626234195,
        "response": 0.0727874525246839,
        "write": 0.03639372626234195,
        "ack": 0.03639372626234195,
        "authenticated": 0.03639372626234195,
        "other": 0.03639372626234195,
        "analyzers": 0.0727874525246839,
        "complement": 0.03639372626234195,
        "these": 0.03639372626234195,
        "signals": 0.03639372626234195,
        "entrypointanalyzer": 0.03639372626234195,
        "ranks": 0.03639372626234195,
        "executable": 0.03639372626234195,
        "commands": 0.0727874525246839,
        "uvicorn": 0.03639372626234195,
        "django": 0.03639372626234195,
        "runserver": 0.03639372626234195,
        "npm": 0.03639372626234195,
        "dev": 0.03639372626234195,
        "spring": 0.03639372626234195,
        "boot": 0.03639372626234195,
        "bootrun": 0.03639372626234195,
        "buildanalyzer": 0.03639372626234195,
        "pairs": 0.03639372626234195,
        "with": 0.03639372626234195,
        "reproducible": 0.03639372626234195,
        "test": 0.03639372626234195,
        "os": 0.03639372626234195,
        "aware": 0.03639372626234195,
        "scripts": 0.0727874525246839,
        "dependencyanalyzer": 0.03639372626234195,
        "patternanalyzer": 0.03639372626234195,
        "languageanalyzer": 0.03639372626234195,
        "describe": 0.03639372626234195,
        "frameworks": 0.03639372626234195,
        "docker": 0.03639372626234195,
        "k8s": 0.03639372626234195,
        "ci": 0.03639372626234195,
        "layouts": 0.03639372626234195,
        "monorepo": 0.03639372626234195,
        "hints": 0.03639372626234195,
        "feed": 0.03639372626234195,
        "the": 0.03639372626234195,
        "features": 0.03639372626234195,
        "architecture": 0.0727874525246839,
        "quick": 0.0727874525246839,
        "start": 0.0727874525246839,
        "tests": 0.1455749050493678,
        "under": 0.03639372626234195,
        "prompting": 0.03639372626234195,
        "git": 0.03639372626234195,
        "assert": 0.03639372626234195,
        "accuracy": 0.03639372626234195,
        "command": 0.03639372626234195,
        "selection": 0.03639372626234195,
        "publishing": 0.03639372626234195,
        "behavior": 0.03639372626234195,
        "docgen": 0.0727874525246839,
        "end": 0.03639372626234195,
        "begin": 0.03639372626234195,
        "quickstart": 0.03639372626234195,
        "1": 0.03639372626234195,
        "create": 0.03639372626234195,
        "a": 0.03639372626234195,
        "virtual": 0.03639372626234195,
        "environment": 0.03639372626234195,
        "activate": 0.0727874525246839,
        "it": 0.03639372626234195,
        "windows": 0.03639372626234195,
        "python": 0.0727874525246839,
        "m": 0.0727874525246839,
        "venv": 0.18196863131170973,
        "then": 0.03639372626234195,
        "macos": 0.03639372626234195,
        "linux": 0.03639372626234195
      },
      "text": "base) Diff-->>Orc: DiffResult(changed_files, sections) Orc->>Scan: scan() Scan-->>Orc: RepoManifest Orc->>Ana: analyze(manifest) Ana-->>Orc: Signal[] Orc->>RAG: build(manifest, sections) RAG-->>Orc: context snippets Orc->>Prompt: render_sections(sections) Prompt-->>Orc: new section bodies Orc->>Mark: replace(markdown, section) Mark-->>Orc: patched README Orc->>Post: lint/toc/badges/link check/scorecard Post-->>Orc: final README + diff Orc->>Pub: commit or PR (branch, title, body) ``` ### API Signal Extraction `StructureAnalyzer` inspects source files for FastAPI decorators, Express route calls, and Pydantic/ORM entities. Each match emits `Signal` metadata such as handler names, HTTP verbs, detected external calls (`requests`, `session`, `db`), and assembled `sequence` steps that downstream templates render as diagrams. ```mermaid sequenceDiagram participant Client participant API as FastAPI endpoint participant Auth as External service participant DB as Database Client->>API: POST /login API->>Auth: requests.post() Auth-->>API: token/response API->>DB: session.write() DB-->>API: ack API-->>Client: Authenticated response ``` Other analyzers complement these signals: - `EntryPointAnalyzer` ranks executable commands (FastAPI `uvicorn`, Django `runserver`, npm `dev`, Spring Boot `bootRun`). - `BuildAnalyzer` pairs manifest files with reproducible build/test commands and OS-aware scripts. - `DependencyAnalyzer`, `PatternAnalyzer`, and `LanguageAnalyzer` describe frameworks, Docker/K8s/CI layouts, and monorepo hints that feed the features, architecture, and quick-start sections. - Tests under `tests/analyzers/`, `tests/prompting/`, and `tests/git/` assert signal accuracy, command selection, and publishing behavior. <!-- docgen:end:architecture --> ## Quick Start <!-- docgen:begin:quickstart --> 1. Create a virtual environment and activate it: - Windows: `python -m venv .venv` then `.\\.venv\\Scripts\\activate` - macOS/Linux: `python -m venv .venv`",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#6",
      "vector": {
        "tests": 0.04214497519610896,
        "git": 0.04214497519610896,
        "assert": 0.04214497519610896,
        "signal": 0.04214497519610896,
        "accuracy": 0.04214497519610896,
        "command": 0.04214497519610896,
        "selection": 0.04214497519610896,
        "and": 0.16857990078443583,
        "publishing": 0.04214497519610896,
        "behavior": 0.04214497519610896,
        "docgen": 0.5057397023533075,
        "end": 0.08428995039221791,
        "architecture": 0.04214497519610896,
        "quick": 0.04214497519610896,
        "start": 0.04214497519610896,
        "begin": 0.08428995039221791,
        "quickstart": 0.08428995039221791,
        "1": 0.04214497519610896,
        "create": 0.04214497519610896,
        "a": 0.08428995039221791,
        "virtual": 0.04214497519610896,
        "environment": 0.04214497519610896,
        "activate": 0.12643492558832686,
        "it": 0.04214497519610896,
        "windows": 0.04214497519610896,
        "python": 0.2528698511766537,
        "m": 0.2528698511766537,
        "venv": 0.2528698511766537,
        "then": 0.08428995039221791,
        "scripts": 0.04214497519610896,
        "macos": 0.04214497519610896,
        "linux": 0.04214497519610896,
        "source": 0.04214497519610896,
        "bin": 0.04214497519610896,
        "2": 0.08428995039221791,
        "install": 0.12643492558832686,
        "dependencies": 0.04214497519610896,
        "in": 0.04214497519610896,
        "editable": 0.04214497519610896,
        "mode": 0.08428995039221791,
        "includes": 0.04214497519610896,
        "cli": 0.12643492558832686,
        "entry": 0.04214497519610896,
        "point": 0.04214497519610896,
        "test": 0.04214497519610896,
        "tooling": 0.04214497519610896,
        "bash": 0.12643492558832686,
        "pip": 0.12643492558832686,
        "upgrade": 0.04214497519610896,
        "e": 0.04214497519610896,
        "dev": 0.04214497519610896,
        "3": 0.04214497519610896,
        "configure": 0.04214497519610896,
        "yml": 0.08428995039221791,
        "with": 0.08428995039221791,
        "local": 0.04214497519610896,
        "llm": 0.08428995039221791,
        "runner": 0.12643492558832686,
        "details": 0.04214497519610896,
        "see": 0.04214497519610896,
        "configuration": 0.12643492558832686,
        "below": 0.04214497519610896,
        "4": 0.04214497519610896,
        "generate": 0.04214497519610896,
        "an": 0.04214497519610896,
        "initial": 0.04214497519610896,
        "readme": 0.12643492558832686,
        "from": 0.04214497519610896,
        "the": 0.04214497519610896,
        "repository": 0.04214497519610896,
        "root": 0.04214497519610896,
        "init": 0.04214497519610896,
        "5": 0.04214497519610896,
        "after": 0.04214497519610896,
        "subsequent": 0.04214497519610896,
        "changes": 0.04214497519610896,
        "refresh": 0.04214497519610896,
        "documentation": 0.04214497519610896,
        "update": 0.08428995039221791,
        "diff": 0.04214497519610896,
        "base": 0.04214497519610896,
        "origin": 0.04214497519610896,
        "main": 0.04214497519610896,
        "6": 0.04214497519610896,
        "use": 0.04214497519610896,
        "dry": 0.04214497519610896,
        "run": 0.04214497519610896,
        "to": 0.04214497519610896,
        "preview": 0.04214497519610896,
        "diffs": 0.04214497519610896,
        "or": 0.16857990078443583,
        "verbose": 0.04214497519610896,
        "for": 0.04214497519610896,
        "deeper": 0.04214497519610896,
        "logs": 0.04214497519610896,
        "while": 0.04214497519610896,
        "iterating": 0.04214497519610896,
        "on": 0.04214497519610896,
        "analyzers": 0.08428995039221791,
        "config": 0.04214497519610896,
        "py": 0.04214497519610896,
        "loads": 0.04214497519610896,
        "into": 0.04214497519610896,
        "strongly": 0.04214497519610896,
        "typed": 0.04214497519610896,
        "dataclasses": 0.04214497519610896,
        "provides": 0.04214497519610896,
        "minimal": 0.04214497519610896,
        "yaml": 0.08428995039221791,
        "parser": 0.04214497519610896,
        "when": 0.04214497519610896,
        "pyyaml": 0.04214497519610896,
        "is": 0.04214497519610896,
        "absent": 0.04214497519610896,
        "common": 0.04214497519610896,
        "fields": 0.04214497519610896,
        "ollama": 0.04214497519610896,
        "model": 0.08428995039221791,
        "llama3": 0.04214497519610896,
        "8b": 0.04214497519610896,
        "instruct": 0.04214497519610896,
        "base_url": 0.04214497519610896,
        "http": 0.04214497519610896,
        "localhost": 0.04214497519610896,
        "12434": 0.04214497519610896,
        "engines": 0.04214497519610896,
        "v1": 0.04214497519610896,
        "temperature": 0.04214497519610896,
        "0": 0.04214497519610896,
        "max_tokens": 0.04214497519610896,
        "2048": 0.04214497519610896,
        "style": 0.04214497519610896,
        "comprehensive": 0.04214497519610896,
        "concise": 0.04214497519610896,
        "template_pack": 0.04214497519610896,
        "null": 0.04214497519610896,
        "optional": 0.04214497519610896,
        "alt": 0.04214497519610896,
        "templates": 0.08428995039221791,
        "under": 0.04214497519610896,
        "prompting": 0.04214497519610896,
        "publish": 0.04214497519610896,
        "pr": 0.08428995039221791,
        "commit": 0.04214497519610896,
        "branch_prefix": 0.04214497519610896,
        "labels": 0.04214497519610896,
        "docs": 0.08428995039221791,
        "auto": 0.04214497519610896,
        "update_existing": 0.04214497519610896,
        "false": 0.04214497519610896,
        "enabled": 0.04214497519610896,
        "subset": 0.04214497519610896,
        "of": 0.04214497519610896,
        "plugin": 0.04214497519610896,
        "names": 0.04214497519610896,
        "empty": 0.04214497519610896,
        "uses": 0.04214497519610896,
        "all": 0.04214497519610896,
        "built": 0.04214497519610896,
        "ins": 0.04214497519610896,
        "exclude_paths": 0.08428995039221791,
        "sandbox": 0.08428995039221791,
        "ci": 0.04214497519610896,
        "watched_globs": 0.04214497519610896
      },
      "text": "`tests/git/` assert signal accuracy, command selection, and publishing behavior. <!-- docgen:end:architecture --> ## Quick Start <!-- docgen:begin:quickstart --> 1. Create a virtual environment and activate it: - Windows: `python -m venv .venv` then `.\\.venv\\Scripts\\activate` - macOS/Linux: `python -m venv .venv` then `source .venv/bin/activate` 2. Install dependencies in editable mode (includes CLI entry point and test tooling): ```bash python -m pip install --upgrade pip python -m pip install -e .[dev] ``` 3. Configure `.docgen.yml` with local LLM runner details (see Configuration below). 4. Generate an initial README from the repository root: ```bash python -m docgen.cli init . ``` 5. After subsequent changes, refresh documentation with: ```bash python -m docgen.cli update --diff-base origin/main ``` 6. Use `--dry-run` to preview diffs or `--verbose` for deeper logs while iterating on analyzers. <!-- docgen:end:quickstart --> ## Configuration <!-- docgen:begin:configuration --> `docgen/config.py` loads `.docgen.yml` into strongly typed dataclasses and provides a minimal YAML parser when PyYAML is absent. Common fields: ```yaml llm: runner: \"ollama\" # or \"model-runner\" model: \"llama3:8b-instruct\" base_url: \"http://localhost:12434/engines/v1\" temperature: 0.2 max_tokens: 2048 readme: style: \"comprehensive\" # or \"concise\" template_pack: null # optional alt templates under docgen/prompting/templates/ publish: mode: \"pr\" # \"pr\" or \"commit\" branch_prefix: \"docgen/readme-update\" labels: [\"docs:auto\"] update_existing: false analyzers: enabled: [] # subset of plugin names, empty uses all built-ins exclude_paths: - \"sandbox/\" ci: watched_globs: - \"docgen/**\" - \"docs/**\" exclude_paths: - \"sandbox/\"",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#7",
      "vector": {
        "templates": 0.12058018065872111,
        "under": 0.12058018065872111,
        "docgen": 0.5225141161877915,
        "prompting": 0.08038678710581408,
        "publish": 0.04019339355290704,
        "mode": 0.08038678710581408,
        "pr": 0.16077357421162816,
        "or": 0.12058018065872111,
        "commit": 0.04019339355290704,
        "branch_prefix": 0.04019339355290704,
        "readme": 0.08038678710581408,
        "update": 0.12058018065872111,
        "labels": 0.04019339355290704,
        "docs": 0.24116036131744223,
        "auto": 0.04019339355290704,
        "update_existing": 0.04019339355290704,
        "false": 0.04019339355290704,
        "analyzers": 0.12058018065872111,
        "enabled": 0.04019339355290704,
        "subset": 0.04019339355290704,
        "of": 0.04019339355290704,
        "plugin": 0.04019339355290704,
        "names": 0.04019339355290704,
        "empty": 0.04019339355290704,
        "uses": 0.04019339355290704,
        "all": 0.04019339355290704,
        "built": 0.04019339355290704,
        "ins": 0.04019339355290704,
        "exclude_paths": 0.12058018065872111,
        "sandbox": 0.08038678710581408,
        "ci": 0.24116036131744223,
        "watched_globs": 0.08038678710581408,
        "highlights": 0.04019339355290704,
        "llmconfig": 0.04019339355290704,
        "supports": 0.04019339355290704,
        "env": 0.04019339355290704,
        "overrides": 0.08038678710581408,
        "docgen_llm_model": 0.04019339355290704,
        "docgen_llm_base_url": 0.04019339355290704,
        "docgen_llm_api_key": 0.04019339355290704,
        "and": 0.12058018065872111,
        "enforces": 0.04019339355290704,
        "loopback": 0.04019339355290704,
        "urls": 0.04019339355290704,
        "publishconfig": 0.04019339355290704,
        "toggles": 0.04019339355290704,
        "automatic": 0.04019339355290704,
        "commits": 0.04019339355290704,
        "creation": 0.04019339355290704,
        "publisher": 0.04019339355290704,
        "relies": 0.04019339355290704,
        "on": 0.04019339355290704,
        "the": 0.16077357421162816,
        "github": 0.12058018065872111,
        "cli": 0.08038678710581408,
        "when": 0.12058018065872111,
        "analyzerconfig": 0.04019339355290704,
        "removes": 0.04019339355290704,
        "noisy": 0.04019339355290704,
        "directories": 0.04019339355290704,
        "from": 0.04019339355290704,
        "analysis": 0.04019339355290704,
        "without": 0.04019339355290704,
        "editing": 0.04019339355290704,
        "gitignore": 0.04019339355290704,
        "template": 0.04019339355290704,
        "can": 0.04019339355290704,
        "live": 0.04019339355290704,
        "are": 0.04019339355290704,
        "picked": 0.04019339355290704,
        "up": 0.04019339355290704,
        "automatically": 0.04019339355290704,
        "present": 0.04019339355290704,
        "watchers": 0.04019339355290704,
        "skip": 0.04019339355290704,
        "updates": 0.04019339355290704,
        "changed": 0.04019339355290704,
        "files": 0.04019339355290704,
        "do": 0.04019339355290704,
        "not": 0.04019339355290704,
        "match": 0.04019339355290704,
        "aligning": 0.04019339355290704,
        "with": 0.04019339355290704,
        "workflow": 0.04019339355290704,
        "in": 0.12058018065872111,
        "yml": 0.08038678710581408,
        "end": 0.08038678710581408,
        "configuration": 0.04019339355290704,
        "build": 0.04019339355290704,
        "test": 0.08038678710581408,
        "begin": 0.08038678710581408,
        "build_and_test": 0.08038678710581408,
        "format": 0.04019339355290704,
        "lint": 0.04019339355290704,
        "bash": 0.16077357421162816,
        "black": 0.04019339355290704,
        "tests": 0.12058018065872111,
        "python": 0.2009669677645352,
        "m": 0.2009669677645352,
        "ruff": 0.04019339355290704,
        "check": 0.08038678710581408,
        "type": 0.04019339355290704,
        "core": 0.04019339355290704,
        "modules": 0.08038678710581408,
        "mypy": 0.04019339355290704,
        "run": 0.04019339355290704,
        "full": 0.04019339355290704,
        "suite": 0.04019339355290704,
        "mirrors": 0.04019339355290704,
        "runtime": 0.04019339355290704,
        "orchestrator": 0.08038678710581408,
        "git": 0.04019339355290704,
        "rag": 0.04019339355290704,
        "post": 0.04019339355290704,
        "processing": 0.04019339355290704,
        "pytest": 0.12058018065872111,
        "target": 0.04019339355290704,
        "specific": 0.04019339355290704,
        "areas": 0.04019339355290704,
        "while": 0.04019339355290704,
        "iterating": 0.04019339355290704,
        "k": 0.04019339355290704,
        "test_structure": 0.04019339355290704,
        "py": 0.04019339355290704,
        "regenerate": 0.04019339355290704,
        "fixtures": 0.04019339355290704,
        "inspect": 0.04019339355290704,
        "scorecards": 0.04019339355290704,
        "stored": 0.04019339355290704,
        "to": 0.04019339355290704,
        "validate": 0.04019339355290704,
        "generated": 0.04019339355290704,
        "content": 0.04019339355290704,
        "deployment": 0.08038678710581408,
        "actions": 0.08038678710581408,
        "recipe": 0.04019339355290704,
        "documented": 0.04019339355290704,
        "md": 0.04019339355290704,
        "installs": 0.04019339355290704,
        "package": 0.04019339355290704,
        "editable": 0.04019339355290704
      },
      "text": "templates under docgen/prompting/templates/ publish: mode: \"pr\" # \"pr\" or \"commit\" branch_prefix: \"docgen/readme-update\" labels: [\"docs:auto\"] update_existing: false analyzers: enabled: [] # subset of plugin names, empty uses all built-ins exclude_paths: - \"sandbox/\" ci: watched_globs: - \"docgen/**\" - \"docs/**\" exclude_paths: - \"sandbox/\" ``` Highlights: - `LLMConfig` supports env overrides (`DOCGEN_LLM_MODEL`, `DOCGEN_LLM_BASE_URL`, `DOCGEN_LLM_API_KEY`) and enforces loopback URLs. - `PublishConfig` toggles automatic commits or PR creation; `Publisher` relies on the GitHub CLI when `mode=\"pr\"`. - `AnalyzerConfig.exclude_paths` removes noisy directories from analysis without editing `.gitignore`. - Template overrides can live under `docs/templates/` and are picked up automatically when present. - CI watchers skip updates when changed files do not match `ci.watched_globs`, aligning with the workflow in `docs/ci/docgen-update.yml`. <!-- docgen:end:configuration --> ## Build & Test <!-- docgen:begin:build_and_test --> - Format and lint: ```bash black docgen tests python -m ruff check docgen tests ``` - Type-check core modules: ```bash python -m mypy docgen ``` - Run the full test suite (mirrors runtime modules: CLI, orchestrator, analyzers, prompting, git, RAG, post-processing): ```bash python -m pytest ``` - Target specific areas while iterating: ```bash python -m pytest -k orchestrator python -m pytest tests/analyzers/test_structure.py ``` - Regenerate README fixtures or inspect scorecards stored under `.docgen/` to validate generated content. <!-- docgen:end:build_and_test --> ## Deployment <!-- docgen:begin:deployment --> - GitHub Actions recipe: `docs/ci/docgen-update.yml` (documented in `docs/ci/github-actions.md`) installs the package in editable",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#8",
      "vector": {
        "python": 0.040555355282690636,
        "m": 0.040555355282690636,
        "pytest": 0.040555355282690636,
        "tests": 0.040555355282690636,
        "analyzers": 0.040555355282690636,
        "test_structure": 0.040555355282690636,
        "py": 0.08111071056538127,
        "regenerate": 0.040555355282690636,
        "readme": 0.12166606584807191,
        "fixtures": 0.040555355282690636,
        "or": 0.24333213169614382,
        "inspect": 0.08111071056538127,
        "scorecards": 0.040555355282690636,
        "stored": 0.040555355282690636,
        "under": 0.040555355282690636,
        "docgen": 0.48666426339228763,
        "to": 0.20277677641345318,
        "validate": 0.040555355282690636,
        "generated": 0.08111071056538127,
        "content": 0.040555355282690636,
        "end": 0.08111071056538127,
        "build_and_test": 0.040555355282690636,
        "deployment": 0.12166606584807191,
        "begin": 0.08111071056538127,
        "github": 0.12166606584807191,
        "actions": 0.08111071056538127,
        "recipe": 0.040555355282690636,
        "docs": 0.12166606584807191,
        "ci": 0.12166606584807191,
        "update": 0.16222142113076254,
        "yml": 0.040555355282690636,
        "documented": 0.040555355282690636,
        "in": 0.12166606584807191,
        "md": 0.040555355282690636,
        "installs": 0.040555355282690636,
        "the": 0.40555355282690636,
        "package": 0.040555355282690636,
        "editable": 0.040555355282690636,
        "mode": 0.08111071056538127,
        "runs": 0.040555355282690636,
        "and": 0.16222142113076254,
        "optionally": 0.040555355282690636,
        "commits": 0.08111071056538127,
        "changes": 0.040555355282690636,
        "back": 0.040555355282690636,
        "branch": 0.040555355282690636,
        "self": 0.040555355282690636,
        "hosted": 0.040555355282690636,
        "runners": 0.040555355282690636,
        "are": 0.12166606584807191,
        "recommended": 0.040555355282690636,
        "so": 0.040555355282690636,
        "workflow": 0.040555355282690636,
        "can": 0.08111071056538127,
        "reach": 0.040555355282690636,
        "your": 0.040555355282690636,
        "local": 0.08111071056538127,
        "inference": 0.040555355282690636,
        "endpoint": 0.040555355282690636,
        "docgen_llm_base_url": 0.040555355282690636,
        "same": 0.040555355282690636,
        "settings": 0.040555355282690636,
        "apply": 0.040555355282690636,
        "when": 0.12166606584807191,
        "running": 0.040555355282690636,
        "cd": 0.040555355282690636,
        "pipelines": 0.040555355282690636,
        "outside": 0.040555355282690636,
        "publisher": 0.040555355282690636,
        "push": 0.040555355282690636,
        "directly": 0.040555355282690636,
        "publish": 0.040555355282690636,
        "commit": 0.040555355282690636,
        "for": 0.040555355282690636,
        "bootstrap": 0.040555355282690636,
        "scenarios": 0.040555355282690636,
        "open": 0.040555355282690636,
        "prs": 0.040555355282690636,
        "with": 0.040555355282690636,
        "labeled": 0.040555355282690636,
        "summaries": 0.040555355282690636,
        "gh": 0.040555355282690636,
        "cli": 0.040555355282690636,
        "credentials": 0.040555355282690636,
        "available": 0.040555355282690636,
        "troubleshooting": 0.08111071056538127,
        "use": 0.040555355282690636,
        "verbose": 0.040555355282690636,
        "surface": 0.040555355282690636,
        "analyzer": 0.08111071056538127,
        "selection": 0.040555355282690636,
        "prompt": 0.08111071056538127,
        "generation": 0.040555355282690636,
        "post": 0.040555355282690636,
        "processing": 0.040555355282690636,
        "diagnostics": 0.040555355282690636,
        "emitted": 0.040555355282690636,
        "by": 0.040555355282690636,
        "get_logger": 0.040555355282690636,
        "orchestrator": 0.040555355282690636,
        "if": 0.040555355282690636,
        "already": 0.040555355282690636,
        "exists": 0.040555355282690636,
        "init": 0.040555355282690636,
        "will": 0.040555355282690636,
        "abort": 0.040555355282690636,
        "switch": 0.040555355282690636,
        "remove": 0.040555355282690636,
        "file": 0.040555355282690636,
        "before": 0.08111071056538127,
        "re": 0.040555355282690636,
        "initialising": 0.040555355282690636,
        "empty": 0.040555355282690636,
        "failing": 0.040555355282690636,
        "sections": 0.040555355282690636,
        "trigger": 0.040555355282690636,
        "fallback": 0.040555355282690636,
        "stubs": 0.040555355282690636,
        "from": 0.040555355282690636,
        "failsafe": 0.040555355282690636,
        "raised": 0.040555355282690636,
        "reason": 0.040555355282690636,
        "rerun": 0.040555355282690636,
        "once": 0.040555355282690636,
        "underlying": 0.040555355282690636,
        "issue": 0.040555355282690636,
        "is": 0.08111071056538127,
        "fixed": 0.040555355282690636,
        "link": 0.040555355282690636,
        "validation": 0.040555355282690636,
        "issues": 0.040555355282690636,
        "logged": 0.040555355282690636,
        "as": 0.040555355282690636,
        "warnings": 0.040555355282690636,
        "relative": 0.040555355282690636,
        "paths": 0.040555355282690636,
        "add": 0.040555355282690636,
        "missing": 0.040555355282690636,
        "files": 0.040555355282690636,
        "committing": 0.040555355282690636,
        "clear": 0.040555355282690636,
        "manifest_cache": 0.040555355282690636,
        "json": 0.08111071056538127,
        "embeddings": 0.040555355282690636,
        "refactoring": 0.040555355282690636,
        "large": 0.040555355282690636,
        "parts": 0.040555355282690636,
        "of": 0.040555355282690636,
        "repo": 0.040555355282690636,
        "structure": 0.040555355282690636,
        "force": 0.040555355282690636,
        "a": 0.08111071056538127,
        "fresh": 0.040555355282690636,
        "scan": 0.040555355282690636,
        "ensure": 0.040555355282690636,
        "model": 0.040555355282690636,
        "runner": 0.040555355282690636,
        "reachable": 0.040555355282690636,
        "at": 0.040555355282690636,
        "loopback": 0.040555355282690636,
        "url": 0.040555355282690636,
        "remote": 0.040555355282690636
      },
      "text": "python -m pytest tests/analyzers/test_structure.py ``` - Regenerate README fixtures or inspect scorecards stored under `.docgen/` to validate generated content. <!-- docgen:end:build_and_test --> ## Deployment <!-- docgen:begin:deployment --> - GitHub Actions recipe: `docs/ci/docgen-update.yml` (documented in `docs/ci/github-actions.md`) installs the package in editable mode, runs `docgen update`, and optionally commits README changes back to the branch. - Self-hosted runners are recommended so the workflow can reach your local inference endpoint (`DOCGEN_LLM_BASE_URL`). The same settings apply when running in CI/CD pipelines outside GitHub. - `Publisher` can push commits directly (`publish.mode: commit`) for bootstrap scenarios or open PRs with labeled summaries when `gh` CLI credentials are available. <!-- docgen:end:deployment --> ## Troubleshooting <!-- docgen:begin:troubleshooting --> - Use `--verbose` to surface analyzer selection, prompt generation, and post-processing diagnostics emitted by `get_logger(\"orchestrator\")`. - If the README already exists, `docgen init` will abort; switch to `docgen update` or remove the file before re-initialising. - Empty or failing sections trigger fallback stubs from `docgen/failsafe.py`; inspect the raised reason and rerun once the underlying analyzer or prompt issue is fixed. - Link validation issues are logged as warnings. Update relative paths or add missing files before committing generated docs. - Clear `.docgen/manifest_cache.json` and `.docgen/embeddings.json` when refactoring large parts of the repo structure to force a fresh scan. - Ensure the local model runner is reachable at a loopback URL; remote",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#9",
      "vector": {
        "paths": 0.03782347372361169,
        "or": 0.26476431606528184,
        "add": 0.11347042117083507,
        "missing": 0.03782347372361169,
        "files": 0.03782347372361169,
        "before": 0.03782347372361169,
        "committing": 0.03782347372361169,
        "generated": 0.03782347372361169,
        "docs": 0.03782347372361169,
        "clear": 0.03782347372361169,
        "docgen": 0.4538816846833403,
        "manifest_cache": 0.03782347372361169,
        "json": 0.07564694744722338,
        "and": 0.11347042117083507,
        "embeddings": 0.03782347372361169,
        "when": 0.07564694744722338,
        "refactoring": 0.03782347372361169,
        "large": 0.03782347372361169,
        "parts": 0.03782347372361169,
        "of": 0.03782347372361169,
        "the": 0.3404112635125052,
        "repo": 0.03782347372361169,
        "structure": 0.03782347372361169,
        "to": 0.03782347372361169,
        "force": 0.03782347372361169,
        "a": 0.4538816846833403,
        "fresh": 0.03782347372361169,
        "scan": 0.03782347372361169,
        "ensure": 0.03782347372361169,
        "local": 0.07564694744722338,
        "model": 0.07564694744722338,
        "runner": 0.07564694744722338,
        "is": 0.07564694744722338,
        "reachable": 0.03782347372361169,
        "at": 0.03782347372361169,
        "loopback": 0.07564694744722338,
        "url": 0.03782347372361169,
        "remote": 0.07564694744722338,
        "hosts": 0.07564694744722338,
        "are": 0.07564694744722338,
        "intentionally": 0.03782347372361169,
        "rejected": 0.03782347372361169,
        "by": 0.03782347372361169,
        "llmrunner": 0.07564694744722338,
        "for": 0.03782347372361169,
        "security": 0.03782347372361169,
        "end": 0.11347042117083507,
        "troubleshooting": 0.03782347372361169,
        "faq": 0.11347042117083507,
        "begin": 0.07564694744722338,
        "q": 0.15129389489444675,
        "how": 0.03782347372361169,
        "this": 0.07564694744722338,
        "readme": 0.03782347372361169,
        "maintained": 0.03782347372361169,
        "generate": 0.03782347372361169,
        "with": 0.03782347372361169,
        "init": 0.03782347372361169,
        "keep": 0.03782347372361169,
        "it": 0.03782347372361169,
        "current": 0.03782347372361169,
        "via": 0.07564694744722338,
        "update": 0.03782347372361169,
        "optionally": 0.03782347372361169,
        "in": 0.15129389489444675,
        "ci": 0.03782347372361169,
        "using": 0.03782347372361169,
        "provided": 0.03782347372361169,
        "workflow": 0.03782347372361169,
        "what": 0.03782347372361169,
        "happens": 0.03782347372361169,
        "if": 0.03782347372361169,
        "analyzers": 0.11347042117083507,
        "miss": 0.03782347372361169,
        "framework": 0.03782347372361169,
        "command": 0.03782347372361169,
        "signals": 0.03782347372361169,
        "pluggable": 0.03782347372361169,
        "custom": 0.03782347372361169,
        "analyzer": 0.03782347372361169,
        "entry": 0.03782347372361169,
        "point": 0.03782347372361169,
        "group": 0.03782347372361169,
        "extend": 0.03782347372361169,
        "existing": 0.03782347372361169,
        "utilities": 0.03782347372361169,
        "under": 0.03782347372361169,
        "utils": 0.03782347372361169,
        "py": 0.03782347372361169,
        "can": 0.03782347372361169,
        "use": 0.03782347372361169,
        "llm": 0.03782347372361169,
        "endpoint": 0.03782347372361169,
        "no": 0.03782347372361169,
        "enforces": 0.03782347372361169,
        "internal": 0.03782347372361169,
        "supply": 0.03782347372361169,
        "ollama": 0.03782347372361169,
        "instance": 0.03782347372361169,
        "instead": 0.03782347372361169,
        "where": 0.03782347372361169,
        "do": 0.03782347372361169,
        "i": 0.03782347372361169,
        "report": 0.03782347372361169,
        "issues": 0.03782347372361169,
        "propose": 0.03782347372361169,
        "enhancements": 0.03782347372361169,
        "file": 0.03782347372361169,
        "an": 0.03782347372361169,
        "issue": 0.03782347372361169,
        "open": 0.03782347372361169,
        "discussion": 0.03782347372361169,
        "repository": 0.03782347372361169,
        "reference": 0.03782347372361169,
        "relevant": 0.03782347372361169,
        "sections": 0.03782347372361169,
        "spec": 0.15129389489444675,
        "md": 0.11347042117083507,
        "feature_order": 0.07564694744722338,
        "describing": 0.03782347372361169,
        "change": 0.03782347372361169,
        "license": 0.15129389489444675,
        "licensing": 0.03782347372361169,
        "information": 0.03782347372361169,
        "once": 0.03782347372361169,
        "project": 0.03782347372361169,
        "selects": 0.03782347372361169,
        "track": 0.03782347372361169,
        "candidate": 0.03782347372361169,
        "licenses": 0.03782347372361169,
        "alongside": 0.03782347372361169,
        "roadmap": 0.03782347372361169
      },
      "text": "paths or add missing files before committing generated docs. - Clear `.docgen/manifest_cache.json` and `.docgen/embeddings.json` when refactoring large parts of the repo structure to force a fresh scan. - Ensure the local model runner is reachable at a loopback URL; remote hosts are intentionally rejected by `LLMRunner` for security. <!-- docgen:end:troubleshooting --> ## FAQ <!-- docgen:begin:faq --> **Q: How is this README maintained?** A: Generate with `docgen init` and keep it current via `docgen update` (optionally in CI using the provided workflow). **Q: What happens if analyzers miss a framework or command?** A: Signals are pluggable\u2014add a custom analyzer via the `docgen.analyzers` entry-point group or extend the existing utilities under `docgen/analyzers/utils.py`. **Q: Can docgen use a remote LLM endpoint?** A: No. `LLMRunner` enforces loopback/`.internal` hosts; supply a local model runner or Ollama instance instead. **Q: Where do I report issues or propose enhancements?** A: File an issue or open a discussion in this repository and reference the relevant sections in `spec/spec.md` or `spec/feature_order.md` when describing the change. <!-- docgen:end:faq --> ## License <!-- docgen:begin:license --> Add licensing information once the project selects a license. Track candidate licenses alongside the roadmap in `spec/feature_order.md`. <!-- docgen:end:license -->",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "docs/ci/docgen-update.yml#0",
      "vector": {
        "name": 0.2773500981126145,
        "docgen": 0.1849000654084097,
        "update": 0.2311250817605121,
        "on": 0.09245003270420485,
        "push": 0.046225016352102424,
        "branches": 0.09245003270420485,
        "main": 0.13867504905630726,
        "pull_request": 0.13867504905630726,
        "jobs": 0.046225016352102424,
        "readme": 0.1849000654084097,
        "runs": 0.046225016352102424,
        "self": 0.046225016352102424,
        "hosted": 0.046225016352102424,
        "steps": 0.09245003270420485,
        "uses": 0.13867504905630726,
        "actions": 0.2311250817605121,
        "checkout": 0.046225016352102424,
        "v4": 0.09245003270420485,
        "with": 0.13867504905630726,
        "fetch": 0.046225016352102424,
        "depth": 0.046225016352102424,
        "0": 0.046225016352102424,
        "setup": 0.046225016352102424,
        "python": 0.2311250817605121,
        "v5": 0.046225016352102424,
        "version": 0.046225016352102424,
        "3": 0.046225016352102424,
        "11": 0.046225016352102424,
        "cache": 0.09245003270420485,
        "path": 0.046225016352102424,
        "pip": 0.2773500981126145,
        "key": 0.046225016352102424,
        "runner": 0.09245003270420485,
        "os": 0.09245003270420485,
        "hashfiles": 0.046225016352102424,
        "pyproject": 0.046225016352102424,
        "toml": 0.046225016352102424,
        "restore": 0.046225016352102424,
        "keys": 0.046225016352102424,
        "install": 0.13867504905630726,
        "dependencies": 0.046225016352102424,
        "run": 0.2311250817605121,
        "m": 0.13867504905630726,
        "upgrade": 0.046225016352102424,
        "e": 0.046225016352102424,
        "dev": 0.046225016352102424,
        "determine": 0.046225016352102424,
        "diff": 0.1849000654084097,
        "base": 0.2773500981126145,
        "id": 0.046225016352102424,
        "if": 0.09245003270420485,
        "github": 0.2311250817605121,
        "event_name": 0.046225016352102424,
        "then": 0.09245003270420485,
        "echo": 0.09245003270420485,
        "event": 0.046225016352102424,
        "sha": 0.046225016352102424,
        "github_output": 0.09245003270420485,
        "else": 0.046225016352102424,
        "origin": 0.046225016352102424,
        "fi": 0.09245003270420485,
        "env": 0.046225016352102424,
        "docgen_llm_base_url": 0.046225016352102424,
        "http": 0.046225016352102424,
        "localhost": 0.046225016352102424,
        "12434": 0.046225016352102424,
        "engines": 0.046225016352102424,
        "v1": 0.046225016352102424,
        "cli": 0.046225016352102424,
        "outputs": 0.046225016352102424,
        "commit": 0.09245003270420485,
        "md": 0.09245003270420485,
        "optional": 0.046225016352102424,
        "git": 0.1849000654084097,
        "status": 0.046225016352102424,
        "short": 0.046225016352102424,
        "grep": 0.046225016352102424,
        "q": 0.046225016352102424,
        "config": 0.09245003270420485,
        "user": 0.09245003270420485,
        "email": 0.046225016352102424,
        "users": 0.046225016352102424,
        "noreply": 0.046225016352102424,
        "com": 0.046225016352102424,
        "am": 0.046225016352102424,
        "docs": 0.046225016352102424,
        "via": 0.046225016352102424
      },
      "text": "name: docgen-update on: push: branches: [ main ] pull_request: branches: [ main ] jobs: update-readme: runs-on: self-hosted steps: - uses: actions/checkout@v4 with: fetch-depth: 0 - uses: actions/setup-python@v5 with: python-version: '3.11' - uses: actions/cache@v4 with: path: ~/.cache/pip key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }} restore-keys: ${{ runner.os }}-pip- - name: Install dependencies run: | python -m pip install --upgrade pip python -m pip install -e .[dev] - name: Determine diff base id: diff run: | if [ \"${{ github.event_name }}\" = \"pull_request\" ]; then echo \"base=${{ github.event.pull_request.base.sha }}\" >> \"$GITHUB_OUTPUT\" else echo \"base=origin/main\" >> \"$GITHUB_OUTPUT\" fi - name: Run docgen update env: DOCGEN_LLM_BASE_URL: http://localhost:12434/engines/v1 run: python -m docgen.cli update --diff-base ${{ steps.diff.outputs.base }} - name: Commit README.md (optional) run: | if git status --short | grep -q README.md; then git config user.name \"github-actions\" git config user.email \"github-actions@users.noreply.github.com\" git commit -am \"docs: update README via docgen\" fi",
      "metadata": {
        "path": "docs/ci/docgen-update.yml",
        "tags": [
          "docs"
        ],
        "hash": "f3bf5ea7b740892011a0aa14cb06b4bb27a4f3ea348599d85003a66032594538"
      }
    },
    {
      "id": "docs/ci/github-actions.md#0",
      "vector": {
        "github": 0.25925925925925924,
        "actions": 0.2222222222222222,
        "integration": 0.037037037037037035,
        "the": 0.1111111111111111,
        "workflow": 0.037037037037037035,
        "below": 0.037037037037037035,
        "runs": 0.07407407407407407,
        "docgen": 0.25925925925925924,
        "update": 0.2222222222222222,
        "on": 0.1111111111111111,
        "pushes": 0.037037037037037035,
        "and": 0.037037037037037035,
        "pull": 0.037037037037037035,
        "requests": 0.037037037037037035,
        "it": 0.037037037037037035,
        "assumes": 0.037037037037037035,
        "a": 0.037037037037037035,
        "self": 0.07407407407407407,
        "hosted": 0.1111111111111111,
        "runner": 0.14814814814814814,
        "or": 0.037037037037037035,
        "with": 0.14814814814814814,
        "network": 0.037037037037037035,
        "access": 0.07407407407407407,
        "to": 0.037037037037037035,
        "your": 0.037037037037037035,
        "local": 0.07407407407407407,
        "model": 0.037037037037037035,
        "runtime": 0.037037037037037035,
        "job": 0.037037037037037035,
        "skips": 0.037037037037037035,
        "early": 0.037037037037037035,
        "when": 0.037037037037037035,
        "no": 0.037037037037037035,
        "files": 0.037037037037037035,
        "match": 0.037037037037037035,
        "yml": 0.037037037037037035,
        "s": 0.037037037037037035,
        "ci": 0.037037037037037035,
        "watched_globs": 0.037037037037037035,
        "entries": 0.037037037037037035,
        "so": 0.037037037037037035,
        "that": 0.037037037037037035,
        "purely": 0.037037037037037035,
        "documentation": 0.037037037037037035,
        "only": 0.037037037037037035,
        "changes": 0.037037037037037035,
        "do": 0.037037037037037035,
        "not": 0.037037037037037035,
        "trigger": 0.037037037037037035,
        "generator": 0.037037037037037035,
        "yaml": 0.037037037037037035,
        "name": 0.3333333333333333,
        "push": 0.037037037037037035,
        "branches": 0.07407407407407407,
        "main": 0.1111111111111111,
        "pull_request": 0.1111111111111111,
        "jobs": 0.037037037037037035,
        "readme": 0.14814814814814814,
        "requires": 0.037037037037037035,
        "llm": 0.037037037037037035,
        "steps": 0.07407407407407407,
        "checkout": 0.07407407407407407,
        "repository": 0.037037037037037035,
        "uses": 0.1111111111111111,
        "v4": 0.07407407407407407,
        "fetch": 0.037037037037037035,
        "depth": 0.037037037037037035,
        "0": 0.037037037037037035,
        "set": 0.037037037037037035,
        "up": 0.037037037037037035,
        "python": 0.2222222222222222,
        "setup": 0.037037037037037035,
        "v5": 0.037037037037037035,
        "version": 0.037037037037037035,
        "3": 0.037037037037037035,
        "11": 0.037037037037037035,
        "cache": 0.1111111111111111,
        "pip": 0.25925925925925924,
        "dependencies": 0.037037037037037035,
        "path": 0.037037037037037035,
        "key": 0.037037037037037035,
        "os": 0.07407407407407407,
        "hashfiles": 0.037037037037037035,
        "pyproject": 0.037037037037037035,
        "toml": 0.037037037037037035,
        "restore": 0.037037037037037035,
        "keys": 0.037037037037037035,
        "install": 0.1111111111111111,
        "in": 0.037037037037037035,
        "editable": 0.037037037037037035,
        "mode": 0.037037037037037035,
        "run": 0.18518518518518517,
        "m": 0.1111111111111111,
        "upgrade": 0.037037037037037035,
        "e": 0.037037037037037035,
        "dev": 0.037037037037037035,
        "determine": 0.037037037037037035,
        "diff": 0.14814814814814814,
        "base": 0.2222222222222222,
        "id": 0.037037037037037035,
        "if": 0.1111111111111111,
        "event_name": 0.037037037037037035,
        "then": 0.07407407407407407,
        "echo": 0.07407407407407407,
        "event": 0.037037037037037035,
        "sha": 0.037037037037037035,
        "github_output": 0.07407407407407407,
        "else": 0.037037037037037035,
        "origin": 0.037037037037037035,
        "fi": 0.07407407407407407,
        "env": 0.037037037037037035,
        "docgen_llm_base_url": 0.037037037037037035,
        "http": 0.037037037037037035,
        "localhost": 0.037037037037037035,
        "12434": 0.037037037037037035,
        "engines": 0.037037037037037035,
        "v1": 0.037037037037037035,
        "cli": 0.037037037037037035,
        "outputs": 0.037037037037037035,
        "commit": 0.07407407407407407,
        "updates": 0.037037037037037035,
        "any": 0.037037037037037035,
        "git": 0.14814814814814814,
        "status": 0.037037037037037035,
        "short": 0.037037037037037035,
        "grep": 0.037037037037037035,
        "q": 0.037037037037037035,
        "md": 0.037037037037037035,
        "config": 0.07407407407407407,
        "user": 0.07407407407407407,
        "email": 0.037037037037037035,
        "users": 0.037037037037037035,
        "noreply": 0.037037037037037035,
        "com": 0.037037037037037035,
        "am": 0.037037037037037035,
        "docs": 0.037037037037037035,
        "via": 0.037037037037037035
      },
      "text": "# GitHub Actions Integration The workflow below runs `docgen update` on pushes and pull requests. It assumes a self-hosted runner (or GitHub-hosted runner with network access to your local model runtime). The job skips early when no files match `.docgen.yml`'s `ci.watched_globs` entries so that purely documentation-only changes do not trigger the generator. ```yaml name: docgen-update on: push: branches: [ main ] pull_request: branches: [ main ] jobs: update-readme: runs-on: self-hosted # requires local LLM access steps: - name: Checkout repository uses: actions/checkout@v4 with: fetch-depth: 0 - name: Set up Python uses: actions/setup-python@v5 with: python-version: '3.11' - name: Cache pip dependencies uses: actions/cache@v4 with: path: ~/.cache/pip key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }} restore-keys: ${{ runner.os }}-pip- - name: Install docgen in editable mode run: | python -m pip install --upgrade pip python -m pip install -e .[dev] - name: Determine diff base id: diff run: | if [ \"${{ github.event_name }}\" = \"pull_request\" ]; then echo \"base=${{ github.event.pull_request.base.sha }}\" >> \"$GITHUB_OUTPUT\" else echo \"base=origin/main\" >> \"$GITHUB_OUTPUT\" fi - name: Run docgen update env: DOCGEN_LLM_BASE_URL: http://localhost:12434/engines/v1 run: | python -m docgen.cli update --diff-base ${{ steps.diff.outputs.base }} - name: Commit README updates (if any) run: | if git status --short | grep -q README.md; then git config user.name \"github-actions\" git config user.email \"github-actions@users.noreply.github.com\" git commit -am \"docs: update README via docgen\" fi -",
      "metadata": {
        "path": "docs/ci/github-actions.md",
        "tags": [
          "docs"
        ],
        "hash": "518fe87441e7f08aadb0ed175d54a5ce3c227af17677678096af6df070190e59"
      }
    },
    {
      "id": "docs/ci/github-actions.md#1",
      "vector": {
        "diff": 0.1363988678940947,
        "base": 0.1363988678940947,
        "steps": 0.06819943394704735,
        "outputs": 0.06819943394704735,
        "name": 0.2727977357881894,
        "commit": 0.1363988678940947,
        "readme": 0.4091966036822841,
        "updates": 0.06819943394704735,
        "if": 0.20459830184114206,
        "any": 0.06819943394704735,
        "run": 0.06819943394704735,
        "git": 0.2727977357881894,
        "status": 0.06819943394704735,
        "short": 0.06819943394704735,
        "grep": 0.06819943394704735,
        "q": 0.06819943394704735,
        "md": 0.1363988678940947,
        "then": 0.06819943394704735,
        "config": 0.1363988678940947,
        "user": 0.1363988678940947,
        "github": 0.2727977357881894,
        "actions": 0.20459830184114206,
        "email": 0.06819943394704735,
        "users": 0.06819943394704735,
        "noreply": 0.06819943394704735,
        "com": 0.06819943394704735,
        "am": 0.06819943394704735,
        "docs": 0.06819943394704735,
        "update": 0.06819943394704735,
        "via": 0.06819943394704735,
        "docgen": 0.06819943394704735,
        "fi": 0.06819943394704735,
        "upload": 0.1363988678940947,
        "artifact": 0.1363988678940947,
        "success": 0.06819943394704735,
        "uses": 0.06819943394704735,
        "v4": 0.06819943394704735,
        "with": 0.1363988678940947,
        "generated": 0.06819943394704735,
        "path": 0.06819943394704735,
        "note": 0.06819943394704735,
        "the": 0.20459830184114206,
        "workflow": 0.06819943394704735,
        "relies": 0.06819943394704735,
        "on": 0.06819943394704735,
        "docgen_llm_base_url": 0.06819943394704735,
        "pointing": 0.06819943394704735,
        "to": 0.20459830184114206,
        "a": 0.06819943394704735,
        "local": 0.06819943394704735,
        "or": 0.1363988678940947,
        "private": 0.1363988678940947,
        "inference": 0.06819943394704735,
        "endpoint": 0.06819943394704735,
        "for": 0.06819943394704735,
        "hosted": 0.06819943394704735,
        "runners": 0.06819943394704735,
        "you": 0.06819943394704735,
        "will": 0.06819943394704735,
        "need": 0.06819943394704735,
        "expose": 0.06819943394704735,
        "runner": 0.06819943394704735,
        "within": 0.06819943394704735,
        "your": 0.06819943394704735,
        "network": 0.06819943394704735,
        "switch": 0.06819943394704735,
        "ollama": 0.06819943394704735,
        "cli": 0.06819943394704735,
        "appropriate": 0.06819943394704735,
        "caching": 0.06819943394704735
      },
      "text": "--diff-base ${{ steps.diff.outputs.base }} - name: Commit README updates (if any) run: | if git status --short | grep -q README.md; then git config user.name \"github-actions\" git config user.email \"github-actions@users.noreply.github.com\" git commit -am \"docs: update README via docgen\" fi - name: Upload README artifact if: success() uses: actions/upload-artifact@v4 with: name: generated-readme path: README.md ``` > **Note:** the workflow relies on `DOCGEN_LLM_BASE_URL` pointing to a local or > private inference endpoint. For GitHub-hosted runners you will need to expose > the runner within your private network or switch to the `ollama` CLI with > appropriate caching. ```",
      "metadata": {
        "path": "docs/ci/github-actions.md",
        "tags": [
          "docs"
        ],
        "hash": "518fe87441e7f08aadb0ed175d54a5ce3c227af17677678096af6df070190e59"
      }
    },
    {
      "id": "spec/feature_checklist.md#0",
      "vector": {
        "intelligent": 0.03809696588797296,
        "readme": 0.1142908976639189,
        "generator": 0.03809696588797296,
        "feature": 0.03809696588797296,
        "checklist": 0.03809696588797296,
        "status": 0.03809696588797296,
        "legend": 0.03809696588797296,
        "not": 0.03809696588797296,
        "started": 0.03809696588797296,
        "in": 0.03809696588797296,
        "progress": 0.03809696588797296,
        "done": 0.03809696588797296,
        "scope": 0.03809696588797296,
        "tags": 0.03809696588797296,
        "mvp": 0.4571635906556756,
        "required": 0.03809696588797296,
        "for": 0.1142908976639189,
        "proof": 0.03809696588797296,
        "of": 0.07619393177594593,
        "concept": 0.03809696588797296,
        "next": 0.19048482943986483,
        "nice": 0.03809696588797296,
        "to": 0.1142908976639189,
        "have": 0.03809696588797296,
        "soon": 0.03809696588797296,
        "stretch": 0.1142908976639189,
        "later": 0.03809696588797296,
        "1": 0.07619393177594593,
        "core": 0.03809696588797296,
        "workflows": 0.03809696588797296,
        "x": 0.6095514542075674,
        "docgen": 0.15238786355189185,
        "init": 0.03809696588797296,
        "initialize": 0.03809696588797296,
        "repos": 0.03809696588797296,
        "without": 0.07619393177594593,
        "docs": 0.1142908976639189,
        "update": 0.03809696588797296,
        "detect": 0.03809696588797296,
        "changes": 0.03809696588797296,
        "on": 0.03809696588797296,
        "commit": 0.03809696588797296,
        "pr": 0.03809696588797296,
        "and": 0.03809696588797296,
        "patch": 0.03809696588797296,
        "affected": 0.03809696588797296,
        "sections": 0.03809696588797296,
        "regenerate": 0.03809696588797296,
        "manual": 0.03809696588797296,
        "full": 0.03809696588797296,
        "partial": 0.03809696588797296,
        "regeneration": 0.03809696588797296,
        "dry": 0.07619393177594593,
        "run": 0.07619393177594593,
        "mode": 0.07619393177594593,
        "preview": 0.03809696588797296,
        "diffs": 0.03809696588797296,
        "writing": 0.03809696588797296,
        "service": 0.03809696588797296,
        "fastapi": 0.07619393177594593,
        "endpoints": 0.03809696588797296,
        "ci": 0.07619393177594593,
        "bots": 0.03809696588797296,
        "2": 0.03809696588797296,
        "repository": 0.03809696588797296,
        "scanning": 0.03809696588797296,
        "indexing": 0.03809696588797296,
        "walk": 0.03809696588797296,
        "filesystem": 0.03809696588797296,
        "with": 0.03809696588797296,
        "ignore": 0.03809696588797296,
        "rules": 0.03809696588797296,
        "gitignore": 0.03809696588797296,
        "yml": 0.03809696588797296,
        "build": 0.07619393177594593,
        "normalized": 0.03809696588797296,
        "manifest": 0.07619393177594593,
        "files": 0.07619393177594593,
        "roles": 0.03809696588797296,
        "src": 0.03809696588797296,
        "test": 0.03809696588797296,
        "config": 0.07619393177594593,
        "infra": 0.03809696588797296,
        "hash": 0.03809696588797296,
        "cache": 0.03809696588797296,
        "file": 0.03809696588797296,
        "metadata": 0.03809696588797296,
        "speed": 0.03809696588797296,
        "subsequent": 0.03809696588797296,
        "runs": 0.03809696588797296,
        "entrypoint": 0.07619393177594593,
        "detection": 0.07619393177594593,
        "e": 0.03809696588797296,
        "g": 0.03809696588797296,
        "main": 0.03809696588797296,
        "springbootapplication": 0.03809696588797296,
        "app": 0.03809696588797296,
        "monorepo": 0.07619393177594593,
        "module": 0.03809696588797296,
        "3": 0.03809696588797296,
        "analyzers": 0.19048482943986483,
        "plugin": 0.03809696588797296,
        "based": 0.03809696588797296,
        "language": 0.03809696588797296,
        "python": 0.03809696588797296,
        "java": 0.03809696588797296,
        "node": 0.03809696588797296,
        "js": 0.03809696588797296,
        "tier": 0.03809696588797296,
        "poetry": 0.03809696588797296,
        "setuptools": 0.03809696588797296,
        "maven": 0.03809696588797296,
        "gradle": 0.03809696588797296,
        "npm": 0.03809696588797296,
        "pnpm": 0.03809696588797296,
        "yarn": 0.03809696588797296,
        "dependency": 0.03809696588797296,
        "from": 0.03809696588797296,
        "pattern": 0.03809696588797296,
        "docker": 0.03809696588797296,
        "k8s": 0.03809696588797296,
        "layout": 0.03809696588797296,
        "tree": 0.03809696588797296,
        "sitter": 0.03809696588797296,
        "powered": 0.03809696588797296,
        "symbol": 0.03809696588797296,
        "extraction": 0.03809696588797296,
        "flagged": 0.03809696588797296,
        "4": 0.03809696588797296,
        "knowledge": 0.03809696588797296,
        "store": 0.03809696588797296,
        "rag": 0.03809696588797296,
        "local": 0.03809696588797296,
        "embedding": 0.03809696588797296,
        "model": 0.03809696588797296,
        "chunking": 0.03809696588797296,
        "strategy": 0.03809696588797296,
        "index": 0.03809696588797296,
        "top": 0.03809696588797296,
        "n": 0.03809696588797296,
        "source": 0.03809696588797296,
        "headers": 0.03809696588797296,
        "comments": 0.03809696588797296
      },
      "text": "# Intelligent README Generator \u2014 Feature Checklist > Status legend: \u2610 Not started \u00b7 \u25d0 In progress \u00b7 \u2714 Done > Scope tags: **[MVP]** required for proof\u2011of\u2011concept, **[NEXT]** nice\u2011to\u2011have soon, **[STRETCH]** later ## 1) Core Workflows - [x] **docgen init** \u2014 Initialize README for repos without docs **[MVP]** - [x] **docgen update** \u2014 Detect changes on commit/PR and patch affected sections **[MVP]** - [ ] **docgen regenerate** \u2014 Manual full/partial regeneration **[MVP]** - [x] Dry\u2011run mode (`--dry-run`) to preview diffs without writing **[NEXT]** - [x] Service mode (FastAPI) endpoints for CI/bots **[STRETCH]** ## 2) Repository Scanning & Indexing - [x] Walk filesystem with ignore rules (`.gitignore`, `.docgen.yml`) **[MVP]** - [x] Build normalized manifest of files, roles (src/test/docs/config/infra) **[MVP]** - [x] Hash & cache file metadata to speed subsequent runs **[MVP]** - [x] Entrypoint detection (e.g., `main()`, `@SpringBootApplication`, FastAPI app) **[NEXT]** - [x] Monorepo module detection **[NEXT]** ## 3) Analyzers (Plugin\u2011based) - [x] Language analyzers: Python, Java, Node.js (Tier\u20111) **[MVP]** - [x] Build analyzers: Poetry/Setuptools, Maven/Gradle, npm/pnpm/yarn **[MVP]** - [x] Dependency analyzers from manifest files **[MVP]** - [x] Pattern analyzers: Docker/K8s, CI config, monorepo layout **[NEXT]** - [x] Tree\u2011sitter powered symbol/entrypoint extraction (flagged) **[STRETCH]** ## 4) Knowledge Store (RAG) - [x] Local embedding model + chunking strategy **[MVP]** - [x] Index `README`, `/docs`, top N source headers & comments **[MVP]** -",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_checklist.md#1",
      "vector": {
        "ci": 0.03943615033625495,
        "config": 0.0788723006725099,
        "monorepo": 0.03943615033625495,
        "layout": 0.03943615033625495,
        "next": 0.3154892026900396,
        "x": 0.6309784053800792,
        "tree": 0.03943615033625495,
        "sitter": 0.03943615033625495,
        "powered": 0.03943615033625495,
        "symbol": 0.03943615033625495,
        "entrypoint": 0.03943615033625495,
        "extraction": 0.03943615033625495,
        "flagged": 0.03943615033625495,
        "stretch": 0.0788723006725099,
        "4": 0.03943615033625495,
        "knowledge": 0.0788723006725099,
        "store": 0.03943615033625495,
        "rag": 0.03943615033625495,
        "local": 0.0788723006725099,
        "embedding": 0.03943615033625495,
        "model": 0.0788723006725099,
        "chunking": 0.03943615033625495,
        "strategy": 0.03943615033625495,
        "mvp": 0.3943615033625495,
        "index": 0.03943615033625495,
        "readme": 0.03943615033625495,
        "docs": 0.0788723006725099,
        "top": 0.0788723006725099,
        "n": 0.03943615033625495,
        "source": 0.03943615033625495,
        "headers": 0.03943615033625495,
        "comments": 0.03943615033625495,
        "section": 0.19718075168127475,
        "scoped": 0.03943615033625495,
        "retrieval": 0.03943615033625495,
        "k": 0.03943615033625495,
        "per": 0.0788723006725099,
        "lightweight": 0.03943615033625495,
        "graph": 0.03943615033625495,
        "of": 0.03943615033625495,
        "modules": 0.03943615033625495,
        "services": 0.03943615033625495,
        "signals": 0.03943615033625495,
        "5": 0.03943615033625495,
        "prompting": 0.03943615033625495,
        "templates": 0.11830845100876484,
        "jinja2": 0.03943615033625495,
        "intro": 0.03943615033625495,
        "features": 0.03943615033625495,
        "architecture": 0.0788723006725099,
        "quickstart": 0.03943615033625495,
        "build": 0.0788723006725099,
        "test": 0.03943615033625495,
        "deployment": 0.03943615033625495,
        "troubleshooting": 0.03943615033625495,
        "faq": 0.03943615033625495,
        "license": 0.0788723006725099,
        "guardrailed": 0.03943615033625495,
        "system": 0.03943615033625495,
        "prompt": 0.03943615033625495,
        "no": 0.03943615033625495,
        "speculation": 0.03943615033625495,
        "cite": 0.03943615033625495,
        "repo": 0.03943615033625495,
        "facts": 0.03943615033625495,
        "only": 0.03943615033625495,
        "token": 0.03943615033625495,
        "budgeting": 0.03943615033625495,
        "streaming": 0.03943615033625495,
        "by": 0.03943615033625495,
        "generation": 0.03943615033625495,
        "template": 0.03943615033625495,
        "override": 0.03943615033625495,
        "mechanism": 0.03943615033625495,
        "j2": 0.03943615033625495,
        "style": 0.03943615033625495,
        "presets": 0.03943615033625495,
        "concise": 0.03943615033625495,
        "vs": 0.03943615033625495,
        "comprehensive": 0.03943615033625495,
        "mermaid": 0.03943615033625495,
        "js": 0.03943615033625495,
        "diagrams": 0.03943615033625495,
        "for": 0.0788723006725099,
        "flow": 0.03943615033625495,
        "sections": 0.0788723006725099,
        "where": 0.03943615033625495,
        "appropriate": 0.03943615033625495,
        "6": 0.03943615033625495,
        "llm": 0.03943615033625495,
        "runner": 0.0788723006725099,
        "http": 0.03943615033625495,
        "adapter": 0.0788723006725099,
        "host": 0.03943615033625495,
        "container": 0.03943615033625495,
        "defaults": 0.0788723006725099,
        "env": 0.03943615033625495,
        "api": 0.03943615033625495,
        "key": 0.03943615033625495,
        "overrides": 0.03943615033625495,
        "llama": 0.03943615033625495,
        "cpp": 0.03943615033625495,
        "structured": 0.03943615033625495,
        "outputs": 0.03943615033625495,
        "tool": 0.03943615033625495,
        "use": 0.03943615033625495,
        "compatibility": 0.03943615033625495,
        "7": 0.03943615033625495,
        "post": 0.03943615033625495,
        "processing": 0.03943615033625495,
        "markdown": 0.03943615033625495,
        "lint": 0.03943615033625495,
        "heading": 0.03943615033625495,
        "hierarchy": 0.03943615033625495,
        "code": 0.03943615033625495,
        "fences": 0.03943615033625495,
        "line": 0.03943615033625495,
        "length": 0.03943615033625495,
        "auto": 0.03943615033625495,
        "toc": 0.03943615033625495,
        "level": 0.03943615033625495,
        "3": 0.03943615033625495,
        "badges": 0.03943615033625495,
        "coverage": 0.03943615033625495,
        "with": 0.03943615033625495,
        "safe": 0.03943615033625495,
        "link": 0.03943615033625495,
        "validator": 0.03943615033625495,
        "relative": 0.03943615033625495,
        "absolute": 0.03943615033625495,
        "managed": 0.03943615033625495,
        "markers": 0.03943615033625495,
        "idempotent": 0.03943615033625495,
        "patching": 0.03943615033625495,
        "docgen": 0.03943615033625495,
        "begin": 0.03943615033625495,
        "end": 0.03943615033625495,
        "8": 0.03943615033625495,
        "git": 0.03943615033625495,
        "integration": 0.03943615033625495,
        "diff": 0.03943615033625495,
        "detection": 0.03943615033625495,
        "map": 0.03943615033625495,
        "changed": 0.03943615033625495,
        "files": 0.03943615033625495,
        "impacted": 0.03943615033625495
      },
      "text": "CI config, monorepo layout **[NEXT]** - [x] Tree\u2011sitter powered symbol/entrypoint extraction (flagged) **[STRETCH]** ## 4) Knowledge Store (RAG) - [x] Local embedding model + chunking strategy **[MVP]** - [x] Index `README`, `/docs`, top N source headers & comments **[MVP]** - [x] Section\u2011scoped retrieval (top\u2011k per section) **[MVP]** - [ ] Lightweight knowledge graph of modules/services/signals **[NEXT]** ## 5) Prompting & Templates - [x] Jinja2 templates per section (intro, features, architecture, quickstart, config, build/test, deployment, troubleshooting, FAQ, license) **[MVP]** - [ ] Guardrailed system prompt (\u201cno speculation; cite repo facts only\u201d) **[MVP]** - [ ] Token budgeting & streaming section-by-section generation **[MVP]** - [x] Template override mechanism (`docs/templates/*.j2`) **[NEXT]** - [x] Style presets: concise vs comprehensive **[NEXT]** - [x] Mermaid.js diagrams for architecture/flow sections where appropriate **[NEXT]** ## 6) Local LLM Runner - [x] Model Runner HTTP adapter (host/container defaults, env/API key overrides) **[MVP]** - [x] llama.cpp adapter **[NEXT]** - [ ] Structured outputs / tool\u2011use compatibility **[STRETCH]** ## 7) Post\u2011Processing - [x] Markdown lint: heading hierarchy, code fences, line length **[MVP]** - [x] Auto ToC (\u2264 level 3) **[MVP]** - [x] Badges (build, coverage, license) with safe defaults **[NEXT]** - [x] Link validator (relative/absolute) **[NEXT]** - [x] Managed markers for idempotent patching (`<!-- docgen:begin:end -->`) **[MVP]** ## 8) Git Integration - [x] Diff detection (map changed files \u2192 impacted sections)",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_checklist.md#2",
      "vector": {
        "x": 0.6172133998483676,
        "badges": 0.03857583749052298,
        "build": 0.07715167498104596,
        "coverage": 0.03857583749052298,
        "license": 0.03857583749052298,
        "with": 0.07715167498104596,
        "safe": 0.03857583749052298,
        "defaults": 0.03857583749052298,
        "next": 0.3086066999241838,
        "link": 0.03857583749052298,
        "validator": 0.03857583749052298,
        "relative": 0.03857583749052298,
        "absolute": 0.03857583749052298,
        "managed": 0.03857583749052298,
        "markers": 0.03857583749052298,
        "for": 0.11572751247156893,
        "idempotent": 0.03857583749052298,
        "patching": 0.03857583749052298,
        "docgen": 0.07715167498104596,
        "begin": 0.03857583749052298,
        "end": 0.03857583749052298,
        "mvp": 0.4629100498862757,
        "8": 0.03857583749052298,
        "git": 0.03857583749052298,
        "integration": 0.07715167498104596,
        "diff": 0.03857583749052298,
        "detection": 0.03857583749052298,
        "map": 0.03857583749052298,
        "changed": 0.03857583749052298,
        "files": 0.03857583749052298,
        "impacted": 0.03857583749052298,
        "sections": 0.03857583749052298,
        "branch": 0.03857583749052298,
        "pr": 0.07715167498104596,
        "creation": 0.03857583749052298,
        "summary": 0.03857583749052298,
        "of": 0.03857583749052298,
        "readme": 0.11572751247156893,
        "deltas": 0.03857583749052298,
        "commit": 0.03857583749052298,
        "mode": 0.03857583749052298,
        "init": 0.03857583749052298,
        "or": 0.03857583749052298,
        "small": 0.03857583749052298,
        "changes": 0.07715167498104596,
        "configurable": 0.03857583749052298,
        "prevent": 0.03857583749052298,
        "loops": 0.03857583749052298,
        "on": 0.07715167498104596,
        "only": 0.07715167498104596,
        "9": 0.03857583749052298,
        "configuration": 0.03857583749052298,
        "parse": 0.03857583749052298,
        "yml": 0.03857583749052298,
        "llm": 0.03857583749052298,
        "style": 0.03857583749052298,
        "analyzers": 0.03857583749052298,
        "publish": 0.03857583749052298,
        "path": 0.03857583749052298,
        "exclusions": 0.03857583749052298,
        "watched_globs": 0.03857583749052298,
        "ci": 0.11572751247156893,
        "triggers": 0.03857583749052298,
        "per": 0.07715167498104596,
        "section": 0.03857583749052298,
        "off": 0.03857583749052298,
        "toggles": 0.03857583749052298,
        "and": 0.11572751247156893,
        "titles": 0.03857583749052298,
        "10": 0.03857583749052298,
        "github": 0.03857583749052298,
        "actions": 0.03857583749052298,
        "example": 0.03857583749052298,
        "workflow": 0.03857583749052298,
        "gitlab": 0.03857583749052298,
        "bitbucket": 0.03857583749052298,
        "pipelines": 0.03857583749052298,
        "samples": 0.03857583749052298,
        "labeling": 0.03857583749052298,
        "docs": 0.03857583749052298,
        "auto": 0.03857583749052298,
        "update": 0.03857583749052298,
        "behavior": 0.03857583749052298,
        "11": 0.03857583749052298,
        "security": 0.03857583749052298,
        "privacy": 0.03857583749052298,
        "local": 0.03857583749052298,
        "models": 0.03857583749052298,
        "never": 0.03857583749052298,
        "exfiltrate": 0.03857583749052298,
        "code": 0.03857583749052298,
        "respect": 0.03857583749052298,
        "gitignore": 0.03857583749052298,
        "exclude": 0.03857583749052298,
        "large": 0.03857583749052298,
        "binaries": 0.03857583749052298,
        "secrets": 0.03857583749052298,
        "optional": 0.03857583749052298,
        "simple": 0.03857583749052298,
        "secret": 0.03857583749052298,
        "scanner": 0.03857583749052298,
        "gate": 0.03857583749052298,
        "12": 0.03857583749052298,
        "multi": 0.03857583749052298,
        "language": 0.03857583749052298,
        "project": 0.03857583749052298,
        "types": 0.03857583749052298,
        "tier": 0.07715167498104596,
        "1": 0.03857583749052298,
        "python": 0.03857583749052298,
        "poetry": 0.03857583749052298,
        "setuptools": 0.03857583749052298,
        "java": 0.03857583749052298,
        "maven": 0.03857583749052298,
        "gradle": 0.03857583749052298,
        "spring": 0.03857583749052298,
        "boot": 0.03857583749052298,
        "node": 0.03857583749052298,
        "js": 0.03857583749052298,
        "npm": 0.03857583749052298,
        "pnpm": 0.03857583749052298,
        "express": 0.03857583749052298,
        "2": 0.03857583749052298,
        "go": 0.03857583749052298,
        "rust": 0.03857583749052298,
        "ruby": 0.03857583749052298,
        "php": 0.03857583749052298,
        "stretch": 0.03857583749052298,
        "framework": 0.03857583749052298,
        "aware": 0.03857583749052298,
        "quickstart": 0.03857583749052298,
        "commands": 0.03857583749052298,
        "system": 0.03857583749052298,
        "13": 0.03857583749052298,
        "quality": 0.03857583749052298,
        "gates": 0.03857583749052298,
        "evaluation": 0.03857583749052298,
        "command": 0.03857583749052298,
        "validation": 0.03857583749052298,
        "existence": 0.03857583749052298,
        "checks": 0.07715167498104596,
        "no": 0.03857583749052298,
        "hallucination": 0.03857583749052298,
        "reject": 0.03857583749052298,
        "facts": 0.03857583749052298,
        "not": 0.03857583749052298
      },
      "text": "[x] Badges (build, coverage, license) with safe defaults **[NEXT]** - [x] Link validator (relative/absolute) **[NEXT]** - [x] Managed markers for idempotent patching (`<!-- docgen:begin:end -->`) **[MVP]** ## 8) Git Integration - [x] Diff detection (map changed files \u2192 impacted sections) **[MVP]** - [x] Branch + PR creation with summary of README deltas **[MVP]** - [x] Commit mode for init or small changes (configurable) **[NEXT]** - [x] Prevent loops on README\u2011only changes **[MVP]** ## 9) Configuration - [x] Parse `.docgen.yml` (LLM, readme style, analyzers, publish) **[MVP]** - [x] Path exclusions & `watched_globs` for CI triggers **[MVP]** - [ ] Per-section on/off toggles and titles **[NEXT]** ## 10) CI Integration - [x] GitHub Actions example workflow **[MVP]** - [ ] GitLab CI and Bitbucket Pipelines samples **[NEXT]** - [x] Labeling (`docs:auto`) and PR update behavior **[NEXT]** ## 11) Security & Privacy - [x] Local-only models; never exfiltrate code **[MVP]** - [ ] Respect `.gitignore`; exclude large binaries/secrets **[MVP]** - [ ] Optional simple secret scanner gate **[NEXT]** ## 12) Multi\u2011Language & Project Types - [x] Tier\u20111: Python (Poetry/Setuptools), Java (Maven/Gradle/Spring Boot), Node.js (npm/pnpm/Express/Next) **[MVP]** - [ ] Tier\u20112: Go, Rust, Ruby, PHP **[STRETCH]** - [x] Framework\u2011aware quickstart commands per build system **[MVP]** ## 13) Quality Gates & Evaluation - [x] Command validation (existence checks) **[MVP]** - [x] No-hallucination checks: reject facts not",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_checklist.md#3",
      "vector": {
        "npm": 0.052999894000318,
        "pnpm": 0.052999894000318,
        "express": 0.052999894000318,
        "next": 0.211999576001272,
        "mvp": 0.476999046002862,
        "tier": 0.052999894000318,
        "2": 0.052999894000318,
        "go": 0.052999894000318,
        "rust": 0.052999894000318,
        "ruby": 0.052999894000318,
        "php": 0.052999894000318,
        "stretch": 0.052999894000318,
        "x": 0.5829988340034981,
        "framework": 0.052999894000318,
        "aware": 0.052999894000318,
        "quickstart": 0.052999894000318,
        "commands": 0.052999894000318,
        "per": 0.105999788000636,
        "build": 0.052999894000318,
        "system": 0.052999894000318,
        "13": 0.052999894000318,
        "quality": 0.052999894000318,
        "gates": 0.052999894000318,
        "evaluation": 0.052999894000318,
        "command": 0.052999894000318,
        "validation": 0.052999894000318,
        "existence": 0.052999894000318,
        "checks": 0.105999788000636,
        "no": 0.052999894000318,
        "hallucination": 0.052999894000318,
        "reject": 0.052999894000318,
        "facts": 0.052999894000318,
        "not": 0.052999894000318,
        "in": 0.052999894000318,
        "signals": 0.052999894000318,
        "rag": 0.105999788000636,
        "readme": 0.105999788000636,
        "scorecard": 0.052999894000318,
        "coverage": 0.052999894000318,
        "buildability": 0.052999894000318,
        "link": 0.052999894000318,
        "validity": 0.052999894000318,
        "diff": 0.052999894000318,
        "alignment": 0.052999894000318,
        "lint": 0.105999788000636,
        "14": 0.052999894000318,
        "performance": 0.052999894000318,
        "caching": 0.052999894000318,
        "persist": 0.052999894000318,
        "analyzer": 0.105999788000636,
        "outputs": 0.052999894000318,
        "embeddings": 0.052999894000318,
        "under": 0.052999894000318,
        "docgen": 0.052999894000318,
        "incremental": 0.052999894000318,
        "refresh": 0.052999894000318,
        "changed": 0.052999894000318,
        "files": 0.052999894000318,
        "only": 0.052999894000318,
        "15": 0.052999894000318,
        "error": 0.052999894000318,
        "handling": 0.052999894000318,
        "ux": 0.052999894000318,
        "fail": 0.052999894000318,
        "safe": 0.052999894000318,
        "stub": 0.052999894000318,
        "generation": 0.052999894000318,
        "when": 0.052999894000318,
        "evidence": 0.052999894000318,
        "is": 0.052999894000318,
        "insufficient": 0.052999894000318,
        "clear": 0.052999894000318,
        "run": 0.052999894000318,
        "logs": 0.052999894000318,
        "pr": 0.052999894000318,
        "body": 0.052999894000318,
        "with": 0.052999894000318,
        "rationale": 0.052999894000318,
        "sections": 0.052999894000318,
        "updated": 0.052999894000318,
        "because": 0.052999894000318,
        "helpful": 0.052999894000318,
        "cli": 0.052999894000318,
        "errors": 0.052999894000318,
        "and": 0.105999788000636,
        "verbose": 0.052999894000318,
        "flag": 0.052999894000318,
        "works": 0.052999894000318,
        "pre": 0.052999894000318,
        "post": 0.052999894000318,
        "subcommand": 0.052999894000318,
        "16": 0.052999894000318,
        "extensibility": 0.052999894000318,
        "abc": 0.052999894000318,
        "plugin": 0.052999894000318,
        "discovery": 0.052999894000318,
        "template": 0.052999894000318,
        "packs": 0.052999894000318,
        "org": 0.052999894000318,
        "style": 0.105999788000636,
        "definition": 0.052999894000318,
        "of": 0.052999894000318,
        "done": 0.052999894000318,
        "section": 0.052999894000318,
        "passing": 0.052999894000318,
        "unit": 0.052999894000318,
        "integration": 0.052999894000318,
        "tests": 0.052999894000318,
        "for": 0.052999894000318,
        "core": 0.052999894000318,
        "logic": 0.052999894000318,
        "golden": 0.052999894000318,
        "regression": 0.052999894000318,
        "test": 0.052999894000318,
        "s": 0.052999894000318,
        "meets": 0.052999894000318,
        "requirements": 0.052999894000318
      },
      "text": "(npm/pnpm/Express/Next) **[MVP]** - [ ] Tier\u20112: Go, Rust, Ruby, PHP **[STRETCH]** - [x] Framework\u2011aware quickstart commands per build system **[MVP]** ## 13) Quality Gates & Evaluation - [x] Command validation (existence checks) **[MVP]** - [x] No-hallucination checks: reject facts not in signals/RAG **[MVP]** - [x] README scorecard (coverage, buildability, link validity, diff alignment, lint) **[NEXT]** ## 14) Performance & Caching - [x] Persist analyzer outputs & embeddings under `.docgen/` **[MVP]** - [x] Incremental RAG refresh (changed files only) **[NEXT]** ## 15) Error Handling & UX - [x] Fail-safe stub generation when evidence is insufficient **[MVP]** - [x] Clear run logs + PR body with rationale (\u201csections updated because\u2026\u201d) **[MVP]** - [x] Helpful CLI errors and `--verbose` flag (works pre/post subcommand) **[MVP]** ## 16) Extensibility - [x] Analyzer ABC and plugin discovery **[MVP]** - [x] Template packs (org\u2011style) **[NEXT]** --- ### Definition of Done (per section) - [ ] Passing unit & integration tests for core logic - [ ] Golden README regression test(s) - [ ] Meets lint/style requirements",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_order.md#0",
      "vector": {
        "docgen": 0.25491557319725244,
        "development": 0.042485928866208736,
        "roadmap": 0.042485928866208736,
        "phase": 0.12745778659862622,
        "0": 0.042485928866208736,
        "bootstrap": 0.042485928866208736,
        "the": 0.042485928866208736,
        "skeleton": 0.08497185773241747,
        "1": 0.3398874309296699,
        "project": 0.042485928866208736,
        "cli": 0.042485928866208736,
        "config": 0.08497185773241747,
        "loader": 0.042485928866208736,
        "yml": 0.042485928866208736,
        "models": 0.042485928866208736,
        "done": 0.3823733597958786,
        "covers": 0.3823733597958786,
        "commands": 0.042485928866208736,
        "scaffolding": 0.042485928866208736,
        "9": 0.042485928866208736,
        "parse": 0.042485928866208736,
        "16": 0.08497185773241747,
        "analyzer": 0.08497185773241747,
        "abc": 0.08497185773241747,
        "2": 0.2124296443310437,
        "plugin": 0.08497185773241747,
        "discovery": 0.08497185773241747,
        "init": 0.16994371546483494,
        "happy": 0.042485928866208736,
        "path": 0.042485928866208736,
        "single": 0.042485928866208736,
        "repo": 0.12745778659862622,
        "local": 0.08497185773241747,
        "scanner": 0.042485928866208736,
        "manifest": 0.08497185773241747,
        "roles": 0.042485928866208736,
        "hashing": 0.042485928866208736,
        "ignores": 0.08497185773241747,
        "walk": 0.042485928866208736,
        "fs": 0.042485928866208736,
        "cache": 0.042485928866208736,
        "tier": 0.042485928866208736,
        "analyzers": 0.12745778659862622,
        "python": 0.042485928866208736,
        "java": 0.042485928866208736,
        "node": 0.042485928866208736,
        "build": 0.08497185773241747,
        "dependency": 0.042485928866208736,
        "3": 0.08497185773241747,
        "language": 0.042485928866208736,
        "deps": 0.042485928866208736,
        "templates": 0.12745778659862622,
        "prompt": 0.12745778659862622,
        "builder": 0.08497185773241747,
        "section": 0.12745778659862622,
        "by": 0.042485928866208736,
        "guardrailed": 0.042485928866208736,
        "system": 0.042485928866208736,
        "partial": 0.042485928866208736,
        "guardrails": 0.08497185773241747,
        "unused": 0.042485928866208736,
        "5": 0.08497185773241747,
        "jinja2": 0.042485928866208736,
        "token": 0.042485928866208736,
        "budget": 0.042485928866208736,
        "4": 0.042485928866208736,
        "llm": 0.042485928866208736,
        "runner": 0.042485928866208736,
        "ollama": 0.08497185773241747,
        "adapter": 0.042485928866208736,
        "6": 0.08497185773241747,
        "post": 0.042485928866208736,
        "processor": 0.042485928866208736,
        "managed": 0.042485928866208736,
        "markers": 0.12745778659862622,
        "toc": 0.08497185773241747,
        "markdown": 0.042485928866208736,
        "lint": 0.08497185773241747,
        "7": 0.042485928866208736,
        "git": 0.08497185773241747,
        "publisher": 0.08497185773241747,
        "commit": 0.08497185773241747,
        "mode": 0.08497185773241747,
        "for": 0.08497185773241747,
        "only": 0.042485928866208736,
        "8": 0.08497185773241747,
        "end": 0.08497185773241747,
        "to": 0.042485928866208736,
        "milestone": 0.042485928866208736,
        "generates": 0.042485928866208736,
        "a": 0.08497185773241747,
        "clean": 0.042485928866208736,
        "readme": 0.042485928866208736,
        "with": 0.042485928866208736,
        "no": 0.042485928866208736,
        "docs": 0.042485928866208736,
        "update": 0.08497185773241747,
        "on": 0.042485928866208736,
        "change": 0.08497185773241747,
        "pr": 0.042485928866208736,
        "workflow": 0.042485928866208736,
        "diff": 0.08497185773241747,
        "detection": 0.042485928866208736,
        "mapping": 0.08497185773241747,
        "patching": 0.042485928866208736,
        "inside": 0.042485928866208736,
        "prevent": 0.042485928866208736,
        "loops": 0.042485928866208736
      },
      "text": "# DocGen Development Roadmap ## Phase 0 \u2014 Bootstrap the skeleton 1. **Project skeleton + CLI (`docgen`) + config loader (`.docgen.yml`) + models** \u2014 \u2714 Done * Covers: 1 (commands scaffolding), 9 (parse config), 16 (Analyzer ABC) 2. **Analyzer plugin ABC & discovery** \u2014 \u2714 Done * Covers: 16 (plugin discovery) ## Phase 1 \u2014 \"Init\" happy-path (single repo, local) 1. **Repo scanner & manifest (roles, hashing, ignores)** \u2014 \u2714 Done * Covers: 2 (walk FS, manifest, cache, ignores) 2. **Tier-1 analyzers (Python, Java, Node) + build analyzers + dependency analyzers** \u2014 \u2714 Done * Covers: 3 (language/build/deps) 3. **Templates + prompt builder (section-by-section) + guardrailed system prompt** \u2014 \u25d0 Partial (templates/prompt builder done; guardrails unused) * Covers: 5 (Jinja2 templates, guardrails, token budget) 4. **Local LLM runner (Ollama adapter)** \u2014 \u2714 Done * Covers: 6 (Ollama) 5. **Post-processor: managed markers, ToC, markdown lint** \u2014 \u2714 Done * Covers: 7 (markers, ToC, lint) 6. **Git publisher: commit mode (for init only)** \u2014 \u2714 Done * Covers: 8 (commit mode), 1 (`docgen init` end-to-end) \u2705 **Milestone**: `docgen init` generates a clean README for a repo with no docs. ## Phase 2 \u2014 Update-on-change (PR workflow) 1. **Diff detection + change\u2192section mapping + patching inside markers** \u2014 \u2714 Done * Covers: 8 (diff mapping, prevent loops), 1 (`docgen update`) 2. **Git publisher:",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/feature_order.md#1",
      "vector": {
        "readme": 0.09035079029052513,
        "for": 0.045175395145262566,
        "a": 0.09035079029052513,
        "repo": 0.09035079029052513,
        "with": 0.1355261854357877,
        "no": 0.18070158058105026,
        "docs": 0.09035079029052513,
        "phase": 0.22587697572631282,
        "2": 0.22587697572631282,
        "update": 0.18070158058105026,
        "on": 0.045175395145262566,
        "change": 0.09035079029052513,
        "pr": 0.22587697572631282,
        "workflow": 0.045175395145262566,
        "1": 0.22587697572631282,
        "diff": 0.09035079029052513,
        "detection": 0.045175395145262566,
        "section": 0.1355261854357877,
        "mapping": 0.09035079029052513,
        "patching": 0.045175395145262566,
        "inside": 0.045175395145262566,
        "markers": 0.045175395145262566,
        "done": 0.36140316116210053,
        "covers": 0.36140316116210053,
        "8": 0.09035079029052513,
        "prevent": 0.045175395145262566,
        "loops": 0.045175395145262566,
        "docgen": 0.1355261854357877,
        "git": 0.045175395145262566,
        "publisher": 0.045175395145262566,
        "branch": 0.09035079029052513,
        "delta": 0.045175395145262566,
        "summary": 0.045175395145262566,
        "10": 0.09035079029052513,
        "labeling": 0.045175395145262566,
        "later": 0.045175395145262566,
        "milestone": 0.09035079029052513,
        "opens": 0.045175395145262566,
        "updating": 0.045175395145262566,
        "only": 0.09035079029052513,
        "impacted": 0.045175395145262566,
        "sections": 0.045175395145262566,
        "3": 0.045175395145262566,
        "minimal": 0.045175395145262566,
        "rag": 0.09035079029052513,
        "accuracy": 0.045175395145262566,
        "lite": 0.045175395145262566,
        "embed": 0.045175395145262566,
        "top": 0.045175395145262566,
        "n": 0.045175395145262566,
        "source": 0.045175395145262566,
        "headers": 0.045175395145262566,
        "scoped": 0.045175395145262566,
        "retrieval": 0.09035079029052513,
        "4": 0.09035079029052513,
        "local": 0.09035079029052513,
        "embedding": 0.045175395145262566,
        "index": 0.045175395145262566,
        "sources": 0.045175395145262566,
        "per": 0.045175395145262566,
        "hallucination": 0.1355261854357877,
        "command": 0.1355261854357877,
        "existence": 0.045175395145262566,
        "checks": 0.045175395145262566,
        "partial": 0.045175395145262566,
        "validation": 0.09035079029052513,
        "guard": 0.045175395145262566,
        "not": 0.045175395145262566,
        "implemented": 0.045175395145262566,
        "13": 0.045175395145262566,
        "outputs": 0.045175395145262566,
        "grounded": 0.045175395145262566,
        "in": 0.045175395145262566,
        "facts": 0.045175395145262566,
        "targeted": 0.045175395145262566,
        "context": 0.045175395145262566,
        "hardening": 0.045175395145262566,
        "dx": 0.045175395145262566,
        "error": 0.045175395145262566,
        "handling": 0.045175395145262566,
        "clear": 0.045175395145262566,
        "logs": 0.09035079029052513,
        "verbose": 0.045175395145262566,
        "fail": 0.09035079029052513,
        "safe": 0.09035079029052513,
        "stubs": 0.045175395145262566,
        "15": 0.045175395145262566,
        "cli": 0.045175395145262566,
        "ux": 0.045175395145262566,
        "security": 0.045175395145262566,
        "gitignore": 0.045175395145262566,
        "respect": 0.045175395145262566,
        "path": 0.045175395145262566,
        "excludes": 0.09035079029052513,
        "enforcement": 0.045175395145262566,
        "11": 0.045175395145262566,
        "privacy": 0.045175395145262566,
        "5": 0.09035079029052513,
        "ci": 0.045175395145262566,
        "integration": 0.045175395145262566,
        "config": 0.09035079029052513,
        "polish": 0.045175395145262566,
        "github": 0.045175395145262566,
        "actions": 0.09035079029052513,
        "sample": 0.045175395145262566,
        "push": 0.045175395145262566,
        "trigger": 0.045175395145262566,
        "calling": 0.045175395145262566,
        "gh": 0.045175395145262566,
        "refinements": 0.045175395145262566,
        "watched": 0.045175395145262566,
        "globs": 0.045175395145262566,
        "style": 0.09035079029052513,
        "preset": 0.045175395145262566,
        "concise": 0.045175395145262566,
        "comprehensive": 0.045175395145262566,
        "9": 0.045175395145262566,
        "watched_globs": 0.045175395145262566,
        "presets": 0.045175395145262566,
        "6": 0.045175395145262566,
        "multi": 0.045175395145262566,
        "language": 0.045175395145262566,
        "breadth": 0.045175395145262566
      },
      "text": "README for a repo with no docs. ## Phase 2 \u2014 Update-on-change (PR workflow) 1. **Diff detection + change\u2192section mapping + patching inside markers** \u2014 \u2714 Done * Covers: 8 (diff mapping, prevent loops), 1 (`docgen update`) 2. **Git publisher: branch + PR with delta summary** \u2014 \u2714 Done * Covers: 8 (branch/PR), 10 (labeling later) \u2705 **Milestone**: `docgen update` opens a PR updating only impacted sections. ## Phase 3 \u2014 Minimal RAG & accuracy 1. **RAG Lite: embed README/docs/top N source headers; section-scoped retrieval** \u2014 \u2714 Done * Covers: 4 (local embedding, index sources, per-section retrieval) 2. **No-hallucination & command existence checks** \u2014 \u25d0 Partial (command validation done; no-hallucination guard not implemented) * Covers: 13 (command validation, no-hallucination) \u2705 **Milestone**: outputs grounded in repo facts with targeted context. ## Phase 4 \u2014 Hardening & DX 1. **Error handling, clear logs, `--verbose`, fail-safe stubs** \u2014 \u2714 Done * Covers: 15 (fail-safe, logs, CLI UX) 2. **Security: .gitignore respect, path excludes, local-only enforcement** \u2014 \u2714 Done * Covers: 11 (privacy, excludes) ## Phase 5 \u2014 CI integration & config polish 1. **GitHub Actions sample (push/PR trigger calling `docgen update`)** \u2014 \u2714 Done * Covers: 10 (GH Actions) 2. **Config refinements: watched globs, style preset (concise/comprehensive)** \u2014 \u2714 Done * Covers: 9 (watched_globs), 5 (style presets) ## Phase 6 \u2014 Multi-language breadth",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/feature_order.md#2",
      "vector": {
        "github": 0.046274481338274755,
        "actions": 0.09254896267654951,
        "sample": 0.046274481338274755,
        "push": 0.046274481338274755,
        "pr": 0.18509792535309902,
        "trigger": 0.046274481338274755,
        "calling": 0.046274481338274755,
        "docgen": 0.13882344401482424,
        "update": 0.046274481338274755,
        "done": 0.32392136936792326,
        "covers": 0.41647033204447276,
        "10": 0.09254896267654951,
        "gh": 0.046274481338274755,
        "2": 0.23137240669137377,
        "config": 0.09254896267654951,
        "refinements": 0.046274481338274755,
        "watched": 0.046274481338274755,
        "globs": 0.046274481338274755,
        "style": 0.09254896267654951,
        "preset": 0.046274481338274755,
        "concise": 0.046274481338274755,
        "comprehensive": 0.046274481338274755,
        "9": 0.046274481338274755,
        "watched_globs": 0.046274481338274755,
        "5": 0.09254896267654951,
        "presets": 0.046274481338274755,
        "phase": 0.13882344401482424,
        "6": 0.09254896267654951,
        "multi": 0.046274481338274755,
        "language": 0.046274481338274755,
        "breadth": 0.046274481338274755,
        "framework": 0.13882344401482424,
        "smarts": 0.046274481338274755,
        "1": 0.23137240669137377,
        "entrypoint": 0.046274481338274755,
        "detection": 0.046274481338274755,
        "main": 0.046274481338274755,
        "spring": 0.046274481338274755,
        "boot": 0.046274481338274755,
        "fastapi": 0.09254896267654951,
        "aware": 0.09254896267654951,
        "quick": 0.046274481338274755,
        "start": 0.046274481338274755,
        "entrypoints": 0.046274481338274755,
        "12": 0.046274481338274755,
        "commands": 0.046274481338274755,
        "pattern": 0.09254896267654951,
        "analyzers": 0.09254896267654951,
        "docker": 0.046274481338274755,
        "k8s": 0.046274481338274755,
        "ci": 0.046274481338274755,
        "monorepo": 0.046274481338274755,
        "layout": 0.046274481338274755,
        "3": 0.13882344401482424,
        "7": 0.13882344401482424,
        "quality": 0.046274481338274755,
        "gates": 0.046274481338274755,
        "performance": 0.046274481338274755,
        "readme": 0.09254896267654951,
        "scorecard": 0.13882344401482424,
        "link": 0.09254896267654951,
        "validator": 0.09254896267654951,
        "badges": 0.09254896267654951,
        "13": 0.046274481338274755,
        "artifact": 0.09254896267654951,
        "embedding": 0.046274481338274755,
        "caching": 0.046274481338274755,
        "in": 0.046274481338274755,
        "incremental": 0.09254896267654951,
        "rag": 0.09254896267654951,
        "refresh": 0.09254896267654951,
        "partial": 0.046274481338274755,
        "embeddings": 0.046274481338274755,
        "cached": 0.046274481338274755,
        "no": 0.046274481338274755,
        "analyzer": 0.046274481338274755,
        "store": 0.046274481338274755,
        "14": 0.046274481338274755,
        "persist": 0.046274481338274755,
        "outputs": 0.046274481338274755,
        "8": 0.046274481338274755,
        "nice": 0.046274481338274755,
        "to": 0.09254896267654951,
        "have": 0.046274481338274755,
        "stretch": 0.046274481338274755,
        "dry": 0.09254896267654951,
        "run": 0.09254896267654951,
        "mode": 0.13882344401482424,
        "labeling": 0.09254896267654951,
        "updates": 0.09254896267654951,
        "commit": 0.046274481338274755,
        "policy": 0.046274481338274755,
        "tuning": 0.046274481338274755,
        "template": 0.13882344401482424,
        "overrides": 0.046274481338274755,
        "docs": 0.046274481338274755,
        "templates": 0.046274481338274755,
        "j2": 0.046274481338274755,
        "org": 0.046274481338274755,
        "packs": 0.09254896267654951,
        "override": 0.046274481338274755,
        "16": 0.046274481338274755,
        "service": 0.09254896267654951,
        "llama": 0.09254896267654951,
        "cpp": 0.09254896267654951,
        "adapter": 0.046274481338274755,
        "tree": 0.09254896267654951,
        "sitter": 0.09254896267654951,
        "extraction": 0.046274481338274755,
        "not": 0.046274481338274755,
        "started": 0.046274481338274755,
        "why": 0.046274481338274755,
        "this": 0.046274481338274755,
        "order": 0.046274481338274755,
        "fastest": 0.046274481338274755,
        "path": 0.046274481338274755,
        "value": 0.046274481338274755,
        "get": 0.046274481338274755,
        "init": 0.046274481338274755,
        "producing": 0.046274481338274755,
        "a": 0.046274481338274755,
        "solid": 0.046274481338274755,
        "before": 0.046274481338274755,
        "adding": 0.046274481338274755,
        "diffing": 0.046274481338274755
      },
      "text": "**GitHub Actions sample (push/PR trigger calling `docgen update`)** \u2014 \u2714 Done * Covers: 10 (GH Actions) 2. **Config refinements: watched globs, style preset (concise/comprehensive)** \u2014 \u2714 Done * Covers: 9 (watched_globs), 5 (style presets) ## Phase 6 \u2014 Multi-language breadth & framework smarts 1. **Entrypoint detection (main, Spring Boot, FastAPI) + framework-aware Quick Start** \u2014 \u2714 Done * Covers: 2 (entrypoints), 12 (framework-aware commands) 2. **Pattern analyzers (Docker/K8s, CI config, monorepo layout)** \u2014 \u2714 Done * Covers: 3 (pattern analyzers) ## Phase 7 \u2014 Quality gates & performance 1. **README scorecard + link validator + badges** \u2014 \u2714 Done * Covers: 13 (scorecard), 7 (link validator), 7 (badges) 2. **Artifact & embedding caching in `.docgen/` + incremental RAG refresh** \u2014 \u25d0 Partial (embeddings/scorecard cached; no analyzer artifact store) * Covers: 14 (persist outputs, incremental refresh) ## Phase 8 \u2014 \"Nice to have\" & stretch 1. **Dry-run mode, PR labeling/updates, commit/PR policy tuning** \u2014 \u2714 Done * Covers: 1 (dry-run), 10 (labeling/PR updates) 2. **Template overrides (`docs/templates/*.j2`) & org template packs** \u2014 \u2714 Done * Covers: 5 (override), 16 (template packs) 3. **Service mode (FastAPI), llama.cpp adapter, tree-sitter extraction** \u2014 \u2610 Not started * Covers: 1 (service mode), 6 (llama.cpp), 3 (tree-sitter) ## Why this order * **Fastest path to value**: get `docgen init` producing a solid README before adding diffing/RAG.",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/feature_order.md#3",
      "vector": {
        "3": 0.18333969940564226,
        "service": 0.18333969940564226,
        "mode": 0.18333969940564226,
        "fastapi": 0.09166984970282113,
        "llama": 0.18333969940564226,
        "cpp": 0.18333969940564226,
        "adapter": 0.09166984970282113,
        "tree": 0.18333969940564226,
        "sitter": 0.18333969940564226,
        "extraction": 0.09166984970282113,
        "not": 0.09166984970282113,
        "started": 0.09166984970282113,
        "covers": 0.09166984970282113,
        "1": 0.09166984970282113,
        "6": 0.09166984970282113,
        "why": 0.09166984970282113,
        "this": 0.09166984970282113,
        "order": 0.09166984970282113,
        "fastest": 0.09166984970282113,
        "path": 0.09166984970282113,
        "to": 0.18333969940564226,
        "value": 0.09166984970282113,
        "get": 0.09166984970282113,
        "docgen": 0.09166984970282113,
        "init": 0.09166984970282113,
        "producing": 0.09166984970282113,
        "a": 0.09166984970282113,
        "solid": 0.09166984970282113,
        "readme": 0.09166984970282113,
        "before": 0.09166984970282113,
        "adding": 0.09166984970282113,
        "diffing": 0.09166984970282113,
        "rag": 0.18333969940564226,
        "contain": 0.09166984970282113,
        "risk": 0.09166984970282113,
        "early": 0.09166984970282113,
        "section": 0.09166984970282113,
        "markers": 0.09166984970282113,
        "lint": 0.09166984970282113,
        "and": 0.2750095491084634,
        "commit": 0.09166984970282113,
        "publishing": 0.09166984970282113,
        "ensure": 0.09166984970282113,
        "safe": 0.09166984970282113,
        "idempotent": 0.09166984970282113,
        "edits": 0.09166984970282113,
        "accuracy": 0.09166984970282113,
        "next": 0.09166984970282113,
        "add": 0.09166984970282113,
        "validation": 0.09166984970282113,
        "avoid": 0.09166984970282113,
        "hallucinations": 0.09166984970282113,
        "once": 0.09166984970282113,
        "the": 0.18333969940564226,
        "pipeline": 0.09166984970282113,
        "works": 0.09166984970282113,
        "scale": 0.09166984970282113,
        "breadth": 0.09166984970282113,
        "later": 0.09166984970282113,
        "only": 0.09166984970282113,
        "after": 0.09166984970282113,
        "core": 0.09166984970282113,
        "loop": 0.09166984970282113,
        "is": 0.09166984970282113,
        "robust": 0.09166984970282113,
        "do": 0.09166984970282113,
        "we": 0.09166984970282113,
        "widen": 0.09166984970282113,
        "language": 0.09166984970282113,
        "framework": 0.09166984970282113,
        "coverage": 0.09166984970282113,
        "polish": 0.09166984970282113,
        "last": 0.09166984970282113,
        "ci": 0.09166984970282113,
        "caching": 0.09166984970282113,
        "quality": 0.09166984970282113,
        "gates": 0.09166984970282113,
        "refine": 0.09166984970282113,
        "dev": 0.09166984970282113,
        "experience": 0.09166984970282113,
        "performance": 0.09166984970282113
      },
      "text": "3. **Service mode (FastAPI), llama.cpp adapter, tree-sitter extraction** \u2014 \u2610 Not started * Covers: 1 (service mode), 6 (llama.cpp), 3 (tree-sitter) ## Why this order * **Fastest path to value**: get `docgen init` producing a solid README before adding diffing/RAG. * **Contain risk early**: section markers, lint, and commit publishing ensure safe/idempotent edits. * **Accuracy next**: add RAG + validation to avoid hallucinations once the pipeline works. * **Scale breadth later**: only after the core loop is robust do we widen language/framework coverage. * **Polish last**: CI, caching, and quality gates refine dev experience and performance.",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/jira_stories.md#0",
      "vector": {
        "docgen": 0.15037641213512565,
        "jira": 0.05012547071170855,
        "stories": 0.1002509414234171,
        "remaining": 0.05012547071170855,
        "are": 0.1002509414234171,
        "ordered": 0.05012547071170855,
        "by": 0.1002509414234171,
        "the": 0.25062735355854276,
        "recommended": 0.05012547071170855,
        "completion": 0.05012547071170855,
        "sequence": 0.05012547071170855,
        "and": 0.3508782949819598,
        "formatted": 0.05012547071170855,
        "per": 0.05012547071170855,
        "prompt": 0.05012547071170855,
        "template": 0.05012547071170855,
        "guidance": 0.05012547071170855,
        "all": 0.05012547071170855,
        "prior": 0.05012547071170855,
        "milestones": 0.05012547071170855,
        "complete": 0.05012547071170855,
        "only": 0.05012547071170855,
        "work": 0.05012547071170855,
        "listed": 0.05012547071170855,
        "below": 0.05012547071170855,
        "remains": 0.05012547071170855,
        "story": 0.1002509414234171,
        "s": 0.15037641213512565,
        "032": 0.05012547071170855,
        "no": 0.05012547071170855,
        "hallucination": 0.05012547071170855,
        "validation": 0.15037641213512565,
        "status": 0.05012547071170855,
        "done": 0.05012547071170855,
        "text": 0.05012547071170855,
        "introduce": 0.05012547071170855,
        "a": 0.3508782949819598,
        "layer": 0.05012547071170855,
        "that": 0.1002509414234171,
        "rejects": 0.05012547071170855,
        "readme": 0.05012547071170855,
        "content": 0.15037641213512565,
        "containing": 0.05012547071170855,
        "facts": 0.05012547071170855,
        "not": 0.05012547071170855,
        "backed": 0.05012547071170855,
        "analyzer": 0.1002509414234171,
        "signals": 0.15037641213512565,
        "or": 0.2005018828468342,
        "rag": 0.1002509414234171,
        "context": 0.1002509414234171,
        "surfacing": 0.05012547071170855,
        "actionable": 0.05012547071170855,
        "errors": 0.05012547071170855,
        "to": 0.05012547071170855,
        "users": 0.05012547071170855,
        "dependencies": 0.05012547071170855,
        "already": 0.05012547071170855,
        "completed": 0.05012547071170855,
        "031": 0.05012547071170855,
        "guardrailed": 0.05012547071170855,
        "execution": 0.05012547071170855,
        "011": 0.05012547071170855,
        "contexts": 0.05012547071170855,
        "constraints": 0.05012547071170855,
        "must": 0.05012547071170855,
        "run": 0.05012547071170855,
        "after": 0.1002509414234171,
        "section": 0.1002509414234171,
        "rendering": 0.1002509414234171,
        "but": 0.05012547071170855,
        "before": 0.1002509414234171,
        "writing": 0.05012547071170855,
        "files": 0.05012547071170855,
        "publishing": 0.05012547071170855,
        "prs": 0.05012547071170855,
        "provide": 0.05012547071170855,
        "clear": 0.05012547071170855,
        "remediation": 0.05012547071170855,
        "logs": 0.1002509414234171,
        "referencing": 0.05012547071170855,
        "missing": 0.1002509414234171,
        "affected": 0.05012547071170855,
        "sections": 0.1002509414234171,
        "allow": 0.05012547071170855,
        "an": 0.05012547071170855,
        "opt": 0.05012547071170855,
        "out": 0.05012547071170855,
        "toggle": 0.05012547071170855,
        "in": 0.05012547071170855,
        "yml": 0.05012547071170855,
        "for": 0.05012547071170855,
        "edge": 0.05012547071170855,
        "cases": 0.05012547071170855,
        "non": 0.05012547071170855,
        "goals": 0.05012547071170855,
        "external": 0.05012547071170855,
        "api": 0.05012547071170855,
        "calls": 0.05012547071170855,
        "complex": 0.05012547071170855,
        "semantic": 0.05012547071170855,
        "similarity": 0.05012547071170855,
        "checks": 0.05012547071170855,
        "acceptance": 0.1002509414234171,
        "criteria": 0.05012547071170855,
        "validator": 0.1002509414234171,
        "cross": 0.05012547071170855,
        "references": 0.05012547071170855,
        "generated": 0.05012547071170855,
        "claims": 0.05012547071170855,
        "against": 0.05012547071170855,
        "available": 0.05012547071170855,
        "disallowed": 0.05012547071170855,
        "triggers": 0.05012547071170855,
        "failure": 0.05012547071170855,
        "path": 0.05012547071170855,
        "with": 0.1002509414234171,
        "stub": 0.05012547071170855,
        "fallback": 0.05012547071170855,
        "unit": 0.05012547071170855,
        "tests": 0.05012547071170855,
        "cover": 0.05012547071170855,
        "of": 0.1002509414234171,
        "grounded": 0.05012547071170855,
        "rejection": 0.05012547071170855,
        "injected": 0.05012547071170855,
        "hallucinations": 0.05012547071170855,
        "cli": 0.05012547071170855,
        "surfaces": 0.05012547071170855,
        "concise": 0.05012547071170855,
        "error": 0.05012547071170855,
        "messages": 0.05012547071170855,
        "verbose": 0.05012547071170855,
        "list": 0.05012547071170855,
        "offending": 0.05012547071170855,
        "evidence": 0.05012547071170855,
        "implementation": 0.1002509414234171,
        "plan": 0.05012547071170855,
        "create": 0.05012547071170855,
        "dedicated": 0.05012547071170855,
        "validators": 0.1002509414234171,
        "package": 0.05012547071170855,
        "lightweight": 0.05012547071170855,
        "validationissue": 0.05012547071170855,
        "dataclass": 0.05012547071170855,
        "protocol": 0.05012547071170855,
        "nohallucinationvalidator": 0.05012547071170855,
        "concrete": 0.05012547071170855,
        "orchestrator": 0.05012547071170855,
        "registers": 0.05012547071170855,
        "executes": 0.05012547071170855,
        "them": 0.05012547071170855,
        "post": 0.05012547071170855,
        "processing": 0.05012547071170855,
        "io": 0.05012547071170855,
        "add": 0.05012547071170855,
        "shared": 0.05012547071170855,
        "evidenceindex": 0.05012547071170855,
        "builder": 0.05012547071170855,
        "normalizes": 0.05012547071170855
      },
      "text": "# DocGen Jira Stories (Remaining) > Stories are ordered by the recommended completion sequence and formatted per the prompt template guidance. All prior milestones are complete; only the work listed below remains. --- ## Story S-032 \u2014 No-Hallucination Validation - **Status:** \u2714 Done - **Story Text:** Introduce a validation layer that rejects README content containing facts not backed by analyzer signals or RAG context, surfacing actionable errors to users. - **Dependencies already completed:** S-031 (guardrailed execution), S-011 (RAG contexts) - **Constraints:** - Validation must run after section rendering but before writing files or publishing PRs. - Provide clear remediation logs referencing the missing signals and affected sections. - Allow an opt-out toggle in `.docgen.yml` for edge cases. - **Non-Goals:** External API calls or complex semantic similarity checks. - **Acceptance Criteria:** - Validator cross-references generated claims against available signals/context; disallowed content triggers a failure path with stub fallback. - Unit tests cover acceptance of grounded content and rejection of injected hallucinations. - CLI surfaces concise error messages and `--verbose` logs list offending sections and missing evidence. - **Implementation Plan:** - Create a dedicated `docgen.validators` package with a lightweight `ValidationIssue` dataclass, a `Validator` protocol, and a `NoHallucinationValidator` concrete implementation. The orchestrator registers validators after section rendering and executes them before post-processing or IO. - Add a shared `EvidenceIndex` builder that normalizes analyzer",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#1",
      "vector": {
        "a": 0.37435064886346636,
        "dedicated": 0.04159451654038515,
        "docgen": 0.12478354962115545,
        "validators": 0.12478354962115545,
        "package": 0.04159451654038515,
        "with": 0.2495670992423109,
        "lightweight": 0.04159451654038515,
        "validationissue": 0.04159451654038515,
        "dataclass": 0.04159451654038515,
        "validator": 0.04159451654038515,
        "protocol": 0.04159451654038515,
        "and": 0.29116161578269606,
        "nohallucinationvalidator": 0.04159451654038515,
        "concrete": 0.04159451654038515,
        "implementation": 0.04159451654038515,
        "the": 0.4991341984846218,
        "orchestrator": 0.04159451654038515,
        "registers": 0.04159451654038515,
        "after": 0.04159451654038515,
        "section": 0.0831890330807703,
        "rendering": 0.04159451654038515,
        "executes": 0.04159451654038515,
        "them": 0.04159451654038515,
        "before": 0.04159451654038515,
        "post": 0.04159451654038515,
        "processing": 0.04159451654038515,
        "or": 0.04159451654038515,
        "io": 0.04159451654038515,
        "add": 0.0831890330807703,
        "shared": 0.04159451654038515,
        "evidenceindex": 0.04159451654038515,
        "builder": 0.0831890330807703,
        "that": 0.12478354962115545,
        "normalizes": 0.04159451654038515,
        "analyzer": 0.04159451654038515,
        "signals": 0.0831890330807703,
        "names": 0.04159451654038515,
        "kinds": 0.04159451654038515,
        "key": 0.04159451654038515,
        "attributes": 0.04159451654038515,
        "retrieved": 0.04159451654038515,
        "rag": 0.04159451654038515,
        "chunks": 0.04159451654038515,
        "path": 0.04159451654038515,
        "heading": 0.04159451654038515,
        "snippet": 0.04159451654038515,
        "persist": 0.04159451654038515,
        "normalized": 0.0831890330807703,
        "evidence": 0.0831890330807703,
        "in": 0.0831890330807703,
        "run": 0.04159451654038515,
        "context": 0.04159451654038515,
        "so": 0.04159451654038515,
        "verbose": 0.04159451654038515,
        "logging": 0.04159451654038515,
        "receive": 0.04159451654038515,
        "same": 0.04159451654038515,
        "data": 0.04159451654038515,
        "extend": 0.04159451654038515,
        "prompt": 0.04159451654038515,
        "to": 0.20797258270192576,
        "annotate": 0.04159451654038515,
        "each": 0.0831890330807703,
        "render": 0.04159451654038515,
        "sectionevidence": 0.04159451654038515,
        "metadata": 0.0831890330807703,
        "describing": 0.04159451654038515,
        "which": 0.04159451654038515,
        "chunk": 0.04159451654038515,
        "ids": 0.04159451654038515,
        "were": 0.04159451654038515,
        "injected": 0.04159451654038515,
        "this": 0.04159451654038515,
        "is": 0.04159451654038515,
        "stored": 0.04159451654038515,
        "alongside": 0.04159451654038515,
        "rendered": 0.0831890330807703,
        "markdown": 0.04159451654038515,
        "avoid": 0.04159451654038515,
        "re": 0.04159451654038515,
        "parsing": 0.04159451654038515,
        "prompts": 0.04159451654038515,
        "implement": 0.04159451654038515,
        "lexical": 0.04159451654038515,
        "matching": 0.04159451654038515,
        "heuristics": 0.04159451654038515,
        "split": 0.04159451654038515,
        "sections": 0.0831890330807703,
        "into": 0.04159451654038515,
        "sentences": 0.0831890330807703,
        "ignore": 0.04159451654038515,
        "boilerplate": 0.04159451654038515,
        "phrases": 0.04159451654038515,
        "require": 0.04159451654038515,
        "remaining": 0.04159451654038515,
        "sentence": 0.04159451654038515,
        "introduces": 0.04159451654038515,
        "facts": 0.04159451654038515,
        "numbers": 0.04159451654038515,
        "detected": 0.0831890330807703,
        "entities": 0.04159451654038515,
        "verbs": 0.04159451654038515,
        "direct": 0.04159451654038515,
        "objects": 0.04159451654038515,
        "have": 0.04159451654038515,
        "at": 0.04159451654038515,
        "least": 0.04159451654038515,
        "one": 0.04159451654038515,
        "overlapping": 0.04159451654038515,
        "n": 0.04159451654038515,
        "gram": 0.04159451654038515,
        "len": 0.04159451654038515,
        "3": 0.04159451654038515,
        "flag": 0.0831890330807703,
        "unmatched": 0.04159451654038515,
        "as": 0.04159451654038515,
        "hallucinations": 0.0831890330807703,
        "when": 0.04159451654038515,
        "are": 0.04159451654038515,
        "short": 0.04159451654038515,
        "circuit": 0.04159451654038515,
        "pipeline": 0.04159451654038515,
        "emit": 0.04159451654038515,
        "fail": 0.04159451654038515,
        "safe": 0.04159451654038515,
        "stubs": 0.04159451654038515,
        "for": 0.12478354962115545,
        "offending": 0.04159451654038515,
        "reuse": 0.04159451654038515,
        "existing": 0.04159451654038515,
        "stub": 0.04159451654038515,
        "generator": 0.04159451654038515,
        "bubble": 0.04159451654038515,
        "validationerror": 0.04159451654038515,
        "back": 0.04159451654038515,
        "cli": 0.0831890330807703,
        "actionable": 0.04159451654038515,
        "hints": 0.04159451654038515,
        "yml": 0.04159451654038515,
        "updates": 0.04159451654038515,
        "introduce": 0.04159451654038515,
        "validation": 0.0831890330807703,
        "map": 0.04159451654038515,
        "no_hallucination": 0.04159451654038515,
        "boolean": 0.04159451654038515,
        "default": 0.04159451654038515,
        "true": 0.04159451654038515,
        "respect": 0.04159451654038515,
        "repo": 0.04159451654038515,
        "level": 0.04159451654038515,
        "overrides": 0.04159451654038515,
        "while": 0.04159451654038515,
        "allowing": 0.04159451654038515,
        "docgen_validation_no_hallucination": 0.04159451654038515,
        "false": 0.04159451654038515,
        "disable": 0.04159451654038515,
        "check": 0.04159451654038515,
        "ci": 0.04159451654038515,
        "emergencies": 0.04159451654038515,
        "skip": 0.04159451654038515,
        "init": 0.04159451654038515,
        "update": 0.04159451654038515,
        "regenerate": 0.04159451654038515,
        "flips": 0.04159451654038515,
        "toggle": 0.04159451654038515
      },
      "text": "a dedicated `docgen.validators` package with a lightweight `ValidationIssue` dataclass, a `Validator` protocol, and a `NoHallucinationValidator` concrete implementation. The orchestrator registers validators after section rendering and executes them before post-processing or IO. - Add a shared `EvidenceIndex` builder that normalizes analyzer signals (names, kinds, key attributes) and retrieved RAG chunks (path, heading, snippet). Persist the normalized evidence in the run context so validators and verbose logging receive the same data. - Extend the prompt builder to annotate each section render with `SectionEvidence` metadata describing which signals and chunk IDs were injected. This metadata is stored alongside the rendered markdown to avoid re-parsing prompts. - Implement lexical matching heuristics: split rendered sections into sentences, ignore boilerplate phrases, and require each remaining sentence that introduces facts (numbers, detected entities, verbs with direct objects) to have at least one overlapping n-gram (len \u22653) with the normalized evidence. Flag unmatched sentences as hallucinations. - When hallucinations are detected, short-circuit the pipeline, emit fail-safe stubs for the offending sections (reuse existing stub generator), and bubble a `ValidationError` back to the CLI with actionable hints. - **`.docgen.yml` & CLI Updates:** - Introduce a `validation` map with a `no_hallucination` boolean (default `true`). Respect repo-level overrides while allowing `DOCGEN_VALIDATION_NO_HALLUCINATION=false` to disable the check in CI emergencies. - Add a `--skip-validation` flag for `docgen init|update|regenerate` that flips the toggle for",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#2",
      "vector": {
        "cli": 0.18856180831641267,
        "updates": 0.04714045207910317,
        "introduce": 0.04714045207910317,
        "a": 0.23570226039551584,
        "validation": 0.23570226039551584,
        "map": 0.04714045207910317,
        "with": 0.09428090415820634,
        "no_hallucination": 0.04714045207910317,
        "boolean": 0.04714045207910317,
        "default": 0.04714045207910317,
        "true": 0.04714045207910317,
        "respect": 0.04714045207910317,
        "repo": 0.09428090415820634,
        "level": 0.04714045207910317,
        "overrides": 0.04714045207910317,
        "while": 0.04714045207910317,
        "allowing": 0.04714045207910317,
        "docgen_validation_no_hallucination": 0.04714045207910317,
        "false": 0.04714045207910317,
        "to": 0.1414213562373095,
        "disable": 0.04714045207910317,
        "the": 0.4242640687119285,
        "check": 0.04714045207910317,
        "in": 0.1414213562373095,
        "ci": 0.04714045207910317,
        "emergencies": 0.04714045207910317,
        "add": 0.09428090415820634,
        "skip": 0.04714045207910317,
        "flag": 0.04714045207910317,
        "for": 0.18856180831641267,
        "docgen": 0.09428090415820634,
        "init": 0.04714045207910317,
        "update": 0.04714045207910317,
        "regenerate": 0.04714045207910317,
        "that": 0.1414213562373095,
        "flips": 0.04714045207910317,
        "toggle": 0.04714045207910317,
        "current": 0.04714045207910317,
        "execution": 0.04714045207910317,
        "only": 0.04714045207910317,
        "and": 0.282842712474619,
        "is": 0.04714045207910317,
        "surfaced": 0.04714045207910317,
        "run": 0.09428090415820634,
        "summary": 0.04714045207910317,
        "encourage": 0.04714045207910317,
        "re": 0.04714045207910317,
        "enabling": 0.04714045207910317,
        "logging": 0.09428090415820634,
        "ux": 0.04714045207910317,
        "errors": 0.04714045207910317,
        "show": 0.04714045207910317,
        "one": 0.04714045207910317,
        "line": 0.04714045207910317,
        "summaries": 0.04714045207910317,
        "per": 0.04714045207910317,
        "section": 0.04714045207910317,
        "quickstart": 0.04714045207910317,
        "references": 0.04714045207910317,
        "docker": 0.04714045207910317,
        "compose": 0.04714045207910317,
        "without": 0.09428090415820634,
        "supporting": 0.04714045207910317,
        "analyzer": 0.1414213562373095,
        "signal": 0.04714045207910317,
        "verbose": 0.09428090415820634,
        "prints": 0.04714045207910317,
        "offending": 0.04714045207910317,
        "sentence": 0.04714045207910317,
        "missing": 0.04714045207910317,
        "tokens": 0.04714045207910317,
        "short": 0.04714045207910317,
        "list": 0.04714045207910317,
        "of": 0.04714045207910317,
        "nearby": 0.04714045207910317,
        "evidence": 0.09428090415820634,
        "persist": 0.09428090415820634,
        "json": 0.04714045207910317,
        "report": 0.04714045207910317,
        "under": 0.04714045207910317,
        "capturing": 0.04714045207910317,
        "validator": 0.04714045207910317,
        "status": 0.09428090415820634,
        "issues": 0.04714045207910317,
        "selected": 0.04714045207910317,
        "forensic": 0.04714045207910317,
        "review": 0.04714045207910317,
        "testing": 0.04714045207910317,
        "strategy": 0.04714045207910317,
        "unit": 0.04714045207910317,
        "tests": 0.1414213562373095,
        "cover": 0.04714045207910317,
        "positive": 0.04714045207910317,
        "negative": 0.04714045207910317,
        "cases": 0.09428090415820634,
        "nohallucinationvalidator": 0.04714045207910317,
        "including": 0.04714045207910317,
        "edge": 0.04714045207910317,
        "such": 0.04714045207910317,
        "as": 0.04714045207910317,
        "citations": 0.04714045207910317,
        "using": 0.04714045207910317,
        "synonyms": 0.04714045207910317,
        "or": 0.04714045207910317,
        "pluralization": 0.04714045207910317,
        "bullet": 0.04714045207910317,
        "lists": 0.04714045207910317,
        "code": 0.04714045207910317,
        "blocks": 0.04714045207910317,
        "integration": 0.04714045207910317,
        "full": 0.04714045207910317,
        "on": 0.04714045207910317,
        "synthetic": 0.04714045207910317,
        "repos": 0.04714045207910317,
        "stored": 0.04714045207910317,
        "data": 0.04714045207910317,
        "confirm": 0.04714045207910317,
        "grounded": 0.04714045207910317,
        "readmes": 0.04714045207910317,
        "pass": 0.04714045207910317,
        "tampered": 0.04714045207910317,
        "outputs": 0.09428090415820634,
        "fail": 0.04714045207910317,
        "fast": 0.04714045207910317,
        "stub": 0.04714045207910317,
        "replacements": 0.04714045207910317,
        "regression": 0.04714045207910317,
        "fixtures": 0.04714045207910317,
        "asserting": 0.04714045207910317,
        "disabling": 0.04714045207910317,
        "via": 0.04714045207910317,
        "config": 0.04714045207910317,
        "leaves": 0.04714045207910317,
        "runs": 0.09428090415820634,
        "untouched": 0.04714045207910317,
        "enumerates": 0.04714045207910317,
        "flagged": 0.04714045207910317,
        "sentences": 0.04714045207910317,
        "story": 0.09428090415820634,
        "s": 0.1414213562373095,
        "033": 0.04714045207910317,
        "artifact": 0.04714045207910317,
        "persistence": 0.04714045207910317,
        "done": 0.04714045207910317,
        "text": 0.04714045207910317,
        "alongside": 0.04714045207910317,
        "embeddings": 0.04714045207910317,
        "so": 0.04714045207910317,
        "repeated": 0.04714045207910317,
        "can": 0.04714045207910317,
        "reuse": 0.04714045207910317,
        "structured": 0.04714045207910317,
        "signals": 0.04714045207910317,
        "reprocessing": 0.04714045207910317,
        "unchanged": 0.04714045207910317,
        "files": 0.04714045207910317,
        "dependencies": 0.04714045207910317,
        "already": 0.04714045207910317,
        "completed": 0.04714045207910317,
        "003": 0.04714045207910317,
        "scanner": 0.04714045207910317,
        "020": 0.04714045207910317,
        "embedding": 0.04714045207910317,
        "cache": 0.04714045207910317
      },
      "text": "& CLI Updates:** - Introduce a `validation` map with a `no_hallucination` boolean (default `true`). Respect repo-level overrides while allowing `DOCGEN_VALIDATION_NO_HALLUCINATION=false` to disable the check in CI emergencies. - Add a `--skip-validation` flag for `docgen init|update|regenerate` that flips the toggle for the current execution only and is surfaced in the run summary to encourage re-enabling. - **Logging & UX:** - CLI errors show one-line summaries per section (`quickstart: references docker compose without supporting analyzer signal`). `--verbose` prints the offending sentence, the missing tokens, and a short list of nearby evidence. - Persist a `validation.json` report under `.docgen/` capturing the validator status, issues, and selected evidence for forensic review. - **Testing Strategy:** - Unit tests cover positive/negative cases for the `NoHallucinationValidator`, including edge cases such as citations using synonyms or pluralization, bullet lists, and code blocks. - Integration tests run the full CLI on synthetic repos stored in `tests/data/validation/` to confirm grounded READMEs pass and tampered outputs fail fast with stub replacements. - Add regression fixtures asserting that disabling validation via config/CLI leaves runs untouched and that verbose logging enumerates flagged sentences. ## Story S-033 \u2014 Analyzer Artifact Persistence - **Status:** \u2714 Done - **Story Text:** Persist analyzer outputs alongside embeddings so repeated runs can reuse structured signals without reprocessing unchanged files. - **Dependencies already completed:** S-003 (Repo scanner), S-020 (embedding cache",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#3",
      "vector": {
        "story": 0.19975046777556893,
        "s": 0.2996257016633534,
        "033": 0.04993761694389223,
        "analyzer": 0.19975046777556893,
        "artifact": 0.09987523388778446,
        "persistence": 0.04993761694389223,
        "status": 0.09987523388778446,
        "done": 0.09987523388778446,
        "text": 0.09987523388778446,
        "persist": 0.04993761694389223,
        "outputs": 0.09987523388778446,
        "alongside": 0.04993761694389223,
        "embeddings": 0.04993761694389223,
        "so": 0.04993761694389223,
        "repeated": 0.04993761694389223,
        "runs": 0.09987523388778446,
        "can": 0.04993761694389223,
        "reuse": 0.04993761694389223,
        "structured": 0.04993761694389223,
        "signals": 0.09987523388778446,
        "without": 0.04993761694389223,
        "reprocessing": 0.04993761694389223,
        "unchanged": 0.09987523388778446,
        "files": 0.09987523388778446,
        "dependencies": 0.09987523388778446,
        "already": 0.09987523388778446,
        "completed": 0.09987523388778446,
        "003": 0.04993761694389223,
        "repo": 0.09987523388778446,
        "scanner": 0.04993761694389223,
        "020": 0.04993761694389223,
        "embedding": 0.04993761694389223,
        "cache": 0.09987523388778446,
        "groundwork": 0.09987523388778446,
        "constraints": 0.09987523388778446,
        "store": 0.04993761694389223,
        "artifacts": 0.04993761694389223,
        "under": 0.04993761694389223,
        "docgen": 0.04993761694389223,
        "with": 0.1498128508316767,
        "versioning": 0.04993761694389223,
        "to": 0.19975046777556893,
        "handle": 0.04993761694389223,
        "schema": 0.04993761694389223,
        "changes": 0.04993761694389223,
        "refresh": 0.04993761694389223,
        "results": 0.04993761694389223,
        "incrementally": 0.04993761694389223,
        "based": 0.09987523388778446,
        "on": 0.04993761694389223,
        "file": 0.04993761694389223,
        "hashes": 0.04993761694389223,
        "and": 0.2996257016633534,
        "invalidate": 0.04993761694389223,
        "when": 0.19975046777556893,
        "analyzers": 0.04993761694389223,
        "change": 0.04993761694389223,
        "keep": 0.04993761694389223,
        "storage": 0.04993761694389223,
        "format": 0.04993761694389223,
        "json": 0.04993761694389223,
        "serializable": 0.04993761694389223,
        "human": 0.04993761694389223,
        "auditable": 0.04993761694389223,
        "non": 0.09987523388778446,
        "goals": 0.1498128508316767,
        "remote": 0.04993761694389223,
        "backends": 0.04993761694389223,
        "or": 0.04993761694389223,
        "cross": 0.04993761694389223,
        "sharing": 0.04993761694389223,
        "acceptance": 0.04993761694389223,
        "criteria": 0.04993761694389223,
        "saved": 0.04993761694389223,
        "reloaded": 0.04993761694389223,
        "during": 0.04993761694389223,
        "orchestrator": 0.04993761694389223,
        "skipping": 0.04993761694389223,
        "recomputation": 0.04993761694389223,
        "inputs": 0.04993761694389223,
        "integration": 0.09987523388778446,
        "tests": 0.04993761694389223,
        "demonstrate": 0.04993761694389223,
        "speed": 0.04993761694389223,
        "up": 0.04993761694389223,
        "by": 0.09987523388778446,
        "reusing": 0.04993761694389223,
        "cached": 0.04993761694389223,
        "correct": 0.04993761694389223,
        "invalidation": 0.04993761694389223,
        "mutate": 0.04993761694389223,
        "documentation": 0.04993761694389223,
        "in": 0.04993761694389223,
        "spec": 0.09987523388778446,
        "md": 0.04993761694389223,
        "updated": 0.04993761694389223,
        "reflect": 0.04993761694389223,
        "caching": 0.04993761694389223,
        "behavior": 0.04993761694389223,
        "034": 0.04993761694389223,
        "service": 0.1498128508316767,
        "mode": 0.09987523388778446,
        "extended": 0.04993761694389223,
        "runtimes": 0.04993761694389223,
        "deliver": 0.04993761694389223,
        "fastapi": 0.09987523388778446,
        "llama": 0.09987523388778446,
        "cpp": 0.09987523388778446,
        "runtime": 0.04993761694389223,
        "adapter": 0.09987523388778446,
        "tree": 0.09987523388778446,
        "sitter": 0.09987523388778446,
        "powered": 0.04993761694389223,
        "symbol": 0.04993761694389223,
        "extraction": 0.04993761694389223,
        "round": 0.04993761694389223,
        "out": 0.04993761694389223,
        "stretch": 0.04993761694389223,
        "010": 0.04993761694389223,
        "git": 0.04993761694389223,
        "publishing": 0.04993761694389223,
        "infrastructure": 0.04993761694389223,
        "017": 0.04993761694389223,
        "entrypoint": 0.04993761694389223,
        "detection": 0.04993761694389223,
        "must": 0.04993761694389223,
        "expose": 0.04993761694389223,
        "endpoints": 0.04993761694389223,
        "for": 0.09987523388778446,
        "init": 0.04993761694389223,
        "update": 0.04993761694389223,
        "dry": 0.04993761694389223,
        "run": 0.04993761694389223,
        "authentication": 0.04993761694389223,
        "disabled": 0.04993761694389223,
        "default": 0.04993761694389223,
        "but": 0.04993761694389223,
        "ready": 0.04993761694389223,
        "future": 0.04993761694389223,
        "hardening": 0.04993761694389223,
        "hooks": 0.04993761694389223,
        "should": 0.04993761694389223,
        "mirror": 0.04993761694389223,
        "llmrunner": 0.04993761694389223,
        "interface": 0.04993761694389223,
        "enforce": 0.04993761694389223,
        "local": 0.04993761694389223,
        "execution": 0.04993761694389223,
        "paths": 0.04993761694389223,
        "limited": 0.04993761694389223,
        "supported": 0.04993761694389223,
        "languages": 0.04993761694389223,
        "python": 0.04993761694389223,
        "java": 0.04993761694389223,
        "typescript": 0.04993761694389223,
        "graceful": 0.04993761694389223,
        "degradation": 0.04993761694389223,
        "parsers": 0.04993761694389223,
        "unavailable": 0.04993761694389223,
        "production": 0.04993761694389223
      },
      "text": "## Story S-033 \u2014 Analyzer Artifact Persistence - **Status:** \u2714 Done - **Story Text:** Persist analyzer outputs alongside embeddings so repeated runs can reuse structured signals without reprocessing unchanged files. - **Dependencies already completed:** S-003 (Repo scanner), S-020 (embedding cache groundwork) - **Constraints:** - Store artifacts under `.docgen/` with versioning to handle schema changes. - Refresh analyzer results incrementally based on file hashes and invalidate when analyzers change. - Keep storage format JSON-serializable and human-auditable. - **Non-Goals:** Remote cache backends or cross-repo sharing. - **Acceptance Criteria:** - Analyzer outputs saved and reloaded during orchestrator runs, skipping recomputation when inputs unchanged. - Integration tests demonstrate speed-up by reusing cached signals and correct invalidation when files mutate. - Documentation in `spec/spec.md` updated to reflect artifact caching behavior. ## Story S-034 \u2014 Service Mode & Extended Runtimes - **Status:** \u2714 Done - **Story Text:** Deliver FastAPI-based service mode, llama.cpp runtime adapter, and tree-sitter powered symbol extraction to round out stretch goals. - **Dependencies already completed:** S-010 (Git publishing infrastructure), S-017 (entrypoint detection groundwork) - **Constraints:** - FastAPI service must expose endpoints for init/update/dry-run with authentication disabled by default but ready for future hardening hooks. - llama.cpp adapter should mirror `LLMRunner` interface and enforce local execution paths. - Tree-sitter integration limited to supported languages (Python/Java/TypeScript) with graceful degradation when parsers unavailable. - **Non-Goals:** Production",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#4",
      "vector": {
        "with": 0.21594472522460836,
        "authentication": 0.07198157507486945,
        "disabled": 0.07198157507486945,
        "by": 0.1439631501497389,
        "default": 0.07198157507486945,
        "but": 0.07198157507486945,
        "ready": 0.07198157507486945,
        "for": 0.1439631501497389,
        "future": 0.07198157507486945,
        "hardening": 0.07198157507486945,
        "hooks": 0.07198157507486945,
        "llama": 0.1439631501497389,
        "cpp": 0.1439631501497389,
        "adapter": 0.1439631501497389,
        "should": 0.07198157507486945,
        "mirror": 0.07198157507486945,
        "llmrunner": 0.07198157507486945,
        "interface": 0.07198157507486945,
        "and": 0.4318894504492167,
        "enforce": 0.07198157507486945,
        "local": 0.07198157507486945,
        "execution": 0.07198157507486945,
        "paths": 0.07198157507486945,
        "tree": 0.1439631501497389,
        "sitter": 0.1439631501497389,
        "integration": 0.07198157507486945,
        "limited": 0.07198157507486945,
        "to": 0.1439631501497389,
        "supported": 0.07198157507486945,
        "languages": 0.07198157507486945,
        "python": 0.07198157507486945,
        "java": 0.07198157507486945,
        "typescript": 0.07198157507486945,
        "graceful": 0.07198157507486945,
        "degradation": 0.07198157507486945,
        "when": 0.07198157507486945,
        "parsers": 0.07198157507486945,
        "unavailable": 0.07198157507486945,
        "non": 0.07198157507486945,
        "goals": 0.1439631501497389,
        "production": 0.07198157507486945,
        "deployment": 0.07198157507486945,
        "tooling": 0.07198157507486945,
        "or": 0.07198157507486945,
        "advanced": 0.07198157507486945,
        "queueing": 0.07198157507486945,
        "acceptance": 0.07198157507486945,
        "criteria": 0.07198157507486945,
        "service": 0.1439631501497389,
        "mode": 0.07198157507486945,
        "passes": 0.07198157507486945,
        "end": 0.1439631501497389,
        "tests": 0.21594472522460836,
        "invoking": 0.07198157507486945,
        "fastapi": 0.07198157507486945,
        "routes": 0.07198157507486945,
        "reusing": 0.07198157507486945,
        "orchestrator": 0.07198157507486945,
        "logic": 0.07198157507486945,
        "covered": 0.07198157507486945,
        "unit": 0.07198157507486945,
        "simulating": 0.07198157507486945,
        "cli": 0.07198157507486945,
        "shared": 0.07198157507486945,
        "configuration": 0.07198157507486945,
        "analyzer": 0.07198157507486945,
        "enriches": 0.07198157507486945,
        "signals": 0.07198157507486945,
        "symbol": 0.07198157507486945,
        "metadata": 0.07198157507486945,
        "associated": 0.07198157507486945,
        "validate": 0.07198157507486945,
        "extraction": 0.07198157507486945,
        "on": 0.07198157507486945,
        "fixtures": 0.07198157507486945,
        "updated": 0.07198157507486945,
        "documentation": 0.07198157507486945,
        "usage": 0.07198157507486945,
        "extended": 0.07198157507486945,
        "runtimes": 0.07198157507486945,
        "in": 0.1439631501497389,
        "docs": 0.07198157507486945,
        "spec": 0.1439631501497389,
        "md": 0.07198157507486945,
        "next": 0.07198157507486945,
        "actions": 0.07198157507486945,
        "execute": 0.07198157507486945,
        "the": 0.07198157507486945,
        "stories": 0.07198157507486945,
        "above": 0.07198157507486945,
        "sequentially": 0.07198157507486945,
        "upon": 0.07198157507486945,
        "completion": 0.07198157507486945,
        "reassess": 0.07198157507486945,
        "remaining": 0.07198157507486945,
        "stretch": 0.07198157507486945,
        "knowledge": 0.07198157507486945,
        "graph": 0.07198157507486945,
        "secret": 0.07198157507486945,
        "scanning": 0.07198157507486945,
        "if": 0.07198157507486945,
        "still": 0.07198157507486945,
        "scope": 0.07198157507486945
      },
      "text": "with authentication disabled by default but ready for future hardening hooks. - llama.cpp adapter should mirror `LLMRunner` interface and enforce local execution paths. - Tree-sitter integration limited to supported languages (Python/Java/TypeScript) with graceful degradation when parsers unavailable. - **Non-Goals:** Production deployment tooling or advanced queueing. - **Acceptance Criteria:** - Service mode passes end-to-end tests invoking FastAPI routes and reusing orchestrator logic. - llama.cpp adapter covered by unit tests simulating CLI and shared configuration. - Tree-sitter analyzer enriches signals with symbol metadata and associated tests validate extraction on fixtures. - Updated documentation for service usage and extended runtimes in `docs/` and `spec/spec.md`. --- **Next Actions:** Execute the stories above sequentially; upon completion reassess remaining stretch goals (knowledge graph, secret scanning) if still in scope.",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/prompt_template.md#0",
      "vector": {
        "below": 0.09417632186960222,
        "is": 0.09417632186960222,
        "a": 0.18835264373920443,
        "drop": 0.04708816093480111,
        "in": 0.18835264373920443,
        "prompt": 0.09417632186960222,
        "template": 0.09417632186960222,
        "you": 0.14126448280440332,
        "can": 0.04708816093480111,
        "reuse": 0.04708816093480111,
        "for": 0.18835264373920443,
        "each": 0.04708816093480111,
        "single": 0.09417632186960222,
        "story": 0.5179697702828122,
        "s": 0.18835264373920443,
        "001": 0.09417632186960222,
        "044": 0.04708816093480111,
        "followed": 0.04708816093480111,
        "by": 0.04708816093480111,
        "two": 0.04708816093480111,
        "filled": 0.04708816093480111,
        "examples": 0.04708816093480111,
        "and": 0.18835264373920443,
        "016": 0.04708816093480111,
        "one": 0.04708816093480111,
        "at": 0.09417632186960222,
        "time": 0.04708816093480111,
        "implementation": 0.04708816093480111,
        "use": 0.09417632186960222,
        "this": 0.09417632186960222,
        "exact": 0.04708816093480111,
        "structure": 0.04708816093480111,
        "every": 0.04708816093480111,
        "replace": 0.04708816093480111,
        "placeholders": 0.04708816093480111,
        "with": 0.04708816093480111,
        "your": 0.04708816093480111,
        "specifics": 0.04708816093480111,
        "before": 0.04708816093480111,
        "sending": 0.04708816093480111,
        "system": 0.04708816093480111,
        "role": 0.04708816093480111,
        "are": 0.04708816093480111,
        "principal": 0.04708816093480111,
        "python": 0.14126448280440332,
        "engineer": 0.04708816093480111,
        "implementing": 0.04708816093480111,
        "tightly": 0.04708816093480111,
        "scoped": 0.04708816093480111,
        "an": 0.04708816093480111,
        "existing": 0.04708816093480111,
        "repository": 0.04708816093480111,
        "must": 0.04708816093480111,
        "implement": 0.04708816093480111,
        "only": 0.04708816093480111,
        "the": 0.14126448280440332,
        "no": 0.14126448280440332,
        "scope": 0.04708816093480111,
        "drift": 0.04708816093480111,
        "future": 0.04708816093480111,
        "stories": 0.04708816093480111,
        "produce": 0.04708816093480111,
        "production": 0.04708816093480111,
        "grade": 0.04708816093480111,
        "cross": 0.04708816093480111,
        "platform": 0.04708816093480111,
        "code": 0.09417632186960222,
        "windows": 0.04708816093480111,
        "macos": 0.04708816093480111,
        "3": 0.09417632186960222,
        "11": 0.09417632186960222,
        "follow": 0.04708816093480111,
        "repo": 0.04708816093480111,
        "conventions": 0.04708816093480111,
        "poetry": 0.09417632186960222,
        "ruff": 0.09417632186960222,
        "black": 0.09417632186960222,
        "mypy": 0.09417632186960222,
        "strict": 0.09417632186960222,
        "pytest": 0.14126448280440332,
        "logging": 0.04708816093480111,
        "prints": 0.04708816093480111,
        "library": 0.04708816093480111,
        "type": 0.04708816093480111,
        "hints": 0.04708816093480111,
        "everywhere": 0.04708816093480111,
        "keep": 0.04708816093480111,
        "audio": 0.09417632186960222,
        "callbacks": 0.04708816093480111,
        "non": 0.09417632186960222,
        "blocking": 0.04708816093480111,
        "prefer": 0.04708816093480111,
        "ring": 0.04708816093480111,
        "buffers": 0.04708816093480111,
        "preallocated": 0.04708816093480111,
        "arrays": 0.04708816093480111,
        "avoid": 0.04708816093480111,
        "os": 0.04708816093480111,
        "specific": 0.04708816093480111,
        "imports": 0.04708816093480111,
        "module": 0.04708816093480111,
        "top": 0.04708816093480111,
        "level": 0.04708816093480111,
        "when": 0.04708816093480111,
        "something": 0.04708816093480111,
        "ambiguous": 0.04708816093480111,
        "make": 0.04708816093480111,
        "smallest": 0.04708816093480111,
        "reasonable": 0.04708816093480111,
        "assumption": 0.04708816093480111,
        "state": 0.04708816093480111,
        "it": 0.04708816093480111,
        "assumptions": 0.04708816093480111,
        "section": 0.04708816093480111,
        "proceed": 0.04708816093480111,
        "context": 0.04708816093480111,
        "id": 0.04708816093480111,
        "story_id": 0.04708816093480111,
        "title": 0.04708816093480111,
        "story_title": 0.04708816093480111,
        "text": 0.04708816093480111,
        "story_text": 0.04708816093480111,
        "dependencies": 0.04708816093480111,
        "already": 0.04708816093480111,
        "completed": 0.04708816093480111,
        "dependencies_list_or_none": 0.04708816093480111,
        "constraints": 0.04708816093480111,
        "from": 0.04708816093480111,
        "prd": 0.04708816093480111,
        "backlog": 0.04708816093480111,
        "key_constraints": 0.04708816093480111,
        "goals": 0.04708816093480111,
        "non_goals": 0.04708816093480111,
        "environment": 0.04708816093480111,
        "tooling": 0.04708816093480111,
        "fixed": 0.04708816093480111,
        "package": 0.04708816093480111,
        "manager": 0.04708816093480111,
        "linters": 0.04708816093480111,
        "formatters": 0.04708816093480111,
        "static": 0.04708816093480111,
        "typing": 0.04708816093480111,
        "tests": 0.04708816093480111,
        "cov": 0.04708816093480111,
        "ui": 0.04708816093480111,
        "pyside6": 0.04708816093480111,
        "if": 0.09417632186960222,
        "relevant": 0.09417632186960222,
        "to": 0.04708816093480111,
        "i": 0.04708816093480111,
        "o": 0.04708816093480111,
        "sounddevice": 0.04708816093480111,
        "portaudio": 0.04708816093480111
      },
      "text": "Below is a **drop\u2011in prompt template** you can reuse for **each single story (S\u2011001 \u2192 S\u2011044)**, followed by **two filled examples** (for S\u2011001 and S\u2011016). --- ## \ud83d\udd27 One\u2011Story\u2011At\u2011A\u2011Time Implementation Prompt (Template) > **Use this exact structure for every story.** Replace `{{\u2026}}` placeholders with your specifics before sending. --- **SYSTEM / ROLE** You are a **Principal Python engineer** implementing a single, tightly scoped story in an existing repository. You must: * Implement **only the story below** (no scope drift, no future stories). * Produce production\u2011grade, cross\u2011platform code (Windows/macOS), Python 3.11. * Follow repo conventions: Poetry, ruff, black, mypy (strict), pytest. * Use logging (no prints) in library code, and type hints everywhere. * Keep audio callbacks non\u2011blocking; prefer ring buffers and preallocated arrays. * Avoid OS\u2011specific imports at module top level. * When something is ambiguous, **make the smallest reasonable assumption**, state it in the *Assumptions* section, and proceed. --- ### Story Context * **Story ID:** {{STORY_ID}} * **Story Title:** {{STORY_TITLE}} * **Story Text:** {{STORY_TEXT}} * **Dependencies already completed:** {{DEPENDENCIES_LIST_OR_NONE}} * **Constraints from PRD/backlog:** {{KEY_CONSTRAINTS}} * **Non\u2011Goals for this story:** {{NON_GOALS}} ### Environment & Tooling (fixed) * **Python:** 3.11 * **Package manager:** Poetry * **Linters/formatters:** ruff, black * **Static typing:** mypy (strict) * **Tests:** pytest + pytest\u2011cov * **UI:** PySide6 (if relevant to story) * **Audio I/O:** sounddevice/PortAudio (if relevant)",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#1",
      "vector": {
        "non_goals": 0.05581455721859476,
        "environment": 0.05581455721859476,
        "tooling": 0.05581455721859476,
        "fixed": 0.05581455721859476,
        "python": 0.16744367165578428,
        "3": 0.11162911443718952,
        "11": 0.05581455721859476,
        "package": 0.05581455721859476,
        "manager": 0.05581455721859476,
        "poetry": 0.05581455721859476,
        "linters": 0.05581455721859476,
        "formatters": 0.05581455721859476,
        "ruff": 0.11162911443718952,
        "black": 0.11162911443718952,
        "static": 0.05581455721859476,
        "typing": 0.05581455721859476,
        "mypy": 0.11162911443718952,
        "strict": 0.05581455721859476,
        "tests": 0.11162911443718952,
        "pytest": 0.16744367165578428,
        "cov": 0.05581455721859476,
        "ui": 0.05581455721859476,
        "pyside6": 0.05581455721859476,
        "if": 0.2790727860929738,
        "relevant": 0.2790727860929738,
        "to": 0.16744367165578428,
        "story": 0.05581455721859476,
        "audio": 0.05581455721859476,
        "i": 0.11162911443718952,
        "o": 0.05581455721859476,
        "sounddevice": 0.05581455721859476,
        "portaudio": 0.05581455721859476,
        "ml": 0.05581455721859476,
        "runtime": 0.05581455721859476,
        "onnxruntime": 0.05581455721859476,
        "current": 0.05581455721859476,
        "repository": 0.05581455721859476,
        "snapshot": 0.05581455721859476,
        "paste": 0.11162911443718952,
        "fresh": 0.05581455721859476,
        "snapshots": 0.05581455721859476,
        "so": 0.05581455721859476,
        "the": 0.11162911443718952,
        "model": 0.05581455721859476,
        "does": 0.05581455721859476,
        "not": 0.05581455721859476,
        "hallucinate": 0.05581455721859476,
        "keep": 0.05581455721859476,
        "these": 0.05581455721859476,
        "short": 0.11162911443718952,
        "but": 0.05581455721859476,
        "sufficient": 0.05581455721859476,
        "root": 0.05581455721859476,
        "tree": 0.11162911443718952,
        "a": 0.05581455721859476,
        "git": 0.11162911443718952,
        "or": 0.11162911443718952,
        "ls": 0.05581455721859476,
        "files": 0.22325822887437904,
        "repo_tree": 0.05581455721859476,
        "key": 0.05581455721859476,
        "only": 0.05581455721859476,
        "sections": 0.11162911443718952,
        "path": 0.11162911443718952,
        "file1": 0.05581455721859476,
        "file1_relevant_snippet": 0.05581455721859476,
        "file2": 0.05581455721859476,
        "file2_relevant_snippet": 0.05581455721859476,
        "pinned": 0.05581455721859476,
        "pyproject": 0.05581455721859476,
        "toml": 0.11162911443718952,
        "parts": 0.05581455721859476,
        "pyproject_snippet": 0.05581455721859476,
        "acceptance": 0.05581455721859476,
        "criteria": 0.05581455721859476,
        "definition": 0.05581455721859476,
        "of": 0.16744367165578428,
        "done": 0.05581455721859476,
        "functional": 0.05581455721859476,
        "functional_doc": 0.05581455721859476,
        "quality": 0.05581455721859476,
        "pass": 0.05581455721859476,
        "passes": 0.05581455721859476,
        "with": 0.11162911443718952,
        "90": 0.05581455721859476,
        "coverage": 0.05581455721859476,
        "for": 0.05581455721859476,
        "new": 0.05581455721859476,
        "code": 0.05581455721859476,
        "cross": 0.05581455721859476,
        "platform": 0.05581455721859476,
        "no": 0.11162911443718952,
        "os": 0.05581455721859476,
        "specific": 0.05581455721859476,
        "breakage": 0.05581455721859476,
        "guarded": 0.05581455721859476,
        "imports": 0.05581455721859476,
        "where": 0.05581455721859476,
        "needed": 0.05581455721859476,
        "performance": 0.05581455721859476,
        "applicable": 0.05581455721859476,
        "perf_requirements": 0.05581455721859476,
        "docs": 0.11162911443718952,
        "inline": 0.05581455721859476,
        "docstrings": 0.05581455721859476,
        "readme": 0.05581455721859476,
        "module": 0.05581455721859476,
        "level": 0.05581455721859476,
        "updated": 0.05581455721859476,
        "user": 0.05581455721859476,
        "facing": 0.05581455721859476,
        "unrelated": 0.05581455721859476,
        "refactors": 0.05581455721859476,
        "minimal": 0.05581455721859476,
        "diff": 0.05581455721859476,
        "outside": 0.05581455721859476,
        "touched": 0.05581455721859476,
        "scope": 0.05581455721859476,
        "deliverables": 0.05581455721859476,
        "output": 0.05581455721859476,
        "contract": 0.05581455721859476,
        "return": 0.05581455721859476,
        "following": 0.05581455721859476,
        "in": 0.05581455721859476,
        "order": 0.05581455721859476,
        "exact": 0.11162911443718952,
        "headings": 0.05581455721859476,
        "1": 0.05581455721859476,
        "assumptions": 0.11162911443718952,
        "decisions": 0.05581455721859476,
        "bullet": 0.05581455721859476,
        "list": 0.05581455721859476,
        "any": 0.05581455721859476,
        "reasonable": 0.05581455721859476,
        "you": 0.11162911443718952,
        "made": 0.05581455721859476,
        "2": 0.05581455721859476,
        "planned": 0.05581455721859476,
        "changes": 0.05581455721859476,
        "tl": 0.05581455721859476,
        "dr": 0.05581455721859476,
        "summary": 0.05581455721859476,
        "what": 0.05581455721859476,
        "will": 0.05581455721859476,
        "add": 0.05581455721859476,
        "modify": 0.05581455721859476,
        "and": 0.11162911443718952,
        "why": 0.05581455721859476,
        "full": 0.05581455721859476,
        "test": 0.05581455721859476,
        "covering": 0.05581455721859476,
        "success": 0.05581455721859476,
        "edge": 0.05581455721859476,
        "cases": 0.05581455721859476,
        "error": 0.05581455721859476,
        "paths": 0.05581455721859476,
        "4": 0.05581455721859476,
        "validation": 0.05581455721859476,
        "steps": 0.05581455721859476,
        "local": 0.05581455721859476
      },
      "text": "{{NON_GOALS}} ### Environment & Tooling (fixed) * **Python:** 3.11 * **Package manager:** Poetry * **Linters/formatters:** ruff, black * **Static typing:** mypy (strict) * **Tests:** pytest + pytest\u2011cov * **UI:** PySide6 (if relevant to story) * **Audio I/O:** sounddevice/PortAudio (if relevant) * **ML runtime:** onnxruntime (if relevant) ### Current Repository Snapshot > Paste fresh snapshots so the model does not hallucinate. Keep these short but sufficient. * **Root tree (`tree -a -I .git` or `git ls-files`):** ``` {{REPO_TREE}} ``` * **Key files (paste only relevant sections):** * `{{PATH/TO/FILE1}}` ```python {{FILE1_RELEVANT_SNIPPET}} ``` * `{{PATH/TO/FILE2}}` ```python {{FILE2_RELEVANT_SNIPPET}} ``` * **Pinned pyproject.toml (relevant parts):** ```toml {{PYPROJECT_SNIPPET}} ``` ### Acceptance Criteria (Definition of Done) * Functional: {{FUNCTIONAL_DOC}} * Quality: **ruff/black/mypy** pass; **pytest** passes with **\u2265 90%** coverage for new code. * Cross\u2011platform: No OS\u2011specific breakage; guarded imports where needed. * Performance (if applicable): {{PERF_REQUIREMENTS}} * Docs: Inline docstrings; README or module\u2011level docs updated if user\u2011facing. * No unrelated refactors; minimal diff outside touched scope. ### Deliverables \u2014 **Output Contract** Return the following sections **in order**, with exact headings: 1. **Assumptions & Decisions** \u2013 bullet list of any reasonable assumptions you made. 2. **Planned Changes (TL;DR)** \u2013 short summary of what files you will add/modify and why. 3. **Tests** \u2013 full test files covering success, edge cases, and error paths. 4. **Validation Steps (Local)** \u2013 exact",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#2",
      "vector": {
        "of": 0.1487044791289829,
        "any": 0.04956815970966096,
        "reasonable": 0.04956815970966096,
        "assumptions": 0.04956815970966096,
        "you": 0.09913631941932192,
        "made": 0.04956815970966096,
        "2": 0.04956815970966096,
        "planned": 0.04956815970966096,
        "changes": 0.04956815970966096,
        "tl": 0.04956815970966096,
        "dr": 0.04956815970966096,
        "short": 0.04956815970966096,
        "summary": 0.04956815970966096,
        "what": 0.04956815970966096,
        "files": 0.1487044791289829,
        "will": 0.04956815970966096,
        "add": 0.04956815970966096,
        "modify": 0.04956815970966096,
        "and": 0.3965452776772877,
        "why": 0.04956815970966096,
        "3": 0.04956815970966096,
        "tests": 0.04956815970966096,
        "full": 0.04956815970966096,
        "test": 0.09913631941932192,
        "covering": 0.04956815970966096,
        "success": 0.04956815970966096,
        "edge": 0.04956815970966096,
        "cases": 0.04956815970966096,
        "error": 0.04956815970966096,
        "paths": 0.04956815970966096,
        "4": 0.04956815970966096,
        "validation": 0.04956815970966096,
        "steps": 0.04956815970966096,
        "local": 0.04956815970966096,
        "exact": 0.04956815970966096,
        "commands": 0.04956815970966096,
        "to": 0.09913631941932192,
        "run": 0.04956815970966096,
        "poetry": 0.04956815970966096,
        "install": 0.04956815970966096,
        "lint": 0.04956815970966096,
        "type": 0.04956815970966096,
        "expected": 0.04956815970966096,
        "outputs": 0.04956815970966096,
        "5": 0.04956815970966096,
        "conventional": 0.04956815970966096,
        "commit": 0.09913631941932192,
        "message": 0.09913631941932192,
        "a": 0.24784079854830482,
        "single": 0.04956815970966096,
        "with": 0.09913631941932192,
        "the": 0.24784079854830482,
        "story": 0.24784079854830482,
        "description": 0.04956815970966096,
        "ex": 0.04956815970966096,
        "s": 0.1487044791289829,
        "001": 0.1487044791289829,
        "implemented": 0.04956815970966096,
        "get": 0.04956815970966096,
        "customers": 0.04956815970966096,
        "endpoint": 0.04956815970966096,
        "implementation": 0.04956815970966096,
        "hints": 0.04956815970966096,
        "if": 0.1487044791289829,
        "helpful": 0.04956815970966096,
        "keep": 0.04956815970966096,
        "per": 0.04956815970966096,
        "frame": 0.04956815970966096,
        "allocations": 0.04956815970966096,
        "near": 0.04956815970966096,
        "zero": 0.04956815970966096,
        "in": 0.19827263883864385,
        "audio": 0.04956815970966096,
        "callbacks": 0.04956815970966096,
        "use": 0.04956815970966096,
        "dependency": 0.04956815970966096,
        "inversion": 0.04956815970966096,
        "define": 0.04956815970966096,
        "clear": 0.04956815970966096,
        "interfaces": 0.04956815970966096,
        "core": 0.1487044791289829,
        "or": 0.1487044791289829,
        "ml": 0.04956815970966096,
        "where": 0.04956815970966096,
        "specified": 0.04956815970966096,
        "backlog": 0.04956815970966096,
        "an": 0.04956815970966096,
        "external": 0.04956815970966096,
        "binary": 0.04956815970966096,
        "model": 0.04956815970966096,
        "is": 0.04956815970966096,
        "out": 0.04956815970966096,
        "scope": 0.04956815970966096,
        "for": 0.04956815970966096,
        "this": 0.09913631941932192,
        "provide": 0.04956815970966096,
        "deterministic": 0.04956815970966096,
        "stub": 0.04956815970966096,
        "todo": 0.04956815970966096,
        "feature": 0.04956815970966096,
        "flag": 0.04956815970966096,
        "important": 0.04956815970966096,
        "guardrails": 0.04956815970966096,
        "do": 0.1487044791289829,
        "not": 0.1487044791289829,
        "implement": 0.04956815970966096,
        "future": 0.04956815970966096,
        "stories": 0.04956815970966096,
        "introduce": 0.04956815970966096,
        "new": 0.04956815970966096,
        "dependencies": 0.04956815970966096,
        "without": 0.04956815970966096,
        "updating": 0.04956815970966096,
        "pyproject": 0.04956815970966096,
        "toml": 0.04956815970966096,
        "justifying": 0.04956815970966096,
        "them": 0.04956815970966096,
        "change": 0.04956815970966096,
        "licensing": 0.04956815970966096,
        "repo": 0.04956815970966096,
        "name": 0.04956815970966096,
        "ci": 0.04956815970966096,
        "workflows": 0.04956815970966096,
        "unless": 0.04956815970966096,
        "explicitly": 0.04956815970966096,
        "requested": 0.04956815970966096,
        "output": 0.04956815970966096,
        "would": 0.04956815970966096,
        "exceed": 0.04956815970966096,
        "limits": 0.04956815970966096,
        "split": 0.04956815970966096,
        "patch": 0.04956815970966096,
        "file": 0.04956815970966096,
        "contents": 0.04956815970966096,
        "by": 0.04956815970966096,
        "directory": 0.04956815970966096,
        "but": 0.04956815970966096,
        "still": 0.04956815970966096,
        "include": 0.04956815970966096,
        "all": 0.04956815970966096,
        "required": 0.04956815970966096,
        "example": 0.04956815970966096,
        "instantiation": 0.04956815970966096,
        "1": 0.04956815970966096,
        "initialize": 0.09913631941932192,
        "repository": 0.09913631941932192,
        "metadata": 0.04956815970966096,
        "copy": 0.04956815970966096,
        "adjust": 0.04956815970966096,
        "paste": 0.04956815970966096,
        "following": 0.04956815970966096,
        "as": 0.04956815970966096,
        "real": 0.04956815970966096,
        "prompt": 0.04956815970966096,
        "your": 0.04956815970966096,
        "llm": 0.04956815970966096,
        "id": 0.04956815970966096,
        "title": 0.04956815970966096
      },
      "text": "of any reasonable assumptions you made. 2. **Planned Changes (TL;DR)** \u2013 short summary of what files you will add/modify and why. 3. **Tests** \u2013 full test files covering success, edge cases, and error paths. 4. **Validation Steps (Local)** \u2013 exact commands to run (Poetry install, lint, type, test) and expected outputs. 5. **Conventional Commit Message** \u2013 a single commit with the story and a description, ex: \"S-001: Implemented the GET customers endpoint\" ### Implementation Hints (if helpful) * Keep per\u2011frame allocations near zero in audio callbacks. * Use dependency inversion: define clear interfaces in `core/` or `ml/` where specified in the backlog. * If an external binary or model is out of scope for this story, provide a deterministic stub with TODO and a feature flag. ### Important Guardrails * **Do not** implement future stories. * **Do not** introduce new dependencies without updating `pyproject.toml` and justifying them. * **Do not** change licensing, repo name, or CI workflows unless explicitly requested in this story. * If output would exceed message limits, **split the Patch and File Contents by directory** but still include all required files. --- ## \u2705 Example Instantiation #1 \u2014 S\u2011001 (Initialize repository & core metadata) > Copy, adjust, and paste the following as a real prompt to your LLM. **Story ID:** S\u2011001 **Story Title:** Initialize repository & core",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#3",
      "vector": {
        "include": 0.09611386626644254,
        "all": 0.04805693313322127,
        "required": 0.04805693313322127,
        "files": 0.04805693313322127,
        "example": 0.09611386626644254,
        "instantiation": 0.09611386626644254,
        "1": 0.09611386626644254,
        "s": 0.19222773253288508,
        "001": 0.09611386626644254,
        "initialize": 0.09611386626644254,
        "repository": 0.14417079939966382,
        "core": 0.09611386626644254,
        "metadata": 0.14417079939966382,
        "copy": 0.04805693313322127,
        "adjust": 0.04805693313322127,
        "and": 0.09611386626644254,
        "paste": 0.09611386626644254,
        "the": 0.19222773253288508,
        "following": 0.04805693313322127,
        "as": 0.09611386626644254,
        "a": 0.04805693313322127,
        "real": 0.04805693313322127,
        "prompt": 0.04805693313322127,
        "to": 0.04805693313322127,
        "your": 0.04805693313322127,
        "llm": 0.04805693313322127,
        "story": 0.28834159879932764,
        "id": 0.09611386626644254,
        "title": 0.09611386626644254,
        "text": 0.09611386626644254,
        "create": 0.04805693313322127,
        "poetry": 0.19222773253288508,
        "project": 0.09611386626644254,
        "voice": 0.09611386626644254,
        "xform": 0.09611386626644254,
        "add": 0.14417079939966382,
        "license": 0.04805693313322127,
        "apache": 0.04805693313322127,
        "2": 0.09611386626644254,
        "0": 0.14417079939966382,
        "readme": 0.14417079939966382,
        "with": 0.04805693313322127,
        "purpose": 0.09611386626644254,
        "install": 0.14417079939966382,
        "quickstart": 0.09611386626644254,
        "contributing": 0.04805693313322127,
        "editorconfig": 0.04805693313322127,
        "gitattributes": 0.04805693313322127,
        "gitignore": 0.09611386626644254,
        "pyproject": 0.09611386626644254,
        "toml": 0.09611386626644254,
        "python": 0.24028466566610635,
        "3": 0.14417079939966382,
        "11": 0.14417079939966382,
        "dependencies": 0.04805693313322127,
        "already": 0.04805693313322127,
        "completed": 0.04805693313322127,
        "none": 0.04805693313322127,
        "constraints": 0.04805693313322127,
        "use": 0.09611386626644254,
        "repo": 0.04805693313322127,
        "name": 0.09611386626644254,
        "keep": 0.09611386626644254,
        "docs": 0.04805693313322127,
        "concise": 0.04805693313322127,
        "but": 0.04805693313322127,
        "actionable": 0.04805693313322127,
        "non": 0.04805693313322127,
        "goals": 0.04805693313322127,
        "no": 0.14417079939966382,
        "code": 0.04805693313322127,
        "beyond": 0.04805693313322127,
        "scaffolding": 0.04805693313322127,
        "ci": 0.09611386626644254,
        "package": 0.04805693313322127,
        "layout": 0.04805693313322127,
        "yet": 0.09611386626644254,
        "current": 0.04805693313322127,
        "snapshot": 0.04805693313322127,
        "empty": 0.09611386626644254,
        "directory": 0.04805693313322127,
        "acceptance": 0.04805693313322127,
        "criteria": 0.04805693313322127,
        "definition": 0.04805693313322127,
        "of": 0.04805693313322127,
        "done": 0.04805693313322127,
        "succeeds": 0.04805693313322127,
        "on": 0.04805693313322127,
        "macos": 0.09611386626644254,
        "windows": 0.09611386626644254,
        "md": 0.04805693313322127,
        "includes": 0.04805693313322127,
        "instructions": 0.04805693313322127,
        "placeholder": 0.04805693313322127,
        "running": 0.04805693313322127,
        "run": 0.04805693313322127,
        "v": 0.04805693313322127,
        "prints": 0.04805693313322127,
        "x": 0.04805693313322127,
        "deliverables": 0.09611386626644254,
        "output": 0.04805693313322127,
        "contract": 0.04805693313322127,
        "then": 0.04805693313322127,
        "list": 0.04805693313322127,
        "from": 0.04805693313322127,
        "template": 0.04805693313322127,
        "implementation": 0.04805693313322127,
        "hints": 0.04805693313322127,
        "standard": 0.04805693313322127,
        "for": 0.04805693313322127,
        "version": 0.04805693313322127,
        "authors": 0.04805693313322127,
        "in": 0.04805693313322127,
        "important": 0.04805693313322127,
        "guardrails": 0.04805693313322127,
        "do": 0.04805693313322127,
        "not": 0.04805693313322127,
        "or": 0.04805693313322127,
        "tests": 0.04805693313322127,
        "succinct": 0.04805693313322127,
        "section": 0.04805693313322127,
        "headers": 0.04805693313322127,
        "placeholders": 0.04805693313322127,
        "016": 0.09611386626644254,
        "model": 0.09611386626644254,
        "registry": 0.09611386626644254,
        "provider": 0.09611386626644254,
        "detection": 0.09611386626644254,
        "implement": 0.04805693313322127,
        "ml": 0.04805693313322127,
        "runtime": 0.14417079939966382,
        "onnx_loader": 0.04805693313322127,
        "py": 0.04805693313322127,
        "that": 0.04805693313322127,
        "chooses": 0.04805693313322127,
        "best": 0.04805693313322127,
        "onnx": 0.04805693313322127,
        "ep": 0.04805693313322127,
        "at": 0.04805693313322127,
        "tensorrt": 0.04805693313322127,
        "directml": 0.04805693313322127
      },
      "text": "include all required files. --- ## \u2705 Example Instantiation #1 \u2014 S\u2011001 (Initialize repository & core metadata) > Copy, adjust, and paste the following as a real prompt to your LLM. **Story ID:** S\u2011001 **Story Title:** Initialize repository & core metadata **Story Text:** Create Poetry project `voice-xform`; add LICENSE (Apache\u20112.0), README with purpose/install/quickstart, CONTRIBUTING, .editorconfig, .gitattributes, .gitignore, pyproject.toml (Python 3.11). **Dependencies already completed:** none **Constraints:** Use Poetry; repo name `voice-xform`; Python 3.11; keep docs concise but actionable. **Non\u2011Goals:** No code beyond scaffolding; no CI; no package layout yet. **Current Repository Snapshot** *(empty directory)* ``` (Empty) ``` **Acceptance Criteria (Definition of Done)** * `poetry install` succeeds on macOS & Windows. * `README.md` includes purpose, install instructions, and placeholder quickstart. * Running `poetry run python -V` prints Python 3.11.x. **Deliverables \u2014 Output Contract** (then paste the **Deliverables** list from the template) **Implementation Hints** * Use standard `.gitignore` for Python + macOS + Windows. * Include project metadata (name, version `0.1.0`, authors) in `pyproject.toml`. **Important Guardrails** * Do not add CI or tests yet. * Keep README succinct; add section headers as placeholders. --- ## \u2705 Example Instantiation #2 \u2014 S\u2011016 (Model registry & provider detection) **Story ID:** S\u2011016 **Story Title:** Model registry & provider detection **Story Text:** Implement `ml/runtime/onnx_loader.py` that chooses the best ONNX Runtime EP at runtime (TensorRT > DirectML >",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#4",
      "vector": {
        "example": 0.045267873021259265,
        "instantiation": 0.045267873021259265,
        "2": 0.045267873021259265,
        "s": 0.22633936510629632,
        "016": 0.09053574604251853,
        "model": 0.18107149208503706,
        "registry": 0.18107149208503706,
        "provider": 0.18107149208503706,
        "detection": 0.09053574604251853,
        "story": 0.1358036190637778,
        "id": 0.045267873021259265,
        "title": 0.045267873021259265,
        "text": 0.045267873021259265,
        "implement": 0.09053574604251853,
        "ml": 0.1358036190637778,
        "runtime": 0.18107149208503706,
        "onnx_loader": 0.09053574604251853,
        "py": 0.2716072381275556,
        "that": 0.09053574604251853,
        "chooses": 0.045267873021259265,
        "the": 0.18107149208503706,
        "best": 0.045267873021259265,
        "onnx": 0.045267873021259265,
        "ep": 0.1358036190637778,
        "at": 0.09053574604251853,
        "tensorrt": 0.045267873021259265,
        "directml": 0.045267873021259265,
        "cpu": 0.09053574604251853,
        "mps": 0.045267873021259265,
        "coreml": 0.045267873021259265,
        "on": 0.22633936510629632,
        "macos": 0.1358036190637778,
        "for": 0.09053574604251853,
        "paths": 0.045267873021259265,
        "versioning": 0.045267873021259265,
        "provide": 0.045267873021259265,
        "tests": 0.1358036190637778,
        "monkeypatch": 0.09053574604251853,
        "availability": 0.1358036190637778,
        "dependencies": 0.09053574604251853,
        "already": 0.045267873021259265,
        "completed": 0.045267873021259265,
        "004": 0.045267873021259265,
        "package": 0.045267873021259265,
        "layout": 0.045267873021259265,
        "002": 0.045267873021259265,
        "tooling": 0.045267873021259265,
        "003": 0.045267873021259265,
        "ci": 0.045267873021259265,
        "constraints": 0.045267873021259265,
        "no": 0.18107149208503706,
        "gpu": 0.045267873021259265,
        "specific": 0.045267873021259265,
        "imports": 0.045267873021259265,
        "module": 0.045267873021259265,
        "top": 0.045267873021259265,
        "level": 0.045267873021259265,
        "log": 0.045267873021259265,
        "chosen": 0.045267873021259265,
        "and": 0.18107149208503706,
        "fallbacks": 0.045267873021259265,
        "non": 0.045267873021259265,
        "goals": 0.045267873021259265,
        "real": 0.045267873021259265,
        "files": 0.09053574604251853,
        "yet": 0.045267873021259265,
        "inference": 0.045267873021259265,
        "calls": 0.045267873021259265,
        "current": 0.045267873021259265,
        "repository": 0.045267873021259265,
        "snapshot": 0.045267873021259265,
        "voice": 0.09053574604251853,
        "xform": 0.09053574604251853,
        "app": 0.045267873021259265,
        "core": 0.045267873021259265,
        "version": 0.09053574604251853,
        "__init__": 0.09053574604251853,
        "empty": 0.045267873021259265,
        "placeholder": 0.045267873021259265,
        "pyproject": 0.09053574604251853,
        "toml": 0.1358036190637778,
        "key": 0.045267873021259265,
        "relevant": 0.045267873021259265,
        "parts": 0.045267873021259265,
        "tool": 0.09053574604251853,
        "poetry": 0.09053574604251853,
        "name": 0.045267873021259265,
        "0": 0.1358036190637778,
        "1": 0.09053574604251853,
        "python": 0.045267873021259265,
        "3": 0.045267873021259265,
        "11": 0.045267873021259265,
        "onnxruntime": 0.09053574604251853,
        "18": 0.045267873021259265,
        "acceptance": 0.045267873021259265,
        "criteria": 0.045267873021259265,
        "definition": 0.045267873021259265,
        "of": 0.045267873021259265,
        "done": 0.045267873021259265,
        "select_providers": 0.045267873021259265,
        "returns": 0.045267873021259265,
        "an": 0.045267873021259265,
        "ordered": 0.045267873021259265,
        "list": 0.1358036190637778,
        "based": 0.045267873021259265,
        "platform": 0.09053574604251853,
        "logs": 0.045267873021259265,
        "contain": 0.045267873021259265,
        "selected": 0.045267873021259265,
        "reason": 0.045267873021259265,
        "fallback": 0.045267873021259265,
        "simulate": 0.045267873021259265,
        "get_available_providers": 0.045267873021259265,
        "assert": 0.045267873021259265,
        "selection": 0.045267873021259265,
        "order": 0.045267873021259265,
        "across": 0.045267873021259265,
        "windows": 0.09053574604251853,
        "linux": 0.045267873021259265,
        "mypy": 0.045267873021259265,
        "ruff": 0.045267873021259265,
        "pytest": 0.045267873021259265,
        "pass": 0.045267873021259265,
        "deliverables": 0.09053574604251853,
        "output": 0.045267873021259265,
        "contract": 0.045267873021259265,
        "then": 0.045267873021259265,
        "paste": 0.045267873021259265,
        "from": 0.045267873021259265,
        "template": 0.045267873021259265,
        "implementation": 0.045267873021259265,
        "hints": 0.045267873021259265,
        "detect": 0.045267873021259265,
        "os": 0.045267873021259265,
        "with": 0.045267873021259265,
        "system": 0.045267873021259265,
        "prefer": 0.045267873021259265,
        "tensorrtexecutionprovider": 0.045267873021259265,
        "nvidia": 0.045267873021259265,
        "dmlexecutionprovider": 0.045267873021259265,
        "coremlexecutionprovider": 0.045267873021259265,
        "or": 0.045267873021259265,
        "mpsexecutionprovider": 0.045267873021259265,
        "else": 0.045267873021259265,
        "expose": 0.045267873021259265,
        "a": 0.045267873021259265,
        "helper": 0.045267873021259265,
        "create_session": 0.045267873021259265,
        "path": 0.045267873021259265,
        "str": 0.09053574604251853,
        "preferred": 0.045267873021259265,
        "none": 0.045267873021259265,
        "inferencesession": 0.045267873021259265,
        "important": 0.045267873021259265,
        "guardrails": 0.045267873021259265,
        "actual": 0.045267873021259265
      },
      "text": "--- ## \u2705 Example Instantiation #2 \u2014 S\u2011016 (Model registry & provider detection) **Story ID:** S\u2011016 **Story Title:** Model registry & provider detection **Story Text:** Implement `ml/runtime/onnx_loader.py` that chooses the best ONNX Runtime EP at runtime (TensorRT > DirectML > CPU; MPS/CoreML on macOS). Implement `ml/registry.py` for model paths/versioning. Provide tests that monkeypatch provider availability. **Dependencies already completed:** S\u2011004 (package layout), S\u2011002 (tooling), S\u2011003 (CI) **Constraints:** No GPU\u2011specific imports at module top level. Log chosen EP and fallbacks. **Non\u2011Goals:** No real model files yet; no inference calls. **Current Repository Snapshot** ``` voice-xform/ app/ core/ version.py ml/ __init__.py runtime/ __init__.py registry.py # (empty placeholder) tests/ pyproject.toml ``` **Key files:** `pyproject.toml` (relevant parts) ```toml [tool.poetry] name = \"voice-xform\" version = \"0.1.0\" [tool.poetry.dependencies] python = \"^3.11\" onnxruntime = \"^1.18.0\" ``` **Acceptance Criteria (Definition of Done)** * `onnx_loader.select_providers()` returns an ordered provider list based on platform and availability. * Logs contain the selected EP and reason for fallback. * Tests simulate availability (monkeypatch `onnxruntime.get_available_providers`) and assert selection order across Windows/macOS/Linux. * mypy/ruff/pytest pass. **Deliverables \u2014 Output Contract** (then paste the **Deliverables** list from the template) **Implementation Hints** * Detect OS with `platform.system()`. * Prefer `\"TensorrtExecutionProvider\"` on NVIDIA, `\"DmlExecutionProvider\"` on Windows, `\"CoreMLExecutionProvider\"` or `\"MPSExecutionProvider\"` on macOS, else CPU. * Expose a helper `create_session(path: str, preferred: list[str] | None) -> InferenceSession`. **Important Guardrails** * No actual",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#5",
      "vector": {
        "template": 0.08971226080325131,
        "implementation": 0.04485613040162566,
        "hints": 0.04485613040162566,
        "detect": 0.04485613040162566,
        "os": 0.04485613040162566,
        "with": 0.08971226080325131,
        "platform": 0.08971226080325131,
        "system": 0.08971226080325131,
        "prefer": 0.04485613040162566,
        "tensorrtexecutionprovider": 0.04485613040162566,
        "on": 0.17942452160650263,
        "nvidia": 0.04485613040162566,
        "dmlexecutionprovider": 0.04485613040162566,
        "windows": 0.08971226080325131,
        "coremlexecutionprovider": 0.04485613040162566,
        "or": 0.08971226080325131,
        "mpsexecutionprovider": 0.04485613040162566,
        "macos": 0.08971226080325131,
        "else": 0.04485613040162566,
        "cpu": 0.04485613040162566,
        "expose": 0.04485613040162566,
        "a": 0.26913678240975397,
        "helper": 0.04485613040162566,
        "create_session": 0.04485613040162566,
        "path": 0.04485613040162566,
        "str": 0.08971226080325131,
        "preferred": 0.04485613040162566,
        "list": 0.04485613040162566,
        "none": 0.04485613040162566,
        "inferencesession": 0.04485613040162566,
        "important": 0.04485613040162566,
        "guardrails": 0.04485613040162566,
        "no": 0.08971226080325131,
        "actual": 0.04485613040162566,
        "model": 0.04485613040162566,
        "downloads": 0.04485613040162566,
        "global": 0.04485613040162566,
        "provider": 0.04485613040162566,
        "checks": 0.08971226080325131,
        "at": 0.04485613040162566,
        "import": 0.04485613040162566,
        "time": 0.08971226080325131,
        "run": 0.17942452160650263,
        "inside": 0.04485613040162566,
        "functions": 0.04485613040162566,
        "verification": 0.04485613040162566,
        "checklist": 0.04485613040162566,
        "you": 0.13456839120487699,
        "this": 0.04485613040162566,
        "after": 0.04485613040162566,
        "each": 0.08971226080325131,
        "story": 0.26913678240975397,
        "locally": 0.04485613040162566,
        "and": 0.3139929128113796,
        "produce": 0.04485613040162566,
        "these": 0.04485613040162566,
        "commands": 0.04485613040162566,
        "in": 0.13456839120487699,
        "the": 0.4485613040162566,
        "validation": 0.04485613040162566,
        "steps": 0.04485613040162566,
        "section": 0.08971226080325131,
        "bash": 0.04485613040162566,
        "make": 0.04485613040162566,
        "all": 0.04485613040162566,
        "confirm": 0.04485613040162566,
        "tests": 0.08971226080325131,
        "pass": 0.04485613040162566,
        "coverage": 0.04485613040162566,
        "for": 0.13456839120487699,
        "new": 0.04485613040162566,
        "code": 0.04485613040162566,
        "95": 0.04485613040162566,
        "spot": 0.04485613040162566,
        "check": 0.04485613040162566,
        "specific": 0.04485613040162566,
        "issues": 0.08971226080325131,
        "if": 0.13456839120487699,
        "touches": 0.04485613040162566,
        "features": 0.04485613040162566,
        "command": 0.04485613040162566,
        "review": 0.08971226080325131,
        "do": 0.04485613040162566,
        "pr": 0.04485613040162566,
        "of": 0.04485613040162566,
        "diff": 0.04485613040162566,
        "fix": 0.04485613040162566,
        "any": 0.04485613040162566,
        "find": 0.04485613040162566,
        "tips": 0.04485613040162566,
        "working": 0.04485613040162566,
        "always": 0.04485613040162566,
        "update": 0.04485613040162566,
        "current": 0.04485613040162566,
        "repository": 0.04485613040162566,
        "snapshot": 0.04485613040162566,
        "before": 0.04485613040162566,
        "so": 0.04485613040162566,
        "llm": 0.08971226080325131,
        "is": 0.13456839120487699,
        "grounded": 0.04485613040162566,
        "reality": 0.04485613040162566,
        "keep": 0.04485613040162566,
        "acceptance": 0.08971226080325131,
        "criteria": 0.08971226080325131,
        "crisp": 0.04485613040162566,
        "testable": 0.04485613040162566,
        "output": 0.04485613040162566,
        "contract": 0.04485613040162566,
        "ensures": 0.04485613040162566,
        "get": 0.04485613040162566,
        "git": 0.04485613040162566,
        "apply": 0.04485613040162566,
        "able": 0.04485613040162566,
        "patch": 0.04485613040162566,
        "full": 0.04485613040162566,
        "file": 0.04485613040162566,
        "contents": 0.04485613040162566,
        "commit": 0.04485613040162566,
        "message": 0.04485613040162566,
        "every": 0.04485613040162566,
        "ui": 0.08971226080325131,
        "heavy": 0.04485613040162566,
        "add": 0.04485613040162566,
        "screenshots": 0.04485613040162566,
        "state": 0.04485613040162566,
        "diagrams": 0.04485613040162566,
        "to": 0.13456839120487699,
        "context": 0.04485613040162566,
        "steer": 0.04485613040162566,
        "layout": 0.04485613040162566,
        "naming": 0.04485613040162566,
        "performance": 0.04485613040162566,
        "sensitive": 0.04485613040162566,
        "put": 0.04485613040162566,
        "explicit": 0.04485613040162566,
        "budgets": 0.04485613040162566,
        "into": 0.04485613040162566,
        "ask": 0.04485613040162566,
        "print": 0.04485613040162566,
        "measured": 0.04485613040162566,
        "timings": 0.04485613040162566
      },
      "text": "template) **Implementation Hints** * Detect OS with `platform.system()`. * Prefer `\"TensorrtExecutionProvider\"` on NVIDIA, `\"DmlExecutionProvider\"` on Windows, `\"CoreMLExecutionProvider\"` or `\"MPSExecutionProvider\"` on macOS, else CPU. * Expose a helper `create_session(path: str, preferred: list[str] | None) -> InferenceSession`. **Important Guardrails** * No actual model downloads. * No global provider checks at import time; run checks inside functions. --- ## \ud83e\uddea Verification Checklist (You run this after each story) Run locally and produce these commands in the **Validation Steps** section: ```bash make all ``` * Confirm tests pass and coverage for new code \u2265 95%. * On Windows/macOS, spot\u2011check for platform\u2011specific issues if the story touches system features. * Run the command /review and do a PR review of the diff. Fix any issues you find. --- ## \ud83d\udcdd Tips for Working With the Template * Always **update the \u201cCurrent Repository Snapshot\u201d** before each story so the LLM is grounded in reality. * Keep **Acceptance Criteria** crisp and testable. * The **Output Contract** ensures you get a `git apply`\u2011able patch, full file contents, tests, and a commit message \u2014 every time. * If a story is UI\u2011heavy, add screenshots or UI state diagrams to the **Story Context** section to steer layout and naming. * If a story is performance\u2011sensitive, put explicit budgets into **Acceptance Criteria** and ask the LLM to print measured timings in",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#6",
      "vector": {
        "story": 0.3849001794597505,
        "is": 0.19245008972987526,
        "ui": 0.19245008972987526,
        "heavy": 0.09622504486493763,
        "add": 0.09622504486493763,
        "screenshots": 0.09622504486493763,
        "or": 0.09622504486493763,
        "state": 0.09622504486493763,
        "diagrams": 0.09622504486493763,
        "to": 0.28867513459481287,
        "the": 0.28867513459481287,
        "context": 0.19245008972987526,
        "section": 0.09622504486493763,
        "steer": 0.09622504486493763,
        "layout": 0.09622504486493763,
        "and": 0.28867513459481287,
        "naming": 0.09622504486493763,
        "if": 0.09622504486493763,
        "a": 0.09622504486493763,
        "performance": 0.09622504486493763,
        "sensitive": 0.09622504486493763,
        "put": 0.09622504486493763,
        "explicit": 0.09622504486493763,
        "budgets": 0.09622504486493763,
        "into": 0.09622504486493763,
        "acceptance": 0.19245008972987526,
        "criteria": 0.19245008972987526,
        "ask": 0.09622504486493763,
        "llm": 0.09622504486493763,
        "print": 0.09622504486493763,
        "measured": 0.09622504486493763,
        "timings": 0.09622504486493763,
        "in": 0.19245008972987526,
        "test": 0.09622504486493763,
        "logs": 0.09622504486493763,
        "use": 0.09622504486493763,
        "this": 0.09622504486493763,
        "template": 0.09622504486493763,
        "verbatim": 0.09622504486493763,
        "for": 0.09622504486493763,
        "s": 0.19245008972987526,
        "001": 0.09622504486493763,
        "through": 0.09622504486493763,
        "044": 0.09622504486493763,
        "by": 0.09622504486493763,
        "swapping": 0.09622504486493763,
        "relevant": 0.09622504486493763,
        "snapshot": 0.09622504486493763
      },
      "text": "story is UI\u2011heavy, add screenshots or UI state diagrams to the **Story Context** section to steer layout and naming. * If a story is performance\u2011sensitive, put explicit budgets into **Acceptance Criteria** and ask the LLM to print measured timings in test logs. --- Use this template verbatim for S\u2011001 through S\u2011044 by swapping in the relevant **Story Context**, **Snapshot**, and **Acceptance Criteria**.",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/spec.md#0",
      "vector": {
        "intelligent": 0.06696495301824251,
        "readme": 0.2008948590547275,
        "generator": 0.06696495301824251,
        "architecture": 0.13392990603648502,
        "spec": 0.06696495301824251,
        "python": 0.13392990603648502,
        "local": 0.2008948590547275,
        "llm": 0.2008948590547275,
        "1": 0.06696495301824251,
        "purpose": 0.06696495301824251,
        "scope": 0.06696495301824251,
        "build": 0.13392990603648502,
        "a": 0.3348247650912125,
        "based": 0.06696495301824251,
        "system": 0.06696495301824251,
        "that": 0.06696495301824251,
        "analyzes": 0.06696495301824251,
        "git": 0.3348247650912125,
        "repository": 0.06696495301824251,
        "structure": 0.06696495301824251,
        "code": 0.06696495301824251,
        "dependencies": 0.06696495301824251,
        "then": 0.06696495301824251,
        "generates": 0.06696495301824251,
        "and": 0.13392990603648502,
        "maintains": 0.06696495301824251,
        "high": 0.13392990603648502,
        "quality": 0.06696495301824251,
        "md": 0.06696495301824251,
        "using": 0.06696495301824251,
        "it": 0.06696495301824251,
        "initializes": 0.06696495301824251,
        "repos": 0.06696495301824251,
        "with": 0.06696495301824251,
        "no": 0.06696495301824251,
        "docs": 0.2008948590547275,
        "keeps": 0.06696495301824251,
        "up": 0.06696495301824251,
        "to": 0.06696495301824251,
        "date": 0.06696495301824251,
        "on": 0.06696495301824251,
        "commits": 0.06696495301824251,
        "prs": 0.06696495301824251,
        "supports": 0.06696495301824251,
        "multiple": 0.06696495301824251,
        "languages": 0.06696495301824251,
        "project": 0.06696495301824251,
        "types": 0.06696495301824251,
        "via": 0.06696495301824251,
        "analyzers": 0.13392990603648502,
        "non": 0.06696495301824251,
        "goals": 0.06696495301824251,
        "for": 0.06696495301824251,
        "the": 0.06696495301824251,
        "poc": 0.06696495301824251,
        "multi": 0.06696495301824251,
        "repo": 0.13392990603648502,
        "orchestration": 0.06696495301824251,
        "full": 0.06696495301824251,
        "website": 0.06696495301824251,
        "api": 0.06696495301824251,
        "reference": 0.06696495301824251,
        "extraction": 0.06696495301824251,
        "beyond": 0.06696495301824251,
        "summaries": 0.06696495301824251,
        "cloud": 0.06696495301824251,
        "llms": 0.06696495301824251,
        "2": 0.06696495301824251,
        "level": 0.06696495301824251,
        "at": 0.06696495301824251,
        "glance": 0.06696495301824251,
        "events": 0.06696495301824251,
        "event": 0.06696495301824251,
        "sources": 0.06696495301824251,
        "cli": 0.06696495301824251,
        "commands": 0.06696495301824251,
        "hooks": 0.06696495301824251,
        "webhooks": 0.06696495301824251,
        "ci": 0.06696495301824251,
        "commit": 0.13392990603648502,
        "pr": 0.13392990603648502,
        "orchestr": 0.06696495301824251,
        "async": 0.06696495301824251,
        "task": 0.06696495301824251,
        "graph": 0.13392990603648502,
        "scanner": 0.06696495301824251,
        "doc": 0.06696495301824251,
        "store": 0.06696495301824251,
        "indexer": 0.06696495301824251,
        "language": 0.06696495301824251,
        "artifacts": 0.06696495301824251,
        "fs": 0.06696495301824251,
        "deps": 0.06696495301824251,
        "cache": 0.06696495301824251,
        "versions": 0.06696495301824251,
        "knowledge": 0.06696495301824251,
        "embeddings": 0.06696495301824251,
        "prompt": 0.06696495301824251,
        "builder": 0.06696495301824251,
        "templates": 0.06696495301824251,
        "rag": 0.06696495301824251,
        "runner": 0.06696495301824251,
        "llama": 0.06696495301824251,
        "cpp": 0.06696495301824251,
        "ollama": 0.06696495301824251,
        "post": 0.06696495301824251,
        "processor": 0.06696495301824251,
        "lint": 0.06696495301824251,
        "toc": 0.06696495301824251,
        "badges": 0.06696495301824251,
        "links": 0.06696495301824251,
        "publisher": 0.06696495301824251,
        "branch": 0.06696495301824251
      },
      "text": "# Intelligent README Generator \u2014 Architecture & Spec (Python, Local LLM) ## 1) Purpose & Scope Build a Python-based system that **analyzes a Git repository** (structure, code, dependencies), then **generates and maintains a high-quality README.md** using a **local LLM**. It initializes repos with no docs and **keeps docs up to date** on commits/PRs. Supports **multiple languages/project types** via analyzers. Non-goals (for the POC): multi-repo orchestration, full website docs, API reference extraction (beyond README summaries), cloud LLMs. --- ## 2) High-Level Architecture (at a glance) ``` \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 Git Events \u2502 Event Sources \u2502 CLI commands, Git hooks, Webhooks/CI (commit/PR) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Orchestr \u2502 (Async task graph) \u2514\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Repo Scanner\u2502 \u2502 Analyzers \u2502 \u2502 Doc Store \u2502 \u2502 + Indexer \u2502 \u2502 (Language, \u2502 \u2502 (Artifacts, \u2502 \u2502 (Git, FS) \u2502 \u2502 Build, Deps) \u2502 \u2502 Cache, \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 Versions) \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 Knowledge Graph \u2502 \u2502 \u2502 \u2502 & Embeddings \u2502<\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 Prompt Builder \u2502 (Templates + RAG) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 Local LLM Runner \u2502 (llama.cpp/Ollama) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25b6\u2502 Post-Processor \u2502 (lint, ToC, badges, links) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Git Publisher \u2502 (branch/PR/commit) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 ``` --- ##",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#1",
      "vector": {
        "rag": 0.053074489243427524,
        "local": 0.053074489243427524,
        "llm": 0.053074489243427524,
        "runner": 0.053074489243427524,
        "llama": 0.053074489243427524,
        "cpp": 0.053074489243427524,
        "ollama": 0.053074489243427524,
        "post": 0.053074489243427524,
        "processor": 0.053074489243427524,
        "lint": 0.053074489243427524,
        "toc": 0.053074489243427524,
        "badges": 0.053074489243427524,
        "links": 0.053074489243427524,
        "git": 0.10614897848685505,
        "publisher": 0.053074489243427524,
        "branch": 0.053074489243427524,
        "pr": 0.053074489243427524,
        "commit": 0.053074489243427524,
        "3": 0.2653724462171376,
        "components": 0.053074489243427524,
        "responsibilities": 0.053074489243427524,
        "1": 0.053074489243427524,
        "orchestrator": 0.053074489243427524,
        "coordinates": 0.053074489243427524,
        "end": 0.10614897848685505,
        "to": 0.2122979569737101,
        "pipelines": 0.053074489243427524,
        "init": 0.053074489243427524,
        "update": 0.10614897848685505,
        "regenerate": 0.10614897848685505,
        "computes": 0.053074489243427524,
        "change": 0.10614897848685505,
        "impact": 0.053074489243427524,
        "from": 0.10614897848685505,
        "diff": 0.053074489243427524,
        "decides": 0.053074489243427524,
        "whether": 0.053074489243427524,
        "full": 0.053074489243427524,
        "readme": 0.053074489243427524,
        "or": 0.10614897848685505,
        "patch": 0.053074489243427524,
        "sections": 0.053074489243427524,
        "schedules": 0.053074489243427524,
        "tasks": 0.053074489243427524,
        "and": 0.15922346773028256,
        "caches": 0.053074489243427524,
        "intermediate": 0.053074489243427524,
        "results": 0.053074489243427524,
        "reuses": 0.053074489243427524,
        "analyzer": 0.10614897848685505,
        "outputs": 0.053074489243427524,
        "docgen": 0.2122979569737101,
        "analyzers": 0.2653724462171376,
        "cache": 0.053074489243427524,
        "json": 0.2122979569737101,
        "invalidating": 0.053074489243427524,
        "entries": 0.053074489243427524,
        "when": 0.10614897848685505,
        "file": 0.053074489243427524,
        "hashes": 0.053074489243427524,
        "signatures": 0.053074489243427524,
        "emits": 0.053074489243427524,
        "structured": 0.053074489243427524,
        "logs": 0.053074489243427524,
        "info": 0.053074489243427524,
        "by": 0.053074489243427524,
        "default": 0.053074489243427524,
        "debug": 0.053074489243427524,
        "with": 0.053074489243427524,
        "verbose": 0.053074489243427524,
        "respects": 0.053074489243427524,
        "yml": 0.053074489243427524,
        "ci": 0.053074489243427524,
        "watched_globs": 0.053074489243427524,
        "skip": 0.053074489243427524,
        "unrelated": 0.053074489243427524,
        "diffs": 0.053074489243427524,
        "substitutes": 0.053074489243427524,
        "fail": 0.053074489243427524,
        "safe": 0.053074489243427524,
        "stubs": 0.053074489243427524,
        "generation": 0.053074489243427524,
        "fails": 0.053074489243427524,
        "supports": 0.053074489243427524,
        "dry": 0.10614897848685505,
        "run": 0.15922346773028256,
        "previews": 0.053074489243427524,
        "records": 0.053074489243427524,
        "scorecards": 0.053074489243427524,
        "for": 0.053074489243427524,
        "each": 0.053074489243427524,
        "under": 0.053074489243427524,
        "2": 0.053074489243427524,
        "repo": 0.15922346773028256,
        "scanner": 0.053074489243427524,
        "indexer": 0.053074489243427524,
        "walks": 0.053074489243427524,
        "builds": 0.053074489243427524,
        "normalized": 0.053074489243427524,
        "manifest": 0.053074489243427524,
        "files": 0.10614897848685505,
        "sizes": 0.053074489243427524,
        "language": 0.10614897848685505,
        "tags": 0.053074489243427524,
        "path": 0.053074489243427524,
        "roles": 0.053074489243427524,
        "src": 0.053074489243427524,
        "test": 0.10614897848685505,
        "docs": 0.053074489243427524,
        "examples": 0.053074489243427524,
        "build": 0.15922346773028256,
        "dependency": 0.10614897848685505,
        "manifests": 0.053074489243427524,
        "e": 0.053074489243427524,
        "g": 0.053074489243427524,
        "pom": 0.053074489243427524,
        "xml": 0.053074489243427524,
        "gradle": 0.10614897848685505,
        "package": 0.053074489243427524,
        "requirements": 0.053074489243427524,
        "txt": 0.053074489243427524,
        "pyproject": 0.053074489243427524,
        "toml": 0.10614897848685505,
        "go": 0.15922346773028256,
        "mod": 0.053074489243427524,
        "cargo": 0.10614897848685505,
        "gemfile": 0.053074489243427524,
        "composer": 0.053074489243427524,
        "entrypoints": 0.10614897848685505,
        "clis": 0.053074489243427524,
        "services": 0.053074489243427524,
        "coverage": 0.053074489243427524,
        "artifacts": 0.053074489243427524,
        "if": 0.053074489243427524,
        "available": 0.053074489243427524,
        "stores": 0.053074489243427524,
        "a": 0.053074489243427524,
        "per": 0.053074489243427524,
        "index": 0.053074489243427524,
        "speed": 0.053074489243427524,
        "future": 0.053074489243427524,
        "runs": 0.053074489243427524,
        "plugin": 0.053074489243427524,
        "based": 0.053074489243427524,
        "detect": 0.053074489243427524,
        "idioms": 0.053074489243427524,
        "frameworks": 0.053074489243427524,
        "spring": 0.053074489243427524,
        "boot": 0.053074489243427524,
        "fastapi": 0.053074489243427524,
        "node": 0.053074489243427524,
        "express": 0.053074489243427524,
        "react": 0.053074489243427524,
        "next": 0.053074489243427524,
        "js": 0.053074489243427524,
        "http": 0.053074489243427524,
        "rust": 0.053074489243427524,
        "bin": 0.053074489243427524,
        "lib": 0.053074489243427524,
        "maven": 0.053074489243427524,
        "setuptools": 0.053074489243427524,
        "poetry": 0.053074489243427524,
        "npm": 0.053074489243427524,
        "pnpm": 0.053074489243427524,
        "yarn": 0.053074489243427524,
        "extract": 0.053074489243427524,
        "top": 0.053074489243427524,
        "level": 0.053074489243427524
      },
      "text": "+ RAG) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 Local LLM Runner \u2502 (llama.cpp/Ollama) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25b6\u2502 Post-Processor \u2502 (lint, ToC, badges, links) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Git Publisher \u2502 (branch/PR/commit) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 ``` --- ## 3) Components & Responsibilities ### 3.1 Orchestrator * Coordinates end-to-end pipelines (init, update, regenerate). * Computes *change impact* from Git diff; decides whether to regenerate full README or patch sections. * Schedules tasks and caches intermediate results. * Reuses analyzer outputs from `.docgen/analyzers/cache.json`, invalidating entries when file hashes or analyzer signatures change. * Emits structured logs (info by default, debug with `--verbose`), respects `.docgen.yml` `ci.watched_globs` to skip unrelated diffs, and substitutes fail-safe stubs when generation fails. * Supports dry-run previews (`docgen update --dry-run`) and records scorecards for each run under `.docgen/`. ### 3.2 Repo Scanner & Indexer * Walks repo; builds normalized manifest: * Files, sizes, language tags, path roles (src/test/docs/examples). * Build files & dependency manifests (e.g., `pom.xml`, `build.gradle`, `package.json`, `requirements.txt`, `pyproject.toml`, `go.mod`, `Cargo.toml`, `Gemfile`, `composer.json`). * Entrypoints (CLIs, services), test coverage artifacts if available. * Stores a per-repo index (JSON) to speed future runs. ### 3.3 Analyzers (Plugin-based) * **Language analyzers** (detect idioms, entrypoints, frameworks: Spring Boot, FastAPI, Node/Express, React, Next.js, Go HTTP, Rust bin/lib). * **Build analyzers** (Maven/Gradle, setuptools/Poetry, npm/pnpm/yarn, Go, Cargo). * **Dependency analyzers** (extract top-level",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#2",
      "vector": {
        "index": 0.0536828127095019,
        "json": 0.0536828127095019,
        "to": 0.1073656254190038,
        "speed": 0.0536828127095019,
        "future": 0.0536828127095019,
        "runs": 0.0536828127095019,
        "3": 0.2147312508380076,
        "analyzers": 0.3220968762570114,
        "plugin": 0.0536828127095019,
        "based": 0.0536828127095019,
        "language": 0.0536828127095019,
        "detect": 0.0536828127095019,
        "idioms": 0.0536828127095019,
        "entrypoints": 0.0536828127095019,
        "frameworks": 0.0536828127095019,
        "spring": 0.1073656254190038,
        "boot": 0.1073656254190038,
        "fastapi": 0.1073656254190038,
        "node": 0.1073656254190038,
        "express": 0.0536828127095019,
        "react": 0.0536828127095019,
        "next": 0.0536828127095019,
        "js": 0.0536828127095019,
        "go": 0.1073656254190038,
        "http": 0.0536828127095019,
        "rust": 0.0536828127095019,
        "bin": 0.0536828127095019,
        "lib": 0.0536828127095019,
        "build": 0.1073656254190038,
        "maven": 0.0536828127095019,
        "gradle": 0.0536828127095019,
        "setuptools": 0.0536828127095019,
        "poetry": 0.0536828127095019,
        "npm": 0.0536828127095019,
        "pnpm": 0.0536828127095019,
        "yarn": 0.0536828127095019,
        "cargo": 0.0536828127095019,
        "dependency": 0.0536828127095019,
        "extract": 0.0536828127095019,
        "top": 0.1073656254190038,
        "level": 0.0536828127095019,
        "libs": 0.0536828127095019,
        "notable": 0.0536828127095019,
        "transitive": 0.0536828127095019,
        "categories": 0.0536828127095019,
        "entrypoint": 0.0536828127095019,
        "infer": 0.0536828127095019,
        "run": 0.0536828127095019,
        "commands": 0.0536828127095019,
        "for": 0.1073656254190038,
        "django": 0.0536828127095019,
        "scripts": 0.1073656254190038,
        "pattern": 0.0536828127095019,
        "monorepo": 0.0536828127095019,
        "layout": 0.0536828127095019,
        "ci": 0.0536828127095019,
        "cd": 0.0536828127095019,
        "containerization": 0.0536828127095019,
        "k8s": 0.0536828127095019,
        "heuristics": 0.0536828127095019,
        "structure": 0.0536828127095019,
        "analyzer": 0.1610484381285057,
        "module": 0.0536828127095019,
        "topology": 0.0536828127095019,
        "detected": 0.0536828127095019,
        "entities": 0.1073656254190038,
        "dtos": 0.0536828127095019,
        "api": 0.0536828127095019,
        "endpoint": 0.0536828127095019,
        "sequences": 0.0536828127095019,
        "service": 0.0536828127095019,
        "interactions": 0.0536828127095019,
        "tree": 0.0536828127095019,
        "sitter": 0.0536828127095019,
        "symbol": 0.0536828127095019,
        "python": 0.0536828127095019,
        "java": 0.0536828127095019,
        "typescript": 0.0536828127095019,
        "extracts": 0.0536828127095019,
        "functions": 0.0536828127095019,
        "classes": 0.0536828127095019,
        "when": 0.0536828127095019,
        "parsers": 0.0536828127095019,
        "available": 0.0536828127095019,
        "and": 0.2147312508380076,
        "degrades": 0.0536828127095019,
        "gracefully": 0.0536828127095019,
        "otherwise": 0.0536828127095019,
        "each": 0.0536828127095019,
        "returns": 0.0536828127095019,
        "signals": 0.1073656254190038,
        "key": 0.1073656254190038,
        "facts": 0.0536828127095019,
        "the": 0.1073656254190038,
        "knowledge": 0.1073656254190038,
        "graph": 0.1610484381285057,
        "4": 0.0536828127095019,
        "embeddings": 0.1073656254190038,
        "rag": 0.0536828127095019,
        "of": 0.1073656254190038,
        "repo": 0.1073656254190038,
        "modules": 0.0536828127095019,
        "packages": 0.0536828127095019,
        "services": 0.0536828127095019,
        "configs": 0.0536828127095019,
        "tests": 0.0536828127095019,
        "docs": 0.1073656254190038,
        "lightweight": 0.0536828127095019,
        "embedding": 0.0536828127095019,
        "store": 0.0536828127095019,
        "e": 0.0536828127095019,
        "g": 0.0536828127095019,
        "faiss": 0.0536828127095019,
        "in": 0.0536828127095019,
        "memory": 0.0536828127095019,
        "chunks": 0.0536828127095019,
        "code": 0.0536828127095019,
        "comments": 0.0536828127095019,
        "readme": 0.1073656254190038,
        "fragments": 0.0536828127095019,
        "changelog": 0.0536828127095019,
        "issues": 0.0536828127095019,
        "optional": 0.0536828127095019,
        "commit": 0.0536828127095019,
        "messages": 0.1073656254190038,
        "provides": 0.0536828127095019,
        "context": 0.1073656254190038,
        "retrieval": 0.0536828127095019,
        "prompt": 0.1073656254190038,
        "building": 0.0536828127095019,
        "k": 0.0536828127095019,
        "by": 0.0536828127095019,
        "section": 0.1610484381285057,
        "persists": 0.0536828127095019,
        "under": 0.0536828127095019,
        "docgen": 0.0536828127095019,
        "refreshing": 0.0536828127095019,
        "only": 0.0536828127095019,
        "files": 0.0536828127095019,
        "whose": 0.0536828127095019,
        "hashes": 0.0536828127095019,
        "changed": 0.0536828127095019,
        "5": 0.0536828127095019,
        "builder": 0.0536828127095019,
        "aware": 0.0536828127095019,
        "jinja2": 0.0536828127095019,
        "templates": 0.0536828127095019,
        "with": 0.1073656254190038,
        "guardrails": 0.0536828127095019,
        "project": 0.0536828127095019,
        "intro": 0.0536828127095019,
        "features": 0.0536828127095019,
        "architecture": 0.0536828127095019,
        "overview": 0.0536828127095019,
        "quick": 0.0536828127095019,
        "start": 0.0536828127095019,
        "configuration": 0.0536828127095019,
        "test": 0.0536828127095019,
        "deployment": 0.0536828127095019,
        "troubleshooting": 0.0536828127095019,
        "faq": 0.0536828127095019,
        "roadmap": 0.0536828127095019,
        "contribution": 0.0536828127095019,
        "license": 0.0536828127095019,
        "badges": 0.0536828127095019,
        "dynamically": 0.0536828127095019,
        "injects": 0.0536828127095019,
        "retrieved": 0.0536828127095019,
        "per": 0.0536828127095019,
        "produces": 0.0536828127095019,
        "llm": 0.0536828127095019,
        "ready": 0.0536828127095019,
        "structured": 0.0536828127095019,
        "prompts": 0.0536828127095019,
        "system": 0.0536828127095019,
        "user": 0.0536828127095019,
        "token": 0.0536828127095019,
        "budgets": 0.0536828127095019,
        "honours": 0.0536828127095019,
        "style": 0.0536828127095019,
        "presets": 0.0536828127095019,
        "concise": 0.0536828127095019,
        "trims": 0.0536828127095019,
        "list": 0.0536828127095019,
        "heavy": 0.0536828127095019,
        "sections": 0.0536828127095019
      },
      "text": "index (JSON) to speed future runs. ### 3.3 Analyzers (Plugin-based) * **Language analyzers** (detect idioms, entrypoints, frameworks: Spring Boot, FastAPI, Node/Express, React, Next.js, Go HTTP, Rust bin/lib). * **Build analyzers** (Maven/Gradle, setuptools/Poetry, npm/pnpm/yarn, Go, Cargo). * **Dependency analyzers** (extract top-level libs & notable transitive categories). * **Entrypoint analyzers** (infer run commands for FastAPI, Django, Spring Boot, Node scripts). * **Pattern analyzers** (monorepo layout, CI/CD, containerization/K8s heuristics). * **Structure analyzer** (module topology, detected entities/DTOs, API endpoint sequences, service interactions). * **Tree-sitter symbol analyzer** (Python/Java/TypeScript) extracts functions/classes when parsers available and degrades gracefully otherwise. * Each analyzer returns **Signals** (key facts) to the knowledge graph. ### 3.4 Knowledge Graph & Embeddings (RAG) * Graph of Repo entities: modules, packages, services, scripts, configs, tests, docs. * Lightweight embedding store (e.g., `faiss`/in-memory) of **chunks**: code comments, README fragments, `docs/`, `CHANGELOG`, issues (optional), commit messages. * Provides **context retrieval** for prompt building (top-k by section) and persists embeddings under `.docgen/`, refreshing only the files whose hashes changed. ### 3.5 Prompt Builder * **Section-aware** Jinja2 templates with **guardrails**: * Project intro, key features, architecture overview, quick start, configuration, build/test, deployment, troubleshooting, FAQ, roadmap, contribution, license, badges. * Dynamically injects repo signals and retrieved context per section. * Produces **LLM-ready structured prompts** (system + user messages) with token budgets and honours `readme.style` presets (`concise` trims list-heavy sections,",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#3",
      "vector": {
        "start": 0.09690031662230184,
        "configuration": 0.09690031662230184,
        "build": 0.04845015831115092,
        "test": 0.04845015831115092,
        "deployment": 0.04845015831115092,
        "troubleshooting": 0.04845015831115092,
        "faq": 0.04845015831115092,
        "roadmap": 0.04845015831115092,
        "contribution": 0.04845015831115092,
        "license": 0.04845015831115092,
        "badges": 0.09690031662230184,
        "dynamically": 0.04845015831115092,
        "injects": 0.09690031662230184,
        "repo": 0.04845015831115092,
        "signals": 0.04845015831115092,
        "and": 0.4360514248003583,
        "retrieved": 0.04845015831115092,
        "context": 0.09690031662230184,
        "per": 0.04845015831115092,
        "section": 0.14535047493345277,
        "produces": 0.04845015831115092,
        "llm": 0.09690031662230184,
        "ready": 0.04845015831115092,
        "structured": 0.09690031662230184,
        "prompts": 0.04845015831115092,
        "system": 0.04845015831115092,
        "user": 0.04845015831115092,
        "messages": 0.04845015831115092,
        "with": 0.14535047493345277,
        "token": 0.04845015831115092,
        "budgets": 0.04845015831115092,
        "honours": 0.04845015831115092,
        "readme": 0.14535047493345277,
        "style": 0.14535047493345277,
        "presets": 0.04845015831115092,
        "concise": 0.04845015831115092,
        "trims": 0.04845015831115092,
        "list": 0.04845015831115092,
        "heavy": 0.04845015831115092,
        "sections": 0.14535047493345277,
        "comprehensive": 0.04845015831115092,
        "keeps": 0.04845015831115092,
        "full": 0.04845015831115092,
        "detail": 0.04845015831115092,
        "detected": 0.09690031662230184,
        "entrypoints": 0.04845015831115092,
        "infrastructure": 0.04845015831115092,
        "patterns": 0.04845015831115092,
        "into": 0.04845015831115092,
        "quick": 0.04845015831115092,
        "guidance": 0.04845015831115092,
        "e": 0.04845015831115092,
        "g": 0.04845015831115092,
        "uvicorn": 0.04845015831115092,
        "docker": 0.14535047493345277,
        "compose": 0.04845015831115092,
        "up": 0.04845015831115092,
        "generates": 0.04845015831115092,
        "mermaid": 0.04845015831115092,
        "sequence": 0.04845015831115092,
        "diagrams": 0.04845015831115092,
        "highlighting": 0.04845015831115092,
        "request": 0.04845015831115092,
        "flow": 0.04845015831115092,
        "across": 0.04845015831115092,
        "services": 0.04845015831115092,
        "when": 0.09690031662230184,
        "api": 0.09690031662230184,
        "endpoints": 0.04845015831115092,
        "are": 0.04845015831115092,
        "3": 0.09690031662230184,
        "6": 0.04845015831115092,
        "local": 0.14535047493345277,
        "runner": 0.14535047493345277,
        "pluggable": 0.04845015831115092,
        "runtime": 0.04845015831115092,
        "that": 0.04845015831115092,
        "prefers": 0.04845015831115092,
        "the": 0.04845015831115092,
        "model": 0.14535047493345277,
        "http": 0.14535047493345277,
        "endpoint": 0.04845015831115092,
        "host": 0.04845015831115092,
        "localhost": 0.04845015831115092,
        "12434": 0.04845015831115092,
        "engines": 0.09690031662230184,
        "v1": 0.09690031662230184,
        "container": 0.04845015831115092,
        "internal": 0.14535047493345277,
        "environment": 0.04845015831115092,
        "overrides": 0.04845015831115092,
        "an": 0.04845015831115092,
        "ollama": 0.04845015831115092,
        "cli": 0.09690031662230184,
        "fallback": 0.04845015831115092,
        "defaults": 0.04845015831115092,
        "to": 0.14535047493345277,
        "ai": 0.04845015831115092,
        "smollm2": 0.04845015831115092,
        "360m": 0.04845015831115092,
        "q4_k_m": 0.04845015831115092,
        "but": 0.04845015831115092,
        "respects": 0.04845015831115092,
        "docgen": 0.09690031662230184,
        "yml": 0.04845015831115092,
        "openai": 0.04845015831115092,
        "compatible": 0.04845015831115092,
        "env": 0.04845015831115092,
        "vars": 0.04845015831115092,
        "for": 0.14535047493345277,
        "alternate": 0.04845015831115092,
        "weights": 0.04845015831115092,
        "keys": 0.04845015831115092,
        "supports": 0.04845015831115092,
        "function": 0.04845015831115092,
        "calling": 0.04845015831115092,
        "outputs": 0.04845015831115092,
        "available": 0.04845015831115092,
        "streaming": 0.04845015831115092,
        "decode": 0.04845015831115092,
        "stop": 0.04845015831115092,
        "tokens": 0.04845015831115092,
        "by": 0.09690031662230184,
        "generation": 0.04845015831115092,
        "stay": 0.09690031662230184,
        "within": 0.04845015831115092,
        "limits": 0.04845015831115092,
        "validates": 0.09690031662230184,
        "ensure": 0.04845015831115092,
        "runners": 0.04845015831115092,
        "loopback": 0.04845015831115092,
        "hosts": 0.04845015831115092,
        "only": 0.09690031662230184,
        "includes": 0.04845015831115092,
        "a": 0.09690031662230184,
        "llamacpprunner": 0.04845015831115092,
        "adapter": 0.04845015831115092,
        "llama": 0.04845015831115092,
        "cpp": 0.04845015831115092,
        "binaries": 0.04845015831115092,
        "enforcing": 0.04845015831115092,
        "filesystem": 0.04845015831115092,
        "backed": 0.04845015831115092,
        "paths": 0.04845015831115092,
        "execution": 0.04845015831115092,
        "7": 0.04845015831115092,
        "post": 0.04845015831115092,
        "processor": 0.04845015831115092,
        "lints": 0.04845015831115092,
        "markdown": 0.04845015831115092,
        "builds": 0.04845015831115092,
        "toc": 0.04845015831115092,
        "adds": 0.04845015831115092,
        "shields": 0.04845015831115092,
        "normalizes": 0.04845015831115092,
        "heading": 0.04845015831115092,
        "hierarchy": 0.04845015831115092,
        "enforces": 0.04845015831115092,
        "guide": 0.04845015831115092,
        "contract": 0.04845015831115092,
        "required": 0.04845015831115092,
        "links": 0.04845015831115092,
        "relative": 0.04845015831115092,
        "absolute": 0.04845015831115092,
        "code": 0.04845015831115092,
        "block": 0.04845015831115092,
        "languages": 0.04845015831115092,
        "line": 0.04845015831115092,
        "length": 0.04845015831115092,
        "computes": 0.04845015831115092,
        "diff": 0.04845015831115092,
        "aware": 0.04845015831115092,
        "updates": 0.04845015831115092,
        "modifies": 0.04845015831115092,
        "impacted": 0.04845015831115092,
        "changes": 0.04845015831115092,
        "persists": 0.04845015831115092,
        "scorecard": 0.09690031662230184,
        "json": 0.04845015831115092
      },
      "text": "start, configuration, build/test, deployment, troubleshooting, FAQ, roadmap, contribution, license, badges. * Dynamically injects repo signals and retrieved context per section. * Produces **LLM-ready structured prompts** (system + user messages) with token budgets and honours `readme.style` presets (`concise` trims list-heavy sections, `comprehensive` keeps full detail). * Injects detected entrypoints and infrastructure patterns into Quick Start guidance (e.g., `uvicorn ...`, `docker compose up`). * Generates Mermaid sequence diagrams highlighting request flow across services when API endpoints are detected. ### 3.6 Local LLM Runner * Pluggable runtime that prefers the Docker Model Runner HTTP endpoint (host `http://localhost:12434/engines/v1`, container `http://model-runner.docker.internal/engines/v1`) with environment overrides and an `ollama` CLI fallback. * Defaults to `ai/smollm2:360M-Q4_K_M` but respects `.docgen.yml` and OpenAI-compatible env vars for alternate weights and API keys. * Supports **function calling style** for structured outputs when available. * Streaming decode with stop tokens; **section-by-section** generation to stay within context limits. * Validates configuration to ensure runners stay local (loopback/`*.internal` hosts only). * Includes a `LlamaCppRunner` adapter for local `llama.cpp` binaries, enforcing filesystem-backed model paths and CLI execution. ### 3.7 Post-Processor * Lints Markdown, builds ToC, adds shields/badges, normalizes heading hierarchy. * Enforces internal style guide and **README contract** (required sections). * Validates links (relative/absolute), code block languages, and line length. * Computes **diff-aware updates**: only modifies sections impacted by changes. * Persists a README scorecard (`.docgen/scorecard.json`)",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#4",
      "vector": {
        "shields": 0.04339630366027462,
        "badges": 0.08679260732054923,
        "normalizes": 0.08679260732054923,
        "heading": 0.04339630366027462,
        "hierarchy": 0.04339630366027462,
        "enforces": 0.04339630366027462,
        "internal": 0.04339630366027462,
        "style": 0.04339630366027462,
        "guide": 0.04339630366027462,
        "and": 0.6075482512438447,
        "readme": 0.13018891098082386,
        "contract": 0.04339630366027462,
        "required": 0.04339630366027462,
        "sections": 0.17358521464109847,
        "validates": 0.04339630366027462,
        "links": 0.04339630366027462,
        "relative": 0.04339630366027462,
        "absolute": 0.04339630366027462,
        "code": 0.04339630366027462,
        "block": 0.04339630366027462,
        "languages": 0.04339630366027462,
        "line": 0.04339630366027462,
        "length": 0.04339630366027462,
        "computes": 0.04339630366027462,
        "diff": 0.04339630366027462,
        "aware": 0.04339630366027462,
        "updates": 0.04339630366027462,
        "only": 0.04339630366027462,
        "modifies": 0.04339630366027462,
        "impacted": 0.04339630366027462,
        "by": 0.04339630366027462,
        "changes": 0.08679260732054923,
        "persists": 0.04339630366027462,
        "a": 0.13018891098082386,
        "scorecard": 0.08679260732054923,
        "docgen": 0.2169815183013731,
        "json": 0.17358521464109847,
        "capturing": 0.08679260732054923,
        "coverage": 0.08679260732054923,
        "quick": 0.04339630366027462,
        "start": 0.04339630366027462,
        "health": 0.04339630366027462,
        "link": 0.08679260732054923,
        "results": 0.04339630366027462,
        "adds": 0.04339630366027462,
        "build": 0.04339630366027462,
        "license": 0.04339630366027462,
        "with": 0.13018891098082386,
        "safe": 0.08679260732054923,
        "defaults": 0.04339630366027462,
        "reports": 0.04339630366027462,
        "warnings": 0.04339630366027462,
        "during": 0.04339630366027462,
        "post": 0.04339630366027462,
        "processing": 0.04339630366027462,
        "3": 0.13018891098082386,
        "8": 0.04339630366027462,
        "validation": 0.17358521464109847,
        "layer": 0.04339630366027462,
        "runs": 0.08679260732054923,
        "after": 0.04339630366027462,
        "section": 0.08679260732054923,
        "rendering": 0.04339630366027462,
        "before": 0.04339630366027462,
        "linting": 0.04339630366027462,
        "publishing": 0.04339630366027462,
        "to": 0.04339630366027462,
        "ensure": 0.04339630366027462,
        "generated": 0.08679260732054923,
        "claims": 0.04339630366027462,
        "are": 0.04339630366027462,
        "grounded": 0.04339630366027462,
        "analyzer": 0.08679260732054923,
        "signals": 0.04339630366027462,
        "metadata": 0.04339630366027462,
        "retrieved": 0.04339630366027462,
        "context": 0.04339630366027462,
        "into": 0.04339630366027462,
        "an": 0.04339630366027462,
        "evidence": 0.13018891098082386,
        "index": 0.04339630366027462,
        "used": 0.04339630366027462,
        "for": 0.13018891098082386,
        "token": 0.04339630366027462,
        "overlap": 0.04339630366027462,
        "checks": 0.04339630366027462,
        "default": 0.04339630366027462,
        "nohallucinationvalidator": 0.04339630366027462,
        "rejects": 0.04339630366027462,
        "sentences": 0.04339630366027462,
        "lacking": 0.04339630366027462,
        "supporting": 0.04339630366027462,
        "replaces": 0.04339630366027462,
        "offending": 0.04339630366027462,
        "fail": 0.04339630366027462,
        "stubs": 0.04339630366027462,
        "raises": 0.04339630366027462,
        "actionable": 0.04339630366027462,
        "errors": 0.04339630366027462,
        "writes": 0.04339630366027462,
        "validator": 0.04339630366027462,
        "status": 0.04339630366027462,
        "issues": 0.04339630366027462,
        "summaries": 0.04339630366027462,
        "auditability": 0.04339630366027462,
        "respects": 0.04339630366027462,
        "yml": 0.04339630366027462,
        "no_hallucination": 0.04339630366027462,
        "toggle": 0.04339630366027462,
        "docgen_validation_no_hallucination": 0.04339630366027462,
        "environment": 0.04339630366027462,
        "override": 0.04339630366027462,
        "cli": 0.04339630366027462,
        "skip": 0.04339630366027462,
        "flag": 0.04339630366027462,
        "one": 0.04339630366027462,
        "off": 0.04339630366027462,
        "bypasses": 0.04339630366027462,
        "9": 0.04339630366027462,
        "doc": 0.04339630366027462,
        "store": 0.04339630366027462,
        "artifacts": 0.08679260732054923,
        "versions": 0.04339630366027462,
        "keeps": 0.04339630366027462,
        "drafts": 0.04339630366027462,
        "logs": 0.04339630366027462,
        "prompts": 0.04339630366027462,
        "inputs": 0.04339630366027462,
        "outputs": 0.04339630366027462,
        "diffs": 0.04339630366027462,
        "under": 0.04339630366027462,
        "per": 0.04339630366027462,
        "repo": 0.04339630366027462,
        "supports": 0.04339630366027462,
        "rollback": 0.04339630366027462,
        "regression": 0.04339630366027462,
        "testing": 0.04339630366027462,
        "via": 0.04339630366027462,
        "golden": 0.04339630366027462,
        "readmes": 0.04339630366027462,
        "stores": 0.04339630366027462,
        "embedding": 0.04339630366027462,
        "cache": 0.08679260732054923,
        "embeddings": 0.04339630366027462,
        "analyzers": 0.04339630366027462,
        "schema": 0.04339630366027462,
        "versioning": 0.04339630366027462,
        "so": 0.04339630366027462,
        "subsequent": 0.04339630366027462,
        "reuse": 0.04339630366027462,
        "work": 0.04339630366027462,
        "when": 0.04339630366027462,
        "file": 0.04339630366027462,
        "hashes": 0.04339630366027462,
        "remain": 0.04339630366027462,
        "unchanged": 0.04339630366027462,
        "10": 0.04339630366027462,
        "git": 0.04339630366027462,
        "publisher": 0.04339630366027462,
        "creates": 0.04339630366027462,
        "branch": 0.04339630366027462,
        "e": 0.04339630366027462,
        "g": 0.04339630366027462,
        "update": 0.04339630366027462,
        "yyyymmdd": 0.04339630366027462,
        "pr": 0.08679260732054923,
        "body": 0.04339630366027462,
        "explains": 0.04339630366027462,
        "detected": 0.04339630366027462,
        "what": 0.04339630366027462,
        "were": 0.04339630366027462,
        "updated": 0.04339630366027462,
        "can": 0.04339630366027462,
        "commit": 0.04339630366027462
      },
      "text": "shields/badges, normalizes heading hierarchy. * Enforces internal style guide and **README contract** (required sections). * Validates links (relative/absolute), code block languages, and line length. * Computes **diff-aware updates**: only modifies sections impacted by changes. * Persists a README scorecard (`.docgen/scorecard.json`) capturing coverage, quick start health, and link results. * Adds build/coverage/license badges with safe defaults and reports link warnings during post-processing. ### 3.8 Validation Layer * Runs after section rendering and before linting/publishing to ensure generated claims are grounded. * Normalizes analyzer signals, section metadata, and retrieved context into an **Evidence Index** used for token overlap checks. * Default `NoHallucinationValidator` rejects sentences lacking supporting evidence, replaces offending sections with fail-safe stubs, and raises actionable errors. * Writes `.docgen/validation.json` capturing validator status, issues, and evidence summaries for auditability. * Respects `.docgen.yml` `validation.no_hallucination` toggle, `DOCGEN_VALIDATION_NO_HALLUCINATION` environment override, and CLI `--skip-validation` flag for one-off bypasses. ### 3.9 Doc Store (Artifacts & Versions) * Keeps generated drafts, logs, prompts, inputs/outputs, and diffs under `.docgen/` per repo. * Supports rollback and regression testing via \u201cgolden\u201d READMEs. * Stores embedding cache (`embeddings.json`) and analyzer artifacts (`analyzers/cache.json`) with schema versioning so subsequent runs reuse work when file hashes remain unchanged. ### 3.10 Git Publisher * Creates a branch (e.g., `docgen/readme-update-YYYYMMDD`) and a PR. * PR body explains detected changes and what sections were updated. * Can commit",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#5",
      "vector": {
        "with": 0.0746913686973271,
        "schema": 0.03734568434866355,
        "versioning": 0.03734568434866355,
        "so": 0.03734568434866355,
        "subsequent": 0.03734568434866355,
        "runs": 0.03734568434866355,
        "reuse": 0.03734568434866355,
        "work": 0.03734568434866355,
        "when": 0.0746913686973271,
        "file": 0.03734568434866355,
        "hashes": 0.03734568434866355,
        "remain": 0.03734568434866355,
        "unchanged": 0.03734568434866355,
        "3": 0.0746913686973271,
        "10": 0.03734568434866355,
        "git": 0.03734568434866355,
        "publisher": 0.03734568434866355,
        "creates": 0.03734568434866355,
        "a": 0.0746913686973271,
        "branch": 0.03734568434866355,
        "e": 0.0746913686973271,
        "g": 0.0746913686973271,
        "docgen": 0.0746913686973271,
        "readme": 0.03734568434866355,
        "update": 0.0746913686973271,
        "yyyymmdd": 0.03734568434866355,
        "and": 0.18672842174331777,
        "pr": 0.0746913686973271,
        "body": 0.03734568434866355,
        "explains": 0.03734568434866355,
        "detected": 0.03734568434866355,
        "changes": 0.03734568434866355,
        "what": 0.03734568434866355,
        "sections": 0.03734568434866355,
        "were": 0.03734568434866355,
        "updated": 0.03734568434866355,
        "can": 0.03734568434866355,
        "commit": 0.03734568434866355,
        "directly": 0.03734568434866355,
        "configurable": 0.03734568434866355,
        "on": 0.03734568434866355,
        "init": 0.0746913686973271,
        "for": 0.1493827373946542,
        "empty": 0.03734568434866355,
        "repos": 0.03734568434866355,
        "applies": 0.03734568434866355,
        "labels": 0.03734568434866355,
        "docs": 0.0746913686973271,
        "auto": 0.03734568434866355,
        "updates": 0.03734568434866355,
        "existing": 0.03734568434866355,
        "prs": 0.03734568434866355,
        "configured": 0.03734568434866355,
        "11": 0.03734568434866355,
        "service": 0.1493827373946542,
        "mode": 0.03734568434866355,
        "fastapi": 0.0746913686973271,
        "app": 0.03734568434866355,
        "exposes": 0.03734568434866355,
        "post": 0.03734568434866355,
        "endpoints": 0.03734568434866355,
        "plus": 0.03734568434866355,
        "health": 0.03734568434866355,
        "readiness": 0.03734568434866355,
        "reuses": 0.03734568434866355,
        "the": 0.11203705304599065,
        "orchestrator": 0.03734568434866355,
        "dependency": 0.03734568434866355,
        "executes": 0.03734568434866355,
        "operations": 0.03734568434866355,
        "in": 0.03734568434866355,
        "thread": 0.03734568434866355,
        "pools": 0.03734568434866355,
        "to": 0.03734568434866355,
        "keep": 0.03734568434866355,
        "event": 0.03734568434866355,
        "loop": 0.03734568434866355,
        "responsive": 0.03734568434866355,
        "cli": 0.0746913686973271,
        "host": 0.03734568434866355,
        "0": 0.1493827373946542,
        "port": 0.03734568434866355,
        "8000": 0.03734568434866355,
        "boots": 0.03734568434866355,
        "authentication": 0.03734568434866355,
        "hooks": 0.03734568434866355,
        "ready": 0.03734568434866355,
        "future": 0.03734568434866355,
        "hardening": 0.03734568434866355,
        "error": 0.03734568434866355,
        "handlers": 0.03734568434866355,
        "surface": 0.03734568434866355,
        "actionable": 0.03734568434866355,
        "json": 0.03734568434866355,
        "detail": 0.0746913686973271,
        "field": 0.03734568434866355,
        "common": 0.03734568434866355,
        "runtime": 0.03734568434866355,
        "issues": 0.03734568434866355,
        "4": 0.03734568434866355,
        "data": 0.03734568434866355,
        "model": 0.03734568434866355,
        "python": 0.0746913686973271,
        "pydantic": 0.03734568434866355,
        "dataclasses": 0.0746913686973271,
        "from": 0.0746913686973271,
        "import": 0.0746913686973271,
        "dataclass": 0.2614197904406449,
        "typing": 0.03734568434866355,
        "list": 0.1493827373946542,
        "dict": 0.1493827373946542,
        "optional": 0.0746913686973271,
        "class": 0.2240741060919813,
        "filemeta": 0.0746913686973271,
        "path": 0.03734568434866355,
        "str": 0.6348766339272804,
        "size": 0.03734568434866355,
        "int": 0.03734568434866355,
        "language": 0.03734568434866355,
        "role": 0.03734568434866355,
        "src": 0.03734568434866355,
        "test": 0.0746913686973271,
        "config": 0.03734568434866355,
        "build": 0.03734568434866355,
        "script": 0.03734568434866355,
        "infra": 0.03734568434866355,
        "other": 0.03734568434866355,
        "hash": 0.03734568434866355,
        "repomanifest": 0.0746913686973271,
        "root": 0.03734568434866355,
        "files": 0.03734568434866355,
        "detectors": 0.03734568434866355,
        "build_system": 0.03734568434866355,
        "maven": 0.03734568434866355,
        "framework": 0.0746913686973271,
        "spring": 0.03734568434866355,
        "boot": 0.03734568434866355,
        "dependency_files": 0.03734568434866355,
        "pom": 0.03734568434866355,
        "xml": 0.03734568434866355,
        "requirements": 0.03734568434866355,
        "txt": 0.03734568434866355,
        "signal": 0.0746913686973271,
        "kind": 0.03734568434866355,
        "db": 0.03734568434866355,
        "queue": 0.03734568434866355,
        "dep": 0.03734568434866355,
        "entrypoint": 0.03734568434866355,
        "name": 0.03734568434866355,
        "analysisresult": 0.03734568434866355,
        "manifest": 0.03734568434866355,
        "signals": 0.03734568434866355,
        "embedding_index_path": 0.03734568434866355,
        "sectionspec": 0.03734568434866355,
        "key": 0.03734568434866355,
        "intro": 0.03734568434866355,
        "features": 0.03734568434866355,
        "arch": 0.03734568434866355,
        "quickstart": 0.03734568434866355,
        "required": 0.03734568434866355,
        "bool": 0.03734568434866355,
        "sources": 0.03734568434866355,
        "preferred": 0.03734568434866355,
        "retrieval": 0.03734568434866355,
        "tags": 0.03734568434866355,
        "template_name": 0.03734568434866355,
        "readmedraft": 0.03734568434866355
      },
      "text": "with schema versioning so subsequent runs reuse work when file hashes remain unchanged. ### 3.10 Git Publisher * Creates a branch (e.g., `docgen/readme-update-YYYYMMDD`) and a PR. * PR body explains detected changes and what sections were updated. * Can commit directly (configurable) on init for empty repos. * Applies labels (e.g., `docs:auto`) and updates existing PRs when configured. ### 3.11 Service Mode (FastAPI) * FastAPI app exposes `/init` and `/update` POST endpoints plus `/health` for readiness. * Reuses the orchestrator dependency and executes operations in thread pools to keep the event loop responsive. * CLI `docgen service --host 0.0.0.0 --port 8000` boots the service with authentication hooks ready for future hardening. * Error handlers surface actionable JSON (`detail` field) for common runtime issues. --- ## 4) Data Model (Python `pydantic`/`dataclasses`) ```python from dataclasses import dataclass from typing import List, Dict, Optional @dataclass class FileMeta: path: str size: int language: Optional[str] role: str # src|test|docs|config|build|script|infra|other hash: str @dataclass class RepoManifest: root: str files: List[FileMeta] detectors: Dict[str, str] # {\"build_system\": \"maven\", \"framework\":\"spring-boot\", ...} dependency_files: Dict[str, str] # {\"pom.xml\": \"...\", \"requirements.txt\": \"...\"} @dataclass class Signal: kind: str # \"framework\",\"service\",\"cli\",\"db\",\"queue\",\"dep\",\"entrypoint\",\"test\" name: str detail: Dict[str, str] @dataclass class AnalysisResult: manifest: RepoManifest signals: List[Signal] embedding_index_path: str @dataclass class SectionSpec: key: str # \"intro\",\"features\",\"arch\",\"quickstart\",... required: bool sources: List[str] # preferred retrieval tags template_name: str @dataclass class ReadmeDraft:",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#6",
      "vector": {
        "class": 0.22011272658140596,
        "signal": 0.08804509063256238,
        "kind": 0.04402254531628119,
        "str": 0.6603381797442178,
        "framework": 0.04402254531628119,
        "service": 0.04402254531628119,
        "cli": 0.08804509063256238,
        "db": 0.04402254531628119,
        "queue": 0.04402254531628119,
        "dep": 0.04402254531628119,
        "entrypoint": 0.04402254531628119,
        "test": 0.04402254531628119,
        "name": 0.04402254531628119,
        "detail": 0.04402254531628119,
        "dict": 0.13206763594884358,
        "dataclass": 0.17609018126512477,
        "analysisresult": 0.04402254531628119,
        "manifest": 0.04402254531628119,
        "repomanifest": 0.04402254531628119,
        "signals": 0.04402254531628119,
        "list": 0.13206763594884358,
        "embedding_index_path": 0.04402254531628119,
        "sectionspec": 0.04402254531628119,
        "key": 0.04402254531628119,
        "intro": 0.08804509063256238,
        "features": 0.08804509063256238,
        "arch": 0.04402254531628119,
        "quickstart": 0.08804509063256238,
        "required": 0.04402254531628119,
        "bool": 0.04402254531628119,
        "sources": 0.04402254531628119,
        "preferred": 0.04402254531628119,
        "retrieval": 0.04402254531628119,
        "tags": 0.04402254531628119,
        "template_name": 0.04402254531628119,
        "readmedraft": 0.04402254531628119,
        "sections": 0.04402254531628119,
        "full_markdown": 0.04402254531628119,
        "updateplan": 0.04402254531628119,
        "strategy": 0.04402254531628119,
        "full": 0.04402254531628119,
        "patch": 0.04402254531628119,
        "changed_sections": 0.04402254531628119,
        "reasons": 0.04402254531628119,
        "section": 0.04402254531628119,
        "why": 0.04402254531628119,
        "5": 0.04402254531628119,
        "configuration": 0.08804509063256238,
        "docgen": 0.17609018126512477,
        "yml": 0.04402254531628119,
        "at": 0.04402254531628119,
        "repo": 0.04402254531628119,
        "root": 0.04402254531628119,
        "yaml": 0.04402254531628119,
        "llm": 0.04402254531628119,
        "runner": 0.04402254531628119,
        "ollama": 0.08804509063256238,
        "or": 0.13206763594884358,
        "llama": 0.04402254531628119,
        "cpp": 0.04402254531628119,
        "executable": 0.04402254531628119,
        "optional": 0.08804509063256238,
        "override": 0.04402254531628119,
        "for": 0.04402254531628119,
        "binaries": 0.04402254531628119,
        "model": 0.04402254531628119,
        "llama3": 0.04402254531628119,
        "8b": 0.04402254531628119,
        "instruct": 0.04402254531628119,
        "example": 0.04402254531628119,
        "local": 0.04402254531628119,
        "only": 0.08804509063256238,
        "max_tokens": 0.04402254531628119,
        "2048": 0.04402254531628119,
        "temperature": 0.04402254531628119,
        "0": 0.08804509063256238,
        "2": 0.04402254531628119,
        "readme": 0.13206763594884358,
        "style": 0.04402254531628119,
        "concise": 0.04402254531628119,
        "comprehensive": 0.04402254531628119,
        "template_pack": 0.04402254531628119,
        "enterprise": 0.04402254531628119,
        "bundle": 0.04402254531628119,
        "shipped": 0.04402254531628119,
        "with": 0.04402254531628119,
        "required_sections": 0.04402254531628119,
        "architecture": 0.04402254531628119,
        "build_and_test": 0.04402254531628119,
        "deployment": 0.04402254531628119,
        "troubleshooting": 0.04402254531628119,
        "faq": 0.04402254531628119,
        "license": 0.04402254531628119,
        "validation": 0.04402254531628119,
        "no_hallucination": 0.04402254531628119,
        "true": 0.08804509063256238,
        "set": 0.04402254531628119,
        "to": 0.08804509063256238,
        "false": 0.04402254531628119,
        "use": 0.04402254531628119,
        "docgen_validation_no_hallucination": 0.04402254531628119,
        "disable": 0.04402254531628119,
        "publish": 0.04402254531628119,
        "mode": 0.04402254531628119,
        "pr": 0.13206763594884358,
        "commit": 0.04402254531628119,
        "dry": 0.04402254531628119,
        "run": 0.04402254531628119,
        "branch_prefix": 0.04402254531628119,
        "labels": 0.04402254531628119,
        "docs": 0.04402254531628119,
        "auto": 0.04402254531628119,
        "update_existing": 0.04402254531628119,
        "refresh": 0.04402254531628119,
        "an": 0.04402254531628119,
        "existing": 0.04402254531628119,
        "instead": 0.04402254531628119,
        "of": 0.04402254531628119,
        "opening": 0.04402254531628119,
        "a": 0.04402254531628119,
        "new": 0.04402254531628119,
        "one": 0.04402254531628119,
        "analyzers": 0.04402254531628119,
        "enabled": 0.04402254531628119,
        "language": 0.04402254531628119,
        "build": 0.08804509063256238,
        "dependencies": 0.04402254531628119,
        "patterns": 0.04402254531628119,
        "exclude_paths": 0.04402254531628119,
        "git": 0.04402254531628119,
        "node_modules": 0.04402254531628119,
        "dist": 0.04402254531628119,
        "ci": 0.04402254531628119,
        "update": 0.04402254531628119,
        "if": 0.08804509063256238,
        "these": 0.04402254531628119,
        "paths": 0.04402254531628119,
        "change": 0.04402254531628119,
        "watched_globs": 0.04402254531628119,
        "src": 0.04402254531628119,
        "app": 0.04402254531628119,
        "cmd": 0.04402254531628119,
        "pom": 0.04402254531628119,
        "xml": 0.04402254531628119,
        "gradle": 0.04402254531628119,
        "package": 0.04402254531628119,
        "json": 0.04402254531628119,
        "requirements": 0.04402254531628119,
        "txt": 0.04402254531628119,
        "pyproject": 0.04402254531628119,
        "toml": 0.04402254531628119,
        "dockerfile": 0.04402254531628119,
        "no": 0.04402254531628119,
        "templates_dir": 0.04402254531628119,
        "is": 0.04402254531628119,
        "provided": 0.04402254531628119
      },
      "text": "class Signal: kind: str # \"framework\",\"service\",\"cli\",\"db\",\"queue\",\"dep\",\"entrypoint\",\"test\" name: str detail: Dict[str, str] @dataclass class AnalysisResult: manifest: RepoManifest signals: List[Signal] embedding_index_path: str @dataclass class SectionSpec: key: str # \"intro\",\"features\",\"arch\",\"quickstart\",... required: bool sources: List[str] # preferred retrieval tags template_name: str @dataclass class ReadmeDraft: sections: Dict[str, str] full_markdown: str @dataclass class UpdatePlan: strategy: str # \"full\"|\"patch\" changed_sections: List[str] reasons: Dict[str, str] # section->why ``` --- ## 5) Configuration (`.docgen.yml` at repo root) ```yaml llm: runner: \"ollama\" # or \"llama.cpp\" executable: \"ollama\" # optional override for CLI binaries model: \"llama3:8b-instruct\" # example; local only max_tokens: 2048 temperature: 0.2 readme: style: \"concise\" # or \"comprehensive\" template_pack: \"enterprise\" # optional bundle shipped with docgen required_sections: - intro - features - architecture - quickstart - configuration - build_and_test - deployment - troubleshooting - faq - license validation: no_hallucination: true # set to false or use DOCGEN_VALIDATION_NO_HALLUCINATION=0 to disable publish: mode: \"pr\" # \"commit\" | \"pr\" | \"dry-run\" branch_prefix: \"docgen/\" labels: - \"docs:auto\" update_existing: true # refresh an existing PR instead of opening a new one analyzers: enabled: - language - build - dependencies - patterns exclude_paths: - \".git/\" - \"node_modules/\" - \"dist/\" ci: # Only update README if these paths change watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" - \"requirements.txt\" - \"pyproject.toml\" - \"Dockerfile\" ``` > If no `readme.templates_dir` is provided, docgen",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#7",
      "vector": {
        "node_modules": 0.05006261743217589,
        "dist": 0.05006261743217589,
        "ci": 0.15018785229652767,
        "only": 0.10012523486435178,
        "update": 0.15018785229652767,
        "readme": 0.25031308716087947,
        "if": 0.15018785229652767,
        "these": 0.05006261743217589,
        "paths": 0.05006261743217589,
        "change": 0.05006261743217589,
        "watched_globs": 0.10012523486435178,
        "src": 0.10012523486435178,
        "app": 0.05006261743217589,
        "cmd": 0.05006261743217589,
        "pom": 0.10012523486435178,
        "xml": 0.10012523486435178,
        "build": 0.25031308716087947,
        "gradle": 0.10012523486435178,
        "package": 0.05006261743217589,
        "json": 0.05006261743217589,
        "requirements": 0.05006261743217589,
        "txt": 0.05006261743217589,
        "pyproject": 0.05006261743217589,
        "toml": 0.05006261743217589,
        "dockerfile": 0.10012523486435178,
        "no": 0.10012523486435178,
        "templates_dir": 0.05006261743217589,
        "is": 0.05006261743217589,
        "provided": 0.05006261743217589,
        "docgen": 0.25031308716087947,
        "automatically": 0.05006261743217589,
        "picks": 0.05006261743217589,
        "up": 0.05006261743217589,
        "docs": 0.05006261743217589,
        "templates": 0.10012523486435178,
        "bundles": 0.05006261743217589,
        "in": 0.10012523486435178,
        "the": 0.05006261743217589,
        "repository": 0.05006261743217589,
        "root": 0.05006261743217589,
        "and": 0.10012523486435178,
        "supports": 0.05006261743217589,
        "built": 0.05006261743217589,
        "template": 0.05006261743217589,
        "packs": 0.05006261743217589,
        "via": 0.10012523486435178,
        "template_pack": 0.05006261743217589,
        "6": 0.25031308716087947,
        "workflows": 0.05006261743217589,
        "1": 0.15018785229652767,
        "initialization": 0.05006261743217589,
        "repo": 0.05006261743217589,
        "without": 0.10012523486435178,
        "scan": 0.05006261743217589,
        "analyze": 0.05006261743217589,
        "manifest": 0.05006261743217589,
        "signals": 0.05006261743217589,
        "embeddings": 0.05006261743217589,
        "2": 0.15018785229652767,
        "prompt": 0.05006261743217589,
        "with": 0.10012523486435178,
        "default": 0.05006261743217589,
        "include": 0.05006261743217589,
        "getting": 0.05006261743217589,
        "started": 0.05006261743217589,
        "suggestions": 0.05006261743217589,
        "3": 0.15018785229652767,
        "generate": 0.10012523486435178,
        "sections": 0.20025046972870356,
        "sequentially": 0.05006261743217589,
        "streaming": 0.05006261743217589,
        "4": 0.10012523486435178,
        "post": 0.10012523486435178,
        "process": 0.10012523486435178,
        "toc": 0.05006261743217589,
        "badges": 0.05006261743217589,
        "status": 0.05006261743217589,
        "placeholder": 0.05006261743217589,
        "lint": 0.05006261743217589,
        "5": 0.10012523486435178,
        "publish": 0.05006261743217589,
        "direct": 0.05006261743217589,
        "commit": 0.10012523486435178,
        "md": 0.05006261743217589,
        "artifacts": 0.05006261743217589,
        "on": 0.05006261743217589,
        "pr": 0.10012523486435178,
        "detect": 0.05006261743217589,
        "changes": 0.05006261743217589,
        "git": 0.05006261743217589,
        "diff": 0.05006261743217589,
        "map": 0.05006261743217589,
        "files": 0.05006261743217589,
        "to": 0.15018785229652767,
        "using": 0.05006261743217589,
        "a": 0.05006261743217589,
        "rules": 0.05006261743217589,
        "matrix": 0.05006261743217589,
        "test": 0.05006261743217589,
        "quick": 0.05006261743217589,
        "start": 0.05006261743217589,
        "k8s": 0.05006261743217589,
        "deployment": 0.05006261743217589,
        "entrypoints": 0.05006261743217589,
        "architecture": 0.05006261743217589,
        "features": 0.05006261743217589,
        "decide": 0.05006261743217589,
        "updateplan": 0.05006261743217589,
        "patch": 0.05006261743217589,
        "impacted": 0.05006261743217589,
        "regenerate": 0.15018785229652767,
        "those": 0.05006261743217589,
        "skip": 0.05006261743217589,
        "changed": 0.05006261743217589,
        "file": 0.05006261743217589,
        "matches": 0.05006261743217589,
        "yml": 0.05006261743217589,
        "allows": 0.05006261743217589,
        "avoid": 0.05006261743217589,
        "unnecessary": 0.05006261743217589,
        "runs": 0.05006261743217589,
        "rag": 0.05006261743217589,
        "retrieval": 0.05006261743217589,
        "fetch": 0.05006261743217589,
        "top": 0.05006261743217589,
        "k": 0.05006261743217589,
        "chunks": 0.05006261743217589,
        "relevant": 0.05006261743217589,
        "each": 0.05006261743217589,
        "section": 0.10012523486435178,
        "open": 0.05006261743217589,
        "summary": 0.05006261743217589,
        "of": 0.05006261743217589,
        "deltas": 0.05006261743217589,
        "dry": 0.10012523486435178,
        "run": 0.10012523486435178,
        "support": 0.05006261743217589,
        "computes": 0.05006261743217589,
        "diffs": 0.05006261743217589,
        "scorecards": 0.05006261743217589,
        "writing": 0.05006261743217589,
        "or": 0.10012523486435178,
        "publishing": 0.05006261743217589,
        "manual": 0.05006261743217589,
        "full": 0.05006261743217589,
        "intro": 0.05006261743217589,
        "arch": 0.05006261743217589,
        "7": 0.05006261743217589,
        "contract": 0.05006261743217589
      },
      "text": "- \"node_modules/\" - \"dist/\" ci: # Only update README if these paths change watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" - \"requirements.txt\" - \"pyproject.toml\" - \"Dockerfile\" ``` > If no `readme.templates_dir` is provided, docgen automatically picks up `docs/templates/` bundles in the repository root and supports built-in template packs via `readme.template_pack`. --- ## 6) Workflows ### 6.1 Initialization (Repo without README) 1. **Scan & Analyze** \u2192 Manifest + Signals + Embeddings. 2. **Prompt Build** with default templates, include \u201cgetting started\u201d suggestions. 3. **Generate Sections** sequentially (streaming). 4. **Post-process** \u2192 ToC, badges (build status placeholder), lint. 5. **Publish**: direct commit `README.md` + `.docgen/` artifacts. ### 6.2 Update on Commit/PR 1. **Detect changes** via Git diff; map files to sections using a rules matrix: * `pom.xml`/`build.gradle` \u2192 *Build & Test*, *Quick Start*. * `Dockerfile`/`k8s` \u2192 *Deployment*. * `src/**` entrypoints \u2192 *Architecture*, *Features*. 2. **Decide UpdatePlan**: patch impacted sections; regenerate only those. 3. **Skip** if no changed file matches `.docgen.yml` `ci.watched_globs` (allows CI to avoid unnecessary runs). 4. **RAG retrieval**: fetch top-k chunks relevant to each section. 5. **Generate** \u2192 **Post-process** \u2192 **Open PR** with summary of deltas. 6. Dry-run support: `docgen update --dry-run` computes diffs and scorecards without writing or publishing. ### 6.3 Regenerate (Manual) * `docgen regenerate --full` or `--sections intro,arch`. --- ## 7) Section Contract",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#8",
      "vector": {
        "generate": 0.05923488777590923,
        "post": 0.11846977555181847,
        "process": 0.05923488777590923,
        "open": 0.05923488777590923,
        "pr": 0.05923488777590923,
        "with": 0.05923488777590923,
        "summary": 0.05923488777590923,
        "of": 0.05923488777590923,
        "deltas": 0.05923488777590923,
        "6": 0.11846977555181847,
        "dry": 0.11846977555181847,
        "run": 0.11846977555181847,
        "support": 0.11846977555181847,
        "docgen": 0.11846977555181847,
        "update": 0.05923488777590923,
        "computes": 0.05923488777590923,
        "diffs": 0.05923488777590923,
        "and": 0.11846977555181847,
        "scorecards": 0.05923488777590923,
        "without": 0.05923488777590923,
        "writing": 0.05923488777590923,
        "or": 0.1777046633277277,
        "publishing": 0.05923488777590923,
        "3": 0.05923488777590923,
        "regenerate": 0.11846977555181847,
        "manual": 0.05923488777590923,
        "full": 0.05923488777590923,
        "sections": 0.05923488777590923,
        "intro": 0.11846977555181847,
        "arch": 0.05923488777590923,
        "7": 0.05923488777590923,
        "section": 0.23693955110363693,
        "contract": 0.05923488777590923,
        "readme": 0.05923488777590923,
        "what": 0.05923488777590923,
        "why": 0.05923488777590923,
        "who": 0.05923488777590923,
        "it": 0.05923488777590923,
        "s": 0.05923488777590923,
        "for": 0.05923488777590923,
        "key": 0.05923488777590923,
        "features": 0.05923488777590923,
        "bullets": 0.05923488777590923,
        "grounded": 0.05923488777590923,
        "in": 0.05923488777590923,
        "real": 0.05923488777590923,
        "repo": 0.11846977555181847,
        "signals": 0.11846977555181847,
        "architecture": 0.05923488777590923,
        "overview": 0.05923488777590923,
        "diagram": 0.05923488777590923,
        "ascii": 0.05923488777590923,
        "components": 0.05923488777590923,
        "quick": 0.05923488777590923,
        "start": 0.05923488777590923,
        "minimal": 0.05923488777590923,
        "commands": 0.23693955110363693,
        "per": 0.11846977555181847,
        "build": 0.11846977555181847,
        "system": 0.11846977555181847,
        "configuration": 0.05923488777590923,
        "env": 0.05923488777590923,
        "vars": 0.05923488777590923,
        "files": 0.05923488777590923,
        "examples": 0.05923488777590923,
        "test": 0.05923488777590923,
        "coverage": 0.05923488777590923,
        "hint": 0.05923488777590923,
        "deployment": 0.05923488777590923,
        "container": 0.05923488777590923,
        "k8s": 0.05923488777590923,
        "instructions": 0.05923488777590923,
        "if": 0.1777046633277277,
        "detected": 0.1777046633277277,
        "troubleshooting": 0.05923488777590923,
        "common": 0.05923488777590923,
        "failures": 0.05923488777590923,
        "faq": 0.05923488777590923,
        "5": 0.05923488777590923,
        "10": 0.05923488777590923,
        "concise": 0.05923488777590923,
        "q": 0.05923488777590923,
        "a": 0.11846977555181847,
        "contributing": 0.11846977555181847,
        "md": 0.05923488777590923,
        "absent": 0.05923488777590923,
        "license": 0.05923488777590923,
        "templated": 0.05923488777590923,
        "each": 0.05923488777590923,
        "must": 0.05923488777590923,
        "be": 0.11846977555181847,
        "independently": 0.05923488777590923,
        "regenerable": 0.05923488777590923,
        "self": 0.05923488777590923,
        "contained": 0.05923488777590923,
        "8": 0.05923488777590923,
        "prompting": 0.05923488777590923,
        "strategy": 0.05923488777590923,
        "local": 0.05923488777590923,
        "llm": 0.05923488777590923,
        "message": 0.11846977555181847,
        "fixed": 0.05923488777590923,
        "guardrails": 0.05923488777590923,
        "you": 0.05923488777590923,
        "are": 0.05923488777590923,
        "senior": 0.05923488777590923,
        "dev": 0.05923488777590923,
        "doc": 0.05923488777590923,
        "writer": 0.05923488777590923,
        "precise": 0.05923488777590923,
        "cite": 0.05923488777590923,
        "facts": 0.05923488777590923,
        "only": 0.05923488777590923,
        "no": 0.05923488777590923,
        "speculation": 0.05923488777590923,
        "never": 0.05923488777590923,
        "invent": 0.05923488777590923,
        "prefer": 0.05923488777590923,
        "by": 0.05923488777590923,
        "analyzers": 0.05923488777590923,
        "user": 0.05923488777590923,
        "objective": 0.05923488777590923,
        "constraints": 0.05923488777590923,
        "tone": 0.05923488777590923,
        "length": 0.05923488777590923,
        "inject": 0.05923488777590923,
        "top": 0.05923488777590923,
        "k": 0.05923488777590923,
        "chunks": 0.05923488777590923,
        "rag": 0.05923488777590923,
        "provide": 0.05923488777590923,
        "style": 0.05923488777590923,
        "tokens": 0.05923488777590923,
        "headings": 0.05923488777590923,
        "code": 0.05923488777590923,
        "blocks": 0.05923488777590923,
        "tables": 0.05923488777590923,
        "filters": 0.05923488777590923,
        "refuse": 0.05923488777590923,
        "insufficient": 0.05923488777590923,
        "evidence": 0.05923488777590923,
        "fall": 0.05923488777590923,
        "back": 0.05923488777590923,
        "to": 0.05923488777590923,
        "template": 0.05923488777590923,
        "stubs": 0.05923488777590923,
        "9": 0.05923488777590923,
        "language": 0.05923488777590923,
        "project": 0.05923488777590923,
        "poc": 0.11846977555181847,
        "targets": 0.05923488777590923,
        "tier": 0.11846977555181847,
        "1": 0.05923488777590923,
        "python": 0.05923488777590923,
        "poetry": 0.05923488777590923,
        "setuptools": 0.05923488777590923,
        "java": 0.05923488777590923,
        "maven": 0.05923488777590923,
        "gradle": 0.05923488777590923,
        "spring": 0.05923488777590923,
        "boot": 0.05923488777590923,
        "node": 0.05923488777590923,
        "js": 0.05923488777590923,
        "npm": 0.05923488777590923,
        "pnpm": 0.05923488777590923,
        "express": 0.05923488777590923,
        "next": 0.05923488777590923,
        "2": 0.05923488777590923,
        "soon": 0.05923488777590923,
        "go": 0.05923488777590923,
        "modules": 0.05923488777590923
      },
      "text": "**Generate** \u2192 **Post-process** \u2192 **Open PR** with summary of deltas. 6. Dry-run support: `docgen update --dry-run` computes diffs and scorecards without writing or publishing. ### 6.3 Regenerate (Manual) * `docgen regenerate --full` or `--sections intro,arch`. --- ## 7) Section Contract (README) * **Intro**: what, why, who it\u2019s for * **Key Features**: bullets grounded in real repo signals * **Architecture**: overview diagram (ASCII) + components * **Quick Start**: minimal commands (per build system) * **Configuration**: env vars, files, examples * **Build & Test**: commands, coverage hint * **Deployment**: container/K8s instructions if detected * **Troubleshooting**: common failures * **FAQ**: 5\u201310 concise Q\\&A * **Contributing** (if `CONTRIBUTING.md` absent) * **License** (detected or templated) > Each section must be independently regenerable and self-contained. --- ## 8) Prompting Strategy (Local LLM) * **System message (fixed guardrails)**: * \u201cYou are a senior dev doc writer. Be precise. Cite repo facts only. No speculation.\u201d * \u201cNever invent commands. Prefer commands detected by analyzers.\u201d * **User message per section**: * Section objective + constraints (tone, length). * Inject **Signals** + **Top-k chunks** (RAG). * Provide **style tokens** (headings, code blocks, tables). * **Post-filters**: refuse if insufficient evidence; fall back to template stubs. --- ## 9) Language & Project Support (POC targets) * **Tier-1 (POC)**: Python (Poetry/Setuptools), Java (Maven/Gradle, Spring Boot), Node.js (npm/pnpm, Express/Next). * **Tier-2 (soon)**: Go (modules),",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#9",
      "vector": {
        "code": 0.0636929755298482,
        "blocks": 0.0318464877649241,
        "tables": 0.0318464877649241,
        "post": 0.0636929755298482,
        "filters": 0.0318464877649241,
        "refuse": 0.0318464877649241,
        "if": 0.0318464877649241,
        "insufficient": 0.0318464877649241,
        "evidence": 0.0318464877649241,
        "fall": 0.0318464877649241,
        "back": 0.0318464877649241,
        "to": 0.0318464877649241,
        "template": 0.0318464877649241,
        "stubs": 0.0636929755298482,
        "9": 0.0318464877649241,
        "language": 0.0636929755298482,
        "project": 0.0318464877649241,
        "support": 0.0318464877649241,
        "poc": 0.0636929755298482,
        "targets": 0.0318464877649241,
        "tier": 0.0636929755298482,
        "1": 0.0318464877649241,
        "python": 0.0955394632947723,
        "poetry": 0.0318464877649241,
        "setuptools": 0.0318464877649241,
        "java": 0.0318464877649241,
        "maven": 0.0318464877649241,
        "gradle": 0.0318464877649241,
        "spring": 0.0636929755298482,
        "boot": 0.0318464877649241,
        "node": 0.0318464877649241,
        "js": 0.0318464877649241,
        "npm": 0.0318464877649241,
        "pnpm": 0.0318464877649241,
        "express": 0.0318464877649241,
        "next": 0.0318464877649241,
        "2": 0.0318464877649241,
        "soon": 0.0318464877649241,
        "go": 0.0318464877649241,
        "modules": 0.0318464877649241,
        "rust": 0.0318464877649241,
        "cargo": 0.0318464877649241,
        "ruby": 0.0318464877649241,
        "bundler": 0.0318464877649241,
        "php": 0.0318464877649241,
        "composer": 0.0318464877649241,
        "detection": 0.0318464877649241,
        "via": 0.0318464877649241,
        "file": 0.0318464877649241,
        "heuristics": 0.0318464877649241,
        "optional": 0.0636929755298482,
        "tree": 0.0318464877649241,
        "sitter": 0.0318464877649241,
        "for": 0.0636929755298482,
        "function": 0.0318464877649241,
        "class": 0.0636929755298482,
        "extraction": 0.0318464877649241,
        "pluggable": 0.0318464877649241,
        "entry": 0.0318464877649241,
        "points": 0.0318464877649241,
        "main": 0.0636929755298482,
        "springbootapplication": 0.0318464877649241,
        "fastapi": 0.0636929755298482,
        "app": 0.1273859510596964,
        "bin": 0.0318464877649241,
        "cmd": 0.0318464877649241,
        "10": 0.0318464877649241,
        "interfaces": 0.0318464877649241,
        "skeleton": 0.0318464877649241,
        "docgen": 0.0318464877649241,
        "__init__": 0.0318464877649241,
        "py": 0.7961621941231025,
        "cli": 0.0955394632947723,
        "click": 0.0318464877649241,
        "typer": 0.0636929755298482,
        "failsafe": 0.0318464877649241,
        "fail": 0.0318464877649241,
        "safe": 0.0318464877649241,
        "readme": 0.0318464877649241,
        "logging": 0.0636929755298482,
        "configuration": 0.0318464877649241,
        "helpers": 0.0318464877649241,
        "orchestrator": 0.0318464877649241,
        "repo_scanner": 0.0318464877649241,
        "analyzers": 0.0318464877649241,
        "base": 0.0318464877649241,
        "analyzer": 0.0955394632947723,
        "abc": 0.1592324388246205,
        "build": 0.0318464877649241,
        "dependencies": 0.0318464877649241,
        "entrypoints": 0.0318464877649241,
        "patterns": 0.0318464877649241,
        "rag": 0.0318464877649241,
        "embedder": 0.0318464877649241,
        "local": 0.0318464877649241,
        "embedding": 0.0318464877649241,
        "model": 0.0318464877649241,
        "store": 0.0318464877649241,
        "prompting": 0.0318464877649241,
        "builder": 0.0318464877649241,
        "jinja2": 0.0318464877649241,
        "templates": 0.0636929755298482,
        "token": 0.0318464877649241,
        "mgmt": 0.0318464877649241,
        "constants": 0.0318464877649241,
        "j2": 0.0318464877649241,
        "per": 0.0318464877649241,
        "section": 0.0318464877649241,
        "llm": 0.0318464877649241,
        "runner": 0.0318464877649241,
        "adapter": 0.0318464877649241,
        "ollama": 0.0318464877649241,
        "llama": 0.0318464877649241,
        "cpp": 0.0318464877649241,
        "postproc": 0.0318464877649241,
        "lint": 0.0318464877649241,
        "links": 0.0318464877649241,
        "markers": 0.0318464877649241,
        "toc": 0.0318464877649241,
        "git": 0.0318464877649241,
        "diff": 0.0318464877649241,
        "publisher": 0.0318464877649241,
        "config": 0.0318464877649241,
        "models": 0.0636929755298482,
        "from": 0.0636929755298482,
        "import": 0.0636929755298482,
        "abstractmethod": 0.0955394632947723,
        "repomanifest": 0.0955394632947723,
        "signal": 0.0636929755298482,
        "def": 0.1592324388246205,
        "supports": 0.0318464877649241,
        "self": 0.0636929755298482,
        "manifest": 0.0636929755298482,
        "bool": 0.0955394632947723,
        "analyze": 0.0318464877649241,
        "list": 0.0318464877649241,
        "command": 0.0955394632947723,
        "init": 0.0318464877649241,
        "path": 0.0636929755298482,
        "str": 0.1592324388246205,
        "publish": 0.0318464877649241,
        "true": 0.0318464877649241,
        "update": 0.0318464877649241,
        "event": 0.0318464877649241,
        "commit": 0.0318464877649241,
        "diff_base": 0.0318464877649241,
        "origin": 0.0318464877649241,
        "regenerate": 0.0318464877649241,
        "sections": 0.0318464877649241,
        "full": 0.0318464877649241,
        "false": 0.0318464877649241,
        "service": 0.0318464877649241,
        "mode": 0.0318464877649241
      },
      "text": "code blocks, tables). * **Post-filters**: refuse if insufficient evidence; fall back to template stubs. --- ## 9) Language & Project Support (POC targets) * **Tier-1 (POC)**: Python (Poetry/Setuptools), Java (Maven/Gradle, Spring Boot), Node.js (npm/pnpm, Express/Next). * **Tier-2 (soon)**: Go (modules), Rust (Cargo), Ruby (Bundler), PHP (Composer). * Detection via: * File heuristics + optional tree-sitter for function/class extraction (pluggable). * Entry points: `main()`; Spring `@SpringBootApplication`; FastAPI app; `bin/`, `cmd/`. --- ## 10) Interfaces (Code Skeleton) ``` docgen/ __init__.py cli.py # click/typer CLI failsafe.py # fail-safe README stubs logging.py # logging configuration helpers orchestrator.py repo_scanner.py analyzers/ base.py # Analyzer ABC language.py build.py dependencies.py entrypoints.py patterns.py rag/ embedder.py # local embedding model store.py prompting/ builder.py # Jinja2 templates, token mgmt constants.py templates/ # *.j2 per section llm/ runner.py # adapter for ollama/llama.cpp postproc/ lint.py links.py markers.py toc.py git/ diff.py publisher.py config.py models.py ``` **Analyzer ABC** ```python from abc import ABC, abstractmethod from .models import RepoManifest, Signal class Analyzer(ABC): @abstractmethod def supports(self, manifest: RepoManifest) -> bool: ... @abstractmethod def analyze(self, manifest: RepoManifest) -> list[Signal]: ... ``` **CLI (Typer)** ```python @app.command() def init(path: str = \".\", publish: bool = True): ... @app.command() def update(path: str = \".\", event: str = \"commit\", diff_base: str = \"origin/main\"): ... @app.command() def regenerate(sections: str = \"\", full: bool = False): ... ``` **FastAPI (optional service mode)** * `POST",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#10",
      "vector": {
        "publish": 0.17586311452816478,
        "bool": 0.11724207635210984,
        "true": 0.05862103817605492,
        "app": 0.17586311452816478,
        "command": 0.11724207635210984,
        "def": 0.11724207635210984,
        "update": 0.17586311452816478,
        "path": 0.11724207635210984,
        "str": 0.23448415270421968,
        "event": 0.05862103817605492,
        "commit": 0.11724207635210984,
        "diff_base": 0.05862103817605492,
        "origin": 0.05862103817605492,
        "main": 0.05862103817605492,
        "regenerate": 0.05862103817605492,
        "sections": 0.23448415270421968,
        "full": 0.05862103817605492,
        "false": 0.05862103817605492,
        "fastapi": 0.05862103817605492,
        "optional": 0.11724207635210984,
        "service": 0.05862103817605492,
        "mode": 0.05862103817605492,
        "post": 0.35172622905632955,
        "analyze": 0.05862103817605492,
        "generate": 0.05862103817605492,
        "arch": 0.05862103817605492,
        "quickstart": 0.17586311452816478,
        "get": 0.05862103817605492,
        "status": 0.05862103817605492,
        "run_id": 0.05862103817605492,
        "11": 0.05862103817605492,
        "change": 0.05862103817605492,
        "impact": 0.05862103817605492,
        "matrix": 0.05862103817605492,
        "examples": 0.05862103817605492,
        "changed": 0.11724207635210984,
        "pattern": 0.05862103817605492,
        "to": 0.11724207635210984,
        "rebuild": 0.05862103817605492,
        "notes": 0.05862103817605492,
        "pom": 0.05862103817605492,
        "xml": 0.05862103817605492,
        "build": 0.23448415270421968,
        "gradle": 0.05862103817605492,
        "_and": 0.11724207635210984,
        "_test": 0.11724207635210984,
        "recompute": 0.05862103817605492,
        "commands": 0.05862103817605492,
        "requirements": 0.05862103817605492,
        "txt": 0.05862103817605492,
        "pyproject": 0.05862103817605492,
        "toml": 0.05862103817605492,
        "install": 0.05862103817605492,
        "steps": 0.05862103817605492,
        "dockerfile": 0.05862103817605492,
        "k8s": 0.05862103817605492,
        "deployment": 0.05862103817605492,
        "container": 0.05862103817605492,
        "changes": 0.05862103817605492,
        "src": 0.05862103817605492,
        "cmd": 0.05862103817605492,
        "features": 0.05862103817605492,
        "architecture": 0.17586311452816478,
        "if": 0.05862103817605492,
        "entrypoint": 0.05862103817605492,
        "intro": 0.05862103817605492,
        "too": 0.05862103817605492,
        "docs": 0.05862103817605492,
        "all": 0.05862103817605492,
        "patch": 0.05862103817605492,
        "prefer": 0.05862103817605492,
        "doc": 0.05862103817605492,
        "driven": 0.05862103817605492,
        "readme": 0.11724207635210984,
        "md": 0.05862103817605492,
        "none": 0.05862103817605492,
        "unless": 0.05862103817605492,
        "empty": 0.05862103817605492,
        "prevent": 0.05862103817605492,
        "loops": 0.05862103817605492,
        "12": 0.05862103817605492,
        "processing": 0.05862103817605492,
        "rules": 0.05862103817605492,
        "headings": 0.05862103817605492,
        "start": 0.05862103817605492,
        "at": 0.05862103817605492,
        "for": 0.11724207635210984,
        "title": 0.05862103817605492,
        "then": 0.05862103817605492,
        "add": 0.05862103817605492,
        "auto": 0.05862103817605492,
        "toc": 0.05862103817605492,
        "level": 0.05862103817605492,
        "3": 0.05862103817605492,
        "validate": 0.05862103817605492,
        "code": 0.05862103817605492,
        "blocks": 0.05862103817605492,
        "bash": 0.05862103817605492,
        "python": 0.05862103817605492,
        "convert": 0.05862103817605492,
        "absolute": 0.05862103817605492,
        "github": 0.05862103817605492,
        "links": 0.05862103817605492,
        "relative": 0.05862103817605492,
        "where": 0.05862103817605492,
        "possible": 0.05862103817605492,
        "ensure": 0.05862103817605492,
        "idempotency": 0.05862103817605492,
        "only": 0.05862103817605492,
        "edit": 0.05862103817605492,
        "between": 0.05862103817605492,
        "managed": 0.05862103817605492,
        "markers": 0.11724207635210984,
        "docgen": 0.11724207635210984,
        "begin": 0.05862103817605492,
        "end": 0.05862103817605492,
        "13": 0.05862103817605492,
        "git": 0.05862103817605492,
        "ci": 0.05862103817605492,
        "integration": 0.05862103817605492,
        "local": 0.05862103817605492,
        "pre": 0.05862103817605492,
        "forbid": 0.05862103817605492,
        "direct": 0.05862103817605492,
        "edits": 0.05862103817605492,
        "outside": 0.05862103817605492,
        "merge": 0.05862103817605492,
        "checkout": 0.05862103817605492,
        "remind": 0.05862103817605492
      },
      "text": "= \".\", publish: bool = True): ... @app.command() def update(path: str = \".\", event: str = \"commit\", diff_base: str = \"origin/main\"): ... @app.command() def regenerate(sections: str = \"\", full: bool = False): ... ``` **FastAPI (optional service mode)** * `POST /analyze` * `POST /generate?sections=arch,quickstart` * `POST /publish` * `GET /status/{run_id}` --- ## 11) Change Impact Matrix (examples) | Changed Path Pattern | Sections to Rebuild | Notes | | ------------------------------------ | ---------------------------- | --------------------------------------- | | `pom.xml`, `build.gradle*` | build\\_and\\_test, quickstart | Recompute build commands | | `requirements.txt`, `pyproject.toml` | build\\_and\\_test, quickstart | Update install steps | | `Dockerfile`, `k8s/**` | deployment | Publish container changes | | `src/**`, `app/**`, `cmd/**` | features, architecture | If entrypoint changed, update intro too | | `docs/**` | all (patch) | Prefer doc-driven | | `README.md` | none (unless empty) | Prevent loops | --- ## 12) Post-Processing Rules * Headings start at `#` for title then `##` for sections. * Add **auto ToC** (<= level 3). * Validate code blocks (` ```bash`, ` ```python`). * Convert absolute GitHub links to relative where possible. * Ensure **idempotency**: only edit between managed markers: * `<!-- docgen:begin:architecture -->` \u2026 `<!-- docgen:end:architecture -->` --- ## 13) Git & CI Integration ### Local * **pre-commit**: forbid direct README edits outside markers (optional). * **post-merge / post-checkout**: remind",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#11",
      "vector": {
        "possible": 0.11162911443718952,
        "ensure": 0.05581455721859476,
        "idempotency": 0.05581455721859476,
        "only": 0.16744367165578428,
        "edit": 0.05581455721859476,
        "between": 0.05581455721859476,
        "managed": 0.05581455721859476,
        "markers": 0.11162911443718952,
        "docgen": 0.22325822887437904,
        "begin": 0.05581455721859476,
        "architecture": 0.11162911443718952,
        "end": 0.05581455721859476,
        "13": 0.05581455721859476,
        "git": 0.11162911443718952,
        "ci": 0.11162911443718952,
        "integration": 0.05581455721859476,
        "local": 0.16744367165578428,
        "pre": 0.05581455721859476,
        "commit": 0.05581455721859476,
        "forbid": 0.05581455721859476,
        "direct": 0.05581455721859476,
        "readme": 0.05581455721859476,
        "edits": 0.05581455721859476,
        "outside": 0.05581455721859476,
        "optional": 0.16744367165578428,
        "post": 0.16744367165578428,
        "merge": 0.05581455721859476,
        "checkout": 0.11162911443718952,
        "remind": 0.05581455721859476,
        "to": 0.05581455721859476,
        "run": 0.05581455721859476,
        "update": 0.16744367165578428,
        "github": 0.11162911443718952,
        "gitlab": 0.05581455721859476,
        "bitbucket": 0.05581455721859476,
        "on": 0.05581455721859476,
        "push": 0.05581455721859476,
        "pr": 0.2790727860929738,
        "1": 0.11162911443718952,
        "repo": 0.11162911443718952,
        "2": 0.16744367165578428,
        "event": 0.05581455721859476,
        "diff": 0.11162911443718952,
        "base": 0.05581455721859476,
        "base_sha": 0.05581455721859476,
        "3": 0.05581455721859476,
        "if": 0.16744367165578428,
        "changes": 0.05581455721859476,
        "open": 0.05581455721859476,
        "with": 0.05581455721859476,
        "labeled": 0.05581455721859476,
        "docs": 0.11162911443718952,
        "auto": 0.05581455721859476,
        "tokenless": 0.05581455721859476,
        "mode": 0.05581455721859476,
        "created": 0.05581455721859476,
        "from": 0.05581455721859476,
        "a": 0.05581455721859476,
        "app": 0.05581455721859476,
        "bot": 0.05581455721859476,
        "account": 0.05581455721859476,
        "14": 0.05581455721859476,
        "quality": 0.05581455721859476,
        "gates": 0.05581455721859476,
        "evaluation": 0.05581455721859476,
        "consistency": 0.05581455721859476,
        "checks": 0.05581455721859476,
        "commands": 0.11162911443718952,
        "exist": 0.05581455721859476,
        "in": 0.11162911443718952,
        "ports": 0.05581455721859476,
        "env": 0.05581455721859476,
        "vars": 0.05581455721859476,
        "match": 0.05581455721859476,
        "configs": 0.05581455721859476,
        "no": 0.11162911443718952,
        "hallucinations": 0.05581455721859476,
        "reject": 0.05581455721859476,
        "new": 0.05581455721859476,
        "facts": 0.05581455721859476,
        "not": 0.05581455721859476,
        "found": 0.11162911443718952,
        "signals": 0.05581455721859476,
        "rag": 0.11162911443718952,
        "style": 0.05581455721859476,
        "concise": 0.05581455721859476,
        "paragraphs": 0.05581455721859476,
        "actionable": 0.05581455721859476,
        "filler": 0.05581455721859476,
        "marketing": 0.05581455721859476,
        "scorecard": 0.05581455721859476,
        "0": 0.05581455721859476,
        "100": 0.05581455721859476,
        "coverage": 0.05581455721859476,
        "of": 0.11162911443718952,
        "required": 0.05581455721859476,
        "sections": 0.05581455721859476,
        "30": 0.05581455721859476,
        "buildability": 0.05581455721859476,
        "quick": 0.05581455721859476,
        "start": 0.05581455721859476,
        "20": 0.11162911443718952,
        "link": 0.05581455721859476,
        "validity": 0.05581455721859476,
        "10": 0.16744367165578428,
        "alignment": 0.05581455721859476,
        "w": 0.05581455721859476,
        "change": 0.05581455721859476,
        "set": 0.05581455721859476,
        "lint": 0.05581455721859476,
        "reviewer": 0.05581455721859476,
        "feedback": 0.05581455721859476,
        "loop": 0.05581455721859476,
        "15": 0.05581455721859476,
        "security": 0.05581455721859476,
        "privacy": 0.05581455721859476,
        "llm": 0.11162911443718952,
        "and": 0.05581455721859476,
        "embedding": 0.05581455721859476,
        "models": 0.05581455721859476,
        "respect": 0.05581455721859476,
        "gitignore": 0.05581455721859476,
        "configurable": 0.05581455721859476,
        "exclude_paths": 0.05581455721859476,
        "never": 0.05581455721859476,
        "index": 0.05581455721859476,
        "large": 0.05581455721859476,
        "binaries": 0.05581455721859476,
        "secret": 0.11162911443718952,
        "files": 0.05581455721859476,
        "simple": 0.05581455721859476,
        "scan": 0.05581455721859476,
        "block": 0.05581455721859476,
        "16": 0.05581455721859476,
        "mvp": 0.05581455721859476,
        "plan": 0.05581455721859476,
        "weeks": 0.05581455721859476,
        "suggested": 0.05581455721859476,
        "breakdown": 0.05581455721859476,
        "core": 0.05581455721859476,
        "path": 0.05581455721859476,
        "cli": 0.05581455721859476,
        "scanner": 0.05581455721859476,
        "language": 0.05581455721859476,
        "build": 0.05581455721859476,
        "analyzers": 0.05581455721859476,
        "python": 0.05581455721859476,
        "java": 0.05581455721859476,
        "node": 0.05581455721859476,
        "prompt": 0.05581455721859476,
        "builder": 0.05581455721859476,
        "runner": 0.05581455721859476,
        "ollama": 0.05581455721859476,
        "adapter": 0.05581455721859476,
        "processor": 0.05581455721859476,
        "publisher": 0.05581455721859476,
        "lite": 0.05581455721859476,
        "embed": 0.05581455721859476
      },
      "text": "possible. * Ensure **idempotency**: only edit between managed markers: * `<!-- docgen:begin:architecture -->` \u2026 `<!-- docgen:end:architecture -->` --- ## 13) Git & CI Integration ### Local * **pre-commit**: forbid direct README edits outside markers (optional). * **post-merge / post-checkout**: remind to run `docgen update` (optional). ### CI (GitHub/GitLab/Bitbucket) * On push/PR: 1. Checkout repo. 2. `docgen update --event pr --diff-base $BASE_SHA` 3. If changes \u2192 open/update PR with labeled `docs:auto`. * Tokenless mode possible if PR created from a GitHub App/bot account. --- ## 14) Quality Gates & Evaluation * **Consistency checks**: commands exist in repo; ports/env vars match configs. * **No hallucinations**: reject new facts not found in signals/RAG. * **Style**: concise paragraphs, actionable commands, no filler marketing. * **Scorecard** (0\u2013100): * Coverage of required sections (30) * Buildability of quick start (20) * Link validity (10) * Diff alignment w/ change set (20) * Lint (10) * Reviewer feedback loop (10) --- ## 15) Security & Privacy * **Local only** LLM and embedding models. * Respect `.gitignore` + configurable `exclude_paths`. * Never index large binaries/secret files. * Optional simple **secret scan**; block if found. --- ## 16) MVP Plan (2 weeks suggested breakdown) 1. **Core path**: CLI, Scanner, Language+Build analyzers (Python/Java/Node), Prompt Builder, Local LLM runner (Ollama adapter), Post-processor, Git Publisher (PR). 2. **RAG Lite**: embed only `/docs`,",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#12",
      "vector": {
        "simple": 0.058823529411764705,
        "secret": 0.058823529411764705,
        "scan": 0.058823529411764705,
        "block": 0.058823529411764705,
        "if": 0.058823529411764705,
        "found": 0.058823529411764705,
        "16": 0.058823529411764705,
        "mvp": 0.058823529411764705,
        "plan": 0.058823529411764705,
        "2": 0.17647058823529413,
        "weeks": 0.058823529411764705,
        "suggested": 0.058823529411764705,
        "breakdown": 0.058823529411764705,
        "1": 0.11764705882352941,
        "core": 0.058823529411764705,
        "path": 0.058823529411764705,
        "cli": 0.058823529411764705,
        "scanner": 0.058823529411764705,
        "language": 0.058823529411764705,
        "build": 0.17647058823529413,
        "analyzers": 0.058823529411764705,
        "python": 0.17647058823529413,
        "java": 0.058823529411764705,
        "node": 0.058823529411764705,
        "prompt": 0.058823529411764705,
        "builder": 0.058823529411764705,
        "local": 0.058823529411764705,
        "llm": 0.058823529411764705,
        "runner": 0.058823529411764705,
        "ollama": 0.058823529411764705,
        "adapter": 0.058823529411764705,
        "post": 0.058823529411764705,
        "processor": 0.058823529411764705,
        "git": 0.058823529411764705,
        "publisher": 0.058823529411764705,
        "pr": 0.11764705882352941,
        "rag": 0.058823529411764705,
        "lite": 0.058823529411764705,
        "embed": 0.058823529411764705,
        "only": 0.058823529411764705,
        "docs": 0.058823529411764705,
        "existing": 0.058823529411764705,
        "readme": 0.11764705882352941,
        "top": 0.058823529411764705,
        "20": 0.058823529411764705,
        "largest": 0.058823529411764705,
        "source": 0.058823529411764705,
        "files": 0.058823529411764705,
        "heads": 0.058823529411764705,
        "3": 0.058823529411764705,
        "triggers": 0.058823529411764705,
        "single": 0.058823529411764705,
        "commit": 0.058823529411764705,
        "mode": 0.11764705882352941,
        "as": 0.11764705882352941,
        "stretch": 0.058823529411764705,
        "4": 0.058823529411764705,
        "templates": 0.11764705882352941,
        "8": 0.058823529411764705,
        "sections": 0.058823529411764705,
        "jinja2": 0.23529411764705882,
        "managed": 0.058823529411764705,
        "markers": 0.058823529411764705,
        "5": 0.058823529411764705,
        "config": 0.058823529411764705,
        "docgen": 0.058823529411764705,
        "yml": 0.058823529411764705,
        "minimal": 0.11764705882352941,
        "17": 0.17647058823529413,
        "example": 0.058823529411764705,
        "section": 0.11764705882352941,
        "template": 0.058823529411764705,
        "architecture": 0.23529411764705882,
        "j2": 0.11764705882352941,
        "project_name": 0.11764705882352941,
        "is": 0.058823529411764705,
        "structured": 0.058823529411764705,
        "ascii": 0.058823529411764705,
        "_architecture": 0.058823529411764705,
        "key": 0.058823529411764705,
        "components": 0.11764705882352941,
        "for": 0.11764705882352941,
        "comp": 0.17647058823529413,
        "in": 0.058823529411764705,
        "name": 0.058823529411764705,
        "summary": 0.058823529411764705,
        "endfor": 0.058823529411764705,
        "data": 0.058823529411764705,
        "flow": 0.058823529411764705,
        "data_flow": 0.058823529411764705,
        "generated": 0.058823529411764705,
        "from": 0.058823529411764705,
        "detected": 0.058823529411764705,
        "signals": 0.058823529411764705,
        "signals_summary": 0.058823529411764705,
        "frame": 0.058823529411764705,
        "composed": 0.058823529411764705,
        "intro": 0.058823529411764705,
        "features": 0.17647058823529413,
        "include": 0.058823529411764705,
        "quick": 0.058823529411764705,
        "start": 0.058823529411764705,
        "quickstart": 0.058823529411764705,
        "configuration": 0.11764705882352941,
        "test": 0.058823529411764705,
        "build_and_test": 0.11764705882352941,
        "deployment": 0.17647058823529413,
        "troubleshooting": 0.11764705882352941,
        "faq": 0.11764705882352941,
        "license": 0.11764705882352941,
        "18": 0.058823529411764705,
        "snippets": 0.058823529411764705,
        "change": 0.058823529411764705,
        "impact": 0.058823529411764705,
        "heuristic": 0.058823529411764705,
        "section_rules": 0.058823529411764705,
        "pom": 0.058823529411764705,
        "xml": 0.058823529411764705,
        "gradle": 0.058823529411764705,
        "requirements": 0.058823529411764705,
        "txt": 0.058823529411764705,
        "pyproject": 0.058823529411764705,
        "toml": 0.058823529411764705,
        "package": 0.058823529411764705,
        "json": 0.058823529411764705,
        "dockerfile": 0.058823529411764705,
        "k8s": 0.058823529411764705,
        "src": 0.11764705882352941,
        "app": 0.11764705882352941,
        "cmd": 0.11764705882352941,
        "def": 0.058823529411764705,
        "sections_from_diff": 0.058823529411764705,
        "paths": 0.058823529411764705,
        "list": 0.058823529411764705,
        "str": 0.11764705882352941,
        "set": 0.11764705882352941,
        "out": 0.058823529411764705
      },
      "text": "simple **secret scan**; block if found. --- ## 16) MVP Plan (2 weeks suggested breakdown) 1. **Core path**: CLI, Scanner, Language+Build analyzers (Python/Java/Node), Prompt Builder, Local LLM runner (Ollama adapter), Post-processor, Git Publisher (PR). 2. **RAG Lite**: embed only `/docs`, existing `README`, top 20 largest source files\u2019 heads. 3. **Triggers**: single \u201ccommit\u201d mode; PR mode as stretch. 4. **Templates**: 8 sections, Jinja2; managed markers. 5. **Config**: `.docgen.yml` minimal. --- ## 17) Example Templates ### 17.1 Section Template (Jinja2 \u2014 architecture.j2) ```jinja2 ## Architecture {{ project_name }} is structured as: ``` {{ ascii\\_architecture }} ``` **Key components** {% for comp in components %} - **{{ comp.name }}** \u2014 {{ comp.summary }} {% endfor %} **Data flow** {{ data_flow }} > Generated from detected signals: {{ signals_summary }} ``` ### 17.2 README Frame (composed) ```jinja2 # {{ project_name }} {{ intro }} ## Features {{ features }} {% include \"architecture.j2\" %} ## Quick Start {{ quickstart }} ## Configuration {{ configuration }} ## Build & Test {{ build_and_test }} ## Deployment {{ deployment }} ## Troubleshooting {{ troubleshooting }} ## FAQ {{ faq }} ## License {{ license }} ``` --- ## 18) Minimal Python Snippets **Change impact heuristic** ```python SECTION_RULES = [ (\"build_and_test\", [\"pom.xml\",\"build.gradle\",\"requirements.txt\",\"pyproject.toml\",\"package.json\"]), (\"deployment\", [\"Dockerfile\",\"k8s/\"]), (\"architecture\", [\"src/\",\"app/\",\"cmd/\"]), (\"features\", [\"src/\",\"app/\",\"cmd/\"]), ] def sections_from_diff(paths: list[str]) -> set[str]: out = set() for section,",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#13",
      "vector": {
        "faq": 0.04432422071779363,
        "license": 0.08864844143558726,
        "18": 0.04432422071779363,
        "minimal": 0.04432422071779363,
        "python": 0.13297266215338088,
        "snippets": 0.04432422071779363,
        "change": 0.04432422071779363,
        "impact": 0.04432422071779363,
        "heuristic": 0.04432422071779363,
        "section_rules": 0.08864844143558726,
        "build_and_test": 0.04432422071779363,
        "pom": 0.08864844143558726,
        "xml": 0.08864844143558726,
        "build": 0.13297266215338088,
        "gradle": 0.08864844143558726,
        "requirements": 0.04432422071779363,
        "txt": 0.04432422071779363,
        "pyproject": 0.04432422071779363,
        "toml": 0.04432422071779363,
        "package": 0.08864844143558726,
        "json": 0.08864844143558726,
        "deployment": 0.04432422071779363,
        "dockerfile": 0.04432422071779363,
        "k8s": 0.04432422071779363,
        "architecture": 0.04432422071779363,
        "src": 0.13297266215338088,
        "app": 0.13297266215338088,
        "cmd": 0.13297266215338088,
        "features": 0.04432422071779363,
        "def": 0.08864844143558726,
        "sections_from_diff": 0.04432422071779363,
        "paths": 0.08864844143558726,
        "list": 0.04432422071779363,
        "str": 0.26594532430676177,
        "set": 0.08864844143558726,
        "out": 0.13297266215338088,
        "for": 0.2216211035889681,
        "section": 0.08864844143558726,
        "patterns": 0.13297266215338088,
        "in": 0.2216211035889681,
        "if": 0.2216211035889681,
        "any": 0.04432422071779363,
        "p": 0.13297266215338088,
        "pat": 0.08864844143558726,
        "startswith": 0.04432422071779363,
        "add": 0.04432422071779363,
        "return": 0.13297266215338088,
        "or": 0.08864844143558726,
        "intro": 0.08864844143558726,
        "fall": 0.04432422071779363,
        "back": 0.04432422071779363,
        "to": 0.08864844143558726,
        "uncertain": 0.04432422071779363,
        "managed": 0.04432422071779363,
        "markers": 0.08864844143558726,
        "patch": 0.04432422071779363,
        "replace_block": 0.04432422071779363,
        "md": 0.2216211035889681,
        "key": 0.13297266215338088,
        "new": 0.08864844143558726,
        "start": 0.1772968828711745,
        "f": 0.13297266215338088,
        "docgen": 0.1772968828711745,
        "begin": 0.04432422071779363,
        "end": 0.2216211035889681,
        "and": 0.04432422071779363,
        "pre": 0.08864844143558726,
        "rest": 0.08864844143558726,
        "split": 0.08864844143558726,
        "1": 0.08864844143558726,
        "_": 0.04432422071779363,
        "post": 0.08864844143558726,
        "n": 0.08864844143558726,
        "insert": 0.04432422071779363,
        "missing": 0.04432422071779363,
        "19": 0.04432422071779363,
        "open": 0.04432422071779363,
        "questions": 0.04432422071779363,
        "trade": 0.04432422071779363,
        "offs": 0.04432422071779363,
        "embeddings": 0.04432422071779363,
        "use": 0.04432422071779363,
        "a": 0.13297266215338088,
        "tiny": 0.04432422071779363,
        "local": 0.04432422071779363,
        "model": 0.08864844143558726,
        "vs": 0.08864844143558726,
        "rule": 0.04432422071779363,
        "based": 0.04432422071779363,
        "retrieval": 0.04432422071779363,
        "mvp": 0.04432422071779363,
        "tree": 0.04432422071779363,
        "sitter": 0.04432422071779363,
        "adds": 0.04432422071779363,
        "power": 0.04432422071779363,
        "but": 0.04432422071779363,
        "increases": 0.04432422071779363,
        "footprint": 0.04432422071779363,
        "gate": 0.04432422071779363,
        "behind": 0.04432422071779363,
        "flag": 0.04432422071779363,
        "pr": 0.08864844143558726,
        "author": 0.04432422071779363,
        "bot": 0.04432422071779363,
        "account": 0.04432422071779363,
        "developer": 0.04432422071779363,
        "token": 0.04432422071779363,
        "decide": 0.04432422071779363,
        "per": 0.04432422071779363,
        "environment": 0.04432422071779363,
        "markdown": 0.04432422071779363,
        "diffs": 0.04432422071779363,
        "keep": 0.04432422071779363,
        "sections": 0.04432422071779363,
        "atomic": 0.04432422071779363,
        "minimize": 0.04432422071779363,
        "noisy": 0.04432422071779363,
        "prs": 0.04432422071779363,
        "20": 0.04432422071779363,
        "example": 0.04432422071779363,
        "yml": 0.04432422071779363,
        "mixed": 0.04432422071779363,
        "repo": 0.04432422071779363,
        "yaml": 0.04432422071779363,
        "llm": 0.04432422071779363,
        "runner": 0.04432422071779363,
        "ollama": 0.04432422071779363,
        "llama3": 0.04432422071779363,
        "8b": 0.04432422071779363,
        "instruct": 0.04432422071779363,
        "temperature": 0.04432422071779363,
        "0": 0.04432422071779363,
        "15": 0.04432422071779363,
        "readme": 0.04432422071779363,
        "style": 0.04432422071779363,
        "comprehensive": 0.04432422071779363,
        "publish": 0.04432422071779363,
        "mode": 0.04432422071779363,
        "branch_prefix": 0.04432422071779363,
        "analyzers": 0.04432422071779363,
        "enabled": 0.04432422071779363,
        "language": 0.04432422071779363,
        "dependencies": 0.04432422071779363,
        "exclude_paths": 0.04432422071779363,
        "git": 0.04432422071779363,
        "node_modules": 0.04432422071779363,
        "dist": 0.04432422071779363,
        "target": 0.04432422071779363,
        "ci": 0.04432422071779363,
        "watched_globs": 0.04432422071779363
      },
      "text": "faq }} ## License {{ license }} ``` --- ## 18) Minimal Python Snippets **Change impact heuristic** ```python SECTION_RULES = [ (\"build_and_test\", [\"pom.xml\",\"build.gradle\",\"requirements.txt\",\"pyproject.toml\",\"package.json\"]), (\"deployment\", [\"Dockerfile\",\"k8s/\"]), (\"architecture\", [\"src/\",\"app/\",\"cmd/\"]), (\"features\", [\"src/\",\"app/\",\"cmd/\"]), ] def sections_from_diff(paths: list[str]) -> set[str]: out = set() for section, patterns in SECTION_RULES: if any(p for p in paths for pat in patterns if p.startswith(pat)): out.add(section) return out or {\"intro\"} # fall back to intro if uncertain ``` **Managed markers (patch)** ```python def replace_block(md: str, key: str, new: str) -> str: start = f\"<!-- docgen:begin:{key} -->\" end = f\"<!-- docgen:end:{key} -->\" if start in md and end in md: pre, rest = md.split(start, 1) _, post = rest.split(end, 1) return f\"{pre}{start}\\n{new}\\n{end}{post}\" return md # or insert markers if missing ``` --- ## 19) Open Questions / Trade-offs * **Embeddings**: Use a tiny local model vs. rule-based retrieval for MVP? * **Tree-sitter**: Adds power but increases footprint\u2014gate behind a flag. * **PR author**: Bot account vs. developer token\u2014decide per environment. * **Markdown diffs**: Keep sections atomic to minimize noisy PRs. --- ## 20) Example `.docgen.yml` for a Mixed Repo ```yaml llm: runner: \"ollama\" model: \"llama3:8b-instruct\" temperature: 0.15 readme: style: \"comprehensive\" publish: mode: \"pr\" branch_prefix: \"docgen/\" analyzers: enabled: [language, build, dependencies, patterns] exclude_paths: [\".git/\", \"node_modules/\", \"dist/\", \"target/\"] ci: watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" -",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#14",
      "vector": {
        "runner": 0.07715167498104596,
        "ollama": 0.1543033499620919,
        "model": 0.07715167498104596,
        "llama3": 0.07715167498104596,
        "8b": 0.07715167498104596,
        "instruct": 0.07715167498104596,
        "temperature": 0.07715167498104596,
        "0": 0.07715167498104596,
        "15": 0.07715167498104596,
        "readme": 0.1543033499620919,
        "style": 0.1543033499620919,
        "comprehensive": 0.07715167498104596,
        "publish": 0.07715167498104596,
        "mode": 0.07715167498104596,
        "pr": 0.1543033499620919,
        "branch_prefix": 0.07715167498104596,
        "docgen": 0.23145502494313785,
        "analyzers": 0.1543033499620919,
        "enabled": 0.07715167498104596,
        "language": 0.07715167498104596,
        "build": 0.1543033499620919,
        "dependencies": 0.07715167498104596,
        "patterns": 0.07715167498104596,
        "exclude_paths": 0.07715167498104596,
        "git": 0.07715167498104596,
        "node_modules": 0.07715167498104596,
        "dist": 0.07715167498104596,
        "target": 0.07715167498104596,
        "ci": 0.07715167498104596,
        "watched_globs": 0.07715167498104596,
        "src": 0.07715167498104596,
        "app": 0.07715167498104596,
        "cmd": 0.07715167498104596,
        "pom": 0.1543033499620919,
        "xml": 0.1543033499620919,
        "gradle": 0.07715167498104596,
        "package": 0.07715167498104596,
        "json": 0.07715167498104596,
        "requirements": 0.1543033499620919,
        "txt": 0.1543033499620919,
        "dockerfile": 0.07715167498104596,
        "21": 0.07715167498104596,
        "success": 0.07715167498104596,
        "criteria": 0.07715167498104596,
        "poc": 0.07715167498104596,
        "for": 0.07715167498104596,
        "3": 0.07715167498104596,
        "diverse": 0.07715167498104596,
        "repos": 0.07715167498104596,
        "python": 0.07715167498104596,
        "cli": 0.1543033499620919,
        "spring": 0.07715167498104596,
        "boot": 0.07715167498104596,
        "api": 0.07715167498104596,
        "node": 0.07715167498104596,
        "webapp": 0.07715167498104596,
        "init": 0.1543033499620919,
        "produces": 0.07715167498104596,
        "a": 0.23145502494313785,
        "working": 0.07715167498104596,
        "linted": 0.07715167498104596,
        "with": 0.07715167498104596,
        "runnable": 0.07715167498104596,
        "quick": 0.07715167498104596,
        "start": 0.07715167498104596,
        "on": 0.07715167498104596,
        "changing": 0.07715167498104596,
        "or": 0.07715167498104596,
        "updates": 0.07715167498104596,
        "only": 0.07715167498104596,
        "relevant": 0.07715167498104596,
        "sections": 0.07715167498104596,
        "no": 0.07715167498104596,
        "hallucinated": 0.07715167498104596,
        "commands": 0.07715167498104596,
        "links": 0.07715167498104596,
        "and": 0.23145502494313785,
        "badges": 0.07715167498104596,
        "validate": 0.07715167498104596,
        "consistent": 0.07715167498104596,
        "if": 0.07715167498104596,
        "you": 0.1543033499620919,
        "want": 0.07715167498104596,
        "i": 0.07715167498104596,
        "can": 0.1543033499620919,
        "spin": 0.07715167498104596,
        "up": 0.07715167498104596,
        "starter": 0.07715167498104596,
        "repo": 0.07715167498104596,
        "layout": 0.07715167498104596,
        "templates": 0.07715167498104596,
        "simple": 0.07715167498104596,
        "adapter": 0.07715167498104596,
        "so": 0.07715167498104596,
        "drop": 0.07715167498104596,
        "it": 0.07715167498104596,
        "into": 0.07715167498104596,
        "your": 0.07715167498104596,
        "environment": 0.07715167498104596,
        "run": 0.07715167498104596,
        "right": 0.07715167498104596,
        "away": 0.07715167498104596
      },
      "text": "runner: \"ollama\" model: \"llama3:8b-instruct\" temperature: 0.15 readme: style: \"comprehensive\" publish: mode: \"pr\" branch_prefix: \"docgen/\" analyzers: enabled: [language, build, dependencies, patterns] exclude_paths: [\".git/\", \"node_modules/\", \"dist/\", \"target/\"] ci: watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" - \"requirements.txt\" - \"Dockerfile\" ``` --- ## 21) Success Criteria (POC) * For 3 diverse repos (Python CLI, Spring Boot API, Node webapp): * `docgen init` produces a working, linted README with runnable Quick Start. * On changing `pom.xml` or `requirements.txt`, PR updates only relevant sections. * No hallucinated commands; links and badges validate; style consistent. --- If you want, I can spin up a **starter repo layout** (CLI, analyzers, templates, and a simple Ollama adapter) so you can drop it into your environment and run `docgen init` right away.",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    }
  ],
  "deployment": [
    {
      "id": "AGENTS.md#0",
      "vector": {
        "repository": 0.06757373783994859,
        "guidelines": 0.1013606067599229,
        "project": 0.033786868919974296,
        "structure": 0.033786868919974296,
        "module": 0.06757373783994859,
        "organization": 0.033786868919974296,
        "spec": 0.06757373783994859,
        "md": 0.033786868919974296,
        "captures": 0.033786868919974296,
        "the": 0.27029495135979437,
        "end": 0.06757373783994859,
        "to": 0.1013606067599229,
        "architecture": 0.033786868919974296,
        "component": 0.06757373783994859,
        "contracts": 0.033786868919974296,
        "and": 0.43922929595966587,
        "must": 0.033786868919974296,
        "be": 0.033786868919974296,
        "updated": 0.033786868919974296,
        "whenever": 0.033786868919974296,
        "responsibilities": 0.033786868919974296,
        "shift": 0.033786868919974296,
        "place": 0.033786868919974296,
        "python": 0.2027212135198458,
        "source": 0.033786868919974296,
        "in": 0.16893434459987147,
        "a": 0.23650808243982008,
        "docgen": 0.16893434459987147,
        "package": 0.033786868919974296,
        "create": 0.033786868919974296,
        "it": 0.033786868919974296,
        "when": 0.06757373783994859,
        "implementation": 0.033786868919974296,
        "starts": 0.033786868919974296,
        "with": 0.16893434459987147,
        "clear": 0.033786868919974296,
        "submodules": 0.033786868919974296,
        "for": 0.1013606067599229,
        "orchestrator": 0.1013606067599229,
        "analyzers": 0.033786868919974296,
        "runners": 0.033786868919974296,
        "stores": 0.033786868919974296,
        "avoid": 0.06757373783994859,
        "leaving": 0.033786868919974296,
        "logic": 0.033786868919974296,
        "repo": 0.06757373783994859,
        "root": 0.033786868919974296,
        "mirror": 0.033786868919974296,
        "runtime": 0.033786868919974296,
        "modules": 0.06757373783994859,
        "under": 0.1013606067599229,
        "tests": 0.2027212135198458,
        "using": 0.033786868919974296,
        "test_": 0.033786868919974296,
        "py": 0.1013606067599229,
        "co": 0.033786868919974296,
        "locate": 0.033786868919974296,
        "fixtures": 0.06757373783994859,
        "_fixtures": 0.033786868919974296,
        "so": 0.13514747567989718,
        "imports": 0.06757373783994859,
        "stay": 0.06757373783994859,
        "clean": 0.033786868919974296,
        "reusable": 0.033786868919974296,
        "keep": 0.13514747567989718,
        "throwaway": 0.033786868919974296,
        "experiments": 0.033786868919974296,
        "inside": 0.033786868919974296,
        "an": 0.06757373783994859,
        "ignored": 0.033786868919974296,
        "sandbox": 0.033786868919974296,
        "directory": 0.033786868919974296,
        "scans": 0.033786868919974296,
        "remain": 0.033786868919974296,
        "focused": 0.033786868919974296,
        "on": 0.06757373783994859,
        "production": 0.033786868919974296,
        "code": 0.033786868919974296,
        "paths": 0.033786868919974296,
        "build": 0.033786868919974296,
        "test": 0.06757373783994859,
        "development": 0.033786868919974296,
        "commands": 0.033786868919974296,
        "m": 0.16893434459987147,
        "venv": 0.1013606067599229,
        "followed": 0.033786868919974296,
        "by": 0.033786868919974296,
        "scripts": 0.06757373783994859,
        "activate": 0.033786868919974296,
        "aligns": 0.033786868919974296,
        "local": 0.033786868919974296,
        "shells": 0.033786868919974296,
        "pycharm": 0.033786868919974296,
        "interpreter": 0.033786868919974296,
        "settings": 0.033786868919974296,
        "pip": 0.033786868919974296,
        "install": 0.033786868919974296,
        "e": 0.033786868919974296,
        "dev": 0.033786868919974296,
        "after": 0.06757373783994859,
        "pyproject": 0.033786868919974296,
        "toml": 0.033786868919974296,
        "is": 0.1013606067599229,
        "committed": 0.033786868919974296,
        "exposes": 0.033786868919974296,
        "cli": 0.033786868919974296,
        "plugins": 0.033786868919974296,
        "editable": 0.033786868919974296,
        "form": 0.033786868919974296,
        "without": 0.033786868919974296,
        "repeated": 0.033786868919974296,
        "reinstalls": 0.033786868919974296,
        "pytest": 0.06757373783994859,
        "runs": 0.033786868919974296,
        "full": 0.033786868919974296,
        "suite": 0.033786868919974296,
        "append": 0.033786868919974296,
        "k": 0.033786868919974296,
        "pattern": 0.033786868919974296,
        "iterate": 0.033786868919974296,
        "single": 0.06757373783994859,
        "analyzer": 0.06757373783994859,
        "or": 0.06757373783994859,
        "pipeline": 0.1013606067599229,
        "stage": 0.033786868919974296,
        "mypy": 0.033786868919974296,
        "ruff": 0.033786868919974296,
        "check": 0.033786868919974296,
        "catch": 0.033786868919974296,
        "type": 0.033786868919974296,
        "drift": 0.033786868919974296,
        "lint": 0.033786868919974296,
        "violations": 0.033786868919974296,
        "before": 0.06757373783994859,
        "readme": 0.06757373783994859,
        "generation": 0.06757373783994859,
        "attempted": 0.033786868919974296,
        "coding": 0.033786868919974296,
        "style": 0.033786868919974296,
        "naming": 0.033786868919974296,
        "conventions": 0.033786868919974296,
        "follow": 0.06757373783994859,
        "pep": 0.033786868919974296,
        "8": 0.033786868919974296,
        "4": 0.033786868919974296,
        "space": 0.033786868919974296,
        "indents": 0.033786868919974296,
        "explicit": 0.033786868919974296,
        "example": 0.033786868919974296,
        "from": 0.033786868919974296,
        "import": 0.033786868919974296,
        "static": 0.033786868919974296,
        "tooling": 0.033786868919974296,
        "can": 0.033786868919974296,
        "trace": 0.033786868919974296,
        "dependencies": 0.033786868919974296,
        "name": 0.033786868919974296,
        "their": 0.033786868919974296,
        "roles": 0.033786868919974296,
        "prompt_builder": 0.033786868919974296,
        "functions": 0.033786868919974296,
        "snake_case": 0.033786868919974296,
        "descriptive": 0.06757373783994859,
        "nouns": 0.033786868919974296,
        "first": 0.033786868919974296,
        "build_prompt_section": 0.033786868919974296,
        "run": 0.033786868919974296,
        "black": 0.033786868919974296,
        "commits": 0.06757373783994859,
        "manual": 0.033786868919974296,
        "reformatting": 0.033786868919974296,
        "unless": 0.033786868919974296,
        "formatter": 0.033786868919974296,
        "cannot": 0.033786868919974296,
        "resolve": 0.033786868919974296,
        "construct": 0.033786868919974296,
        "testing": 0.06757373783994859,
        "default": 0.033786868919974296,
        "harness": 0.033786868919974296,
        "every": 0.033786868919974296,
        "needs": 0.033786868919974296,
        "unit": 0.033786868919974296,
        "coverage": 0.033786868919974296,
        "plus": 0.033786868919974296,
        "integration": 0.06757373783994859,
        "case": 0.033786868919974296,
        "that": 0.06757373783994859,
        "walks": 0.033786868919974296,
        "snapshot": 0.033786868919974296,
        "through": 0.033786868919974296,
        "use": 0.033786868919974296,
        "names": 0.033786868919974296,
        "such": 0.033786868919974296,
        "as": 0.033786868919974296,
        "test_prompt_builder_handles_missing_signals": 0.033786868919974296,
        "arrange": 0.033786868919974296,
        "act": 0.033786868919974296,
        "assert": 0.033786868919974296,
        "comments": 0.033786868919974296,
        "minimal": 0.033786868919974296,
        "but": 0.033786868919974296,
        "intentional": 0.033786868919974296,
        "store": 0.033786868919974296,
        "regression": 0.033786868919974296,
        "generated": 0.033786868919974296,
        "slices": 0.033786868919974296,
        "data": 0.033786868919974296,
        "update": 0.033786868919974296,
        "them": 0.033786868919974296,
        "helper": 0.033786868919974296,
        "diffs": 0.033786868919974296,
        "reviewable": 0.033786868919974296,
        "commit": 0.033786868919974296,
        "pull": 0.033786868919974296,
        "request": 0.033786868919974296,
        "conventional": 0.033786868919974296,
        "feat": 0.033786868919974296,
        "fix": 0.033786868919974296,
        "docs": 0.033786868919974296,
        "subject": 0.033786868919974296,
        "lines": 0.033786868919974296,
        "72": 0.033786868919974296,
        "characters": 0.033786868919974296,
        "explain": 0.033786868919974296,
        "broader": 0.033786868919974296,
        "scope": 0.033786868919974296,
        "body": 0.033786868919974296,
        "multiple": 0.033786868919974296,
        "subsystems": 0.033786868919974296,
        "change": 0.033786868919974296,
        "bundle": 0.033786868919974296,
        "related": 0.033786868919974296,
        "work": 0.033786868919974296,
        "into": 0.033786868919974296,
        "pr": 0.033786868919974296,
        "includes": 0.033786868919974296,
        "summary": 0.033786868919974296,
        "notes": 0.033786868919974296,
        "links": 0.033786868919974296
      },
      "text": "# Repository Guidelines ## Project Structure & Module Organization - `spec/spec.md` captures the end-to-end architecture, component contracts, and must be updated whenever responsibilities shift. - Place Python source in a `docgen/` package (create it when implementation starts) with clear submodules for orchestrator, analyzers, runners, and stores; avoid leaving logic in the repo root. - Mirror runtime modules under `tests/` using `test_<module>.py`; co-locate fixtures in `tests/_fixtures/` so imports stay clean and reusable. - Keep throwaway experiments inside an ignored `sandbox/` directory so repository scans remain focused on production code paths. ## Build, Test, and Development Commands - `python -m venv .venv` followed by `.\\\\.venv\\\\Scripts\\\\activate` aligns local shells with the PyCharm interpreter settings. - `python -m pip install -e .[dev]` (after a `pyproject.toml` is committed) exposes the CLI and plugins in editable form without repeated reinstalls. - `python -m pytest` runs the full suite; append `-k <pattern>` to iterate on a single analyzer or pipeline stage. - `python -m mypy docgen` and `python -m ruff check docgen tests` catch type drift and lint violations before README generation is attempted. ## Coding Style & Naming Conventions - Follow PEP 8 with 4-space indents and explicit imports (for example, `from docgen.orchestrator import Pipeline`) so static tooling can trace dependencies. - Name modules after their roles (`orchestrator.py`, `prompt_builder.py`) and keep functions snake_case with descriptive nouns first (`build_prompt_section`). - Run `black docgen tests` before commits; avoid manual reformatting unless the formatter cannot resolve a construct. ## Testing Guidelines - Pytest is the default harness; every analyzer or pipeline component needs unit coverage plus an integration case under `tests/integration/` that walks a repo snapshot through generation. - Use descriptive test names such as `test_prompt_builder_handles_missing_signals` and keep Arrange-Act-Assert comments minimal but intentional. - Store regression fixtures for generated README slices under `tests/data/` and update them with helper scripts so diffs stay reviewable. ## Commit & Pull Request Guidelines - Follow Conventional Commits (`feat:`, `fix:`, `docs:`); keep subject lines <=72 characters and explain broader scope in the body when multiple subsystems change. - Bundle related work into a single PR that includes a summary, testing notes, and links to",
      "metadata": {
        "path": "AGENTS.md",
        "tags": [
          "docs"
        ],
        "hash": "dfeeea63c97ae7cb3036fbb0312edaee5f377b31178db6fbde6c843da7ceb8d2"
      }
    },
    {
      "id": "AGENTS.md#1",
      "vector": {
        "readme": 0.1270001270001905,
        "slices": 0.06350006350009525,
        "under": 0.06350006350009525,
        "tests": 0.06350006350009525,
        "data": 0.06350006350009525,
        "and": 0.4445004445006667,
        "update": 0.06350006350009525,
        "them": 0.06350006350009525,
        "with": 0.06350006350009525,
        "helper": 0.06350006350009525,
        "scripts": 0.06350006350009525,
        "so": 0.06350006350009525,
        "diffs": 0.06350006350009525,
        "stay": 0.06350006350009525,
        "reviewable": 0.06350006350009525,
        "commit": 0.1270001270001905,
        "pull": 0.06350006350009525,
        "request": 0.06350006350009525,
        "guidelines": 0.06350006350009525,
        "follow": 0.06350006350009525,
        "conventional": 0.06350006350009525,
        "commits": 0.06350006350009525,
        "feat": 0.06350006350009525,
        "fix": 0.06350006350009525,
        "docs": 0.1270001270001905,
        "keep": 0.1270001270001905,
        "subject": 0.06350006350009525,
        "lines": 0.06350006350009525,
        "72": 0.06350006350009525,
        "characters": 0.06350006350009525,
        "explain": 0.06350006350009525,
        "broader": 0.06350006350009525,
        "scope": 0.06350006350009525,
        "in": 0.254000254000381,
        "the": 0.31750031750047625,
        "body": 0.06350006350009525,
        "when": 0.1270001270001905,
        "multiple": 0.06350006350009525,
        "subsystems": 0.06350006350009525,
        "change": 0.06350006350009525,
        "bundle": 0.06350006350009525,
        "related": 0.06350006350009525,
        "work": 0.1270001270001905,
        "into": 0.06350006350009525,
        "a": 0.254000254000381,
        "single": 0.06350006350009525,
        "pr": 0.1270001270001905,
        "that": 0.06350006350009525,
        "includes": 0.06350006350009525,
        "summary": 0.06350006350009525,
        "testing": 0.06350006350009525,
        "notes": 0.1270001270001905,
        "links": 0.06350006350009525,
        "to": 0.06350006350009525,
        "relevant": 0.06350006350009525,
        "issues": 0.06350006350009525,
        "or": 0.06350006350009525,
        "spec": 0.06350006350009525,
        "sections": 0.06350006350009525,
        "attach": 0.06350006350009525,
        "before": 0.1270001270001905,
        "after": 0.06350006350009525,
        "excerpts": 0.06350006350009525,
        "altering": 0.06350006350009525,
        "generation": 0.06350006350009525,
        "output": 0.06350006350009525,
        "run": 0.06350006350009525,
        "lint": 0.06350006350009525,
        "type": 0.06350006350009525,
        "check": 0.06350006350009525,
        "test": 0.06350006350009525,
        "commands": 0.06350006350009525,
        "opening": 0.06350006350009525,
        "paste": 0.06350006350009525,
        "condensed": 0.06350006350009525,
        "results": 0.06350006350009525,
        "description": 0.06350006350009525,
        "for": 0.06350006350009525,
        "quick": 0.06350006350009525,
        "verification": 0.06350006350009525,
        "environment": 0.1270001270001905,
        "tooling": 0.06350006350009525,
        "reuse": 0.06350006350009525,
        "local": 0.1270001270001905,
        "venv": 0.06350006350009525,
        "seeded": 0.06350006350009525,
        "by": 0.1270001270001905,
        "pycharm": 0.06350006350009525,
        "do": 0.06350006350009525,
        "not": 0.06350006350009525,
        "artifacts": 0.06350006350009525,
        "store": 0.06350006350009525,
        "secrets": 0.06350006350009525,
        "env": 0.06350006350009525,
        "consumed": 0.06350006350009525,
        "llm": 0.06350006350009525,
        "runner": 0.06350006350009525,
        "large": 0.06350006350009525,
        "model": 0.06350006350009525,
        "weights": 0.06350006350009525,
        "outside": 0.06350006350009525,
        "repository": 0.06350006350009525,
        "document": 0.06350006350009525,
        "their": 0.06350006350009525,
        "locations": 0.06350006350009525,
        "models": 0.06350006350009525,
        "md": 0.06350006350009525,
        "once": 0.06350006350009525,
        "integration": 0.06350006350009525,
        "begins": 0.06350006350009525
      },
      "text": "README slices under `tests/data/` and update them with helper scripts so diffs stay reviewable. ## Commit & Pull Request Guidelines - Follow Conventional Commits (`feat:`, `fix:`, `docs:`); keep subject lines <=72 characters and explain broader scope in the body when multiple subsystems change. - Bundle related work into a single PR that includes a summary, testing notes, and links to relevant issues or spec sections; attach before/after README excerpts when altering generation output. - Run lint, type-check, and test commands before opening a PR and paste condensed results in the description for quick verification. ## Environment & Tooling Notes - Reuse the local `.venv` seeded by PyCharm; do not commit environment artifacts and store secrets in a `.env` consumed by the local LLM runner. - Keep large model weights outside the repository and document their locations in `docs/models.md` once integration work begins.",
      "metadata": {
        "path": "AGENTS.md",
        "tags": [
          "docs"
        ],
        "hash": "dfeeea63c97ae7cb3036fbb0312edaee5f377b31178db6fbde6c843da7ceb8d2"
      }
    },
    {
      "id": "README_before.md#0",
      "vector": {
        "docgen": 0.6611099775215866,
        "begin": 0.12592571000411173,
        "badges": 0.06296285500205587,
        "build": 0.15740713750513965,
        "status": 0.031481427501027934,
        "https": 0.0944442825030838,
        "img": 0.0944442825030838,
        "shields": 0.0944442825030838,
        "io": 0.0944442825030838,
        "badge": 0.0944442825030838,
        "pending": 0.031481427501027934,
        "lightgrey": 0.0944442825030838,
        "svg": 0.0944442825030838,
        "coverage": 0.06296285500205587,
        "review": 0.031481427501027934,
        "needed": 0.031481427501027934,
        "license": 0.12592571000411173,
        "tbd": 0.031481427501027934,
        "end": 0.0944442825030838,
        "toc": 0.06296285500205587,
        "table": 0.031481427501027934,
        "of": 0.031481427501027934,
        "contents": 0.031481427501027934,
        "features": 0.12592571000411173,
        "architecture": 0.06296285500205587,
        "high": 0.06296285500205587,
        "level": 0.06296285500205587,
        "flow": 0.06296285500205587,
        "component": 0.06296285500205587,
        "responsibilities": 0.06296285500205587,
        "artifacts": 0.06296285500205587,
        "and": 0.2833328475092514,
        "data": 0.06296285500205587,
        "stores": 0.06296285500205587,
        "pipeline": 0.06296285500205587,
        "sequence": 0.12592571000411173,
        "init": 0.0944442825030838,
        "patch": 0.06296285500205587,
        "update": 0.0944442825030838,
        "api": 0.06296285500205587,
        "signal": 0.06296285500205587,
        "extraction": 0.06296285500205587,
        "quick": 0.06296285500205587,
        "start": 0.06296285500205587,
        "configuration": 0.06296285500205587,
        "test": 0.06296285500205587,
        "deployment": 0.06296285500205587,
        "troubleshooting": 0.06296285500205587,
        "faq": 0.06296285500205587,
        "intro": 0.06296285500205587,
        "is": 0.031481427501027934,
        "a": 0.0944442825030838,
        "local": 0.0944442825030838,
        "first": 0.031481427501027934,
        "readme": 0.06296285500205587,
        "generator": 0.031481427501027934,
        "for": 0.0944442825030838,
        "polyglot": 0.031481427501027934,
        "repositories": 0.031481427501027934,
        "it": 0.031481427501027934,
        "scans": 0.031481427501027934,
        "every": 0.06296285500205587,
        "tracked": 0.031481427501027934,
        "file": 0.031481427501027934,
        "publishes": 0.031481427501027934,
        "analyzer": 0.06296285500205587,
        "signals": 0.0944442825030838,
        "retrieves": 0.031481427501027934,
        "grounded": 0.031481427501027934,
        "context": 0.06296285500205587,
        "guides": 0.031481427501027934,
        "llm": 0.06296285500205587,
        "through": 0.031481427501027934,
        "templated": 0.031481427501027934,
        "sections": 0.031481427501027934,
        "to": 0.031481427501027934,
        "produce": 0.031481427501027934,
        "or": 0.031481427501027934,
        "documentation": 0.031481427501027934,
        "this": 0.031481427501027934,
        "overview": 0.031481427501027934,
        "reflects": 0.031481427501027934,
        "complete": 0.031481427501027934,
        "pass": 0.031481427501027934,
        "across": 0.031481427501027934,
        "tests": 0.031481427501027934,
        "spec": 0.031481427501027934,
        "docs": 0.06296285500205587,
        "so": 0.031481427501027934,
        "contributors": 0.031481427501027934,
        "understand": 0.031481427501027934,
        "abstraction": 0.031481427501027934,
        "before": 0.031481427501027934,
        "running": 0.031481427501027934,
        "repository": 0.06296285500205587,
        "manifest": 0.031481427501027934,
        "caching": 0.031481427501027934,
        "repo_scanner": 0.031481427501027934,
        "py": 0.15740713750513965,
        "walks": 0.031481427501027934,
        "the": 0.031481427501027934,
        "tree": 0.031481427501027934,
        "respects": 0.031481427501027934,
        "gitignore": 0.031481427501027934,
        "yml": 0.031481427501027934,
        "hashes": 0.031481427501027934,
        "files": 0.031481427501027934,
        "persists": 0.031481427501027934,
        "manifest_cache": 0.031481427501027934,
        "json": 0.06296285500205587,
        "incremental": 0.031481427501027934,
        "runs": 0.031481427501027934,
        "plugin": 0.031481427501027934,
        "system": 0.031481427501027934,
        "analyzers": 0.031481427501027934,
        "discover": 0.031481427501027934,
        "language": 0.031481427501027934,
        "dependency": 0.031481427501027934,
        "entrypoint": 0.031481427501027934,
        "pattern": 0.031481427501027934,
        "structure": 0.031481427501027934,
        "that": 0.031481427501027934,
        "describe": 0.031481427501027934,
        "frameworks": 0.031481427501027934,
        "commands": 0.06296285500205587,
        "apis": 0.031481427501027934,
        "entities": 0.031481427501027934,
        "topology": 0.031481427501027934,
        "template": 0.031481427501027934,
        "driven": 0.031481427501027934,
        "prompting": 0.06296285500205587,
        "builder": 0.031481427501027934,
        "merges": 0.031481427501027934,
        "with": 0.031481427501027934,
        "jinja": 0.031481427501027934,
        "templates": 0.031481427501027934,
        "validates": 0.031481427501027934,
        "applies": 0.031481427501027934,
        "style": 0.031481427501027934,
        "presets": 0.031481427501027934,
        "injects": 0.031481427501027934,
        "retrieved": 0.031481427501027934,
        "per": 0.031481427501027934,
        "section": 0.06296285500205587,
        "lightweight": 0.031481427501027934,
        "rag": 0.06296285500205587,
        "index": 0.031481427501027934,
        "indexer": 0.031481427501027934,
        "embedder": 0.031481427501027934,
        "store": 0.031481427501027934,
        "embed": 0.031481427501027934,
        "source": 0.031481427501027934,
        "excerpts": 0.031481427501027934,
        "into": 0.031481427501027934,
        "embeddings": 0.031481427501027934,
        "scoped": 0.031481427501027934,
        "retrieval": 0.031481427501027934,
        "enforcement": 0.031481427501027934
      },
      "text": "# docgen <!-- docgen:begin:badges --> [![Build Status](https://img.shields.io/badge/build-pending-lightgrey.svg)](#) [![Coverage](https://img.shields.io/badge/coverage-review--needed-lightgrey.svg)](#) [![License](https://img.shields.io/badge/license-tbd-lightgrey.svg)](#) <!-- docgen:end:badges --> <!-- docgen:begin:toc --> ## Table of Contents - [Features](#features) - [Architecture](#architecture) - [High-Level Flow](#high-level-flow) - [Component Responsibilities](#component-responsibilities) - [Artifacts and Data Stores](#artifacts-and-data-stores) - [Pipeline Sequence (`docgen init`)](#pipeline-sequence-docgen-init) - [Patch Sequence (`docgen update`)](#patch-sequence-docgen-update) - [API Signal Extraction](#api-signal-extraction) - [Quick Start](#quick-start) - [Configuration](#configuration) - [Build & Test](#build-test) - [Deployment](#deployment) - [Troubleshooting](#troubleshooting) - [FAQ](#faq) - [License](#license) <!-- docgen:end:toc --> <!-- docgen:begin:intro --> docgen is a local-first README generator for polyglot repositories. It scans every tracked file, publishes analyzer signals, retrieves grounded context, and guides a local LLM through templated sections to produce or update documentation. This overview reflects a complete pass across `docgen/`, `tests/`, `spec/`, and `docs/` so contributors understand every abstraction before running `docgen init`. <!-- docgen:end:intro --> ## Features <!-- docgen:begin:features --> - **Repository manifest & caching** - `docgen/repo_scanner.py` walks the tree, respects `.gitignore`/`.docgen.yml`, hashes files, and persists `manifest_cache.json` for incremental runs. - **Analyzer plugin system** - `docgen/analyzers/*` discover language, build, dependency, entrypoint, pattern, and structure signals that describe frameworks, commands, APIs, entities, and repository topology. - **Template-driven prompting** - `docgen/prompting/builder.py` merges signals with Jinja templates, validates commands, applies style presets, and injects retrieved context per section. - **Lightweight RAG index** - `docgen/rag/indexer.py`, `embedder.py`, and `store.py` embed README/docs/source excerpts into `.docgen/embeddings.json` for section-scoped retrieval. - **Local LLM enforcement** -",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#1",
      "vector": {
        "docgen": 0.48261708906584017,
        "prompting": 0.06434894520877868,
        "builder": 0.03217447260438934,
        "py": 0.3217447260438934,
        "merges": 0.03217447260438934,
        "signals": 0.03217447260438934,
        "with": 0.06434894520877868,
        "jinja": 0.06434894520877868,
        "templates": 0.06434894520877868,
        "validates": 0.03217447260438934,
        "commands": 0.03217447260438934,
        "applies": 0.03217447260438934,
        "style": 0.03217447260438934,
        "presets": 0.03217447260438934,
        "and": 0.2252213082307254,
        "injects": 0.03217447260438934,
        "retrieved": 0.03217447260438934,
        "context": 0.03217447260438934,
        "per": 0.03217447260438934,
        "section": 0.06434894520877868,
        "lightweight": 0.03217447260438934,
        "rag": 0.1608723630219467,
        "index": 0.03217447260438934,
        "indexer": 0.03217447260438934,
        "embedder": 0.03217447260438934,
        "store": 0.03217447260438934,
        "embed": 0.03217447260438934,
        "readme": 0.09652341781316803,
        "docs": 0.03217447260438934,
        "source": 0.03217447260438934,
        "excerpts": 0.03217447260438934,
        "into": 0.03217447260438934,
        "embeddings": 0.06434894520877868,
        "json": 0.06434894520877868,
        "for": 0.03217447260438934,
        "scoped": 0.03217447260438934,
        "retrieval": 0.03217447260438934,
        "local": 0.06434894520877868,
        "llm": 0.19304683562633607,
        "enforcement": 0.03217447260438934,
        "runner": 0.06434894520877868,
        "targets": 0.03217447260438934,
        "loopback": 0.03217447260438934,
        "model": 0.06434894520877868,
        "or": 0.06434894520877868,
        "ollama": 0.03217447260438934,
        "blocks": 0.03217447260438934,
        "remote": 0.03217447260438934,
        "hosts": 0.03217447260438934,
        "exposes": 0.03217447260438934,
        "configurable": 0.03217447260438934,
        "temperature": 0.03217447260438934,
        "token": 0.03217447260438934,
        "limits": 0.03217447260438934,
        "post": 0.2252213082307254,
        "processing": 0.09652341781316803,
        "contract": 0.03217447260438934,
        "postproc": 0.03217447260438934,
        "add": 0.03217447260438934,
        "badges": 0.06434894520877868,
        "rebuild": 0.03217447260438934,
        "the": 0.1608723630219467,
        "toc": 0.06434894520877868,
        "lint": 0.06434894520877868,
        "markdown": 0.03217447260438934,
        "validate": 0.03217447260438934,
        "links": 0.06434894520877868,
        "manage": 0.03217447260438934,
        "markers": 0.03217447260438934,
        "compute": 0.03217447260438934,
        "scorecards": 0.03217447260438934,
        "saved": 0.03217447260438934,
        "to": 0.09652341781316803,
        "scorecard": 0.06434894520877868,
        "git": 0.1608723630219467,
        "aware": 0.03217447260438934,
        "publishing": 0.06434894520877868,
        "diff": 0.03217447260438934,
        "maps": 0.03217447260438934,
        "changed": 0.03217447260438934,
        "files": 0.03217447260438934,
        "sections": 0.03217447260438934,
        "while": 0.03217447260438934,
        "publisher": 0.06434894520877868,
        "commits": 0.03217447260438934,
        "opens": 0.03217447260438934,
        "prs": 0.03217447260438934,
        "generated": 0.03217447260438934,
        "deltas": 0.03217447260438934,
        "via": 0.03217447260438934,
        "github": 0.03217447260438934,
        "cli": 0.19304683562633607,
        "resilient": 0.03217447260438934,
        "ux": 0.03217447260438934,
        "failsafe": 0.03217447260438934,
        "provide": 0.03217447260438934,
        "verbose": 0.03217447260438934,
        "logging": 0.03217447260438934,
        "hooks": 0.03217447260438934,
        "dry": 0.03217447260438934,
        "run": 0.03217447260438934,
        "preview": 0.03217447260438934,
        "support": 0.03217447260438934,
        "fallback": 0.03217447260438934,
        "stubs": 0.03217447260438934,
        "when": 0.03217447260438934,
        "pipeline": 0.06434894520877868,
        "cannot": 0.03217447260438934,
        "complete": 0.03217447260438934,
        "end": 0.09652341781316803,
        "features": 0.03217447260438934,
        "architecture": 0.06434894520877868,
        "begin": 0.03217447260438934,
        "high": 0.03217447260438934,
        "level": 0.03217447260438934,
        "flow": 0.03217447260438934,
        "orchestrator": 0.09652341781316803,
        "coordinates": 0.03217447260438934,
        "described": 0.03217447260438934,
        "in": 0.03217447260438934,
        "spec": 0.06434894520877868,
        "md": 0.06434894520877868,
        "composing": 0.03217447260438934,
        "scanners": 0.03217447260438934,
        "analyzers": 0.06434894520877868,
        "services": 0.03217447260438934,
        "mermaid": 0.03217447260438934,
        "flowchart": 0.03217447260438934,
        "lr": 0.03217447260438934,
        "init": 0.03217447260438934,
        "update": 0.03217447260438934,
        "orc": 0.2573957808351147,
        "scan": 0.06434894520877868,
        "reposcanner": 0.03217447260438934,
        "n": 0.2252213082307254,
        "manifest": 0.03217447260438934,
        "ana": 0.06434894520877868,
        "language": 0.03217447260438934,
        "build": 0.03217447260438934,
        "etc": 0.03217447260438934,
        "ragindexer": 0.03217447260438934,
        "prompt": 0.1608723630219467,
        "promptbuilder": 0.03217447260438934,
        "llmrunner": 0.03217447260438934,
        "commit": 0.03217447260438934,
        "pr": 0.03217447260438934,
        "output": 0.06434894520877868,
        "artifacts": 0.03217447260438934,
        "component": 0.03217447260438934,
        "responsibilities": 0.03217447260438934,
        "layer": 0.03217447260438934,
        "key": 0.03217447260438934
      },
      "text": "- `docgen/prompting/builder.py` merges signals with Jinja templates, validates commands, applies style presets, and injects retrieved context per section. - **Lightweight RAG index** - `docgen/rag/indexer.py`, `embedder.py`, and `store.py` embed README/docs/source excerpts into `.docgen/embeddings.json` for section-scoped retrieval. - **Local LLM enforcement** - `docgen/llm/runner.py` targets loopback Model Runner or Ollama, blocks remote hosts, and exposes configurable temperature/token limits. - **Post-processing contract** - `docgen/postproc/*` add badges, rebuild the ToC, lint markdown, validate links, manage markers, and compute scorecards saved to `.docgen/scorecard.json`. - **Git-aware publishing** - `docgen/git/diff.py` maps changed files to sections while `docgen/git/publisher.py` commits or opens PRs with generated README deltas via the GitHub CLI. - **Resilient CLI UX** - `docgen/cli.py` and `docgen/failsafe.py` provide verbose logging hooks, dry-run preview support, and fallback stubs when the LLM pipeline cannot complete. <!-- docgen:end:features --> ## Architecture <!-- docgen:begin:architecture --> ### High-Level Flow The orchestrator (`docgen/orchestrator.py`) coordinates the end-to-end pipeline described in `spec/spec.md`, composing scanners, analyzers, prompting, RAG, post-processing, and publishing services. ```mermaid flowchart LR CLI[\"CLI (docgen init/update)\"] Orc[\"Orchestrator\"] Scan[\"RepoScanner\\n(manifest)\"] Ana[\"Analyzers\\n(language/build/etc)\"] RAG[\"RAGIndexer\\n(embeddings)\"] Prompt[\"PromptBuilder\\n(Jinja templates)\"] LLM[\"LLMRunner\\n(local model)\"] Post[\"Post-Processing\\n(lint, ToC, badges, links, scorecard)\"] Git[\"Publisher\\n(commit/PR)\"] Output[\"README.md + .docgen artifacts\"] CLI --> Orc Orc --> Scan Orc --> Ana Orc --> RAG Orc --> Prompt Prompt --> LLM LLM --> Prompt Prompt --> Orc Orc --> Post Post --> Output Post --> Git ``` ### Component Responsibilities | Layer | Key",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#2",
      "vector": {
        "orc": 0.2960684541064695,
        "scan": 0.042295493443781355,
        "ana": 0.042295493443781355,
        "rag": 0.12688648033134406,
        "prompt": 0.16918197377512542,
        "llm": 0.16918197377512542,
        "post": 0.16918197377512542,
        "output": 0.042295493443781355,
        "git": 0.042295493443781355,
        "component": 0.042295493443781355,
        "responsibilities": 0.042295493443781355,
        "layer": 0.042295493443781355,
        "key": 0.042295493443781355,
        "modules": 0.08459098688756271,
        "purpose": 0.042295493443781355,
        "cli": 0.12688648033134406,
        "logging": 0.08459098688756271,
        "docgen": 0.46525042788159493,
        "py": 0.42295493443781357,
        "parses": 0.08459098688756271,
        "subcommands": 0.042295493443781355,
        "wires": 0.042295493443781355,
        "verbose": 0.042295493443781355,
        "and": 0.33836394755025084,
        "configures": 0.042295493443781355,
        "namespaced": 0.042295493443781355,
        "loggers": 0.042295493443781355,
        "configuration": 0.042295493443781355,
        "config": 0.042295493443781355,
        "yml": 0.042295493443781355,
        "into": 0.042295493443781355,
        "docgenconfig": 0.042295493443781355,
        "llmconfig": 0.042295493443781355,
        "publishconfig": 0.042295493443781355,
        "analyzerconfig": 0.042295493443781355,
        "ciconfig": 0.042295493443781355,
        "with": 0.042295493443781355,
        "a": 0.042295493443781355,
        "handwritten": 0.042295493443781355,
        "yaml": 0.042295493443781355,
        "fallback": 0.042295493443781355,
        "repository": 0.042295493443781355,
        "scanning": 0.042295493443781355,
        "repo_scanner": 0.042295493443781355,
        "builds": 0.08459098688756271,
        "repomanifest": 0.042295493443781355,
        "of": 0.08459098688756271,
        "filemeta": 0.042295493443781355,
        "entries": 0.042295493443781355,
        "enforces": 0.042295493443781355,
        "ignore": 0.042295493443781355,
        "rules": 0.042295493443781355,
        "infers": 0.042295493443781355,
        "file": 0.042295493443781355,
        "roles": 0.042295493443781355,
        "caches": 0.042295493443781355,
        "hashes": 0.042295493443781355,
        "in": 0.042295493443781355,
        "manifest_cache": 0.042295493443781355,
        "json": 0.042295493443781355,
        "analyzer": 0.042295493443781355,
        "plugins": 0.042295493443781355,
        "analyzers": 0.042295493443781355,
        "emit": 0.042295493443781355,
        "signal": 0.042295493443781355,
        "objects": 0.042295493443781355,
        "for": 0.042295493443781355,
        "languages": 0.042295493443781355,
        "frameworks": 0.042295493443781355,
        "build": 0.042295493443781355,
        "tools": 0.042295493443781355,
        "dependencies": 0.042295493443781355,
        "entrypoints": 0.042295493443781355,
        "structural": 0.042295493443781355,
        "api": 0.042295493443781355,
        "routes": 0.042295493443781355,
        "entities": 0.042295493443781355,
        "patterns": 0.042295493443781355,
        "monorepo": 0.042295493443781355,
        "hints": 0.042295493443781355,
        "prompting": 0.08459098688756271,
        "builder": 0.042295493443781355,
        "templates": 0.08459098688756271,
        "groups": 0.042295493443781355,
        "signals": 0.042295493443781355,
        "retrieves": 0.042295493443781355,
        "context": 0.08459098688756271,
        "renders": 0.042295493443781355,
        "section": 0.08459098688756271,
        "performs": 0.042295493443781355,
        "command": 0.042295493443781355,
        "validation": 0.042295493443781355,
        "estimates": 0.042295493443781355,
        "token": 0.042295493443781355,
        "budgets": 0.042295493443781355,
        "retrieval": 0.042295493443781355,
        "indexer": 0.042295493443781355,
        "embedder": 0.042295493443781355,
        "store": 0.042295493443781355,
        "constants": 0.042295493443781355,
        "chunks": 0.042295493443781355,
        "readme": 0.042295493443781355,
        "docs": 0.042295493443781355,
        "source": 0.042295493443781355,
        "files": 0.042295493443781355,
        "computes": 0.042295493443781355,
        "bag": 0.042295493443781355,
        "words": 0.042295493443781355,
        "embeddings": 0.042295493443781355,
        "persists": 0.042295493443781355,
        "per": 0.042295493443781355,
        "prunes": 0.042295493443781355,
        "stale": 0.042295493443781355,
        "vectors": 0.042295493443781355,
        "runtime": 0.042295493443781355,
        "runner": 0.042295493443781355,
        "chooses": 0.042295493443781355,
        "http": 0.042295493443781355,
        "or": 0.042295493443781355,
        "execution": 0.042295493443781355,
        "openai": 0.042295493443781355,
        "compatible": 0.042295493443781355,
        "payloads": 0.042295493443781355,
        "restricts": 0.042295493443781355,
        "to": 0.042295493443781355,
        "loopback": 0.042295493443781355,
        "hosts": 0.042295493443781355,
        "normalizes": 0.042295493443781355,
        "responses": 0.042295493443781355,
        "processing": 0.042295493443781355,
        "postproc": 0.042295493443781355,
        "manages": 0.042295493443781355,
        "markers": 0.042295493443781355,
        "regenerates": 0.042295493443781355,
        "toc": 0.042295493443781355,
        "applies": 0.042295493443781355,
        "badges": 0.042295493443781355,
        "lints": 0.042295493443781355,
        "markdown": 0.042295493443781355,
        "validates": 0.042295493443781355,
        "links": 0.042295493443781355
      },
      "text": "--> Orc Orc --> Scan Orc --> Ana Orc --> RAG Orc --> Prompt Prompt --> LLM LLM --> Prompt Prompt --> Orc Orc --> Post Post --> Output Post --> Git ``` ### Component Responsibilities | Layer | Key modules | Purpose | | --- | --- | --- | | CLI & Logging | `docgen/cli.py`, `docgen/logging.py` | Parses subcommands, wires `--verbose`, and configures namespaced loggers. | | Configuration | `docgen/config.py` | Parses `.docgen.yml` into `DocGenConfig`, `LLMConfig`, `PublishConfig`, `AnalyzerConfig`, and `CIConfig`, with a handwritten YAML fallback. | | Repository scanning | `docgen/repo_scanner.py` | Builds `RepoManifest` of `FileMeta` entries, enforces ignore rules, infers file roles, and caches hashes in `.docgen/manifest_cache.json`. | | Analyzer plugins | `docgen/analyzers/*` | Emit `Signal` objects for languages, frameworks, build tools, dependencies, entrypoints, structural modules, API routes, entities, patterns, and monorepo hints. | | Prompting | `docgen/prompting/builder.py`, `templates/` | Groups signals, retrieves context, renders section templates, performs command validation, and estimates token budgets. | | Retrieval (RAG) | `docgen/rag/indexer.py`, `embedder.py`, `store.py`, `constants.py` | Chunks README/docs/source files, computes bag-of-words embeddings, persists context per section, and prunes stale vectors. | | LLM runtime | `docgen/llm/runner.py` | Chooses HTTP or CLI execution, builds OpenAI-compatible payloads, restricts to loopback hosts, and normalizes responses. | | Post-processing | `docgen/postproc/*` | Manages markers, regenerates ToC, applies badges, lints markdown, validates links, and",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#3",
      "vector": {
        "vectors": 0.08497185773241747,
        "llm": 0.12745778659862622,
        "runtime": 0.08497185773241747,
        "docgen": 0.4248592886620874,
        "runner": 0.08497185773241747,
        "py": 0.16994371546483494,
        "chooses": 0.042485928866208736,
        "http": 0.042485928866208736,
        "or": 0.12745778659862622,
        "cli": 0.16994371546483494,
        "execution": 0.042485928866208736,
        "builds": 0.042485928866208736,
        "openai": 0.042485928866208736,
        "compatible": 0.042485928866208736,
        "payloads": 0.042485928866208736,
        "restricts": 0.042485928866208736,
        "to": 0.08497185773241747,
        "loopback": 0.042485928866208736,
        "hosts": 0.042485928866208736,
        "and": 0.3398874309296699,
        "normalizes": 0.042485928866208736,
        "responses": 0.042485928866208736,
        "post": 0.08497185773241747,
        "processing": 0.08497185773241747,
        "postproc": 0.042485928866208736,
        "manages": 0.042485928866208736,
        "markers": 0.042485928866208736,
        "regenerates": 0.042485928866208736,
        "toc": 0.042485928866208736,
        "applies": 0.042485928866208736,
        "badges": 0.042485928866208736,
        "lints": 0.042485928866208736,
        "markdown": 0.042485928866208736,
        "validates": 0.042485928866208736,
        "links": 0.042485928866208736,
        "records": 0.042485928866208736,
        "readme": 0.08497185773241747,
        "quality": 0.08497185773241747,
        "metrics": 0.042485928866208736,
        "git": 0.2124296443310437,
        "integration": 0.042485928866208736,
        "diff": 0.042485928866208736,
        "publisher": 0.08497185773241747,
        "maps": 0.042485928866208736,
        "file": 0.08497185773241747,
        "diffs": 0.042485928866208736,
        "affected": 0.042485928866208736,
        "sections": 0.08497185773241747,
        "handles": 0.042485928866208736,
        "staged": 0.042485928866208736,
        "changes": 0.042485928866208736,
        "pushes": 0.042485928866208736,
        "commits": 0.08497185773241747,
        "prs": 0.08497185773241747,
        "with": 0.08497185773241747,
        "optional": 0.042485928866208736,
        "labels": 0.042485928866208736,
        "safety": 0.042485928866208736,
        "nets": 0.042485928866208736,
        "failsafe": 0.042485928866208736,
        "generates": 0.042485928866208736,
        "placeholder": 0.042485928866208736,
        "full": 0.042485928866208736,
        "stubs": 0.08497185773241747,
        "when": 0.042485928866208736,
        "prompting": 0.08497185773241747,
        "fails": 0.042485928866208736,
        "reference": 0.042485928866208736,
        "material": 0.042485928866208736,
        "spec": 0.16994371546483494,
        "md": 0.16994371546483494,
        "feature_order": 0.042485928866208736,
        "feature_checklist": 0.042485928866208736,
        "docs": 0.042485928866208736,
        "ci": 0.08497185773241747,
        "agents": 0.042485928866208736,
        "capture": 0.042485928866208736,
        "architectural": 0.042485928866208736,
        "contracts": 0.042485928866208736,
        "delivery": 0.042485928866208736,
        "roadmap": 0.042485928866208736,
        "feature": 0.042485928866208736,
        "status": 0.042485928866208736,
        "playbooks": 0.042485928866208736,
        "agent": 0.042485928866208736,
        "guidance": 0.042485928866208736,
        "tests": 0.08497185773241747,
        "mirroring": 0.042485928866208736,
        "modules": 0.042485928866208736,
        "pytest": 0.042485928866208736,
        "suite": 0.042485928866208736,
        "covering": 0.042485928866208736,
        "orchestrator": 0.08497185773241747,
        "analyzers": 0.042485928866208736,
        "workflows": 0.042485928866208736,
        "helpers": 0.042485928866208736,
        "artifacts": 0.042485928866208736,
        "data": 0.042485928866208736,
        "stores": 0.042485928866208736,
        "manifest_cache": 0.042485928866208736,
        "json": 0.12745778659862622,
        "cache": 0.042485928866208736,
        "of": 0.08497185773241747,
        "sizes": 0.042485928866208736,
        "mtimes": 0.042485928866208736,
        "hashes": 0.042485928866208736,
        "for": 0.042485928866208736,
        "fast": 0.042485928866208736,
        "re": 0.042485928866208736,
        "scans": 0.042485928866208736,
        "embeddings": 0.042485928866208736,
        "persisted": 0.042485928866208736,
        "embedding": 0.042485928866208736,
        "keyed": 0.042485928866208736,
        "by": 0.08497185773241747,
        "section": 0.042485928866208736,
        "tag": 0.042485928866208736,
        "via": 0.042485928866208736,
        "embeddingstore": 0.042485928866208736,
        "scorecard": 0.042485928866208736,
        "output": 0.042485928866208736,
        "readmescorecard": 0.042485928866208736,
        "evaluate": 0.042485928866208736,
        "tracking": 0.042485928866208736,
        "coverage": 0.042485928866208736,
        "link": 0.042485928866208736,
        "health": 0.042485928866208736,
        "quick": 0.042485928866208736,
        "start": 0.042485928866208736,
        "metadata": 0.042485928866208736,
        "branches": 0.042485928866208736,
        "created": 0.042485928866208736,
        "summaries": 0.042485928866208736,
        "from": 0.042485928866208736,
        "diffanalyzer": 0.042485928866208736,
        "pipeline": 0.042485928866208736,
        "sequence": 0.042485928866208736,
        "init": 0.042485928866208736,
        "mermaid": 0.042485928866208736,
        "sequencediagram": 0.042485928866208736,
        "participant": 0.25491557319725244,
        "dev": 0.042485928866208736,
        "as": 0.25491557319725244,
        "developer": 0.042485928866208736,
        "orc": 0.042485928866208736,
        "scan": 0.042485928866208736,
        "reposcanner": 0.042485928866208736,
        "ana": 0.042485928866208736,
        "analyzer": 0.042485928866208736,
        "plugins": 0.042485928866208736,
        "rag": 0.042485928866208736
      },
      "text": "vectors. | | LLM runtime | `docgen/llm/runner.py` | Chooses HTTP or CLI execution, builds OpenAI-compatible payloads, restricts to loopback hosts, and normalizes responses. | | Post-processing | `docgen/postproc/*` | Manages markers, regenerates ToC, applies badges, lints markdown, validates links, and records README quality metrics. | | Git integration | `docgen/git/diff.py`, `docgen/git/publisher.py` | Maps file diffs to affected sections, handles staged changes, and pushes commits or PRs with optional labels. | | Safety nets | `docgen/failsafe.py` | Generates placeholder sections or full README stubs when prompting fails. | | Reference material | `spec/spec.md`, `spec/feature_order.md`, `spec/feature_checklist.md`, `docs/ci/*`, `AGENTS.md` | Capture architectural contracts, delivery roadmap, feature status, CI playbooks, and agent guidance. | | Tests | `tests/` mirroring runtime modules | Pytest suite covering CLI, orchestrator, analyzers, prompting, git workflows, LLM runner stubs, and post-processing helpers. | ### Artifacts and Data Stores - `.docgen/manifest_cache.json` - cache of file sizes, mtimes, and hashes for fast re-scans. - `.docgen/embeddings.json` - persisted embedding vectors keyed by section/tag via `EmbeddingStore`. - `.docgen/scorecard.json` - output of `ReadmeScorecard.evaluate`, tracking coverage, link health, and quick-start quality. - Git metadata - branches/commits/PRs created by `Publisher` with summaries from `DiffAnalyzer`. ### Pipeline Sequence (`docgen init`) ```mermaid sequenceDiagram participant Dev as Developer participant CLI as docgen CLI participant Orc as Orchestrator participant Scan as RepoScanner participant Ana as Analyzer plugins participant RAG as",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#4",
      "vector": {
        "branches": 0.01984580179179854,
        "commits": 0.01984580179179854,
        "prs": 0.01984580179179854,
        "created": 0.01984580179179854,
        "by": 0.01984580179179854,
        "publisher": 0.03969160358359708,
        "with": 0.01984580179179854,
        "summaries": 0.01984580179179854,
        "from": 0.01984580179179854,
        "diffanalyzer": 0.03969160358359708,
        "pipeline": 0.01984580179179854,
        "sequence": 0.03969160358359708,
        "docgen": 0.11907481075079124,
        "init": 0.03969160358359708,
        "mermaid": 0.03969160358359708,
        "sequencediagram": 0.03969160358359708,
        "participant": 0.4167618376277693,
        "dev": 0.07938320716719416,
        "as": 0.4167618376277693,
        "developer": 0.03969160358359708,
        "cli": 0.15876641433438832,
        "orc": 0.6152198555457548,
        "orchestrator": 0.03969160358359708,
        "scan": 0.15876641433438832,
        "reposcanner": 0.03969160358359708,
        "ana": 0.11907481075079124,
        "analyzer": 0.03969160358359708,
        "plugins": 0.03969160358359708,
        "rag": 0.11907481075079124,
        "ragindexer": 0.03969160358359708,
        "prompt": 0.17861221612618686,
        "promptbuilder": 0.03969160358359708,
        "llm": 0.05953740537539562,
        "llmrunner": 0.01984580179179854,
        "post": 0.15876641433438832,
        "processing": 0.03969160358359708,
        "fs": 0.03969160358359708,
        "filesystem": 0.01984580179179854,
        "run_init": 0.01984580179179854,
        "path": 0.03969160358359708,
        "repomanifest": 0.03969160358359708,
        "filemeta": 0.01984580179179854,
        "analyze": 0.03969160358359708,
        "manifest": 0.0992290089589927,
        "signal": 0.03969160358359708,
        "build": 0.05953740537539562,
        "contexts": 0.03969160358359708,
        "per": 0.01984580179179854,
        "section": 0.07938320716719416,
        "signals": 0.01984580179179854,
        "invoke": 0.01984580179179854,
        "system": 0.01984580179179854,
        "markdown": 0.05953740537539562,
        "full": 0.01984580179179854,
        "readme": 0.07938320716719416,
        "draft": 0.01984580179179854,
        "lint": 0.03969160358359708,
        "toc": 0.03969160358359708,
        "badges": 0.03969160358359708,
        "links": 0.01984580179179854,
        "scorecard": 0.03969160358359708,
        "final": 0.03969160358359708,
        "quality": 0.01984580179179854,
        "report": 0.01984580179179854,
        "write": 0.01984580179179854,
        "md": 0.01984580179179854,
        "git": 0.01984580179179854,
        "optional": 0.01984580179179854,
        "commit": 0.05953740537539562,
        "publish": 0.01984580179179854,
        "mode": 0.01984580179179854,
        "patch": 0.01984580179179854,
        "update": 0.03969160358359708,
        "ci": 0.01984580179179854,
        "diff": 0.0992290089589927,
        "mark": 0.05953740537539562,
        "markermanager": 0.01984580179179854,
        "pub": 0.03969160358359708,
        "base": 0.05953740537539562,
        "ref": 0.01984580179179854,
        "run_update": 0.01984580179179854,
        "compute": 0.01984580179179854,
        "repo": 0.01984580179179854,
        "diffresult": 0.01984580179179854,
        "changed_files": 0.01984580179179854,
        "sections": 0.05953740537539562,
        "context": 0.01984580179179854,
        "snippets": 0.01984580179179854,
        "render_sections": 0.01984580179179854,
        "new": 0.01984580179179854,
        "bodies": 0.01984580179179854,
        "replace": 0.01984580179179854,
        "patched": 0.01984580179179854,
        "link": 0.01984580179179854,
        "check": 0.01984580179179854
      },
      "text": "branches/commits/PRs created by `Publisher` with summaries from `DiffAnalyzer`. ### Pipeline Sequence (`docgen init`) ```mermaid sequenceDiagram participant Dev as Developer participant CLI as docgen CLI participant Orc as Orchestrator participant Scan as RepoScanner participant Ana as Analyzer plugins participant RAG as RAGIndexer participant Prompt as PromptBuilder participant LLM as LLMRunner participant Post as Post-processing participant FS as Filesystem Dev->>CLI: docgen init . CLI->>Orc: run_init(path) Orc->>Scan: scan() Scan-->>Orc: RepoManifest(FileMeta[]) Orc->>Ana: analyze(manifest) Ana-->>Orc: Signal[] Orc->>RAG: build(manifest) RAG-->>Orc: contexts per section Orc->>Prompt: build(manifest, signals, contexts) Prompt->>LLM: invoke(system, prompt) LLM-->>Prompt: section markdown Prompt-->>Orc: full README draft Orc->>Post: lint -> toc -> badges -> links -> scorecard Post-->>Orc: final markdown + quality report Orc->>FS: write README.md Orc->>Git: optional commit (publish mode \"commit\") ``` ### Patch Sequence (`docgen update`) ```mermaid sequenceDiagram participant Dev as Developer/CI participant CLI as docgen CLI participant Orc as Orchestrator participant Diff as DiffAnalyzer participant Scan as RepoScanner participant Ana as Analyzer plugins participant RAG as RAGIndexer participant Prompt as PromptBuilder participant Mark as MarkerManager participant Post as Post-processing participant Pub as Publisher Dev->>CLI: docgen update --diff-base <ref> CLI->>Orc: run_update(path, base) Orc->>Diff: compute(repo, base) Diff-->>Orc: DiffResult(changed_files, sections) Orc->>Scan: scan() Scan-->>Orc: RepoManifest Orc->>Ana: analyze(manifest) Ana-->>Orc: Signal[] Orc->>RAG: build(manifest, sections) RAG-->>Orc: context snippets Orc->>Prompt: render_sections(sections) Prompt-->>Orc: new section bodies Orc->>Mark: replace(markdown, section) Mark-->>Orc: patched README Orc->>Post: lint/toc/badges/link check/scorecard Post-->>Orc: final README + diff Orc->>Pub: commit",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#5",
      "vector": {
        "base": 0.03639372626234195,
        "diff": 0.0727874525246839,
        "orc": 0.5095121676727873,
        "diffresult": 0.03639372626234195,
        "changed_files": 0.03639372626234195,
        "sections": 0.1455749050493678,
        "scan": 0.10918117878702585,
        "repomanifest": 0.03639372626234195,
        "ana": 0.0727874525246839,
        "analyze": 0.03639372626234195,
        "manifest": 0.10918117878702585,
        "signal": 0.1455749050493678,
        "rag": 0.0727874525246839,
        "build": 0.0727874525246839,
        "context": 0.03639372626234195,
        "snippets": 0.03639372626234195,
        "prompt": 0.0727874525246839,
        "render_sections": 0.03639372626234195,
        "new": 0.03639372626234195,
        "section": 0.0727874525246839,
        "bodies": 0.03639372626234195,
        "mark": 0.0727874525246839,
        "replace": 0.03639372626234195,
        "markdown": 0.03639372626234195,
        "patched": 0.03639372626234195,
        "readme": 0.0727874525246839,
        "post": 0.1455749050493678,
        "lint": 0.03639372626234195,
        "toc": 0.03639372626234195,
        "badges": 0.03639372626234195,
        "link": 0.03639372626234195,
        "check": 0.03639372626234195,
        "scorecard": 0.03639372626234195,
        "final": 0.03639372626234195,
        "pub": 0.03639372626234195,
        "commit": 0.03639372626234195,
        "or": 0.03639372626234195,
        "pr": 0.03639372626234195,
        "branch": 0.03639372626234195,
        "title": 0.03639372626234195,
        "body": 0.03639372626234195,
        "api": 0.2911498100987356,
        "extraction": 0.03639372626234195,
        "structureanalyzer": 0.03639372626234195,
        "inspects": 0.03639372626234195,
        "source": 0.03639372626234195,
        "files": 0.0727874525246839,
        "for": 0.03639372626234195,
        "fastapi": 0.10918117878702585,
        "decorators": 0.03639372626234195,
        "express": 0.03639372626234195,
        "route": 0.03639372626234195,
        "calls": 0.0727874525246839,
        "and": 0.3275435363610775,
        "pydantic": 0.03639372626234195,
        "orm": 0.03639372626234195,
        "entities": 0.03639372626234195,
        "each": 0.03639372626234195,
        "match": 0.03639372626234195,
        "emits": 0.03639372626234195,
        "metadata": 0.03639372626234195,
        "such": 0.03639372626234195,
        "as": 0.18196863131170973,
        "handler": 0.03639372626234195,
        "names": 0.03639372626234195,
        "http": 0.03639372626234195,
        "verbs": 0.03639372626234195,
        "detected": 0.03639372626234195,
        "external": 0.0727874525246839,
        "requests": 0.0727874525246839,
        "session": 0.0727874525246839,
        "db": 0.1455749050493678,
        "assembled": 0.03639372626234195,
        "sequence": 0.03639372626234195,
        "steps": 0.03639372626234195,
        "that": 0.0727874525246839,
        "downstream": 0.03639372626234195,
        "templates": 0.03639372626234195,
        "render": 0.03639372626234195,
        "diagrams": 0.03639372626234195,
        "mermaid": 0.03639372626234195,
        "sequencediagram": 0.03639372626234195,
        "participant": 0.1455749050493678,
        "client": 0.10918117878702585,
        "endpoint": 0.03639372626234195,
        "auth": 0.10918117878702585,
        "service": 0.03639372626234195,
        "database": 0.03639372626234195,
        "login": 0.03639372626234195,
        "token": 0.03639372626234195,
        "response": 0.0727874525246839,
        "write": 0.03639372626234195,
        "ack": 0.03639372626234195,
        "authenticated": 0.03639372626234195,
        "other": 0.03639372626234195,
        "analyzers": 0.0727874525246839,
        "complement": 0.03639372626234195,
        "these": 0.03639372626234195,
        "signals": 0.03639372626234195,
        "entrypointanalyzer": 0.03639372626234195,
        "ranks": 0.03639372626234195,
        "executable": 0.03639372626234195,
        "commands": 0.0727874525246839,
        "uvicorn": 0.03639372626234195,
        "django": 0.03639372626234195,
        "runserver": 0.03639372626234195,
        "npm": 0.03639372626234195,
        "dev": 0.03639372626234195,
        "spring": 0.03639372626234195,
        "boot": 0.03639372626234195,
        "bootrun": 0.03639372626234195,
        "buildanalyzer": 0.03639372626234195,
        "pairs": 0.03639372626234195,
        "with": 0.03639372626234195,
        "reproducible": 0.03639372626234195,
        "test": 0.03639372626234195,
        "os": 0.03639372626234195,
        "aware": 0.03639372626234195,
        "scripts": 0.0727874525246839,
        "dependencyanalyzer": 0.03639372626234195,
        "patternanalyzer": 0.03639372626234195,
        "languageanalyzer": 0.03639372626234195,
        "describe": 0.03639372626234195,
        "frameworks": 0.03639372626234195,
        "docker": 0.03639372626234195,
        "k8s": 0.03639372626234195,
        "ci": 0.03639372626234195,
        "layouts": 0.03639372626234195,
        "monorepo": 0.03639372626234195,
        "hints": 0.03639372626234195,
        "feed": 0.03639372626234195,
        "the": 0.03639372626234195,
        "features": 0.03639372626234195,
        "architecture": 0.0727874525246839,
        "quick": 0.0727874525246839,
        "start": 0.0727874525246839,
        "tests": 0.1455749050493678,
        "under": 0.03639372626234195,
        "prompting": 0.03639372626234195,
        "git": 0.03639372626234195,
        "assert": 0.03639372626234195,
        "accuracy": 0.03639372626234195,
        "command": 0.03639372626234195,
        "selection": 0.03639372626234195,
        "publishing": 0.03639372626234195,
        "behavior": 0.03639372626234195,
        "docgen": 0.0727874525246839,
        "end": 0.03639372626234195,
        "begin": 0.03639372626234195,
        "quickstart": 0.03639372626234195,
        "1": 0.03639372626234195,
        "create": 0.03639372626234195,
        "a": 0.03639372626234195,
        "virtual": 0.03639372626234195,
        "environment": 0.03639372626234195,
        "activate": 0.0727874525246839,
        "it": 0.03639372626234195,
        "windows": 0.03639372626234195,
        "python": 0.0727874525246839,
        "m": 0.0727874525246839,
        "venv": 0.18196863131170973,
        "then": 0.03639372626234195,
        "macos": 0.03639372626234195,
        "linux": 0.03639372626234195
      },
      "text": "base) Diff-->>Orc: DiffResult(changed_files, sections) Orc->>Scan: scan() Scan-->>Orc: RepoManifest Orc->>Ana: analyze(manifest) Ana-->>Orc: Signal[] Orc->>RAG: build(manifest, sections) RAG-->>Orc: context snippets Orc->>Prompt: render_sections(sections) Prompt-->>Orc: new section bodies Orc->>Mark: replace(markdown, section) Mark-->>Orc: patched README Orc->>Post: lint/toc/badges/link check/scorecard Post-->>Orc: final README + diff Orc->>Pub: commit or PR (branch, title, body) ``` ### API Signal Extraction `StructureAnalyzer` inspects source files for FastAPI decorators, Express route calls, and Pydantic/ORM entities. Each match emits `Signal` metadata such as handler names, HTTP verbs, detected external calls (`requests`, `session`, `db`), and assembled `sequence` steps that downstream templates render as diagrams. ```mermaid sequenceDiagram participant Client participant API as FastAPI endpoint participant Auth as External service participant DB as Database Client->>API: POST /login API->>Auth: requests.post() Auth-->>API: token/response API->>DB: session.write() DB-->>API: ack API-->>Client: Authenticated response ``` Other analyzers complement these signals: - `EntryPointAnalyzer` ranks executable commands (FastAPI `uvicorn`, Django `runserver`, npm `dev`, Spring Boot `bootRun`). - `BuildAnalyzer` pairs manifest files with reproducible build/test commands and OS-aware scripts. - `DependencyAnalyzer`, `PatternAnalyzer`, and `LanguageAnalyzer` describe frameworks, Docker/K8s/CI layouts, and monorepo hints that feed the features, architecture, and quick-start sections. - Tests under `tests/analyzers/`, `tests/prompting/`, and `tests/git/` assert signal accuracy, command selection, and publishing behavior. <!-- docgen:end:architecture --> ## Quick Start <!-- docgen:begin:quickstart --> 1. Create a virtual environment and activate it: - Windows: `python -m venv .venv` then `.\\.venv\\Scripts\\activate` - macOS/Linux: `python -m venv .venv`",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#6",
      "vector": {
        "tests": 0.04214497519610896,
        "git": 0.04214497519610896,
        "assert": 0.04214497519610896,
        "signal": 0.04214497519610896,
        "accuracy": 0.04214497519610896,
        "command": 0.04214497519610896,
        "selection": 0.04214497519610896,
        "and": 0.16857990078443583,
        "publishing": 0.04214497519610896,
        "behavior": 0.04214497519610896,
        "docgen": 0.5057397023533075,
        "end": 0.08428995039221791,
        "architecture": 0.04214497519610896,
        "quick": 0.04214497519610896,
        "start": 0.04214497519610896,
        "begin": 0.08428995039221791,
        "quickstart": 0.08428995039221791,
        "1": 0.04214497519610896,
        "create": 0.04214497519610896,
        "a": 0.08428995039221791,
        "virtual": 0.04214497519610896,
        "environment": 0.04214497519610896,
        "activate": 0.12643492558832686,
        "it": 0.04214497519610896,
        "windows": 0.04214497519610896,
        "python": 0.2528698511766537,
        "m": 0.2528698511766537,
        "venv": 0.2528698511766537,
        "then": 0.08428995039221791,
        "scripts": 0.04214497519610896,
        "macos": 0.04214497519610896,
        "linux": 0.04214497519610896,
        "source": 0.04214497519610896,
        "bin": 0.04214497519610896,
        "2": 0.08428995039221791,
        "install": 0.12643492558832686,
        "dependencies": 0.04214497519610896,
        "in": 0.04214497519610896,
        "editable": 0.04214497519610896,
        "mode": 0.08428995039221791,
        "includes": 0.04214497519610896,
        "cli": 0.12643492558832686,
        "entry": 0.04214497519610896,
        "point": 0.04214497519610896,
        "test": 0.04214497519610896,
        "tooling": 0.04214497519610896,
        "bash": 0.12643492558832686,
        "pip": 0.12643492558832686,
        "upgrade": 0.04214497519610896,
        "e": 0.04214497519610896,
        "dev": 0.04214497519610896,
        "3": 0.04214497519610896,
        "configure": 0.04214497519610896,
        "yml": 0.08428995039221791,
        "with": 0.08428995039221791,
        "local": 0.04214497519610896,
        "llm": 0.08428995039221791,
        "runner": 0.12643492558832686,
        "details": 0.04214497519610896,
        "see": 0.04214497519610896,
        "configuration": 0.12643492558832686,
        "below": 0.04214497519610896,
        "4": 0.04214497519610896,
        "generate": 0.04214497519610896,
        "an": 0.04214497519610896,
        "initial": 0.04214497519610896,
        "readme": 0.12643492558832686,
        "from": 0.04214497519610896,
        "the": 0.04214497519610896,
        "repository": 0.04214497519610896,
        "root": 0.04214497519610896,
        "init": 0.04214497519610896,
        "5": 0.04214497519610896,
        "after": 0.04214497519610896,
        "subsequent": 0.04214497519610896,
        "changes": 0.04214497519610896,
        "refresh": 0.04214497519610896,
        "documentation": 0.04214497519610896,
        "update": 0.08428995039221791,
        "diff": 0.04214497519610896,
        "base": 0.04214497519610896,
        "origin": 0.04214497519610896,
        "main": 0.04214497519610896,
        "6": 0.04214497519610896,
        "use": 0.04214497519610896,
        "dry": 0.04214497519610896,
        "run": 0.04214497519610896,
        "to": 0.04214497519610896,
        "preview": 0.04214497519610896,
        "diffs": 0.04214497519610896,
        "or": 0.16857990078443583,
        "verbose": 0.04214497519610896,
        "for": 0.04214497519610896,
        "deeper": 0.04214497519610896,
        "logs": 0.04214497519610896,
        "while": 0.04214497519610896,
        "iterating": 0.04214497519610896,
        "on": 0.04214497519610896,
        "analyzers": 0.08428995039221791,
        "config": 0.04214497519610896,
        "py": 0.04214497519610896,
        "loads": 0.04214497519610896,
        "into": 0.04214497519610896,
        "strongly": 0.04214497519610896,
        "typed": 0.04214497519610896,
        "dataclasses": 0.04214497519610896,
        "provides": 0.04214497519610896,
        "minimal": 0.04214497519610896,
        "yaml": 0.08428995039221791,
        "parser": 0.04214497519610896,
        "when": 0.04214497519610896,
        "pyyaml": 0.04214497519610896,
        "is": 0.04214497519610896,
        "absent": 0.04214497519610896,
        "common": 0.04214497519610896,
        "fields": 0.04214497519610896,
        "ollama": 0.04214497519610896,
        "model": 0.08428995039221791,
        "llama3": 0.04214497519610896,
        "8b": 0.04214497519610896,
        "instruct": 0.04214497519610896,
        "base_url": 0.04214497519610896,
        "http": 0.04214497519610896,
        "localhost": 0.04214497519610896,
        "12434": 0.04214497519610896,
        "engines": 0.04214497519610896,
        "v1": 0.04214497519610896,
        "temperature": 0.04214497519610896,
        "0": 0.04214497519610896,
        "max_tokens": 0.04214497519610896,
        "2048": 0.04214497519610896,
        "style": 0.04214497519610896,
        "comprehensive": 0.04214497519610896,
        "concise": 0.04214497519610896,
        "template_pack": 0.04214497519610896,
        "null": 0.04214497519610896,
        "optional": 0.04214497519610896,
        "alt": 0.04214497519610896,
        "templates": 0.08428995039221791,
        "under": 0.04214497519610896,
        "prompting": 0.04214497519610896,
        "publish": 0.04214497519610896,
        "pr": 0.08428995039221791,
        "commit": 0.04214497519610896,
        "branch_prefix": 0.04214497519610896,
        "labels": 0.04214497519610896,
        "docs": 0.08428995039221791,
        "auto": 0.04214497519610896,
        "update_existing": 0.04214497519610896,
        "false": 0.04214497519610896,
        "enabled": 0.04214497519610896,
        "subset": 0.04214497519610896,
        "of": 0.04214497519610896,
        "plugin": 0.04214497519610896,
        "names": 0.04214497519610896,
        "empty": 0.04214497519610896,
        "uses": 0.04214497519610896,
        "all": 0.04214497519610896,
        "built": 0.04214497519610896,
        "ins": 0.04214497519610896,
        "exclude_paths": 0.08428995039221791,
        "sandbox": 0.08428995039221791,
        "ci": 0.04214497519610896,
        "watched_globs": 0.04214497519610896
      },
      "text": "`tests/git/` assert signal accuracy, command selection, and publishing behavior. <!-- docgen:end:architecture --> ## Quick Start <!-- docgen:begin:quickstart --> 1. Create a virtual environment and activate it: - Windows: `python -m venv .venv` then `.\\.venv\\Scripts\\activate` - macOS/Linux: `python -m venv .venv` then `source .venv/bin/activate` 2. Install dependencies in editable mode (includes CLI entry point and test tooling): ```bash python -m pip install --upgrade pip python -m pip install -e .[dev] ``` 3. Configure `.docgen.yml` with local LLM runner details (see Configuration below). 4. Generate an initial README from the repository root: ```bash python -m docgen.cli init . ``` 5. After subsequent changes, refresh documentation with: ```bash python -m docgen.cli update --diff-base origin/main ``` 6. Use `--dry-run` to preview diffs or `--verbose` for deeper logs while iterating on analyzers. <!-- docgen:end:quickstart --> ## Configuration <!-- docgen:begin:configuration --> `docgen/config.py` loads `.docgen.yml` into strongly typed dataclasses and provides a minimal YAML parser when PyYAML is absent. Common fields: ```yaml llm: runner: \"ollama\" # or \"model-runner\" model: \"llama3:8b-instruct\" base_url: \"http://localhost:12434/engines/v1\" temperature: 0.2 max_tokens: 2048 readme: style: \"comprehensive\" # or \"concise\" template_pack: null # optional alt templates under docgen/prompting/templates/ publish: mode: \"pr\" # \"pr\" or \"commit\" branch_prefix: \"docgen/readme-update\" labels: [\"docs:auto\"] update_existing: false analyzers: enabled: [] # subset of plugin names, empty uses all built-ins exclude_paths: - \"sandbox/\" ci: watched_globs: - \"docgen/**\" - \"docs/**\" exclude_paths: - \"sandbox/\"",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#7",
      "vector": {
        "templates": 0.12058018065872111,
        "under": 0.12058018065872111,
        "docgen": 0.5225141161877915,
        "prompting": 0.08038678710581408,
        "publish": 0.04019339355290704,
        "mode": 0.08038678710581408,
        "pr": 0.16077357421162816,
        "or": 0.12058018065872111,
        "commit": 0.04019339355290704,
        "branch_prefix": 0.04019339355290704,
        "readme": 0.08038678710581408,
        "update": 0.12058018065872111,
        "labels": 0.04019339355290704,
        "docs": 0.24116036131744223,
        "auto": 0.04019339355290704,
        "update_existing": 0.04019339355290704,
        "false": 0.04019339355290704,
        "analyzers": 0.12058018065872111,
        "enabled": 0.04019339355290704,
        "subset": 0.04019339355290704,
        "of": 0.04019339355290704,
        "plugin": 0.04019339355290704,
        "names": 0.04019339355290704,
        "empty": 0.04019339355290704,
        "uses": 0.04019339355290704,
        "all": 0.04019339355290704,
        "built": 0.04019339355290704,
        "ins": 0.04019339355290704,
        "exclude_paths": 0.12058018065872111,
        "sandbox": 0.08038678710581408,
        "ci": 0.24116036131744223,
        "watched_globs": 0.08038678710581408,
        "highlights": 0.04019339355290704,
        "llmconfig": 0.04019339355290704,
        "supports": 0.04019339355290704,
        "env": 0.04019339355290704,
        "overrides": 0.08038678710581408,
        "docgen_llm_model": 0.04019339355290704,
        "docgen_llm_base_url": 0.04019339355290704,
        "docgen_llm_api_key": 0.04019339355290704,
        "and": 0.12058018065872111,
        "enforces": 0.04019339355290704,
        "loopback": 0.04019339355290704,
        "urls": 0.04019339355290704,
        "publishconfig": 0.04019339355290704,
        "toggles": 0.04019339355290704,
        "automatic": 0.04019339355290704,
        "commits": 0.04019339355290704,
        "creation": 0.04019339355290704,
        "publisher": 0.04019339355290704,
        "relies": 0.04019339355290704,
        "on": 0.04019339355290704,
        "the": 0.16077357421162816,
        "github": 0.12058018065872111,
        "cli": 0.08038678710581408,
        "when": 0.12058018065872111,
        "analyzerconfig": 0.04019339355290704,
        "removes": 0.04019339355290704,
        "noisy": 0.04019339355290704,
        "directories": 0.04019339355290704,
        "from": 0.04019339355290704,
        "analysis": 0.04019339355290704,
        "without": 0.04019339355290704,
        "editing": 0.04019339355290704,
        "gitignore": 0.04019339355290704,
        "template": 0.04019339355290704,
        "can": 0.04019339355290704,
        "live": 0.04019339355290704,
        "are": 0.04019339355290704,
        "picked": 0.04019339355290704,
        "up": 0.04019339355290704,
        "automatically": 0.04019339355290704,
        "present": 0.04019339355290704,
        "watchers": 0.04019339355290704,
        "skip": 0.04019339355290704,
        "updates": 0.04019339355290704,
        "changed": 0.04019339355290704,
        "files": 0.04019339355290704,
        "do": 0.04019339355290704,
        "not": 0.04019339355290704,
        "match": 0.04019339355290704,
        "aligning": 0.04019339355290704,
        "with": 0.04019339355290704,
        "workflow": 0.04019339355290704,
        "in": 0.12058018065872111,
        "yml": 0.08038678710581408,
        "end": 0.08038678710581408,
        "configuration": 0.04019339355290704,
        "build": 0.04019339355290704,
        "test": 0.08038678710581408,
        "begin": 0.08038678710581408,
        "build_and_test": 0.08038678710581408,
        "format": 0.04019339355290704,
        "lint": 0.04019339355290704,
        "bash": 0.16077357421162816,
        "black": 0.04019339355290704,
        "tests": 0.12058018065872111,
        "python": 0.2009669677645352,
        "m": 0.2009669677645352,
        "ruff": 0.04019339355290704,
        "check": 0.08038678710581408,
        "type": 0.04019339355290704,
        "core": 0.04019339355290704,
        "modules": 0.08038678710581408,
        "mypy": 0.04019339355290704,
        "run": 0.04019339355290704,
        "full": 0.04019339355290704,
        "suite": 0.04019339355290704,
        "mirrors": 0.04019339355290704,
        "runtime": 0.04019339355290704,
        "orchestrator": 0.08038678710581408,
        "git": 0.04019339355290704,
        "rag": 0.04019339355290704,
        "post": 0.04019339355290704,
        "processing": 0.04019339355290704,
        "pytest": 0.12058018065872111,
        "target": 0.04019339355290704,
        "specific": 0.04019339355290704,
        "areas": 0.04019339355290704,
        "while": 0.04019339355290704,
        "iterating": 0.04019339355290704,
        "k": 0.04019339355290704,
        "test_structure": 0.04019339355290704,
        "py": 0.04019339355290704,
        "regenerate": 0.04019339355290704,
        "fixtures": 0.04019339355290704,
        "inspect": 0.04019339355290704,
        "scorecards": 0.04019339355290704,
        "stored": 0.04019339355290704,
        "to": 0.04019339355290704,
        "validate": 0.04019339355290704,
        "generated": 0.04019339355290704,
        "content": 0.04019339355290704,
        "deployment": 0.08038678710581408,
        "actions": 0.08038678710581408,
        "recipe": 0.04019339355290704,
        "documented": 0.04019339355290704,
        "md": 0.04019339355290704,
        "installs": 0.04019339355290704,
        "package": 0.04019339355290704,
        "editable": 0.04019339355290704
      },
      "text": "templates under docgen/prompting/templates/ publish: mode: \"pr\" # \"pr\" or \"commit\" branch_prefix: \"docgen/readme-update\" labels: [\"docs:auto\"] update_existing: false analyzers: enabled: [] # subset of plugin names, empty uses all built-ins exclude_paths: - \"sandbox/\" ci: watched_globs: - \"docgen/**\" - \"docs/**\" exclude_paths: - \"sandbox/\" ``` Highlights: - `LLMConfig` supports env overrides (`DOCGEN_LLM_MODEL`, `DOCGEN_LLM_BASE_URL`, `DOCGEN_LLM_API_KEY`) and enforces loopback URLs. - `PublishConfig` toggles automatic commits or PR creation; `Publisher` relies on the GitHub CLI when `mode=\"pr\"`. - `AnalyzerConfig.exclude_paths` removes noisy directories from analysis without editing `.gitignore`. - Template overrides can live under `docs/templates/` and are picked up automatically when present. - CI watchers skip updates when changed files do not match `ci.watched_globs`, aligning with the workflow in `docs/ci/docgen-update.yml`. <!-- docgen:end:configuration --> ## Build & Test <!-- docgen:begin:build_and_test --> - Format and lint: ```bash black docgen tests python -m ruff check docgen tests ``` - Type-check core modules: ```bash python -m mypy docgen ``` - Run the full test suite (mirrors runtime modules: CLI, orchestrator, analyzers, prompting, git, RAG, post-processing): ```bash python -m pytest ``` - Target specific areas while iterating: ```bash python -m pytest -k orchestrator python -m pytest tests/analyzers/test_structure.py ``` - Regenerate README fixtures or inspect scorecards stored under `.docgen/` to validate generated content. <!-- docgen:end:build_and_test --> ## Deployment <!-- docgen:begin:deployment --> - GitHub Actions recipe: `docs/ci/docgen-update.yml` (documented in `docs/ci/github-actions.md`) installs the package in editable",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#8",
      "vector": {
        "python": 0.040555355282690636,
        "m": 0.040555355282690636,
        "pytest": 0.040555355282690636,
        "tests": 0.040555355282690636,
        "analyzers": 0.040555355282690636,
        "test_structure": 0.040555355282690636,
        "py": 0.08111071056538127,
        "regenerate": 0.040555355282690636,
        "readme": 0.12166606584807191,
        "fixtures": 0.040555355282690636,
        "or": 0.24333213169614382,
        "inspect": 0.08111071056538127,
        "scorecards": 0.040555355282690636,
        "stored": 0.040555355282690636,
        "under": 0.040555355282690636,
        "docgen": 0.48666426339228763,
        "to": 0.20277677641345318,
        "validate": 0.040555355282690636,
        "generated": 0.08111071056538127,
        "content": 0.040555355282690636,
        "end": 0.08111071056538127,
        "build_and_test": 0.040555355282690636,
        "deployment": 0.12166606584807191,
        "begin": 0.08111071056538127,
        "github": 0.12166606584807191,
        "actions": 0.08111071056538127,
        "recipe": 0.040555355282690636,
        "docs": 0.12166606584807191,
        "ci": 0.12166606584807191,
        "update": 0.16222142113076254,
        "yml": 0.040555355282690636,
        "documented": 0.040555355282690636,
        "in": 0.12166606584807191,
        "md": 0.040555355282690636,
        "installs": 0.040555355282690636,
        "the": 0.40555355282690636,
        "package": 0.040555355282690636,
        "editable": 0.040555355282690636,
        "mode": 0.08111071056538127,
        "runs": 0.040555355282690636,
        "and": 0.16222142113076254,
        "optionally": 0.040555355282690636,
        "commits": 0.08111071056538127,
        "changes": 0.040555355282690636,
        "back": 0.040555355282690636,
        "branch": 0.040555355282690636,
        "self": 0.040555355282690636,
        "hosted": 0.040555355282690636,
        "runners": 0.040555355282690636,
        "are": 0.12166606584807191,
        "recommended": 0.040555355282690636,
        "so": 0.040555355282690636,
        "workflow": 0.040555355282690636,
        "can": 0.08111071056538127,
        "reach": 0.040555355282690636,
        "your": 0.040555355282690636,
        "local": 0.08111071056538127,
        "inference": 0.040555355282690636,
        "endpoint": 0.040555355282690636,
        "docgen_llm_base_url": 0.040555355282690636,
        "same": 0.040555355282690636,
        "settings": 0.040555355282690636,
        "apply": 0.040555355282690636,
        "when": 0.12166606584807191,
        "running": 0.040555355282690636,
        "cd": 0.040555355282690636,
        "pipelines": 0.040555355282690636,
        "outside": 0.040555355282690636,
        "publisher": 0.040555355282690636,
        "push": 0.040555355282690636,
        "directly": 0.040555355282690636,
        "publish": 0.040555355282690636,
        "commit": 0.040555355282690636,
        "for": 0.040555355282690636,
        "bootstrap": 0.040555355282690636,
        "scenarios": 0.040555355282690636,
        "open": 0.040555355282690636,
        "prs": 0.040555355282690636,
        "with": 0.040555355282690636,
        "labeled": 0.040555355282690636,
        "summaries": 0.040555355282690636,
        "gh": 0.040555355282690636,
        "cli": 0.040555355282690636,
        "credentials": 0.040555355282690636,
        "available": 0.040555355282690636,
        "troubleshooting": 0.08111071056538127,
        "use": 0.040555355282690636,
        "verbose": 0.040555355282690636,
        "surface": 0.040555355282690636,
        "analyzer": 0.08111071056538127,
        "selection": 0.040555355282690636,
        "prompt": 0.08111071056538127,
        "generation": 0.040555355282690636,
        "post": 0.040555355282690636,
        "processing": 0.040555355282690636,
        "diagnostics": 0.040555355282690636,
        "emitted": 0.040555355282690636,
        "by": 0.040555355282690636,
        "get_logger": 0.040555355282690636,
        "orchestrator": 0.040555355282690636,
        "if": 0.040555355282690636,
        "already": 0.040555355282690636,
        "exists": 0.040555355282690636,
        "init": 0.040555355282690636,
        "will": 0.040555355282690636,
        "abort": 0.040555355282690636,
        "switch": 0.040555355282690636,
        "remove": 0.040555355282690636,
        "file": 0.040555355282690636,
        "before": 0.08111071056538127,
        "re": 0.040555355282690636,
        "initialising": 0.040555355282690636,
        "empty": 0.040555355282690636,
        "failing": 0.040555355282690636,
        "sections": 0.040555355282690636,
        "trigger": 0.040555355282690636,
        "fallback": 0.040555355282690636,
        "stubs": 0.040555355282690636,
        "from": 0.040555355282690636,
        "failsafe": 0.040555355282690636,
        "raised": 0.040555355282690636,
        "reason": 0.040555355282690636,
        "rerun": 0.040555355282690636,
        "once": 0.040555355282690636,
        "underlying": 0.040555355282690636,
        "issue": 0.040555355282690636,
        "is": 0.08111071056538127,
        "fixed": 0.040555355282690636,
        "link": 0.040555355282690636,
        "validation": 0.040555355282690636,
        "issues": 0.040555355282690636,
        "logged": 0.040555355282690636,
        "as": 0.040555355282690636,
        "warnings": 0.040555355282690636,
        "relative": 0.040555355282690636,
        "paths": 0.040555355282690636,
        "add": 0.040555355282690636,
        "missing": 0.040555355282690636,
        "files": 0.040555355282690636,
        "committing": 0.040555355282690636,
        "clear": 0.040555355282690636,
        "manifest_cache": 0.040555355282690636,
        "json": 0.08111071056538127,
        "embeddings": 0.040555355282690636,
        "refactoring": 0.040555355282690636,
        "large": 0.040555355282690636,
        "parts": 0.040555355282690636,
        "of": 0.040555355282690636,
        "repo": 0.040555355282690636,
        "structure": 0.040555355282690636,
        "force": 0.040555355282690636,
        "a": 0.08111071056538127,
        "fresh": 0.040555355282690636,
        "scan": 0.040555355282690636,
        "ensure": 0.040555355282690636,
        "model": 0.040555355282690636,
        "runner": 0.040555355282690636,
        "reachable": 0.040555355282690636,
        "at": 0.040555355282690636,
        "loopback": 0.040555355282690636,
        "url": 0.040555355282690636,
        "remote": 0.040555355282690636
      },
      "text": "python -m pytest tests/analyzers/test_structure.py ``` - Regenerate README fixtures or inspect scorecards stored under `.docgen/` to validate generated content. <!-- docgen:end:build_and_test --> ## Deployment <!-- docgen:begin:deployment --> - GitHub Actions recipe: `docs/ci/docgen-update.yml` (documented in `docs/ci/github-actions.md`) installs the package in editable mode, runs `docgen update`, and optionally commits README changes back to the branch. - Self-hosted runners are recommended so the workflow can reach your local inference endpoint (`DOCGEN_LLM_BASE_URL`). The same settings apply when running in CI/CD pipelines outside GitHub. - `Publisher` can push commits directly (`publish.mode: commit`) for bootstrap scenarios or open PRs with labeled summaries when `gh` CLI credentials are available. <!-- docgen:end:deployment --> ## Troubleshooting <!-- docgen:begin:troubleshooting --> - Use `--verbose` to surface analyzer selection, prompt generation, and post-processing diagnostics emitted by `get_logger(\"orchestrator\")`. - If the README already exists, `docgen init` will abort; switch to `docgen update` or remove the file before re-initialising. - Empty or failing sections trigger fallback stubs from `docgen/failsafe.py`; inspect the raised reason and rerun once the underlying analyzer or prompt issue is fixed. - Link validation issues are logged as warnings. Update relative paths or add missing files before committing generated docs. - Clear `.docgen/manifest_cache.json` and `.docgen/embeddings.json` when refactoring large parts of the repo structure to force a fresh scan. - Ensure the local model runner is reachable at a loopback URL; remote",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#9",
      "vector": {
        "paths": 0.03782347372361169,
        "or": 0.26476431606528184,
        "add": 0.11347042117083507,
        "missing": 0.03782347372361169,
        "files": 0.03782347372361169,
        "before": 0.03782347372361169,
        "committing": 0.03782347372361169,
        "generated": 0.03782347372361169,
        "docs": 0.03782347372361169,
        "clear": 0.03782347372361169,
        "docgen": 0.4538816846833403,
        "manifest_cache": 0.03782347372361169,
        "json": 0.07564694744722338,
        "and": 0.11347042117083507,
        "embeddings": 0.03782347372361169,
        "when": 0.07564694744722338,
        "refactoring": 0.03782347372361169,
        "large": 0.03782347372361169,
        "parts": 0.03782347372361169,
        "of": 0.03782347372361169,
        "the": 0.3404112635125052,
        "repo": 0.03782347372361169,
        "structure": 0.03782347372361169,
        "to": 0.03782347372361169,
        "force": 0.03782347372361169,
        "a": 0.4538816846833403,
        "fresh": 0.03782347372361169,
        "scan": 0.03782347372361169,
        "ensure": 0.03782347372361169,
        "local": 0.07564694744722338,
        "model": 0.07564694744722338,
        "runner": 0.07564694744722338,
        "is": 0.07564694744722338,
        "reachable": 0.03782347372361169,
        "at": 0.03782347372361169,
        "loopback": 0.07564694744722338,
        "url": 0.03782347372361169,
        "remote": 0.07564694744722338,
        "hosts": 0.07564694744722338,
        "are": 0.07564694744722338,
        "intentionally": 0.03782347372361169,
        "rejected": 0.03782347372361169,
        "by": 0.03782347372361169,
        "llmrunner": 0.07564694744722338,
        "for": 0.03782347372361169,
        "security": 0.03782347372361169,
        "end": 0.11347042117083507,
        "troubleshooting": 0.03782347372361169,
        "faq": 0.11347042117083507,
        "begin": 0.07564694744722338,
        "q": 0.15129389489444675,
        "how": 0.03782347372361169,
        "this": 0.07564694744722338,
        "readme": 0.03782347372361169,
        "maintained": 0.03782347372361169,
        "generate": 0.03782347372361169,
        "with": 0.03782347372361169,
        "init": 0.03782347372361169,
        "keep": 0.03782347372361169,
        "it": 0.03782347372361169,
        "current": 0.03782347372361169,
        "via": 0.07564694744722338,
        "update": 0.03782347372361169,
        "optionally": 0.03782347372361169,
        "in": 0.15129389489444675,
        "ci": 0.03782347372361169,
        "using": 0.03782347372361169,
        "provided": 0.03782347372361169,
        "workflow": 0.03782347372361169,
        "what": 0.03782347372361169,
        "happens": 0.03782347372361169,
        "if": 0.03782347372361169,
        "analyzers": 0.11347042117083507,
        "miss": 0.03782347372361169,
        "framework": 0.03782347372361169,
        "command": 0.03782347372361169,
        "signals": 0.03782347372361169,
        "pluggable": 0.03782347372361169,
        "custom": 0.03782347372361169,
        "analyzer": 0.03782347372361169,
        "entry": 0.03782347372361169,
        "point": 0.03782347372361169,
        "group": 0.03782347372361169,
        "extend": 0.03782347372361169,
        "existing": 0.03782347372361169,
        "utilities": 0.03782347372361169,
        "under": 0.03782347372361169,
        "utils": 0.03782347372361169,
        "py": 0.03782347372361169,
        "can": 0.03782347372361169,
        "use": 0.03782347372361169,
        "llm": 0.03782347372361169,
        "endpoint": 0.03782347372361169,
        "no": 0.03782347372361169,
        "enforces": 0.03782347372361169,
        "internal": 0.03782347372361169,
        "supply": 0.03782347372361169,
        "ollama": 0.03782347372361169,
        "instance": 0.03782347372361169,
        "instead": 0.03782347372361169,
        "where": 0.03782347372361169,
        "do": 0.03782347372361169,
        "i": 0.03782347372361169,
        "report": 0.03782347372361169,
        "issues": 0.03782347372361169,
        "propose": 0.03782347372361169,
        "enhancements": 0.03782347372361169,
        "file": 0.03782347372361169,
        "an": 0.03782347372361169,
        "issue": 0.03782347372361169,
        "open": 0.03782347372361169,
        "discussion": 0.03782347372361169,
        "repository": 0.03782347372361169,
        "reference": 0.03782347372361169,
        "relevant": 0.03782347372361169,
        "sections": 0.03782347372361169,
        "spec": 0.15129389489444675,
        "md": 0.11347042117083507,
        "feature_order": 0.07564694744722338,
        "describing": 0.03782347372361169,
        "change": 0.03782347372361169,
        "license": 0.15129389489444675,
        "licensing": 0.03782347372361169,
        "information": 0.03782347372361169,
        "once": 0.03782347372361169,
        "project": 0.03782347372361169,
        "selects": 0.03782347372361169,
        "track": 0.03782347372361169,
        "candidate": 0.03782347372361169,
        "licenses": 0.03782347372361169,
        "alongside": 0.03782347372361169,
        "roadmap": 0.03782347372361169
      },
      "text": "paths or add missing files before committing generated docs. - Clear `.docgen/manifest_cache.json` and `.docgen/embeddings.json` when refactoring large parts of the repo structure to force a fresh scan. - Ensure the local model runner is reachable at a loopback URL; remote hosts are intentionally rejected by `LLMRunner` for security. <!-- docgen:end:troubleshooting --> ## FAQ <!-- docgen:begin:faq --> **Q: How is this README maintained?** A: Generate with `docgen init` and keep it current via `docgen update` (optionally in CI using the provided workflow). **Q: What happens if analyzers miss a framework or command?** A: Signals are pluggable\u2014add a custom analyzer via the `docgen.analyzers` entry-point group or extend the existing utilities under `docgen/analyzers/utils.py`. **Q: Can docgen use a remote LLM endpoint?** A: No. `LLMRunner` enforces loopback/`.internal` hosts; supply a local model runner or Ollama instance instead. **Q: Where do I report issues or propose enhancements?** A: File an issue or open a discussion in this repository and reference the relevant sections in `spec/spec.md` or `spec/feature_order.md` when describing the change. <!-- docgen:end:faq --> ## License <!-- docgen:begin:license --> Add licensing information once the project selects a license. Track candidate licenses alongside the roadmap in `spec/feature_order.md`. <!-- docgen:end:license -->",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "docs/ci/docgen-update.yml#0",
      "vector": {
        "name": 0.2773500981126145,
        "docgen": 0.1849000654084097,
        "update": 0.2311250817605121,
        "on": 0.09245003270420485,
        "push": 0.046225016352102424,
        "branches": 0.09245003270420485,
        "main": 0.13867504905630726,
        "pull_request": 0.13867504905630726,
        "jobs": 0.046225016352102424,
        "readme": 0.1849000654084097,
        "runs": 0.046225016352102424,
        "self": 0.046225016352102424,
        "hosted": 0.046225016352102424,
        "steps": 0.09245003270420485,
        "uses": 0.13867504905630726,
        "actions": 0.2311250817605121,
        "checkout": 0.046225016352102424,
        "v4": 0.09245003270420485,
        "with": 0.13867504905630726,
        "fetch": 0.046225016352102424,
        "depth": 0.046225016352102424,
        "0": 0.046225016352102424,
        "setup": 0.046225016352102424,
        "python": 0.2311250817605121,
        "v5": 0.046225016352102424,
        "version": 0.046225016352102424,
        "3": 0.046225016352102424,
        "11": 0.046225016352102424,
        "cache": 0.09245003270420485,
        "path": 0.046225016352102424,
        "pip": 0.2773500981126145,
        "key": 0.046225016352102424,
        "runner": 0.09245003270420485,
        "os": 0.09245003270420485,
        "hashfiles": 0.046225016352102424,
        "pyproject": 0.046225016352102424,
        "toml": 0.046225016352102424,
        "restore": 0.046225016352102424,
        "keys": 0.046225016352102424,
        "install": 0.13867504905630726,
        "dependencies": 0.046225016352102424,
        "run": 0.2311250817605121,
        "m": 0.13867504905630726,
        "upgrade": 0.046225016352102424,
        "e": 0.046225016352102424,
        "dev": 0.046225016352102424,
        "determine": 0.046225016352102424,
        "diff": 0.1849000654084097,
        "base": 0.2773500981126145,
        "id": 0.046225016352102424,
        "if": 0.09245003270420485,
        "github": 0.2311250817605121,
        "event_name": 0.046225016352102424,
        "then": 0.09245003270420485,
        "echo": 0.09245003270420485,
        "event": 0.046225016352102424,
        "sha": 0.046225016352102424,
        "github_output": 0.09245003270420485,
        "else": 0.046225016352102424,
        "origin": 0.046225016352102424,
        "fi": 0.09245003270420485,
        "env": 0.046225016352102424,
        "docgen_llm_base_url": 0.046225016352102424,
        "http": 0.046225016352102424,
        "localhost": 0.046225016352102424,
        "12434": 0.046225016352102424,
        "engines": 0.046225016352102424,
        "v1": 0.046225016352102424,
        "cli": 0.046225016352102424,
        "outputs": 0.046225016352102424,
        "commit": 0.09245003270420485,
        "md": 0.09245003270420485,
        "optional": 0.046225016352102424,
        "git": 0.1849000654084097,
        "status": 0.046225016352102424,
        "short": 0.046225016352102424,
        "grep": 0.046225016352102424,
        "q": 0.046225016352102424,
        "config": 0.09245003270420485,
        "user": 0.09245003270420485,
        "email": 0.046225016352102424,
        "users": 0.046225016352102424,
        "noreply": 0.046225016352102424,
        "com": 0.046225016352102424,
        "am": 0.046225016352102424,
        "docs": 0.046225016352102424,
        "via": 0.046225016352102424
      },
      "text": "name: docgen-update on: push: branches: [ main ] pull_request: branches: [ main ] jobs: update-readme: runs-on: self-hosted steps: - uses: actions/checkout@v4 with: fetch-depth: 0 - uses: actions/setup-python@v5 with: python-version: '3.11' - uses: actions/cache@v4 with: path: ~/.cache/pip key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }} restore-keys: ${{ runner.os }}-pip- - name: Install dependencies run: | python -m pip install --upgrade pip python -m pip install -e .[dev] - name: Determine diff base id: diff run: | if [ \"${{ github.event_name }}\" = \"pull_request\" ]; then echo \"base=${{ github.event.pull_request.base.sha }}\" >> \"$GITHUB_OUTPUT\" else echo \"base=origin/main\" >> \"$GITHUB_OUTPUT\" fi - name: Run docgen update env: DOCGEN_LLM_BASE_URL: http://localhost:12434/engines/v1 run: python -m docgen.cli update --diff-base ${{ steps.diff.outputs.base }} - name: Commit README.md (optional) run: | if git status --short | grep -q README.md; then git config user.name \"github-actions\" git config user.email \"github-actions@users.noreply.github.com\" git commit -am \"docs: update README via docgen\" fi",
      "metadata": {
        "path": "docs/ci/docgen-update.yml",
        "tags": [
          "docs"
        ],
        "hash": "f3bf5ea7b740892011a0aa14cb06b4bb27a4f3ea348599d85003a66032594538"
      }
    },
    {
      "id": "docs/ci/github-actions.md#0",
      "vector": {
        "github": 0.25925925925925924,
        "actions": 0.2222222222222222,
        "integration": 0.037037037037037035,
        "the": 0.1111111111111111,
        "workflow": 0.037037037037037035,
        "below": 0.037037037037037035,
        "runs": 0.07407407407407407,
        "docgen": 0.25925925925925924,
        "update": 0.2222222222222222,
        "on": 0.1111111111111111,
        "pushes": 0.037037037037037035,
        "and": 0.037037037037037035,
        "pull": 0.037037037037037035,
        "requests": 0.037037037037037035,
        "it": 0.037037037037037035,
        "assumes": 0.037037037037037035,
        "a": 0.037037037037037035,
        "self": 0.07407407407407407,
        "hosted": 0.1111111111111111,
        "runner": 0.14814814814814814,
        "or": 0.037037037037037035,
        "with": 0.14814814814814814,
        "network": 0.037037037037037035,
        "access": 0.07407407407407407,
        "to": 0.037037037037037035,
        "your": 0.037037037037037035,
        "local": 0.07407407407407407,
        "model": 0.037037037037037035,
        "runtime": 0.037037037037037035,
        "job": 0.037037037037037035,
        "skips": 0.037037037037037035,
        "early": 0.037037037037037035,
        "when": 0.037037037037037035,
        "no": 0.037037037037037035,
        "files": 0.037037037037037035,
        "match": 0.037037037037037035,
        "yml": 0.037037037037037035,
        "s": 0.037037037037037035,
        "ci": 0.037037037037037035,
        "watched_globs": 0.037037037037037035,
        "entries": 0.037037037037037035,
        "so": 0.037037037037037035,
        "that": 0.037037037037037035,
        "purely": 0.037037037037037035,
        "documentation": 0.037037037037037035,
        "only": 0.037037037037037035,
        "changes": 0.037037037037037035,
        "do": 0.037037037037037035,
        "not": 0.037037037037037035,
        "trigger": 0.037037037037037035,
        "generator": 0.037037037037037035,
        "yaml": 0.037037037037037035,
        "name": 0.3333333333333333,
        "push": 0.037037037037037035,
        "branches": 0.07407407407407407,
        "main": 0.1111111111111111,
        "pull_request": 0.1111111111111111,
        "jobs": 0.037037037037037035,
        "readme": 0.14814814814814814,
        "requires": 0.037037037037037035,
        "llm": 0.037037037037037035,
        "steps": 0.07407407407407407,
        "checkout": 0.07407407407407407,
        "repository": 0.037037037037037035,
        "uses": 0.1111111111111111,
        "v4": 0.07407407407407407,
        "fetch": 0.037037037037037035,
        "depth": 0.037037037037037035,
        "0": 0.037037037037037035,
        "set": 0.037037037037037035,
        "up": 0.037037037037037035,
        "python": 0.2222222222222222,
        "setup": 0.037037037037037035,
        "v5": 0.037037037037037035,
        "version": 0.037037037037037035,
        "3": 0.037037037037037035,
        "11": 0.037037037037037035,
        "cache": 0.1111111111111111,
        "pip": 0.25925925925925924,
        "dependencies": 0.037037037037037035,
        "path": 0.037037037037037035,
        "key": 0.037037037037037035,
        "os": 0.07407407407407407,
        "hashfiles": 0.037037037037037035,
        "pyproject": 0.037037037037037035,
        "toml": 0.037037037037037035,
        "restore": 0.037037037037037035,
        "keys": 0.037037037037037035,
        "install": 0.1111111111111111,
        "in": 0.037037037037037035,
        "editable": 0.037037037037037035,
        "mode": 0.037037037037037035,
        "run": 0.18518518518518517,
        "m": 0.1111111111111111,
        "upgrade": 0.037037037037037035,
        "e": 0.037037037037037035,
        "dev": 0.037037037037037035,
        "determine": 0.037037037037037035,
        "diff": 0.14814814814814814,
        "base": 0.2222222222222222,
        "id": 0.037037037037037035,
        "if": 0.1111111111111111,
        "event_name": 0.037037037037037035,
        "then": 0.07407407407407407,
        "echo": 0.07407407407407407,
        "event": 0.037037037037037035,
        "sha": 0.037037037037037035,
        "github_output": 0.07407407407407407,
        "else": 0.037037037037037035,
        "origin": 0.037037037037037035,
        "fi": 0.07407407407407407,
        "env": 0.037037037037037035,
        "docgen_llm_base_url": 0.037037037037037035,
        "http": 0.037037037037037035,
        "localhost": 0.037037037037037035,
        "12434": 0.037037037037037035,
        "engines": 0.037037037037037035,
        "v1": 0.037037037037037035,
        "cli": 0.037037037037037035,
        "outputs": 0.037037037037037035,
        "commit": 0.07407407407407407,
        "updates": 0.037037037037037035,
        "any": 0.037037037037037035,
        "git": 0.14814814814814814,
        "status": 0.037037037037037035,
        "short": 0.037037037037037035,
        "grep": 0.037037037037037035,
        "q": 0.037037037037037035,
        "md": 0.037037037037037035,
        "config": 0.07407407407407407,
        "user": 0.07407407407407407,
        "email": 0.037037037037037035,
        "users": 0.037037037037037035,
        "noreply": 0.037037037037037035,
        "com": 0.037037037037037035,
        "am": 0.037037037037037035,
        "docs": 0.037037037037037035,
        "via": 0.037037037037037035
      },
      "text": "# GitHub Actions Integration The workflow below runs `docgen update` on pushes and pull requests. It assumes a self-hosted runner (or GitHub-hosted runner with network access to your local model runtime). The job skips early when no files match `.docgen.yml`'s `ci.watched_globs` entries so that purely documentation-only changes do not trigger the generator. ```yaml name: docgen-update on: push: branches: [ main ] pull_request: branches: [ main ] jobs: update-readme: runs-on: self-hosted # requires local LLM access steps: - name: Checkout repository uses: actions/checkout@v4 with: fetch-depth: 0 - name: Set up Python uses: actions/setup-python@v5 with: python-version: '3.11' - name: Cache pip dependencies uses: actions/cache@v4 with: path: ~/.cache/pip key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }} restore-keys: ${{ runner.os }}-pip- - name: Install docgen in editable mode run: | python -m pip install --upgrade pip python -m pip install -e .[dev] - name: Determine diff base id: diff run: | if [ \"${{ github.event_name }}\" = \"pull_request\" ]; then echo \"base=${{ github.event.pull_request.base.sha }}\" >> \"$GITHUB_OUTPUT\" else echo \"base=origin/main\" >> \"$GITHUB_OUTPUT\" fi - name: Run docgen update env: DOCGEN_LLM_BASE_URL: http://localhost:12434/engines/v1 run: | python -m docgen.cli update --diff-base ${{ steps.diff.outputs.base }} - name: Commit README updates (if any) run: | if git status --short | grep -q README.md; then git config user.name \"github-actions\" git config user.email \"github-actions@users.noreply.github.com\" git commit -am \"docs: update README via docgen\" fi -",
      "metadata": {
        "path": "docs/ci/github-actions.md",
        "tags": [
          "docs"
        ],
        "hash": "518fe87441e7f08aadb0ed175d54a5ce3c227af17677678096af6df070190e59"
      }
    },
    {
      "id": "docs/ci/github-actions.md#1",
      "vector": {
        "diff": 0.1363988678940947,
        "base": 0.1363988678940947,
        "steps": 0.06819943394704735,
        "outputs": 0.06819943394704735,
        "name": 0.2727977357881894,
        "commit": 0.1363988678940947,
        "readme": 0.4091966036822841,
        "updates": 0.06819943394704735,
        "if": 0.20459830184114206,
        "any": 0.06819943394704735,
        "run": 0.06819943394704735,
        "git": 0.2727977357881894,
        "status": 0.06819943394704735,
        "short": 0.06819943394704735,
        "grep": 0.06819943394704735,
        "q": 0.06819943394704735,
        "md": 0.1363988678940947,
        "then": 0.06819943394704735,
        "config": 0.1363988678940947,
        "user": 0.1363988678940947,
        "github": 0.2727977357881894,
        "actions": 0.20459830184114206,
        "email": 0.06819943394704735,
        "users": 0.06819943394704735,
        "noreply": 0.06819943394704735,
        "com": 0.06819943394704735,
        "am": 0.06819943394704735,
        "docs": 0.06819943394704735,
        "update": 0.06819943394704735,
        "via": 0.06819943394704735,
        "docgen": 0.06819943394704735,
        "fi": 0.06819943394704735,
        "upload": 0.1363988678940947,
        "artifact": 0.1363988678940947,
        "success": 0.06819943394704735,
        "uses": 0.06819943394704735,
        "v4": 0.06819943394704735,
        "with": 0.1363988678940947,
        "generated": 0.06819943394704735,
        "path": 0.06819943394704735,
        "note": 0.06819943394704735,
        "the": 0.20459830184114206,
        "workflow": 0.06819943394704735,
        "relies": 0.06819943394704735,
        "on": 0.06819943394704735,
        "docgen_llm_base_url": 0.06819943394704735,
        "pointing": 0.06819943394704735,
        "to": 0.20459830184114206,
        "a": 0.06819943394704735,
        "local": 0.06819943394704735,
        "or": 0.1363988678940947,
        "private": 0.1363988678940947,
        "inference": 0.06819943394704735,
        "endpoint": 0.06819943394704735,
        "for": 0.06819943394704735,
        "hosted": 0.06819943394704735,
        "runners": 0.06819943394704735,
        "you": 0.06819943394704735,
        "will": 0.06819943394704735,
        "need": 0.06819943394704735,
        "expose": 0.06819943394704735,
        "runner": 0.06819943394704735,
        "within": 0.06819943394704735,
        "your": 0.06819943394704735,
        "network": 0.06819943394704735,
        "switch": 0.06819943394704735,
        "ollama": 0.06819943394704735,
        "cli": 0.06819943394704735,
        "appropriate": 0.06819943394704735,
        "caching": 0.06819943394704735
      },
      "text": "--diff-base ${{ steps.diff.outputs.base }} - name: Commit README updates (if any) run: | if git status --short | grep -q README.md; then git config user.name \"github-actions\" git config user.email \"github-actions@users.noreply.github.com\" git commit -am \"docs: update README via docgen\" fi - name: Upload README artifact if: success() uses: actions/upload-artifact@v4 with: name: generated-readme path: README.md ``` > **Note:** the workflow relies on `DOCGEN_LLM_BASE_URL` pointing to a local or > private inference endpoint. For GitHub-hosted runners you will need to expose > the runner within your private network or switch to the `ollama` CLI with > appropriate caching. ```",
      "metadata": {
        "path": "docs/ci/github-actions.md",
        "tags": [
          "docs"
        ],
        "hash": "518fe87441e7f08aadb0ed175d54a5ce3c227af17677678096af6df070190e59"
      }
    },
    {
      "id": "spec/feature_checklist.md#0",
      "vector": {
        "intelligent": 0.03809696588797296,
        "readme": 0.1142908976639189,
        "generator": 0.03809696588797296,
        "feature": 0.03809696588797296,
        "checklist": 0.03809696588797296,
        "status": 0.03809696588797296,
        "legend": 0.03809696588797296,
        "not": 0.03809696588797296,
        "started": 0.03809696588797296,
        "in": 0.03809696588797296,
        "progress": 0.03809696588797296,
        "done": 0.03809696588797296,
        "scope": 0.03809696588797296,
        "tags": 0.03809696588797296,
        "mvp": 0.4571635906556756,
        "required": 0.03809696588797296,
        "for": 0.1142908976639189,
        "proof": 0.03809696588797296,
        "of": 0.07619393177594593,
        "concept": 0.03809696588797296,
        "next": 0.19048482943986483,
        "nice": 0.03809696588797296,
        "to": 0.1142908976639189,
        "have": 0.03809696588797296,
        "soon": 0.03809696588797296,
        "stretch": 0.1142908976639189,
        "later": 0.03809696588797296,
        "1": 0.07619393177594593,
        "core": 0.03809696588797296,
        "workflows": 0.03809696588797296,
        "x": 0.6095514542075674,
        "docgen": 0.15238786355189185,
        "init": 0.03809696588797296,
        "initialize": 0.03809696588797296,
        "repos": 0.03809696588797296,
        "without": 0.07619393177594593,
        "docs": 0.1142908976639189,
        "update": 0.03809696588797296,
        "detect": 0.03809696588797296,
        "changes": 0.03809696588797296,
        "on": 0.03809696588797296,
        "commit": 0.03809696588797296,
        "pr": 0.03809696588797296,
        "and": 0.03809696588797296,
        "patch": 0.03809696588797296,
        "affected": 0.03809696588797296,
        "sections": 0.03809696588797296,
        "regenerate": 0.03809696588797296,
        "manual": 0.03809696588797296,
        "full": 0.03809696588797296,
        "partial": 0.03809696588797296,
        "regeneration": 0.03809696588797296,
        "dry": 0.07619393177594593,
        "run": 0.07619393177594593,
        "mode": 0.07619393177594593,
        "preview": 0.03809696588797296,
        "diffs": 0.03809696588797296,
        "writing": 0.03809696588797296,
        "service": 0.03809696588797296,
        "fastapi": 0.07619393177594593,
        "endpoints": 0.03809696588797296,
        "ci": 0.07619393177594593,
        "bots": 0.03809696588797296,
        "2": 0.03809696588797296,
        "repository": 0.03809696588797296,
        "scanning": 0.03809696588797296,
        "indexing": 0.03809696588797296,
        "walk": 0.03809696588797296,
        "filesystem": 0.03809696588797296,
        "with": 0.03809696588797296,
        "ignore": 0.03809696588797296,
        "rules": 0.03809696588797296,
        "gitignore": 0.03809696588797296,
        "yml": 0.03809696588797296,
        "build": 0.07619393177594593,
        "normalized": 0.03809696588797296,
        "manifest": 0.07619393177594593,
        "files": 0.07619393177594593,
        "roles": 0.03809696588797296,
        "src": 0.03809696588797296,
        "test": 0.03809696588797296,
        "config": 0.07619393177594593,
        "infra": 0.03809696588797296,
        "hash": 0.03809696588797296,
        "cache": 0.03809696588797296,
        "file": 0.03809696588797296,
        "metadata": 0.03809696588797296,
        "speed": 0.03809696588797296,
        "subsequent": 0.03809696588797296,
        "runs": 0.03809696588797296,
        "entrypoint": 0.07619393177594593,
        "detection": 0.07619393177594593,
        "e": 0.03809696588797296,
        "g": 0.03809696588797296,
        "main": 0.03809696588797296,
        "springbootapplication": 0.03809696588797296,
        "app": 0.03809696588797296,
        "monorepo": 0.07619393177594593,
        "module": 0.03809696588797296,
        "3": 0.03809696588797296,
        "analyzers": 0.19048482943986483,
        "plugin": 0.03809696588797296,
        "based": 0.03809696588797296,
        "language": 0.03809696588797296,
        "python": 0.03809696588797296,
        "java": 0.03809696588797296,
        "node": 0.03809696588797296,
        "js": 0.03809696588797296,
        "tier": 0.03809696588797296,
        "poetry": 0.03809696588797296,
        "setuptools": 0.03809696588797296,
        "maven": 0.03809696588797296,
        "gradle": 0.03809696588797296,
        "npm": 0.03809696588797296,
        "pnpm": 0.03809696588797296,
        "yarn": 0.03809696588797296,
        "dependency": 0.03809696588797296,
        "from": 0.03809696588797296,
        "pattern": 0.03809696588797296,
        "docker": 0.03809696588797296,
        "k8s": 0.03809696588797296,
        "layout": 0.03809696588797296,
        "tree": 0.03809696588797296,
        "sitter": 0.03809696588797296,
        "powered": 0.03809696588797296,
        "symbol": 0.03809696588797296,
        "extraction": 0.03809696588797296,
        "flagged": 0.03809696588797296,
        "4": 0.03809696588797296,
        "knowledge": 0.03809696588797296,
        "store": 0.03809696588797296,
        "rag": 0.03809696588797296,
        "local": 0.03809696588797296,
        "embedding": 0.03809696588797296,
        "model": 0.03809696588797296,
        "chunking": 0.03809696588797296,
        "strategy": 0.03809696588797296,
        "index": 0.03809696588797296,
        "top": 0.03809696588797296,
        "n": 0.03809696588797296,
        "source": 0.03809696588797296,
        "headers": 0.03809696588797296,
        "comments": 0.03809696588797296
      },
      "text": "# Intelligent README Generator \u2014 Feature Checklist > Status legend: \u2610 Not started \u00b7 \u25d0 In progress \u00b7 \u2714 Done > Scope tags: **[MVP]** required for proof\u2011of\u2011concept, **[NEXT]** nice\u2011to\u2011have soon, **[STRETCH]** later ## 1) Core Workflows - [x] **docgen init** \u2014 Initialize README for repos without docs **[MVP]** - [x] **docgen update** \u2014 Detect changes on commit/PR and patch affected sections **[MVP]** - [ ] **docgen regenerate** \u2014 Manual full/partial regeneration **[MVP]** - [x] Dry\u2011run mode (`--dry-run`) to preview diffs without writing **[NEXT]** - [x] Service mode (FastAPI) endpoints for CI/bots **[STRETCH]** ## 2) Repository Scanning & Indexing - [x] Walk filesystem with ignore rules (`.gitignore`, `.docgen.yml`) **[MVP]** - [x] Build normalized manifest of files, roles (src/test/docs/config/infra) **[MVP]** - [x] Hash & cache file metadata to speed subsequent runs **[MVP]** - [x] Entrypoint detection (e.g., `main()`, `@SpringBootApplication`, FastAPI app) **[NEXT]** - [x] Monorepo module detection **[NEXT]** ## 3) Analyzers (Plugin\u2011based) - [x] Language analyzers: Python, Java, Node.js (Tier\u20111) **[MVP]** - [x] Build analyzers: Poetry/Setuptools, Maven/Gradle, npm/pnpm/yarn **[MVP]** - [x] Dependency analyzers from manifest files **[MVP]** - [x] Pattern analyzers: Docker/K8s, CI config, monorepo layout **[NEXT]** - [x] Tree\u2011sitter powered symbol/entrypoint extraction (flagged) **[STRETCH]** ## 4) Knowledge Store (RAG) - [x] Local embedding model + chunking strategy **[MVP]** - [x] Index `README`, `/docs`, top N source headers & comments **[MVP]** -",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_checklist.md#1",
      "vector": {
        "ci": 0.03943615033625495,
        "config": 0.0788723006725099,
        "monorepo": 0.03943615033625495,
        "layout": 0.03943615033625495,
        "next": 0.3154892026900396,
        "x": 0.6309784053800792,
        "tree": 0.03943615033625495,
        "sitter": 0.03943615033625495,
        "powered": 0.03943615033625495,
        "symbol": 0.03943615033625495,
        "entrypoint": 0.03943615033625495,
        "extraction": 0.03943615033625495,
        "flagged": 0.03943615033625495,
        "stretch": 0.0788723006725099,
        "4": 0.03943615033625495,
        "knowledge": 0.0788723006725099,
        "store": 0.03943615033625495,
        "rag": 0.03943615033625495,
        "local": 0.0788723006725099,
        "embedding": 0.03943615033625495,
        "model": 0.0788723006725099,
        "chunking": 0.03943615033625495,
        "strategy": 0.03943615033625495,
        "mvp": 0.3943615033625495,
        "index": 0.03943615033625495,
        "readme": 0.03943615033625495,
        "docs": 0.0788723006725099,
        "top": 0.0788723006725099,
        "n": 0.03943615033625495,
        "source": 0.03943615033625495,
        "headers": 0.03943615033625495,
        "comments": 0.03943615033625495,
        "section": 0.19718075168127475,
        "scoped": 0.03943615033625495,
        "retrieval": 0.03943615033625495,
        "k": 0.03943615033625495,
        "per": 0.0788723006725099,
        "lightweight": 0.03943615033625495,
        "graph": 0.03943615033625495,
        "of": 0.03943615033625495,
        "modules": 0.03943615033625495,
        "services": 0.03943615033625495,
        "signals": 0.03943615033625495,
        "5": 0.03943615033625495,
        "prompting": 0.03943615033625495,
        "templates": 0.11830845100876484,
        "jinja2": 0.03943615033625495,
        "intro": 0.03943615033625495,
        "features": 0.03943615033625495,
        "architecture": 0.0788723006725099,
        "quickstart": 0.03943615033625495,
        "build": 0.0788723006725099,
        "test": 0.03943615033625495,
        "deployment": 0.03943615033625495,
        "troubleshooting": 0.03943615033625495,
        "faq": 0.03943615033625495,
        "license": 0.0788723006725099,
        "guardrailed": 0.03943615033625495,
        "system": 0.03943615033625495,
        "prompt": 0.03943615033625495,
        "no": 0.03943615033625495,
        "speculation": 0.03943615033625495,
        "cite": 0.03943615033625495,
        "repo": 0.03943615033625495,
        "facts": 0.03943615033625495,
        "only": 0.03943615033625495,
        "token": 0.03943615033625495,
        "budgeting": 0.03943615033625495,
        "streaming": 0.03943615033625495,
        "by": 0.03943615033625495,
        "generation": 0.03943615033625495,
        "template": 0.03943615033625495,
        "override": 0.03943615033625495,
        "mechanism": 0.03943615033625495,
        "j2": 0.03943615033625495,
        "style": 0.03943615033625495,
        "presets": 0.03943615033625495,
        "concise": 0.03943615033625495,
        "vs": 0.03943615033625495,
        "comprehensive": 0.03943615033625495,
        "mermaid": 0.03943615033625495,
        "js": 0.03943615033625495,
        "diagrams": 0.03943615033625495,
        "for": 0.0788723006725099,
        "flow": 0.03943615033625495,
        "sections": 0.0788723006725099,
        "where": 0.03943615033625495,
        "appropriate": 0.03943615033625495,
        "6": 0.03943615033625495,
        "llm": 0.03943615033625495,
        "runner": 0.0788723006725099,
        "http": 0.03943615033625495,
        "adapter": 0.0788723006725099,
        "host": 0.03943615033625495,
        "container": 0.03943615033625495,
        "defaults": 0.0788723006725099,
        "env": 0.03943615033625495,
        "api": 0.03943615033625495,
        "key": 0.03943615033625495,
        "overrides": 0.03943615033625495,
        "llama": 0.03943615033625495,
        "cpp": 0.03943615033625495,
        "structured": 0.03943615033625495,
        "outputs": 0.03943615033625495,
        "tool": 0.03943615033625495,
        "use": 0.03943615033625495,
        "compatibility": 0.03943615033625495,
        "7": 0.03943615033625495,
        "post": 0.03943615033625495,
        "processing": 0.03943615033625495,
        "markdown": 0.03943615033625495,
        "lint": 0.03943615033625495,
        "heading": 0.03943615033625495,
        "hierarchy": 0.03943615033625495,
        "code": 0.03943615033625495,
        "fences": 0.03943615033625495,
        "line": 0.03943615033625495,
        "length": 0.03943615033625495,
        "auto": 0.03943615033625495,
        "toc": 0.03943615033625495,
        "level": 0.03943615033625495,
        "3": 0.03943615033625495,
        "badges": 0.03943615033625495,
        "coverage": 0.03943615033625495,
        "with": 0.03943615033625495,
        "safe": 0.03943615033625495,
        "link": 0.03943615033625495,
        "validator": 0.03943615033625495,
        "relative": 0.03943615033625495,
        "absolute": 0.03943615033625495,
        "managed": 0.03943615033625495,
        "markers": 0.03943615033625495,
        "idempotent": 0.03943615033625495,
        "patching": 0.03943615033625495,
        "docgen": 0.03943615033625495,
        "begin": 0.03943615033625495,
        "end": 0.03943615033625495,
        "8": 0.03943615033625495,
        "git": 0.03943615033625495,
        "integration": 0.03943615033625495,
        "diff": 0.03943615033625495,
        "detection": 0.03943615033625495,
        "map": 0.03943615033625495,
        "changed": 0.03943615033625495,
        "files": 0.03943615033625495,
        "impacted": 0.03943615033625495
      },
      "text": "CI config, monorepo layout **[NEXT]** - [x] Tree\u2011sitter powered symbol/entrypoint extraction (flagged) **[STRETCH]** ## 4) Knowledge Store (RAG) - [x] Local embedding model + chunking strategy **[MVP]** - [x] Index `README`, `/docs`, top N source headers & comments **[MVP]** - [x] Section\u2011scoped retrieval (top\u2011k per section) **[MVP]** - [ ] Lightweight knowledge graph of modules/services/signals **[NEXT]** ## 5) Prompting & Templates - [x] Jinja2 templates per section (intro, features, architecture, quickstart, config, build/test, deployment, troubleshooting, FAQ, license) **[MVP]** - [ ] Guardrailed system prompt (\u201cno speculation; cite repo facts only\u201d) **[MVP]** - [ ] Token budgeting & streaming section-by-section generation **[MVP]** - [x] Template override mechanism (`docs/templates/*.j2`) **[NEXT]** - [x] Style presets: concise vs comprehensive **[NEXT]** - [x] Mermaid.js diagrams for architecture/flow sections where appropriate **[NEXT]** ## 6) Local LLM Runner - [x] Model Runner HTTP adapter (host/container defaults, env/API key overrides) **[MVP]** - [x] llama.cpp adapter **[NEXT]** - [ ] Structured outputs / tool\u2011use compatibility **[STRETCH]** ## 7) Post\u2011Processing - [x] Markdown lint: heading hierarchy, code fences, line length **[MVP]** - [x] Auto ToC (\u2264 level 3) **[MVP]** - [x] Badges (build, coverage, license) with safe defaults **[NEXT]** - [x] Link validator (relative/absolute) **[NEXT]** - [x] Managed markers for idempotent patching (`<!-- docgen:begin:end -->`) **[MVP]** ## 8) Git Integration - [x] Diff detection (map changed files \u2192 impacted sections)",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_checklist.md#2",
      "vector": {
        "x": 0.6172133998483676,
        "badges": 0.03857583749052298,
        "build": 0.07715167498104596,
        "coverage": 0.03857583749052298,
        "license": 0.03857583749052298,
        "with": 0.07715167498104596,
        "safe": 0.03857583749052298,
        "defaults": 0.03857583749052298,
        "next": 0.3086066999241838,
        "link": 0.03857583749052298,
        "validator": 0.03857583749052298,
        "relative": 0.03857583749052298,
        "absolute": 0.03857583749052298,
        "managed": 0.03857583749052298,
        "markers": 0.03857583749052298,
        "for": 0.11572751247156893,
        "idempotent": 0.03857583749052298,
        "patching": 0.03857583749052298,
        "docgen": 0.07715167498104596,
        "begin": 0.03857583749052298,
        "end": 0.03857583749052298,
        "mvp": 0.4629100498862757,
        "8": 0.03857583749052298,
        "git": 0.03857583749052298,
        "integration": 0.07715167498104596,
        "diff": 0.03857583749052298,
        "detection": 0.03857583749052298,
        "map": 0.03857583749052298,
        "changed": 0.03857583749052298,
        "files": 0.03857583749052298,
        "impacted": 0.03857583749052298,
        "sections": 0.03857583749052298,
        "branch": 0.03857583749052298,
        "pr": 0.07715167498104596,
        "creation": 0.03857583749052298,
        "summary": 0.03857583749052298,
        "of": 0.03857583749052298,
        "readme": 0.11572751247156893,
        "deltas": 0.03857583749052298,
        "commit": 0.03857583749052298,
        "mode": 0.03857583749052298,
        "init": 0.03857583749052298,
        "or": 0.03857583749052298,
        "small": 0.03857583749052298,
        "changes": 0.07715167498104596,
        "configurable": 0.03857583749052298,
        "prevent": 0.03857583749052298,
        "loops": 0.03857583749052298,
        "on": 0.07715167498104596,
        "only": 0.07715167498104596,
        "9": 0.03857583749052298,
        "configuration": 0.03857583749052298,
        "parse": 0.03857583749052298,
        "yml": 0.03857583749052298,
        "llm": 0.03857583749052298,
        "style": 0.03857583749052298,
        "analyzers": 0.03857583749052298,
        "publish": 0.03857583749052298,
        "path": 0.03857583749052298,
        "exclusions": 0.03857583749052298,
        "watched_globs": 0.03857583749052298,
        "ci": 0.11572751247156893,
        "triggers": 0.03857583749052298,
        "per": 0.07715167498104596,
        "section": 0.03857583749052298,
        "off": 0.03857583749052298,
        "toggles": 0.03857583749052298,
        "and": 0.11572751247156893,
        "titles": 0.03857583749052298,
        "10": 0.03857583749052298,
        "github": 0.03857583749052298,
        "actions": 0.03857583749052298,
        "example": 0.03857583749052298,
        "workflow": 0.03857583749052298,
        "gitlab": 0.03857583749052298,
        "bitbucket": 0.03857583749052298,
        "pipelines": 0.03857583749052298,
        "samples": 0.03857583749052298,
        "labeling": 0.03857583749052298,
        "docs": 0.03857583749052298,
        "auto": 0.03857583749052298,
        "update": 0.03857583749052298,
        "behavior": 0.03857583749052298,
        "11": 0.03857583749052298,
        "security": 0.03857583749052298,
        "privacy": 0.03857583749052298,
        "local": 0.03857583749052298,
        "models": 0.03857583749052298,
        "never": 0.03857583749052298,
        "exfiltrate": 0.03857583749052298,
        "code": 0.03857583749052298,
        "respect": 0.03857583749052298,
        "gitignore": 0.03857583749052298,
        "exclude": 0.03857583749052298,
        "large": 0.03857583749052298,
        "binaries": 0.03857583749052298,
        "secrets": 0.03857583749052298,
        "optional": 0.03857583749052298,
        "simple": 0.03857583749052298,
        "secret": 0.03857583749052298,
        "scanner": 0.03857583749052298,
        "gate": 0.03857583749052298,
        "12": 0.03857583749052298,
        "multi": 0.03857583749052298,
        "language": 0.03857583749052298,
        "project": 0.03857583749052298,
        "types": 0.03857583749052298,
        "tier": 0.07715167498104596,
        "1": 0.03857583749052298,
        "python": 0.03857583749052298,
        "poetry": 0.03857583749052298,
        "setuptools": 0.03857583749052298,
        "java": 0.03857583749052298,
        "maven": 0.03857583749052298,
        "gradle": 0.03857583749052298,
        "spring": 0.03857583749052298,
        "boot": 0.03857583749052298,
        "node": 0.03857583749052298,
        "js": 0.03857583749052298,
        "npm": 0.03857583749052298,
        "pnpm": 0.03857583749052298,
        "express": 0.03857583749052298,
        "2": 0.03857583749052298,
        "go": 0.03857583749052298,
        "rust": 0.03857583749052298,
        "ruby": 0.03857583749052298,
        "php": 0.03857583749052298,
        "stretch": 0.03857583749052298,
        "framework": 0.03857583749052298,
        "aware": 0.03857583749052298,
        "quickstart": 0.03857583749052298,
        "commands": 0.03857583749052298,
        "system": 0.03857583749052298,
        "13": 0.03857583749052298,
        "quality": 0.03857583749052298,
        "gates": 0.03857583749052298,
        "evaluation": 0.03857583749052298,
        "command": 0.03857583749052298,
        "validation": 0.03857583749052298,
        "existence": 0.03857583749052298,
        "checks": 0.07715167498104596,
        "no": 0.03857583749052298,
        "hallucination": 0.03857583749052298,
        "reject": 0.03857583749052298,
        "facts": 0.03857583749052298,
        "not": 0.03857583749052298
      },
      "text": "[x] Badges (build, coverage, license) with safe defaults **[NEXT]** - [x] Link validator (relative/absolute) **[NEXT]** - [x] Managed markers for idempotent patching (`<!-- docgen:begin:end -->`) **[MVP]** ## 8) Git Integration - [x] Diff detection (map changed files \u2192 impacted sections) **[MVP]** - [x] Branch + PR creation with summary of README deltas **[MVP]** - [x] Commit mode for init or small changes (configurable) **[NEXT]** - [x] Prevent loops on README\u2011only changes **[MVP]** ## 9) Configuration - [x] Parse `.docgen.yml` (LLM, readme style, analyzers, publish) **[MVP]** - [x] Path exclusions & `watched_globs` for CI triggers **[MVP]** - [ ] Per-section on/off toggles and titles **[NEXT]** ## 10) CI Integration - [x] GitHub Actions example workflow **[MVP]** - [ ] GitLab CI and Bitbucket Pipelines samples **[NEXT]** - [x] Labeling (`docs:auto`) and PR update behavior **[NEXT]** ## 11) Security & Privacy - [x] Local-only models; never exfiltrate code **[MVP]** - [ ] Respect `.gitignore`; exclude large binaries/secrets **[MVP]** - [ ] Optional simple secret scanner gate **[NEXT]** ## 12) Multi\u2011Language & Project Types - [x] Tier\u20111: Python (Poetry/Setuptools), Java (Maven/Gradle/Spring Boot), Node.js (npm/pnpm/Express/Next) **[MVP]** - [ ] Tier\u20112: Go, Rust, Ruby, PHP **[STRETCH]** - [x] Framework\u2011aware quickstart commands per build system **[MVP]** ## 13) Quality Gates & Evaluation - [x] Command validation (existence checks) **[MVP]** - [x] No-hallucination checks: reject facts not",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_checklist.md#3",
      "vector": {
        "npm": 0.052999894000318,
        "pnpm": 0.052999894000318,
        "express": 0.052999894000318,
        "next": 0.211999576001272,
        "mvp": 0.476999046002862,
        "tier": 0.052999894000318,
        "2": 0.052999894000318,
        "go": 0.052999894000318,
        "rust": 0.052999894000318,
        "ruby": 0.052999894000318,
        "php": 0.052999894000318,
        "stretch": 0.052999894000318,
        "x": 0.5829988340034981,
        "framework": 0.052999894000318,
        "aware": 0.052999894000318,
        "quickstart": 0.052999894000318,
        "commands": 0.052999894000318,
        "per": 0.105999788000636,
        "build": 0.052999894000318,
        "system": 0.052999894000318,
        "13": 0.052999894000318,
        "quality": 0.052999894000318,
        "gates": 0.052999894000318,
        "evaluation": 0.052999894000318,
        "command": 0.052999894000318,
        "validation": 0.052999894000318,
        "existence": 0.052999894000318,
        "checks": 0.105999788000636,
        "no": 0.052999894000318,
        "hallucination": 0.052999894000318,
        "reject": 0.052999894000318,
        "facts": 0.052999894000318,
        "not": 0.052999894000318,
        "in": 0.052999894000318,
        "signals": 0.052999894000318,
        "rag": 0.105999788000636,
        "readme": 0.105999788000636,
        "scorecard": 0.052999894000318,
        "coverage": 0.052999894000318,
        "buildability": 0.052999894000318,
        "link": 0.052999894000318,
        "validity": 0.052999894000318,
        "diff": 0.052999894000318,
        "alignment": 0.052999894000318,
        "lint": 0.105999788000636,
        "14": 0.052999894000318,
        "performance": 0.052999894000318,
        "caching": 0.052999894000318,
        "persist": 0.052999894000318,
        "analyzer": 0.105999788000636,
        "outputs": 0.052999894000318,
        "embeddings": 0.052999894000318,
        "under": 0.052999894000318,
        "docgen": 0.052999894000318,
        "incremental": 0.052999894000318,
        "refresh": 0.052999894000318,
        "changed": 0.052999894000318,
        "files": 0.052999894000318,
        "only": 0.052999894000318,
        "15": 0.052999894000318,
        "error": 0.052999894000318,
        "handling": 0.052999894000318,
        "ux": 0.052999894000318,
        "fail": 0.052999894000318,
        "safe": 0.052999894000318,
        "stub": 0.052999894000318,
        "generation": 0.052999894000318,
        "when": 0.052999894000318,
        "evidence": 0.052999894000318,
        "is": 0.052999894000318,
        "insufficient": 0.052999894000318,
        "clear": 0.052999894000318,
        "run": 0.052999894000318,
        "logs": 0.052999894000318,
        "pr": 0.052999894000318,
        "body": 0.052999894000318,
        "with": 0.052999894000318,
        "rationale": 0.052999894000318,
        "sections": 0.052999894000318,
        "updated": 0.052999894000318,
        "because": 0.052999894000318,
        "helpful": 0.052999894000318,
        "cli": 0.052999894000318,
        "errors": 0.052999894000318,
        "and": 0.105999788000636,
        "verbose": 0.052999894000318,
        "flag": 0.052999894000318,
        "works": 0.052999894000318,
        "pre": 0.052999894000318,
        "post": 0.052999894000318,
        "subcommand": 0.052999894000318,
        "16": 0.052999894000318,
        "extensibility": 0.052999894000318,
        "abc": 0.052999894000318,
        "plugin": 0.052999894000318,
        "discovery": 0.052999894000318,
        "template": 0.052999894000318,
        "packs": 0.052999894000318,
        "org": 0.052999894000318,
        "style": 0.105999788000636,
        "definition": 0.052999894000318,
        "of": 0.052999894000318,
        "done": 0.052999894000318,
        "section": 0.052999894000318,
        "passing": 0.052999894000318,
        "unit": 0.052999894000318,
        "integration": 0.052999894000318,
        "tests": 0.052999894000318,
        "for": 0.052999894000318,
        "core": 0.052999894000318,
        "logic": 0.052999894000318,
        "golden": 0.052999894000318,
        "regression": 0.052999894000318,
        "test": 0.052999894000318,
        "s": 0.052999894000318,
        "meets": 0.052999894000318,
        "requirements": 0.052999894000318
      },
      "text": "(npm/pnpm/Express/Next) **[MVP]** - [ ] Tier\u20112: Go, Rust, Ruby, PHP **[STRETCH]** - [x] Framework\u2011aware quickstart commands per build system **[MVP]** ## 13) Quality Gates & Evaluation - [x] Command validation (existence checks) **[MVP]** - [x] No-hallucination checks: reject facts not in signals/RAG **[MVP]** - [x] README scorecard (coverage, buildability, link validity, diff alignment, lint) **[NEXT]** ## 14) Performance & Caching - [x] Persist analyzer outputs & embeddings under `.docgen/` **[MVP]** - [x] Incremental RAG refresh (changed files only) **[NEXT]** ## 15) Error Handling & UX - [x] Fail-safe stub generation when evidence is insufficient **[MVP]** - [x] Clear run logs + PR body with rationale (\u201csections updated because\u2026\u201d) **[MVP]** - [x] Helpful CLI errors and `--verbose` flag (works pre/post subcommand) **[MVP]** ## 16) Extensibility - [x] Analyzer ABC and plugin discovery **[MVP]** - [x] Template packs (org\u2011style) **[NEXT]** --- ### Definition of Done (per section) - [ ] Passing unit & integration tests for core logic - [ ] Golden README regression test(s) - [ ] Meets lint/style requirements",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_order.md#0",
      "vector": {
        "docgen": 0.25491557319725244,
        "development": 0.042485928866208736,
        "roadmap": 0.042485928866208736,
        "phase": 0.12745778659862622,
        "0": 0.042485928866208736,
        "bootstrap": 0.042485928866208736,
        "the": 0.042485928866208736,
        "skeleton": 0.08497185773241747,
        "1": 0.3398874309296699,
        "project": 0.042485928866208736,
        "cli": 0.042485928866208736,
        "config": 0.08497185773241747,
        "loader": 0.042485928866208736,
        "yml": 0.042485928866208736,
        "models": 0.042485928866208736,
        "done": 0.3823733597958786,
        "covers": 0.3823733597958786,
        "commands": 0.042485928866208736,
        "scaffolding": 0.042485928866208736,
        "9": 0.042485928866208736,
        "parse": 0.042485928866208736,
        "16": 0.08497185773241747,
        "analyzer": 0.08497185773241747,
        "abc": 0.08497185773241747,
        "2": 0.2124296443310437,
        "plugin": 0.08497185773241747,
        "discovery": 0.08497185773241747,
        "init": 0.16994371546483494,
        "happy": 0.042485928866208736,
        "path": 0.042485928866208736,
        "single": 0.042485928866208736,
        "repo": 0.12745778659862622,
        "local": 0.08497185773241747,
        "scanner": 0.042485928866208736,
        "manifest": 0.08497185773241747,
        "roles": 0.042485928866208736,
        "hashing": 0.042485928866208736,
        "ignores": 0.08497185773241747,
        "walk": 0.042485928866208736,
        "fs": 0.042485928866208736,
        "cache": 0.042485928866208736,
        "tier": 0.042485928866208736,
        "analyzers": 0.12745778659862622,
        "python": 0.042485928866208736,
        "java": 0.042485928866208736,
        "node": 0.042485928866208736,
        "build": 0.08497185773241747,
        "dependency": 0.042485928866208736,
        "3": 0.08497185773241747,
        "language": 0.042485928866208736,
        "deps": 0.042485928866208736,
        "templates": 0.12745778659862622,
        "prompt": 0.12745778659862622,
        "builder": 0.08497185773241747,
        "section": 0.12745778659862622,
        "by": 0.042485928866208736,
        "guardrailed": 0.042485928866208736,
        "system": 0.042485928866208736,
        "partial": 0.042485928866208736,
        "guardrails": 0.08497185773241747,
        "unused": 0.042485928866208736,
        "5": 0.08497185773241747,
        "jinja2": 0.042485928866208736,
        "token": 0.042485928866208736,
        "budget": 0.042485928866208736,
        "4": 0.042485928866208736,
        "llm": 0.042485928866208736,
        "runner": 0.042485928866208736,
        "ollama": 0.08497185773241747,
        "adapter": 0.042485928866208736,
        "6": 0.08497185773241747,
        "post": 0.042485928866208736,
        "processor": 0.042485928866208736,
        "managed": 0.042485928866208736,
        "markers": 0.12745778659862622,
        "toc": 0.08497185773241747,
        "markdown": 0.042485928866208736,
        "lint": 0.08497185773241747,
        "7": 0.042485928866208736,
        "git": 0.08497185773241747,
        "publisher": 0.08497185773241747,
        "commit": 0.08497185773241747,
        "mode": 0.08497185773241747,
        "for": 0.08497185773241747,
        "only": 0.042485928866208736,
        "8": 0.08497185773241747,
        "end": 0.08497185773241747,
        "to": 0.042485928866208736,
        "milestone": 0.042485928866208736,
        "generates": 0.042485928866208736,
        "a": 0.08497185773241747,
        "clean": 0.042485928866208736,
        "readme": 0.042485928866208736,
        "with": 0.042485928866208736,
        "no": 0.042485928866208736,
        "docs": 0.042485928866208736,
        "update": 0.08497185773241747,
        "on": 0.042485928866208736,
        "change": 0.08497185773241747,
        "pr": 0.042485928866208736,
        "workflow": 0.042485928866208736,
        "diff": 0.08497185773241747,
        "detection": 0.042485928866208736,
        "mapping": 0.08497185773241747,
        "patching": 0.042485928866208736,
        "inside": 0.042485928866208736,
        "prevent": 0.042485928866208736,
        "loops": 0.042485928866208736
      },
      "text": "# DocGen Development Roadmap ## Phase 0 \u2014 Bootstrap the skeleton 1. **Project skeleton + CLI (`docgen`) + config loader (`.docgen.yml`) + models** \u2014 \u2714 Done * Covers: 1 (commands scaffolding), 9 (parse config), 16 (Analyzer ABC) 2. **Analyzer plugin ABC & discovery** \u2014 \u2714 Done * Covers: 16 (plugin discovery) ## Phase 1 \u2014 \"Init\" happy-path (single repo, local) 1. **Repo scanner & manifest (roles, hashing, ignores)** \u2014 \u2714 Done * Covers: 2 (walk FS, manifest, cache, ignores) 2. **Tier-1 analyzers (Python, Java, Node) + build analyzers + dependency analyzers** \u2014 \u2714 Done * Covers: 3 (language/build/deps) 3. **Templates + prompt builder (section-by-section) + guardrailed system prompt** \u2014 \u25d0 Partial (templates/prompt builder done; guardrails unused) * Covers: 5 (Jinja2 templates, guardrails, token budget) 4. **Local LLM runner (Ollama adapter)** \u2014 \u2714 Done * Covers: 6 (Ollama) 5. **Post-processor: managed markers, ToC, markdown lint** \u2014 \u2714 Done * Covers: 7 (markers, ToC, lint) 6. **Git publisher: commit mode (for init only)** \u2014 \u2714 Done * Covers: 8 (commit mode), 1 (`docgen init` end-to-end) \u2705 **Milestone**: `docgen init` generates a clean README for a repo with no docs. ## Phase 2 \u2014 Update-on-change (PR workflow) 1. **Diff detection + change\u2192section mapping + patching inside markers** \u2014 \u2714 Done * Covers: 8 (diff mapping, prevent loops), 1 (`docgen update`) 2. **Git publisher:",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/feature_order.md#1",
      "vector": {
        "readme": 0.09035079029052513,
        "for": 0.045175395145262566,
        "a": 0.09035079029052513,
        "repo": 0.09035079029052513,
        "with": 0.1355261854357877,
        "no": 0.18070158058105026,
        "docs": 0.09035079029052513,
        "phase": 0.22587697572631282,
        "2": 0.22587697572631282,
        "update": 0.18070158058105026,
        "on": 0.045175395145262566,
        "change": 0.09035079029052513,
        "pr": 0.22587697572631282,
        "workflow": 0.045175395145262566,
        "1": 0.22587697572631282,
        "diff": 0.09035079029052513,
        "detection": 0.045175395145262566,
        "section": 0.1355261854357877,
        "mapping": 0.09035079029052513,
        "patching": 0.045175395145262566,
        "inside": 0.045175395145262566,
        "markers": 0.045175395145262566,
        "done": 0.36140316116210053,
        "covers": 0.36140316116210053,
        "8": 0.09035079029052513,
        "prevent": 0.045175395145262566,
        "loops": 0.045175395145262566,
        "docgen": 0.1355261854357877,
        "git": 0.045175395145262566,
        "publisher": 0.045175395145262566,
        "branch": 0.09035079029052513,
        "delta": 0.045175395145262566,
        "summary": 0.045175395145262566,
        "10": 0.09035079029052513,
        "labeling": 0.045175395145262566,
        "later": 0.045175395145262566,
        "milestone": 0.09035079029052513,
        "opens": 0.045175395145262566,
        "updating": 0.045175395145262566,
        "only": 0.09035079029052513,
        "impacted": 0.045175395145262566,
        "sections": 0.045175395145262566,
        "3": 0.045175395145262566,
        "minimal": 0.045175395145262566,
        "rag": 0.09035079029052513,
        "accuracy": 0.045175395145262566,
        "lite": 0.045175395145262566,
        "embed": 0.045175395145262566,
        "top": 0.045175395145262566,
        "n": 0.045175395145262566,
        "source": 0.045175395145262566,
        "headers": 0.045175395145262566,
        "scoped": 0.045175395145262566,
        "retrieval": 0.09035079029052513,
        "4": 0.09035079029052513,
        "local": 0.09035079029052513,
        "embedding": 0.045175395145262566,
        "index": 0.045175395145262566,
        "sources": 0.045175395145262566,
        "per": 0.045175395145262566,
        "hallucination": 0.1355261854357877,
        "command": 0.1355261854357877,
        "existence": 0.045175395145262566,
        "checks": 0.045175395145262566,
        "partial": 0.045175395145262566,
        "validation": 0.09035079029052513,
        "guard": 0.045175395145262566,
        "not": 0.045175395145262566,
        "implemented": 0.045175395145262566,
        "13": 0.045175395145262566,
        "outputs": 0.045175395145262566,
        "grounded": 0.045175395145262566,
        "in": 0.045175395145262566,
        "facts": 0.045175395145262566,
        "targeted": 0.045175395145262566,
        "context": 0.045175395145262566,
        "hardening": 0.045175395145262566,
        "dx": 0.045175395145262566,
        "error": 0.045175395145262566,
        "handling": 0.045175395145262566,
        "clear": 0.045175395145262566,
        "logs": 0.09035079029052513,
        "verbose": 0.045175395145262566,
        "fail": 0.09035079029052513,
        "safe": 0.09035079029052513,
        "stubs": 0.045175395145262566,
        "15": 0.045175395145262566,
        "cli": 0.045175395145262566,
        "ux": 0.045175395145262566,
        "security": 0.045175395145262566,
        "gitignore": 0.045175395145262566,
        "respect": 0.045175395145262566,
        "path": 0.045175395145262566,
        "excludes": 0.09035079029052513,
        "enforcement": 0.045175395145262566,
        "11": 0.045175395145262566,
        "privacy": 0.045175395145262566,
        "5": 0.09035079029052513,
        "ci": 0.045175395145262566,
        "integration": 0.045175395145262566,
        "config": 0.09035079029052513,
        "polish": 0.045175395145262566,
        "github": 0.045175395145262566,
        "actions": 0.09035079029052513,
        "sample": 0.045175395145262566,
        "push": 0.045175395145262566,
        "trigger": 0.045175395145262566,
        "calling": 0.045175395145262566,
        "gh": 0.045175395145262566,
        "refinements": 0.045175395145262566,
        "watched": 0.045175395145262566,
        "globs": 0.045175395145262566,
        "style": 0.09035079029052513,
        "preset": 0.045175395145262566,
        "concise": 0.045175395145262566,
        "comprehensive": 0.045175395145262566,
        "9": 0.045175395145262566,
        "watched_globs": 0.045175395145262566,
        "presets": 0.045175395145262566,
        "6": 0.045175395145262566,
        "multi": 0.045175395145262566,
        "language": 0.045175395145262566,
        "breadth": 0.045175395145262566
      },
      "text": "README for a repo with no docs. ## Phase 2 \u2014 Update-on-change (PR workflow) 1. **Diff detection + change\u2192section mapping + patching inside markers** \u2014 \u2714 Done * Covers: 8 (diff mapping, prevent loops), 1 (`docgen update`) 2. **Git publisher: branch + PR with delta summary** \u2014 \u2714 Done * Covers: 8 (branch/PR), 10 (labeling later) \u2705 **Milestone**: `docgen update` opens a PR updating only impacted sections. ## Phase 3 \u2014 Minimal RAG & accuracy 1. **RAG Lite: embed README/docs/top N source headers; section-scoped retrieval** \u2014 \u2714 Done * Covers: 4 (local embedding, index sources, per-section retrieval) 2. **No-hallucination & command existence checks** \u2014 \u25d0 Partial (command validation done; no-hallucination guard not implemented) * Covers: 13 (command validation, no-hallucination) \u2705 **Milestone**: outputs grounded in repo facts with targeted context. ## Phase 4 \u2014 Hardening & DX 1. **Error handling, clear logs, `--verbose`, fail-safe stubs** \u2014 \u2714 Done * Covers: 15 (fail-safe, logs, CLI UX) 2. **Security: .gitignore respect, path excludes, local-only enforcement** \u2014 \u2714 Done * Covers: 11 (privacy, excludes) ## Phase 5 \u2014 CI integration & config polish 1. **GitHub Actions sample (push/PR trigger calling `docgen update`)** \u2014 \u2714 Done * Covers: 10 (GH Actions) 2. **Config refinements: watched globs, style preset (concise/comprehensive)** \u2014 \u2714 Done * Covers: 9 (watched_globs), 5 (style presets) ## Phase 6 \u2014 Multi-language breadth",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/feature_order.md#2",
      "vector": {
        "github": 0.046274481338274755,
        "actions": 0.09254896267654951,
        "sample": 0.046274481338274755,
        "push": 0.046274481338274755,
        "pr": 0.18509792535309902,
        "trigger": 0.046274481338274755,
        "calling": 0.046274481338274755,
        "docgen": 0.13882344401482424,
        "update": 0.046274481338274755,
        "done": 0.32392136936792326,
        "covers": 0.41647033204447276,
        "10": 0.09254896267654951,
        "gh": 0.046274481338274755,
        "2": 0.23137240669137377,
        "config": 0.09254896267654951,
        "refinements": 0.046274481338274755,
        "watched": 0.046274481338274755,
        "globs": 0.046274481338274755,
        "style": 0.09254896267654951,
        "preset": 0.046274481338274755,
        "concise": 0.046274481338274755,
        "comprehensive": 0.046274481338274755,
        "9": 0.046274481338274755,
        "watched_globs": 0.046274481338274755,
        "5": 0.09254896267654951,
        "presets": 0.046274481338274755,
        "phase": 0.13882344401482424,
        "6": 0.09254896267654951,
        "multi": 0.046274481338274755,
        "language": 0.046274481338274755,
        "breadth": 0.046274481338274755,
        "framework": 0.13882344401482424,
        "smarts": 0.046274481338274755,
        "1": 0.23137240669137377,
        "entrypoint": 0.046274481338274755,
        "detection": 0.046274481338274755,
        "main": 0.046274481338274755,
        "spring": 0.046274481338274755,
        "boot": 0.046274481338274755,
        "fastapi": 0.09254896267654951,
        "aware": 0.09254896267654951,
        "quick": 0.046274481338274755,
        "start": 0.046274481338274755,
        "entrypoints": 0.046274481338274755,
        "12": 0.046274481338274755,
        "commands": 0.046274481338274755,
        "pattern": 0.09254896267654951,
        "analyzers": 0.09254896267654951,
        "docker": 0.046274481338274755,
        "k8s": 0.046274481338274755,
        "ci": 0.046274481338274755,
        "monorepo": 0.046274481338274755,
        "layout": 0.046274481338274755,
        "3": 0.13882344401482424,
        "7": 0.13882344401482424,
        "quality": 0.046274481338274755,
        "gates": 0.046274481338274755,
        "performance": 0.046274481338274755,
        "readme": 0.09254896267654951,
        "scorecard": 0.13882344401482424,
        "link": 0.09254896267654951,
        "validator": 0.09254896267654951,
        "badges": 0.09254896267654951,
        "13": 0.046274481338274755,
        "artifact": 0.09254896267654951,
        "embedding": 0.046274481338274755,
        "caching": 0.046274481338274755,
        "in": 0.046274481338274755,
        "incremental": 0.09254896267654951,
        "rag": 0.09254896267654951,
        "refresh": 0.09254896267654951,
        "partial": 0.046274481338274755,
        "embeddings": 0.046274481338274755,
        "cached": 0.046274481338274755,
        "no": 0.046274481338274755,
        "analyzer": 0.046274481338274755,
        "store": 0.046274481338274755,
        "14": 0.046274481338274755,
        "persist": 0.046274481338274755,
        "outputs": 0.046274481338274755,
        "8": 0.046274481338274755,
        "nice": 0.046274481338274755,
        "to": 0.09254896267654951,
        "have": 0.046274481338274755,
        "stretch": 0.046274481338274755,
        "dry": 0.09254896267654951,
        "run": 0.09254896267654951,
        "mode": 0.13882344401482424,
        "labeling": 0.09254896267654951,
        "updates": 0.09254896267654951,
        "commit": 0.046274481338274755,
        "policy": 0.046274481338274755,
        "tuning": 0.046274481338274755,
        "template": 0.13882344401482424,
        "overrides": 0.046274481338274755,
        "docs": 0.046274481338274755,
        "templates": 0.046274481338274755,
        "j2": 0.046274481338274755,
        "org": 0.046274481338274755,
        "packs": 0.09254896267654951,
        "override": 0.046274481338274755,
        "16": 0.046274481338274755,
        "service": 0.09254896267654951,
        "llama": 0.09254896267654951,
        "cpp": 0.09254896267654951,
        "adapter": 0.046274481338274755,
        "tree": 0.09254896267654951,
        "sitter": 0.09254896267654951,
        "extraction": 0.046274481338274755,
        "not": 0.046274481338274755,
        "started": 0.046274481338274755,
        "why": 0.046274481338274755,
        "this": 0.046274481338274755,
        "order": 0.046274481338274755,
        "fastest": 0.046274481338274755,
        "path": 0.046274481338274755,
        "value": 0.046274481338274755,
        "get": 0.046274481338274755,
        "init": 0.046274481338274755,
        "producing": 0.046274481338274755,
        "a": 0.046274481338274755,
        "solid": 0.046274481338274755,
        "before": 0.046274481338274755,
        "adding": 0.046274481338274755,
        "diffing": 0.046274481338274755
      },
      "text": "**GitHub Actions sample (push/PR trigger calling `docgen update`)** \u2014 \u2714 Done * Covers: 10 (GH Actions) 2. **Config refinements: watched globs, style preset (concise/comprehensive)** \u2014 \u2714 Done * Covers: 9 (watched_globs), 5 (style presets) ## Phase 6 \u2014 Multi-language breadth & framework smarts 1. **Entrypoint detection (main, Spring Boot, FastAPI) + framework-aware Quick Start** \u2014 \u2714 Done * Covers: 2 (entrypoints), 12 (framework-aware commands) 2. **Pattern analyzers (Docker/K8s, CI config, monorepo layout)** \u2014 \u2714 Done * Covers: 3 (pattern analyzers) ## Phase 7 \u2014 Quality gates & performance 1. **README scorecard + link validator + badges** \u2014 \u2714 Done * Covers: 13 (scorecard), 7 (link validator), 7 (badges) 2. **Artifact & embedding caching in `.docgen/` + incremental RAG refresh** \u2014 \u25d0 Partial (embeddings/scorecard cached; no analyzer artifact store) * Covers: 14 (persist outputs, incremental refresh) ## Phase 8 \u2014 \"Nice to have\" & stretch 1. **Dry-run mode, PR labeling/updates, commit/PR policy tuning** \u2014 \u2714 Done * Covers: 1 (dry-run), 10 (labeling/PR updates) 2. **Template overrides (`docs/templates/*.j2`) & org template packs** \u2014 \u2714 Done * Covers: 5 (override), 16 (template packs) 3. **Service mode (FastAPI), llama.cpp adapter, tree-sitter extraction** \u2014 \u2610 Not started * Covers: 1 (service mode), 6 (llama.cpp), 3 (tree-sitter) ## Why this order * **Fastest path to value**: get `docgen init` producing a solid README before adding diffing/RAG.",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/feature_order.md#3",
      "vector": {
        "3": 0.18333969940564226,
        "service": 0.18333969940564226,
        "mode": 0.18333969940564226,
        "fastapi": 0.09166984970282113,
        "llama": 0.18333969940564226,
        "cpp": 0.18333969940564226,
        "adapter": 0.09166984970282113,
        "tree": 0.18333969940564226,
        "sitter": 0.18333969940564226,
        "extraction": 0.09166984970282113,
        "not": 0.09166984970282113,
        "started": 0.09166984970282113,
        "covers": 0.09166984970282113,
        "1": 0.09166984970282113,
        "6": 0.09166984970282113,
        "why": 0.09166984970282113,
        "this": 0.09166984970282113,
        "order": 0.09166984970282113,
        "fastest": 0.09166984970282113,
        "path": 0.09166984970282113,
        "to": 0.18333969940564226,
        "value": 0.09166984970282113,
        "get": 0.09166984970282113,
        "docgen": 0.09166984970282113,
        "init": 0.09166984970282113,
        "producing": 0.09166984970282113,
        "a": 0.09166984970282113,
        "solid": 0.09166984970282113,
        "readme": 0.09166984970282113,
        "before": 0.09166984970282113,
        "adding": 0.09166984970282113,
        "diffing": 0.09166984970282113,
        "rag": 0.18333969940564226,
        "contain": 0.09166984970282113,
        "risk": 0.09166984970282113,
        "early": 0.09166984970282113,
        "section": 0.09166984970282113,
        "markers": 0.09166984970282113,
        "lint": 0.09166984970282113,
        "and": 0.2750095491084634,
        "commit": 0.09166984970282113,
        "publishing": 0.09166984970282113,
        "ensure": 0.09166984970282113,
        "safe": 0.09166984970282113,
        "idempotent": 0.09166984970282113,
        "edits": 0.09166984970282113,
        "accuracy": 0.09166984970282113,
        "next": 0.09166984970282113,
        "add": 0.09166984970282113,
        "validation": 0.09166984970282113,
        "avoid": 0.09166984970282113,
        "hallucinations": 0.09166984970282113,
        "once": 0.09166984970282113,
        "the": 0.18333969940564226,
        "pipeline": 0.09166984970282113,
        "works": 0.09166984970282113,
        "scale": 0.09166984970282113,
        "breadth": 0.09166984970282113,
        "later": 0.09166984970282113,
        "only": 0.09166984970282113,
        "after": 0.09166984970282113,
        "core": 0.09166984970282113,
        "loop": 0.09166984970282113,
        "is": 0.09166984970282113,
        "robust": 0.09166984970282113,
        "do": 0.09166984970282113,
        "we": 0.09166984970282113,
        "widen": 0.09166984970282113,
        "language": 0.09166984970282113,
        "framework": 0.09166984970282113,
        "coverage": 0.09166984970282113,
        "polish": 0.09166984970282113,
        "last": 0.09166984970282113,
        "ci": 0.09166984970282113,
        "caching": 0.09166984970282113,
        "quality": 0.09166984970282113,
        "gates": 0.09166984970282113,
        "refine": 0.09166984970282113,
        "dev": 0.09166984970282113,
        "experience": 0.09166984970282113,
        "performance": 0.09166984970282113
      },
      "text": "3. **Service mode (FastAPI), llama.cpp adapter, tree-sitter extraction** \u2014 \u2610 Not started * Covers: 1 (service mode), 6 (llama.cpp), 3 (tree-sitter) ## Why this order * **Fastest path to value**: get `docgen init` producing a solid README before adding diffing/RAG. * **Contain risk early**: section markers, lint, and commit publishing ensure safe/idempotent edits. * **Accuracy next**: add RAG + validation to avoid hallucinations once the pipeline works. * **Scale breadth later**: only after the core loop is robust do we widen language/framework coverage. * **Polish last**: CI, caching, and quality gates refine dev experience and performance.",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/jira_stories.md#0",
      "vector": {
        "docgen": 0.15037641213512565,
        "jira": 0.05012547071170855,
        "stories": 0.1002509414234171,
        "remaining": 0.05012547071170855,
        "are": 0.1002509414234171,
        "ordered": 0.05012547071170855,
        "by": 0.1002509414234171,
        "the": 0.25062735355854276,
        "recommended": 0.05012547071170855,
        "completion": 0.05012547071170855,
        "sequence": 0.05012547071170855,
        "and": 0.3508782949819598,
        "formatted": 0.05012547071170855,
        "per": 0.05012547071170855,
        "prompt": 0.05012547071170855,
        "template": 0.05012547071170855,
        "guidance": 0.05012547071170855,
        "all": 0.05012547071170855,
        "prior": 0.05012547071170855,
        "milestones": 0.05012547071170855,
        "complete": 0.05012547071170855,
        "only": 0.05012547071170855,
        "work": 0.05012547071170855,
        "listed": 0.05012547071170855,
        "below": 0.05012547071170855,
        "remains": 0.05012547071170855,
        "story": 0.1002509414234171,
        "s": 0.15037641213512565,
        "032": 0.05012547071170855,
        "no": 0.05012547071170855,
        "hallucination": 0.05012547071170855,
        "validation": 0.15037641213512565,
        "status": 0.05012547071170855,
        "done": 0.05012547071170855,
        "text": 0.05012547071170855,
        "introduce": 0.05012547071170855,
        "a": 0.3508782949819598,
        "layer": 0.05012547071170855,
        "that": 0.1002509414234171,
        "rejects": 0.05012547071170855,
        "readme": 0.05012547071170855,
        "content": 0.15037641213512565,
        "containing": 0.05012547071170855,
        "facts": 0.05012547071170855,
        "not": 0.05012547071170855,
        "backed": 0.05012547071170855,
        "analyzer": 0.1002509414234171,
        "signals": 0.15037641213512565,
        "or": 0.2005018828468342,
        "rag": 0.1002509414234171,
        "context": 0.1002509414234171,
        "surfacing": 0.05012547071170855,
        "actionable": 0.05012547071170855,
        "errors": 0.05012547071170855,
        "to": 0.05012547071170855,
        "users": 0.05012547071170855,
        "dependencies": 0.05012547071170855,
        "already": 0.05012547071170855,
        "completed": 0.05012547071170855,
        "031": 0.05012547071170855,
        "guardrailed": 0.05012547071170855,
        "execution": 0.05012547071170855,
        "011": 0.05012547071170855,
        "contexts": 0.05012547071170855,
        "constraints": 0.05012547071170855,
        "must": 0.05012547071170855,
        "run": 0.05012547071170855,
        "after": 0.1002509414234171,
        "section": 0.1002509414234171,
        "rendering": 0.1002509414234171,
        "but": 0.05012547071170855,
        "before": 0.1002509414234171,
        "writing": 0.05012547071170855,
        "files": 0.05012547071170855,
        "publishing": 0.05012547071170855,
        "prs": 0.05012547071170855,
        "provide": 0.05012547071170855,
        "clear": 0.05012547071170855,
        "remediation": 0.05012547071170855,
        "logs": 0.1002509414234171,
        "referencing": 0.05012547071170855,
        "missing": 0.1002509414234171,
        "affected": 0.05012547071170855,
        "sections": 0.1002509414234171,
        "allow": 0.05012547071170855,
        "an": 0.05012547071170855,
        "opt": 0.05012547071170855,
        "out": 0.05012547071170855,
        "toggle": 0.05012547071170855,
        "in": 0.05012547071170855,
        "yml": 0.05012547071170855,
        "for": 0.05012547071170855,
        "edge": 0.05012547071170855,
        "cases": 0.05012547071170855,
        "non": 0.05012547071170855,
        "goals": 0.05012547071170855,
        "external": 0.05012547071170855,
        "api": 0.05012547071170855,
        "calls": 0.05012547071170855,
        "complex": 0.05012547071170855,
        "semantic": 0.05012547071170855,
        "similarity": 0.05012547071170855,
        "checks": 0.05012547071170855,
        "acceptance": 0.1002509414234171,
        "criteria": 0.05012547071170855,
        "validator": 0.1002509414234171,
        "cross": 0.05012547071170855,
        "references": 0.05012547071170855,
        "generated": 0.05012547071170855,
        "claims": 0.05012547071170855,
        "against": 0.05012547071170855,
        "available": 0.05012547071170855,
        "disallowed": 0.05012547071170855,
        "triggers": 0.05012547071170855,
        "failure": 0.05012547071170855,
        "path": 0.05012547071170855,
        "with": 0.1002509414234171,
        "stub": 0.05012547071170855,
        "fallback": 0.05012547071170855,
        "unit": 0.05012547071170855,
        "tests": 0.05012547071170855,
        "cover": 0.05012547071170855,
        "of": 0.1002509414234171,
        "grounded": 0.05012547071170855,
        "rejection": 0.05012547071170855,
        "injected": 0.05012547071170855,
        "hallucinations": 0.05012547071170855,
        "cli": 0.05012547071170855,
        "surfaces": 0.05012547071170855,
        "concise": 0.05012547071170855,
        "error": 0.05012547071170855,
        "messages": 0.05012547071170855,
        "verbose": 0.05012547071170855,
        "list": 0.05012547071170855,
        "offending": 0.05012547071170855,
        "evidence": 0.05012547071170855,
        "implementation": 0.1002509414234171,
        "plan": 0.05012547071170855,
        "create": 0.05012547071170855,
        "dedicated": 0.05012547071170855,
        "validators": 0.1002509414234171,
        "package": 0.05012547071170855,
        "lightweight": 0.05012547071170855,
        "validationissue": 0.05012547071170855,
        "dataclass": 0.05012547071170855,
        "protocol": 0.05012547071170855,
        "nohallucinationvalidator": 0.05012547071170855,
        "concrete": 0.05012547071170855,
        "orchestrator": 0.05012547071170855,
        "registers": 0.05012547071170855,
        "executes": 0.05012547071170855,
        "them": 0.05012547071170855,
        "post": 0.05012547071170855,
        "processing": 0.05012547071170855,
        "io": 0.05012547071170855,
        "add": 0.05012547071170855,
        "shared": 0.05012547071170855,
        "evidenceindex": 0.05012547071170855,
        "builder": 0.05012547071170855,
        "normalizes": 0.05012547071170855
      },
      "text": "# DocGen Jira Stories (Remaining) > Stories are ordered by the recommended completion sequence and formatted per the prompt template guidance. All prior milestones are complete; only the work listed below remains. --- ## Story S-032 \u2014 No-Hallucination Validation - **Status:** \u2714 Done - **Story Text:** Introduce a validation layer that rejects README content containing facts not backed by analyzer signals or RAG context, surfacing actionable errors to users. - **Dependencies already completed:** S-031 (guardrailed execution), S-011 (RAG contexts) - **Constraints:** - Validation must run after section rendering but before writing files or publishing PRs. - Provide clear remediation logs referencing the missing signals and affected sections. - Allow an opt-out toggle in `.docgen.yml` for edge cases. - **Non-Goals:** External API calls or complex semantic similarity checks. - **Acceptance Criteria:** - Validator cross-references generated claims against available signals/context; disallowed content triggers a failure path with stub fallback. - Unit tests cover acceptance of grounded content and rejection of injected hallucinations. - CLI surfaces concise error messages and `--verbose` logs list offending sections and missing evidence. - **Implementation Plan:** - Create a dedicated `docgen.validators` package with a lightweight `ValidationIssue` dataclass, a `Validator` protocol, and a `NoHallucinationValidator` concrete implementation. The orchestrator registers validators after section rendering and executes them before post-processing or IO. - Add a shared `EvidenceIndex` builder that normalizes analyzer",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#1",
      "vector": {
        "a": 0.37435064886346636,
        "dedicated": 0.04159451654038515,
        "docgen": 0.12478354962115545,
        "validators": 0.12478354962115545,
        "package": 0.04159451654038515,
        "with": 0.2495670992423109,
        "lightweight": 0.04159451654038515,
        "validationissue": 0.04159451654038515,
        "dataclass": 0.04159451654038515,
        "validator": 0.04159451654038515,
        "protocol": 0.04159451654038515,
        "and": 0.29116161578269606,
        "nohallucinationvalidator": 0.04159451654038515,
        "concrete": 0.04159451654038515,
        "implementation": 0.04159451654038515,
        "the": 0.4991341984846218,
        "orchestrator": 0.04159451654038515,
        "registers": 0.04159451654038515,
        "after": 0.04159451654038515,
        "section": 0.0831890330807703,
        "rendering": 0.04159451654038515,
        "executes": 0.04159451654038515,
        "them": 0.04159451654038515,
        "before": 0.04159451654038515,
        "post": 0.04159451654038515,
        "processing": 0.04159451654038515,
        "or": 0.04159451654038515,
        "io": 0.04159451654038515,
        "add": 0.0831890330807703,
        "shared": 0.04159451654038515,
        "evidenceindex": 0.04159451654038515,
        "builder": 0.0831890330807703,
        "that": 0.12478354962115545,
        "normalizes": 0.04159451654038515,
        "analyzer": 0.04159451654038515,
        "signals": 0.0831890330807703,
        "names": 0.04159451654038515,
        "kinds": 0.04159451654038515,
        "key": 0.04159451654038515,
        "attributes": 0.04159451654038515,
        "retrieved": 0.04159451654038515,
        "rag": 0.04159451654038515,
        "chunks": 0.04159451654038515,
        "path": 0.04159451654038515,
        "heading": 0.04159451654038515,
        "snippet": 0.04159451654038515,
        "persist": 0.04159451654038515,
        "normalized": 0.0831890330807703,
        "evidence": 0.0831890330807703,
        "in": 0.0831890330807703,
        "run": 0.04159451654038515,
        "context": 0.04159451654038515,
        "so": 0.04159451654038515,
        "verbose": 0.04159451654038515,
        "logging": 0.04159451654038515,
        "receive": 0.04159451654038515,
        "same": 0.04159451654038515,
        "data": 0.04159451654038515,
        "extend": 0.04159451654038515,
        "prompt": 0.04159451654038515,
        "to": 0.20797258270192576,
        "annotate": 0.04159451654038515,
        "each": 0.0831890330807703,
        "render": 0.04159451654038515,
        "sectionevidence": 0.04159451654038515,
        "metadata": 0.0831890330807703,
        "describing": 0.04159451654038515,
        "which": 0.04159451654038515,
        "chunk": 0.04159451654038515,
        "ids": 0.04159451654038515,
        "were": 0.04159451654038515,
        "injected": 0.04159451654038515,
        "this": 0.04159451654038515,
        "is": 0.04159451654038515,
        "stored": 0.04159451654038515,
        "alongside": 0.04159451654038515,
        "rendered": 0.0831890330807703,
        "markdown": 0.04159451654038515,
        "avoid": 0.04159451654038515,
        "re": 0.04159451654038515,
        "parsing": 0.04159451654038515,
        "prompts": 0.04159451654038515,
        "implement": 0.04159451654038515,
        "lexical": 0.04159451654038515,
        "matching": 0.04159451654038515,
        "heuristics": 0.04159451654038515,
        "split": 0.04159451654038515,
        "sections": 0.0831890330807703,
        "into": 0.04159451654038515,
        "sentences": 0.0831890330807703,
        "ignore": 0.04159451654038515,
        "boilerplate": 0.04159451654038515,
        "phrases": 0.04159451654038515,
        "require": 0.04159451654038515,
        "remaining": 0.04159451654038515,
        "sentence": 0.04159451654038515,
        "introduces": 0.04159451654038515,
        "facts": 0.04159451654038515,
        "numbers": 0.04159451654038515,
        "detected": 0.0831890330807703,
        "entities": 0.04159451654038515,
        "verbs": 0.04159451654038515,
        "direct": 0.04159451654038515,
        "objects": 0.04159451654038515,
        "have": 0.04159451654038515,
        "at": 0.04159451654038515,
        "least": 0.04159451654038515,
        "one": 0.04159451654038515,
        "overlapping": 0.04159451654038515,
        "n": 0.04159451654038515,
        "gram": 0.04159451654038515,
        "len": 0.04159451654038515,
        "3": 0.04159451654038515,
        "flag": 0.0831890330807703,
        "unmatched": 0.04159451654038515,
        "as": 0.04159451654038515,
        "hallucinations": 0.0831890330807703,
        "when": 0.04159451654038515,
        "are": 0.04159451654038515,
        "short": 0.04159451654038515,
        "circuit": 0.04159451654038515,
        "pipeline": 0.04159451654038515,
        "emit": 0.04159451654038515,
        "fail": 0.04159451654038515,
        "safe": 0.04159451654038515,
        "stubs": 0.04159451654038515,
        "for": 0.12478354962115545,
        "offending": 0.04159451654038515,
        "reuse": 0.04159451654038515,
        "existing": 0.04159451654038515,
        "stub": 0.04159451654038515,
        "generator": 0.04159451654038515,
        "bubble": 0.04159451654038515,
        "validationerror": 0.04159451654038515,
        "back": 0.04159451654038515,
        "cli": 0.0831890330807703,
        "actionable": 0.04159451654038515,
        "hints": 0.04159451654038515,
        "yml": 0.04159451654038515,
        "updates": 0.04159451654038515,
        "introduce": 0.04159451654038515,
        "validation": 0.0831890330807703,
        "map": 0.04159451654038515,
        "no_hallucination": 0.04159451654038515,
        "boolean": 0.04159451654038515,
        "default": 0.04159451654038515,
        "true": 0.04159451654038515,
        "respect": 0.04159451654038515,
        "repo": 0.04159451654038515,
        "level": 0.04159451654038515,
        "overrides": 0.04159451654038515,
        "while": 0.04159451654038515,
        "allowing": 0.04159451654038515,
        "docgen_validation_no_hallucination": 0.04159451654038515,
        "false": 0.04159451654038515,
        "disable": 0.04159451654038515,
        "check": 0.04159451654038515,
        "ci": 0.04159451654038515,
        "emergencies": 0.04159451654038515,
        "skip": 0.04159451654038515,
        "init": 0.04159451654038515,
        "update": 0.04159451654038515,
        "regenerate": 0.04159451654038515,
        "flips": 0.04159451654038515,
        "toggle": 0.04159451654038515
      },
      "text": "a dedicated `docgen.validators` package with a lightweight `ValidationIssue` dataclass, a `Validator` protocol, and a `NoHallucinationValidator` concrete implementation. The orchestrator registers validators after section rendering and executes them before post-processing or IO. - Add a shared `EvidenceIndex` builder that normalizes analyzer signals (names, kinds, key attributes) and retrieved RAG chunks (path, heading, snippet). Persist the normalized evidence in the run context so validators and verbose logging receive the same data. - Extend the prompt builder to annotate each section render with `SectionEvidence` metadata describing which signals and chunk IDs were injected. This metadata is stored alongside the rendered markdown to avoid re-parsing prompts. - Implement lexical matching heuristics: split rendered sections into sentences, ignore boilerplate phrases, and require each remaining sentence that introduces facts (numbers, detected entities, verbs with direct objects) to have at least one overlapping n-gram (len \u22653) with the normalized evidence. Flag unmatched sentences as hallucinations. - When hallucinations are detected, short-circuit the pipeline, emit fail-safe stubs for the offending sections (reuse existing stub generator), and bubble a `ValidationError` back to the CLI with actionable hints. - **`.docgen.yml` & CLI Updates:** - Introduce a `validation` map with a `no_hallucination` boolean (default `true`). Respect repo-level overrides while allowing `DOCGEN_VALIDATION_NO_HALLUCINATION=false` to disable the check in CI emergencies. - Add a `--skip-validation` flag for `docgen init|update|regenerate` that flips the toggle for",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#2",
      "vector": {
        "cli": 0.18856180831641267,
        "updates": 0.04714045207910317,
        "introduce": 0.04714045207910317,
        "a": 0.23570226039551584,
        "validation": 0.23570226039551584,
        "map": 0.04714045207910317,
        "with": 0.09428090415820634,
        "no_hallucination": 0.04714045207910317,
        "boolean": 0.04714045207910317,
        "default": 0.04714045207910317,
        "true": 0.04714045207910317,
        "respect": 0.04714045207910317,
        "repo": 0.09428090415820634,
        "level": 0.04714045207910317,
        "overrides": 0.04714045207910317,
        "while": 0.04714045207910317,
        "allowing": 0.04714045207910317,
        "docgen_validation_no_hallucination": 0.04714045207910317,
        "false": 0.04714045207910317,
        "to": 0.1414213562373095,
        "disable": 0.04714045207910317,
        "the": 0.4242640687119285,
        "check": 0.04714045207910317,
        "in": 0.1414213562373095,
        "ci": 0.04714045207910317,
        "emergencies": 0.04714045207910317,
        "add": 0.09428090415820634,
        "skip": 0.04714045207910317,
        "flag": 0.04714045207910317,
        "for": 0.18856180831641267,
        "docgen": 0.09428090415820634,
        "init": 0.04714045207910317,
        "update": 0.04714045207910317,
        "regenerate": 0.04714045207910317,
        "that": 0.1414213562373095,
        "flips": 0.04714045207910317,
        "toggle": 0.04714045207910317,
        "current": 0.04714045207910317,
        "execution": 0.04714045207910317,
        "only": 0.04714045207910317,
        "and": 0.282842712474619,
        "is": 0.04714045207910317,
        "surfaced": 0.04714045207910317,
        "run": 0.09428090415820634,
        "summary": 0.04714045207910317,
        "encourage": 0.04714045207910317,
        "re": 0.04714045207910317,
        "enabling": 0.04714045207910317,
        "logging": 0.09428090415820634,
        "ux": 0.04714045207910317,
        "errors": 0.04714045207910317,
        "show": 0.04714045207910317,
        "one": 0.04714045207910317,
        "line": 0.04714045207910317,
        "summaries": 0.04714045207910317,
        "per": 0.04714045207910317,
        "section": 0.04714045207910317,
        "quickstart": 0.04714045207910317,
        "references": 0.04714045207910317,
        "docker": 0.04714045207910317,
        "compose": 0.04714045207910317,
        "without": 0.09428090415820634,
        "supporting": 0.04714045207910317,
        "analyzer": 0.1414213562373095,
        "signal": 0.04714045207910317,
        "verbose": 0.09428090415820634,
        "prints": 0.04714045207910317,
        "offending": 0.04714045207910317,
        "sentence": 0.04714045207910317,
        "missing": 0.04714045207910317,
        "tokens": 0.04714045207910317,
        "short": 0.04714045207910317,
        "list": 0.04714045207910317,
        "of": 0.04714045207910317,
        "nearby": 0.04714045207910317,
        "evidence": 0.09428090415820634,
        "persist": 0.09428090415820634,
        "json": 0.04714045207910317,
        "report": 0.04714045207910317,
        "under": 0.04714045207910317,
        "capturing": 0.04714045207910317,
        "validator": 0.04714045207910317,
        "status": 0.09428090415820634,
        "issues": 0.04714045207910317,
        "selected": 0.04714045207910317,
        "forensic": 0.04714045207910317,
        "review": 0.04714045207910317,
        "testing": 0.04714045207910317,
        "strategy": 0.04714045207910317,
        "unit": 0.04714045207910317,
        "tests": 0.1414213562373095,
        "cover": 0.04714045207910317,
        "positive": 0.04714045207910317,
        "negative": 0.04714045207910317,
        "cases": 0.09428090415820634,
        "nohallucinationvalidator": 0.04714045207910317,
        "including": 0.04714045207910317,
        "edge": 0.04714045207910317,
        "such": 0.04714045207910317,
        "as": 0.04714045207910317,
        "citations": 0.04714045207910317,
        "using": 0.04714045207910317,
        "synonyms": 0.04714045207910317,
        "or": 0.04714045207910317,
        "pluralization": 0.04714045207910317,
        "bullet": 0.04714045207910317,
        "lists": 0.04714045207910317,
        "code": 0.04714045207910317,
        "blocks": 0.04714045207910317,
        "integration": 0.04714045207910317,
        "full": 0.04714045207910317,
        "on": 0.04714045207910317,
        "synthetic": 0.04714045207910317,
        "repos": 0.04714045207910317,
        "stored": 0.04714045207910317,
        "data": 0.04714045207910317,
        "confirm": 0.04714045207910317,
        "grounded": 0.04714045207910317,
        "readmes": 0.04714045207910317,
        "pass": 0.04714045207910317,
        "tampered": 0.04714045207910317,
        "outputs": 0.09428090415820634,
        "fail": 0.04714045207910317,
        "fast": 0.04714045207910317,
        "stub": 0.04714045207910317,
        "replacements": 0.04714045207910317,
        "regression": 0.04714045207910317,
        "fixtures": 0.04714045207910317,
        "asserting": 0.04714045207910317,
        "disabling": 0.04714045207910317,
        "via": 0.04714045207910317,
        "config": 0.04714045207910317,
        "leaves": 0.04714045207910317,
        "runs": 0.09428090415820634,
        "untouched": 0.04714045207910317,
        "enumerates": 0.04714045207910317,
        "flagged": 0.04714045207910317,
        "sentences": 0.04714045207910317,
        "story": 0.09428090415820634,
        "s": 0.1414213562373095,
        "033": 0.04714045207910317,
        "artifact": 0.04714045207910317,
        "persistence": 0.04714045207910317,
        "done": 0.04714045207910317,
        "text": 0.04714045207910317,
        "alongside": 0.04714045207910317,
        "embeddings": 0.04714045207910317,
        "so": 0.04714045207910317,
        "repeated": 0.04714045207910317,
        "can": 0.04714045207910317,
        "reuse": 0.04714045207910317,
        "structured": 0.04714045207910317,
        "signals": 0.04714045207910317,
        "reprocessing": 0.04714045207910317,
        "unchanged": 0.04714045207910317,
        "files": 0.04714045207910317,
        "dependencies": 0.04714045207910317,
        "already": 0.04714045207910317,
        "completed": 0.04714045207910317,
        "003": 0.04714045207910317,
        "scanner": 0.04714045207910317,
        "020": 0.04714045207910317,
        "embedding": 0.04714045207910317,
        "cache": 0.04714045207910317
      },
      "text": "& CLI Updates:** - Introduce a `validation` map with a `no_hallucination` boolean (default `true`). Respect repo-level overrides while allowing `DOCGEN_VALIDATION_NO_HALLUCINATION=false` to disable the check in CI emergencies. - Add a `--skip-validation` flag for `docgen init|update|regenerate` that flips the toggle for the current execution only and is surfaced in the run summary to encourage re-enabling. - **Logging & UX:** - CLI errors show one-line summaries per section (`quickstart: references docker compose without supporting analyzer signal`). `--verbose` prints the offending sentence, the missing tokens, and a short list of nearby evidence. - Persist a `validation.json` report under `.docgen/` capturing the validator status, issues, and selected evidence for forensic review. - **Testing Strategy:** - Unit tests cover positive/negative cases for the `NoHallucinationValidator`, including edge cases such as citations using synonyms or pluralization, bullet lists, and code blocks. - Integration tests run the full CLI on synthetic repos stored in `tests/data/validation/` to confirm grounded READMEs pass and tampered outputs fail fast with stub replacements. - Add regression fixtures asserting that disabling validation via config/CLI leaves runs untouched and that verbose logging enumerates flagged sentences. ## Story S-033 \u2014 Analyzer Artifact Persistence - **Status:** \u2714 Done - **Story Text:** Persist analyzer outputs alongside embeddings so repeated runs can reuse structured signals without reprocessing unchanged files. - **Dependencies already completed:** S-003 (Repo scanner), S-020 (embedding cache",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#3",
      "vector": {
        "story": 0.19975046777556893,
        "s": 0.2996257016633534,
        "033": 0.04993761694389223,
        "analyzer": 0.19975046777556893,
        "artifact": 0.09987523388778446,
        "persistence": 0.04993761694389223,
        "status": 0.09987523388778446,
        "done": 0.09987523388778446,
        "text": 0.09987523388778446,
        "persist": 0.04993761694389223,
        "outputs": 0.09987523388778446,
        "alongside": 0.04993761694389223,
        "embeddings": 0.04993761694389223,
        "so": 0.04993761694389223,
        "repeated": 0.04993761694389223,
        "runs": 0.09987523388778446,
        "can": 0.04993761694389223,
        "reuse": 0.04993761694389223,
        "structured": 0.04993761694389223,
        "signals": 0.09987523388778446,
        "without": 0.04993761694389223,
        "reprocessing": 0.04993761694389223,
        "unchanged": 0.09987523388778446,
        "files": 0.09987523388778446,
        "dependencies": 0.09987523388778446,
        "already": 0.09987523388778446,
        "completed": 0.09987523388778446,
        "003": 0.04993761694389223,
        "repo": 0.09987523388778446,
        "scanner": 0.04993761694389223,
        "020": 0.04993761694389223,
        "embedding": 0.04993761694389223,
        "cache": 0.09987523388778446,
        "groundwork": 0.09987523388778446,
        "constraints": 0.09987523388778446,
        "store": 0.04993761694389223,
        "artifacts": 0.04993761694389223,
        "under": 0.04993761694389223,
        "docgen": 0.04993761694389223,
        "with": 0.1498128508316767,
        "versioning": 0.04993761694389223,
        "to": 0.19975046777556893,
        "handle": 0.04993761694389223,
        "schema": 0.04993761694389223,
        "changes": 0.04993761694389223,
        "refresh": 0.04993761694389223,
        "results": 0.04993761694389223,
        "incrementally": 0.04993761694389223,
        "based": 0.09987523388778446,
        "on": 0.04993761694389223,
        "file": 0.04993761694389223,
        "hashes": 0.04993761694389223,
        "and": 0.2996257016633534,
        "invalidate": 0.04993761694389223,
        "when": 0.19975046777556893,
        "analyzers": 0.04993761694389223,
        "change": 0.04993761694389223,
        "keep": 0.04993761694389223,
        "storage": 0.04993761694389223,
        "format": 0.04993761694389223,
        "json": 0.04993761694389223,
        "serializable": 0.04993761694389223,
        "human": 0.04993761694389223,
        "auditable": 0.04993761694389223,
        "non": 0.09987523388778446,
        "goals": 0.1498128508316767,
        "remote": 0.04993761694389223,
        "backends": 0.04993761694389223,
        "or": 0.04993761694389223,
        "cross": 0.04993761694389223,
        "sharing": 0.04993761694389223,
        "acceptance": 0.04993761694389223,
        "criteria": 0.04993761694389223,
        "saved": 0.04993761694389223,
        "reloaded": 0.04993761694389223,
        "during": 0.04993761694389223,
        "orchestrator": 0.04993761694389223,
        "skipping": 0.04993761694389223,
        "recomputation": 0.04993761694389223,
        "inputs": 0.04993761694389223,
        "integration": 0.09987523388778446,
        "tests": 0.04993761694389223,
        "demonstrate": 0.04993761694389223,
        "speed": 0.04993761694389223,
        "up": 0.04993761694389223,
        "by": 0.09987523388778446,
        "reusing": 0.04993761694389223,
        "cached": 0.04993761694389223,
        "correct": 0.04993761694389223,
        "invalidation": 0.04993761694389223,
        "mutate": 0.04993761694389223,
        "documentation": 0.04993761694389223,
        "in": 0.04993761694389223,
        "spec": 0.09987523388778446,
        "md": 0.04993761694389223,
        "updated": 0.04993761694389223,
        "reflect": 0.04993761694389223,
        "caching": 0.04993761694389223,
        "behavior": 0.04993761694389223,
        "034": 0.04993761694389223,
        "service": 0.1498128508316767,
        "mode": 0.09987523388778446,
        "extended": 0.04993761694389223,
        "runtimes": 0.04993761694389223,
        "deliver": 0.04993761694389223,
        "fastapi": 0.09987523388778446,
        "llama": 0.09987523388778446,
        "cpp": 0.09987523388778446,
        "runtime": 0.04993761694389223,
        "adapter": 0.09987523388778446,
        "tree": 0.09987523388778446,
        "sitter": 0.09987523388778446,
        "powered": 0.04993761694389223,
        "symbol": 0.04993761694389223,
        "extraction": 0.04993761694389223,
        "round": 0.04993761694389223,
        "out": 0.04993761694389223,
        "stretch": 0.04993761694389223,
        "010": 0.04993761694389223,
        "git": 0.04993761694389223,
        "publishing": 0.04993761694389223,
        "infrastructure": 0.04993761694389223,
        "017": 0.04993761694389223,
        "entrypoint": 0.04993761694389223,
        "detection": 0.04993761694389223,
        "must": 0.04993761694389223,
        "expose": 0.04993761694389223,
        "endpoints": 0.04993761694389223,
        "for": 0.09987523388778446,
        "init": 0.04993761694389223,
        "update": 0.04993761694389223,
        "dry": 0.04993761694389223,
        "run": 0.04993761694389223,
        "authentication": 0.04993761694389223,
        "disabled": 0.04993761694389223,
        "default": 0.04993761694389223,
        "but": 0.04993761694389223,
        "ready": 0.04993761694389223,
        "future": 0.04993761694389223,
        "hardening": 0.04993761694389223,
        "hooks": 0.04993761694389223,
        "should": 0.04993761694389223,
        "mirror": 0.04993761694389223,
        "llmrunner": 0.04993761694389223,
        "interface": 0.04993761694389223,
        "enforce": 0.04993761694389223,
        "local": 0.04993761694389223,
        "execution": 0.04993761694389223,
        "paths": 0.04993761694389223,
        "limited": 0.04993761694389223,
        "supported": 0.04993761694389223,
        "languages": 0.04993761694389223,
        "python": 0.04993761694389223,
        "java": 0.04993761694389223,
        "typescript": 0.04993761694389223,
        "graceful": 0.04993761694389223,
        "degradation": 0.04993761694389223,
        "parsers": 0.04993761694389223,
        "unavailable": 0.04993761694389223,
        "production": 0.04993761694389223
      },
      "text": "## Story S-033 \u2014 Analyzer Artifact Persistence - **Status:** \u2714 Done - **Story Text:** Persist analyzer outputs alongside embeddings so repeated runs can reuse structured signals without reprocessing unchanged files. - **Dependencies already completed:** S-003 (Repo scanner), S-020 (embedding cache groundwork) - **Constraints:** - Store artifacts under `.docgen/` with versioning to handle schema changes. - Refresh analyzer results incrementally based on file hashes and invalidate when analyzers change. - Keep storage format JSON-serializable and human-auditable. - **Non-Goals:** Remote cache backends or cross-repo sharing. - **Acceptance Criteria:** - Analyzer outputs saved and reloaded during orchestrator runs, skipping recomputation when inputs unchanged. - Integration tests demonstrate speed-up by reusing cached signals and correct invalidation when files mutate. - Documentation in `spec/spec.md` updated to reflect artifact caching behavior. ## Story S-034 \u2014 Service Mode & Extended Runtimes - **Status:** \u2714 Done - **Story Text:** Deliver FastAPI-based service mode, llama.cpp runtime adapter, and tree-sitter powered symbol extraction to round out stretch goals. - **Dependencies already completed:** S-010 (Git publishing infrastructure), S-017 (entrypoint detection groundwork) - **Constraints:** - FastAPI service must expose endpoints for init/update/dry-run with authentication disabled by default but ready for future hardening hooks. - llama.cpp adapter should mirror `LLMRunner` interface and enforce local execution paths. - Tree-sitter integration limited to supported languages (Python/Java/TypeScript) with graceful degradation when parsers unavailable. - **Non-Goals:** Production",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#4",
      "vector": {
        "with": 0.21594472522460836,
        "authentication": 0.07198157507486945,
        "disabled": 0.07198157507486945,
        "by": 0.1439631501497389,
        "default": 0.07198157507486945,
        "but": 0.07198157507486945,
        "ready": 0.07198157507486945,
        "for": 0.1439631501497389,
        "future": 0.07198157507486945,
        "hardening": 0.07198157507486945,
        "hooks": 0.07198157507486945,
        "llama": 0.1439631501497389,
        "cpp": 0.1439631501497389,
        "adapter": 0.1439631501497389,
        "should": 0.07198157507486945,
        "mirror": 0.07198157507486945,
        "llmrunner": 0.07198157507486945,
        "interface": 0.07198157507486945,
        "and": 0.4318894504492167,
        "enforce": 0.07198157507486945,
        "local": 0.07198157507486945,
        "execution": 0.07198157507486945,
        "paths": 0.07198157507486945,
        "tree": 0.1439631501497389,
        "sitter": 0.1439631501497389,
        "integration": 0.07198157507486945,
        "limited": 0.07198157507486945,
        "to": 0.1439631501497389,
        "supported": 0.07198157507486945,
        "languages": 0.07198157507486945,
        "python": 0.07198157507486945,
        "java": 0.07198157507486945,
        "typescript": 0.07198157507486945,
        "graceful": 0.07198157507486945,
        "degradation": 0.07198157507486945,
        "when": 0.07198157507486945,
        "parsers": 0.07198157507486945,
        "unavailable": 0.07198157507486945,
        "non": 0.07198157507486945,
        "goals": 0.1439631501497389,
        "production": 0.07198157507486945,
        "deployment": 0.07198157507486945,
        "tooling": 0.07198157507486945,
        "or": 0.07198157507486945,
        "advanced": 0.07198157507486945,
        "queueing": 0.07198157507486945,
        "acceptance": 0.07198157507486945,
        "criteria": 0.07198157507486945,
        "service": 0.1439631501497389,
        "mode": 0.07198157507486945,
        "passes": 0.07198157507486945,
        "end": 0.1439631501497389,
        "tests": 0.21594472522460836,
        "invoking": 0.07198157507486945,
        "fastapi": 0.07198157507486945,
        "routes": 0.07198157507486945,
        "reusing": 0.07198157507486945,
        "orchestrator": 0.07198157507486945,
        "logic": 0.07198157507486945,
        "covered": 0.07198157507486945,
        "unit": 0.07198157507486945,
        "simulating": 0.07198157507486945,
        "cli": 0.07198157507486945,
        "shared": 0.07198157507486945,
        "configuration": 0.07198157507486945,
        "analyzer": 0.07198157507486945,
        "enriches": 0.07198157507486945,
        "signals": 0.07198157507486945,
        "symbol": 0.07198157507486945,
        "metadata": 0.07198157507486945,
        "associated": 0.07198157507486945,
        "validate": 0.07198157507486945,
        "extraction": 0.07198157507486945,
        "on": 0.07198157507486945,
        "fixtures": 0.07198157507486945,
        "updated": 0.07198157507486945,
        "documentation": 0.07198157507486945,
        "usage": 0.07198157507486945,
        "extended": 0.07198157507486945,
        "runtimes": 0.07198157507486945,
        "in": 0.1439631501497389,
        "docs": 0.07198157507486945,
        "spec": 0.1439631501497389,
        "md": 0.07198157507486945,
        "next": 0.07198157507486945,
        "actions": 0.07198157507486945,
        "execute": 0.07198157507486945,
        "the": 0.07198157507486945,
        "stories": 0.07198157507486945,
        "above": 0.07198157507486945,
        "sequentially": 0.07198157507486945,
        "upon": 0.07198157507486945,
        "completion": 0.07198157507486945,
        "reassess": 0.07198157507486945,
        "remaining": 0.07198157507486945,
        "stretch": 0.07198157507486945,
        "knowledge": 0.07198157507486945,
        "graph": 0.07198157507486945,
        "secret": 0.07198157507486945,
        "scanning": 0.07198157507486945,
        "if": 0.07198157507486945,
        "still": 0.07198157507486945,
        "scope": 0.07198157507486945
      },
      "text": "with authentication disabled by default but ready for future hardening hooks. - llama.cpp adapter should mirror `LLMRunner` interface and enforce local execution paths. - Tree-sitter integration limited to supported languages (Python/Java/TypeScript) with graceful degradation when parsers unavailable. - **Non-Goals:** Production deployment tooling or advanced queueing. - **Acceptance Criteria:** - Service mode passes end-to-end tests invoking FastAPI routes and reusing orchestrator logic. - llama.cpp adapter covered by unit tests simulating CLI and shared configuration. - Tree-sitter analyzer enriches signals with symbol metadata and associated tests validate extraction on fixtures. - Updated documentation for service usage and extended runtimes in `docs/` and `spec/spec.md`. --- **Next Actions:** Execute the stories above sequentially; upon completion reassess remaining stretch goals (knowledge graph, secret scanning) if still in scope.",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/prompt_template.md#0",
      "vector": {
        "below": 0.09417632186960222,
        "is": 0.09417632186960222,
        "a": 0.18835264373920443,
        "drop": 0.04708816093480111,
        "in": 0.18835264373920443,
        "prompt": 0.09417632186960222,
        "template": 0.09417632186960222,
        "you": 0.14126448280440332,
        "can": 0.04708816093480111,
        "reuse": 0.04708816093480111,
        "for": 0.18835264373920443,
        "each": 0.04708816093480111,
        "single": 0.09417632186960222,
        "story": 0.5179697702828122,
        "s": 0.18835264373920443,
        "001": 0.09417632186960222,
        "044": 0.04708816093480111,
        "followed": 0.04708816093480111,
        "by": 0.04708816093480111,
        "two": 0.04708816093480111,
        "filled": 0.04708816093480111,
        "examples": 0.04708816093480111,
        "and": 0.18835264373920443,
        "016": 0.04708816093480111,
        "one": 0.04708816093480111,
        "at": 0.09417632186960222,
        "time": 0.04708816093480111,
        "implementation": 0.04708816093480111,
        "use": 0.09417632186960222,
        "this": 0.09417632186960222,
        "exact": 0.04708816093480111,
        "structure": 0.04708816093480111,
        "every": 0.04708816093480111,
        "replace": 0.04708816093480111,
        "placeholders": 0.04708816093480111,
        "with": 0.04708816093480111,
        "your": 0.04708816093480111,
        "specifics": 0.04708816093480111,
        "before": 0.04708816093480111,
        "sending": 0.04708816093480111,
        "system": 0.04708816093480111,
        "role": 0.04708816093480111,
        "are": 0.04708816093480111,
        "principal": 0.04708816093480111,
        "python": 0.14126448280440332,
        "engineer": 0.04708816093480111,
        "implementing": 0.04708816093480111,
        "tightly": 0.04708816093480111,
        "scoped": 0.04708816093480111,
        "an": 0.04708816093480111,
        "existing": 0.04708816093480111,
        "repository": 0.04708816093480111,
        "must": 0.04708816093480111,
        "implement": 0.04708816093480111,
        "only": 0.04708816093480111,
        "the": 0.14126448280440332,
        "no": 0.14126448280440332,
        "scope": 0.04708816093480111,
        "drift": 0.04708816093480111,
        "future": 0.04708816093480111,
        "stories": 0.04708816093480111,
        "produce": 0.04708816093480111,
        "production": 0.04708816093480111,
        "grade": 0.04708816093480111,
        "cross": 0.04708816093480111,
        "platform": 0.04708816093480111,
        "code": 0.09417632186960222,
        "windows": 0.04708816093480111,
        "macos": 0.04708816093480111,
        "3": 0.09417632186960222,
        "11": 0.09417632186960222,
        "follow": 0.04708816093480111,
        "repo": 0.04708816093480111,
        "conventions": 0.04708816093480111,
        "poetry": 0.09417632186960222,
        "ruff": 0.09417632186960222,
        "black": 0.09417632186960222,
        "mypy": 0.09417632186960222,
        "strict": 0.09417632186960222,
        "pytest": 0.14126448280440332,
        "logging": 0.04708816093480111,
        "prints": 0.04708816093480111,
        "library": 0.04708816093480111,
        "type": 0.04708816093480111,
        "hints": 0.04708816093480111,
        "everywhere": 0.04708816093480111,
        "keep": 0.04708816093480111,
        "audio": 0.09417632186960222,
        "callbacks": 0.04708816093480111,
        "non": 0.09417632186960222,
        "blocking": 0.04708816093480111,
        "prefer": 0.04708816093480111,
        "ring": 0.04708816093480111,
        "buffers": 0.04708816093480111,
        "preallocated": 0.04708816093480111,
        "arrays": 0.04708816093480111,
        "avoid": 0.04708816093480111,
        "os": 0.04708816093480111,
        "specific": 0.04708816093480111,
        "imports": 0.04708816093480111,
        "module": 0.04708816093480111,
        "top": 0.04708816093480111,
        "level": 0.04708816093480111,
        "when": 0.04708816093480111,
        "something": 0.04708816093480111,
        "ambiguous": 0.04708816093480111,
        "make": 0.04708816093480111,
        "smallest": 0.04708816093480111,
        "reasonable": 0.04708816093480111,
        "assumption": 0.04708816093480111,
        "state": 0.04708816093480111,
        "it": 0.04708816093480111,
        "assumptions": 0.04708816093480111,
        "section": 0.04708816093480111,
        "proceed": 0.04708816093480111,
        "context": 0.04708816093480111,
        "id": 0.04708816093480111,
        "story_id": 0.04708816093480111,
        "title": 0.04708816093480111,
        "story_title": 0.04708816093480111,
        "text": 0.04708816093480111,
        "story_text": 0.04708816093480111,
        "dependencies": 0.04708816093480111,
        "already": 0.04708816093480111,
        "completed": 0.04708816093480111,
        "dependencies_list_or_none": 0.04708816093480111,
        "constraints": 0.04708816093480111,
        "from": 0.04708816093480111,
        "prd": 0.04708816093480111,
        "backlog": 0.04708816093480111,
        "key_constraints": 0.04708816093480111,
        "goals": 0.04708816093480111,
        "non_goals": 0.04708816093480111,
        "environment": 0.04708816093480111,
        "tooling": 0.04708816093480111,
        "fixed": 0.04708816093480111,
        "package": 0.04708816093480111,
        "manager": 0.04708816093480111,
        "linters": 0.04708816093480111,
        "formatters": 0.04708816093480111,
        "static": 0.04708816093480111,
        "typing": 0.04708816093480111,
        "tests": 0.04708816093480111,
        "cov": 0.04708816093480111,
        "ui": 0.04708816093480111,
        "pyside6": 0.04708816093480111,
        "if": 0.09417632186960222,
        "relevant": 0.09417632186960222,
        "to": 0.04708816093480111,
        "i": 0.04708816093480111,
        "o": 0.04708816093480111,
        "sounddevice": 0.04708816093480111,
        "portaudio": 0.04708816093480111
      },
      "text": "Below is a **drop\u2011in prompt template** you can reuse for **each single story (S\u2011001 \u2192 S\u2011044)**, followed by **two filled examples** (for S\u2011001 and S\u2011016). --- ## \ud83d\udd27 One\u2011Story\u2011At\u2011A\u2011Time Implementation Prompt (Template) > **Use this exact structure for every story.** Replace `{{\u2026}}` placeholders with your specifics before sending. --- **SYSTEM / ROLE** You are a **Principal Python engineer** implementing a single, tightly scoped story in an existing repository. You must: * Implement **only the story below** (no scope drift, no future stories). * Produce production\u2011grade, cross\u2011platform code (Windows/macOS), Python 3.11. * Follow repo conventions: Poetry, ruff, black, mypy (strict), pytest. * Use logging (no prints) in library code, and type hints everywhere. * Keep audio callbacks non\u2011blocking; prefer ring buffers and preallocated arrays. * Avoid OS\u2011specific imports at module top level. * When something is ambiguous, **make the smallest reasonable assumption**, state it in the *Assumptions* section, and proceed. --- ### Story Context * **Story ID:** {{STORY_ID}} * **Story Title:** {{STORY_TITLE}} * **Story Text:** {{STORY_TEXT}} * **Dependencies already completed:** {{DEPENDENCIES_LIST_OR_NONE}} * **Constraints from PRD/backlog:** {{KEY_CONSTRAINTS}} * **Non\u2011Goals for this story:** {{NON_GOALS}} ### Environment & Tooling (fixed) * **Python:** 3.11 * **Package manager:** Poetry * **Linters/formatters:** ruff, black * **Static typing:** mypy (strict) * **Tests:** pytest + pytest\u2011cov * **UI:** PySide6 (if relevant to story) * **Audio I/O:** sounddevice/PortAudio (if relevant)",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#1",
      "vector": {
        "non_goals": 0.05581455721859476,
        "environment": 0.05581455721859476,
        "tooling": 0.05581455721859476,
        "fixed": 0.05581455721859476,
        "python": 0.16744367165578428,
        "3": 0.11162911443718952,
        "11": 0.05581455721859476,
        "package": 0.05581455721859476,
        "manager": 0.05581455721859476,
        "poetry": 0.05581455721859476,
        "linters": 0.05581455721859476,
        "formatters": 0.05581455721859476,
        "ruff": 0.11162911443718952,
        "black": 0.11162911443718952,
        "static": 0.05581455721859476,
        "typing": 0.05581455721859476,
        "mypy": 0.11162911443718952,
        "strict": 0.05581455721859476,
        "tests": 0.11162911443718952,
        "pytest": 0.16744367165578428,
        "cov": 0.05581455721859476,
        "ui": 0.05581455721859476,
        "pyside6": 0.05581455721859476,
        "if": 0.2790727860929738,
        "relevant": 0.2790727860929738,
        "to": 0.16744367165578428,
        "story": 0.05581455721859476,
        "audio": 0.05581455721859476,
        "i": 0.11162911443718952,
        "o": 0.05581455721859476,
        "sounddevice": 0.05581455721859476,
        "portaudio": 0.05581455721859476,
        "ml": 0.05581455721859476,
        "runtime": 0.05581455721859476,
        "onnxruntime": 0.05581455721859476,
        "current": 0.05581455721859476,
        "repository": 0.05581455721859476,
        "snapshot": 0.05581455721859476,
        "paste": 0.11162911443718952,
        "fresh": 0.05581455721859476,
        "snapshots": 0.05581455721859476,
        "so": 0.05581455721859476,
        "the": 0.11162911443718952,
        "model": 0.05581455721859476,
        "does": 0.05581455721859476,
        "not": 0.05581455721859476,
        "hallucinate": 0.05581455721859476,
        "keep": 0.05581455721859476,
        "these": 0.05581455721859476,
        "short": 0.11162911443718952,
        "but": 0.05581455721859476,
        "sufficient": 0.05581455721859476,
        "root": 0.05581455721859476,
        "tree": 0.11162911443718952,
        "a": 0.05581455721859476,
        "git": 0.11162911443718952,
        "or": 0.11162911443718952,
        "ls": 0.05581455721859476,
        "files": 0.22325822887437904,
        "repo_tree": 0.05581455721859476,
        "key": 0.05581455721859476,
        "only": 0.05581455721859476,
        "sections": 0.11162911443718952,
        "path": 0.11162911443718952,
        "file1": 0.05581455721859476,
        "file1_relevant_snippet": 0.05581455721859476,
        "file2": 0.05581455721859476,
        "file2_relevant_snippet": 0.05581455721859476,
        "pinned": 0.05581455721859476,
        "pyproject": 0.05581455721859476,
        "toml": 0.11162911443718952,
        "parts": 0.05581455721859476,
        "pyproject_snippet": 0.05581455721859476,
        "acceptance": 0.05581455721859476,
        "criteria": 0.05581455721859476,
        "definition": 0.05581455721859476,
        "of": 0.16744367165578428,
        "done": 0.05581455721859476,
        "functional": 0.05581455721859476,
        "functional_doc": 0.05581455721859476,
        "quality": 0.05581455721859476,
        "pass": 0.05581455721859476,
        "passes": 0.05581455721859476,
        "with": 0.11162911443718952,
        "90": 0.05581455721859476,
        "coverage": 0.05581455721859476,
        "for": 0.05581455721859476,
        "new": 0.05581455721859476,
        "code": 0.05581455721859476,
        "cross": 0.05581455721859476,
        "platform": 0.05581455721859476,
        "no": 0.11162911443718952,
        "os": 0.05581455721859476,
        "specific": 0.05581455721859476,
        "breakage": 0.05581455721859476,
        "guarded": 0.05581455721859476,
        "imports": 0.05581455721859476,
        "where": 0.05581455721859476,
        "needed": 0.05581455721859476,
        "performance": 0.05581455721859476,
        "applicable": 0.05581455721859476,
        "perf_requirements": 0.05581455721859476,
        "docs": 0.11162911443718952,
        "inline": 0.05581455721859476,
        "docstrings": 0.05581455721859476,
        "readme": 0.05581455721859476,
        "module": 0.05581455721859476,
        "level": 0.05581455721859476,
        "updated": 0.05581455721859476,
        "user": 0.05581455721859476,
        "facing": 0.05581455721859476,
        "unrelated": 0.05581455721859476,
        "refactors": 0.05581455721859476,
        "minimal": 0.05581455721859476,
        "diff": 0.05581455721859476,
        "outside": 0.05581455721859476,
        "touched": 0.05581455721859476,
        "scope": 0.05581455721859476,
        "deliverables": 0.05581455721859476,
        "output": 0.05581455721859476,
        "contract": 0.05581455721859476,
        "return": 0.05581455721859476,
        "following": 0.05581455721859476,
        "in": 0.05581455721859476,
        "order": 0.05581455721859476,
        "exact": 0.11162911443718952,
        "headings": 0.05581455721859476,
        "1": 0.05581455721859476,
        "assumptions": 0.11162911443718952,
        "decisions": 0.05581455721859476,
        "bullet": 0.05581455721859476,
        "list": 0.05581455721859476,
        "any": 0.05581455721859476,
        "reasonable": 0.05581455721859476,
        "you": 0.11162911443718952,
        "made": 0.05581455721859476,
        "2": 0.05581455721859476,
        "planned": 0.05581455721859476,
        "changes": 0.05581455721859476,
        "tl": 0.05581455721859476,
        "dr": 0.05581455721859476,
        "summary": 0.05581455721859476,
        "what": 0.05581455721859476,
        "will": 0.05581455721859476,
        "add": 0.05581455721859476,
        "modify": 0.05581455721859476,
        "and": 0.11162911443718952,
        "why": 0.05581455721859476,
        "full": 0.05581455721859476,
        "test": 0.05581455721859476,
        "covering": 0.05581455721859476,
        "success": 0.05581455721859476,
        "edge": 0.05581455721859476,
        "cases": 0.05581455721859476,
        "error": 0.05581455721859476,
        "paths": 0.05581455721859476,
        "4": 0.05581455721859476,
        "validation": 0.05581455721859476,
        "steps": 0.05581455721859476,
        "local": 0.05581455721859476
      },
      "text": "{{NON_GOALS}} ### Environment & Tooling (fixed) * **Python:** 3.11 * **Package manager:** Poetry * **Linters/formatters:** ruff, black * **Static typing:** mypy (strict) * **Tests:** pytest + pytest\u2011cov * **UI:** PySide6 (if relevant to story) * **Audio I/O:** sounddevice/PortAudio (if relevant) * **ML runtime:** onnxruntime (if relevant) ### Current Repository Snapshot > Paste fresh snapshots so the model does not hallucinate. Keep these short but sufficient. * **Root tree (`tree -a -I .git` or `git ls-files`):** ``` {{REPO_TREE}} ``` * **Key files (paste only relevant sections):** * `{{PATH/TO/FILE1}}` ```python {{FILE1_RELEVANT_SNIPPET}} ``` * `{{PATH/TO/FILE2}}` ```python {{FILE2_RELEVANT_SNIPPET}} ``` * **Pinned pyproject.toml (relevant parts):** ```toml {{PYPROJECT_SNIPPET}} ``` ### Acceptance Criteria (Definition of Done) * Functional: {{FUNCTIONAL_DOC}} * Quality: **ruff/black/mypy** pass; **pytest** passes with **\u2265 90%** coverage for new code. * Cross\u2011platform: No OS\u2011specific breakage; guarded imports where needed. * Performance (if applicable): {{PERF_REQUIREMENTS}} * Docs: Inline docstrings; README or module\u2011level docs updated if user\u2011facing. * No unrelated refactors; minimal diff outside touched scope. ### Deliverables \u2014 **Output Contract** Return the following sections **in order**, with exact headings: 1. **Assumptions & Decisions** \u2013 bullet list of any reasonable assumptions you made. 2. **Planned Changes (TL;DR)** \u2013 short summary of what files you will add/modify and why. 3. **Tests** \u2013 full test files covering success, edge cases, and error paths. 4. **Validation Steps (Local)** \u2013 exact",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#2",
      "vector": {
        "of": 0.1487044791289829,
        "any": 0.04956815970966096,
        "reasonable": 0.04956815970966096,
        "assumptions": 0.04956815970966096,
        "you": 0.09913631941932192,
        "made": 0.04956815970966096,
        "2": 0.04956815970966096,
        "planned": 0.04956815970966096,
        "changes": 0.04956815970966096,
        "tl": 0.04956815970966096,
        "dr": 0.04956815970966096,
        "short": 0.04956815970966096,
        "summary": 0.04956815970966096,
        "what": 0.04956815970966096,
        "files": 0.1487044791289829,
        "will": 0.04956815970966096,
        "add": 0.04956815970966096,
        "modify": 0.04956815970966096,
        "and": 0.3965452776772877,
        "why": 0.04956815970966096,
        "3": 0.04956815970966096,
        "tests": 0.04956815970966096,
        "full": 0.04956815970966096,
        "test": 0.09913631941932192,
        "covering": 0.04956815970966096,
        "success": 0.04956815970966096,
        "edge": 0.04956815970966096,
        "cases": 0.04956815970966096,
        "error": 0.04956815970966096,
        "paths": 0.04956815970966096,
        "4": 0.04956815970966096,
        "validation": 0.04956815970966096,
        "steps": 0.04956815970966096,
        "local": 0.04956815970966096,
        "exact": 0.04956815970966096,
        "commands": 0.04956815970966096,
        "to": 0.09913631941932192,
        "run": 0.04956815970966096,
        "poetry": 0.04956815970966096,
        "install": 0.04956815970966096,
        "lint": 0.04956815970966096,
        "type": 0.04956815970966096,
        "expected": 0.04956815970966096,
        "outputs": 0.04956815970966096,
        "5": 0.04956815970966096,
        "conventional": 0.04956815970966096,
        "commit": 0.09913631941932192,
        "message": 0.09913631941932192,
        "a": 0.24784079854830482,
        "single": 0.04956815970966096,
        "with": 0.09913631941932192,
        "the": 0.24784079854830482,
        "story": 0.24784079854830482,
        "description": 0.04956815970966096,
        "ex": 0.04956815970966096,
        "s": 0.1487044791289829,
        "001": 0.1487044791289829,
        "implemented": 0.04956815970966096,
        "get": 0.04956815970966096,
        "customers": 0.04956815970966096,
        "endpoint": 0.04956815970966096,
        "implementation": 0.04956815970966096,
        "hints": 0.04956815970966096,
        "if": 0.1487044791289829,
        "helpful": 0.04956815970966096,
        "keep": 0.04956815970966096,
        "per": 0.04956815970966096,
        "frame": 0.04956815970966096,
        "allocations": 0.04956815970966096,
        "near": 0.04956815970966096,
        "zero": 0.04956815970966096,
        "in": 0.19827263883864385,
        "audio": 0.04956815970966096,
        "callbacks": 0.04956815970966096,
        "use": 0.04956815970966096,
        "dependency": 0.04956815970966096,
        "inversion": 0.04956815970966096,
        "define": 0.04956815970966096,
        "clear": 0.04956815970966096,
        "interfaces": 0.04956815970966096,
        "core": 0.1487044791289829,
        "or": 0.1487044791289829,
        "ml": 0.04956815970966096,
        "where": 0.04956815970966096,
        "specified": 0.04956815970966096,
        "backlog": 0.04956815970966096,
        "an": 0.04956815970966096,
        "external": 0.04956815970966096,
        "binary": 0.04956815970966096,
        "model": 0.04956815970966096,
        "is": 0.04956815970966096,
        "out": 0.04956815970966096,
        "scope": 0.04956815970966096,
        "for": 0.04956815970966096,
        "this": 0.09913631941932192,
        "provide": 0.04956815970966096,
        "deterministic": 0.04956815970966096,
        "stub": 0.04956815970966096,
        "todo": 0.04956815970966096,
        "feature": 0.04956815970966096,
        "flag": 0.04956815970966096,
        "important": 0.04956815970966096,
        "guardrails": 0.04956815970966096,
        "do": 0.1487044791289829,
        "not": 0.1487044791289829,
        "implement": 0.04956815970966096,
        "future": 0.04956815970966096,
        "stories": 0.04956815970966096,
        "introduce": 0.04956815970966096,
        "new": 0.04956815970966096,
        "dependencies": 0.04956815970966096,
        "without": 0.04956815970966096,
        "updating": 0.04956815970966096,
        "pyproject": 0.04956815970966096,
        "toml": 0.04956815970966096,
        "justifying": 0.04956815970966096,
        "them": 0.04956815970966096,
        "change": 0.04956815970966096,
        "licensing": 0.04956815970966096,
        "repo": 0.04956815970966096,
        "name": 0.04956815970966096,
        "ci": 0.04956815970966096,
        "workflows": 0.04956815970966096,
        "unless": 0.04956815970966096,
        "explicitly": 0.04956815970966096,
        "requested": 0.04956815970966096,
        "output": 0.04956815970966096,
        "would": 0.04956815970966096,
        "exceed": 0.04956815970966096,
        "limits": 0.04956815970966096,
        "split": 0.04956815970966096,
        "patch": 0.04956815970966096,
        "file": 0.04956815970966096,
        "contents": 0.04956815970966096,
        "by": 0.04956815970966096,
        "directory": 0.04956815970966096,
        "but": 0.04956815970966096,
        "still": 0.04956815970966096,
        "include": 0.04956815970966096,
        "all": 0.04956815970966096,
        "required": 0.04956815970966096,
        "example": 0.04956815970966096,
        "instantiation": 0.04956815970966096,
        "1": 0.04956815970966096,
        "initialize": 0.09913631941932192,
        "repository": 0.09913631941932192,
        "metadata": 0.04956815970966096,
        "copy": 0.04956815970966096,
        "adjust": 0.04956815970966096,
        "paste": 0.04956815970966096,
        "following": 0.04956815970966096,
        "as": 0.04956815970966096,
        "real": 0.04956815970966096,
        "prompt": 0.04956815970966096,
        "your": 0.04956815970966096,
        "llm": 0.04956815970966096,
        "id": 0.04956815970966096,
        "title": 0.04956815970966096
      },
      "text": "of any reasonable assumptions you made. 2. **Planned Changes (TL;DR)** \u2013 short summary of what files you will add/modify and why. 3. **Tests** \u2013 full test files covering success, edge cases, and error paths. 4. **Validation Steps (Local)** \u2013 exact commands to run (Poetry install, lint, type, test) and expected outputs. 5. **Conventional Commit Message** \u2013 a single commit with the story and a description, ex: \"S-001: Implemented the GET customers endpoint\" ### Implementation Hints (if helpful) * Keep per\u2011frame allocations near zero in audio callbacks. * Use dependency inversion: define clear interfaces in `core/` or `ml/` where specified in the backlog. * If an external binary or model is out of scope for this story, provide a deterministic stub with TODO and a feature flag. ### Important Guardrails * **Do not** implement future stories. * **Do not** introduce new dependencies without updating `pyproject.toml` and justifying them. * **Do not** change licensing, repo name, or CI workflows unless explicitly requested in this story. * If output would exceed message limits, **split the Patch and File Contents by directory** but still include all required files. --- ## \u2705 Example Instantiation #1 \u2014 S\u2011001 (Initialize repository & core metadata) > Copy, adjust, and paste the following as a real prompt to your LLM. **Story ID:** S\u2011001 **Story Title:** Initialize repository & core",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#3",
      "vector": {
        "include": 0.09611386626644254,
        "all": 0.04805693313322127,
        "required": 0.04805693313322127,
        "files": 0.04805693313322127,
        "example": 0.09611386626644254,
        "instantiation": 0.09611386626644254,
        "1": 0.09611386626644254,
        "s": 0.19222773253288508,
        "001": 0.09611386626644254,
        "initialize": 0.09611386626644254,
        "repository": 0.14417079939966382,
        "core": 0.09611386626644254,
        "metadata": 0.14417079939966382,
        "copy": 0.04805693313322127,
        "adjust": 0.04805693313322127,
        "and": 0.09611386626644254,
        "paste": 0.09611386626644254,
        "the": 0.19222773253288508,
        "following": 0.04805693313322127,
        "as": 0.09611386626644254,
        "a": 0.04805693313322127,
        "real": 0.04805693313322127,
        "prompt": 0.04805693313322127,
        "to": 0.04805693313322127,
        "your": 0.04805693313322127,
        "llm": 0.04805693313322127,
        "story": 0.28834159879932764,
        "id": 0.09611386626644254,
        "title": 0.09611386626644254,
        "text": 0.09611386626644254,
        "create": 0.04805693313322127,
        "poetry": 0.19222773253288508,
        "project": 0.09611386626644254,
        "voice": 0.09611386626644254,
        "xform": 0.09611386626644254,
        "add": 0.14417079939966382,
        "license": 0.04805693313322127,
        "apache": 0.04805693313322127,
        "2": 0.09611386626644254,
        "0": 0.14417079939966382,
        "readme": 0.14417079939966382,
        "with": 0.04805693313322127,
        "purpose": 0.09611386626644254,
        "install": 0.14417079939966382,
        "quickstart": 0.09611386626644254,
        "contributing": 0.04805693313322127,
        "editorconfig": 0.04805693313322127,
        "gitattributes": 0.04805693313322127,
        "gitignore": 0.09611386626644254,
        "pyproject": 0.09611386626644254,
        "toml": 0.09611386626644254,
        "python": 0.24028466566610635,
        "3": 0.14417079939966382,
        "11": 0.14417079939966382,
        "dependencies": 0.04805693313322127,
        "already": 0.04805693313322127,
        "completed": 0.04805693313322127,
        "none": 0.04805693313322127,
        "constraints": 0.04805693313322127,
        "use": 0.09611386626644254,
        "repo": 0.04805693313322127,
        "name": 0.09611386626644254,
        "keep": 0.09611386626644254,
        "docs": 0.04805693313322127,
        "concise": 0.04805693313322127,
        "but": 0.04805693313322127,
        "actionable": 0.04805693313322127,
        "non": 0.04805693313322127,
        "goals": 0.04805693313322127,
        "no": 0.14417079939966382,
        "code": 0.04805693313322127,
        "beyond": 0.04805693313322127,
        "scaffolding": 0.04805693313322127,
        "ci": 0.09611386626644254,
        "package": 0.04805693313322127,
        "layout": 0.04805693313322127,
        "yet": 0.09611386626644254,
        "current": 0.04805693313322127,
        "snapshot": 0.04805693313322127,
        "empty": 0.09611386626644254,
        "directory": 0.04805693313322127,
        "acceptance": 0.04805693313322127,
        "criteria": 0.04805693313322127,
        "definition": 0.04805693313322127,
        "of": 0.04805693313322127,
        "done": 0.04805693313322127,
        "succeeds": 0.04805693313322127,
        "on": 0.04805693313322127,
        "macos": 0.09611386626644254,
        "windows": 0.09611386626644254,
        "md": 0.04805693313322127,
        "includes": 0.04805693313322127,
        "instructions": 0.04805693313322127,
        "placeholder": 0.04805693313322127,
        "running": 0.04805693313322127,
        "run": 0.04805693313322127,
        "v": 0.04805693313322127,
        "prints": 0.04805693313322127,
        "x": 0.04805693313322127,
        "deliverables": 0.09611386626644254,
        "output": 0.04805693313322127,
        "contract": 0.04805693313322127,
        "then": 0.04805693313322127,
        "list": 0.04805693313322127,
        "from": 0.04805693313322127,
        "template": 0.04805693313322127,
        "implementation": 0.04805693313322127,
        "hints": 0.04805693313322127,
        "standard": 0.04805693313322127,
        "for": 0.04805693313322127,
        "version": 0.04805693313322127,
        "authors": 0.04805693313322127,
        "in": 0.04805693313322127,
        "important": 0.04805693313322127,
        "guardrails": 0.04805693313322127,
        "do": 0.04805693313322127,
        "not": 0.04805693313322127,
        "or": 0.04805693313322127,
        "tests": 0.04805693313322127,
        "succinct": 0.04805693313322127,
        "section": 0.04805693313322127,
        "headers": 0.04805693313322127,
        "placeholders": 0.04805693313322127,
        "016": 0.09611386626644254,
        "model": 0.09611386626644254,
        "registry": 0.09611386626644254,
        "provider": 0.09611386626644254,
        "detection": 0.09611386626644254,
        "implement": 0.04805693313322127,
        "ml": 0.04805693313322127,
        "runtime": 0.14417079939966382,
        "onnx_loader": 0.04805693313322127,
        "py": 0.04805693313322127,
        "that": 0.04805693313322127,
        "chooses": 0.04805693313322127,
        "best": 0.04805693313322127,
        "onnx": 0.04805693313322127,
        "ep": 0.04805693313322127,
        "at": 0.04805693313322127,
        "tensorrt": 0.04805693313322127,
        "directml": 0.04805693313322127
      },
      "text": "include all required files. --- ## \u2705 Example Instantiation #1 \u2014 S\u2011001 (Initialize repository & core metadata) > Copy, adjust, and paste the following as a real prompt to your LLM. **Story ID:** S\u2011001 **Story Title:** Initialize repository & core metadata **Story Text:** Create Poetry project `voice-xform`; add LICENSE (Apache\u20112.0), README with purpose/install/quickstart, CONTRIBUTING, .editorconfig, .gitattributes, .gitignore, pyproject.toml (Python 3.11). **Dependencies already completed:** none **Constraints:** Use Poetry; repo name `voice-xform`; Python 3.11; keep docs concise but actionable. **Non\u2011Goals:** No code beyond scaffolding; no CI; no package layout yet. **Current Repository Snapshot** *(empty directory)* ``` (Empty) ``` **Acceptance Criteria (Definition of Done)** * `poetry install` succeeds on macOS & Windows. * `README.md` includes purpose, install instructions, and placeholder quickstart. * Running `poetry run python -V` prints Python 3.11.x. **Deliverables \u2014 Output Contract** (then paste the **Deliverables** list from the template) **Implementation Hints** * Use standard `.gitignore` for Python + macOS + Windows. * Include project metadata (name, version `0.1.0`, authors) in `pyproject.toml`. **Important Guardrails** * Do not add CI or tests yet. * Keep README succinct; add section headers as placeholders. --- ## \u2705 Example Instantiation #2 \u2014 S\u2011016 (Model registry & provider detection) **Story ID:** S\u2011016 **Story Title:** Model registry & provider detection **Story Text:** Implement `ml/runtime/onnx_loader.py` that chooses the best ONNX Runtime EP at runtime (TensorRT > DirectML >",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#4",
      "vector": {
        "example": 0.045267873021259265,
        "instantiation": 0.045267873021259265,
        "2": 0.045267873021259265,
        "s": 0.22633936510629632,
        "016": 0.09053574604251853,
        "model": 0.18107149208503706,
        "registry": 0.18107149208503706,
        "provider": 0.18107149208503706,
        "detection": 0.09053574604251853,
        "story": 0.1358036190637778,
        "id": 0.045267873021259265,
        "title": 0.045267873021259265,
        "text": 0.045267873021259265,
        "implement": 0.09053574604251853,
        "ml": 0.1358036190637778,
        "runtime": 0.18107149208503706,
        "onnx_loader": 0.09053574604251853,
        "py": 0.2716072381275556,
        "that": 0.09053574604251853,
        "chooses": 0.045267873021259265,
        "the": 0.18107149208503706,
        "best": 0.045267873021259265,
        "onnx": 0.045267873021259265,
        "ep": 0.1358036190637778,
        "at": 0.09053574604251853,
        "tensorrt": 0.045267873021259265,
        "directml": 0.045267873021259265,
        "cpu": 0.09053574604251853,
        "mps": 0.045267873021259265,
        "coreml": 0.045267873021259265,
        "on": 0.22633936510629632,
        "macos": 0.1358036190637778,
        "for": 0.09053574604251853,
        "paths": 0.045267873021259265,
        "versioning": 0.045267873021259265,
        "provide": 0.045267873021259265,
        "tests": 0.1358036190637778,
        "monkeypatch": 0.09053574604251853,
        "availability": 0.1358036190637778,
        "dependencies": 0.09053574604251853,
        "already": 0.045267873021259265,
        "completed": 0.045267873021259265,
        "004": 0.045267873021259265,
        "package": 0.045267873021259265,
        "layout": 0.045267873021259265,
        "002": 0.045267873021259265,
        "tooling": 0.045267873021259265,
        "003": 0.045267873021259265,
        "ci": 0.045267873021259265,
        "constraints": 0.045267873021259265,
        "no": 0.18107149208503706,
        "gpu": 0.045267873021259265,
        "specific": 0.045267873021259265,
        "imports": 0.045267873021259265,
        "module": 0.045267873021259265,
        "top": 0.045267873021259265,
        "level": 0.045267873021259265,
        "log": 0.045267873021259265,
        "chosen": 0.045267873021259265,
        "and": 0.18107149208503706,
        "fallbacks": 0.045267873021259265,
        "non": 0.045267873021259265,
        "goals": 0.045267873021259265,
        "real": 0.045267873021259265,
        "files": 0.09053574604251853,
        "yet": 0.045267873021259265,
        "inference": 0.045267873021259265,
        "calls": 0.045267873021259265,
        "current": 0.045267873021259265,
        "repository": 0.045267873021259265,
        "snapshot": 0.045267873021259265,
        "voice": 0.09053574604251853,
        "xform": 0.09053574604251853,
        "app": 0.045267873021259265,
        "core": 0.045267873021259265,
        "version": 0.09053574604251853,
        "__init__": 0.09053574604251853,
        "empty": 0.045267873021259265,
        "placeholder": 0.045267873021259265,
        "pyproject": 0.09053574604251853,
        "toml": 0.1358036190637778,
        "key": 0.045267873021259265,
        "relevant": 0.045267873021259265,
        "parts": 0.045267873021259265,
        "tool": 0.09053574604251853,
        "poetry": 0.09053574604251853,
        "name": 0.045267873021259265,
        "0": 0.1358036190637778,
        "1": 0.09053574604251853,
        "python": 0.045267873021259265,
        "3": 0.045267873021259265,
        "11": 0.045267873021259265,
        "onnxruntime": 0.09053574604251853,
        "18": 0.045267873021259265,
        "acceptance": 0.045267873021259265,
        "criteria": 0.045267873021259265,
        "definition": 0.045267873021259265,
        "of": 0.045267873021259265,
        "done": 0.045267873021259265,
        "select_providers": 0.045267873021259265,
        "returns": 0.045267873021259265,
        "an": 0.045267873021259265,
        "ordered": 0.045267873021259265,
        "list": 0.1358036190637778,
        "based": 0.045267873021259265,
        "platform": 0.09053574604251853,
        "logs": 0.045267873021259265,
        "contain": 0.045267873021259265,
        "selected": 0.045267873021259265,
        "reason": 0.045267873021259265,
        "fallback": 0.045267873021259265,
        "simulate": 0.045267873021259265,
        "get_available_providers": 0.045267873021259265,
        "assert": 0.045267873021259265,
        "selection": 0.045267873021259265,
        "order": 0.045267873021259265,
        "across": 0.045267873021259265,
        "windows": 0.09053574604251853,
        "linux": 0.045267873021259265,
        "mypy": 0.045267873021259265,
        "ruff": 0.045267873021259265,
        "pytest": 0.045267873021259265,
        "pass": 0.045267873021259265,
        "deliverables": 0.09053574604251853,
        "output": 0.045267873021259265,
        "contract": 0.045267873021259265,
        "then": 0.045267873021259265,
        "paste": 0.045267873021259265,
        "from": 0.045267873021259265,
        "template": 0.045267873021259265,
        "implementation": 0.045267873021259265,
        "hints": 0.045267873021259265,
        "detect": 0.045267873021259265,
        "os": 0.045267873021259265,
        "with": 0.045267873021259265,
        "system": 0.045267873021259265,
        "prefer": 0.045267873021259265,
        "tensorrtexecutionprovider": 0.045267873021259265,
        "nvidia": 0.045267873021259265,
        "dmlexecutionprovider": 0.045267873021259265,
        "coremlexecutionprovider": 0.045267873021259265,
        "or": 0.045267873021259265,
        "mpsexecutionprovider": 0.045267873021259265,
        "else": 0.045267873021259265,
        "expose": 0.045267873021259265,
        "a": 0.045267873021259265,
        "helper": 0.045267873021259265,
        "create_session": 0.045267873021259265,
        "path": 0.045267873021259265,
        "str": 0.09053574604251853,
        "preferred": 0.045267873021259265,
        "none": 0.045267873021259265,
        "inferencesession": 0.045267873021259265,
        "important": 0.045267873021259265,
        "guardrails": 0.045267873021259265,
        "actual": 0.045267873021259265
      },
      "text": "--- ## \u2705 Example Instantiation #2 \u2014 S\u2011016 (Model registry & provider detection) **Story ID:** S\u2011016 **Story Title:** Model registry & provider detection **Story Text:** Implement `ml/runtime/onnx_loader.py` that chooses the best ONNX Runtime EP at runtime (TensorRT > DirectML > CPU; MPS/CoreML on macOS). Implement `ml/registry.py` for model paths/versioning. Provide tests that monkeypatch provider availability. **Dependencies already completed:** S\u2011004 (package layout), S\u2011002 (tooling), S\u2011003 (CI) **Constraints:** No GPU\u2011specific imports at module top level. Log chosen EP and fallbacks. **Non\u2011Goals:** No real model files yet; no inference calls. **Current Repository Snapshot** ``` voice-xform/ app/ core/ version.py ml/ __init__.py runtime/ __init__.py registry.py # (empty placeholder) tests/ pyproject.toml ``` **Key files:** `pyproject.toml` (relevant parts) ```toml [tool.poetry] name = \"voice-xform\" version = \"0.1.0\" [tool.poetry.dependencies] python = \"^3.11\" onnxruntime = \"^1.18.0\" ``` **Acceptance Criteria (Definition of Done)** * `onnx_loader.select_providers()` returns an ordered provider list based on platform and availability. * Logs contain the selected EP and reason for fallback. * Tests simulate availability (monkeypatch `onnxruntime.get_available_providers`) and assert selection order across Windows/macOS/Linux. * mypy/ruff/pytest pass. **Deliverables \u2014 Output Contract** (then paste the **Deliverables** list from the template) **Implementation Hints** * Detect OS with `platform.system()`. * Prefer `\"TensorrtExecutionProvider\"` on NVIDIA, `\"DmlExecutionProvider\"` on Windows, `\"CoreMLExecutionProvider\"` or `\"MPSExecutionProvider\"` on macOS, else CPU. * Expose a helper `create_session(path: str, preferred: list[str] | None) -> InferenceSession`. **Important Guardrails** * No actual",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#5",
      "vector": {
        "template": 0.08971226080325131,
        "implementation": 0.04485613040162566,
        "hints": 0.04485613040162566,
        "detect": 0.04485613040162566,
        "os": 0.04485613040162566,
        "with": 0.08971226080325131,
        "platform": 0.08971226080325131,
        "system": 0.08971226080325131,
        "prefer": 0.04485613040162566,
        "tensorrtexecutionprovider": 0.04485613040162566,
        "on": 0.17942452160650263,
        "nvidia": 0.04485613040162566,
        "dmlexecutionprovider": 0.04485613040162566,
        "windows": 0.08971226080325131,
        "coremlexecutionprovider": 0.04485613040162566,
        "or": 0.08971226080325131,
        "mpsexecutionprovider": 0.04485613040162566,
        "macos": 0.08971226080325131,
        "else": 0.04485613040162566,
        "cpu": 0.04485613040162566,
        "expose": 0.04485613040162566,
        "a": 0.26913678240975397,
        "helper": 0.04485613040162566,
        "create_session": 0.04485613040162566,
        "path": 0.04485613040162566,
        "str": 0.08971226080325131,
        "preferred": 0.04485613040162566,
        "list": 0.04485613040162566,
        "none": 0.04485613040162566,
        "inferencesession": 0.04485613040162566,
        "important": 0.04485613040162566,
        "guardrails": 0.04485613040162566,
        "no": 0.08971226080325131,
        "actual": 0.04485613040162566,
        "model": 0.04485613040162566,
        "downloads": 0.04485613040162566,
        "global": 0.04485613040162566,
        "provider": 0.04485613040162566,
        "checks": 0.08971226080325131,
        "at": 0.04485613040162566,
        "import": 0.04485613040162566,
        "time": 0.08971226080325131,
        "run": 0.17942452160650263,
        "inside": 0.04485613040162566,
        "functions": 0.04485613040162566,
        "verification": 0.04485613040162566,
        "checklist": 0.04485613040162566,
        "you": 0.13456839120487699,
        "this": 0.04485613040162566,
        "after": 0.04485613040162566,
        "each": 0.08971226080325131,
        "story": 0.26913678240975397,
        "locally": 0.04485613040162566,
        "and": 0.3139929128113796,
        "produce": 0.04485613040162566,
        "these": 0.04485613040162566,
        "commands": 0.04485613040162566,
        "in": 0.13456839120487699,
        "the": 0.4485613040162566,
        "validation": 0.04485613040162566,
        "steps": 0.04485613040162566,
        "section": 0.08971226080325131,
        "bash": 0.04485613040162566,
        "make": 0.04485613040162566,
        "all": 0.04485613040162566,
        "confirm": 0.04485613040162566,
        "tests": 0.08971226080325131,
        "pass": 0.04485613040162566,
        "coverage": 0.04485613040162566,
        "for": 0.13456839120487699,
        "new": 0.04485613040162566,
        "code": 0.04485613040162566,
        "95": 0.04485613040162566,
        "spot": 0.04485613040162566,
        "check": 0.04485613040162566,
        "specific": 0.04485613040162566,
        "issues": 0.08971226080325131,
        "if": 0.13456839120487699,
        "touches": 0.04485613040162566,
        "features": 0.04485613040162566,
        "command": 0.04485613040162566,
        "review": 0.08971226080325131,
        "do": 0.04485613040162566,
        "pr": 0.04485613040162566,
        "of": 0.04485613040162566,
        "diff": 0.04485613040162566,
        "fix": 0.04485613040162566,
        "any": 0.04485613040162566,
        "find": 0.04485613040162566,
        "tips": 0.04485613040162566,
        "working": 0.04485613040162566,
        "always": 0.04485613040162566,
        "update": 0.04485613040162566,
        "current": 0.04485613040162566,
        "repository": 0.04485613040162566,
        "snapshot": 0.04485613040162566,
        "before": 0.04485613040162566,
        "so": 0.04485613040162566,
        "llm": 0.08971226080325131,
        "is": 0.13456839120487699,
        "grounded": 0.04485613040162566,
        "reality": 0.04485613040162566,
        "keep": 0.04485613040162566,
        "acceptance": 0.08971226080325131,
        "criteria": 0.08971226080325131,
        "crisp": 0.04485613040162566,
        "testable": 0.04485613040162566,
        "output": 0.04485613040162566,
        "contract": 0.04485613040162566,
        "ensures": 0.04485613040162566,
        "get": 0.04485613040162566,
        "git": 0.04485613040162566,
        "apply": 0.04485613040162566,
        "able": 0.04485613040162566,
        "patch": 0.04485613040162566,
        "full": 0.04485613040162566,
        "file": 0.04485613040162566,
        "contents": 0.04485613040162566,
        "commit": 0.04485613040162566,
        "message": 0.04485613040162566,
        "every": 0.04485613040162566,
        "ui": 0.08971226080325131,
        "heavy": 0.04485613040162566,
        "add": 0.04485613040162566,
        "screenshots": 0.04485613040162566,
        "state": 0.04485613040162566,
        "diagrams": 0.04485613040162566,
        "to": 0.13456839120487699,
        "context": 0.04485613040162566,
        "steer": 0.04485613040162566,
        "layout": 0.04485613040162566,
        "naming": 0.04485613040162566,
        "performance": 0.04485613040162566,
        "sensitive": 0.04485613040162566,
        "put": 0.04485613040162566,
        "explicit": 0.04485613040162566,
        "budgets": 0.04485613040162566,
        "into": 0.04485613040162566,
        "ask": 0.04485613040162566,
        "print": 0.04485613040162566,
        "measured": 0.04485613040162566,
        "timings": 0.04485613040162566
      },
      "text": "template) **Implementation Hints** * Detect OS with `platform.system()`. * Prefer `\"TensorrtExecutionProvider\"` on NVIDIA, `\"DmlExecutionProvider\"` on Windows, `\"CoreMLExecutionProvider\"` or `\"MPSExecutionProvider\"` on macOS, else CPU. * Expose a helper `create_session(path: str, preferred: list[str] | None) -> InferenceSession`. **Important Guardrails** * No actual model downloads. * No global provider checks at import time; run checks inside functions. --- ## \ud83e\uddea Verification Checklist (You run this after each story) Run locally and produce these commands in the **Validation Steps** section: ```bash make all ``` * Confirm tests pass and coverage for new code \u2265 95%. * On Windows/macOS, spot\u2011check for platform\u2011specific issues if the story touches system features. * Run the command /review and do a PR review of the diff. Fix any issues you find. --- ## \ud83d\udcdd Tips for Working With the Template * Always **update the \u201cCurrent Repository Snapshot\u201d** before each story so the LLM is grounded in reality. * Keep **Acceptance Criteria** crisp and testable. * The **Output Contract** ensures you get a `git apply`\u2011able patch, full file contents, tests, and a commit message \u2014 every time. * If a story is UI\u2011heavy, add screenshots or UI state diagrams to the **Story Context** section to steer layout and naming. * If a story is performance\u2011sensitive, put explicit budgets into **Acceptance Criteria** and ask the LLM to print measured timings in",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#6",
      "vector": {
        "story": 0.3849001794597505,
        "is": 0.19245008972987526,
        "ui": 0.19245008972987526,
        "heavy": 0.09622504486493763,
        "add": 0.09622504486493763,
        "screenshots": 0.09622504486493763,
        "or": 0.09622504486493763,
        "state": 0.09622504486493763,
        "diagrams": 0.09622504486493763,
        "to": 0.28867513459481287,
        "the": 0.28867513459481287,
        "context": 0.19245008972987526,
        "section": 0.09622504486493763,
        "steer": 0.09622504486493763,
        "layout": 0.09622504486493763,
        "and": 0.28867513459481287,
        "naming": 0.09622504486493763,
        "if": 0.09622504486493763,
        "a": 0.09622504486493763,
        "performance": 0.09622504486493763,
        "sensitive": 0.09622504486493763,
        "put": 0.09622504486493763,
        "explicit": 0.09622504486493763,
        "budgets": 0.09622504486493763,
        "into": 0.09622504486493763,
        "acceptance": 0.19245008972987526,
        "criteria": 0.19245008972987526,
        "ask": 0.09622504486493763,
        "llm": 0.09622504486493763,
        "print": 0.09622504486493763,
        "measured": 0.09622504486493763,
        "timings": 0.09622504486493763,
        "in": 0.19245008972987526,
        "test": 0.09622504486493763,
        "logs": 0.09622504486493763,
        "use": 0.09622504486493763,
        "this": 0.09622504486493763,
        "template": 0.09622504486493763,
        "verbatim": 0.09622504486493763,
        "for": 0.09622504486493763,
        "s": 0.19245008972987526,
        "001": 0.09622504486493763,
        "through": 0.09622504486493763,
        "044": 0.09622504486493763,
        "by": 0.09622504486493763,
        "swapping": 0.09622504486493763,
        "relevant": 0.09622504486493763,
        "snapshot": 0.09622504486493763
      },
      "text": "story is UI\u2011heavy, add screenshots or UI state diagrams to the **Story Context** section to steer layout and naming. * If a story is performance\u2011sensitive, put explicit budgets into **Acceptance Criteria** and ask the LLM to print measured timings in test logs. --- Use this template verbatim for S\u2011001 through S\u2011044 by swapping in the relevant **Story Context**, **Snapshot**, and **Acceptance Criteria**.",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/spec.md#0",
      "vector": {
        "intelligent": 0.06696495301824251,
        "readme": 0.2008948590547275,
        "generator": 0.06696495301824251,
        "architecture": 0.13392990603648502,
        "spec": 0.06696495301824251,
        "python": 0.13392990603648502,
        "local": 0.2008948590547275,
        "llm": 0.2008948590547275,
        "1": 0.06696495301824251,
        "purpose": 0.06696495301824251,
        "scope": 0.06696495301824251,
        "build": 0.13392990603648502,
        "a": 0.3348247650912125,
        "based": 0.06696495301824251,
        "system": 0.06696495301824251,
        "that": 0.06696495301824251,
        "analyzes": 0.06696495301824251,
        "git": 0.3348247650912125,
        "repository": 0.06696495301824251,
        "structure": 0.06696495301824251,
        "code": 0.06696495301824251,
        "dependencies": 0.06696495301824251,
        "then": 0.06696495301824251,
        "generates": 0.06696495301824251,
        "and": 0.13392990603648502,
        "maintains": 0.06696495301824251,
        "high": 0.13392990603648502,
        "quality": 0.06696495301824251,
        "md": 0.06696495301824251,
        "using": 0.06696495301824251,
        "it": 0.06696495301824251,
        "initializes": 0.06696495301824251,
        "repos": 0.06696495301824251,
        "with": 0.06696495301824251,
        "no": 0.06696495301824251,
        "docs": 0.2008948590547275,
        "keeps": 0.06696495301824251,
        "up": 0.06696495301824251,
        "to": 0.06696495301824251,
        "date": 0.06696495301824251,
        "on": 0.06696495301824251,
        "commits": 0.06696495301824251,
        "prs": 0.06696495301824251,
        "supports": 0.06696495301824251,
        "multiple": 0.06696495301824251,
        "languages": 0.06696495301824251,
        "project": 0.06696495301824251,
        "types": 0.06696495301824251,
        "via": 0.06696495301824251,
        "analyzers": 0.13392990603648502,
        "non": 0.06696495301824251,
        "goals": 0.06696495301824251,
        "for": 0.06696495301824251,
        "the": 0.06696495301824251,
        "poc": 0.06696495301824251,
        "multi": 0.06696495301824251,
        "repo": 0.13392990603648502,
        "orchestration": 0.06696495301824251,
        "full": 0.06696495301824251,
        "website": 0.06696495301824251,
        "api": 0.06696495301824251,
        "reference": 0.06696495301824251,
        "extraction": 0.06696495301824251,
        "beyond": 0.06696495301824251,
        "summaries": 0.06696495301824251,
        "cloud": 0.06696495301824251,
        "llms": 0.06696495301824251,
        "2": 0.06696495301824251,
        "level": 0.06696495301824251,
        "at": 0.06696495301824251,
        "glance": 0.06696495301824251,
        "events": 0.06696495301824251,
        "event": 0.06696495301824251,
        "sources": 0.06696495301824251,
        "cli": 0.06696495301824251,
        "commands": 0.06696495301824251,
        "hooks": 0.06696495301824251,
        "webhooks": 0.06696495301824251,
        "ci": 0.06696495301824251,
        "commit": 0.13392990603648502,
        "pr": 0.13392990603648502,
        "orchestr": 0.06696495301824251,
        "async": 0.06696495301824251,
        "task": 0.06696495301824251,
        "graph": 0.13392990603648502,
        "scanner": 0.06696495301824251,
        "doc": 0.06696495301824251,
        "store": 0.06696495301824251,
        "indexer": 0.06696495301824251,
        "language": 0.06696495301824251,
        "artifacts": 0.06696495301824251,
        "fs": 0.06696495301824251,
        "deps": 0.06696495301824251,
        "cache": 0.06696495301824251,
        "versions": 0.06696495301824251,
        "knowledge": 0.06696495301824251,
        "embeddings": 0.06696495301824251,
        "prompt": 0.06696495301824251,
        "builder": 0.06696495301824251,
        "templates": 0.06696495301824251,
        "rag": 0.06696495301824251,
        "runner": 0.06696495301824251,
        "llama": 0.06696495301824251,
        "cpp": 0.06696495301824251,
        "ollama": 0.06696495301824251,
        "post": 0.06696495301824251,
        "processor": 0.06696495301824251,
        "lint": 0.06696495301824251,
        "toc": 0.06696495301824251,
        "badges": 0.06696495301824251,
        "links": 0.06696495301824251,
        "publisher": 0.06696495301824251,
        "branch": 0.06696495301824251
      },
      "text": "# Intelligent README Generator \u2014 Architecture & Spec (Python, Local LLM) ## 1) Purpose & Scope Build a Python-based system that **analyzes a Git repository** (structure, code, dependencies), then **generates and maintains a high-quality README.md** using a **local LLM**. It initializes repos with no docs and **keeps docs up to date** on commits/PRs. Supports **multiple languages/project types** via analyzers. Non-goals (for the POC): multi-repo orchestration, full website docs, API reference extraction (beyond README summaries), cloud LLMs. --- ## 2) High-Level Architecture (at a glance) ``` \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 Git Events \u2502 Event Sources \u2502 CLI commands, Git hooks, Webhooks/CI (commit/PR) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Orchestr \u2502 (Async task graph) \u2514\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Repo Scanner\u2502 \u2502 Analyzers \u2502 \u2502 Doc Store \u2502 \u2502 + Indexer \u2502 \u2502 (Language, \u2502 \u2502 (Artifacts, \u2502 \u2502 (Git, FS) \u2502 \u2502 Build, Deps) \u2502 \u2502 Cache, \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 Versions) \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 Knowledge Graph \u2502 \u2502 \u2502 \u2502 & Embeddings \u2502<\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 Prompt Builder \u2502 (Templates + RAG) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 Local LLM Runner \u2502 (llama.cpp/Ollama) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25b6\u2502 Post-Processor \u2502 (lint, ToC, badges, links) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Git Publisher \u2502 (branch/PR/commit) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 ``` --- ##",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#1",
      "vector": {
        "rag": 0.053074489243427524,
        "local": 0.053074489243427524,
        "llm": 0.053074489243427524,
        "runner": 0.053074489243427524,
        "llama": 0.053074489243427524,
        "cpp": 0.053074489243427524,
        "ollama": 0.053074489243427524,
        "post": 0.053074489243427524,
        "processor": 0.053074489243427524,
        "lint": 0.053074489243427524,
        "toc": 0.053074489243427524,
        "badges": 0.053074489243427524,
        "links": 0.053074489243427524,
        "git": 0.10614897848685505,
        "publisher": 0.053074489243427524,
        "branch": 0.053074489243427524,
        "pr": 0.053074489243427524,
        "commit": 0.053074489243427524,
        "3": 0.2653724462171376,
        "components": 0.053074489243427524,
        "responsibilities": 0.053074489243427524,
        "1": 0.053074489243427524,
        "orchestrator": 0.053074489243427524,
        "coordinates": 0.053074489243427524,
        "end": 0.10614897848685505,
        "to": 0.2122979569737101,
        "pipelines": 0.053074489243427524,
        "init": 0.053074489243427524,
        "update": 0.10614897848685505,
        "regenerate": 0.10614897848685505,
        "computes": 0.053074489243427524,
        "change": 0.10614897848685505,
        "impact": 0.053074489243427524,
        "from": 0.10614897848685505,
        "diff": 0.053074489243427524,
        "decides": 0.053074489243427524,
        "whether": 0.053074489243427524,
        "full": 0.053074489243427524,
        "readme": 0.053074489243427524,
        "or": 0.10614897848685505,
        "patch": 0.053074489243427524,
        "sections": 0.053074489243427524,
        "schedules": 0.053074489243427524,
        "tasks": 0.053074489243427524,
        "and": 0.15922346773028256,
        "caches": 0.053074489243427524,
        "intermediate": 0.053074489243427524,
        "results": 0.053074489243427524,
        "reuses": 0.053074489243427524,
        "analyzer": 0.10614897848685505,
        "outputs": 0.053074489243427524,
        "docgen": 0.2122979569737101,
        "analyzers": 0.2653724462171376,
        "cache": 0.053074489243427524,
        "json": 0.2122979569737101,
        "invalidating": 0.053074489243427524,
        "entries": 0.053074489243427524,
        "when": 0.10614897848685505,
        "file": 0.053074489243427524,
        "hashes": 0.053074489243427524,
        "signatures": 0.053074489243427524,
        "emits": 0.053074489243427524,
        "structured": 0.053074489243427524,
        "logs": 0.053074489243427524,
        "info": 0.053074489243427524,
        "by": 0.053074489243427524,
        "default": 0.053074489243427524,
        "debug": 0.053074489243427524,
        "with": 0.053074489243427524,
        "verbose": 0.053074489243427524,
        "respects": 0.053074489243427524,
        "yml": 0.053074489243427524,
        "ci": 0.053074489243427524,
        "watched_globs": 0.053074489243427524,
        "skip": 0.053074489243427524,
        "unrelated": 0.053074489243427524,
        "diffs": 0.053074489243427524,
        "substitutes": 0.053074489243427524,
        "fail": 0.053074489243427524,
        "safe": 0.053074489243427524,
        "stubs": 0.053074489243427524,
        "generation": 0.053074489243427524,
        "fails": 0.053074489243427524,
        "supports": 0.053074489243427524,
        "dry": 0.10614897848685505,
        "run": 0.15922346773028256,
        "previews": 0.053074489243427524,
        "records": 0.053074489243427524,
        "scorecards": 0.053074489243427524,
        "for": 0.053074489243427524,
        "each": 0.053074489243427524,
        "under": 0.053074489243427524,
        "2": 0.053074489243427524,
        "repo": 0.15922346773028256,
        "scanner": 0.053074489243427524,
        "indexer": 0.053074489243427524,
        "walks": 0.053074489243427524,
        "builds": 0.053074489243427524,
        "normalized": 0.053074489243427524,
        "manifest": 0.053074489243427524,
        "files": 0.10614897848685505,
        "sizes": 0.053074489243427524,
        "language": 0.10614897848685505,
        "tags": 0.053074489243427524,
        "path": 0.053074489243427524,
        "roles": 0.053074489243427524,
        "src": 0.053074489243427524,
        "test": 0.10614897848685505,
        "docs": 0.053074489243427524,
        "examples": 0.053074489243427524,
        "build": 0.15922346773028256,
        "dependency": 0.10614897848685505,
        "manifests": 0.053074489243427524,
        "e": 0.053074489243427524,
        "g": 0.053074489243427524,
        "pom": 0.053074489243427524,
        "xml": 0.053074489243427524,
        "gradle": 0.10614897848685505,
        "package": 0.053074489243427524,
        "requirements": 0.053074489243427524,
        "txt": 0.053074489243427524,
        "pyproject": 0.053074489243427524,
        "toml": 0.10614897848685505,
        "go": 0.15922346773028256,
        "mod": 0.053074489243427524,
        "cargo": 0.10614897848685505,
        "gemfile": 0.053074489243427524,
        "composer": 0.053074489243427524,
        "entrypoints": 0.10614897848685505,
        "clis": 0.053074489243427524,
        "services": 0.053074489243427524,
        "coverage": 0.053074489243427524,
        "artifacts": 0.053074489243427524,
        "if": 0.053074489243427524,
        "available": 0.053074489243427524,
        "stores": 0.053074489243427524,
        "a": 0.053074489243427524,
        "per": 0.053074489243427524,
        "index": 0.053074489243427524,
        "speed": 0.053074489243427524,
        "future": 0.053074489243427524,
        "runs": 0.053074489243427524,
        "plugin": 0.053074489243427524,
        "based": 0.053074489243427524,
        "detect": 0.053074489243427524,
        "idioms": 0.053074489243427524,
        "frameworks": 0.053074489243427524,
        "spring": 0.053074489243427524,
        "boot": 0.053074489243427524,
        "fastapi": 0.053074489243427524,
        "node": 0.053074489243427524,
        "express": 0.053074489243427524,
        "react": 0.053074489243427524,
        "next": 0.053074489243427524,
        "js": 0.053074489243427524,
        "http": 0.053074489243427524,
        "rust": 0.053074489243427524,
        "bin": 0.053074489243427524,
        "lib": 0.053074489243427524,
        "maven": 0.053074489243427524,
        "setuptools": 0.053074489243427524,
        "poetry": 0.053074489243427524,
        "npm": 0.053074489243427524,
        "pnpm": 0.053074489243427524,
        "yarn": 0.053074489243427524,
        "extract": 0.053074489243427524,
        "top": 0.053074489243427524,
        "level": 0.053074489243427524
      },
      "text": "+ RAG) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 Local LLM Runner \u2502 (llama.cpp/Ollama) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25b6\u2502 Post-Processor \u2502 (lint, ToC, badges, links) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Git Publisher \u2502 (branch/PR/commit) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 ``` --- ## 3) Components & Responsibilities ### 3.1 Orchestrator * Coordinates end-to-end pipelines (init, update, regenerate). * Computes *change impact* from Git diff; decides whether to regenerate full README or patch sections. * Schedules tasks and caches intermediate results. * Reuses analyzer outputs from `.docgen/analyzers/cache.json`, invalidating entries when file hashes or analyzer signatures change. * Emits structured logs (info by default, debug with `--verbose`), respects `.docgen.yml` `ci.watched_globs` to skip unrelated diffs, and substitutes fail-safe stubs when generation fails. * Supports dry-run previews (`docgen update --dry-run`) and records scorecards for each run under `.docgen/`. ### 3.2 Repo Scanner & Indexer * Walks repo; builds normalized manifest: * Files, sizes, language tags, path roles (src/test/docs/examples). * Build files & dependency manifests (e.g., `pom.xml`, `build.gradle`, `package.json`, `requirements.txt`, `pyproject.toml`, `go.mod`, `Cargo.toml`, `Gemfile`, `composer.json`). * Entrypoints (CLIs, services), test coverage artifacts if available. * Stores a per-repo index (JSON) to speed future runs. ### 3.3 Analyzers (Plugin-based) * **Language analyzers** (detect idioms, entrypoints, frameworks: Spring Boot, FastAPI, Node/Express, React, Next.js, Go HTTP, Rust bin/lib). * **Build analyzers** (Maven/Gradle, setuptools/Poetry, npm/pnpm/yarn, Go, Cargo). * **Dependency analyzers** (extract top-level",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#2",
      "vector": {
        "index": 0.0536828127095019,
        "json": 0.0536828127095019,
        "to": 0.1073656254190038,
        "speed": 0.0536828127095019,
        "future": 0.0536828127095019,
        "runs": 0.0536828127095019,
        "3": 0.2147312508380076,
        "analyzers": 0.3220968762570114,
        "plugin": 0.0536828127095019,
        "based": 0.0536828127095019,
        "language": 0.0536828127095019,
        "detect": 0.0536828127095019,
        "idioms": 0.0536828127095019,
        "entrypoints": 0.0536828127095019,
        "frameworks": 0.0536828127095019,
        "spring": 0.1073656254190038,
        "boot": 0.1073656254190038,
        "fastapi": 0.1073656254190038,
        "node": 0.1073656254190038,
        "express": 0.0536828127095019,
        "react": 0.0536828127095019,
        "next": 0.0536828127095019,
        "js": 0.0536828127095019,
        "go": 0.1073656254190038,
        "http": 0.0536828127095019,
        "rust": 0.0536828127095019,
        "bin": 0.0536828127095019,
        "lib": 0.0536828127095019,
        "build": 0.1073656254190038,
        "maven": 0.0536828127095019,
        "gradle": 0.0536828127095019,
        "setuptools": 0.0536828127095019,
        "poetry": 0.0536828127095019,
        "npm": 0.0536828127095019,
        "pnpm": 0.0536828127095019,
        "yarn": 0.0536828127095019,
        "cargo": 0.0536828127095019,
        "dependency": 0.0536828127095019,
        "extract": 0.0536828127095019,
        "top": 0.1073656254190038,
        "level": 0.0536828127095019,
        "libs": 0.0536828127095019,
        "notable": 0.0536828127095019,
        "transitive": 0.0536828127095019,
        "categories": 0.0536828127095019,
        "entrypoint": 0.0536828127095019,
        "infer": 0.0536828127095019,
        "run": 0.0536828127095019,
        "commands": 0.0536828127095019,
        "for": 0.1073656254190038,
        "django": 0.0536828127095019,
        "scripts": 0.1073656254190038,
        "pattern": 0.0536828127095019,
        "monorepo": 0.0536828127095019,
        "layout": 0.0536828127095019,
        "ci": 0.0536828127095019,
        "cd": 0.0536828127095019,
        "containerization": 0.0536828127095019,
        "k8s": 0.0536828127095019,
        "heuristics": 0.0536828127095019,
        "structure": 0.0536828127095019,
        "analyzer": 0.1610484381285057,
        "module": 0.0536828127095019,
        "topology": 0.0536828127095019,
        "detected": 0.0536828127095019,
        "entities": 0.1073656254190038,
        "dtos": 0.0536828127095019,
        "api": 0.0536828127095019,
        "endpoint": 0.0536828127095019,
        "sequences": 0.0536828127095019,
        "service": 0.0536828127095019,
        "interactions": 0.0536828127095019,
        "tree": 0.0536828127095019,
        "sitter": 0.0536828127095019,
        "symbol": 0.0536828127095019,
        "python": 0.0536828127095019,
        "java": 0.0536828127095019,
        "typescript": 0.0536828127095019,
        "extracts": 0.0536828127095019,
        "functions": 0.0536828127095019,
        "classes": 0.0536828127095019,
        "when": 0.0536828127095019,
        "parsers": 0.0536828127095019,
        "available": 0.0536828127095019,
        "and": 0.2147312508380076,
        "degrades": 0.0536828127095019,
        "gracefully": 0.0536828127095019,
        "otherwise": 0.0536828127095019,
        "each": 0.0536828127095019,
        "returns": 0.0536828127095019,
        "signals": 0.1073656254190038,
        "key": 0.1073656254190038,
        "facts": 0.0536828127095019,
        "the": 0.1073656254190038,
        "knowledge": 0.1073656254190038,
        "graph": 0.1610484381285057,
        "4": 0.0536828127095019,
        "embeddings": 0.1073656254190038,
        "rag": 0.0536828127095019,
        "of": 0.1073656254190038,
        "repo": 0.1073656254190038,
        "modules": 0.0536828127095019,
        "packages": 0.0536828127095019,
        "services": 0.0536828127095019,
        "configs": 0.0536828127095019,
        "tests": 0.0536828127095019,
        "docs": 0.1073656254190038,
        "lightweight": 0.0536828127095019,
        "embedding": 0.0536828127095019,
        "store": 0.0536828127095019,
        "e": 0.0536828127095019,
        "g": 0.0536828127095019,
        "faiss": 0.0536828127095019,
        "in": 0.0536828127095019,
        "memory": 0.0536828127095019,
        "chunks": 0.0536828127095019,
        "code": 0.0536828127095019,
        "comments": 0.0536828127095019,
        "readme": 0.1073656254190038,
        "fragments": 0.0536828127095019,
        "changelog": 0.0536828127095019,
        "issues": 0.0536828127095019,
        "optional": 0.0536828127095019,
        "commit": 0.0536828127095019,
        "messages": 0.1073656254190038,
        "provides": 0.0536828127095019,
        "context": 0.1073656254190038,
        "retrieval": 0.0536828127095019,
        "prompt": 0.1073656254190038,
        "building": 0.0536828127095019,
        "k": 0.0536828127095019,
        "by": 0.0536828127095019,
        "section": 0.1610484381285057,
        "persists": 0.0536828127095019,
        "under": 0.0536828127095019,
        "docgen": 0.0536828127095019,
        "refreshing": 0.0536828127095019,
        "only": 0.0536828127095019,
        "files": 0.0536828127095019,
        "whose": 0.0536828127095019,
        "hashes": 0.0536828127095019,
        "changed": 0.0536828127095019,
        "5": 0.0536828127095019,
        "builder": 0.0536828127095019,
        "aware": 0.0536828127095019,
        "jinja2": 0.0536828127095019,
        "templates": 0.0536828127095019,
        "with": 0.1073656254190038,
        "guardrails": 0.0536828127095019,
        "project": 0.0536828127095019,
        "intro": 0.0536828127095019,
        "features": 0.0536828127095019,
        "architecture": 0.0536828127095019,
        "overview": 0.0536828127095019,
        "quick": 0.0536828127095019,
        "start": 0.0536828127095019,
        "configuration": 0.0536828127095019,
        "test": 0.0536828127095019,
        "deployment": 0.0536828127095019,
        "troubleshooting": 0.0536828127095019,
        "faq": 0.0536828127095019,
        "roadmap": 0.0536828127095019,
        "contribution": 0.0536828127095019,
        "license": 0.0536828127095019,
        "badges": 0.0536828127095019,
        "dynamically": 0.0536828127095019,
        "injects": 0.0536828127095019,
        "retrieved": 0.0536828127095019,
        "per": 0.0536828127095019,
        "produces": 0.0536828127095019,
        "llm": 0.0536828127095019,
        "ready": 0.0536828127095019,
        "structured": 0.0536828127095019,
        "prompts": 0.0536828127095019,
        "system": 0.0536828127095019,
        "user": 0.0536828127095019,
        "token": 0.0536828127095019,
        "budgets": 0.0536828127095019,
        "honours": 0.0536828127095019,
        "style": 0.0536828127095019,
        "presets": 0.0536828127095019,
        "concise": 0.0536828127095019,
        "trims": 0.0536828127095019,
        "list": 0.0536828127095019,
        "heavy": 0.0536828127095019,
        "sections": 0.0536828127095019
      },
      "text": "index (JSON) to speed future runs. ### 3.3 Analyzers (Plugin-based) * **Language analyzers** (detect idioms, entrypoints, frameworks: Spring Boot, FastAPI, Node/Express, React, Next.js, Go HTTP, Rust bin/lib). * **Build analyzers** (Maven/Gradle, setuptools/Poetry, npm/pnpm/yarn, Go, Cargo). * **Dependency analyzers** (extract top-level libs & notable transitive categories). * **Entrypoint analyzers** (infer run commands for FastAPI, Django, Spring Boot, Node scripts). * **Pattern analyzers** (monorepo layout, CI/CD, containerization/K8s heuristics). * **Structure analyzer** (module topology, detected entities/DTOs, API endpoint sequences, service interactions). * **Tree-sitter symbol analyzer** (Python/Java/TypeScript) extracts functions/classes when parsers available and degrades gracefully otherwise. * Each analyzer returns **Signals** (key facts) to the knowledge graph. ### 3.4 Knowledge Graph & Embeddings (RAG) * Graph of Repo entities: modules, packages, services, scripts, configs, tests, docs. * Lightweight embedding store (e.g., `faiss`/in-memory) of **chunks**: code comments, README fragments, `docs/`, `CHANGELOG`, issues (optional), commit messages. * Provides **context retrieval** for prompt building (top-k by section) and persists embeddings under `.docgen/`, refreshing only the files whose hashes changed. ### 3.5 Prompt Builder * **Section-aware** Jinja2 templates with **guardrails**: * Project intro, key features, architecture overview, quick start, configuration, build/test, deployment, troubleshooting, FAQ, roadmap, contribution, license, badges. * Dynamically injects repo signals and retrieved context per section. * Produces **LLM-ready structured prompts** (system + user messages) with token budgets and honours `readme.style` presets (`concise` trims list-heavy sections,",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#3",
      "vector": {
        "start": 0.09690031662230184,
        "configuration": 0.09690031662230184,
        "build": 0.04845015831115092,
        "test": 0.04845015831115092,
        "deployment": 0.04845015831115092,
        "troubleshooting": 0.04845015831115092,
        "faq": 0.04845015831115092,
        "roadmap": 0.04845015831115092,
        "contribution": 0.04845015831115092,
        "license": 0.04845015831115092,
        "badges": 0.09690031662230184,
        "dynamically": 0.04845015831115092,
        "injects": 0.09690031662230184,
        "repo": 0.04845015831115092,
        "signals": 0.04845015831115092,
        "and": 0.4360514248003583,
        "retrieved": 0.04845015831115092,
        "context": 0.09690031662230184,
        "per": 0.04845015831115092,
        "section": 0.14535047493345277,
        "produces": 0.04845015831115092,
        "llm": 0.09690031662230184,
        "ready": 0.04845015831115092,
        "structured": 0.09690031662230184,
        "prompts": 0.04845015831115092,
        "system": 0.04845015831115092,
        "user": 0.04845015831115092,
        "messages": 0.04845015831115092,
        "with": 0.14535047493345277,
        "token": 0.04845015831115092,
        "budgets": 0.04845015831115092,
        "honours": 0.04845015831115092,
        "readme": 0.14535047493345277,
        "style": 0.14535047493345277,
        "presets": 0.04845015831115092,
        "concise": 0.04845015831115092,
        "trims": 0.04845015831115092,
        "list": 0.04845015831115092,
        "heavy": 0.04845015831115092,
        "sections": 0.14535047493345277,
        "comprehensive": 0.04845015831115092,
        "keeps": 0.04845015831115092,
        "full": 0.04845015831115092,
        "detail": 0.04845015831115092,
        "detected": 0.09690031662230184,
        "entrypoints": 0.04845015831115092,
        "infrastructure": 0.04845015831115092,
        "patterns": 0.04845015831115092,
        "into": 0.04845015831115092,
        "quick": 0.04845015831115092,
        "guidance": 0.04845015831115092,
        "e": 0.04845015831115092,
        "g": 0.04845015831115092,
        "uvicorn": 0.04845015831115092,
        "docker": 0.14535047493345277,
        "compose": 0.04845015831115092,
        "up": 0.04845015831115092,
        "generates": 0.04845015831115092,
        "mermaid": 0.04845015831115092,
        "sequence": 0.04845015831115092,
        "diagrams": 0.04845015831115092,
        "highlighting": 0.04845015831115092,
        "request": 0.04845015831115092,
        "flow": 0.04845015831115092,
        "across": 0.04845015831115092,
        "services": 0.04845015831115092,
        "when": 0.09690031662230184,
        "api": 0.09690031662230184,
        "endpoints": 0.04845015831115092,
        "are": 0.04845015831115092,
        "3": 0.09690031662230184,
        "6": 0.04845015831115092,
        "local": 0.14535047493345277,
        "runner": 0.14535047493345277,
        "pluggable": 0.04845015831115092,
        "runtime": 0.04845015831115092,
        "that": 0.04845015831115092,
        "prefers": 0.04845015831115092,
        "the": 0.04845015831115092,
        "model": 0.14535047493345277,
        "http": 0.14535047493345277,
        "endpoint": 0.04845015831115092,
        "host": 0.04845015831115092,
        "localhost": 0.04845015831115092,
        "12434": 0.04845015831115092,
        "engines": 0.09690031662230184,
        "v1": 0.09690031662230184,
        "container": 0.04845015831115092,
        "internal": 0.14535047493345277,
        "environment": 0.04845015831115092,
        "overrides": 0.04845015831115092,
        "an": 0.04845015831115092,
        "ollama": 0.04845015831115092,
        "cli": 0.09690031662230184,
        "fallback": 0.04845015831115092,
        "defaults": 0.04845015831115092,
        "to": 0.14535047493345277,
        "ai": 0.04845015831115092,
        "smollm2": 0.04845015831115092,
        "360m": 0.04845015831115092,
        "q4_k_m": 0.04845015831115092,
        "but": 0.04845015831115092,
        "respects": 0.04845015831115092,
        "docgen": 0.09690031662230184,
        "yml": 0.04845015831115092,
        "openai": 0.04845015831115092,
        "compatible": 0.04845015831115092,
        "env": 0.04845015831115092,
        "vars": 0.04845015831115092,
        "for": 0.14535047493345277,
        "alternate": 0.04845015831115092,
        "weights": 0.04845015831115092,
        "keys": 0.04845015831115092,
        "supports": 0.04845015831115092,
        "function": 0.04845015831115092,
        "calling": 0.04845015831115092,
        "outputs": 0.04845015831115092,
        "available": 0.04845015831115092,
        "streaming": 0.04845015831115092,
        "decode": 0.04845015831115092,
        "stop": 0.04845015831115092,
        "tokens": 0.04845015831115092,
        "by": 0.09690031662230184,
        "generation": 0.04845015831115092,
        "stay": 0.09690031662230184,
        "within": 0.04845015831115092,
        "limits": 0.04845015831115092,
        "validates": 0.09690031662230184,
        "ensure": 0.04845015831115092,
        "runners": 0.04845015831115092,
        "loopback": 0.04845015831115092,
        "hosts": 0.04845015831115092,
        "only": 0.09690031662230184,
        "includes": 0.04845015831115092,
        "a": 0.09690031662230184,
        "llamacpprunner": 0.04845015831115092,
        "adapter": 0.04845015831115092,
        "llama": 0.04845015831115092,
        "cpp": 0.04845015831115092,
        "binaries": 0.04845015831115092,
        "enforcing": 0.04845015831115092,
        "filesystem": 0.04845015831115092,
        "backed": 0.04845015831115092,
        "paths": 0.04845015831115092,
        "execution": 0.04845015831115092,
        "7": 0.04845015831115092,
        "post": 0.04845015831115092,
        "processor": 0.04845015831115092,
        "lints": 0.04845015831115092,
        "markdown": 0.04845015831115092,
        "builds": 0.04845015831115092,
        "toc": 0.04845015831115092,
        "adds": 0.04845015831115092,
        "shields": 0.04845015831115092,
        "normalizes": 0.04845015831115092,
        "heading": 0.04845015831115092,
        "hierarchy": 0.04845015831115092,
        "enforces": 0.04845015831115092,
        "guide": 0.04845015831115092,
        "contract": 0.04845015831115092,
        "required": 0.04845015831115092,
        "links": 0.04845015831115092,
        "relative": 0.04845015831115092,
        "absolute": 0.04845015831115092,
        "code": 0.04845015831115092,
        "block": 0.04845015831115092,
        "languages": 0.04845015831115092,
        "line": 0.04845015831115092,
        "length": 0.04845015831115092,
        "computes": 0.04845015831115092,
        "diff": 0.04845015831115092,
        "aware": 0.04845015831115092,
        "updates": 0.04845015831115092,
        "modifies": 0.04845015831115092,
        "impacted": 0.04845015831115092,
        "changes": 0.04845015831115092,
        "persists": 0.04845015831115092,
        "scorecard": 0.09690031662230184,
        "json": 0.04845015831115092
      },
      "text": "start, configuration, build/test, deployment, troubleshooting, FAQ, roadmap, contribution, license, badges. * Dynamically injects repo signals and retrieved context per section. * Produces **LLM-ready structured prompts** (system + user messages) with token budgets and honours `readme.style` presets (`concise` trims list-heavy sections, `comprehensive` keeps full detail). * Injects detected entrypoints and infrastructure patterns into Quick Start guidance (e.g., `uvicorn ...`, `docker compose up`). * Generates Mermaid sequence diagrams highlighting request flow across services when API endpoints are detected. ### 3.6 Local LLM Runner * Pluggable runtime that prefers the Docker Model Runner HTTP endpoint (host `http://localhost:12434/engines/v1`, container `http://model-runner.docker.internal/engines/v1`) with environment overrides and an `ollama` CLI fallback. * Defaults to `ai/smollm2:360M-Q4_K_M` but respects `.docgen.yml` and OpenAI-compatible env vars for alternate weights and API keys. * Supports **function calling style** for structured outputs when available. * Streaming decode with stop tokens; **section-by-section** generation to stay within context limits. * Validates configuration to ensure runners stay local (loopback/`*.internal` hosts only). * Includes a `LlamaCppRunner` adapter for local `llama.cpp` binaries, enforcing filesystem-backed model paths and CLI execution. ### 3.7 Post-Processor * Lints Markdown, builds ToC, adds shields/badges, normalizes heading hierarchy. * Enforces internal style guide and **README contract** (required sections). * Validates links (relative/absolute), code block languages, and line length. * Computes **diff-aware updates**: only modifies sections impacted by changes. * Persists a README scorecard (`.docgen/scorecard.json`)",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#4",
      "vector": {
        "shields": 0.04339630366027462,
        "badges": 0.08679260732054923,
        "normalizes": 0.08679260732054923,
        "heading": 0.04339630366027462,
        "hierarchy": 0.04339630366027462,
        "enforces": 0.04339630366027462,
        "internal": 0.04339630366027462,
        "style": 0.04339630366027462,
        "guide": 0.04339630366027462,
        "and": 0.6075482512438447,
        "readme": 0.13018891098082386,
        "contract": 0.04339630366027462,
        "required": 0.04339630366027462,
        "sections": 0.17358521464109847,
        "validates": 0.04339630366027462,
        "links": 0.04339630366027462,
        "relative": 0.04339630366027462,
        "absolute": 0.04339630366027462,
        "code": 0.04339630366027462,
        "block": 0.04339630366027462,
        "languages": 0.04339630366027462,
        "line": 0.04339630366027462,
        "length": 0.04339630366027462,
        "computes": 0.04339630366027462,
        "diff": 0.04339630366027462,
        "aware": 0.04339630366027462,
        "updates": 0.04339630366027462,
        "only": 0.04339630366027462,
        "modifies": 0.04339630366027462,
        "impacted": 0.04339630366027462,
        "by": 0.04339630366027462,
        "changes": 0.08679260732054923,
        "persists": 0.04339630366027462,
        "a": 0.13018891098082386,
        "scorecard": 0.08679260732054923,
        "docgen": 0.2169815183013731,
        "json": 0.17358521464109847,
        "capturing": 0.08679260732054923,
        "coverage": 0.08679260732054923,
        "quick": 0.04339630366027462,
        "start": 0.04339630366027462,
        "health": 0.04339630366027462,
        "link": 0.08679260732054923,
        "results": 0.04339630366027462,
        "adds": 0.04339630366027462,
        "build": 0.04339630366027462,
        "license": 0.04339630366027462,
        "with": 0.13018891098082386,
        "safe": 0.08679260732054923,
        "defaults": 0.04339630366027462,
        "reports": 0.04339630366027462,
        "warnings": 0.04339630366027462,
        "during": 0.04339630366027462,
        "post": 0.04339630366027462,
        "processing": 0.04339630366027462,
        "3": 0.13018891098082386,
        "8": 0.04339630366027462,
        "validation": 0.17358521464109847,
        "layer": 0.04339630366027462,
        "runs": 0.08679260732054923,
        "after": 0.04339630366027462,
        "section": 0.08679260732054923,
        "rendering": 0.04339630366027462,
        "before": 0.04339630366027462,
        "linting": 0.04339630366027462,
        "publishing": 0.04339630366027462,
        "to": 0.04339630366027462,
        "ensure": 0.04339630366027462,
        "generated": 0.08679260732054923,
        "claims": 0.04339630366027462,
        "are": 0.04339630366027462,
        "grounded": 0.04339630366027462,
        "analyzer": 0.08679260732054923,
        "signals": 0.04339630366027462,
        "metadata": 0.04339630366027462,
        "retrieved": 0.04339630366027462,
        "context": 0.04339630366027462,
        "into": 0.04339630366027462,
        "an": 0.04339630366027462,
        "evidence": 0.13018891098082386,
        "index": 0.04339630366027462,
        "used": 0.04339630366027462,
        "for": 0.13018891098082386,
        "token": 0.04339630366027462,
        "overlap": 0.04339630366027462,
        "checks": 0.04339630366027462,
        "default": 0.04339630366027462,
        "nohallucinationvalidator": 0.04339630366027462,
        "rejects": 0.04339630366027462,
        "sentences": 0.04339630366027462,
        "lacking": 0.04339630366027462,
        "supporting": 0.04339630366027462,
        "replaces": 0.04339630366027462,
        "offending": 0.04339630366027462,
        "fail": 0.04339630366027462,
        "stubs": 0.04339630366027462,
        "raises": 0.04339630366027462,
        "actionable": 0.04339630366027462,
        "errors": 0.04339630366027462,
        "writes": 0.04339630366027462,
        "validator": 0.04339630366027462,
        "status": 0.04339630366027462,
        "issues": 0.04339630366027462,
        "summaries": 0.04339630366027462,
        "auditability": 0.04339630366027462,
        "respects": 0.04339630366027462,
        "yml": 0.04339630366027462,
        "no_hallucination": 0.04339630366027462,
        "toggle": 0.04339630366027462,
        "docgen_validation_no_hallucination": 0.04339630366027462,
        "environment": 0.04339630366027462,
        "override": 0.04339630366027462,
        "cli": 0.04339630366027462,
        "skip": 0.04339630366027462,
        "flag": 0.04339630366027462,
        "one": 0.04339630366027462,
        "off": 0.04339630366027462,
        "bypasses": 0.04339630366027462,
        "9": 0.04339630366027462,
        "doc": 0.04339630366027462,
        "store": 0.04339630366027462,
        "artifacts": 0.08679260732054923,
        "versions": 0.04339630366027462,
        "keeps": 0.04339630366027462,
        "drafts": 0.04339630366027462,
        "logs": 0.04339630366027462,
        "prompts": 0.04339630366027462,
        "inputs": 0.04339630366027462,
        "outputs": 0.04339630366027462,
        "diffs": 0.04339630366027462,
        "under": 0.04339630366027462,
        "per": 0.04339630366027462,
        "repo": 0.04339630366027462,
        "supports": 0.04339630366027462,
        "rollback": 0.04339630366027462,
        "regression": 0.04339630366027462,
        "testing": 0.04339630366027462,
        "via": 0.04339630366027462,
        "golden": 0.04339630366027462,
        "readmes": 0.04339630366027462,
        "stores": 0.04339630366027462,
        "embedding": 0.04339630366027462,
        "cache": 0.08679260732054923,
        "embeddings": 0.04339630366027462,
        "analyzers": 0.04339630366027462,
        "schema": 0.04339630366027462,
        "versioning": 0.04339630366027462,
        "so": 0.04339630366027462,
        "subsequent": 0.04339630366027462,
        "reuse": 0.04339630366027462,
        "work": 0.04339630366027462,
        "when": 0.04339630366027462,
        "file": 0.04339630366027462,
        "hashes": 0.04339630366027462,
        "remain": 0.04339630366027462,
        "unchanged": 0.04339630366027462,
        "10": 0.04339630366027462,
        "git": 0.04339630366027462,
        "publisher": 0.04339630366027462,
        "creates": 0.04339630366027462,
        "branch": 0.04339630366027462,
        "e": 0.04339630366027462,
        "g": 0.04339630366027462,
        "update": 0.04339630366027462,
        "yyyymmdd": 0.04339630366027462,
        "pr": 0.08679260732054923,
        "body": 0.04339630366027462,
        "explains": 0.04339630366027462,
        "detected": 0.04339630366027462,
        "what": 0.04339630366027462,
        "were": 0.04339630366027462,
        "updated": 0.04339630366027462,
        "can": 0.04339630366027462,
        "commit": 0.04339630366027462
      },
      "text": "shields/badges, normalizes heading hierarchy. * Enforces internal style guide and **README contract** (required sections). * Validates links (relative/absolute), code block languages, and line length. * Computes **diff-aware updates**: only modifies sections impacted by changes. * Persists a README scorecard (`.docgen/scorecard.json`) capturing coverage, quick start health, and link results. * Adds build/coverage/license badges with safe defaults and reports link warnings during post-processing. ### 3.8 Validation Layer * Runs after section rendering and before linting/publishing to ensure generated claims are grounded. * Normalizes analyzer signals, section metadata, and retrieved context into an **Evidence Index** used for token overlap checks. * Default `NoHallucinationValidator` rejects sentences lacking supporting evidence, replaces offending sections with fail-safe stubs, and raises actionable errors. * Writes `.docgen/validation.json` capturing validator status, issues, and evidence summaries for auditability. * Respects `.docgen.yml` `validation.no_hallucination` toggle, `DOCGEN_VALIDATION_NO_HALLUCINATION` environment override, and CLI `--skip-validation` flag for one-off bypasses. ### 3.9 Doc Store (Artifacts & Versions) * Keeps generated drafts, logs, prompts, inputs/outputs, and diffs under `.docgen/` per repo. * Supports rollback and regression testing via \u201cgolden\u201d READMEs. * Stores embedding cache (`embeddings.json`) and analyzer artifacts (`analyzers/cache.json`) with schema versioning so subsequent runs reuse work when file hashes remain unchanged. ### 3.10 Git Publisher * Creates a branch (e.g., `docgen/readme-update-YYYYMMDD`) and a PR. * PR body explains detected changes and what sections were updated. * Can commit",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#5",
      "vector": {
        "with": 0.0746913686973271,
        "schema": 0.03734568434866355,
        "versioning": 0.03734568434866355,
        "so": 0.03734568434866355,
        "subsequent": 0.03734568434866355,
        "runs": 0.03734568434866355,
        "reuse": 0.03734568434866355,
        "work": 0.03734568434866355,
        "when": 0.0746913686973271,
        "file": 0.03734568434866355,
        "hashes": 0.03734568434866355,
        "remain": 0.03734568434866355,
        "unchanged": 0.03734568434866355,
        "3": 0.0746913686973271,
        "10": 0.03734568434866355,
        "git": 0.03734568434866355,
        "publisher": 0.03734568434866355,
        "creates": 0.03734568434866355,
        "a": 0.0746913686973271,
        "branch": 0.03734568434866355,
        "e": 0.0746913686973271,
        "g": 0.0746913686973271,
        "docgen": 0.0746913686973271,
        "readme": 0.03734568434866355,
        "update": 0.0746913686973271,
        "yyyymmdd": 0.03734568434866355,
        "and": 0.18672842174331777,
        "pr": 0.0746913686973271,
        "body": 0.03734568434866355,
        "explains": 0.03734568434866355,
        "detected": 0.03734568434866355,
        "changes": 0.03734568434866355,
        "what": 0.03734568434866355,
        "sections": 0.03734568434866355,
        "were": 0.03734568434866355,
        "updated": 0.03734568434866355,
        "can": 0.03734568434866355,
        "commit": 0.03734568434866355,
        "directly": 0.03734568434866355,
        "configurable": 0.03734568434866355,
        "on": 0.03734568434866355,
        "init": 0.0746913686973271,
        "for": 0.1493827373946542,
        "empty": 0.03734568434866355,
        "repos": 0.03734568434866355,
        "applies": 0.03734568434866355,
        "labels": 0.03734568434866355,
        "docs": 0.0746913686973271,
        "auto": 0.03734568434866355,
        "updates": 0.03734568434866355,
        "existing": 0.03734568434866355,
        "prs": 0.03734568434866355,
        "configured": 0.03734568434866355,
        "11": 0.03734568434866355,
        "service": 0.1493827373946542,
        "mode": 0.03734568434866355,
        "fastapi": 0.0746913686973271,
        "app": 0.03734568434866355,
        "exposes": 0.03734568434866355,
        "post": 0.03734568434866355,
        "endpoints": 0.03734568434866355,
        "plus": 0.03734568434866355,
        "health": 0.03734568434866355,
        "readiness": 0.03734568434866355,
        "reuses": 0.03734568434866355,
        "the": 0.11203705304599065,
        "orchestrator": 0.03734568434866355,
        "dependency": 0.03734568434866355,
        "executes": 0.03734568434866355,
        "operations": 0.03734568434866355,
        "in": 0.03734568434866355,
        "thread": 0.03734568434866355,
        "pools": 0.03734568434866355,
        "to": 0.03734568434866355,
        "keep": 0.03734568434866355,
        "event": 0.03734568434866355,
        "loop": 0.03734568434866355,
        "responsive": 0.03734568434866355,
        "cli": 0.0746913686973271,
        "host": 0.03734568434866355,
        "0": 0.1493827373946542,
        "port": 0.03734568434866355,
        "8000": 0.03734568434866355,
        "boots": 0.03734568434866355,
        "authentication": 0.03734568434866355,
        "hooks": 0.03734568434866355,
        "ready": 0.03734568434866355,
        "future": 0.03734568434866355,
        "hardening": 0.03734568434866355,
        "error": 0.03734568434866355,
        "handlers": 0.03734568434866355,
        "surface": 0.03734568434866355,
        "actionable": 0.03734568434866355,
        "json": 0.03734568434866355,
        "detail": 0.0746913686973271,
        "field": 0.03734568434866355,
        "common": 0.03734568434866355,
        "runtime": 0.03734568434866355,
        "issues": 0.03734568434866355,
        "4": 0.03734568434866355,
        "data": 0.03734568434866355,
        "model": 0.03734568434866355,
        "python": 0.0746913686973271,
        "pydantic": 0.03734568434866355,
        "dataclasses": 0.0746913686973271,
        "from": 0.0746913686973271,
        "import": 0.0746913686973271,
        "dataclass": 0.2614197904406449,
        "typing": 0.03734568434866355,
        "list": 0.1493827373946542,
        "dict": 0.1493827373946542,
        "optional": 0.0746913686973271,
        "class": 0.2240741060919813,
        "filemeta": 0.0746913686973271,
        "path": 0.03734568434866355,
        "str": 0.6348766339272804,
        "size": 0.03734568434866355,
        "int": 0.03734568434866355,
        "language": 0.03734568434866355,
        "role": 0.03734568434866355,
        "src": 0.03734568434866355,
        "test": 0.0746913686973271,
        "config": 0.03734568434866355,
        "build": 0.03734568434866355,
        "script": 0.03734568434866355,
        "infra": 0.03734568434866355,
        "other": 0.03734568434866355,
        "hash": 0.03734568434866355,
        "repomanifest": 0.0746913686973271,
        "root": 0.03734568434866355,
        "files": 0.03734568434866355,
        "detectors": 0.03734568434866355,
        "build_system": 0.03734568434866355,
        "maven": 0.03734568434866355,
        "framework": 0.0746913686973271,
        "spring": 0.03734568434866355,
        "boot": 0.03734568434866355,
        "dependency_files": 0.03734568434866355,
        "pom": 0.03734568434866355,
        "xml": 0.03734568434866355,
        "requirements": 0.03734568434866355,
        "txt": 0.03734568434866355,
        "signal": 0.0746913686973271,
        "kind": 0.03734568434866355,
        "db": 0.03734568434866355,
        "queue": 0.03734568434866355,
        "dep": 0.03734568434866355,
        "entrypoint": 0.03734568434866355,
        "name": 0.03734568434866355,
        "analysisresult": 0.03734568434866355,
        "manifest": 0.03734568434866355,
        "signals": 0.03734568434866355,
        "embedding_index_path": 0.03734568434866355,
        "sectionspec": 0.03734568434866355,
        "key": 0.03734568434866355,
        "intro": 0.03734568434866355,
        "features": 0.03734568434866355,
        "arch": 0.03734568434866355,
        "quickstart": 0.03734568434866355,
        "required": 0.03734568434866355,
        "bool": 0.03734568434866355,
        "sources": 0.03734568434866355,
        "preferred": 0.03734568434866355,
        "retrieval": 0.03734568434866355,
        "tags": 0.03734568434866355,
        "template_name": 0.03734568434866355,
        "readmedraft": 0.03734568434866355
      },
      "text": "with schema versioning so subsequent runs reuse work when file hashes remain unchanged. ### 3.10 Git Publisher * Creates a branch (e.g., `docgen/readme-update-YYYYMMDD`) and a PR. * PR body explains detected changes and what sections were updated. * Can commit directly (configurable) on init for empty repos. * Applies labels (e.g., `docs:auto`) and updates existing PRs when configured. ### 3.11 Service Mode (FastAPI) * FastAPI app exposes `/init` and `/update` POST endpoints plus `/health` for readiness. * Reuses the orchestrator dependency and executes operations in thread pools to keep the event loop responsive. * CLI `docgen service --host 0.0.0.0 --port 8000` boots the service with authentication hooks ready for future hardening. * Error handlers surface actionable JSON (`detail` field) for common runtime issues. --- ## 4) Data Model (Python `pydantic`/`dataclasses`) ```python from dataclasses import dataclass from typing import List, Dict, Optional @dataclass class FileMeta: path: str size: int language: Optional[str] role: str # src|test|docs|config|build|script|infra|other hash: str @dataclass class RepoManifest: root: str files: List[FileMeta] detectors: Dict[str, str] # {\"build_system\": \"maven\", \"framework\":\"spring-boot\", ...} dependency_files: Dict[str, str] # {\"pom.xml\": \"...\", \"requirements.txt\": \"...\"} @dataclass class Signal: kind: str # \"framework\",\"service\",\"cli\",\"db\",\"queue\",\"dep\",\"entrypoint\",\"test\" name: str detail: Dict[str, str] @dataclass class AnalysisResult: manifest: RepoManifest signals: List[Signal] embedding_index_path: str @dataclass class SectionSpec: key: str # \"intro\",\"features\",\"arch\",\"quickstart\",... required: bool sources: List[str] # preferred retrieval tags template_name: str @dataclass class ReadmeDraft:",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#6",
      "vector": {
        "class": 0.22011272658140596,
        "signal": 0.08804509063256238,
        "kind": 0.04402254531628119,
        "str": 0.6603381797442178,
        "framework": 0.04402254531628119,
        "service": 0.04402254531628119,
        "cli": 0.08804509063256238,
        "db": 0.04402254531628119,
        "queue": 0.04402254531628119,
        "dep": 0.04402254531628119,
        "entrypoint": 0.04402254531628119,
        "test": 0.04402254531628119,
        "name": 0.04402254531628119,
        "detail": 0.04402254531628119,
        "dict": 0.13206763594884358,
        "dataclass": 0.17609018126512477,
        "analysisresult": 0.04402254531628119,
        "manifest": 0.04402254531628119,
        "repomanifest": 0.04402254531628119,
        "signals": 0.04402254531628119,
        "list": 0.13206763594884358,
        "embedding_index_path": 0.04402254531628119,
        "sectionspec": 0.04402254531628119,
        "key": 0.04402254531628119,
        "intro": 0.08804509063256238,
        "features": 0.08804509063256238,
        "arch": 0.04402254531628119,
        "quickstart": 0.08804509063256238,
        "required": 0.04402254531628119,
        "bool": 0.04402254531628119,
        "sources": 0.04402254531628119,
        "preferred": 0.04402254531628119,
        "retrieval": 0.04402254531628119,
        "tags": 0.04402254531628119,
        "template_name": 0.04402254531628119,
        "readmedraft": 0.04402254531628119,
        "sections": 0.04402254531628119,
        "full_markdown": 0.04402254531628119,
        "updateplan": 0.04402254531628119,
        "strategy": 0.04402254531628119,
        "full": 0.04402254531628119,
        "patch": 0.04402254531628119,
        "changed_sections": 0.04402254531628119,
        "reasons": 0.04402254531628119,
        "section": 0.04402254531628119,
        "why": 0.04402254531628119,
        "5": 0.04402254531628119,
        "configuration": 0.08804509063256238,
        "docgen": 0.17609018126512477,
        "yml": 0.04402254531628119,
        "at": 0.04402254531628119,
        "repo": 0.04402254531628119,
        "root": 0.04402254531628119,
        "yaml": 0.04402254531628119,
        "llm": 0.04402254531628119,
        "runner": 0.04402254531628119,
        "ollama": 0.08804509063256238,
        "or": 0.13206763594884358,
        "llama": 0.04402254531628119,
        "cpp": 0.04402254531628119,
        "executable": 0.04402254531628119,
        "optional": 0.08804509063256238,
        "override": 0.04402254531628119,
        "for": 0.04402254531628119,
        "binaries": 0.04402254531628119,
        "model": 0.04402254531628119,
        "llama3": 0.04402254531628119,
        "8b": 0.04402254531628119,
        "instruct": 0.04402254531628119,
        "example": 0.04402254531628119,
        "local": 0.04402254531628119,
        "only": 0.08804509063256238,
        "max_tokens": 0.04402254531628119,
        "2048": 0.04402254531628119,
        "temperature": 0.04402254531628119,
        "0": 0.08804509063256238,
        "2": 0.04402254531628119,
        "readme": 0.13206763594884358,
        "style": 0.04402254531628119,
        "concise": 0.04402254531628119,
        "comprehensive": 0.04402254531628119,
        "template_pack": 0.04402254531628119,
        "enterprise": 0.04402254531628119,
        "bundle": 0.04402254531628119,
        "shipped": 0.04402254531628119,
        "with": 0.04402254531628119,
        "required_sections": 0.04402254531628119,
        "architecture": 0.04402254531628119,
        "build_and_test": 0.04402254531628119,
        "deployment": 0.04402254531628119,
        "troubleshooting": 0.04402254531628119,
        "faq": 0.04402254531628119,
        "license": 0.04402254531628119,
        "validation": 0.04402254531628119,
        "no_hallucination": 0.04402254531628119,
        "true": 0.08804509063256238,
        "set": 0.04402254531628119,
        "to": 0.08804509063256238,
        "false": 0.04402254531628119,
        "use": 0.04402254531628119,
        "docgen_validation_no_hallucination": 0.04402254531628119,
        "disable": 0.04402254531628119,
        "publish": 0.04402254531628119,
        "mode": 0.04402254531628119,
        "pr": 0.13206763594884358,
        "commit": 0.04402254531628119,
        "dry": 0.04402254531628119,
        "run": 0.04402254531628119,
        "branch_prefix": 0.04402254531628119,
        "labels": 0.04402254531628119,
        "docs": 0.04402254531628119,
        "auto": 0.04402254531628119,
        "update_existing": 0.04402254531628119,
        "refresh": 0.04402254531628119,
        "an": 0.04402254531628119,
        "existing": 0.04402254531628119,
        "instead": 0.04402254531628119,
        "of": 0.04402254531628119,
        "opening": 0.04402254531628119,
        "a": 0.04402254531628119,
        "new": 0.04402254531628119,
        "one": 0.04402254531628119,
        "analyzers": 0.04402254531628119,
        "enabled": 0.04402254531628119,
        "language": 0.04402254531628119,
        "build": 0.08804509063256238,
        "dependencies": 0.04402254531628119,
        "patterns": 0.04402254531628119,
        "exclude_paths": 0.04402254531628119,
        "git": 0.04402254531628119,
        "node_modules": 0.04402254531628119,
        "dist": 0.04402254531628119,
        "ci": 0.04402254531628119,
        "update": 0.04402254531628119,
        "if": 0.08804509063256238,
        "these": 0.04402254531628119,
        "paths": 0.04402254531628119,
        "change": 0.04402254531628119,
        "watched_globs": 0.04402254531628119,
        "src": 0.04402254531628119,
        "app": 0.04402254531628119,
        "cmd": 0.04402254531628119,
        "pom": 0.04402254531628119,
        "xml": 0.04402254531628119,
        "gradle": 0.04402254531628119,
        "package": 0.04402254531628119,
        "json": 0.04402254531628119,
        "requirements": 0.04402254531628119,
        "txt": 0.04402254531628119,
        "pyproject": 0.04402254531628119,
        "toml": 0.04402254531628119,
        "dockerfile": 0.04402254531628119,
        "no": 0.04402254531628119,
        "templates_dir": 0.04402254531628119,
        "is": 0.04402254531628119,
        "provided": 0.04402254531628119
      },
      "text": "class Signal: kind: str # \"framework\",\"service\",\"cli\",\"db\",\"queue\",\"dep\",\"entrypoint\",\"test\" name: str detail: Dict[str, str] @dataclass class AnalysisResult: manifest: RepoManifest signals: List[Signal] embedding_index_path: str @dataclass class SectionSpec: key: str # \"intro\",\"features\",\"arch\",\"quickstart\",... required: bool sources: List[str] # preferred retrieval tags template_name: str @dataclass class ReadmeDraft: sections: Dict[str, str] full_markdown: str @dataclass class UpdatePlan: strategy: str # \"full\"|\"patch\" changed_sections: List[str] reasons: Dict[str, str] # section->why ``` --- ## 5) Configuration (`.docgen.yml` at repo root) ```yaml llm: runner: \"ollama\" # or \"llama.cpp\" executable: \"ollama\" # optional override for CLI binaries model: \"llama3:8b-instruct\" # example; local only max_tokens: 2048 temperature: 0.2 readme: style: \"concise\" # or \"comprehensive\" template_pack: \"enterprise\" # optional bundle shipped with docgen required_sections: - intro - features - architecture - quickstart - configuration - build_and_test - deployment - troubleshooting - faq - license validation: no_hallucination: true # set to false or use DOCGEN_VALIDATION_NO_HALLUCINATION=0 to disable publish: mode: \"pr\" # \"commit\" | \"pr\" | \"dry-run\" branch_prefix: \"docgen/\" labels: - \"docs:auto\" update_existing: true # refresh an existing PR instead of opening a new one analyzers: enabled: - language - build - dependencies - patterns exclude_paths: - \".git/\" - \"node_modules/\" - \"dist/\" ci: # Only update README if these paths change watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" - \"requirements.txt\" - \"pyproject.toml\" - \"Dockerfile\" ``` > If no `readme.templates_dir` is provided, docgen",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#7",
      "vector": {
        "node_modules": 0.05006261743217589,
        "dist": 0.05006261743217589,
        "ci": 0.15018785229652767,
        "only": 0.10012523486435178,
        "update": 0.15018785229652767,
        "readme": 0.25031308716087947,
        "if": 0.15018785229652767,
        "these": 0.05006261743217589,
        "paths": 0.05006261743217589,
        "change": 0.05006261743217589,
        "watched_globs": 0.10012523486435178,
        "src": 0.10012523486435178,
        "app": 0.05006261743217589,
        "cmd": 0.05006261743217589,
        "pom": 0.10012523486435178,
        "xml": 0.10012523486435178,
        "build": 0.25031308716087947,
        "gradle": 0.10012523486435178,
        "package": 0.05006261743217589,
        "json": 0.05006261743217589,
        "requirements": 0.05006261743217589,
        "txt": 0.05006261743217589,
        "pyproject": 0.05006261743217589,
        "toml": 0.05006261743217589,
        "dockerfile": 0.10012523486435178,
        "no": 0.10012523486435178,
        "templates_dir": 0.05006261743217589,
        "is": 0.05006261743217589,
        "provided": 0.05006261743217589,
        "docgen": 0.25031308716087947,
        "automatically": 0.05006261743217589,
        "picks": 0.05006261743217589,
        "up": 0.05006261743217589,
        "docs": 0.05006261743217589,
        "templates": 0.10012523486435178,
        "bundles": 0.05006261743217589,
        "in": 0.10012523486435178,
        "the": 0.05006261743217589,
        "repository": 0.05006261743217589,
        "root": 0.05006261743217589,
        "and": 0.10012523486435178,
        "supports": 0.05006261743217589,
        "built": 0.05006261743217589,
        "template": 0.05006261743217589,
        "packs": 0.05006261743217589,
        "via": 0.10012523486435178,
        "template_pack": 0.05006261743217589,
        "6": 0.25031308716087947,
        "workflows": 0.05006261743217589,
        "1": 0.15018785229652767,
        "initialization": 0.05006261743217589,
        "repo": 0.05006261743217589,
        "without": 0.10012523486435178,
        "scan": 0.05006261743217589,
        "analyze": 0.05006261743217589,
        "manifest": 0.05006261743217589,
        "signals": 0.05006261743217589,
        "embeddings": 0.05006261743217589,
        "2": 0.15018785229652767,
        "prompt": 0.05006261743217589,
        "with": 0.10012523486435178,
        "default": 0.05006261743217589,
        "include": 0.05006261743217589,
        "getting": 0.05006261743217589,
        "started": 0.05006261743217589,
        "suggestions": 0.05006261743217589,
        "3": 0.15018785229652767,
        "generate": 0.10012523486435178,
        "sections": 0.20025046972870356,
        "sequentially": 0.05006261743217589,
        "streaming": 0.05006261743217589,
        "4": 0.10012523486435178,
        "post": 0.10012523486435178,
        "process": 0.10012523486435178,
        "toc": 0.05006261743217589,
        "badges": 0.05006261743217589,
        "status": 0.05006261743217589,
        "placeholder": 0.05006261743217589,
        "lint": 0.05006261743217589,
        "5": 0.10012523486435178,
        "publish": 0.05006261743217589,
        "direct": 0.05006261743217589,
        "commit": 0.10012523486435178,
        "md": 0.05006261743217589,
        "artifacts": 0.05006261743217589,
        "on": 0.05006261743217589,
        "pr": 0.10012523486435178,
        "detect": 0.05006261743217589,
        "changes": 0.05006261743217589,
        "git": 0.05006261743217589,
        "diff": 0.05006261743217589,
        "map": 0.05006261743217589,
        "files": 0.05006261743217589,
        "to": 0.15018785229652767,
        "using": 0.05006261743217589,
        "a": 0.05006261743217589,
        "rules": 0.05006261743217589,
        "matrix": 0.05006261743217589,
        "test": 0.05006261743217589,
        "quick": 0.05006261743217589,
        "start": 0.05006261743217589,
        "k8s": 0.05006261743217589,
        "deployment": 0.05006261743217589,
        "entrypoints": 0.05006261743217589,
        "architecture": 0.05006261743217589,
        "features": 0.05006261743217589,
        "decide": 0.05006261743217589,
        "updateplan": 0.05006261743217589,
        "patch": 0.05006261743217589,
        "impacted": 0.05006261743217589,
        "regenerate": 0.15018785229652767,
        "those": 0.05006261743217589,
        "skip": 0.05006261743217589,
        "changed": 0.05006261743217589,
        "file": 0.05006261743217589,
        "matches": 0.05006261743217589,
        "yml": 0.05006261743217589,
        "allows": 0.05006261743217589,
        "avoid": 0.05006261743217589,
        "unnecessary": 0.05006261743217589,
        "runs": 0.05006261743217589,
        "rag": 0.05006261743217589,
        "retrieval": 0.05006261743217589,
        "fetch": 0.05006261743217589,
        "top": 0.05006261743217589,
        "k": 0.05006261743217589,
        "chunks": 0.05006261743217589,
        "relevant": 0.05006261743217589,
        "each": 0.05006261743217589,
        "section": 0.10012523486435178,
        "open": 0.05006261743217589,
        "summary": 0.05006261743217589,
        "of": 0.05006261743217589,
        "deltas": 0.05006261743217589,
        "dry": 0.10012523486435178,
        "run": 0.10012523486435178,
        "support": 0.05006261743217589,
        "computes": 0.05006261743217589,
        "diffs": 0.05006261743217589,
        "scorecards": 0.05006261743217589,
        "writing": 0.05006261743217589,
        "or": 0.10012523486435178,
        "publishing": 0.05006261743217589,
        "manual": 0.05006261743217589,
        "full": 0.05006261743217589,
        "intro": 0.05006261743217589,
        "arch": 0.05006261743217589,
        "7": 0.05006261743217589,
        "contract": 0.05006261743217589
      },
      "text": "- \"node_modules/\" - \"dist/\" ci: # Only update README if these paths change watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" - \"requirements.txt\" - \"pyproject.toml\" - \"Dockerfile\" ``` > If no `readme.templates_dir` is provided, docgen automatically picks up `docs/templates/` bundles in the repository root and supports built-in template packs via `readme.template_pack`. --- ## 6) Workflows ### 6.1 Initialization (Repo without README) 1. **Scan & Analyze** \u2192 Manifest + Signals + Embeddings. 2. **Prompt Build** with default templates, include \u201cgetting started\u201d suggestions. 3. **Generate Sections** sequentially (streaming). 4. **Post-process** \u2192 ToC, badges (build status placeholder), lint. 5. **Publish**: direct commit `README.md` + `.docgen/` artifacts. ### 6.2 Update on Commit/PR 1. **Detect changes** via Git diff; map files to sections using a rules matrix: * `pom.xml`/`build.gradle` \u2192 *Build & Test*, *Quick Start*. * `Dockerfile`/`k8s` \u2192 *Deployment*. * `src/**` entrypoints \u2192 *Architecture*, *Features*. 2. **Decide UpdatePlan**: patch impacted sections; regenerate only those. 3. **Skip** if no changed file matches `.docgen.yml` `ci.watched_globs` (allows CI to avoid unnecessary runs). 4. **RAG retrieval**: fetch top-k chunks relevant to each section. 5. **Generate** \u2192 **Post-process** \u2192 **Open PR** with summary of deltas. 6. Dry-run support: `docgen update --dry-run` computes diffs and scorecards without writing or publishing. ### 6.3 Regenerate (Manual) * `docgen regenerate --full` or `--sections intro,arch`. --- ## 7) Section Contract",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#8",
      "vector": {
        "generate": 0.05923488777590923,
        "post": 0.11846977555181847,
        "process": 0.05923488777590923,
        "open": 0.05923488777590923,
        "pr": 0.05923488777590923,
        "with": 0.05923488777590923,
        "summary": 0.05923488777590923,
        "of": 0.05923488777590923,
        "deltas": 0.05923488777590923,
        "6": 0.11846977555181847,
        "dry": 0.11846977555181847,
        "run": 0.11846977555181847,
        "support": 0.11846977555181847,
        "docgen": 0.11846977555181847,
        "update": 0.05923488777590923,
        "computes": 0.05923488777590923,
        "diffs": 0.05923488777590923,
        "and": 0.11846977555181847,
        "scorecards": 0.05923488777590923,
        "without": 0.05923488777590923,
        "writing": 0.05923488777590923,
        "or": 0.1777046633277277,
        "publishing": 0.05923488777590923,
        "3": 0.05923488777590923,
        "regenerate": 0.11846977555181847,
        "manual": 0.05923488777590923,
        "full": 0.05923488777590923,
        "sections": 0.05923488777590923,
        "intro": 0.11846977555181847,
        "arch": 0.05923488777590923,
        "7": 0.05923488777590923,
        "section": 0.23693955110363693,
        "contract": 0.05923488777590923,
        "readme": 0.05923488777590923,
        "what": 0.05923488777590923,
        "why": 0.05923488777590923,
        "who": 0.05923488777590923,
        "it": 0.05923488777590923,
        "s": 0.05923488777590923,
        "for": 0.05923488777590923,
        "key": 0.05923488777590923,
        "features": 0.05923488777590923,
        "bullets": 0.05923488777590923,
        "grounded": 0.05923488777590923,
        "in": 0.05923488777590923,
        "real": 0.05923488777590923,
        "repo": 0.11846977555181847,
        "signals": 0.11846977555181847,
        "architecture": 0.05923488777590923,
        "overview": 0.05923488777590923,
        "diagram": 0.05923488777590923,
        "ascii": 0.05923488777590923,
        "components": 0.05923488777590923,
        "quick": 0.05923488777590923,
        "start": 0.05923488777590923,
        "minimal": 0.05923488777590923,
        "commands": 0.23693955110363693,
        "per": 0.11846977555181847,
        "build": 0.11846977555181847,
        "system": 0.11846977555181847,
        "configuration": 0.05923488777590923,
        "env": 0.05923488777590923,
        "vars": 0.05923488777590923,
        "files": 0.05923488777590923,
        "examples": 0.05923488777590923,
        "test": 0.05923488777590923,
        "coverage": 0.05923488777590923,
        "hint": 0.05923488777590923,
        "deployment": 0.05923488777590923,
        "container": 0.05923488777590923,
        "k8s": 0.05923488777590923,
        "instructions": 0.05923488777590923,
        "if": 0.1777046633277277,
        "detected": 0.1777046633277277,
        "troubleshooting": 0.05923488777590923,
        "common": 0.05923488777590923,
        "failures": 0.05923488777590923,
        "faq": 0.05923488777590923,
        "5": 0.05923488777590923,
        "10": 0.05923488777590923,
        "concise": 0.05923488777590923,
        "q": 0.05923488777590923,
        "a": 0.11846977555181847,
        "contributing": 0.11846977555181847,
        "md": 0.05923488777590923,
        "absent": 0.05923488777590923,
        "license": 0.05923488777590923,
        "templated": 0.05923488777590923,
        "each": 0.05923488777590923,
        "must": 0.05923488777590923,
        "be": 0.11846977555181847,
        "independently": 0.05923488777590923,
        "regenerable": 0.05923488777590923,
        "self": 0.05923488777590923,
        "contained": 0.05923488777590923,
        "8": 0.05923488777590923,
        "prompting": 0.05923488777590923,
        "strategy": 0.05923488777590923,
        "local": 0.05923488777590923,
        "llm": 0.05923488777590923,
        "message": 0.11846977555181847,
        "fixed": 0.05923488777590923,
        "guardrails": 0.05923488777590923,
        "you": 0.05923488777590923,
        "are": 0.05923488777590923,
        "senior": 0.05923488777590923,
        "dev": 0.05923488777590923,
        "doc": 0.05923488777590923,
        "writer": 0.05923488777590923,
        "precise": 0.05923488777590923,
        "cite": 0.05923488777590923,
        "facts": 0.05923488777590923,
        "only": 0.05923488777590923,
        "no": 0.05923488777590923,
        "speculation": 0.05923488777590923,
        "never": 0.05923488777590923,
        "invent": 0.05923488777590923,
        "prefer": 0.05923488777590923,
        "by": 0.05923488777590923,
        "analyzers": 0.05923488777590923,
        "user": 0.05923488777590923,
        "objective": 0.05923488777590923,
        "constraints": 0.05923488777590923,
        "tone": 0.05923488777590923,
        "length": 0.05923488777590923,
        "inject": 0.05923488777590923,
        "top": 0.05923488777590923,
        "k": 0.05923488777590923,
        "chunks": 0.05923488777590923,
        "rag": 0.05923488777590923,
        "provide": 0.05923488777590923,
        "style": 0.05923488777590923,
        "tokens": 0.05923488777590923,
        "headings": 0.05923488777590923,
        "code": 0.05923488777590923,
        "blocks": 0.05923488777590923,
        "tables": 0.05923488777590923,
        "filters": 0.05923488777590923,
        "refuse": 0.05923488777590923,
        "insufficient": 0.05923488777590923,
        "evidence": 0.05923488777590923,
        "fall": 0.05923488777590923,
        "back": 0.05923488777590923,
        "to": 0.05923488777590923,
        "template": 0.05923488777590923,
        "stubs": 0.05923488777590923,
        "9": 0.05923488777590923,
        "language": 0.05923488777590923,
        "project": 0.05923488777590923,
        "poc": 0.11846977555181847,
        "targets": 0.05923488777590923,
        "tier": 0.11846977555181847,
        "1": 0.05923488777590923,
        "python": 0.05923488777590923,
        "poetry": 0.05923488777590923,
        "setuptools": 0.05923488777590923,
        "java": 0.05923488777590923,
        "maven": 0.05923488777590923,
        "gradle": 0.05923488777590923,
        "spring": 0.05923488777590923,
        "boot": 0.05923488777590923,
        "node": 0.05923488777590923,
        "js": 0.05923488777590923,
        "npm": 0.05923488777590923,
        "pnpm": 0.05923488777590923,
        "express": 0.05923488777590923,
        "next": 0.05923488777590923,
        "2": 0.05923488777590923,
        "soon": 0.05923488777590923,
        "go": 0.05923488777590923,
        "modules": 0.05923488777590923
      },
      "text": "**Generate** \u2192 **Post-process** \u2192 **Open PR** with summary of deltas. 6. Dry-run support: `docgen update --dry-run` computes diffs and scorecards without writing or publishing. ### 6.3 Regenerate (Manual) * `docgen regenerate --full` or `--sections intro,arch`. --- ## 7) Section Contract (README) * **Intro**: what, why, who it\u2019s for * **Key Features**: bullets grounded in real repo signals * **Architecture**: overview diagram (ASCII) + components * **Quick Start**: minimal commands (per build system) * **Configuration**: env vars, files, examples * **Build & Test**: commands, coverage hint * **Deployment**: container/K8s instructions if detected * **Troubleshooting**: common failures * **FAQ**: 5\u201310 concise Q\\&A * **Contributing** (if `CONTRIBUTING.md` absent) * **License** (detected or templated) > Each section must be independently regenerable and self-contained. --- ## 8) Prompting Strategy (Local LLM) * **System message (fixed guardrails)**: * \u201cYou are a senior dev doc writer. Be precise. Cite repo facts only. No speculation.\u201d * \u201cNever invent commands. Prefer commands detected by analyzers.\u201d * **User message per section**: * Section objective + constraints (tone, length). * Inject **Signals** + **Top-k chunks** (RAG). * Provide **style tokens** (headings, code blocks, tables). * **Post-filters**: refuse if insufficient evidence; fall back to template stubs. --- ## 9) Language & Project Support (POC targets) * **Tier-1 (POC)**: Python (Poetry/Setuptools), Java (Maven/Gradle, Spring Boot), Node.js (npm/pnpm, Express/Next). * **Tier-2 (soon)**: Go (modules),",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#9",
      "vector": {
        "code": 0.0636929755298482,
        "blocks": 0.0318464877649241,
        "tables": 0.0318464877649241,
        "post": 0.0636929755298482,
        "filters": 0.0318464877649241,
        "refuse": 0.0318464877649241,
        "if": 0.0318464877649241,
        "insufficient": 0.0318464877649241,
        "evidence": 0.0318464877649241,
        "fall": 0.0318464877649241,
        "back": 0.0318464877649241,
        "to": 0.0318464877649241,
        "template": 0.0318464877649241,
        "stubs": 0.0636929755298482,
        "9": 0.0318464877649241,
        "language": 0.0636929755298482,
        "project": 0.0318464877649241,
        "support": 0.0318464877649241,
        "poc": 0.0636929755298482,
        "targets": 0.0318464877649241,
        "tier": 0.0636929755298482,
        "1": 0.0318464877649241,
        "python": 0.0955394632947723,
        "poetry": 0.0318464877649241,
        "setuptools": 0.0318464877649241,
        "java": 0.0318464877649241,
        "maven": 0.0318464877649241,
        "gradle": 0.0318464877649241,
        "spring": 0.0636929755298482,
        "boot": 0.0318464877649241,
        "node": 0.0318464877649241,
        "js": 0.0318464877649241,
        "npm": 0.0318464877649241,
        "pnpm": 0.0318464877649241,
        "express": 0.0318464877649241,
        "next": 0.0318464877649241,
        "2": 0.0318464877649241,
        "soon": 0.0318464877649241,
        "go": 0.0318464877649241,
        "modules": 0.0318464877649241,
        "rust": 0.0318464877649241,
        "cargo": 0.0318464877649241,
        "ruby": 0.0318464877649241,
        "bundler": 0.0318464877649241,
        "php": 0.0318464877649241,
        "composer": 0.0318464877649241,
        "detection": 0.0318464877649241,
        "via": 0.0318464877649241,
        "file": 0.0318464877649241,
        "heuristics": 0.0318464877649241,
        "optional": 0.0636929755298482,
        "tree": 0.0318464877649241,
        "sitter": 0.0318464877649241,
        "for": 0.0636929755298482,
        "function": 0.0318464877649241,
        "class": 0.0636929755298482,
        "extraction": 0.0318464877649241,
        "pluggable": 0.0318464877649241,
        "entry": 0.0318464877649241,
        "points": 0.0318464877649241,
        "main": 0.0636929755298482,
        "springbootapplication": 0.0318464877649241,
        "fastapi": 0.0636929755298482,
        "app": 0.1273859510596964,
        "bin": 0.0318464877649241,
        "cmd": 0.0318464877649241,
        "10": 0.0318464877649241,
        "interfaces": 0.0318464877649241,
        "skeleton": 0.0318464877649241,
        "docgen": 0.0318464877649241,
        "__init__": 0.0318464877649241,
        "py": 0.7961621941231025,
        "cli": 0.0955394632947723,
        "click": 0.0318464877649241,
        "typer": 0.0636929755298482,
        "failsafe": 0.0318464877649241,
        "fail": 0.0318464877649241,
        "safe": 0.0318464877649241,
        "readme": 0.0318464877649241,
        "logging": 0.0636929755298482,
        "configuration": 0.0318464877649241,
        "helpers": 0.0318464877649241,
        "orchestrator": 0.0318464877649241,
        "repo_scanner": 0.0318464877649241,
        "analyzers": 0.0318464877649241,
        "base": 0.0318464877649241,
        "analyzer": 0.0955394632947723,
        "abc": 0.1592324388246205,
        "build": 0.0318464877649241,
        "dependencies": 0.0318464877649241,
        "entrypoints": 0.0318464877649241,
        "patterns": 0.0318464877649241,
        "rag": 0.0318464877649241,
        "embedder": 0.0318464877649241,
        "local": 0.0318464877649241,
        "embedding": 0.0318464877649241,
        "model": 0.0318464877649241,
        "store": 0.0318464877649241,
        "prompting": 0.0318464877649241,
        "builder": 0.0318464877649241,
        "jinja2": 0.0318464877649241,
        "templates": 0.0636929755298482,
        "token": 0.0318464877649241,
        "mgmt": 0.0318464877649241,
        "constants": 0.0318464877649241,
        "j2": 0.0318464877649241,
        "per": 0.0318464877649241,
        "section": 0.0318464877649241,
        "llm": 0.0318464877649241,
        "runner": 0.0318464877649241,
        "adapter": 0.0318464877649241,
        "ollama": 0.0318464877649241,
        "llama": 0.0318464877649241,
        "cpp": 0.0318464877649241,
        "postproc": 0.0318464877649241,
        "lint": 0.0318464877649241,
        "links": 0.0318464877649241,
        "markers": 0.0318464877649241,
        "toc": 0.0318464877649241,
        "git": 0.0318464877649241,
        "diff": 0.0318464877649241,
        "publisher": 0.0318464877649241,
        "config": 0.0318464877649241,
        "models": 0.0636929755298482,
        "from": 0.0636929755298482,
        "import": 0.0636929755298482,
        "abstractmethod": 0.0955394632947723,
        "repomanifest": 0.0955394632947723,
        "signal": 0.0636929755298482,
        "def": 0.1592324388246205,
        "supports": 0.0318464877649241,
        "self": 0.0636929755298482,
        "manifest": 0.0636929755298482,
        "bool": 0.0955394632947723,
        "analyze": 0.0318464877649241,
        "list": 0.0318464877649241,
        "command": 0.0955394632947723,
        "init": 0.0318464877649241,
        "path": 0.0636929755298482,
        "str": 0.1592324388246205,
        "publish": 0.0318464877649241,
        "true": 0.0318464877649241,
        "update": 0.0318464877649241,
        "event": 0.0318464877649241,
        "commit": 0.0318464877649241,
        "diff_base": 0.0318464877649241,
        "origin": 0.0318464877649241,
        "regenerate": 0.0318464877649241,
        "sections": 0.0318464877649241,
        "full": 0.0318464877649241,
        "false": 0.0318464877649241,
        "service": 0.0318464877649241,
        "mode": 0.0318464877649241
      },
      "text": "code blocks, tables). * **Post-filters**: refuse if insufficient evidence; fall back to template stubs. --- ## 9) Language & Project Support (POC targets) * **Tier-1 (POC)**: Python (Poetry/Setuptools), Java (Maven/Gradle, Spring Boot), Node.js (npm/pnpm, Express/Next). * **Tier-2 (soon)**: Go (modules), Rust (Cargo), Ruby (Bundler), PHP (Composer). * Detection via: * File heuristics + optional tree-sitter for function/class extraction (pluggable). * Entry points: `main()`; Spring `@SpringBootApplication`; FastAPI app; `bin/`, `cmd/`. --- ## 10) Interfaces (Code Skeleton) ``` docgen/ __init__.py cli.py # click/typer CLI failsafe.py # fail-safe README stubs logging.py # logging configuration helpers orchestrator.py repo_scanner.py analyzers/ base.py # Analyzer ABC language.py build.py dependencies.py entrypoints.py patterns.py rag/ embedder.py # local embedding model store.py prompting/ builder.py # Jinja2 templates, token mgmt constants.py templates/ # *.j2 per section llm/ runner.py # adapter for ollama/llama.cpp postproc/ lint.py links.py markers.py toc.py git/ diff.py publisher.py config.py models.py ``` **Analyzer ABC** ```python from abc import ABC, abstractmethod from .models import RepoManifest, Signal class Analyzer(ABC): @abstractmethod def supports(self, manifest: RepoManifest) -> bool: ... @abstractmethod def analyze(self, manifest: RepoManifest) -> list[Signal]: ... ``` **CLI (Typer)** ```python @app.command() def init(path: str = \".\", publish: bool = True): ... @app.command() def update(path: str = \".\", event: str = \"commit\", diff_base: str = \"origin/main\"): ... @app.command() def regenerate(sections: str = \"\", full: bool = False): ... ``` **FastAPI (optional service mode)** * `POST",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#10",
      "vector": {
        "publish": 0.17586311452816478,
        "bool": 0.11724207635210984,
        "true": 0.05862103817605492,
        "app": 0.17586311452816478,
        "command": 0.11724207635210984,
        "def": 0.11724207635210984,
        "update": 0.17586311452816478,
        "path": 0.11724207635210984,
        "str": 0.23448415270421968,
        "event": 0.05862103817605492,
        "commit": 0.11724207635210984,
        "diff_base": 0.05862103817605492,
        "origin": 0.05862103817605492,
        "main": 0.05862103817605492,
        "regenerate": 0.05862103817605492,
        "sections": 0.23448415270421968,
        "full": 0.05862103817605492,
        "false": 0.05862103817605492,
        "fastapi": 0.05862103817605492,
        "optional": 0.11724207635210984,
        "service": 0.05862103817605492,
        "mode": 0.05862103817605492,
        "post": 0.35172622905632955,
        "analyze": 0.05862103817605492,
        "generate": 0.05862103817605492,
        "arch": 0.05862103817605492,
        "quickstart": 0.17586311452816478,
        "get": 0.05862103817605492,
        "status": 0.05862103817605492,
        "run_id": 0.05862103817605492,
        "11": 0.05862103817605492,
        "change": 0.05862103817605492,
        "impact": 0.05862103817605492,
        "matrix": 0.05862103817605492,
        "examples": 0.05862103817605492,
        "changed": 0.11724207635210984,
        "pattern": 0.05862103817605492,
        "to": 0.11724207635210984,
        "rebuild": 0.05862103817605492,
        "notes": 0.05862103817605492,
        "pom": 0.05862103817605492,
        "xml": 0.05862103817605492,
        "build": 0.23448415270421968,
        "gradle": 0.05862103817605492,
        "_and": 0.11724207635210984,
        "_test": 0.11724207635210984,
        "recompute": 0.05862103817605492,
        "commands": 0.05862103817605492,
        "requirements": 0.05862103817605492,
        "txt": 0.05862103817605492,
        "pyproject": 0.05862103817605492,
        "toml": 0.05862103817605492,
        "install": 0.05862103817605492,
        "steps": 0.05862103817605492,
        "dockerfile": 0.05862103817605492,
        "k8s": 0.05862103817605492,
        "deployment": 0.05862103817605492,
        "container": 0.05862103817605492,
        "changes": 0.05862103817605492,
        "src": 0.05862103817605492,
        "cmd": 0.05862103817605492,
        "features": 0.05862103817605492,
        "architecture": 0.17586311452816478,
        "if": 0.05862103817605492,
        "entrypoint": 0.05862103817605492,
        "intro": 0.05862103817605492,
        "too": 0.05862103817605492,
        "docs": 0.05862103817605492,
        "all": 0.05862103817605492,
        "patch": 0.05862103817605492,
        "prefer": 0.05862103817605492,
        "doc": 0.05862103817605492,
        "driven": 0.05862103817605492,
        "readme": 0.11724207635210984,
        "md": 0.05862103817605492,
        "none": 0.05862103817605492,
        "unless": 0.05862103817605492,
        "empty": 0.05862103817605492,
        "prevent": 0.05862103817605492,
        "loops": 0.05862103817605492,
        "12": 0.05862103817605492,
        "processing": 0.05862103817605492,
        "rules": 0.05862103817605492,
        "headings": 0.05862103817605492,
        "start": 0.05862103817605492,
        "at": 0.05862103817605492,
        "for": 0.11724207635210984,
        "title": 0.05862103817605492,
        "then": 0.05862103817605492,
        "add": 0.05862103817605492,
        "auto": 0.05862103817605492,
        "toc": 0.05862103817605492,
        "level": 0.05862103817605492,
        "3": 0.05862103817605492,
        "validate": 0.05862103817605492,
        "code": 0.05862103817605492,
        "blocks": 0.05862103817605492,
        "bash": 0.05862103817605492,
        "python": 0.05862103817605492,
        "convert": 0.05862103817605492,
        "absolute": 0.05862103817605492,
        "github": 0.05862103817605492,
        "links": 0.05862103817605492,
        "relative": 0.05862103817605492,
        "where": 0.05862103817605492,
        "possible": 0.05862103817605492,
        "ensure": 0.05862103817605492,
        "idempotency": 0.05862103817605492,
        "only": 0.05862103817605492,
        "edit": 0.05862103817605492,
        "between": 0.05862103817605492,
        "managed": 0.05862103817605492,
        "markers": 0.11724207635210984,
        "docgen": 0.11724207635210984,
        "begin": 0.05862103817605492,
        "end": 0.05862103817605492,
        "13": 0.05862103817605492,
        "git": 0.05862103817605492,
        "ci": 0.05862103817605492,
        "integration": 0.05862103817605492,
        "local": 0.05862103817605492,
        "pre": 0.05862103817605492,
        "forbid": 0.05862103817605492,
        "direct": 0.05862103817605492,
        "edits": 0.05862103817605492,
        "outside": 0.05862103817605492,
        "merge": 0.05862103817605492,
        "checkout": 0.05862103817605492,
        "remind": 0.05862103817605492
      },
      "text": "= \".\", publish: bool = True): ... @app.command() def update(path: str = \".\", event: str = \"commit\", diff_base: str = \"origin/main\"): ... @app.command() def regenerate(sections: str = \"\", full: bool = False): ... ``` **FastAPI (optional service mode)** * `POST /analyze` * `POST /generate?sections=arch,quickstart` * `POST /publish` * `GET /status/{run_id}` --- ## 11) Change Impact Matrix (examples) | Changed Path Pattern | Sections to Rebuild | Notes | | ------------------------------------ | ---------------------------- | --------------------------------------- | | `pom.xml`, `build.gradle*` | build\\_and\\_test, quickstart | Recompute build commands | | `requirements.txt`, `pyproject.toml` | build\\_and\\_test, quickstart | Update install steps | | `Dockerfile`, `k8s/**` | deployment | Publish container changes | | `src/**`, `app/**`, `cmd/**` | features, architecture | If entrypoint changed, update intro too | | `docs/**` | all (patch) | Prefer doc-driven | | `README.md` | none (unless empty) | Prevent loops | --- ## 12) Post-Processing Rules * Headings start at `#` for title then `##` for sections. * Add **auto ToC** (<= level 3). * Validate code blocks (` ```bash`, ` ```python`). * Convert absolute GitHub links to relative where possible. * Ensure **idempotency**: only edit between managed markers: * `<!-- docgen:begin:architecture -->` \u2026 `<!-- docgen:end:architecture -->` --- ## 13) Git & CI Integration ### Local * **pre-commit**: forbid direct README edits outside markers (optional). * **post-merge / post-checkout**: remind",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#11",
      "vector": {
        "possible": 0.11162911443718952,
        "ensure": 0.05581455721859476,
        "idempotency": 0.05581455721859476,
        "only": 0.16744367165578428,
        "edit": 0.05581455721859476,
        "between": 0.05581455721859476,
        "managed": 0.05581455721859476,
        "markers": 0.11162911443718952,
        "docgen": 0.22325822887437904,
        "begin": 0.05581455721859476,
        "architecture": 0.11162911443718952,
        "end": 0.05581455721859476,
        "13": 0.05581455721859476,
        "git": 0.11162911443718952,
        "ci": 0.11162911443718952,
        "integration": 0.05581455721859476,
        "local": 0.16744367165578428,
        "pre": 0.05581455721859476,
        "commit": 0.05581455721859476,
        "forbid": 0.05581455721859476,
        "direct": 0.05581455721859476,
        "readme": 0.05581455721859476,
        "edits": 0.05581455721859476,
        "outside": 0.05581455721859476,
        "optional": 0.16744367165578428,
        "post": 0.16744367165578428,
        "merge": 0.05581455721859476,
        "checkout": 0.11162911443718952,
        "remind": 0.05581455721859476,
        "to": 0.05581455721859476,
        "run": 0.05581455721859476,
        "update": 0.16744367165578428,
        "github": 0.11162911443718952,
        "gitlab": 0.05581455721859476,
        "bitbucket": 0.05581455721859476,
        "on": 0.05581455721859476,
        "push": 0.05581455721859476,
        "pr": 0.2790727860929738,
        "1": 0.11162911443718952,
        "repo": 0.11162911443718952,
        "2": 0.16744367165578428,
        "event": 0.05581455721859476,
        "diff": 0.11162911443718952,
        "base": 0.05581455721859476,
        "base_sha": 0.05581455721859476,
        "3": 0.05581455721859476,
        "if": 0.16744367165578428,
        "changes": 0.05581455721859476,
        "open": 0.05581455721859476,
        "with": 0.05581455721859476,
        "labeled": 0.05581455721859476,
        "docs": 0.11162911443718952,
        "auto": 0.05581455721859476,
        "tokenless": 0.05581455721859476,
        "mode": 0.05581455721859476,
        "created": 0.05581455721859476,
        "from": 0.05581455721859476,
        "a": 0.05581455721859476,
        "app": 0.05581455721859476,
        "bot": 0.05581455721859476,
        "account": 0.05581455721859476,
        "14": 0.05581455721859476,
        "quality": 0.05581455721859476,
        "gates": 0.05581455721859476,
        "evaluation": 0.05581455721859476,
        "consistency": 0.05581455721859476,
        "checks": 0.05581455721859476,
        "commands": 0.11162911443718952,
        "exist": 0.05581455721859476,
        "in": 0.11162911443718952,
        "ports": 0.05581455721859476,
        "env": 0.05581455721859476,
        "vars": 0.05581455721859476,
        "match": 0.05581455721859476,
        "configs": 0.05581455721859476,
        "no": 0.11162911443718952,
        "hallucinations": 0.05581455721859476,
        "reject": 0.05581455721859476,
        "new": 0.05581455721859476,
        "facts": 0.05581455721859476,
        "not": 0.05581455721859476,
        "found": 0.11162911443718952,
        "signals": 0.05581455721859476,
        "rag": 0.11162911443718952,
        "style": 0.05581455721859476,
        "concise": 0.05581455721859476,
        "paragraphs": 0.05581455721859476,
        "actionable": 0.05581455721859476,
        "filler": 0.05581455721859476,
        "marketing": 0.05581455721859476,
        "scorecard": 0.05581455721859476,
        "0": 0.05581455721859476,
        "100": 0.05581455721859476,
        "coverage": 0.05581455721859476,
        "of": 0.11162911443718952,
        "required": 0.05581455721859476,
        "sections": 0.05581455721859476,
        "30": 0.05581455721859476,
        "buildability": 0.05581455721859476,
        "quick": 0.05581455721859476,
        "start": 0.05581455721859476,
        "20": 0.11162911443718952,
        "link": 0.05581455721859476,
        "validity": 0.05581455721859476,
        "10": 0.16744367165578428,
        "alignment": 0.05581455721859476,
        "w": 0.05581455721859476,
        "change": 0.05581455721859476,
        "set": 0.05581455721859476,
        "lint": 0.05581455721859476,
        "reviewer": 0.05581455721859476,
        "feedback": 0.05581455721859476,
        "loop": 0.05581455721859476,
        "15": 0.05581455721859476,
        "security": 0.05581455721859476,
        "privacy": 0.05581455721859476,
        "llm": 0.11162911443718952,
        "and": 0.05581455721859476,
        "embedding": 0.05581455721859476,
        "models": 0.05581455721859476,
        "respect": 0.05581455721859476,
        "gitignore": 0.05581455721859476,
        "configurable": 0.05581455721859476,
        "exclude_paths": 0.05581455721859476,
        "never": 0.05581455721859476,
        "index": 0.05581455721859476,
        "large": 0.05581455721859476,
        "binaries": 0.05581455721859476,
        "secret": 0.11162911443718952,
        "files": 0.05581455721859476,
        "simple": 0.05581455721859476,
        "scan": 0.05581455721859476,
        "block": 0.05581455721859476,
        "16": 0.05581455721859476,
        "mvp": 0.05581455721859476,
        "plan": 0.05581455721859476,
        "weeks": 0.05581455721859476,
        "suggested": 0.05581455721859476,
        "breakdown": 0.05581455721859476,
        "core": 0.05581455721859476,
        "path": 0.05581455721859476,
        "cli": 0.05581455721859476,
        "scanner": 0.05581455721859476,
        "language": 0.05581455721859476,
        "build": 0.05581455721859476,
        "analyzers": 0.05581455721859476,
        "python": 0.05581455721859476,
        "java": 0.05581455721859476,
        "node": 0.05581455721859476,
        "prompt": 0.05581455721859476,
        "builder": 0.05581455721859476,
        "runner": 0.05581455721859476,
        "ollama": 0.05581455721859476,
        "adapter": 0.05581455721859476,
        "processor": 0.05581455721859476,
        "publisher": 0.05581455721859476,
        "lite": 0.05581455721859476,
        "embed": 0.05581455721859476
      },
      "text": "possible. * Ensure **idempotency**: only edit between managed markers: * `<!-- docgen:begin:architecture -->` \u2026 `<!-- docgen:end:architecture -->` --- ## 13) Git & CI Integration ### Local * **pre-commit**: forbid direct README edits outside markers (optional). * **post-merge / post-checkout**: remind to run `docgen update` (optional). ### CI (GitHub/GitLab/Bitbucket) * On push/PR: 1. Checkout repo. 2. `docgen update --event pr --diff-base $BASE_SHA` 3. If changes \u2192 open/update PR with labeled `docs:auto`. * Tokenless mode possible if PR created from a GitHub App/bot account. --- ## 14) Quality Gates & Evaluation * **Consistency checks**: commands exist in repo; ports/env vars match configs. * **No hallucinations**: reject new facts not found in signals/RAG. * **Style**: concise paragraphs, actionable commands, no filler marketing. * **Scorecard** (0\u2013100): * Coverage of required sections (30) * Buildability of quick start (20) * Link validity (10) * Diff alignment w/ change set (20) * Lint (10) * Reviewer feedback loop (10) --- ## 15) Security & Privacy * **Local only** LLM and embedding models. * Respect `.gitignore` + configurable `exclude_paths`. * Never index large binaries/secret files. * Optional simple **secret scan**; block if found. --- ## 16) MVP Plan (2 weeks suggested breakdown) 1. **Core path**: CLI, Scanner, Language+Build analyzers (Python/Java/Node), Prompt Builder, Local LLM runner (Ollama adapter), Post-processor, Git Publisher (PR). 2. **RAG Lite**: embed only `/docs`,",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#12",
      "vector": {
        "simple": 0.058823529411764705,
        "secret": 0.058823529411764705,
        "scan": 0.058823529411764705,
        "block": 0.058823529411764705,
        "if": 0.058823529411764705,
        "found": 0.058823529411764705,
        "16": 0.058823529411764705,
        "mvp": 0.058823529411764705,
        "plan": 0.058823529411764705,
        "2": 0.17647058823529413,
        "weeks": 0.058823529411764705,
        "suggested": 0.058823529411764705,
        "breakdown": 0.058823529411764705,
        "1": 0.11764705882352941,
        "core": 0.058823529411764705,
        "path": 0.058823529411764705,
        "cli": 0.058823529411764705,
        "scanner": 0.058823529411764705,
        "language": 0.058823529411764705,
        "build": 0.17647058823529413,
        "analyzers": 0.058823529411764705,
        "python": 0.17647058823529413,
        "java": 0.058823529411764705,
        "node": 0.058823529411764705,
        "prompt": 0.058823529411764705,
        "builder": 0.058823529411764705,
        "local": 0.058823529411764705,
        "llm": 0.058823529411764705,
        "runner": 0.058823529411764705,
        "ollama": 0.058823529411764705,
        "adapter": 0.058823529411764705,
        "post": 0.058823529411764705,
        "processor": 0.058823529411764705,
        "git": 0.058823529411764705,
        "publisher": 0.058823529411764705,
        "pr": 0.11764705882352941,
        "rag": 0.058823529411764705,
        "lite": 0.058823529411764705,
        "embed": 0.058823529411764705,
        "only": 0.058823529411764705,
        "docs": 0.058823529411764705,
        "existing": 0.058823529411764705,
        "readme": 0.11764705882352941,
        "top": 0.058823529411764705,
        "20": 0.058823529411764705,
        "largest": 0.058823529411764705,
        "source": 0.058823529411764705,
        "files": 0.058823529411764705,
        "heads": 0.058823529411764705,
        "3": 0.058823529411764705,
        "triggers": 0.058823529411764705,
        "single": 0.058823529411764705,
        "commit": 0.058823529411764705,
        "mode": 0.11764705882352941,
        "as": 0.11764705882352941,
        "stretch": 0.058823529411764705,
        "4": 0.058823529411764705,
        "templates": 0.11764705882352941,
        "8": 0.058823529411764705,
        "sections": 0.058823529411764705,
        "jinja2": 0.23529411764705882,
        "managed": 0.058823529411764705,
        "markers": 0.058823529411764705,
        "5": 0.058823529411764705,
        "config": 0.058823529411764705,
        "docgen": 0.058823529411764705,
        "yml": 0.058823529411764705,
        "minimal": 0.11764705882352941,
        "17": 0.17647058823529413,
        "example": 0.058823529411764705,
        "section": 0.11764705882352941,
        "template": 0.058823529411764705,
        "architecture": 0.23529411764705882,
        "j2": 0.11764705882352941,
        "project_name": 0.11764705882352941,
        "is": 0.058823529411764705,
        "structured": 0.058823529411764705,
        "ascii": 0.058823529411764705,
        "_architecture": 0.058823529411764705,
        "key": 0.058823529411764705,
        "components": 0.11764705882352941,
        "for": 0.11764705882352941,
        "comp": 0.17647058823529413,
        "in": 0.058823529411764705,
        "name": 0.058823529411764705,
        "summary": 0.058823529411764705,
        "endfor": 0.058823529411764705,
        "data": 0.058823529411764705,
        "flow": 0.058823529411764705,
        "data_flow": 0.058823529411764705,
        "generated": 0.058823529411764705,
        "from": 0.058823529411764705,
        "detected": 0.058823529411764705,
        "signals": 0.058823529411764705,
        "signals_summary": 0.058823529411764705,
        "frame": 0.058823529411764705,
        "composed": 0.058823529411764705,
        "intro": 0.058823529411764705,
        "features": 0.17647058823529413,
        "include": 0.058823529411764705,
        "quick": 0.058823529411764705,
        "start": 0.058823529411764705,
        "quickstart": 0.058823529411764705,
        "configuration": 0.11764705882352941,
        "test": 0.058823529411764705,
        "build_and_test": 0.11764705882352941,
        "deployment": 0.17647058823529413,
        "troubleshooting": 0.11764705882352941,
        "faq": 0.11764705882352941,
        "license": 0.11764705882352941,
        "18": 0.058823529411764705,
        "snippets": 0.058823529411764705,
        "change": 0.058823529411764705,
        "impact": 0.058823529411764705,
        "heuristic": 0.058823529411764705,
        "section_rules": 0.058823529411764705,
        "pom": 0.058823529411764705,
        "xml": 0.058823529411764705,
        "gradle": 0.058823529411764705,
        "requirements": 0.058823529411764705,
        "txt": 0.058823529411764705,
        "pyproject": 0.058823529411764705,
        "toml": 0.058823529411764705,
        "package": 0.058823529411764705,
        "json": 0.058823529411764705,
        "dockerfile": 0.058823529411764705,
        "k8s": 0.058823529411764705,
        "src": 0.11764705882352941,
        "app": 0.11764705882352941,
        "cmd": 0.11764705882352941,
        "def": 0.058823529411764705,
        "sections_from_diff": 0.058823529411764705,
        "paths": 0.058823529411764705,
        "list": 0.058823529411764705,
        "str": 0.11764705882352941,
        "set": 0.11764705882352941,
        "out": 0.058823529411764705
      },
      "text": "simple **secret scan**; block if found. --- ## 16) MVP Plan (2 weeks suggested breakdown) 1. **Core path**: CLI, Scanner, Language+Build analyzers (Python/Java/Node), Prompt Builder, Local LLM runner (Ollama adapter), Post-processor, Git Publisher (PR). 2. **RAG Lite**: embed only `/docs`, existing `README`, top 20 largest source files\u2019 heads. 3. **Triggers**: single \u201ccommit\u201d mode; PR mode as stretch. 4. **Templates**: 8 sections, Jinja2; managed markers. 5. **Config**: `.docgen.yml` minimal. --- ## 17) Example Templates ### 17.1 Section Template (Jinja2 \u2014 architecture.j2) ```jinja2 ## Architecture {{ project_name }} is structured as: ``` {{ ascii\\_architecture }} ``` **Key components** {% for comp in components %} - **{{ comp.name }}** \u2014 {{ comp.summary }} {% endfor %} **Data flow** {{ data_flow }} > Generated from detected signals: {{ signals_summary }} ``` ### 17.2 README Frame (composed) ```jinja2 # {{ project_name }} {{ intro }} ## Features {{ features }} {% include \"architecture.j2\" %} ## Quick Start {{ quickstart }} ## Configuration {{ configuration }} ## Build & Test {{ build_and_test }} ## Deployment {{ deployment }} ## Troubleshooting {{ troubleshooting }} ## FAQ {{ faq }} ## License {{ license }} ``` --- ## 18) Minimal Python Snippets **Change impact heuristic** ```python SECTION_RULES = [ (\"build_and_test\", [\"pom.xml\",\"build.gradle\",\"requirements.txt\",\"pyproject.toml\",\"package.json\"]), (\"deployment\", [\"Dockerfile\",\"k8s/\"]), (\"architecture\", [\"src/\",\"app/\",\"cmd/\"]), (\"features\", [\"src/\",\"app/\",\"cmd/\"]), ] def sections_from_diff(paths: list[str]) -> set[str]: out = set() for section,",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#13",
      "vector": {
        "faq": 0.04432422071779363,
        "license": 0.08864844143558726,
        "18": 0.04432422071779363,
        "minimal": 0.04432422071779363,
        "python": 0.13297266215338088,
        "snippets": 0.04432422071779363,
        "change": 0.04432422071779363,
        "impact": 0.04432422071779363,
        "heuristic": 0.04432422071779363,
        "section_rules": 0.08864844143558726,
        "build_and_test": 0.04432422071779363,
        "pom": 0.08864844143558726,
        "xml": 0.08864844143558726,
        "build": 0.13297266215338088,
        "gradle": 0.08864844143558726,
        "requirements": 0.04432422071779363,
        "txt": 0.04432422071779363,
        "pyproject": 0.04432422071779363,
        "toml": 0.04432422071779363,
        "package": 0.08864844143558726,
        "json": 0.08864844143558726,
        "deployment": 0.04432422071779363,
        "dockerfile": 0.04432422071779363,
        "k8s": 0.04432422071779363,
        "architecture": 0.04432422071779363,
        "src": 0.13297266215338088,
        "app": 0.13297266215338088,
        "cmd": 0.13297266215338088,
        "features": 0.04432422071779363,
        "def": 0.08864844143558726,
        "sections_from_diff": 0.04432422071779363,
        "paths": 0.08864844143558726,
        "list": 0.04432422071779363,
        "str": 0.26594532430676177,
        "set": 0.08864844143558726,
        "out": 0.13297266215338088,
        "for": 0.2216211035889681,
        "section": 0.08864844143558726,
        "patterns": 0.13297266215338088,
        "in": 0.2216211035889681,
        "if": 0.2216211035889681,
        "any": 0.04432422071779363,
        "p": 0.13297266215338088,
        "pat": 0.08864844143558726,
        "startswith": 0.04432422071779363,
        "add": 0.04432422071779363,
        "return": 0.13297266215338088,
        "or": 0.08864844143558726,
        "intro": 0.08864844143558726,
        "fall": 0.04432422071779363,
        "back": 0.04432422071779363,
        "to": 0.08864844143558726,
        "uncertain": 0.04432422071779363,
        "managed": 0.04432422071779363,
        "markers": 0.08864844143558726,
        "patch": 0.04432422071779363,
        "replace_block": 0.04432422071779363,
        "md": 0.2216211035889681,
        "key": 0.13297266215338088,
        "new": 0.08864844143558726,
        "start": 0.1772968828711745,
        "f": 0.13297266215338088,
        "docgen": 0.1772968828711745,
        "begin": 0.04432422071779363,
        "end": 0.2216211035889681,
        "and": 0.04432422071779363,
        "pre": 0.08864844143558726,
        "rest": 0.08864844143558726,
        "split": 0.08864844143558726,
        "1": 0.08864844143558726,
        "_": 0.04432422071779363,
        "post": 0.08864844143558726,
        "n": 0.08864844143558726,
        "insert": 0.04432422071779363,
        "missing": 0.04432422071779363,
        "19": 0.04432422071779363,
        "open": 0.04432422071779363,
        "questions": 0.04432422071779363,
        "trade": 0.04432422071779363,
        "offs": 0.04432422071779363,
        "embeddings": 0.04432422071779363,
        "use": 0.04432422071779363,
        "a": 0.13297266215338088,
        "tiny": 0.04432422071779363,
        "local": 0.04432422071779363,
        "model": 0.08864844143558726,
        "vs": 0.08864844143558726,
        "rule": 0.04432422071779363,
        "based": 0.04432422071779363,
        "retrieval": 0.04432422071779363,
        "mvp": 0.04432422071779363,
        "tree": 0.04432422071779363,
        "sitter": 0.04432422071779363,
        "adds": 0.04432422071779363,
        "power": 0.04432422071779363,
        "but": 0.04432422071779363,
        "increases": 0.04432422071779363,
        "footprint": 0.04432422071779363,
        "gate": 0.04432422071779363,
        "behind": 0.04432422071779363,
        "flag": 0.04432422071779363,
        "pr": 0.08864844143558726,
        "author": 0.04432422071779363,
        "bot": 0.04432422071779363,
        "account": 0.04432422071779363,
        "developer": 0.04432422071779363,
        "token": 0.04432422071779363,
        "decide": 0.04432422071779363,
        "per": 0.04432422071779363,
        "environment": 0.04432422071779363,
        "markdown": 0.04432422071779363,
        "diffs": 0.04432422071779363,
        "keep": 0.04432422071779363,
        "sections": 0.04432422071779363,
        "atomic": 0.04432422071779363,
        "minimize": 0.04432422071779363,
        "noisy": 0.04432422071779363,
        "prs": 0.04432422071779363,
        "20": 0.04432422071779363,
        "example": 0.04432422071779363,
        "yml": 0.04432422071779363,
        "mixed": 0.04432422071779363,
        "repo": 0.04432422071779363,
        "yaml": 0.04432422071779363,
        "llm": 0.04432422071779363,
        "runner": 0.04432422071779363,
        "ollama": 0.04432422071779363,
        "llama3": 0.04432422071779363,
        "8b": 0.04432422071779363,
        "instruct": 0.04432422071779363,
        "temperature": 0.04432422071779363,
        "0": 0.04432422071779363,
        "15": 0.04432422071779363,
        "readme": 0.04432422071779363,
        "style": 0.04432422071779363,
        "comprehensive": 0.04432422071779363,
        "publish": 0.04432422071779363,
        "mode": 0.04432422071779363,
        "branch_prefix": 0.04432422071779363,
        "analyzers": 0.04432422071779363,
        "enabled": 0.04432422071779363,
        "language": 0.04432422071779363,
        "dependencies": 0.04432422071779363,
        "exclude_paths": 0.04432422071779363,
        "git": 0.04432422071779363,
        "node_modules": 0.04432422071779363,
        "dist": 0.04432422071779363,
        "target": 0.04432422071779363,
        "ci": 0.04432422071779363,
        "watched_globs": 0.04432422071779363
      },
      "text": "faq }} ## License {{ license }} ``` --- ## 18) Minimal Python Snippets **Change impact heuristic** ```python SECTION_RULES = [ (\"build_and_test\", [\"pom.xml\",\"build.gradle\",\"requirements.txt\",\"pyproject.toml\",\"package.json\"]), (\"deployment\", [\"Dockerfile\",\"k8s/\"]), (\"architecture\", [\"src/\",\"app/\",\"cmd/\"]), (\"features\", [\"src/\",\"app/\",\"cmd/\"]), ] def sections_from_diff(paths: list[str]) -> set[str]: out = set() for section, patterns in SECTION_RULES: if any(p for p in paths for pat in patterns if p.startswith(pat)): out.add(section) return out or {\"intro\"} # fall back to intro if uncertain ``` **Managed markers (patch)** ```python def replace_block(md: str, key: str, new: str) -> str: start = f\"<!-- docgen:begin:{key} -->\" end = f\"<!-- docgen:end:{key} -->\" if start in md and end in md: pre, rest = md.split(start, 1) _, post = rest.split(end, 1) return f\"{pre}{start}\\n{new}\\n{end}{post}\" return md # or insert markers if missing ``` --- ## 19) Open Questions / Trade-offs * **Embeddings**: Use a tiny local model vs. rule-based retrieval for MVP? * **Tree-sitter**: Adds power but increases footprint\u2014gate behind a flag. * **PR author**: Bot account vs. developer token\u2014decide per environment. * **Markdown diffs**: Keep sections atomic to minimize noisy PRs. --- ## 20) Example `.docgen.yml` for a Mixed Repo ```yaml llm: runner: \"ollama\" model: \"llama3:8b-instruct\" temperature: 0.15 readme: style: \"comprehensive\" publish: mode: \"pr\" branch_prefix: \"docgen/\" analyzers: enabled: [language, build, dependencies, patterns] exclude_paths: [\".git/\", \"node_modules/\", \"dist/\", \"target/\"] ci: watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" -",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#14",
      "vector": {
        "runner": 0.07715167498104596,
        "ollama": 0.1543033499620919,
        "model": 0.07715167498104596,
        "llama3": 0.07715167498104596,
        "8b": 0.07715167498104596,
        "instruct": 0.07715167498104596,
        "temperature": 0.07715167498104596,
        "0": 0.07715167498104596,
        "15": 0.07715167498104596,
        "readme": 0.1543033499620919,
        "style": 0.1543033499620919,
        "comprehensive": 0.07715167498104596,
        "publish": 0.07715167498104596,
        "mode": 0.07715167498104596,
        "pr": 0.1543033499620919,
        "branch_prefix": 0.07715167498104596,
        "docgen": 0.23145502494313785,
        "analyzers": 0.1543033499620919,
        "enabled": 0.07715167498104596,
        "language": 0.07715167498104596,
        "build": 0.1543033499620919,
        "dependencies": 0.07715167498104596,
        "patterns": 0.07715167498104596,
        "exclude_paths": 0.07715167498104596,
        "git": 0.07715167498104596,
        "node_modules": 0.07715167498104596,
        "dist": 0.07715167498104596,
        "target": 0.07715167498104596,
        "ci": 0.07715167498104596,
        "watched_globs": 0.07715167498104596,
        "src": 0.07715167498104596,
        "app": 0.07715167498104596,
        "cmd": 0.07715167498104596,
        "pom": 0.1543033499620919,
        "xml": 0.1543033499620919,
        "gradle": 0.07715167498104596,
        "package": 0.07715167498104596,
        "json": 0.07715167498104596,
        "requirements": 0.1543033499620919,
        "txt": 0.1543033499620919,
        "dockerfile": 0.07715167498104596,
        "21": 0.07715167498104596,
        "success": 0.07715167498104596,
        "criteria": 0.07715167498104596,
        "poc": 0.07715167498104596,
        "for": 0.07715167498104596,
        "3": 0.07715167498104596,
        "diverse": 0.07715167498104596,
        "repos": 0.07715167498104596,
        "python": 0.07715167498104596,
        "cli": 0.1543033499620919,
        "spring": 0.07715167498104596,
        "boot": 0.07715167498104596,
        "api": 0.07715167498104596,
        "node": 0.07715167498104596,
        "webapp": 0.07715167498104596,
        "init": 0.1543033499620919,
        "produces": 0.07715167498104596,
        "a": 0.23145502494313785,
        "working": 0.07715167498104596,
        "linted": 0.07715167498104596,
        "with": 0.07715167498104596,
        "runnable": 0.07715167498104596,
        "quick": 0.07715167498104596,
        "start": 0.07715167498104596,
        "on": 0.07715167498104596,
        "changing": 0.07715167498104596,
        "or": 0.07715167498104596,
        "updates": 0.07715167498104596,
        "only": 0.07715167498104596,
        "relevant": 0.07715167498104596,
        "sections": 0.07715167498104596,
        "no": 0.07715167498104596,
        "hallucinated": 0.07715167498104596,
        "commands": 0.07715167498104596,
        "links": 0.07715167498104596,
        "and": 0.23145502494313785,
        "badges": 0.07715167498104596,
        "validate": 0.07715167498104596,
        "consistent": 0.07715167498104596,
        "if": 0.07715167498104596,
        "you": 0.1543033499620919,
        "want": 0.07715167498104596,
        "i": 0.07715167498104596,
        "can": 0.1543033499620919,
        "spin": 0.07715167498104596,
        "up": 0.07715167498104596,
        "starter": 0.07715167498104596,
        "repo": 0.07715167498104596,
        "layout": 0.07715167498104596,
        "templates": 0.07715167498104596,
        "simple": 0.07715167498104596,
        "adapter": 0.07715167498104596,
        "so": 0.07715167498104596,
        "drop": 0.07715167498104596,
        "it": 0.07715167498104596,
        "into": 0.07715167498104596,
        "your": 0.07715167498104596,
        "environment": 0.07715167498104596,
        "run": 0.07715167498104596,
        "right": 0.07715167498104596,
        "away": 0.07715167498104596
      },
      "text": "runner: \"ollama\" model: \"llama3:8b-instruct\" temperature: 0.15 readme: style: \"comprehensive\" publish: mode: \"pr\" branch_prefix: \"docgen/\" analyzers: enabled: [language, build, dependencies, patterns] exclude_paths: [\".git/\", \"node_modules/\", \"dist/\", \"target/\"] ci: watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" - \"requirements.txt\" - \"Dockerfile\" ``` --- ## 21) Success Criteria (POC) * For 3 diverse repos (Python CLI, Spring Boot API, Node webapp): * `docgen init` produces a working, linted README with runnable Quick Start. * On changing `pom.xml` or `requirements.txt`, PR updates only relevant sections. * No hallucinated commands; links and badges validate; style consistent. --- If you want, I can spin up a **starter repo layout** (CLI, analyzers, templates, and a simple Ollama adapter) so you can drop it into your environment and run `docgen init` right away.",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    }
  ],
  "troubleshooting": [
    {
      "id": "AGENTS.md#0",
      "vector": {
        "repository": 0.06757373783994859,
        "guidelines": 0.1013606067599229,
        "project": 0.033786868919974296,
        "structure": 0.033786868919974296,
        "module": 0.06757373783994859,
        "organization": 0.033786868919974296,
        "spec": 0.06757373783994859,
        "md": 0.033786868919974296,
        "captures": 0.033786868919974296,
        "the": 0.27029495135979437,
        "end": 0.06757373783994859,
        "to": 0.1013606067599229,
        "architecture": 0.033786868919974296,
        "component": 0.06757373783994859,
        "contracts": 0.033786868919974296,
        "and": 0.43922929595966587,
        "must": 0.033786868919974296,
        "be": 0.033786868919974296,
        "updated": 0.033786868919974296,
        "whenever": 0.033786868919974296,
        "responsibilities": 0.033786868919974296,
        "shift": 0.033786868919974296,
        "place": 0.033786868919974296,
        "python": 0.2027212135198458,
        "source": 0.033786868919974296,
        "in": 0.16893434459987147,
        "a": 0.23650808243982008,
        "docgen": 0.16893434459987147,
        "package": 0.033786868919974296,
        "create": 0.033786868919974296,
        "it": 0.033786868919974296,
        "when": 0.06757373783994859,
        "implementation": 0.033786868919974296,
        "starts": 0.033786868919974296,
        "with": 0.16893434459987147,
        "clear": 0.033786868919974296,
        "submodules": 0.033786868919974296,
        "for": 0.1013606067599229,
        "orchestrator": 0.1013606067599229,
        "analyzers": 0.033786868919974296,
        "runners": 0.033786868919974296,
        "stores": 0.033786868919974296,
        "avoid": 0.06757373783994859,
        "leaving": 0.033786868919974296,
        "logic": 0.033786868919974296,
        "repo": 0.06757373783994859,
        "root": 0.033786868919974296,
        "mirror": 0.033786868919974296,
        "runtime": 0.033786868919974296,
        "modules": 0.06757373783994859,
        "under": 0.1013606067599229,
        "tests": 0.2027212135198458,
        "using": 0.033786868919974296,
        "test_": 0.033786868919974296,
        "py": 0.1013606067599229,
        "co": 0.033786868919974296,
        "locate": 0.033786868919974296,
        "fixtures": 0.06757373783994859,
        "_fixtures": 0.033786868919974296,
        "so": 0.13514747567989718,
        "imports": 0.06757373783994859,
        "stay": 0.06757373783994859,
        "clean": 0.033786868919974296,
        "reusable": 0.033786868919974296,
        "keep": 0.13514747567989718,
        "throwaway": 0.033786868919974296,
        "experiments": 0.033786868919974296,
        "inside": 0.033786868919974296,
        "an": 0.06757373783994859,
        "ignored": 0.033786868919974296,
        "sandbox": 0.033786868919974296,
        "directory": 0.033786868919974296,
        "scans": 0.033786868919974296,
        "remain": 0.033786868919974296,
        "focused": 0.033786868919974296,
        "on": 0.06757373783994859,
        "production": 0.033786868919974296,
        "code": 0.033786868919974296,
        "paths": 0.033786868919974296,
        "build": 0.033786868919974296,
        "test": 0.06757373783994859,
        "development": 0.033786868919974296,
        "commands": 0.033786868919974296,
        "m": 0.16893434459987147,
        "venv": 0.1013606067599229,
        "followed": 0.033786868919974296,
        "by": 0.033786868919974296,
        "scripts": 0.06757373783994859,
        "activate": 0.033786868919974296,
        "aligns": 0.033786868919974296,
        "local": 0.033786868919974296,
        "shells": 0.033786868919974296,
        "pycharm": 0.033786868919974296,
        "interpreter": 0.033786868919974296,
        "settings": 0.033786868919974296,
        "pip": 0.033786868919974296,
        "install": 0.033786868919974296,
        "e": 0.033786868919974296,
        "dev": 0.033786868919974296,
        "after": 0.06757373783994859,
        "pyproject": 0.033786868919974296,
        "toml": 0.033786868919974296,
        "is": 0.1013606067599229,
        "committed": 0.033786868919974296,
        "exposes": 0.033786868919974296,
        "cli": 0.033786868919974296,
        "plugins": 0.033786868919974296,
        "editable": 0.033786868919974296,
        "form": 0.033786868919974296,
        "without": 0.033786868919974296,
        "repeated": 0.033786868919974296,
        "reinstalls": 0.033786868919974296,
        "pytest": 0.06757373783994859,
        "runs": 0.033786868919974296,
        "full": 0.033786868919974296,
        "suite": 0.033786868919974296,
        "append": 0.033786868919974296,
        "k": 0.033786868919974296,
        "pattern": 0.033786868919974296,
        "iterate": 0.033786868919974296,
        "single": 0.06757373783994859,
        "analyzer": 0.06757373783994859,
        "or": 0.06757373783994859,
        "pipeline": 0.1013606067599229,
        "stage": 0.033786868919974296,
        "mypy": 0.033786868919974296,
        "ruff": 0.033786868919974296,
        "check": 0.033786868919974296,
        "catch": 0.033786868919974296,
        "type": 0.033786868919974296,
        "drift": 0.033786868919974296,
        "lint": 0.033786868919974296,
        "violations": 0.033786868919974296,
        "before": 0.06757373783994859,
        "readme": 0.06757373783994859,
        "generation": 0.06757373783994859,
        "attempted": 0.033786868919974296,
        "coding": 0.033786868919974296,
        "style": 0.033786868919974296,
        "naming": 0.033786868919974296,
        "conventions": 0.033786868919974296,
        "follow": 0.06757373783994859,
        "pep": 0.033786868919974296,
        "8": 0.033786868919974296,
        "4": 0.033786868919974296,
        "space": 0.033786868919974296,
        "indents": 0.033786868919974296,
        "explicit": 0.033786868919974296,
        "example": 0.033786868919974296,
        "from": 0.033786868919974296,
        "import": 0.033786868919974296,
        "static": 0.033786868919974296,
        "tooling": 0.033786868919974296,
        "can": 0.033786868919974296,
        "trace": 0.033786868919974296,
        "dependencies": 0.033786868919974296,
        "name": 0.033786868919974296,
        "their": 0.033786868919974296,
        "roles": 0.033786868919974296,
        "prompt_builder": 0.033786868919974296,
        "functions": 0.033786868919974296,
        "snake_case": 0.033786868919974296,
        "descriptive": 0.06757373783994859,
        "nouns": 0.033786868919974296,
        "first": 0.033786868919974296,
        "build_prompt_section": 0.033786868919974296,
        "run": 0.033786868919974296,
        "black": 0.033786868919974296,
        "commits": 0.06757373783994859,
        "manual": 0.033786868919974296,
        "reformatting": 0.033786868919974296,
        "unless": 0.033786868919974296,
        "formatter": 0.033786868919974296,
        "cannot": 0.033786868919974296,
        "resolve": 0.033786868919974296,
        "construct": 0.033786868919974296,
        "testing": 0.06757373783994859,
        "default": 0.033786868919974296,
        "harness": 0.033786868919974296,
        "every": 0.033786868919974296,
        "needs": 0.033786868919974296,
        "unit": 0.033786868919974296,
        "coverage": 0.033786868919974296,
        "plus": 0.033786868919974296,
        "integration": 0.06757373783994859,
        "case": 0.033786868919974296,
        "that": 0.06757373783994859,
        "walks": 0.033786868919974296,
        "snapshot": 0.033786868919974296,
        "through": 0.033786868919974296,
        "use": 0.033786868919974296,
        "names": 0.033786868919974296,
        "such": 0.033786868919974296,
        "as": 0.033786868919974296,
        "test_prompt_builder_handles_missing_signals": 0.033786868919974296,
        "arrange": 0.033786868919974296,
        "act": 0.033786868919974296,
        "assert": 0.033786868919974296,
        "comments": 0.033786868919974296,
        "minimal": 0.033786868919974296,
        "but": 0.033786868919974296,
        "intentional": 0.033786868919974296,
        "store": 0.033786868919974296,
        "regression": 0.033786868919974296,
        "generated": 0.033786868919974296,
        "slices": 0.033786868919974296,
        "data": 0.033786868919974296,
        "update": 0.033786868919974296,
        "them": 0.033786868919974296,
        "helper": 0.033786868919974296,
        "diffs": 0.033786868919974296,
        "reviewable": 0.033786868919974296,
        "commit": 0.033786868919974296,
        "pull": 0.033786868919974296,
        "request": 0.033786868919974296,
        "conventional": 0.033786868919974296,
        "feat": 0.033786868919974296,
        "fix": 0.033786868919974296,
        "docs": 0.033786868919974296,
        "subject": 0.033786868919974296,
        "lines": 0.033786868919974296,
        "72": 0.033786868919974296,
        "characters": 0.033786868919974296,
        "explain": 0.033786868919974296,
        "broader": 0.033786868919974296,
        "scope": 0.033786868919974296,
        "body": 0.033786868919974296,
        "multiple": 0.033786868919974296,
        "subsystems": 0.033786868919974296,
        "change": 0.033786868919974296,
        "bundle": 0.033786868919974296,
        "related": 0.033786868919974296,
        "work": 0.033786868919974296,
        "into": 0.033786868919974296,
        "pr": 0.033786868919974296,
        "includes": 0.033786868919974296,
        "summary": 0.033786868919974296,
        "notes": 0.033786868919974296,
        "links": 0.033786868919974296
      },
      "text": "# Repository Guidelines ## Project Structure & Module Organization - `spec/spec.md` captures the end-to-end architecture, component contracts, and must be updated whenever responsibilities shift. - Place Python source in a `docgen/` package (create it when implementation starts) with clear submodules for orchestrator, analyzers, runners, and stores; avoid leaving logic in the repo root. - Mirror runtime modules under `tests/` using `test_<module>.py`; co-locate fixtures in `tests/_fixtures/` so imports stay clean and reusable. - Keep throwaway experiments inside an ignored `sandbox/` directory so repository scans remain focused on production code paths. ## Build, Test, and Development Commands - `python -m venv .venv` followed by `.\\\\.venv\\\\Scripts\\\\activate` aligns local shells with the PyCharm interpreter settings. - `python -m pip install -e .[dev]` (after a `pyproject.toml` is committed) exposes the CLI and plugins in editable form without repeated reinstalls. - `python -m pytest` runs the full suite; append `-k <pattern>` to iterate on a single analyzer or pipeline stage. - `python -m mypy docgen` and `python -m ruff check docgen tests` catch type drift and lint violations before README generation is attempted. ## Coding Style & Naming Conventions - Follow PEP 8 with 4-space indents and explicit imports (for example, `from docgen.orchestrator import Pipeline`) so static tooling can trace dependencies. - Name modules after their roles (`orchestrator.py`, `prompt_builder.py`) and keep functions snake_case with descriptive nouns first (`build_prompt_section`). - Run `black docgen tests` before commits; avoid manual reformatting unless the formatter cannot resolve a construct. ## Testing Guidelines - Pytest is the default harness; every analyzer or pipeline component needs unit coverage plus an integration case under `tests/integration/` that walks a repo snapshot through generation. - Use descriptive test names such as `test_prompt_builder_handles_missing_signals` and keep Arrange-Act-Assert comments minimal but intentional. - Store regression fixtures for generated README slices under `tests/data/` and update them with helper scripts so diffs stay reviewable. ## Commit & Pull Request Guidelines - Follow Conventional Commits (`feat:`, `fix:`, `docs:`); keep subject lines <=72 characters and explain broader scope in the body when multiple subsystems change. - Bundle related work into a single PR that includes a summary, testing notes, and links to",
      "metadata": {
        "path": "AGENTS.md",
        "tags": [
          "docs"
        ],
        "hash": "dfeeea63c97ae7cb3036fbb0312edaee5f377b31178db6fbde6c843da7ceb8d2"
      }
    },
    {
      "id": "AGENTS.md#1",
      "vector": {
        "readme": 0.1270001270001905,
        "slices": 0.06350006350009525,
        "under": 0.06350006350009525,
        "tests": 0.06350006350009525,
        "data": 0.06350006350009525,
        "and": 0.4445004445006667,
        "update": 0.06350006350009525,
        "them": 0.06350006350009525,
        "with": 0.06350006350009525,
        "helper": 0.06350006350009525,
        "scripts": 0.06350006350009525,
        "so": 0.06350006350009525,
        "diffs": 0.06350006350009525,
        "stay": 0.06350006350009525,
        "reviewable": 0.06350006350009525,
        "commit": 0.1270001270001905,
        "pull": 0.06350006350009525,
        "request": 0.06350006350009525,
        "guidelines": 0.06350006350009525,
        "follow": 0.06350006350009525,
        "conventional": 0.06350006350009525,
        "commits": 0.06350006350009525,
        "feat": 0.06350006350009525,
        "fix": 0.06350006350009525,
        "docs": 0.1270001270001905,
        "keep": 0.1270001270001905,
        "subject": 0.06350006350009525,
        "lines": 0.06350006350009525,
        "72": 0.06350006350009525,
        "characters": 0.06350006350009525,
        "explain": 0.06350006350009525,
        "broader": 0.06350006350009525,
        "scope": 0.06350006350009525,
        "in": 0.254000254000381,
        "the": 0.31750031750047625,
        "body": 0.06350006350009525,
        "when": 0.1270001270001905,
        "multiple": 0.06350006350009525,
        "subsystems": 0.06350006350009525,
        "change": 0.06350006350009525,
        "bundle": 0.06350006350009525,
        "related": 0.06350006350009525,
        "work": 0.1270001270001905,
        "into": 0.06350006350009525,
        "a": 0.254000254000381,
        "single": 0.06350006350009525,
        "pr": 0.1270001270001905,
        "that": 0.06350006350009525,
        "includes": 0.06350006350009525,
        "summary": 0.06350006350009525,
        "testing": 0.06350006350009525,
        "notes": 0.1270001270001905,
        "links": 0.06350006350009525,
        "to": 0.06350006350009525,
        "relevant": 0.06350006350009525,
        "issues": 0.06350006350009525,
        "or": 0.06350006350009525,
        "spec": 0.06350006350009525,
        "sections": 0.06350006350009525,
        "attach": 0.06350006350009525,
        "before": 0.1270001270001905,
        "after": 0.06350006350009525,
        "excerpts": 0.06350006350009525,
        "altering": 0.06350006350009525,
        "generation": 0.06350006350009525,
        "output": 0.06350006350009525,
        "run": 0.06350006350009525,
        "lint": 0.06350006350009525,
        "type": 0.06350006350009525,
        "check": 0.06350006350009525,
        "test": 0.06350006350009525,
        "commands": 0.06350006350009525,
        "opening": 0.06350006350009525,
        "paste": 0.06350006350009525,
        "condensed": 0.06350006350009525,
        "results": 0.06350006350009525,
        "description": 0.06350006350009525,
        "for": 0.06350006350009525,
        "quick": 0.06350006350009525,
        "verification": 0.06350006350009525,
        "environment": 0.1270001270001905,
        "tooling": 0.06350006350009525,
        "reuse": 0.06350006350009525,
        "local": 0.1270001270001905,
        "venv": 0.06350006350009525,
        "seeded": 0.06350006350009525,
        "by": 0.1270001270001905,
        "pycharm": 0.06350006350009525,
        "do": 0.06350006350009525,
        "not": 0.06350006350009525,
        "artifacts": 0.06350006350009525,
        "store": 0.06350006350009525,
        "secrets": 0.06350006350009525,
        "env": 0.06350006350009525,
        "consumed": 0.06350006350009525,
        "llm": 0.06350006350009525,
        "runner": 0.06350006350009525,
        "large": 0.06350006350009525,
        "model": 0.06350006350009525,
        "weights": 0.06350006350009525,
        "outside": 0.06350006350009525,
        "repository": 0.06350006350009525,
        "document": 0.06350006350009525,
        "their": 0.06350006350009525,
        "locations": 0.06350006350009525,
        "models": 0.06350006350009525,
        "md": 0.06350006350009525,
        "once": 0.06350006350009525,
        "integration": 0.06350006350009525,
        "begins": 0.06350006350009525
      },
      "text": "README slices under `tests/data/` and update them with helper scripts so diffs stay reviewable. ## Commit & Pull Request Guidelines - Follow Conventional Commits (`feat:`, `fix:`, `docs:`); keep subject lines <=72 characters and explain broader scope in the body when multiple subsystems change. - Bundle related work into a single PR that includes a summary, testing notes, and links to relevant issues or spec sections; attach before/after README excerpts when altering generation output. - Run lint, type-check, and test commands before opening a PR and paste condensed results in the description for quick verification. ## Environment & Tooling Notes - Reuse the local `.venv` seeded by PyCharm; do not commit environment artifacts and store secrets in a `.env` consumed by the local LLM runner. - Keep large model weights outside the repository and document their locations in `docs/models.md` once integration work begins.",
      "metadata": {
        "path": "AGENTS.md",
        "tags": [
          "docs"
        ],
        "hash": "dfeeea63c97ae7cb3036fbb0312edaee5f377b31178db6fbde6c843da7ceb8d2"
      }
    },
    {
      "id": "README_before.md#0",
      "vector": {
        "docgen": 0.6611099775215866,
        "begin": 0.12592571000411173,
        "badges": 0.06296285500205587,
        "build": 0.15740713750513965,
        "status": 0.031481427501027934,
        "https": 0.0944442825030838,
        "img": 0.0944442825030838,
        "shields": 0.0944442825030838,
        "io": 0.0944442825030838,
        "badge": 0.0944442825030838,
        "pending": 0.031481427501027934,
        "lightgrey": 0.0944442825030838,
        "svg": 0.0944442825030838,
        "coverage": 0.06296285500205587,
        "review": 0.031481427501027934,
        "needed": 0.031481427501027934,
        "license": 0.12592571000411173,
        "tbd": 0.031481427501027934,
        "end": 0.0944442825030838,
        "toc": 0.06296285500205587,
        "table": 0.031481427501027934,
        "of": 0.031481427501027934,
        "contents": 0.031481427501027934,
        "features": 0.12592571000411173,
        "architecture": 0.06296285500205587,
        "high": 0.06296285500205587,
        "level": 0.06296285500205587,
        "flow": 0.06296285500205587,
        "component": 0.06296285500205587,
        "responsibilities": 0.06296285500205587,
        "artifacts": 0.06296285500205587,
        "and": 0.2833328475092514,
        "data": 0.06296285500205587,
        "stores": 0.06296285500205587,
        "pipeline": 0.06296285500205587,
        "sequence": 0.12592571000411173,
        "init": 0.0944442825030838,
        "patch": 0.06296285500205587,
        "update": 0.0944442825030838,
        "api": 0.06296285500205587,
        "signal": 0.06296285500205587,
        "extraction": 0.06296285500205587,
        "quick": 0.06296285500205587,
        "start": 0.06296285500205587,
        "configuration": 0.06296285500205587,
        "test": 0.06296285500205587,
        "deployment": 0.06296285500205587,
        "troubleshooting": 0.06296285500205587,
        "faq": 0.06296285500205587,
        "intro": 0.06296285500205587,
        "is": 0.031481427501027934,
        "a": 0.0944442825030838,
        "local": 0.0944442825030838,
        "first": 0.031481427501027934,
        "readme": 0.06296285500205587,
        "generator": 0.031481427501027934,
        "for": 0.0944442825030838,
        "polyglot": 0.031481427501027934,
        "repositories": 0.031481427501027934,
        "it": 0.031481427501027934,
        "scans": 0.031481427501027934,
        "every": 0.06296285500205587,
        "tracked": 0.031481427501027934,
        "file": 0.031481427501027934,
        "publishes": 0.031481427501027934,
        "analyzer": 0.06296285500205587,
        "signals": 0.0944442825030838,
        "retrieves": 0.031481427501027934,
        "grounded": 0.031481427501027934,
        "context": 0.06296285500205587,
        "guides": 0.031481427501027934,
        "llm": 0.06296285500205587,
        "through": 0.031481427501027934,
        "templated": 0.031481427501027934,
        "sections": 0.031481427501027934,
        "to": 0.031481427501027934,
        "produce": 0.031481427501027934,
        "or": 0.031481427501027934,
        "documentation": 0.031481427501027934,
        "this": 0.031481427501027934,
        "overview": 0.031481427501027934,
        "reflects": 0.031481427501027934,
        "complete": 0.031481427501027934,
        "pass": 0.031481427501027934,
        "across": 0.031481427501027934,
        "tests": 0.031481427501027934,
        "spec": 0.031481427501027934,
        "docs": 0.06296285500205587,
        "so": 0.031481427501027934,
        "contributors": 0.031481427501027934,
        "understand": 0.031481427501027934,
        "abstraction": 0.031481427501027934,
        "before": 0.031481427501027934,
        "running": 0.031481427501027934,
        "repository": 0.06296285500205587,
        "manifest": 0.031481427501027934,
        "caching": 0.031481427501027934,
        "repo_scanner": 0.031481427501027934,
        "py": 0.15740713750513965,
        "walks": 0.031481427501027934,
        "the": 0.031481427501027934,
        "tree": 0.031481427501027934,
        "respects": 0.031481427501027934,
        "gitignore": 0.031481427501027934,
        "yml": 0.031481427501027934,
        "hashes": 0.031481427501027934,
        "files": 0.031481427501027934,
        "persists": 0.031481427501027934,
        "manifest_cache": 0.031481427501027934,
        "json": 0.06296285500205587,
        "incremental": 0.031481427501027934,
        "runs": 0.031481427501027934,
        "plugin": 0.031481427501027934,
        "system": 0.031481427501027934,
        "analyzers": 0.031481427501027934,
        "discover": 0.031481427501027934,
        "language": 0.031481427501027934,
        "dependency": 0.031481427501027934,
        "entrypoint": 0.031481427501027934,
        "pattern": 0.031481427501027934,
        "structure": 0.031481427501027934,
        "that": 0.031481427501027934,
        "describe": 0.031481427501027934,
        "frameworks": 0.031481427501027934,
        "commands": 0.06296285500205587,
        "apis": 0.031481427501027934,
        "entities": 0.031481427501027934,
        "topology": 0.031481427501027934,
        "template": 0.031481427501027934,
        "driven": 0.031481427501027934,
        "prompting": 0.06296285500205587,
        "builder": 0.031481427501027934,
        "merges": 0.031481427501027934,
        "with": 0.031481427501027934,
        "jinja": 0.031481427501027934,
        "templates": 0.031481427501027934,
        "validates": 0.031481427501027934,
        "applies": 0.031481427501027934,
        "style": 0.031481427501027934,
        "presets": 0.031481427501027934,
        "injects": 0.031481427501027934,
        "retrieved": 0.031481427501027934,
        "per": 0.031481427501027934,
        "section": 0.06296285500205587,
        "lightweight": 0.031481427501027934,
        "rag": 0.06296285500205587,
        "index": 0.031481427501027934,
        "indexer": 0.031481427501027934,
        "embedder": 0.031481427501027934,
        "store": 0.031481427501027934,
        "embed": 0.031481427501027934,
        "source": 0.031481427501027934,
        "excerpts": 0.031481427501027934,
        "into": 0.031481427501027934,
        "embeddings": 0.031481427501027934,
        "scoped": 0.031481427501027934,
        "retrieval": 0.031481427501027934,
        "enforcement": 0.031481427501027934
      },
      "text": "# docgen <!-- docgen:begin:badges --> [![Build Status](https://img.shields.io/badge/build-pending-lightgrey.svg)](#) [![Coverage](https://img.shields.io/badge/coverage-review--needed-lightgrey.svg)](#) [![License](https://img.shields.io/badge/license-tbd-lightgrey.svg)](#) <!-- docgen:end:badges --> <!-- docgen:begin:toc --> ## Table of Contents - [Features](#features) - [Architecture](#architecture) - [High-Level Flow](#high-level-flow) - [Component Responsibilities](#component-responsibilities) - [Artifacts and Data Stores](#artifacts-and-data-stores) - [Pipeline Sequence (`docgen init`)](#pipeline-sequence-docgen-init) - [Patch Sequence (`docgen update`)](#patch-sequence-docgen-update) - [API Signal Extraction](#api-signal-extraction) - [Quick Start](#quick-start) - [Configuration](#configuration) - [Build & Test](#build-test) - [Deployment](#deployment) - [Troubleshooting](#troubleshooting) - [FAQ](#faq) - [License](#license) <!-- docgen:end:toc --> <!-- docgen:begin:intro --> docgen is a local-first README generator for polyglot repositories. It scans every tracked file, publishes analyzer signals, retrieves grounded context, and guides a local LLM through templated sections to produce or update documentation. This overview reflects a complete pass across `docgen/`, `tests/`, `spec/`, and `docs/` so contributors understand every abstraction before running `docgen init`. <!-- docgen:end:intro --> ## Features <!-- docgen:begin:features --> - **Repository manifest & caching** - `docgen/repo_scanner.py` walks the tree, respects `.gitignore`/`.docgen.yml`, hashes files, and persists `manifest_cache.json` for incremental runs. - **Analyzer plugin system** - `docgen/analyzers/*` discover language, build, dependency, entrypoint, pattern, and structure signals that describe frameworks, commands, APIs, entities, and repository topology. - **Template-driven prompting** - `docgen/prompting/builder.py` merges signals with Jinja templates, validates commands, applies style presets, and injects retrieved context per section. - **Lightweight RAG index** - `docgen/rag/indexer.py`, `embedder.py`, and `store.py` embed README/docs/source excerpts into `.docgen/embeddings.json` for section-scoped retrieval. - **Local LLM enforcement** -",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#1",
      "vector": {
        "docgen": 0.48261708906584017,
        "prompting": 0.06434894520877868,
        "builder": 0.03217447260438934,
        "py": 0.3217447260438934,
        "merges": 0.03217447260438934,
        "signals": 0.03217447260438934,
        "with": 0.06434894520877868,
        "jinja": 0.06434894520877868,
        "templates": 0.06434894520877868,
        "validates": 0.03217447260438934,
        "commands": 0.03217447260438934,
        "applies": 0.03217447260438934,
        "style": 0.03217447260438934,
        "presets": 0.03217447260438934,
        "and": 0.2252213082307254,
        "injects": 0.03217447260438934,
        "retrieved": 0.03217447260438934,
        "context": 0.03217447260438934,
        "per": 0.03217447260438934,
        "section": 0.06434894520877868,
        "lightweight": 0.03217447260438934,
        "rag": 0.1608723630219467,
        "index": 0.03217447260438934,
        "indexer": 0.03217447260438934,
        "embedder": 0.03217447260438934,
        "store": 0.03217447260438934,
        "embed": 0.03217447260438934,
        "readme": 0.09652341781316803,
        "docs": 0.03217447260438934,
        "source": 0.03217447260438934,
        "excerpts": 0.03217447260438934,
        "into": 0.03217447260438934,
        "embeddings": 0.06434894520877868,
        "json": 0.06434894520877868,
        "for": 0.03217447260438934,
        "scoped": 0.03217447260438934,
        "retrieval": 0.03217447260438934,
        "local": 0.06434894520877868,
        "llm": 0.19304683562633607,
        "enforcement": 0.03217447260438934,
        "runner": 0.06434894520877868,
        "targets": 0.03217447260438934,
        "loopback": 0.03217447260438934,
        "model": 0.06434894520877868,
        "or": 0.06434894520877868,
        "ollama": 0.03217447260438934,
        "blocks": 0.03217447260438934,
        "remote": 0.03217447260438934,
        "hosts": 0.03217447260438934,
        "exposes": 0.03217447260438934,
        "configurable": 0.03217447260438934,
        "temperature": 0.03217447260438934,
        "token": 0.03217447260438934,
        "limits": 0.03217447260438934,
        "post": 0.2252213082307254,
        "processing": 0.09652341781316803,
        "contract": 0.03217447260438934,
        "postproc": 0.03217447260438934,
        "add": 0.03217447260438934,
        "badges": 0.06434894520877868,
        "rebuild": 0.03217447260438934,
        "the": 0.1608723630219467,
        "toc": 0.06434894520877868,
        "lint": 0.06434894520877868,
        "markdown": 0.03217447260438934,
        "validate": 0.03217447260438934,
        "links": 0.06434894520877868,
        "manage": 0.03217447260438934,
        "markers": 0.03217447260438934,
        "compute": 0.03217447260438934,
        "scorecards": 0.03217447260438934,
        "saved": 0.03217447260438934,
        "to": 0.09652341781316803,
        "scorecard": 0.06434894520877868,
        "git": 0.1608723630219467,
        "aware": 0.03217447260438934,
        "publishing": 0.06434894520877868,
        "diff": 0.03217447260438934,
        "maps": 0.03217447260438934,
        "changed": 0.03217447260438934,
        "files": 0.03217447260438934,
        "sections": 0.03217447260438934,
        "while": 0.03217447260438934,
        "publisher": 0.06434894520877868,
        "commits": 0.03217447260438934,
        "opens": 0.03217447260438934,
        "prs": 0.03217447260438934,
        "generated": 0.03217447260438934,
        "deltas": 0.03217447260438934,
        "via": 0.03217447260438934,
        "github": 0.03217447260438934,
        "cli": 0.19304683562633607,
        "resilient": 0.03217447260438934,
        "ux": 0.03217447260438934,
        "failsafe": 0.03217447260438934,
        "provide": 0.03217447260438934,
        "verbose": 0.03217447260438934,
        "logging": 0.03217447260438934,
        "hooks": 0.03217447260438934,
        "dry": 0.03217447260438934,
        "run": 0.03217447260438934,
        "preview": 0.03217447260438934,
        "support": 0.03217447260438934,
        "fallback": 0.03217447260438934,
        "stubs": 0.03217447260438934,
        "when": 0.03217447260438934,
        "pipeline": 0.06434894520877868,
        "cannot": 0.03217447260438934,
        "complete": 0.03217447260438934,
        "end": 0.09652341781316803,
        "features": 0.03217447260438934,
        "architecture": 0.06434894520877868,
        "begin": 0.03217447260438934,
        "high": 0.03217447260438934,
        "level": 0.03217447260438934,
        "flow": 0.03217447260438934,
        "orchestrator": 0.09652341781316803,
        "coordinates": 0.03217447260438934,
        "described": 0.03217447260438934,
        "in": 0.03217447260438934,
        "spec": 0.06434894520877868,
        "md": 0.06434894520877868,
        "composing": 0.03217447260438934,
        "scanners": 0.03217447260438934,
        "analyzers": 0.06434894520877868,
        "services": 0.03217447260438934,
        "mermaid": 0.03217447260438934,
        "flowchart": 0.03217447260438934,
        "lr": 0.03217447260438934,
        "init": 0.03217447260438934,
        "update": 0.03217447260438934,
        "orc": 0.2573957808351147,
        "scan": 0.06434894520877868,
        "reposcanner": 0.03217447260438934,
        "n": 0.2252213082307254,
        "manifest": 0.03217447260438934,
        "ana": 0.06434894520877868,
        "language": 0.03217447260438934,
        "build": 0.03217447260438934,
        "etc": 0.03217447260438934,
        "ragindexer": 0.03217447260438934,
        "prompt": 0.1608723630219467,
        "promptbuilder": 0.03217447260438934,
        "llmrunner": 0.03217447260438934,
        "commit": 0.03217447260438934,
        "pr": 0.03217447260438934,
        "output": 0.06434894520877868,
        "artifacts": 0.03217447260438934,
        "component": 0.03217447260438934,
        "responsibilities": 0.03217447260438934,
        "layer": 0.03217447260438934,
        "key": 0.03217447260438934
      },
      "text": "- `docgen/prompting/builder.py` merges signals with Jinja templates, validates commands, applies style presets, and injects retrieved context per section. - **Lightweight RAG index** - `docgen/rag/indexer.py`, `embedder.py`, and `store.py` embed README/docs/source excerpts into `.docgen/embeddings.json` for section-scoped retrieval. - **Local LLM enforcement** - `docgen/llm/runner.py` targets loopback Model Runner or Ollama, blocks remote hosts, and exposes configurable temperature/token limits. - **Post-processing contract** - `docgen/postproc/*` add badges, rebuild the ToC, lint markdown, validate links, manage markers, and compute scorecards saved to `.docgen/scorecard.json`. - **Git-aware publishing** - `docgen/git/diff.py` maps changed files to sections while `docgen/git/publisher.py` commits or opens PRs with generated README deltas via the GitHub CLI. - **Resilient CLI UX** - `docgen/cli.py` and `docgen/failsafe.py` provide verbose logging hooks, dry-run preview support, and fallback stubs when the LLM pipeline cannot complete. <!-- docgen:end:features --> ## Architecture <!-- docgen:begin:architecture --> ### High-Level Flow The orchestrator (`docgen/orchestrator.py`) coordinates the end-to-end pipeline described in `spec/spec.md`, composing scanners, analyzers, prompting, RAG, post-processing, and publishing services. ```mermaid flowchart LR CLI[\"CLI (docgen init/update)\"] Orc[\"Orchestrator\"] Scan[\"RepoScanner\\n(manifest)\"] Ana[\"Analyzers\\n(language/build/etc)\"] RAG[\"RAGIndexer\\n(embeddings)\"] Prompt[\"PromptBuilder\\n(Jinja templates)\"] LLM[\"LLMRunner\\n(local model)\"] Post[\"Post-Processing\\n(lint, ToC, badges, links, scorecard)\"] Git[\"Publisher\\n(commit/PR)\"] Output[\"README.md + .docgen artifacts\"] CLI --> Orc Orc --> Scan Orc --> Ana Orc --> RAG Orc --> Prompt Prompt --> LLM LLM --> Prompt Prompt --> Orc Orc --> Post Post --> Output Post --> Git ``` ### Component Responsibilities | Layer | Key",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#2",
      "vector": {
        "orc": 0.2960684541064695,
        "scan": 0.042295493443781355,
        "ana": 0.042295493443781355,
        "rag": 0.12688648033134406,
        "prompt": 0.16918197377512542,
        "llm": 0.16918197377512542,
        "post": 0.16918197377512542,
        "output": 0.042295493443781355,
        "git": 0.042295493443781355,
        "component": 0.042295493443781355,
        "responsibilities": 0.042295493443781355,
        "layer": 0.042295493443781355,
        "key": 0.042295493443781355,
        "modules": 0.08459098688756271,
        "purpose": 0.042295493443781355,
        "cli": 0.12688648033134406,
        "logging": 0.08459098688756271,
        "docgen": 0.46525042788159493,
        "py": 0.42295493443781357,
        "parses": 0.08459098688756271,
        "subcommands": 0.042295493443781355,
        "wires": 0.042295493443781355,
        "verbose": 0.042295493443781355,
        "and": 0.33836394755025084,
        "configures": 0.042295493443781355,
        "namespaced": 0.042295493443781355,
        "loggers": 0.042295493443781355,
        "configuration": 0.042295493443781355,
        "config": 0.042295493443781355,
        "yml": 0.042295493443781355,
        "into": 0.042295493443781355,
        "docgenconfig": 0.042295493443781355,
        "llmconfig": 0.042295493443781355,
        "publishconfig": 0.042295493443781355,
        "analyzerconfig": 0.042295493443781355,
        "ciconfig": 0.042295493443781355,
        "with": 0.042295493443781355,
        "a": 0.042295493443781355,
        "handwritten": 0.042295493443781355,
        "yaml": 0.042295493443781355,
        "fallback": 0.042295493443781355,
        "repository": 0.042295493443781355,
        "scanning": 0.042295493443781355,
        "repo_scanner": 0.042295493443781355,
        "builds": 0.08459098688756271,
        "repomanifest": 0.042295493443781355,
        "of": 0.08459098688756271,
        "filemeta": 0.042295493443781355,
        "entries": 0.042295493443781355,
        "enforces": 0.042295493443781355,
        "ignore": 0.042295493443781355,
        "rules": 0.042295493443781355,
        "infers": 0.042295493443781355,
        "file": 0.042295493443781355,
        "roles": 0.042295493443781355,
        "caches": 0.042295493443781355,
        "hashes": 0.042295493443781355,
        "in": 0.042295493443781355,
        "manifest_cache": 0.042295493443781355,
        "json": 0.042295493443781355,
        "analyzer": 0.042295493443781355,
        "plugins": 0.042295493443781355,
        "analyzers": 0.042295493443781355,
        "emit": 0.042295493443781355,
        "signal": 0.042295493443781355,
        "objects": 0.042295493443781355,
        "for": 0.042295493443781355,
        "languages": 0.042295493443781355,
        "frameworks": 0.042295493443781355,
        "build": 0.042295493443781355,
        "tools": 0.042295493443781355,
        "dependencies": 0.042295493443781355,
        "entrypoints": 0.042295493443781355,
        "structural": 0.042295493443781355,
        "api": 0.042295493443781355,
        "routes": 0.042295493443781355,
        "entities": 0.042295493443781355,
        "patterns": 0.042295493443781355,
        "monorepo": 0.042295493443781355,
        "hints": 0.042295493443781355,
        "prompting": 0.08459098688756271,
        "builder": 0.042295493443781355,
        "templates": 0.08459098688756271,
        "groups": 0.042295493443781355,
        "signals": 0.042295493443781355,
        "retrieves": 0.042295493443781355,
        "context": 0.08459098688756271,
        "renders": 0.042295493443781355,
        "section": 0.08459098688756271,
        "performs": 0.042295493443781355,
        "command": 0.042295493443781355,
        "validation": 0.042295493443781355,
        "estimates": 0.042295493443781355,
        "token": 0.042295493443781355,
        "budgets": 0.042295493443781355,
        "retrieval": 0.042295493443781355,
        "indexer": 0.042295493443781355,
        "embedder": 0.042295493443781355,
        "store": 0.042295493443781355,
        "constants": 0.042295493443781355,
        "chunks": 0.042295493443781355,
        "readme": 0.042295493443781355,
        "docs": 0.042295493443781355,
        "source": 0.042295493443781355,
        "files": 0.042295493443781355,
        "computes": 0.042295493443781355,
        "bag": 0.042295493443781355,
        "words": 0.042295493443781355,
        "embeddings": 0.042295493443781355,
        "persists": 0.042295493443781355,
        "per": 0.042295493443781355,
        "prunes": 0.042295493443781355,
        "stale": 0.042295493443781355,
        "vectors": 0.042295493443781355,
        "runtime": 0.042295493443781355,
        "runner": 0.042295493443781355,
        "chooses": 0.042295493443781355,
        "http": 0.042295493443781355,
        "or": 0.042295493443781355,
        "execution": 0.042295493443781355,
        "openai": 0.042295493443781355,
        "compatible": 0.042295493443781355,
        "payloads": 0.042295493443781355,
        "restricts": 0.042295493443781355,
        "to": 0.042295493443781355,
        "loopback": 0.042295493443781355,
        "hosts": 0.042295493443781355,
        "normalizes": 0.042295493443781355,
        "responses": 0.042295493443781355,
        "processing": 0.042295493443781355,
        "postproc": 0.042295493443781355,
        "manages": 0.042295493443781355,
        "markers": 0.042295493443781355,
        "regenerates": 0.042295493443781355,
        "toc": 0.042295493443781355,
        "applies": 0.042295493443781355,
        "badges": 0.042295493443781355,
        "lints": 0.042295493443781355,
        "markdown": 0.042295493443781355,
        "validates": 0.042295493443781355,
        "links": 0.042295493443781355
      },
      "text": "--> Orc Orc --> Scan Orc --> Ana Orc --> RAG Orc --> Prompt Prompt --> LLM LLM --> Prompt Prompt --> Orc Orc --> Post Post --> Output Post --> Git ``` ### Component Responsibilities | Layer | Key modules | Purpose | | --- | --- | --- | | CLI & Logging | `docgen/cli.py`, `docgen/logging.py` | Parses subcommands, wires `--verbose`, and configures namespaced loggers. | | Configuration | `docgen/config.py` | Parses `.docgen.yml` into `DocGenConfig`, `LLMConfig`, `PublishConfig`, `AnalyzerConfig`, and `CIConfig`, with a handwritten YAML fallback. | | Repository scanning | `docgen/repo_scanner.py` | Builds `RepoManifest` of `FileMeta` entries, enforces ignore rules, infers file roles, and caches hashes in `.docgen/manifest_cache.json`. | | Analyzer plugins | `docgen/analyzers/*` | Emit `Signal` objects for languages, frameworks, build tools, dependencies, entrypoints, structural modules, API routes, entities, patterns, and monorepo hints. | | Prompting | `docgen/prompting/builder.py`, `templates/` | Groups signals, retrieves context, renders section templates, performs command validation, and estimates token budgets. | | Retrieval (RAG) | `docgen/rag/indexer.py`, `embedder.py`, `store.py`, `constants.py` | Chunks README/docs/source files, computes bag-of-words embeddings, persists context per section, and prunes stale vectors. | | LLM runtime | `docgen/llm/runner.py` | Chooses HTTP or CLI execution, builds OpenAI-compatible payloads, restricts to loopback hosts, and normalizes responses. | | Post-processing | `docgen/postproc/*` | Manages markers, regenerates ToC, applies badges, lints markdown, validates links, and",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#3",
      "vector": {
        "vectors": 0.08497185773241747,
        "llm": 0.12745778659862622,
        "runtime": 0.08497185773241747,
        "docgen": 0.4248592886620874,
        "runner": 0.08497185773241747,
        "py": 0.16994371546483494,
        "chooses": 0.042485928866208736,
        "http": 0.042485928866208736,
        "or": 0.12745778659862622,
        "cli": 0.16994371546483494,
        "execution": 0.042485928866208736,
        "builds": 0.042485928866208736,
        "openai": 0.042485928866208736,
        "compatible": 0.042485928866208736,
        "payloads": 0.042485928866208736,
        "restricts": 0.042485928866208736,
        "to": 0.08497185773241747,
        "loopback": 0.042485928866208736,
        "hosts": 0.042485928866208736,
        "and": 0.3398874309296699,
        "normalizes": 0.042485928866208736,
        "responses": 0.042485928866208736,
        "post": 0.08497185773241747,
        "processing": 0.08497185773241747,
        "postproc": 0.042485928866208736,
        "manages": 0.042485928866208736,
        "markers": 0.042485928866208736,
        "regenerates": 0.042485928866208736,
        "toc": 0.042485928866208736,
        "applies": 0.042485928866208736,
        "badges": 0.042485928866208736,
        "lints": 0.042485928866208736,
        "markdown": 0.042485928866208736,
        "validates": 0.042485928866208736,
        "links": 0.042485928866208736,
        "records": 0.042485928866208736,
        "readme": 0.08497185773241747,
        "quality": 0.08497185773241747,
        "metrics": 0.042485928866208736,
        "git": 0.2124296443310437,
        "integration": 0.042485928866208736,
        "diff": 0.042485928866208736,
        "publisher": 0.08497185773241747,
        "maps": 0.042485928866208736,
        "file": 0.08497185773241747,
        "diffs": 0.042485928866208736,
        "affected": 0.042485928866208736,
        "sections": 0.08497185773241747,
        "handles": 0.042485928866208736,
        "staged": 0.042485928866208736,
        "changes": 0.042485928866208736,
        "pushes": 0.042485928866208736,
        "commits": 0.08497185773241747,
        "prs": 0.08497185773241747,
        "with": 0.08497185773241747,
        "optional": 0.042485928866208736,
        "labels": 0.042485928866208736,
        "safety": 0.042485928866208736,
        "nets": 0.042485928866208736,
        "failsafe": 0.042485928866208736,
        "generates": 0.042485928866208736,
        "placeholder": 0.042485928866208736,
        "full": 0.042485928866208736,
        "stubs": 0.08497185773241747,
        "when": 0.042485928866208736,
        "prompting": 0.08497185773241747,
        "fails": 0.042485928866208736,
        "reference": 0.042485928866208736,
        "material": 0.042485928866208736,
        "spec": 0.16994371546483494,
        "md": 0.16994371546483494,
        "feature_order": 0.042485928866208736,
        "feature_checklist": 0.042485928866208736,
        "docs": 0.042485928866208736,
        "ci": 0.08497185773241747,
        "agents": 0.042485928866208736,
        "capture": 0.042485928866208736,
        "architectural": 0.042485928866208736,
        "contracts": 0.042485928866208736,
        "delivery": 0.042485928866208736,
        "roadmap": 0.042485928866208736,
        "feature": 0.042485928866208736,
        "status": 0.042485928866208736,
        "playbooks": 0.042485928866208736,
        "agent": 0.042485928866208736,
        "guidance": 0.042485928866208736,
        "tests": 0.08497185773241747,
        "mirroring": 0.042485928866208736,
        "modules": 0.042485928866208736,
        "pytest": 0.042485928866208736,
        "suite": 0.042485928866208736,
        "covering": 0.042485928866208736,
        "orchestrator": 0.08497185773241747,
        "analyzers": 0.042485928866208736,
        "workflows": 0.042485928866208736,
        "helpers": 0.042485928866208736,
        "artifacts": 0.042485928866208736,
        "data": 0.042485928866208736,
        "stores": 0.042485928866208736,
        "manifest_cache": 0.042485928866208736,
        "json": 0.12745778659862622,
        "cache": 0.042485928866208736,
        "of": 0.08497185773241747,
        "sizes": 0.042485928866208736,
        "mtimes": 0.042485928866208736,
        "hashes": 0.042485928866208736,
        "for": 0.042485928866208736,
        "fast": 0.042485928866208736,
        "re": 0.042485928866208736,
        "scans": 0.042485928866208736,
        "embeddings": 0.042485928866208736,
        "persisted": 0.042485928866208736,
        "embedding": 0.042485928866208736,
        "keyed": 0.042485928866208736,
        "by": 0.08497185773241747,
        "section": 0.042485928866208736,
        "tag": 0.042485928866208736,
        "via": 0.042485928866208736,
        "embeddingstore": 0.042485928866208736,
        "scorecard": 0.042485928866208736,
        "output": 0.042485928866208736,
        "readmescorecard": 0.042485928866208736,
        "evaluate": 0.042485928866208736,
        "tracking": 0.042485928866208736,
        "coverage": 0.042485928866208736,
        "link": 0.042485928866208736,
        "health": 0.042485928866208736,
        "quick": 0.042485928866208736,
        "start": 0.042485928866208736,
        "metadata": 0.042485928866208736,
        "branches": 0.042485928866208736,
        "created": 0.042485928866208736,
        "summaries": 0.042485928866208736,
        "from": 0.042485928866208736,
        "diffanalyzer": 0.042485928866208736,
        "pipeline": 0.042485928866208736,
        "sequence": 0.042485928866208736,
        "init": 0.042485928866208736,
        "mermaid": 0.042485928866208736,
        "sequencediagram": 0.042485928866208736,
        "participant": 0.25491557319725244,
        "dev": 0.042485928866208736,
        "as": 0.25491557319725244,
        "developer": 0.042485928866208736,
        "orc": 0.042485928866208736,
        "scan": 0.042485928866208736,
        "reposcanner": 0.042485928866208736,
        "ana": 0.042485928866208736,
        "analyzer": 0.042485928866208736,
        "plugins": 0.042485928866208736,
        "rag": 0.042485928866208736
      },
      "text": "vectors. | | LLM runtime | `docgen/llm/runner.py` | Chooses HTTP or CLI execution, builds OpenAI-compatible payloads, restricts to loopback hosts, and normalizes responses. | | Post-processing | `docgen/postproc/*` | Manages markers, regenerates ToC, applies badges, lints markdown, validates links, and records README quality metrics. | | Git integration | `docgen/git/diff.py`, `docgen/git/publisher.py` | Maps file diffs to affected sections, handles staged changes, and pushes commits or PRs with optional labels. | | Safety nets | `docgen/failsafe.py` | Generates placeholder sections or full README stubs when prompting fails. | | Reference material | `spec/spec.md`, `spec/feature_order.md`, `spec/feature_checklist.md`, `docs/ci/*`, `AGENTS.md` | Capture architectural contracts, delivery roadmap, feature status, CI playbooks, and agent guidance. | | Tests | `tests/` mirroring runtime modules | Pytest suite covering CLI, orchestrator, analyzers, prompting, git workflows, LLM runner stubs, and post-processing helpers. | ### Artifacts and Data Stores - `.docgen/manifest_cache.json` - cache of file sizes, mtimes, and hashes for fast re-scans. - `.docgen/embeddings.json` - persisted embedding vectors keyed by section/tag via `EmbeddingStore`. - `.docgen/scorecard.json` - output of `ReadmeScorecard.evaluate`, tracking coverage, link health, and quick-start quality. - Git metadata - branches/commits/PRs created by `Publisher` with summaries from `DiffAnalyzer`. ### Pipeline Sequence (`docgen init`) ```mermaid sequenceDiagram participant Dev as Developer participant CLI as docgen CLI participant Orc as Orchestrator participant Scan as RepoScanner participant Ana as Analyzer plugins participant RAG as",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#4",
      "vector": {
        "branches": 0.01984580179179854,
        "commits": 0.01984580179179854,
        "prs": 0.01984580179179854,
        "created": 0.01984580179179854,
        "by": 0.01984580179179854,
        "publisher": 0.03969160358359708,
        "with": 0.01984580179179854,
        "summaries": 0.01984580179179854,
        "from": 0.01984580179179854,
        "diffanalyzer": 0.03969160358359708,
        "pipeline": 0.01984580179179854,
        "sequence": 0.03969160358359708,
        "docgen": 0.11907481075079124,
        "init": 0.03969160358359708,
        "mermaid": 0.03969160358359708,
        "sequencediagram": 0.03969160358359708,
        "participant": 0.4167618376277693,
        "dev": 0.07938320716719416,
        "as": 0.4167618376277693,
        "developer": 0.03969160358359708,
        "cli": 0.15876641433438832,
        "orc": 0.6152198555457548,
        "orchestrator": 0.03969160358359708,
        "scan": 0.15876641433438832,
        "reposcanner": 0.03969160358359708,
        "ana": 0.11907481075079124,
        "analyzer": 0.03969160358359708,
        "plugins": 0.03969160358359708,
        "rag": 0.11907481075079124,
        "ragindexer": 0.03969160358359708,
        "prompt": 0.17861221612618686,
        "promptbuilder": 0.03969160358359708,
        "llm": 0.05953740537539562,
        "llmrunner": 0.01984580179179854,
        "post": 0.15876641433438832,
        "processing": 0.03969160358359708,
        "fs": 0.03969160358359708,
        "filesystem": 0.01984580179179854,
        "run_init": 0.01984580179179854,
        "path": 0.03969160358359708,
        "repomanifest": 0.03969160358359708,
        "filemeta": 0.01984580179179854,
        "analyze": 0.03969160358359708,
        "manifest": 0.0992290089589927,
        "signal": 0.03969160358359708,
        "build": 0.05953740537539562,
        "contexts": 0.03969160358359708,
        "per": 0.01984580179179854,
        "section": 0.07938320716719416,
        "signals": 0.01984580179179854,
        "invoke": 0.01984580179179854,
        "system": 0.01984580179179854,
        "markdown": 0.05953740537539562,
        "full": 0.01984580179179854,
        "readme": 0.07938320716719416,
        "draft": 0.01984580179179854,
        "lint": 0.03969160358359708,
        "toc": 0.03969160358359708,
        "badges": 0.03969160358359708,
        "links": 0.01984580179179854,
        "scorecard": 0.03969160358359708,
        "final": 0.03969160358359708,
        "quality": 0.01984580179179854,
        "report": 0.01984580179179854,
        "write": 0.01984580179179854,
        "md": 0.01984580179179854,
        "git": 0.01984580179179854,
        "optional": 0.01984580179179854,
        "commit": 0.05953740537539562,
        "publish": 0.01984580179179854,
        "mode": 0.01984580179179854,
        "patch": 0.01984580179179854,
        "update": 0.03969160358359708,
        "ci": 0.01984580179179854,
        "diff": 0.0992290089589927,
        "mark": 0.05953740537539562,
        "markermanager": 0.01984580179179854,
        "pub": 0.03969160358359708,
        "base": 0.05953740537539562,
        "ref": 0.01984580179179854,
        "run_update": 0.01984580179179854,
        "compute": 0.01984580179179854,
        "repo": 0.01984580179179854,
        "diffresult": 0.01984580179179854,
        "changed_files": 0.01984580179179854,
        "sections": 0.05953740537539562,
        "context": 0.01984580179179854,
        "snippets": 0.01984580179179854,
        "render_sections": 0.01984580179179854,
        "new": 0.01984580179179854,
        "bodies": 0.01984580179179854,
        "replace": 0.01984580179179854,
        "patched": 0.01984580179179854,
        "link": 0.01984580179179854,
        "check": 0.01984580179179854
      },
      "text": "branches/commits/PRs created by `Publisher` with summaries from `DiffAnalyzer`. ### Pipeline Sequence (`docgen init`) ```mermaid sequenceDiagram participant Dev as Developer participant CLI as docgen CLI participant Orc as Orchestrator participant Scan as RepoScanner participant Ana as Analyzer plugins participant RAG as RAGIndexer participant Prompt as PromptBuilder participant LLM as LLMRunner participant Post as Post-processing participant FS as Filesystem Dev->>CLI: docgen init . CLI->>Orc: run_init(path) Orc->>Scan: scan() Scan-->>Orc: RepoManifest(FileMeta[]) Orc->>Ana: analyze(manifest) Ana-->>Orc: Signal[] Orc->>RAG: build(manifest) RAG-->>Orc: contexts per section Orc->>Prompt: build(manifest, signals, contexts) Prompt->>LLM: invoke(system, prompt) LLM-->>Prompt: section markdown Prompt-->>Orc: full README draft Orc->>Post: lint -> toc -> badges -> links -> scorecard Post-->>Orc: final markdown + quality report Orc->>FS: write README.md Orc->>Git: optional commit (publish mode \"commit\") ``` ### Patch Sequence (`docgen update`) ```mermaid sequenceDiagram participant Dev as Developer/CI participant CLI as docgen CLI participant Orc as Orchestrator participant Diff as DiffAnalyzer participant Scan as RepoScanner participant Ana as Analyzer plugins participant RAG as RAGIndexer participant Prompt as PromptBuilder participant Mark as MarkerManager participant Post as Post-processing participant Pub as Publisher Dev->>CLI: docgen update --diff-base <ref> CLI->>Orc: run_update(path, base) Orc->>Diff: compute(repo, base) Diff-->>Orc: DiffResult(changed_files, sections) Orc->>Scan: scan() Scan-->>Orc: RepoManifest Orc->>Ana: analyze(manifest) Ana-->>Orc: Signal[] Orc->>RAG: build(manifest, sections) RAG-->>Orc: context snippets Orc->>Prompt: render_sections(sections) Prompt-->>Orc: new section bodies Orc->>Mark: replace(markdown, section) Mark-->>Orc: patched README Orc->>Post: lint/toc/badges/link check/scorecard Post-->>Orc: final README + diff Orc->>Pub: commit",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#5",
      "vector": {
        "base": 0.03639372626234195,
        "diff": 0.0727874525246839,
        "orc": 0.5095121676727873,
        "diffresult": 0.03639372626234195,
        "changed_files": 0.03639372626234195,
        "sections": 0.1455749050493678,
        "scan": 0.10918117878702585,
        "repomanifest": 0.03639372626234195,
        "ana": 0.0727874525246839,
        "analyze": 0.03639372626234195,
        "manifest": 0.10918117878702585,
        "signal": 0.1455749050493678,
        "rag": 0.0727874525246839,
        "build": 0.0727874525246839,
        "context": 0.03639372626234195,
        "snippets": 0.03639372626234195,
        "prompt": 0.0727874525246839,
        "render_sections": 0.03639372626234195,
        "new": 0.03639372626234195,
        "section": 0.0727874525246839,
        "bodies": 0.03639372626234195,
        "mark": 0.0727874525246839,
        "replace": 0.03639372626234195,
        "markdown": 0.03639372626234195,
        "patched": 0.03639372626234195,
        "readme": 0.0727874525246839,
        "post": 0.1455749050493678,
        "lint": 0.03639372626234195,
        "toc": 0.03639372626234195,
        "badges": 0.03639372626234195,
        "link": 0.03639372626234195,
        "check": 0.03639372626234195,
        "scorecard": 0.03639372626234195,
        "final": 0.03639372626234195,
        "pub": 0.03639372626234195,
        "commit": 0.03639372626234195,
        "or": 0.03639372626234195,
        "pr": 0.03639372626234195,
        "branch": 0.03639372626234195,
        "title": 0.03639372626234195,
        "body": 0.03639372626234195,
        "api": 0.2911498100987356,
        "extraction": 0.03639372626234195,
        "structureanalyzer": 0.03639372626234195,
        "inspects": 0.03639372626234195,
        "source": 0.03639372626234195,
        "files": 0.0727874525246839,
        "for": 0.03639372626234195,
        "fastapi": 0.10918117878702585,
        "decorators": 0.03639372626234195,
        "express": 0.03639372626234195,
        "route": 0.03639372626234195,
        "calls": 0.0727874525246839,
        "and": 0.3275435363610775,
        "pydantic": 0.03639372626234195,
        "orm": 0.03639372626234195,
        "entities": 0.03639372626234195,
        "each": 0.03639372626234195,
        "match": 0.03639372626234195,
        "emits": 0.03639372626234195,
        "metadata": 0.03639372626234195,
        "such": 0.03639372626234195,
        "as": 0.18196863131170973,
        "handler": 0.03639372626234195,
        "names": 0.03639372626234195,
        "http": 0.03639372626234195,
        "verbs": 0.03639372626234195,
        "detected": 0.03639372626234195,
        "external": 0.0727874525246839,
        "requests": 0.0727874525246839,
        "session": 0.0727874525246839,
        "db": 0.1455749050493678,
        "assembled": 0.03639372626234195,
        "sequence": 0.03639372626234195,
        "steps": 0.03639372626234195,
        "that": 0.0727874525246839,
        "downstream": 0.03639372626234195,
        "templates": 0.03639372626234195,
        "render": 0.03639372626234195,
        "diagrams": 0.03639372626234195,
        "mermaid": 0.03639372626234195,
        "sequencediagram": 0.03639372626234195,
        "participant": 0.1455749050493678,
        "client": 0.10918117878702585,
        "endpoint": 0.03639372626234195,
        "auth": 0.10918117878702585,
        "service": 0.03639372626234195,
        "database": 0.03639372626234195,
        "login": 0.03639372626234195,
        "token": 0.03639372626234195,
        "response": 0.0727874525246839,
        "write": 0.03639372626234195,
        "ack": 0.03639372626234195,
        "authenticated": 0.03639372626234195,
        "other": 0.03639372626234195,
        "analyzers": 0.0727874525246839,
        "complement": 0.03639372626234195,
        "these": 0.03639372626234195,
        "signals": 0.03639372626234195,
        "entrypointanalyzer": 0.03639372626234195,
        "ranks": 0.03639372626234195,
        "executable": 0.03639372626234195,
        "commands": 0.0727874525246839,
        "uvicorn": 0.03639372626234195,
        "django": 0.03639372626234195,
        "runserver": 0.03639372626234195,
        "npm": 0.03639372626234195,
        "dev": 0.03639372626234195,
        "spring": 0.03639372626234195,
        "boot": 0.03639372626234195,
        "bootrun": 0.03639372626234195,
        "buildanalyzer": 0.03639372626234195,
        "pairs": 0.03639372626234195,
        "with": 0.03639372626234195,
        "reproducible": 0.03639372626234195,
        "test": 0.03639372626234195,
        "os": 0.03639372626234195,
        "aware": 0.03639372626234195,
        "scripts": 0.0727874525246839,
        "dependencyanalyzer": 0.03639372626234195,
        "patternanalyzer": 0.03639372626234195,
        "languageanalyzer": 0.03639372626234195,
        "describe": 0.03639372626234195,
        "frameworks": 0.03639372626234195,
        "docker": 0.03639372626234195,
        "k8s": 0.03639372626234195,
        "ci": 0.03639372626234195,
        "layouts": 0.03639372626234195,
        "monorepo": 0.03639372626234195,
        "hints": 0.03639372626234195,
        "feed": 0.03639372626234195,
        "the": 0.03639372626234195,
        "features": 0.03639372626234195,
        "architecture": 0.0727874525246839,
        "quick": 0.0727874525246839,
        "start": 0.0727874525246839,
        "tests": 0.1455749050493678,
        "under": 0.03639372626234195,
        "prompting": 0.03639372626234195,
        "git": 0.03639372626234195,
        "assert": 0.03639372626234195,
        "accuracy": 0.03639372626234195,
        "command": 0.03639372626234195,
        "selection": 0.03639372626234195,
        "publishing": 0.03639372626234195,
        "behavior": 0.03639372626234195,
        "docgen": 0.0727874525246839,
        "end": 0.03639372626234195,
        "begin": 0.03639372626234195,
        "quickstart": 0.03639372626234195,
        "1": 0.03639372626234195,
        "create": 0.03639372626234195,
        "a": 0.03639372626234195,
        "virtual": 0.03639372626234195,
        "environment": 0.03639372626234195,
        "activate": 0.0727874525246839,
        "it": 0.03639372626234195,
        "windows": 0.03639372626234195,
        "python": 0.0727874525246839,
        "m": 0.0727874525246839,
        "venv": 0.18196863131170973,
        "then": 0.03639372626234195,
        "macos": 0.03639372626234195,
        "linux": 0.03639372626234195
      },
      "text": "base) Diff-->>Orc: DiffResult(changed_files, sections) Orc->>Scan: scan() Scan-->>Orc: RepoManifest Orc->>Ana: analyze(manifest) Ana-->>Orc: Signal[] Orc->>RAG: build(manifest, sections) RAG-->>Orc: context snippets Orc->>Prompt: render_sections(sections) Prompt-->>Orc: new section bodies Orc->>Mark: replace(markdown, section) Mark-->>Orc: patched README Orc->>Post: lint/toc/badges/link check/scorecard Post-->>Orc: final README + diff Orc->>Pub: commit or PR (branch, title, body) ``` ### API Signal Extraction `StructureAnalyzer` inspects source files for FastAPI decorators, Express route calls, and Pydantic/ORM entities. Each match emits `Signal` metadata such as handler names, HTTP verbs, detected external calls (`requests`, `session`, `db`), and assembled `sequence` steps that downstream templates render as diagrams. ```mermaid sequenceDiagram participant Client participant API as FastAPI endpoint participant Auth as External service participant DB as Database Client->>API: POST /login API->>Auth: requests.post() Auth-->>API: token/response API->>DB: session.write() DB-->>API: ack API-->>Client: Authenticated response ``` Other analyzers complement these signals: - `EntryPointAnalyzer` ranks executable commands (FastAPI `uvicorn`, Django `runserver`, npm `dev`, Spring Boot `bootRun`). - `BuildAnalyzer` pairs manifest files with reproducible build/test commands and OS-aware scripts. - `DependencyAnalyzer`, `PatternAnalyzer`, and `LanguageAnalyzer` describe frameworks, Docker/K8s/CI layouts, and monorepo hints that feed the features, architecture, and quick-start sections. - Tests under `tests/analyzers/`, `tests/prompting/`, and `tests/git/` assert signal accuracy, command selection, and publishing behavior. <!-- docgen:end:architecture --> ## Quick Start <!-- docgen:begin:quickstart --> 1. Create a virtual environment and activate it: - Windows: `python -m venv .venv` then `.\\.venv\\Scripts\\activate` - macOS/Linux: `python -m venv .venv`",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#6",
      "vector": {
        "tests": 0.04214497519610896,
        "git": 0.04214497519610896,
        "assert": 0.04214497519610896,
        "signal": 0.04214497519610896,
        "accuracy": 0.04214497519610896,
        "command": 0.04214497519610896,
        "selection": 0.04214497519610896,
        "and": 0.16857990078443583,
        "publishing": 0.04214497519610896,
        "behavior": 0.04214497519610896,
        "docgen": 0.5057397023533075,
        "end": 0.08428995039221791,
        "architecture": 0.04214497519610896,
        "quick": 0.04214497519610896,
        "start": 0.04214497519610896,
        "begin": 0.08428995039221791,
        "quickstart": 0.08428995039221791,
        "1": 0.04214497519610896,
        "create": 0.04214497519610896,
        "a": 0.08428995039221791,
        "virtual": 0.04214497519610896,
        "environment": 0.04214497519610896,
        "activate": 0.12643492558832686,
        "it": 0.04214497519610896,
        "windows": 0.04214497519610896,
        "python": 0.2528698511766537,
        "m": 0.2528698511766537,
        "venv": 0.2528698511766537,
        "then": 0.08428995039221791,
        "scripts": 0.04214497519610896,
        "macos": 0.04214497519610896,
        "linux": 0.04214497519610896,
        "source": 0.04214497519610896,
        "bin": 0.04214497519610896,
        "2": 0.08428995039221791,
        "install": 0.12643492558832686,
        "dependencies": 0.04214497519610896,
        "in": 0.04214497519610896,
        "editable": 0.04214497519610896,
        "mode": 0.08428995039221791,
        "includes": 0.04214497519610896,
        "cli": 0.12643492558832686,
        "entry": 0.04214497519610896,
        "point": 0.04214497519610896,
        "test": 0.04214497519610896,
        "tooling": 0.04214497519610896,
        "bash": 0.12643492558832686,
        "pip": 0.12643492558832686,
        "upgrade": 0.04214497519610896,
        "e": 0.04214497519610896,
        "dev": 0.04214497519610896,
        "3": 0.04214497519610896,
        "configure": 0.04214497519610896,
        "yml": 0.08428995039221791,
        "with": 0.08428995039221791,
        "local": 0.04214497519610896,
        "llm": 0.08428995039221791,
        "runner": 0.12643492558832686,
        "details": 0.04214497519610896,
        "see": 0.04214497519610896,
        "configuration": 0.12643492558832686,
        "below": 0.04214497519610896,
        "4": 0.04214497519610896,
        "generate": 0.04214497519610896,
        "an": 0.04214497519610896,
        "initial": 0.04214497519610896,
        "readme": 0.12643492558832686,
        "from": 0.04214497519610896,
        "the": 0.04214497519610896,
        "repository": 0.04214497519610896,
        "root": 0.04214497519610896,
        "init": 0.04214497519610896,
        "5": 0.04214497519610896,
        "after": 0.04214497519610896,
        "subsequent": 0.04214497519610896,
        "changes": 0.04214497519610896,
        "refresh": 0.04214497519610896,
        "documentation": 0.04214497519610896,
        "update": 0.08428995039221791,
        "diff": 0.04214497519610896,
        "base": 0.04214497519610896,
        "origin": 0.04214497519610896,
        "main": 0.04214497519610896,
        "6": 0.04214497519610896,
        "use": 0.04214497519610896,
        "dry": 0.04214497519610896,
        "run": 0.04214497519610896,
        "to": 0.04214497519610896,
        "preview": 0.04214497519610896,
        "diffs": 0.04214497519610896,
        "or": 0.16857990078443583,
        "verbose": 0.04214497519610896,
        "for": 0.04214497519610896,
        "deeper": 0.04214497519610896,
        "logs": 0.04214497519610896,
        "while": 0.04214497519610896,
        "iterating": 0.04214497519610896,
        "on": 0.04214497519610896,
        "analyzers": 0.08428995039221791,
        "config": 0.04214497519610896,
        "py": 0.04214497519610896,
        "loads": 0.04214497519610896,
        "into": 0.04214497519610896,
        "strongly": 0.04214497519610896,
        "typed": 0.04214497519610896,
        "dataclasses": 0.04214497519610896,
        "provides": 0.04214497519610896,
        "minimal": 0.04214497519610896,
        "yaml": 0.08428995039221791,
        "parser": 0.04214497519610896,
        "when": 0.04214497519610896,
        "pyyaml": 0.04214497519610896,
        "is": 0.04214497519610896,
        "absent": 0.04214497519610896,
        "common": 0.04214497519610896,
        "fields": 0.04214497519610896,
        "ollama": 0.04214497519610896,
        "model": 0.08428995039221791,
        "llama3": 0.04214497519610896,
        "8b": 0.04214497519610896,
        "instruct": 0.04214497519610896,
        "base_url": 0.04214497519610896,
        "http": 0.04214497519610896,
        "localhost": 0.04214497519610896,
        "12434": 0.04214497519610896,
        "engines": 0.04214497519610896,
        "v1": 0.04214497519610896,
        "temperature": 0.04214497519610896,
        "0": 0.04214497519610896,
        "max_tokens": 0.04214497519610896,
        "2048": 0.04214497519610896,
        "style": 0.04214497519610896,
        "comprehensive": 0.04214497519610896,
        "concise": 0.04214497519610896,
        "template_pack": 0.04214497519610896,
        "null": 0.04214497519610896,
        "optional": 0.04214497519610896,
        "alt": 0.04214497519610896,
        "templates": 0.08428995039221791,
        "under": 0.04214497519610896,
        "prompting": 0.04214497519610896,
        "publish": 0.04214497519610896,
        "pr": 0.08428995039221791,
        "commit": 0.04214497519610896,
        "branch_prefix": 0.04214497519610896,
        "labels": 0.04214497519610896,
        "docs": 0.08428995039221791,
        "auto": 0.04214497519610896,
        "update_existing": 0.04214497519610896,
        "false": 0.04214497519610896,
        "enabled": 0.04214497519610896,
        "subset": 0.04214497519610896,
        "of": 0.04214497519610896,
        "plugin": 0.04214497519610896,
        "names": 0.04214497519610896,
        "empty": 0.04214497519610896,
        "uses": 0.04214497519610896,
        "all": 0.04214497519610896,
        "built": 0.04214497519610896,
        "ins": 0.04214497519610896,
        "exclude_paths": 0.08428995039221791,
        "sandbox": 0.08428995039221791,
        "ci": 0.04214497519610896,
        "watched_globs": 0.04214497519610896
      },
      "text": "`tests/git/` assert signal accuracy, command selection, and publishing behavior. <!-- docgen:end:architecture --> ## Quick Start <!-- docgen:begin:quickstart --> 1. Create a virtual environment and activate it: - Windows: `python -m venv .venv` then `.\\.venv\\Scripts\\activate` - macOS/Linux: `python -m venv .venv` then `source .venv/bin/activate` 2. Install dependencies in editable mode (includes CLI entry point and test tooling): ```bash python -m pip install --upgrade pip python -m pip install -e .[dev] ``` 3. Configure `.docgen.yml` with local LLM runner details (see Configuration below). 4. Generate an initial README from the repository root: ```bash python -m docgen.cli init . ``` 5. After subsequent changes, refresh documentation with: ```bash python -m docgen.cli update --diff-base origin/main ``` 6. Use `--dry-run` to preview diffs or `--verbose` for deeper logs while iterating on analyzers. <!-- docgen:end:quickstart --> ## Configuration <!-- docgen:begin:configuration --> `docgen/config.py` loads `.docgen.yml` into strongly typed dataclasses and provides a minimal YAML parser when PyYAML is absent. Common fields: ```yaml llm: runner: \"ollama\" # or \"model-runner\" model: \"llama3:8b-instruct\" base_url: \"http://localhost:12434/engines/v1\" temperature: 0.2 max_tokens: 2048 readme: style: \"comprehensive\" # or \"concise\" template_pack: null # optional alt templates under docgen/prompting/templates/ publish: mode: \"pr\" # \"pr\" or \"commit\" branch_prefix: \"docgen/readme-update\" labels: [\"docs:auto\"] update_existing: false analyzers: enabled: [] # subset of plugin names, empty uses all built-ins exclude_paths: - \"sandbox/\" ci: watched_globs: - \"docgen/**\" - \"docs/**\" exclude_paths: - \"sandbox/\"",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#7",
      "vector": {
        "templates": 0.12058018065872111,
        "under": 0.12058018065872111,
        "docgen": 0.5225141161877915,
        "prompting": 0.08038678710581408,
        "publish": 0.04019339355290704,
        "mode": 0.08038678710581408,
        "pr": 0.16077357421162816,
        "or": 0.12058018065872111,
        "commit": 0.04019339355290704,
        "branch_prefix": 0.04019339355290704,
        "readme": 0.08038678710581408,
        "update": 0.12058018065872111,
        "labels": 0.04019339355290704,
        "docs": 0.24116036131744223,
        "auto": 0.04019339355290704,
        "update_existing": 0.04019339355290704,
        "false": 0.04019339355290704,
        "analyzers": 0.12058018065872111,
        "enabled": 0.04019339355290704,
        "subset": 0.04019339355290704,
        "of": 0.04019339355290704,
        "plugin": 0.04019339355290704,
        "names": 0.04019339355290704,
        "empty": 0.04019339355290704,
        "uses": 0.04019339355290704,
        "all": 0.04019339355290704,
        "built": 0.04019339355290704,
        "ins": 0.04019339355290704,
        "exclude_paths": 0.12058018065872111,
        "sandbox": 0.08038678710581408,
        "ci": 0.24116036131744223,
        "watched_globs": 0.08038678710581408,
        "highlights": 0.04019339355290704,
        "llmconfig": 0.04019339355290704,
        "supports": 0.04019339355290704,
        "env": 0.04019339355290704,
        "overrides": 0.08038678710581408,
        "docgen_llm_model": 0.04019339355290704,
        "docgen_llm_base_url": 0.04019339355290704,
        "docgen_llm_api_key": 0.04019339355290704,
        "and": 0.12058018065872111,
        "enforces": 0.04019339355290704,
        "loopback": 0.04019339355290704,
        "urls": 0.04019339355290704,
        "publishconfig": 0.04019339355290704,
        "toggles": 0.04019339355290704,
        "automatic": 0.04019339355290704,
        "commits": 0.04019339355290704,
        "creation": 0.04019339355290704,
        "publisher": 0.04019339355290704,
        "relies": 0.04019339355290704,
        "on": 0.04019339355290704,
        "the": 0.16077357421162816,
        "github": 0.12058018065872111,
        "cli": 0.08038678710581408,
        "when": 0.12058018065872111,
        "analyzerconfig": 0.04019339355290704,
        "removes": 0.04019339355290704,
        "noisy": 0.04019339355290704,
        "directories": 0.04019339355290704,
        "from": 0.04019339355290704,
        "analysis": 0.04019339355290704,
        "without": 0.04019339355290704,
        "editing": 0.04019339355290704,
        "gitignore": 0.04019339355290704,
        "template": 0.04019339355290704,
        "can": 0.04019339355290704,
        "live": 0.04019339355290704,
        "are": 0.04019339355290704,
        "picked": 0.04019339355290704,
        "up": 0.04019339355290704,
        "automatically": 0.04019339355290704,
        "present": 0.04019339355290704,
        "watchers": 0.04019339355290704,
        "skip": 0.04019339355290704,
        "updates": 0.04019339355290704,
        "changed": 0.04019339355290704,
        "files": 0.04019339355290704,
        "do": 0.04019339355290704,
        "not": 0.04019339355290704,
        "match": 0.04019339355290704,
        "aligning": 0.04019339355290704,
        "with": 0.04019339355290704,
        "workflow": 0.04019339355290704,
        "in": 0.12058018065872111,
        "yml": 0.08038678710581408,
        "end": 0.08038678710581408,
        "configuration": 0.04019339355290704,
        "build": 0.04019339355290704,
        "test": 0.08038678710581408,
        "begin": 0.08038678710581408,
        "build_and_test": 0.08038678710581408,
        "format": 0.04019339355290704,
        "lint": 0.04019339355290704,
        "bash": 0.16077357421162816,
        "black": 0.04019339355290704,
        "tests": 0.12058018065872111,
        "python": 0.2009669677645352,
        "m": 0.2009669677645352,
        "ruff": 0.04019339355290704,
        "check": 0.08038678710581408,
        "type": 0.04019339355290704,
        "core": 0.04019339355290704,
        "modules": 0.08038678710581408,
        "mypy": 0.04019339355290704,
        "run": 0.04019339355290704,
        "full": 0.04019339355290704,
        "suite": 0.04019339355290704,
        "mirrors": 0.04019339355290704,
        "runtime": 0.04019339355290704,
        "orchestrator": 0.08038678710581408,
        "git": 0.04019339355290704,
        "rag": 0.04019339355290704,
        "post": 0.04019339355290704,
        "processing": 0.04019339355290704,
        "pytest": 0.12058018065872111,
        "target": 0.04019339355290704,
        "specific": 0.04019339355290704,
        "areas": 0.04019339355290704,
        "while": 0.04019339355290704,
        "iterating": 0.04019339355290704,
        "k": 0.04019339355290704,
        "test_structure": 0.04019339355290704,
        "py": 0.04019339355290704,
        "regenerate": 0.04019339355290704,
        "fixtures": 0.04019339355290704,
        "inspect": 0.04019339355290704,
        "scorecards": 0.04019339355290704,
        "stored": 0.04019339355290704,
        "to": 0.04019339355290704,
        "validate": 0.04019339355290704,
        "generated": 0.04019339355290704,
        "content": 0.04019339355290704,
        "deployment": 0.08038678710581408,
        "actions": 0.08038678710581408,
        "recipe": 0.04019339355290704,
        "documented": 0.04019339355290704,
        "md": 0.04019339355290704,
        "installs": 0.04019339355290704,
        "package": 0.04019339355290704,
        "editable": 0.04019339355290704
      },
      "text": "templates under docgen/prompting/templates/ publish: mode: \"pr\" # \"pr\" or \"commit\" branch_prefix: \"docgen/readme-update\" labels: [\"docs:auto\"] update_existing: false analyzers: enabled: [] # subset of plugin names, empty uses all built-ins exclude_paths: - \"sandbox/\" ci: watched_globs: - \"docgen/**\" - \"docs/**\" exclude_paths: - \"sandbox/\" ``` Highlights: - `LLMConfig` supports env overrides (`DOCGEN_LLM_MODEL`, `DOCGEN_LLM_BASE_URL`, `DOCGEN_LLM_API_KEY`) and enforces loopback URLs. - `PublishConfig` toggles automatic commits or PR creation; `Publisher` relies on the GitHub CLI when `mode=\"pr\"`. - `AnalyzerConfig.exclude_paths` removes noisy directories from analysis without editing `.gitignore`. - Template overrides can live under `docs/templates/` and are picked up automatically when present. - CI watchers skip updates when changed files do not match `ci.watched_globs`, aligning with the workflow in `docs/ci/docgen-update.yml`. <!-- docgen:end:configuration --> ## Build & Test <!-- docgen:begin:build_and_test --> - Format and lint: ```bash black docgen tests python -m ruff check docgen tests ``` - Type-check core modules: ```bash python -m mypy docgen ``` - Run the full test suite (mirrors runtime modules: CLI, orchestrator, analyzers, prompting, git, RAG, post-processing): ```bash python -m pytest ``` - Target specific areas while iterating: ```bash python -m pytest -k orchestrator python -m pytest tests/analyzers/test_structure.py ``` - Regenerate README fixtures or inspect scorecards stored under `.docgen/` to validate generated content. <!-- docgen:end:build_and_test --> ## Deployment <!-- docgen:begin:deployment --> - GitHub Actions recipe: `docs/ci/docgen-update.yml` (documented in `docs/ci/github-actions.md`) installs the package in editable",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#8",
      "vector": {
        "python": 0.040555355282690636,
        "m": 0.040555355282690636,
        "pytest": 0.040555355282690636,
        "tests": 0.040555355282690636,
        "analyzers": 0.040555355282690636,
        "test_structure": 0.040555355282690636,
        "py": 0.08111071056538127,
        "regenerate": 0.040555355282690636,
        "readme": 0.12166606584807191,
        "fixtures": 0.040555355282690636,
        "or": 0.24333213169614382,
        "inspect": 0.08111071056538127,
        "scorecards": 0.040555355282690636,
        "stored": 0.040555355282690636,
        "under": 0.040555355282690636,
        "docgen": 0.48666426339228763,
        "to": 0.20277677641345318,
        "validate": 0.040555355282690636,
        "generated": 0.08111071056538127,
        "content": 0.040555355282690636,
        "end": 0.08111071056538127,
        "build_and_test": 0.040555355282690636,
        "deployment": 0.12166606584807191,
        "begin": 0.08111071056538127,
        "github": 0.12166606584807191,
        "actions": 0.08111071056538127,
        "recipe": 0.040555355282690636,
        "docs": 0.12166606584807191,
        "ci": 0.12166606584807191,
        "update": 0.16222142113076254,
        "yml": 0.040555355282690636,
        "documented": 0.040555355282690636,
        "in": 0.12166606584807191,
        "md": 0.040555355282690636,
        "installs": 0.040555355282690636,
        "the": 0.40555355282690636,
        "package": 0.040555355282690636,
        "editable": 0.040555355282690636,
        "mode": 0.08111071056538127,
        "runs": 0.040555355282690636,
        "and": 0.16222142113076254,
        "optionally": 0.040555355282690636,
        "commits": 0.08111071056538127,
        "changes": 0.040555355282690636,
        "back": 0.040555355282690636,
        "branch": 0.040555355282690636,
        "self": 0.040555355282690636,
        "hosted": 0.040555355282690636,
        "runners": 0.040555355282690636,
        "are": 0.12166606584807191,
        "recommended": 0.040555355282690636,
        "so": 0.040555355282690636,
        "workflow": 0.040555355282690636,
        "can": 0.08111071056538127,
        "reach": 0.040555355282690636,
        "your": 0.040555355282690636,
        "local": 0.08111071056538127,
        "inference": 0.040555355282690636,
        "endpoint": 0.040555355282690636,
        "docgen_llm_base_url": 0.040555355282690636,
        "same": 0.040555355282690636,
        "settings": 0.040555355282690636,
        "apply": 0.040555355282690636,
        "when": 0.12166606584807191,
        "running": 0.040555355282690636,
        "cd": 0.040555355282690636,
        "pipelines": 0.040555355282690636,
        "outside": 0.040555355282690636,
        "publisher": 0.040555355282690636,
        "push": 0.040555355282690636,
        "directly": 0.040555355282690636,
        "publish": 0.040555355282690636,
        "commit": 0.040555355282690636,
        "for": 0.040555355282690636,
        "bootstrap": 0.040555355282690636,
        "scenarios": 0.040555355282690636,
        "open": 0.040555355282690636,
        "prs": 0.040555355282690636,
        "with": 0.040555355282690636,
        "labeled": 0.040555355282690636,
        "summaries": 0.040555355282690636,
        "gh": 0.040555355282690636,
        "cli": 0.040555355282690636,
        "credentials": 0.040555355282690636,
        "available": 0.040555355282690636,
        "troubleshooting": 0.08111071056538127,
        "use": 0.040555355282690636,
        "verbose": 0.040555355282690636,
        "surface": 0.040555355282690636,
        "analyzer": 0.08111071056538127,
        "selection": 0.040555355282690636,
        "prompt": 0.08111071056538127,
        "generation": 0.040555355282690636,
        "post": 0.040555355282690636,
        "processing": 0.040555355282690636,
        "diagnostics": 0.040555355282690636,
        "emitted": 0.040555355282690636,
        "by": 0.040555355282690636,
        "get_logger": 0.040555355282690636,
        "orchestrator": 0.040555355282690636,
        "if": 0.040555355282690636,
        "already": 0.040555355282690636,
        "exists": 0.040555355282690636,
        "init": 0.040555355282690636,
        "will": 0.040555355282690636,
        "abort": 0.040555355282690636,
        "switch": 0.040555355282690636,
        "remove": 0.040555355282690636,
        "file": 0.040555355282690636,
        "before": 0.08111071056538127,
        "re": 0.040555355282690636,
        "initialising": 0.040555355282690636,
        "empty": 0.040555355282690636,
        "failing": 0.040555355282690636,
        "sections": 0.040555355282690636,
        "trigger": 0.040555355282690636,
        "fallback": 0.040555355282690636,
        "stubs": 0.040555355282690636,
        "from": 0.040555355282690636,
        "failsafe": 0.040555355282690636,
        "raised": 0.040555355282690636,
        "reason": 0.040555355282690636,
        "rerun": 0.040555355282690636,
        "once": 0.040555355282690636,
        "underlying": 0.040555355282690636,
        "issue": 0.040555355282690636,
        "is": 0.08111071056538127,
        "fixed": 0.040555355282690636,
        "link": 0.040555355282690636,
        "validation": 0.040555355282690636,
        "issues": 0.040555355282690636,
        "logged": 0.040555355282690636,
        "as": 0.040555355282690636,
        "warnings": 0.040555355282690636,
        "relative": 0.040555355282690636,
        "paths": 0.040555355282690636,
        "add": 0.040555355282690636,
        "missing": 0.040555355282690636,
        "files": 0.040555355282690636,
        "committing": 0.040555355282690636,
        "clear": 0.040555355282690636,
        "manifest_cache": 0.040555355282690636,
        "json": 0.08111071056538127,
        "embeddings": 0.040555355282690636,
        "refactoring": 0.040555355282690636,
        "large": 0.040555355282690636,
        "parts": 0.040555355282690636,
        "of": 0.040555355282690636,
        "repo": 0.040555355282690636,
        "structure": 0.040555355282690636,
        "force": 0.040555355282690636,
        "a": 0.08111071056538127,
        "fresh": 0.040555355282690636,
        "scan": 0.040555355282690636,
        "ensure": 0.040555355282690636,
        "model": 0.040555355282690636,
        "runner": 0.040555355282690636,
        "reachable": 0.040555355282690636,
        "at": 0.040555355282690636,
        "loopback": 0.040555355282690636,
        "url": 0.040555355282690636,
        "remote": 0.040555355282690636
      },
      "text": "python -m pytest tests/analyzers/test_structure.py ``` - Regenerate README fixtures or inspect scorecards stored under `.docgen/` to validate generated content. <!-- docgen:end:build_and_test --> ## Deployment <!-- docgen:begin:deployment --> - GitHub Actions recipe: `docs/ci/docgen-update.yml` (documented in `docs/ci/github-actions.md`) installs the package in editable mode, runs `docgen update`, and optionally commits README changes back to the branch. - Self-hosted runners are recommended so the workflow can reach your local inference endpoint (`DOCGEN_LLM_BASE_URL`). The same settings apply when running in CI/CD pipelines outside GitHub. - `Publisher` can push commits directly (`publish.mode: commit`) for bootstrap scenarios or open PRs with labeled summaries when `gh` CLI credentials are available. <!-- docgen:end:deployment --> ## Troubleshooting <!-- docgen:begin:troubleshooting --> - Use `--verbose` to surface analyzer selection, prompt generation, and post-processing diagnostics emitted by `get_logger(\"orchestrator\")`. - If the README already exists, `docgen init` will abort; switch to `docgen update` or remove the file before re-initialising. - Empty or failing sections trigger fallback stubs from `docgen/failsafe.py`; inspect the raised reason and rerun once the underlying analyzer or prompt issue is fixed. - Link validation issues are logged as warnings. Update relative paths or add missing files before committing generated docs. - Clear `.docgen/manifest_cache.json` and `.docgen/embeddings.json` when refactoring large parts of the repo structure to force a fresh scan. - Ensure the local model runner is reachable at a loopback URL; remote",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#9",
      "vector": {
        "paths": 0.03782347372361169,
        "or": 0.26476431606528184,
        "add": 0.11347042117083507,
        "missing": 0.03782347372361169,
        "files": 0.03782347372361169,
        "before": 0.03782347372361169,
        "committing": 0.03782347372361169,
        "generated": 0.03782347372361169,
        "docs": 0.03782347372361169,
        "clear": 0.03782347372361169,
        "docgen": 0.4538816846833403,
        "manifest_cache": 0.03782347372361169,
        "json": 0.07564694744722338,
        "and": 0.11347042117083507,
        "embeddings": 0.03782347372361169,
        "when": 0.07564694744722338,
        "refactoring": 0.03782347372361169,
        "large": 0.03782347372361169,
        "parts": 0.03782347372361169,
        "of": 0.03782347372361169,
        "the": 0.3404112635125052,
        "repo": 0.03782347372361169,
        "structure": 0.03782347372361169,
        "to": 0.03782347372361169,
        "force": 0.03782347372361169,
        "a": 0.4538816846833403,
        "fresh": 0.03782347372361169,
        "scan": 0.03782347372361169,
        "ensure": 0.03782347372361169,
        "local": 0.07564694744722338,
        "model": 0.07564694744722338,
        "runner": 0.07564694744722338,
        "is": 0.07564694744722338,
        "reachable": 0.03782347372361169,
        "at": 0.03782347372361169,
        "loopback": 0.07564694744722338,
        "url": 0.03782347372361169,
        "remote": 0.07564694744722338,
        "hosts": 0.07564694744722338,
        "are": 0.07564694744722338,
        "intentionally": 0.03782347372361169,
        "rejected": 0.03782347372361169,
        "by": 0.03782347372361169,
        "llmrunner": 0.07564694744722338,
        "for": 0.03782347372361169,
        "security": 0.03782347372361169,
        "end": 0.11347042117083507,
        "troubleshooting": 0.03782347372361169,
        "faq": 0.11347042117083507,
        "begin": 0.07564694744722338,
        "q": 0.15129389489444675,
        "how": 0.03782347372361169,
        "this": 0.07564694744722338,
        "readme": 0.03782347372361169,
        "maintained": 0.03782347372361169,
        "generate": 0.03782347372361169,
        "with": 0.03782347372361169,
        "init": 0.03782347372361169,
        "keep": 0.03782347372361169,
        "it": 0.03782347372361169,
        "current": 0.03782347372361169,
        "via": 0.07564694744722338,
        "update": 0.03782347372361169,
        "optionally": 0.03782347372361169,
        "in": 0.15129389489444675,
        "ci": 0.03782347372361169,
        "using": 0.03782347372361169,
        "provided": 0.03782347372361169,
        "workflow": 0.03782347372361169,
        "what": 0.03782347372361169,
        "happens": 0.03782347372361169,
        "if": 0.03782347372361169,
        "analyzers": 0.11347042117083507,
        "miss": 0.03782347372361169,
        "framework": 0.03782347372361169,
        "command": 0.03782347372361169,
        "signals": 0.03782347372361169,
        "pluggable": 0.03782347372361169,
        "custom": 0.03782347372361169,
        "analyzer": 0.03782347372361169,
        "entry": 0.03782347372361169,
        "point": 0.03782347372361169,
        "group": 0.03782347372361169,
        "extend": 0.03782347372361169,
        "existing": 0.03782347372361169,
        "utilities": 0.03782347372361169,
        "under": 0.03782347372361169,
        "utils": 0.03782347372361169,
        "py": 0.03782347372361169,
        "can": 0.03782347372361169,
        "use": 0.03782347372361169,
        "llm": 0.03782347372361169,
        "endpoint": 0.03782347372361169,
        "no": 0.03782347372361169,
        "enforces": 0.03782347372361169,
        "internal": 0.03782347372361169,
        "supply": 0.03782347372361169,
        "ollama": 0.03782347372361169,
        "instance": 0.03782347372361169,
        "instead": 0.03782347372361169,
        "where": 0.03782347372361169,
        "do": 0.03782347372361169,
        "i": 0.03782347372361169,
        "report": 0.03782347372361169,
        "issues": 0.03782347372361169,
        "propose": 0.03782347372361169,
        "enhancements": 0.03782347372361169,
        "file": 0.03782347372361169,
        "an": 0.03782347372361169,
        "issue": 0.03782347372361169,
        "open": 0.03782347372361169,
        "discussion": 0.03782347372361169,
        "repository": 0.03782347372361169,
        "reference": 0.03782347372361169,
        "relevant": 0.03782347372361169,
        "sections": 0.03782347372361169,
        "spec": 0.15129389489444675,
        "md": 0.11347042117083507,
        "feature_order": 0.07564694744722338,
        "describing": 0.03782347372361169,
        "change": 0.03782347372361169,
        "license": 0.15129389489444675,
        "licensing": 0.03782347372361169,
        "information": 0.03782347372361169,
        "once": 0.03782347372361169,
        "project": 0.03782347372361169,
        "selects": 0.03782347372361169,
        "track": 0.03782347372361169,
        "candidate": 0.03782347372361169,
        "licenses": 0.03782347372361169,
        "alongside": 0.03782347372361169,
        "roadmap": 0.03782347372361169
      },
      "text": "paths or add missing files before committing generated docs. - Clear `.docgen/manifest_cache.json` and `.docgen/embeddings.json` when refactoring large parts of the repo structure to force a fresh scan. - Ensure the local model runner is reachable at a loopback URL; remote hosts are intentionally rejected by `LLMRunner` for security. <!-- docgen:end:troubleshooting --> ## FAQ <!-- docgen:begin:faq --> **Q: How is this README maintained?** A: Generate with `docgen init` and keep it current via `docgen update` (optionally in CI using the provided workflow). **Q: What happens if analyzers miss a framework or command?** A: Signals are pluggable\u2014add a custom analyzer via the `docgen.analyzers` entry-point group or extend the existing utilities under `docgen/analyzers/utils.py`. **Q: Can docgen use a remote LLM endpoint?** A: No. `LLMRunner` enforces loopback/`.internal` hosts; supply a local model runner or Ollama instance instead. **Q: Where do I report issues or propose enhancements?** A: File an issue or open a discussion in this repository and reference the relevant sections in `spec/spec.md` or `spec/feature_order.md` when describing the change. <!-- docgen:end:faq --> ## License <!-- docgen:begin:license --> Add licensing information once the project selects a license. Track candidate licenses alongside the roadmap in `spec/feature_order.md`. <!-- docgen:end:license -->",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "docs/ci/docgen-update.yml#0",
      "vector": {
        "name": 0.2773500981126145,
        "docgen": 0.1849000654084097,
        "update": 0.2311250817605121,
        "on": 0.09245003270420485,
        "push": 0.046225016352102424,
        "branches": 0.09245003270420485,
        "main": 0.13867504905630726,
        "pull_request": 0.13867504905630726,
        "jobs": 0.046225016352102424,
        "readme": 0.1849000654084097,
        "runs": 0.046225016352102424,
        "self": 0.046225016352102424,
        "hosted": 0.046225016352102424,
        "steps": 0.09245003270420485,
        "uses": 0.13867504905630726,
        "actions": 0.2311250817605121,
        "checkout": 0.046225016352102424,
        "v4": 0.09245003270420485,
        "with": 0.13867504905630726,
        "fetch": 0.046225016352102424,
        "depth": 0.046225016352102424,
        "0": 0.046225016352102424,
        "setup": 0.046225016352102424,
        "python": 0.2311250817605121,
        "v5": 0.046225016352102424,
        "version": 0.046225016352102424,
        "3": 0.046225016352102424,
        "11": 0.046225016352102424,
        "cache": 0.09245003270420485,
        "path": 0.046225016352102424,
        "pip": 0.2773500981126145,
        "key": 0.046225016352102424,
        "runner": 0.09245003270420485,
        "os": 0.09245003270420485,
        "hashfiles": 0.046225016352102424,
        "pyproject": 0.046225016352102424,
        "toml": 0.046225016352102424,
        "restore": 0.046225016352102424,
        "keys": 0.046225016352102424,
        "install": 0.13867504905630726,
        "dependencies": 0.046225016352102424,
        "run": 0.2311250817605121,
        "m": 0.13867504905630726,
        "upgrade": 0.046225016352102424,
        "e": 0.046225016352102424,
        "dev": 0.046225016352102424,
        "determine": 0.046225016352102424,
        "diff": 0.1849000654084097,
        "base": 0.2773500981126145,
        "id": 0.046225016352102424,
        "if": 0.09245003270420485,
        "github": 0.2311250817605121,
        "event_name": 0.046225016352102424,
        "then": 0.09245003270420485,
        "echo": 0.09245003270420485,
        "event": 0.046225016352102424,
        "sha": 0.046225016352102424,
        "github_output": 0.09245003270420485,
        "else": 0.046225016352102424,
        "origin": 0.046225016352102424,
        "fi": 0.09245003270420485,
        "env": 0.046225016352102424,
        "docgen_llm_base_url": 0.046225016352102424,
        "http": 0.046225016352102424,
        "localhost": 0.046225016352102424,
        "12434": 0.046225016352102424,
        "engines": 0.046225016352102424,
        "v1": 0.046225016352102424,
        "cli": 0.046225016352102424,
        "outputs": 0.046225016352102424,
        "commit": 0.09245003270420485,
        "md": 0.09245003270420485,
        "optional": 0.046225016352102424,
        "git": 0.1849000654084097,
        "status": 0.046225016352102424,
        "short": 0.046225016352102424,
        "grep": 0.046225016352102424,
        "q": 0.046225016352102424,
        "config": 0.09245003270420485,
        "user": 0.09245003270420485,
        "email": 0.046225016352102424,
        "users": 0.046225016352102424,
        "noreply": 0.046225016352102424,
        "com": 0.046225016352102424,
        "am": 0.046225016352102424,
        "docs": 0.046225016352102424,
        "via": 0.046225016352102424
      },
      "text": "name: docgen-update on: push: branches: [ main ] pull_request: branches: [ main ] jobs: update-readme: runs-on: self-hosted steps: - uses: actions/checkout@v4 with: fetch-depth: 0 - uses: actions/setup-python@v5 with: python-version: '3.11' - uses: actions/cache@v4 with: path: ~/.cache/pip key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }} restore-keys: ${{ runner.os }}-pip- - name: Install dependencies run: | python -m pip install --upgrade pip python -m pip install -e .[dev] - name: Determine diff base id: diff run: | if [ \"${{ github.event_name }}\" = \"pull_request\" ]; then echo \"base=${{ github.event.pull_request.base.sha }}\" >> \"$GITHUB_OUTPUT\" else echo \"base=origin/main\" >> \"$GITHUB_OUTPUT\" fi - name: Run docgen update env: DOCGEN_LLM_BASE_URL: http://localhost:12434/engines/v1 run: python -m docgen.cli update --diff-base ${{ steps.diff.outputs.base }} - name: Commit README.md (optional) run: | if git status --short | grep -q README.md; then git config user.name \"github-actions\" git config user.email \"github-actions@users.noreply.github.com\" git commit -am \"docs: update README via docgen\" fi",
      "metadata": {
        "path": "docs/ci/docgen-update.yml",
        "tags": [
          "docs"
        ],
        "hash": "f3bf5ea7b740892011a0aa14cb06b4bb27a4f3ea348599d85003a66032594538"
      }
    },
    {
      "id": "docs/ci/github-actions.md#0",
      "vector": {
        "github": 0.25925925925925924,
        "actions": 0.2222222222222222,
        "integration": 0.037037037037037035,
        "the": 0.1111111111111111,
        "workflow": 0.037037037037037035,
        "below": 0.037037037037037035,
        "runs": 0.07407407407407407,
        "docgen": 0.25925925925925924,
        "update": 0.2222222222222222,
        "on": 0.1111111111111111,
        "pushes": 0.037037037037037035,
        "and": 0.037037037037037035,
        "pull": 0.037037037037037035,
        "requests": 0.037037037037037035,
        "it": 0.037037037037037035,
        "assumes": 0.037037037037037035,
        "a": 0.037037037037037035,
        "self": 0.07407407407407407,
        "hosted": 0.1111111111111111,
        "runner": 0.14814814814814814,
        "or": 0.037037037037037035,
        "with": 0.14814814814814814,
        "network": 0.037037037037037035,
        "access": 0.07407407407407407,
        "to": 0.037037037037037035,
        "your": 0.037037037037037035,
        "local": 0.07407407407407407,
        "model": 0.037037037037037035,
        "runtime": 0.037037037037037035,
        "job": 0.037037037037037035,
        "skips": 0.037037037037037035,
        "early": 0.037037037037037035,
        "when": 0.037037037037037035,
        "no": 0.037037037037037035,
        "files": 0.037037037037037035,
        "match": 0.037037037037037035,
        "yml": 0.037037037037037035,
        "s": 0.037037037037037035,
        "ci": 0.037037037037037035,
        "watched_globs": 0.037037037037037035,
        "entries": 0.037037037037037035,
        "so": 0.037037037037037035,
        "that": 0.037037037037037035,
        "purely": 0.037037037037037035,
        "documentation": 0.037037037037037035,
        "only": 0.037037037037037035,
        "changes": 0.037037037037037035,
        "do": 0.037037037037037035,
        "not": 0.037037037037037035,
        "trigger": 0.037037037037037035,
        "generator": 0.037037037037037035,
        "yaml": 0.037037037037037035,
        "name": 0.3333333333333333,
        "push": 0.037037037037037035,
        "branches": 0.07407407407407407,
        "main": 0.1111111111111111,
        "pull_request": 0.1111111111111111,
        "jobs": 0.037037037037037035,
        "readme": 0.14814814814814814,
        "requires": 0.037037037037037035,
        "llm": 0.037037037037037035,
        "steps": 0.07407407407407407,
        "checkout": 0.07407407407407407,
        "repository": 0.037037037037037035,
        "uses": 0.1111111111111111,
        "v4": 0.07407407407407407,
        "fetch": 0.037037037037037035,
        "depth": 0.037037037037037035,
        "0": 0.037037037037037035,
        "set": 0.037037037037037035,
        "up": 0.037037037037037035,
        "python": 0.2222222222222222,
        "setup": 0.037037037037037035,
        "v5": 0.037037037037037035,
        "version": 0.037037037037037035,
        "3": 0.037037037037037035,
        "11": 0.037037037037037035,
        "cache": 0.1111111111111111,
        "pip": 0.25925925925925924,
        "dependencies": 0.037037037037037035,
        "path": 0.037037037037037035,
        "key": 0.037037037037037035,
        "os": 0.07407407407407407,
        "hashfiles": 0.037037037037037035,
        "pyproject": 0.037037037037037035,
        "toml": 0.037037037037037035,
        "restore": 0.037037037037037035,
        "keys": 0.037037037037037035,
        "install": 0.1111111111111111,
        "in": 0.037037037037037035,
        "editable": 0.037037037037037035,
        "mode": 0.037037037037037035,
        "run": 0.18518518518518517,
        "m": 0.1111111111111111,
        "upgrade": 0.037037037037037035,
        "e": 0.037037037037037035,
        "dev": 0.037037037037037035,
        "determine": 0.037037037037037035,
        "diff": 0.14814814814814814,
        "base": 0.2222222222222222,
        "id": 0.037037037037037035,
        "if": 0.1111111111111111,
        "event_name": 0.037037037037037035,
        "then": 0.07407407407407407,
        "echo": 0.07407407407407407,
        "event": 0.037037037037037035,
        "sha": 0.037037037037037035,
        "github_output": 0.07407407407407407,
        "else": 0.037037037037037035,
        "origin": 0.037037037037037035,
        "fi": 0.07407407407407407,
        "env": 0.037037037037037035,
        "docgen_llm_base_url": 0.037037037037037035,
        "http": 0.037037037037037035,
        "localhost": 0.037037037037037035,
        "12434": 0.037037037037037035,
        "engines": 0.037037037037037035,
        "v1": 0.037037037037037035,
        "cli": 0.037037037037037035,
        "outputs": 0.037037037037037035,
        "commit": 0.07407407407407407,
        "updates": 0.037037037037037035,
        "any": 0.037037037037037035,
        "git": 0.14814814814814814,
        "status": 0.037037037037037035,
        "short": 0.037037037037037035,
        "grep": 0.037037037037037035,
        "q": 0.037037037037037035,
        "md": 0.037037037037037035,
        "config": 0.07407407407407407,
        "user": 0.07407407407407407,
        "email": 0.037037037037037035,
        "users": 0.037037037037037035,
        "noreply": 0.037037037037037035,
        "com": 0.037037037037037035,
        "am": 0.037037037037037035,
        "docs": 0.037037037037037035,
        "via": 0.037037037037037035
      },
      "text": "# GitHub Actions Integration The workflow below runs `docgen update` on pushes and pull requests. It assumes a self-hosted runner (or GitHub-hosted runner with network access to your local model runtime). The job skips early when no files match `.docgen.yml`'s `ci.watched_globs` entries so that purely documentation-only changes do not trigger the generator. ```yaml name: docgen-update on: push: branches: [ main ] pull_request: branches: [ main ] jobs: update-readme: runs-on: self-hosted # requires local LLM access steps: - name: Checkout repository uses: actions/checkout@v4 with: fetch-depth: 0 - name: Set up Python uses: actions/setup-python@v5 with: python-version: '3.11' - name: Cache pip dependencies uses: actions/cache@v4 with: path: ~/.cache/pip key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }} restore-keys: ${{ runner.os }}-pip- - name: Install docgen in editable mode run: | python -m pip install --upgrade pip python -m pip install -e .[dev] - name: Determine diff base id: diff run: | if [ \"${{ github.event_name }}\" = \"pull_request\" ]; then echo \"base=${{ github.event.pull_request.base.sha }}\" >> \"$GITHUB_OUTPUT\" else echo \"base=origin/main\" >> \"$GITHUB_OUTPUT\" fi - name: Run docgen update env: DOCGEN_LLM_BASE_URL: http://localhost:12434/engines/v1 run: | python -m docgen.cli update --diff-base ${{ steps.diff.outputs.base }} - name: Commit README updates (if any) run: | if git status --short | grep -q README.md; then git config user.name \"github-actions\" git config user.email \"github-actions@users.noreply.github.com\" git commit -am \"docs: update README via docgen\" fi -",
      "metadata": {
        "path": "docs/ci/github-actions.md",
        "tags": [
          "docs"
        ],
        "hash": "518fe87441e7f08aadb0ed175d54a5ce3c227af17677678096af6df070190e59"
      }
    },
    {
      "id": "docs/ci/github-actions.md#1",
      "vector": {
        "diff": 0.1363988678940947,
        "base": 0.1363988678940947,
        "steps": 0.06819943394704735,
        "outputs": 0.06819943394704735,
        "name": 0.2727977357881894,
        "commit": 0.1363988678940947,
        "readme": 0.4091966036822841,
        "updates": 0.06819943394704735,
        "if": 0.20459830184114206,
        "any": 0.06819943394704735,
        "run": 0.06819943394704735,
        "git": 0.2727977357881894,
        "status": 0.06819943394704735,
        "short": 0.06819943394704735,
        "grep": 0.06819943394704735,
        "q": 0.06819943394704735,
        "md": 0.1363988678940947,
        "then": 0.06819943394704735,
        "config": 0.1363988678940947,
        "user": 0.1363988678940947,
        "github": 0.2727977357881894,
        "actions": 0.20459830184114206,
        "email": 0.06819943394704735,
        "users": 0.06819943394704735,
        "noreply": 0.06819943394704735,
        "com": 0.06819943394704735,
        "am": 0.06819943394704735,
        "docs": 0.06819943394704735,
        "update": 0.06819943394704735,
        "via": 0.06819943394704735,
        "docgen": 0.06819943394704735,
        "fi": 0.06819943394704735,
        "upload": 0.1363988678940947,
        "artifact": 0.1363988678940947,
        "success": 0.06819943394704735,
        "uses": 0.06819943394704735,
        "v4": 0.06819943394704735,
        "with": 0.1363988678940947,
        "generated": 0.06819943394704735,
        "path": 0.06819943394704735,
        "note": 0.06819943394704735,
        "the": 0.20459830184114206,
        "workflow": 0.06819943394704735,
        "relies": 0.06819943394704735,
        "on": 0.06819943394704735,
        "docgen_llm_base_url": 0.06819943394704735,
        "pointing": 0.06819943394704735,
        "to": 0.20459830184114206,
        "a": 0.06819943394704735,
        "local": 0.06819943394704735,
        "or": 0.1363988678940947,
        "private": 0.1363988678940947,
        "inference": 0.06819943394704735,
        "endpoint": 0.06819943394704735,
        "for": 0.06819943394704735,
        "hosted": 0.06819943394704735,
        "runners": 0.06819943394704735,
        "you": 0.06819943394704735,
        "will": 0.06819943394704735,
        "need": 0.06819943394704735,
        "expose": 0.06819943394704735,
        "runner": 0.06819943394704735,
        "within": 0.06819943394704735,
        "your": 0.06819943394704735,
        "network": 0.06819943394704735,
        "switch": 0.06819943394704735,
        "ollama": 0.06819943394704735,
        "cli": 0.06819943394704735,
        "appropriate": 0.06819943394704735,
        "caching": 0.06819943394704735
      },
      "text": "--diff-base ${{ steps.diff.outputs.base }} - name: Commit README updates (if any) run: | if git status --short | grep -q README.md; then git config user.name \"github-actions\" git config user.email \"github-actions@users.noreply.github.com\" git commit -am \"docs: update README via docgen\" fi - name: Upload README artifact if: success() uses: actions/upload-artifact@v4 with: name: generated-readme path: README.md ``` > **Note:** the workflow relies on `DOCGEN_LLM_BASE_URL` pointing to a local or > private inference endpoint. For GitHub-hosted runners you will need to expose > the runner within your private network or switch to the `ollama` CLI with > appropriate caching. ```",
      "metadata": {
        "path": "docs/ci/github-actions.md",
        "tags": [
          "docs"
        ],
        "hash": "518fe87441e7f08aadb0ed175d54a5ce3c227af17677678096af6df070190e59"
      }
    },
    {
      "id": "spec/feature_checklist.md#0",
      "vector": {
        "intelligent": 0.03809696588797296,
        "readme": 0.1142908976639189,
        "generator": 0.03809696588797296,
        "feature": 0.03809696588797296,
        "checklist": 0.03809696588797296,
        "status": 0.03809696588797296,
        "legend": 0.03809696588797296,
        "not": 0.03809696588797296,
        "started": 0.03809696588797296,
        "in": 0.03809696588797296,
        "progress": 0.03809696588797296,
        "done": 0.03809696588797296,
        "scope": 0.03809696588797296,
        "tags": 0.03809696588797296,
        "mvp": 0.4571635906556756,
        "required": 0.03809696588797296,
        "for": 0.1142908976639189,
        "proof": 0.03809696588797296,
        "of": 0.07619393177594593,
        "concept": 0.03809696588797296,
        "next": 0.19048482943986483,
        "nice": 0.03809696588797296,
        "to": 0.1142908976639189,
        "have": 0.03809696588797296,
        "soon": 0.03809696588797296,
        "stretch": 0.1142908976639189,
        "later": 0.03809696588797296,
        "1": 0.07619393177594593,
        "core": 0.03809696588797296,
        "workflows": 0.03809696588797296,
        "x": 0.6095514542075674,
        "docgen": 0.15238786355189185,
        "init": 0.03809696588797296,
        "initialize": 0.03809696588797296,
        "repos": 0.03809696588797296,
        "without": 0.07619393177594593,
        "docs": 0.1142908976639189,
        "update": 0.03809696588797296,
        "detect": 0.03809696588797296,
        "changes": 0.03809696588797296,
        "on": 0.03809696588797296,
        "commit": 0.03809696588797296,
        "pr": 0.03809696588797296,
        "and": 0.03809696588797296,
        "patch": 0.03809696588797296,
        "affected": 0.03809696588797296,
        "sections": 0.03809696588797296,
        "regenerate": 0.03809696588797296,
        "manual": 0.03809696588797296,
        "full": 0.03809696588797296,
        "partial": 0.03809696588797296,
        "regeneration": 0.03809696588797296,
        "dry": 0.07619393177594593,
        "run": 0.07619393177594593,
        "mode": 0.07619393177594593,
        "preview": 0.03809696588797296,
        "diffs": 0.03809696588797296,
        "writing": 0.03809696588797296,
        "service": 0.03809696588797296,
        "fastapi": 0.07619393177594593,
        "endpoints": 0.03809696588797296,
        "ci": 0.07619393177594593,
        "bots": 0.03809696588797296,
        "2": 0.03809696588797296,
        "repository": 0.03809696588797296,
        "scanning": 0.03809696588797296,
        "indexing": 0.03809696588797296,
        "walk": 0.03809696588797296,
        "filesystem": 0.03809696588797296,
        "with": 0.03809696588797296,
        "ignore": 0.03809696588797296,
        "rules": 0.03809696588797296,
        "gitignore": 0.03809696588797296,
        "yml": 0.03809696588797296,
        "build": 0.07619393177594593,
        "normalized": 0.03809696588797296,
        "manifest": 0.07619393177594593,
        "files": 0.07619393177594593,
        "roles": 0.03809696588797296,
        "src": 0.03809696588797296,
        "test": 0.03809696588797296,
        "config": 0.07619393177594593,
        "infra": 0.03809696588797296,
        "hash": 0.03809696588797296,
        "cache": 0.03809696588797296,
        "file": 0.03809696588797296,
        "metadata": 0.03809696588797296,
        "speed": 0.03809696588797296,
        "subsequent": 0.03809696588797296,
        "runs": 0.03809696588797296,
        "entrypoint": 0.07619393177594593,
        "detection": 0.07619393177594593,
        "e": 0.03809696588797296,
        "g": 0.03809696588797296,
        "main": 0.03809696588797296,
        "springbootapplication": 0.03809696588797296,
        "app": 0.03809696588797296,
        "monorepo": 0.07619393177594593,
        "module": 0.03809696588797296,
        "3": 0.03809696588797296,
        "analyzers": 0.19048482943986483,
        "plugin": 0.03809696588797296,
        "based": 0.03809696588797296,
        "language": 0.03809696588797296,
        "python": 0.03809696588797296,
        "java": 0.03809696588797296,
        "node": 0.03809696588797296,
        "js": 0.03809696588797296,
        "tier": 0.03809696588797296,
        "poetry": 0.03809696588797296,
        "setuptools": 0.03809696588797296,
        "maven": 0.03809696588797296,
        "gradle": 0.03809696588797296,
        "npm": 0.03809696588797296,
        "pnpm": 0.03809696588797296,
        "yarn": 0.03809696588797296,
        "dependency": 0.03809696588797296,
        "from": 0.03809696588797296,
        "pattern": 0.03809696588797296,
        "docker": 0.03809696588797296,
        "k8s": 0.03809696588797296,
        "layout": 0.03809696588797296,
        "tree": 0.03809696588797296,
        "sitter": 0.03809696588797296,
        "powered": 0.03809696588797296,
        "symbol": 0.03809696588797296,
        "extraction": 0.03809696588797296,
        "flagged": 0.03809696588797296,
        "4": 0.03809696588797296,
        "knowledge": 0.03809696588797296,
        "store": 0.03809696588797296,
        "rag": 0.03809696588797296,
        "local": 0.03809696588797296,
        "embedding": 0.03809696588797296,
        "model": 0.03809696588797296,
        "chunking": 0.03809696588797296,
        "strategy": 0.03809696588797296,
        "index": 0.03809696588797296,
        "top": 0.03809696588797296,
        "n": 0.03809696588797296,
        "source": 0.03809696588797296,
        "headers": 0.03809696588797296,
        "comments": 0.03809696588797296
      },
      "text": "# Intelligent README Generator \u2014 Feature Checklist > Status legend: \u2610 Not started \u00b7 \u25d0 In progress \u00b7 \u2714 Done > Scope tags: **[MVP]** required for proof\u2011of\u2011concept, **[NEXT]** nice\u2011to\u2011have soon, **[STRETCH]** later ## 1) Core Workflows - [x] **docgen init** \u2014 Initialize README for repos without docs **[MVP]** - [x] **docgen update** \u2014 Detect changes on commit/PR and patch affected sections **[MVP]** - [ ] **docgen regenerate** \u2014 Manual full/partial regeneration **[MVP]** - [x] Dry\u2011run mode (`--dry-run`) to preview diffs without writing **[NEXT]** - [x] Service mode (FastAPI) endpoints for CI/bots **[STRETCH]** ## 2) Repository Scanning & Indexing - [x] Walk filesystem with ignore rules (`.gitignore`, `.docgen.yml`) **[MVP]** - [x] Build normalized manifest of files, roles (src/test/docs/config/infra) **[MVP]** - [x] Hash & cache file metadata to speed subsequent runs **[MVP]** - [x] Entrypoint detection (e.g., `main()`, `@SpringBootApplication`, FastAPI app) **[NEXT]** - [x] Monorepo module detection **[NEXT]** ## 3) Analyzers (Plugin\u2011based) - [x] Language analyzers: Python, Java, Node.js (Tier\u20111) **[MVP]** - [x] Build analyzers: Poetry/Setuptools, Maven/Gradle, npm/pnpm/yarn **[MVP]** - [x] Dependency analyzers from manifest files **[MVP]** - [x] Pattern analyzers: Docker/K8s, CI config, monorepo layout **[NEXT]** - [x] Tree\u2011sitter powered symbol/entrypoint extraction (flagged) **[STRETCH]** ## 4) Knowledge Store (RAG) - [x] Local embedding model + chunking strategy **[MVP]** - [x] Index `README`, `/docs`, top N source headers & comments **[MVP]** -",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_checklist.md#1",
      "vector": {
        "ci": 0.03943615033625495,
        "config": 0.0788723006725099,
        "monorepo": 0.03943615033625495,
        "layout": 0.03943615033625495,
        "next": 0.3154892026900396,
        "x": 0.6309784053800792,
        "tree": 0.03943615033625495,
        "sitter": 0.03943615033625495,
        "powered": 0.03943615033625495,
        "symbol": 0.03943615033625495,
        "entrypoint": 0.03943615033625495,
        "extraction": 0.03943615033625495,
        "flagged": 0.03943615033625495,
        "stretch": 0.0788723006725099,
        "4": 0.03943615033625495,
        "knowledge": 0.0788723006725099,
        "store": 0.03943615033625495,
        "rag": 0.03943615033625495,
        "local": 0.0788723006725099,
        "embedding": 0.03943615033625495,
        "model": 0.0788723006725099,
        "chunking": 0.03943615033625495,
        "strategy": 0.03943615033625495,
        "mvp": 0.3943615033625495,
        "index": 0.03943615033625495,
        "readme": 0.03943615033625495,
        "docs": 0.0788723006725099,
        "top": 0.0788723006725099,
        "n": 0.03943615033625495,
        "source": 0.03943615033625495,
        "headers": 0.03943615033625495,
        "comments": 0.03943615033625495,
        "section": 0.19718075168127475,
        "scoped": 0.03943615033625495,
        "retrieval": 0.03943615033625495,
        "k": 0.03943615033625495,
        "per": 0.0788723006725099,
        "lightweight": 0.03943615033625495,
        "graph": 0.03943615033625495,
        "of": 0.03943615033625495,
        "modules": 0.03943615033625495,
        "services": 0.03943615033625495,
        "signals": 0.03943615033625495,
        "5": 0.03943615033625495,
        "prompting": 0.03943615033625495,
        "templates": 0.11830845100876484,
        "jinja2": 0.03943615033625495,
        "intro": 0.03943615033625495,
        "features": 0.03943615033625495,
        "architecture": 0.0788723006725099,
        "quickstart": 0.03943615033625495,
        "build": 0.0788723006725099,
        "test": 0.03943615033625495,
        "deployment": 0.03943615033625495,
        "troubleshooting": 0.03943615033625495,
        "faq": 0.03943615033625495,
        "license": 0.0788723006725099,
        "guardrailed": 0.03943615033625495,
        "system": 0.03943615033625495,
        "prompt": 0.03943615033625495,
        "no": 0.03943615033625495,
        "speculation": 0.03943615033625495,
        "cite": 0.03943615033625495,
        "repo": 0.03943615033625495,
        "facts": 0.03943615033625495,
        "only": 0.03943615033625495,
        "token": 0.03943615033625495,
        "budgeting": 0.03943615033625495,
        "streaming": 0.03943615033625495,
        "by": 0.03943615033625495,
        "generation": 0.03943615033625495,
        "template": 0.03943615033625495,
        "override": 0.03943615033625495,
        "mechanism": 0.03943615033625495,
        "j2": 0.03943615033625495,
        "style": 0.03943615033625495,
        "presets": 0.03943615033625495,
        "concise": 0.03943615033625495,
        "vs": 0.03943615033625495,
        "comprehensive": 0.03943615033625495,
        "mermaid": 0.03943615033625495,
        "js": 0.03943615033625495,
        "diagrams": 0.03943615033625495,
        "for": 0.0788723006725099,
        "flow": 0.03943615033625495,
        "sections": 0.0788723006725099,
        "where": 0.03943615033625495,
        "appropriate": 0.03943615033625495,
        "6": 0.03943615033625495,
        "llm": 0.03943615033625495,
        "runner": 0.0788723006725099,
        "http": 0.03943615033625495,
        "adapter": 0.0788723006725099,
        "host": 0.03943615033625495,
        "container": 0.03943615033625495,
        "defaults": 0.0788723006725099,
        "env": 0.03943615033625495,
        "api": 0.03943615033625495,
        "key": 0.03943615033625495,
        "overrides": 0.03943615033625495,
        "llama": 0.03943615033625495,
        "cpp": 0.03943615033625495,
        "structured": 0.03943615033625495,
        "outputs": 0.03943615033625495,
        "tool": 0.03943615033625495,
        "use": 0.03943615033625495,
        "compatibility": 0.03943615033625495,
        "7": 0.03943615033625495,
        "post": 0.03943615033625495,
        "processing": 0.03943615033625495,
        "markdown": 0.03943615033625495,
        "lint": 0.03943615033625495,
        "heading": 0.03943615033625495,
        "hierarchy": 0.03943615033625495,
        "code": 0.03943615033625495,
        "fences": 0.03943615033625495,
        "line": 0.03943615033625495,
        "length": 0.03943615033625495,
        "auto": 0.03943615033625495,
        "toc": 0.03943615033625495,
        "level": 0.03943615033625495,
        "3": 0.03943615033625495,
        "badges": 0.03943615033625495,
        "coverage": 0.03943615033625495,
        "with": 0.03943615033625495,
        "safe": 0.03943615033625495,
        "link": 0.03943615033625495,
        "validator": 0.03943615033625495,
        "relative": 0.03943615033625495,
        "absolute": 0.03943615033625495,
        "managed": 0.03943615033625495,
        "markers": 0.03943615033625495,
        "idempotent": 0.03943615033625495,
        "patching": 0.03943615033625495,
        "docgen": 0.03943615033625495,
        "begin": 0.03943615033625495,
        "end": 0.03943615033625495,
        "8": 0.03943615033625495,
        "git": 0.03943615033625495,
        "integration": 0.03943615033625495,
        "diff": 0.03943615033625495,
        "detection": 0.03943615033625495,
        "map": 0.03943615033625495,
        "changed": 0.03943615033625495,
        "files": 0.03943615033625495,
        "impacted": 0.03943615033625495
      },
      "text": "CI config, monorepo layout **[NEXT]** - [x] Tree\u2011sitter powered symbol/entrypoint extraction (flagged) **[STRETCH]** ## 4) Knowledge Store (RAG) - [x] Local embedding model + chunking strategy **[MVP]** - [x] Index `README`, `/docs`, top N source headers & comments **[MVP]** - [x] Section\u2011scoped retrieval (top\u2011k per section) **[MVP]** - [ ] Lightweight knowledge graph of modules/services/signals **[NEXT]** ## 5) Prompting & Templates - [x] Jinja2 templates per section (intro, features, architecture, quickstart, config, build/test, deployment, troubleshooting, FAQ, license) **[MVP]** - [ ] Guardrailed system prompt (\u201cno speculation; cite repo facts only\u201d) **[MVP]** - [ ] Token budgeting & streaming section-by-section generation **[MVP]** - [x] Template override mechanism (`docs/templates/*.j2`) **[NEXT]** - [x] Style presets: concise vs comprehensive **[NEXT]** - [x] Mermaid.js diagrams for architecture/flow sections where appropriate **[NEXT]** ## 6) Local LLM Runner - [x] Model Runner HTTP adapter (host/container defaults, env/API key overrides) **[MVP]** - [x] llama.cpp adapter **[NEXT]** - [ ] Structured outputs / tool\u2011use compatibility **[STRETCH]** ## 7) Post\u2011Processing - [x] Markdown lint: heading hierarchy, code fences, line length **[MVP]** - [x] Auto ToC (\u2264 level 3) **[MVP]** - [x] Badges (build, coverage, license) with safe defaults **[NEXT]** - [x] Link validator (relative/absolute) **[NEXT]** - [x] Managed markers for idempotent patching (`<!-- docgen:begin:end -->`) **[MVP]** ## 8) Git Integration - [x] Diff detection (map changed files \u2192 impacted sections)",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_checklist.md#2",
      "vector": {
        "x": 0.6172133998483676,
        "badges": 0.03857583749052298,
        "build": 0.07715167498104596,
        "coverage": 0.03857583749052298,
        "license": 0.03857583749052298,
        "with": 0.07715167498104596,
        "safe": 0.03857583749052298,
        "defaults": 0.03857583749052298,
        "next": 0.3086066999241838,
        "link": 0.03857583749052298,
        "validator": 0.03857583749052298,
        "relative": 0.03857583749052298,
        "absolute": 0.03857583749052298,
        "managed": 0.03857583749052298,
        "markers": 0.03857583749052298,
        "for": 0.11572751247156893,
        "idempotent": 0.03857583749052298,
        "patching": 0.03857583749052298,
        "docgen": 0.07715167498104596,
        "begin": 0.03857583749052298,
        "end": 0.03857583749052298,
        "mvp": 0.4629100498862757,
        "8": 0.03857583749052298,
        "git": 0.03857583749052298,
        "integration": 0.07715167498104596,
        "diff": 0.03857583749052298,
        "detection": 0.03857583749052298,
        "map": 0.03857583749052298,
        "changed": 0.03857583749052298,
        "files": 0.03857583749052298,
        "impacted": 0.03857583749052298,
        "sections": 0.03857583749052298,
        "branch": 0.03857583749052298,
        "pr": 0.07715167498104596,
        "creation": 0.03857583749052298,
        "summary": 0.03857583749052298,
        "of": 0.03857583749052298,
        "readme": 0.11572751247156893,
        "deltas": 0.03857583749052298,
        "commit": 0.03857583749052298,
        "mode": 0.03857583749052298,
        "init": 0.03857583749052298,
        "or": 0.03857583749052298,
        "small": 0.03857583749052298,
        "changes": 0.07715167498104596,
        "configurable": 0.03857583749052298,
        "prevent": 0.03857583749052298,
        "loops": 0.03857583749052298,
        "on": 0.07715167498104596,
        "only": 0.07715167498104596,
        "9": 0.03857583749052298,
        "configuration": 0.03857583749052298,
        "parse": 0.03857583749052298,
        "yml": 0.03857583749052298,
        "llm": 0.03857583749052298,
        "style": 0.03857583749052298,
        "analyzers": 0.03857583749052298,
        "publish": 0.03857583749052298,
        "path": 0.03857583749052298,
        "exclusions": 0.03857583749052298,
        "watched_globs": 0.03857583749052298,
        "ci": 0.11572751247156893,
        "triggers": 0.03857583749052298,
        "per": 0.07715167498104596,
        "section": 0.03857583749052298,
        "off": 0.03857583749052298,
        "toggles": 0.03857583749052298,
        "and": 0.11572751247156893,
        "titles": 0.03857583749052298,
        "10": 0.03857583749052298,
        "github": 0.03857583749052298,
        "actions": 0.03857583749052298,
        "example": 0.03857583749052298,
        "workflow": 0.03857583749052298,
        "gitlab": 0.03857583749052298,
        "bitbucket": 0.03857583749052298,
        "pipelines": 0.03857583749052298,
        "samples": 0.03857583749052298,
        "labeling": 0.03857583749052298,
        "docs": 0.03857583749052298,
        "auto": 0.03857583749052298,
        "update": 0.03857583749052298,
        "behavior": 0.03857583749052298,
        "11": 0.03857583749052298,
        "security": 0.03857583749052298,
        "privacy": 0.03857583749052298,
        "local": 0.03857583749052298,
        "models": 0.03857583749052298,
        "never": 0.03857583749052298,
        "exfiltrate": 0.03857583749052298,
        "code": 0.03857583749052298,
        "respect": 0.03857583749052298,
        "gitignore": 0.03857583749052298,
        "exclude": 0.03857583749052298,
        "large": 0.03857583749052298,
        "binaries": 0.03857583749052298,
        "secrets": 0.03857583749052298,
        "optional": 0.03857583749052298,
        "simple": 0.03857583749052298,
        "secret": 0.03857583749052298,
        "scanner": 0.03857583749052298,
        "gate": 0.03857583749052298,
        "12": 0.03857583749052298,
        "multi": 0.03857583749052298,
        "language": 0.03857583749052298,
        "project": 0.03857583749052298,
        "types": 0.03857583749052298,
        "tier": 0.07715167498104596,
        "1": 0.03857583749052298,
        "python": 0.03857583749052298,
        "poetry": 0.03857583749052298,
        "setuptools": 0.03857583749052298,
        "java": 0.03857583749052298,
        "maven": 0.03857583749052298,
        "gradle": 0.03857583749052298,
        "spring": 0.03857583749052298,
        "boot": 0.03857583749052298,
        "node": 0.03857583749052298,
        "js": 0.03857583749052298,
        "npm": 0.03857583749052298,
        "pnpm": 0.03857583749052298,
        "express": 0.03857583749052298,
        "2": 0.03857583749052298,
        "go": 0.03857583749052298,
        "rust": 0.03857583749052298,
        "ruby": 0.03857583749052298,
        "php": 0.03857583749052298,
        "stretch": 0.03857583749052298,
        "framework": 0.03857583749052298,
        "aware": 0.03857583749052298,
        "quickstart": 0.03857583749052298,
        "commands": 0.03857583749052298,
        "system": 0.03857583749052298,
        "13": 0.03857583749052298,
        "quality": 0.03857583749052298,
        "gates": 0.03857583749052298,
        "evaluation": 0.03857583749052298,
        "command": 0.03857583749052298,
        "validation": 0.03857583749052298,
        "existence": 0.03857583749052298,
        "checks": 0.07715167498104596,
        "no": 0.03857583749052298,
        "hallucination": 0.03857583749052298,
        "reject": 0.03857583749052298,
        "facts": 0.03857583749052298,
        "not": 0.03857583749052298
      },
      "text": "[x] Badges (build, coverage, license) with safe defaults **[NEXT]** - [x] Link validator (relative/absolute) **[NEXT]** - [x] Managed markers for idempotent patching (`<!-- docgen:begin:end -->`) **[MVP]** ## 8) Git Integration - [x] Diff detection (map changed files \u2192 impacted sections) **[MVP]** - [x] Branch + PR creation with summary of README deltas **[MVP]** - [x] Commit mode for init or small changes (configurable) **[NEXT]** - [x] Prevent loops on README\u2011only changes **[MVP]** ## 9) Configuration - [x] Parse `.docgen.yml` (LLM, readme style, analyzers, publish) **[MVP]** - [x] Path exclusions & `watched_globs` for CI triggers **[MVP]** - [ ] Per-section on/off toggles and titles **[NEXT]** ## 10) CI Integration - [x] GitHub Actions example workflow **[MVP]** - [ ] GitLab CI and Bitbucket Pipelines samples **[NEXT]** - [x] Labeling (`docs:auto`) and PR update behavior **[NEXT]** ## 11) Security & Privacy - [x] Local-only models; never exfiltrate code **[MVP]** - [ ] Respect `.gitignore`; exclude large binaries/secrets **[MVP]** - [ ] Optional simple secret scanner gate **[NEXT]** ## 12) Multi\u2011Language & Project Types - [x] Tier\u20111: Python (Poetry/Setuptools), Java (Maven/Gradle/Spring Boot), Node.js (npm/pnpm/Express/Next) **[MVP]** - [ ] Tier\u20112: Go, Rust, Ruby, PHP **[STRETCH]** - [x] Framework\u2011aware quickstart commands per build system **[MVP]** ## 13) Quality Gates & Evaluation - [x] Command validation (existence checks) **[MVP]** - [x] No-hallucination checks: reject facts not",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_checklist.md#3",
      "vector": {
        "npm": 0.052999894000318,
        "pnpm": 0.052999894000318,
        "express": 0.052999894000318,
        "next": 0.211999576001272,
        "mvp": 0.476999046002862,
        "tier": 0.052999894000318,
        "2": 0.052999894000318,
        "go": 0.052999894000318,
        "rust": 0.052999894000318,
        "ruby": 0.052999894000318,
        "php": 0.052999894000318,
        "stretch": 0.052999894000318,
        "x": 0.5829988340034981,
        "framework": 0.052999894000318,
        "aware": 0.052999894000318,
        "quickstart": 0.052999894000318,
        "commands": 0.052999894000318,
        "per": 0.105999788000636,
        "build": 0.052999894000318,
        "system": 0.052999894000318,
        "13": 0.052999894000318,
        "quality": 0.052999894000318,
        "gates": 0.052999894000318,
        "evaluation": 0.052999894000318,
        "command": 0.052999894000318,
        "validation": 0.052999894000318,
        "existence": 0.052999894000318,
        "checks": 0.105999788000636,
        "no": 0.052999894000318,
        "hallucination": 0.052999894000318,
        "reject": 0.052999894000318,
        "facts": 0.052999894000318,
        "not": 0.052999894000318,
        "in": 0.052999894000318,
        "signals": 0.052999894000318,
        "rag": 0.105999788000636,
        "readme": 0.105999788000636,
        "scorecard": 0.052999894000318,
        "coverage": 0.052999894000318,
        "buildability": 0.052999894000318,
        "link": 0.052999894000318,
        "validity": 0.052999894000318,
        "diff": 0.052999894000318,
        "alignment": 0.052999894000318,
        "lint": 0.105999788000636,
        "14": 0.052999894000318,
        "performance": 0.052999894000318,
        "caching": 0.052999894000318,
        "persist": 0.052999894000318,
        "analyzer": 0.105999788000636,
        "outputs": 0.052999894000318,
        "embeddings": 0.052999894000318,
        "under": 0.052999894000318,
        "docgen": 0.052999894000318,
        "incremental": 0.052999894000318,
        "refresh": 0.052999894000318,
        "changed": 0.052999894000318,
        "files": 0.052999894000318,
        "only": 0.052999894000318,
        "15": 0.052999894000318,
        "error": 0.052999894000318,
        "handling": 0.052999894000318,
        "ux": 0.052999894000318,
        "fail": 0.052999894000318,
        "safe": 0.052999894000318,
        "stub": 0.052999894000318,
        "generation": 0.052999894000318,
        "when": 0.052999894000318,
        "evidence": 0.052999894000318,
        "is": 0.052999894000318,
        "insufficient": 0.052999894000318,
        "clear": 0.052999894000318,
        "run": 0.052999894000318,
        "logs": 0.052999894000318,
        "pr": 0.052999894000318,
        "body": 0.052999894000318,
        "with": 0.052999894000318,
        "rationale": 0.052999894000318,
        "sections": 0.052999894000318,
        "updated": 0.052999894000318,
        "because": 0.052999894000318,
        "helpful": 0.052999894000318,
        "cli": 0.052999894000318,
        "errors": 0.052999894000318,
        "and": 0.105999788000636,
        "verbose": 0.052999894000318,
        "flag": 0.052999894000318,
        "works": 0.052999894000318,
        "pre": 0.052999894000318,
        "post": 0.052999894000318,
        "subcommand": 0.052999894000318,
        "16": 0.052999894000318,
        "extensibility": 0.052999894000318,
        "abc": 0.052999894000318,
        "plugin": 0.052999894000318,
        "discovery": 0.052999894000318,
        "template": 0.052999894000318,
        "packs": 0.052999894000318,
        "org": 0.052999894000318,
        "style": 0.105999788000636,
        "definition": 0.052999894000318,
        "of": 0.052999894000318,
        "done": 0.052999894000318,
        "section": 0.052999894000318,
        "passing": 0.052999894000318,
        "unit": 0.052999894000318,
        "integration": 0.052999894000318,
        "tests": 0.052999894000318,
        "for": 0.052999894000318,
        "core": 0.052999894000318,
        "logic": 0.052999894000318,
        "golden": 0.052999894000318,
        "regression": 0.052999894000318,
        "test": 0.052999894000318,
        "s": 0.052999894000318,
        "meets": 0.052999894000318,
        "requirements": 0.052999894000318
      },
      "text": "(npm/pnpm/Express/Next) **[MVP]** - [ ] Tier\u20112: Go, Rust, Ruby, PHP **[STRETCH]** - [x] Framework\u2011aware quickstart commands per build system **[MVP]** ## 13) Quality Gates & Evaluation - [x] Command validation (existence checks) **[MVP]** - [x] No-hallucination checks: reject facts not in signals/RAG **[MVP]** - [x] README scorecard (coverage, buildability, link validity, diff alignment, lint) **[NEXT]** ## 14) Performance & Caching - [x] Persist analyzer outputs & embeddings under `.docgen/` **[MVP]** - [x] Incremental RAG refresh (changed files only) **[NEXT]** ## 15) Error Handling & UX - [x] Fail-safe stub generation when evidence is insufficient **[MVP]** - [x] Clear run logs + PR body with rationale (\u201csections updated because\u2026\u201d) **[MVP]** - [x] Helpful CLI errors and `--verbose` flag (works pre/post subcommand) **[MVP]** ## 16) Extensibility - [x] Analyzer ABC and plugin discovery **[MVP]** - [x] Template packs (org\u2011style) **[NEXT]** --- ### Definition of Done (per section) - [ ] Passing unit & integration tests for core logic - [ ] Golden README regression test(s) - [ ] Meets lint/style requirements",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_order.md#0",
      "vector": {
        "docgen": 0.25491557319725244,
        "development": 0.042485928866208736,
        "roadmap": 0.042485928866208736,
        "phase": 0.12745778659862622,
        "0": 0.042485928866208736,
        "bootstrap": 0.042485928866208736,
        "the": 0.042485928866208736,
        "skeleton": 0.08497185773241747,
        "1": 0.3398874309296699,
        "project": 0.042485928866208736,
        "cli": 0.042485928866208736,
        "config": 0.08497185773241747,
        "loader": 0.042485928866208736,
        "yml": 0.042485928866208736,
        "models": 0.042485928866208736,
        "done": 0.3823733597958786,
        "covers": 0.3823733597958786,
        "commands": 0.042485928866208736,
        "scaffolding": 0.042485928866208736,
        "9": 0.042485928866208736,
        "parse": 0.042485928866208736,
        "16": 0.08497185773241747,
        "analyzer": 0.08497185773241747,
        "abc": 0.08497185773241747,
        "2": 0.2124296443310437,
        "plugin": 0.08497185773241747,
        "discovery": 0.08497185773241747,
        "init": 0.16994371546483494,
        "happy": 0.042485928866208736,
        "path": 0.042485928866208736,
        "single": 0.042485928866208736,
        "repo": 0.12745778659862622,
        "local": 0.08497185773241747,
        "scanner": 0.042485928866208736,
        "manifest": 0.08497185773241747,
        "roles": 0.042485928866208736,
        "hashing": 0.042485928866208736,
        "ignores": 0.08497185773241747,
        "walk": 0.042485928866208736,
        "fs": 0.042485928866208736,
        "cache": 0.042485928866208736,
        "tier": 0.042485928866208736,
        "analyzers": 0.12745778659862622,
        "python": 0.042485928866208736,
        "java": 0.042485928866208736,
        "node": 0.042485928866208736,
        "build": 0.08497185773241747,
        "dependency": 0.042485928866208736,
        "3": 0.08497185773241747,
        "language": 0.042485928866208736,
        "deps": 0.042485928866208736,
        "templates": 0.12745778659862622,
        "prompt": 0.12745778659862622,
        "builder": 0.08497185773241747,
        "section": 0.12745778659862622,
        "by": 0.042485928866208736,
        "guardrailed": 0.042485928866208736,
        "system": 0.042485928866208736,
        "partial": 0.042485928866208736,
        "guardrails": 0.08497185773241747,
        "unused": 0.042485928866208736,
        "5": 0.08497185773241747,
        "jinja2": 0.042485928866208736,
        "token": 0.042485928866208736,
        "budget": 0.042485928866208736,
        "4": 0.042485928866208736,
        "llm": 0.042485928866208736,
        "runner": 0.042485928866208736,
        "ollama": 0.08497185773241747,
        "adapter": 0.042485928866208736,
        "6": 0.08497185773241747,
        "post": 0.042485928866208736,
        "processor": 0.042485928866208736,
        "managed": 0.042485928866208736,
        "markers": 0.12745778659862622,
        "toc": 0.08497185773241747,
        "markdown": 0.042485928866208736,
        "lint": 0.08497185773241747,
        "7": 0.042485928866208736,
        "git": 0.08497185773241747,
        "publisher": 0.08497185773241747,
        "commit": 0.08497185773241747,
        "mode": 0.08497185773241747,
        "for": 0.08497185773241747,
        "only": 0.042485928866208736,
        "8": 0.08497185773241747,
        "end": 0.08497185773241747,
        "to": 0.042485928866208736,
        "milestone": 0.042485928866208736,
        "generates": 0.042485928866208736,
        "a": 0.08497185773241747,
        "clean": 0.042485928866208736,
        "readme": 0.042485928866208736,
        "with": 0.042485928866208736,
        "no": 0.042485928866208736,
        "docs": 0.042485928866208736,
        "update": 0.08497185773241747,
        "on": 0.042485928866208736,
        "change": 0.08497185773241747,
        "pr": 0.042485928866208736,
        "workflow": 0.042485928866208736,
        "diff": 0.08497185773241747,
        "detection": 0.042485928866208736,
        "mapping": 0.08497185773241747,
        "patching": 0.042485928866208736,
        "inside": 0.042485928866208736,
        "prevent": 0.042485928866208736,
        "loops": 0.042485928866208736
      },
      "text": "# DocGen Development Roadmap ## Phase 0 \u2014 Bootstrap the skeleton 1. **Project skeleton + CLI (`docgen`) + config loader (`.docgen.yml`) + models** \u2014 \u2714 Done * Covers: 1 (commands scaffolding), 9 (parse config), 16 (Analyzer ABC) 2. **Analyzer plugin ABC & discovery** \u2014 \u2714 Done * Covers: 16 (plugin discovery) ## Phase 1 \u2014 \"Init\" happy-path (single repo, local) 1. **Repo scanner & manifest (roles, hashing, ignores)** \u2014 \u2714 Done * Covers: 2 (walk FS, manifest, cache, ignores) 2. **Tier-1 analyzers (Python, Java, Node) + build analyzers + dependency analyzers** \u2014 \u2714 Done * Covers: 3 (language/build/deps) 3. **Templates + prompt builder (section-by-section) + guardrailed system prompt** \u2014 \u25d0 Partial (templates/prompt builder done; guardrails unused) * Covers: 5 (Jinja2 templates, guardrails, token budget) 4. **Local LLM runner (Ollama adapter)** \u2014 \u2714 Done * Covers: 6 (Ollama) 5. **Post-processor: managed markers, ToC, markdown lint** \u2014 \u2714 Done * Covers: 7 (markers, ToC, lint) 6. **Git publisher: commit mode (for init only)** \u2014 \u2714 Done * Covers: 8 (commit mode), 1 (`docgen init` end-to-end) \u2705 **Milestone**: `docgen init` generates a clean README for a repo with no docs. ## Phase 2 \u2014 Update-on-change (PR workflow) 1. **Diff detection + change\u2192section mapping + patching inside markers** \u2014 \u2714 Done * Covers: 8 (diff mapping, prevent loops), 1 (`docgen update`) 2. **Git publisher:",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/feature_order.md#1",
      "vector": {
        "readme": 0.09035079029052513,
        "for": 0.045175395145262566,
        "a": 0.09035079029052513,
        "repo": 0.09035079029052513,
        "with": 0.1355261854357877,
        "no": 0.18070158058105026,
        "docs": 0.09035079029052513,
        "phase": 0.22587697572631282,
        "2": 0.22587697572631282,
        "update": 0.18070158058105026,
        "on": 0.045175395145262566,
        "change": 0.09035079029052513,
        "pr": 0.22587697572631282,
        "workflow": 0.045175395145262566,
        "1": 0.22587697572631282,
        "diff": 0.09035079029052513,
        "detection": 0.045175395145262566,
        "section": 0.1355261854357877,
        "mapping": 0.09035079029052513,
        "patching": 0.045175395145262566,
        "inside": 0.045175395145262566,
        "markers": 0.045175395145262566,
        "done": 0.36140316116210053,
        "covers": 0.36140316116210053,
        "8": 0.09035079029052513,
        "prevent": 0.045175395145262566,
        "loops": 0.045175395145262566,
        "docgen": 0.1355261854357877,
        "git": 0.045175395145262566,
        "publisher": 0.045175395145262566,
        "branch": 0.09035079029052513,
        "delta": 0.045175395145262566,
        "summary": 0.045175395145262566,
        "10": 0.09035079029052513,
        "labeling": 0.045175395145262566,
        "later": 0.045175395145262566,
        "milestone": 0.09035079029052513,
        "opens": 0.045175395145262566,
        "updating": 0.045175395145262566,
        "only": 0.09035079029052513,
        "impacted": 0.045175395145262566,
        "sections": 0.045175395145262566,
        "3": 0.045175395145262566,
        "minimal": 0.045175395145262566,
        "rag": 0.09035079029052513,
        "accuracy": 0.045175395145262566,
        "lite": 0.045175395145262566,
        "embed": 0.045175395145262566,
        "top": 0.045175395145262566,
        "n": 0.045175395145262566,
        "source": 0.045175395145262566,
        "headers": 0.045175395145262566,
        "scoped": 0.045175395145262566,
        "retrieval": 0.09035079029052513,
        "4": 0.09035079029052513,
        "local": 0.09035079029052513,
        "embedding": 0.045175395145262566,
        "index": 0.045175395145262566,
        "sources": 0.045175395145262566,
        "per": 0.045175395145262566,
        "hallucination": 0.1355261854357877,
        "command": 0.1355261854357877,
        "existence": 0.045175395145262566,
        "checks": 0.045175395145262566,
        "partial": 0.045175395145262566,
        "validation": 0.09035079029052513,
        "guard": 0.045175395145262566,
        "not": 0.045175395145262566,
        "implemented": 0.045175395145262566,
        "13": 0.045175395145262566,
        "outputs": 0.045175395145262566,
        "grounded": 0.045175395145262566,
        "in": 0.045175395145262566,
        "facts": 0.045175395145262566,
        "targeted": 0.045175395145262566,
        "context": 0.045175395145262566,
        "hardening": 0.045175395145262566,
        "dx": 0.045175395145262566,
        "error": 0.045175395145262566,
        "handling": 0.045175395145262566,
        "clear": 0.045175395145262566,
        "logs": 0.09035079029052513,
        "verbose": 0.045175395145262566,
        "fail": 0.09035079029052513,
        "safe": 0.09035079029052513,
        "stubs": 0.045175395145262566,
        "15": 0.045175395145262566,
        "cli": 0.045175395145262566,
        "ux": 0.045175395145262566,
        "security": 0.045175395145262566,
        "gitignore": 0.045175395145262566,
        "respect": 0.045175395145262566,
        "path": 0.045175395145262566,
        "excludes": 0.09035079029052513,
        "enforcement": 0.045175395145262566,
        "11": 0.045175395145262566,
        "privacy": 0.045175395145262566,
        "5": 0.09035079029052513,
        "ci": 0.045175395145262566,
        "integration": 0.045175395145262566,
        "config": 0.09035079029052513,
        "polish": 0.045175395145262566,
        "github": 0.045175395145262566,
        "actions": 0.09035079029052513,
        "sample": 0.045175395145262566,
        "push": 0.045175395145262566,
        "trigger": 0.045175395145262566,
        "calling": 0.045175395145262566,
        "gh": 0.045175395145262566,
        "refinements": 0.045175395145262566,
        "watched": 0.045175395145262566,
        "globs": 0.045175395145262566,
        "style": 0.09035079029052513,
        "preset": 0.045175395145262566,
        "concise": 0.045175395145262566,
        "comprehensive": 0.045175395145262566,
        "9": 0.045175395145262566,
        "watched_globs": 0.045175395145262566,
        "presets": 0.045175395145262566,
        "6": 0.045175395145262566,
        "multi": 0.045175395145262566,
        "language": 0.045175395145262566,
        "breadth": 0.045175395145262566
      },
      "text": "README for a repo with no docs. ## Phase 2 \u2014 Update-on-change (PR workflow) 1. **Diff detection + change\u2192section mapping + patching inside markers** \u2014 \u2714 Done * Covers: 8 (diff mapping, prevent loops), 1 (`docgen update`) 2. **Git publisher: branch + PR with delta summary** \u2014 \u2714 Done * Covers: 8 (branch/PR), 10 (labeling later) \u2705 **Milestone**: `docgen update` opens a PR updating only impacted sections. ## Phase 3 \u2014 Minimal RAG & accuracy 1. **RAG Lite: embed README/docs/top N source headers; section-scoped retrieval** \u2014 \u2714 Done * Covers: 4 (local embedding, index sources, per-section retrieval) 2. **No-hallucination & command existence checks** \u2014 \u25d0 Partial (command validation done; no-hallucination guard not implemented) * Covers: 13 (command validation, no-hallucination) \u2705 **Milestone**: outputs grounded in repo facts with targeted context. ## Phase 4 \u2014 Hardening & DX 1. **Error handling, clear logs, `--verbose`, fail-safe stubs** \u2014 \u2714 Done * Covers: 15 (fail-safe, logs, CLI UX) 2. **Security: .gitignore respect, path excludes, local-only enforcement** \u2014 \u2714 Done * Covers: 11 (privacy, excludes) ## Phase 5 \u2014 CI integration & config polish 1. **GitHub Actions sample (push/PR trigger calling `docgen update`)** \u2014 \u2714 Done * Covers: 10 (GH Actions) 2. **Config refinements: watched globs, style preset (concise/comprehensive)** \u2014 \u2714 Done * Covers: 9 (watched_globs), 5 (style presets) ## Phase 6 \u2014 Multi-language breadth",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/feature_order.md#2",
      "vector": {
        "github": 0.046274481338274755,
        "actions": 0.09254896267654951,
        "sample": 0.046274481338274755,
        "push": 0.046274481338274755,
        "pr": 0.18509792535309902,
        "trigger": 0.046274481338274755,
        "calling": 0.046274481338274755,
        "docgen": 0.13882344401482424,
        "update": 0.046274481338274755,
        "done": 0.32392136936792326,
        "covers": 0.41647033204447276,
        "10": 0.09254896267654951,
        "gh": 0.046274481338274755,
        "2": 0.23137240669137377,
        "config": 0.09254896267654951,
        "refinements": 0.046274481338274755,
        "watched": 0.046274481338274755,
        "globs": 0.046274481338274755,
        "style": 0.09254896267654951,
        "preset": 0.046274481338274755,
        "concise": 0.046274481338274755,
        "comprehensive": 0.046274481338274755,
        "9": 0.046274481338274755,
        "watched_globs": 0.046274481338274755,
        "5": 0.09254896267654951,
        "presets": 0.046274481338274755,
        "phase": 0.13882344401482424,
        "6": 0.09254896267654951,
        "multi": 0.046274481338274755,
        "language": 0.046274481338274755,
        "breadth": 0.046274481338274755,
        "framework": 0.13882344401482424,
        "smarts": 0.046274481338274755,
        "1": 0.23137240669137377,
        "entrypoint": 0.046274481338274755,
        "detection": 0.046274481338274755,
        "main": 0.046274481338274755,
        "spring": 0.046274481338274755,
        "boot": 0.046274481338274755,
        "fastapi": 0.09254896267654951,
        "aware": 0.09254896267654951,
        "quick": 0.046274481338274755,
        "start": 0.046274481338274755,
        "entrypoints": 0.046274481338274755,
        "12": 0.046274481338274755,
        "commands": 0.046274481338274755,
        "pattern": 0.09254896267654951,
        "analyzers": 0.09254896267654951,
        "docker": 0.046274481338274755,
        "k8s": 0.046274481338274755,
        "ci": 0.046274481338274755,
        "monorepo": 0.046274481338274755,
        "layout": 0.046274481338274755,
        "3": 0.13882344401482424,
        "7": 0.13882344401482424,
        "quality": 0.046274481338274755,
        "gates": 0.046274481338274755,
        "performance": 0.046274481338274755,
        "readme": 0.09254896267654951,
        "scorecard": 0.13882344401482424,
        "link": 0.09254896267654951,
        "validator": 0.09254896267654951,
        "badges": 0.09254896267654951,
        "13": 0.046274481338274755,
        "artifact": 0.09254896267654951,
        "embedding": 0.046274481338274755,
        "caching": 0.046274481338274755,
        "in": 0.046274481338274755,
        "incremental": 0.09254896267654951,
        "rag": 0.09254896267654951,
        "refresh": 0.09254896267654951,
        "partial": 0.046274481338274755,
        "embeddings": 0.046274481338274755,
        "cached": 0.046274481338274755,
        "no": 0.046274481338274755,
        "analyzer": 0.046274481338274755,
        "store": 0.046274481338274755,
        "14": 0.046274481338274755,
        "persist": 0.046274481338274755,
        "outputs": 0.046274481338274755,
        "8": 0.046274481338274755,
        "nice": 0.046274481338274755,
        "to": 0.09254896267654951,
        "have": 0.046274481338274755,
        "stretch": 0.046274481338274755,
        "dry": 0.09254896267654951,
        "run": 0.09254896267654951,
        "mode": 0.13882344401482424,
        "labeling": 0.09254896267654951,
        "updates": 0.09254896267654951,
        "commit": 0.046274481338274755,
        "policy": 0.046274481338274755,
        "tuning": 0.046274481338274755,
        "template": 0.13882344401482424,
        "overrides": 0.046274481338274755,
        "docs": 0.046274481338274755,
        "templates": 0.046274481338274755,
        "j2": 0.046274481338274755,
        "org": 0.046274481338274755,
        "packs": 0.09254896267654951,
        "override": 0.046274481338274755,
        "16": 0.046274481338274755,
        "service": 0.09254896267654951,
        "llama": 0.09254896267654951,
        "cpp": 0.09254896267654951,
        "adapter": 0.046274481338274755,
        "tree": 0.09254896267654951,
        "sitter": 0.09254896267654951,
        "extraction": 0.046274481338274755,
        "not": 0.046274481338274755,
        "started": 0.046274481338274755,
        "why": 0.046274481338274755,
        "this": 0.046274481338274755,
        "order": 0.046274481338274755,
        "fastest": 0.046274481338274755,
        "path": 0.046274481338274755,
        "value": 0.046274481338274755,
        "get": 0.046274481338274755,
        "init": 0.046274481338274755,
        "producing": 0.046274481338274755,
        "a": 0.046274481338274755,
        "solid": 0.046274481338274755,
        "before": 0.046274481338274755,
        "adding": 0.046274481338274755,
        "diffing": 0.046274481338274755
      },
      "text": "**GitHub Actions sample (push/PR trigger calling `docgen update`)** \u2014 \u2714 Done * Covers: 10 (GH Actions) 2. **Config refinements: watched globs, style preset (concise/comprehensive)** \u2014 \u2714 Done * Covers: 9 (watched_globs), 5 (style presets) ## Phase 6 \u2014 Multi-language breadth & framework smarts 1. **Entrypoint detection (main, Spring Boot, FastAPI) + framework-aware Quick Start** \u2014 \u2714 Done * Covers: 2 (entrypoints), 12 (framework-aware commands) 2. **Pattern analyzers (Docker/K8s, CI config, monorepo layout)** \u2014 \u2714 Done * Covers: 3 (pattern analyzers) ## Phase 7 \u2014 Quality gates & performance 1. **README scorecard + link validator + badges** \u2014 \u2714 Done * Covers: 13 (scorecard), 7 (link validator), 7 (badges) 2. **Artifact & embedding caching in `.docgen/` + incremental RAG refresh** \u2014 \u25d0 Partial (embeddings/scorecard cached; no analyzer artifact store) * Covers: 14 (persist outputs, incremental refresh) ## Phase 8 \u2014 \"Nice to have\" & stretch 1. **Dry-run mode, PR labeling/updates, commit/PR policy tuning** \u2014 \u2714 Done * Covers: 1 (dry-run), 10 (labeling/PR updates) 2. **Template overrides (`docs/templates/*.j2`) & org template packs** \u2014 \u2714 Done * Covers: 5 (override), 16 (template packs) 3. **Service mode (FastAPI), llama.cpp adapter, tree-sitter extraction** \u2014 \u2610 Not started * Covers: 1 (service mode), 6 (llama.cpp), 3 (tree-sitter) ## Why this order * **Fastest path to value**: get `docgen init` producing a solid README before adding diffing/RAG.",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/feature_order.md#3",
      "vector": {
        "3": 0.18333969940564226,
        "service": 0.18333969940564226,
        "mode": 0.18333969940564226,
        "fastapi": 0.09166984970282113,
        "llama": 0.18333969940564226,
        "cpp": 0.18333969940564226,
        "adapter": 0.09166984970282113,
        "tree": 0.18333969940564226,
        "sitter": 0.18333969940564226,
        "extraction": 0.09166984970282113,
        "not": 0.09166984970282113,
        "started": 0.09166984970282113,
        "covers": 0.09166984970282113,
        "1": 0.09166984970282113,
        "6": 0.09166984970282113,
        "why": 0.09166984970282113,
        "this": 0.09166984970282113,
        "order": 0.09166984970282113,
        "fastest": 0.09166984970282113,
        "path": 0.09166984970282113,
        "to": 0.18333969940564226,
        "value": 0.09166984970282113,
        "get": 0.09166984970282113,
        "docgen": 0.09166984970282113,
        "init": 0.09166984970282113,
        "producing": 0.09166984970282113,
        "a": 0.09166984970282113,
        "solid": 0.09166984970282113,
        "readme": 0.09166984970282113,
        "before": 0.09166984970282113,
        "adding": 0.09166984970282113,
        "diffing": 0.09166984970282113,
        "rag": 0.18333969940564226,
        "contain": 0.09166984970282113,
        "risk": 0.09166984970282113,
        "early": 0.09166984970282113,
        "section": 0.09166984970282113,
        "markers": 0.09166984970282113,
        "lint": 0.09166984970282113,
        "and": 0.2750095491084634,
        "commit": 0.09166984970282113,
        "publishing": 0.09166984970282113,
        "ensure": 0.09166984970282113,
        "safe": 0.09166984970282113,
        "idempotent": 0.09166984970282113,
        "edits": 0.09166984970282113,
        "accuracy": 0.09166984970282113,
        "next": 0.09166984970282113,
        "add": 0.09166984970282113,
        "validation": 0.09166984970282113,
        "avoid": 0.09166984970282113,
        "hallucinations": 0.09166984970282113,
        "once": 0.09166984970282113,
        "the": 0.18333969940564226,
        "pipeline": 0.09166984970282113,
        "works": 0.09166984970282113,
        "scale": 0.09166984970282113,
        "breadth": 0.09166984970282113,
        "later": 0.09166984970282113,
        "only": 0.09166984970282113,
        "after": 0.09166984970282113,
        "core": 0.09166984970282113,
        "loop": 0.09166984970282113,
        "is": 0.09166984970282113,
        "robust": 0.09166984970282113,
        "do": 0.09166984970282113,
        "we": 0.09166984970282113,
        "widen": 0.09166984970282113,
        "language": 0.09166984970282113,
        "framework": 0.09166984970282113,
        "coverage": 0.09166984970282113,
        "polish": 0.09166984970282113,
        "last": 0.09166984970282113,
        "ci": 0.09166984970282113,
        "caching": 0.09166984970282113,
        "quality": 0.09166984970282113,
        "gates": 0.09166984970282113,
        "refine": 0.09166984970282113,
        "dev": 0.09166984970282113,
        "experience": 0.09166984970282113,
        "performance": 0.09166984970282113
      },
      "text": "3. **Service mode (FastAPI), llama.cpp adapter, tree-sitter extraction** \u2014 \u2610 Not started * Covers: 1 (service mode), 6 (llama.cpp), 3 (tree-sitter) ## Why this order * **Fastest path to value**: get `docgen init` producing a solid README before adding diffing/RAG. * **Contain risk early**: section markers, lint, and commit publishing ensure safe/idempotent edits. * **Accuracy next**: add RAG + validation to avoid hallucinations once the pipeline works. * **Scale breadth later**: only after the core loop is robust do we widen language/framework coverage. * **Polish last**: CI, caching, and quality gates refine dev experience and performance.",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/jira_stories.md#0",
      "vector": {
        "docgen": 0.15037641213512565,
        "jira": 0.05012547071170855,
        "stories": 0.1002509414234171,
        "remaining": 0.05012547071170855,
        "are": 0.1002509414234171,
        "ordered": 0.05012547071170855,
        "by": 0.1002509414234171,
        "the": 0.25062735355854276,
        "recommended": 0.05012547071170855,
        "completion": 0.05012547071170855,
        "sequence": 0.05012547071170855,
        "and": 0.3508782949819598,
        "formatted": 0.05012547071170855,
        "per": 0.05012547071170855,
        "prompt": 0.05012547071170855,
        "template": 0.05012547071170855,
        "guidance": 0.05012547071170855,
        "all": 0.05012547071170855,
        "prior": 0.05012547071170855,
        "milestones": 0.05012547071170855,
        "complete": 0.05012547071170855,
        "only": 0.05012547071170855,
        "work": 0.05012547071170855,
        "listed": 0.05012547071170855,
        "below": 0.05012547071170855,
        "remains": 0.05012547071170855,
        "story": 0.1002509414234171,
        "s": 0.15037641213512565,
        "032": 0.05012547071170855,
        "no": 0.05012547071170855,
        "hallucination": 0.05012547071170855,
        "validation": 0.15037641213512565,
        "status": 0.05012547071170855,
        "done": 0.05012547071170855,
        "text": 0.05012547071170855,
        "introduce": 0.05012547071170855,
        "a": 0.3508782949819598,
        "layer": 0.05012547071170855,
        "that": 0.1002509414234171,
        "rejects": 0.05012547071170855,
        "readme": 0.05012547071170855,
        "content": 0.15037641213512565,
        "containing": 0.05012547071170855,
        "facts": 0.05012547071170855,
        "not": 0.05012547071170855,
        "backed": 0.05012547071170855,
        "analyzer": 0.1002509414234171,
        "signals": 0.15037641213512565,
        "or": 0.2005018828468342,
        "rag": 0.1002509414234171,
        "context": 0.1002509414234171,
        "surfacing": 0.05012547071170855,
        "actionable": 0.05012547071170855,
        "errors": 0.05012547071170855,
        "to": 0.05012547071170855,
        "users": 0.05012547071170855,
        "dependencies": 0.05012547071170855,
        "already": 0.05012547071170855,
        "completed": 0.05012547071170855,
        "031": 0.05012547071170855,
        "guardrailed": 0.05012547071170855,
        "execution": 0.05012547071170855,
        "011": 0.05012547071170855,
        "contexts": 0.05012547071170855,
        "constraints": 0.05012547071170855,
        "must": 0.05012547071170855,
        "run": 0.05012547071170855,
        "after": 0.1002509414234171,
        "section": 0.1002509414234171,
        "rendering": 0.1002509414234171,
        "but": 0.05012547071170855,
        "before": 0.1002509414234171,
        "writing": 0.05012547071170855,
        "files": 0.05012547071170855,
        "publishing": 0.05012547071170855,
        "prs": 0.05012547071170855,
        "provide": 0.05012547071170855,
        "clear": 0.05012547071170855,
        "remediation": 0.05012547071170855,
        "logs": 0.1002509414234171,
        "referencing": 0.05012547071170855,
        "missing": 0.1002509414234171,
        "affected": 0.05012547071170855,
        "sections": 0.1002509414234171,
        "allow": 0.05012547071170855,
        "an": 0.05012547071170855,
        "opt": 0.05012547071170855,
        "out": 0.05012547071170855,
        "toggle": 0.05012547071170855,
        "in": 0.05012547071170855,
        "yml": 0.05012547071170855,
        "for": 0.05012547071170855,
        "edge": 0.05012547071170855,
        "cases": 0.05012547071170855,
        "non": 0.05012547071170855,
        "goals": 0.05012547071170855,
        "external": 0.05012547071170855,
        "api": 0.05012547071170855,
        "calls": 0.05012547071170855,
        "complex": 0.05012547071170855,
        "semantic": 0.05012547071170855,
        "similarity": 0.05012547071170855,
        "checks": 0.05012547071170855,
        "acceptance": 0.1002509414234171,
        "criteria": 0.05012547071170855,
        "validator": 0.1002509414234171,
        "cross": 0.05012547071170855,
        "references": 0.05012547071170855,
        "generated": 0.05012547071170855,
        "claims": 0.05012547071170855,
        "against": 0.05012547071170855,
        "available": 0.05012547071170855,
        "disallowed": 0.05012547071170855,
        "triggers": 0.05012547071170855,
        "failure": 0.05012547071170855,
        "path": 0.05012547071170855,
        "with": 0.1002509414234171,
        "stub": 0.05012547071170855,
        "fallback": 0.05012547071170855,
        "unit": 0.05012547071170855,
        "tests": 0.05012547071170855,
        "cover": 0.05012547071170855,
        "of": 0.1002509414234171,
        "grounded": 0.05012547071170855,
        "rejection": 0.05012547071170855,
        "injected": 0.05012547071170855,
        "hallucinations": 0.05012547071170855,
        "cli": 0.05012547071170855,
        "surfaces": 0.05012547071170855,
        "concise": 0.05012547071170855,
        "error": 0.05012547071170855,
        "messages": 0.05012547071170855,
        "verbose": 0.05012547071170855,
        "list": 0.05012547071170855,
        "offending": 0.05012547071170855,
        "evidence": 0.05012547071170855,
        "implementation": 0.1002509414234171,
        "plan": 0.05012547071170855,
        "create": 0.05012547071170855,
        "dedicated": 0.05012547071170855,
        "validators": 0.1002509414234171,
        "package": 0.05012547071170855,
        "lightweight": 0.05012547071170855,
        "validationissue": 0.05012547071170855,
        "dataclass": 0.05012547071170855,
        "protocol": 0.05012547071170855,
        "nohallucinationvalidator": 0.05012547071170855,
        "concrete": 0.05012547071170855,
        "orchestrator": 0.05012547071170855,
        "registers": 0.05012547071170855,
        "executes": 0.05012547071170855,
        "them": 0.05012547071170855,
        "post": 0.05012547071170855,
        "processing": 0.05012547071170855,
        "io": 0.05012547071170855,
        "add": 0.05012547071170855,
        "shared": 0.05012547071170855,
        "evidenceindex": 0.05012547071170855,
        "builder": 0.05012547071170855,
        "normalizes": 0.05012547071170855
      },
      "text": "# DocGen Jira Stories (Remaining) > Stories are ordered by the recommended completion sequence and formatted per the prompt template guidance. All prior milestones are complete; only the work listed below remains. --- ## Story S-032 \u2014 No-Hallucination Validation - **Status:** \u2714 Done - **Story Text:** Introduce a validation layer that rejects README content containing facts not backed by analyzer signals or RAG context, surfacing actionable errors to users. - **Dependencies already completed:** S-031 (guardrailed execution), S-011 (RAG contexts) - **Constraints:** - Validation must run after section rendering but before writing files or publishing PRs. - Provide clear remediation logs referencing the missing signals and affected sections. - Allow an opt-out toggle in `.docgen.yml` for edge cases. - **Non-Goals:** External API calls or complex semantic similarity checks. - **Acceptance Criteria:** - Validator cross-references generated claims against available signals/context; disallowed content triggers a failure path with stub fallback. - Unit tests cover acceptance of grounded content and rejection of injected hallucinations. - CLI surfaces concise error messages and `--verbose` logs list offending sections and missing evidence. - **Implementation Plan:** - Create a dedicated `docgen.validators` package with a lightweight `ValidationIssue` dataclass, a `Validator` protocol, and a `NoHallucinationValidator` concrete implementation. The orchestrator registers validators after section rendering and executes them before post-processing or IO. - Add a shared `EvidenceIndex` builder that normalizes analyzer",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#1",
      "vector": {
        "a": 0.37435064886346636,
        "dedicated": 0.04159451654038515,
        "docgen": 0.12478354962115545,
        "validators": 0.12478354962115545,
        "package": 0.04159451654038515,
        "with": 0.2495670992423109,
        "lightweight": 0.04159451654038515,
        "validationissue": 0.04159451654038515,
        "dataclass": 0.04159451654038515,
        "validator": 0.04159451654038515,
        "protocol": 0.04159451654038515,
        "and": 0.29116161578269606,
        "nohallucinationvalidator": 0.04159451654038515,
        "concrete": 0.04159451654038515,
        "implementation": 0.04159451654038515,
        "the": 0.4991341984846218,
        "orchestrator": 0.04159451654038515,
        "registers": 0.04159451654038515,
        "after": 0.04159451654038515,
        "section": 0.0831890330807703,
        "rendering": 0.04159451654038515,
        "executes": 0.04159451654038515,
        "them": 0.04159451654038515,
        "before": 0.04159451654038515,
        "post": 0.04159451654038515,
        "processing": 0.04159451654038515,
        "or": 0.04159451654038515,
        "io": 0.04159451654038515,
        "add": 0.0831890330807703,
        "shared": 0.04159451654038515,
        "evidenceindex": 0.04159451654038515,
        "builder": 0.0831890330807703,
        "that": 0.12478354962115545,
        "normalizes": 0.04159451654038515,
        "analyzer": 0.04159451654038515,
        "signals": 0.0831890330807703,
        "names": 0.04159451654038515,
        "kinds": 0.04159451654038515,
        "key": 0.04159451654038515,
        "attributes": 0.04159451654038515,
        "retrieved": 0.04159451654038515,
        "rag": 0.04159451654038515,
        "chunks": 0.04159451654038515,
        "path": 0.04159451654038515,
        "heading": 0.04159451654038515,
        "snippet": 0.04159451654038515,
        "persist": 0.04159451654038515,
        "normalized": 0.0831890330807703,
        "evidence": 0.0831890330807703,
        "in": 0.0831890330807703,
        "run": 0.04159451654038515,
        "context": 0.04159451654038515,
        "so": 0.04159451654038515,
        "verbose": 0.04159451654038515,
        "logging": 0.04159451654038515,
        "receive": 0.04159451654038515,
        "same": 0.04159451654038515,
        "data": 0.04159451654038515,
        "extend": 0.04159451654038515,
        "prompt": 0.04159451654038515,
        "to": 0.20797258270192576,
        "annotate": 0.04159451654038515,
        "each": 0.0831890330807703,
        "render": 0.04159451654038515,
        "sectionevidence": 0.04159451654038515,
        "metadata": 0.0831890330807703,
        "describing": 0.04159451654038515,
        "which": 0.04159451654038515,
        "chunk": 0.04159451654038515,
        "ids": 0.04159451654038515,
        "were": 0.04159451654038515,
        "injected": 0.04159451654038515,
        "this": 0.04159451654038515,
        "is": 0.04159451654038515,
        "stored": 0.04159451654038515,
        "alongside": 0.04159451654038515,
        "rendered": 0.0831890330807703,
        "markdown": 0.04159451654038515,
        "avoid": 0.04159451654038515,
        "re": 0.04159451654038515,
        "parsing": 0.04159451654038515,
        "prompts": 0.04159451654038515,
        "implement": 0.04159451654038515,
        "lexical": 0.04159451654038515,
        "matching": 0.04159451654038515,
        "heuristics": 0.04159451654038515,
        "split": 0.04159451654038515,
        "sections": 0.0831890330807703,
        "into": 0.04159451654038515,
        "sentences": 0.0831890330807703,
        "ignore": 0.04159451654038515,
        "boilerplate": 0.04159451654038515,
        "phrases": 0.04159451654038515,
        "require": 0.04159451654038515,
        "remaining": 0.04159451654038515,
        "sentence": 0.04159451654038515,
        "introduces": 0.04159451654038515,
        "facts": 0.04159451654038515,
        "numbers": 0.04159451654038515,
        "detected": 0.0831890330807703,
        "entities": 0.04159451654038515,
        "verbs": 0.04159451654038515,
        "direct": 0.04159451654038515,
        "objects": 0.04159451654038515,
        "have": 0.04159451654038515,
        "at": 0.04159451654038515,
        "least": 0.04159451654038515,
        "one": 0.04159451654038515,
        "overlapping": 0.04159451654038515,
        "n": 0.04159451654038515,
        "gram": 0.04159451654038515,
        "len": 0.04159451654038515,
        "3": 0.04159451654038515,
        "flag": 0.0831890330807703,
        "unmatched": 0.04159451654038515,
        "as": 0.04159451654038515,
        "hallucinations": 0.0831890330807703,
        "when": 0.04159451654038515,
        "are": 0.04159451654038515,
        "short": 0.04159451654038515,
        "circuit": 0.04159451654038515,
        "pipeline": 0.04159451654038515,
        "emit": 0.04159451654038515,
        "fail": 0.04159451654038515,
        "safe": 0.04159451654038515,
        "stubs": 0.04159451654038515,
        "for": 0.12478354962115545,
        "offending": 0.04159451654038515,
        "reuse": 0.04159451654038515,
        "existing": 0.04159451654038515,
        "stub": 0.04159451654038515,
        "generator": 0.04159451654038515,
        "bubble": 0.04159451654038515,
        "validationerror": 0.04159451654038515,
        "back": 0.04159451654038515,
        "cli": 0.0831890330807703,
        "actionable": 0.04159451654038515,
        "hints": 0.04159451654038515,
        "yml": 0.04159451654038515,
        "updates": 0.04159451654038515,
        "introduce": 0.04159451654038515,
        "validation": 0.0831890330807703,
        "map": 0.04159451654038515,
        "no_hallucination": 0.04159451654038515,
        "boolean": 0.04159451654038515,
        "default": 0.04159451654038515,
        "true": 0.04159451654038515,
        "respect": 0.04159451654038515,
        "repo": 0.04159451654038515,
        "level": 0.04159451654038515,
        "overrides": 0.04159451654038515,
        "while": 0.04159451654038515,
        "allowing": 0.04159451654038515,
        "docgen_validation_no_hallucination": 0.04159451654038515,
        "false": 0.04159451654038515,
        "disable": 0.04159451654038515,
        "check": 0.04159451654038515,
        "ci": 0.04159451654038515,
        "emergencies": 0.04159451654038515,
        "skip": 0.04159451654038515,
        "init": 0.04159451654038515,
        "update": 0.04159451654038515,
        "regenerate": 0.04159451654038515,
        "flips": 0.04159451654038515,
        "toggle": 0.04159451654038515
      },
      "text": "a dedicated `docgen.validators` package with a lightweight `ValidationIssue` dataclass, a `Validator` protocol, and a `NoHallucinationValidator` concrete implementation. The orchestrator registers validators after section rendering and executes them before post-processing or IO. - Add a shared `EvidenceIndex` builder that normalizes analyzer signals (names, kinds, key attributes) and retrieved RAG chunks (path, heading, snippet). Persist the normalized evidence in the run context so validators and verbose logging receive the same data. - Extend the prompt builder to annotate each section render with `SectionEvidence` metadata describing which signals and chunk IDs were injected. This metadata is stored alongside the rendered markdown to avoid re-parsing prompts. - Implement lexical matching heuristics: split rendered sections into sentences, ignore boilerplate phrases, and require each remaining sentence that introduces facts (numbers, detected entities, verbs with direct objects) to have at least one overlapping n-gram (len \u22653) with the normalized evidence. Flag unmatched sentences as hallucinations. - When hallucinations are detected, short-circuit the pipeline, emit fail-safe stubs for the offending sections (reuse existing stub generator), and bubble a `ValidationError` back to the CLI with actionable hints. - **`.docgen.yml` & CLI Updates:** - Introduce a `validation` map with a `no_hallucination` boolean (default `true`). Respect repo-level overrides while allowing `DOCGEN_VALIDATION_NO_HALLUCINATION=false` to disable the check in CI emergencies. - Add a `--skip-validation` flag for `docgen init|update|regenerate` that flips the toggle for",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#2",
      "vector": {
        "cli": 0.18856180831641267,
        "updates": 0.04714045207910317,
        "introduce": 0.04714045207910317,
        "a": 0.23570226039551584,
        "validation": 0.23570226039551584,
        "map": 0.04714045207910317,
        "with": 0.09428090415820634,
        "no_hallucination": 0.04714045207910317,
        "boolean": 0.04714045207910317,
        "default": 0.04714045207910317,
        "true": 0.04714045207910317,
        "respect": 0.04714045207910317,
        "repo": 0.09428090415820634,
        "level": 0.04714045207910317,
        "overrides": 0.04714045207910317,
        "while": 0.04714045207910317,
        "allowing": 0.04714045207910317,
        "docgen_validation_no_hallucination": 0.04714045207910317,
        "false": 0.04714045207910317,
        "to": 0.1414213562373095,
        "disable": 0.04714045207910317,
        "the": 0.4242640687119285,
        "check": 0.04714045207910317,
        "in": 0.1414213562373095,
        "ci": 0.04714045207910317,
        "emergencies": 0.04714045207910317,
        "add": 0.09428090415820634,
        "skip": 0.04714045207910317,
        "flag": 0.04714045207910317,
        "for": 0.18856180831641267,
        "docgen": 0.09428090415820634,
        "init": 0.04714045207910317,
        "update": 0.04714045207910317,
        "regenerate": 0.04714045207910317,
        "that": 0.1414213562373095,
        "flips": 0.04714045207910317,
        "toggle": 0.04714045207910317,
        "current": 0.04714045207910317,
        "execution": 0.04714045207910317,
        "only": 0.04714045207910317,
        "and": 0.282842712474619,
        "is": 0.04714045207910317,
        "surfaced": 0.04714045207910317,
        "run": 0.09428090415820634,
        "summary": 0.04714045207910317,
        "encourage": 0.04714045207910317,
        "re": 0.04714045207910317,
        "enabling": 0.04714045207910317,
        "logging": 0.09428090415820634,
        "ux": 0.04714045207910317,
        "errors": 0.04714045207910317,
        "show": 0.04714045207910317,
        "one": 0.04714045207910317,
        "line": 0.04714045207910317,
        "summaries": 0.04714045207910317,
        "per": 0.04714045207910317,
        "section": 0.04714045207910317,
        "quickstart": 0.04714045207910317,
        "references": 0.04714045207910317,
        "docker": 0.04714045207910317,
        "compose": 0.04714045207910317,
        "without": 0.09428090415820634,
        "supporting": 0.04714045207910317,
        "analyzer": 0.1414213562373095,
        "signal": 0.04714045207910317,
        "verbose": 0.09428090415820634,
        "prints": 0.04714045207910317,
        "offending": 0.04714045207910317,
        "sentence": 0.04714045207910317,
        "missing": 0.04714045207910317,
        "tokens": 0.04714045207910317,
        "short": 0.04714045207910317,
        "list": 0.04714045207910317,
        "of": 0.04714045207910317,
        "nearby": 0.04714045207910317,
        "evidence": 0.09428090415820634,
        "persist": 0.09428090415820634,
        "json": 0.04714045207910317,
        "report": 0.04714045207910317,
        "under": 0.04714045207910317,
        "capturing": 0.04714045207910317,
        "validator": 0.04714045207910317,
        "status": 0.09428090415820634,
        "issues": 0.04714045207910317,
        "selected": 0.04714045207910317,
        "forensic": 0.04714045207910317,
        "review": 0.04714045207910317,
        "testing": 0.04714045207910317,
        "strategy": 0.04714045207910317,
        "unit": 0.04714045207910317,
        "tests": 0.1414213562373095,
        "cover": 0.04714045207910317,
        "positive": 0.04714045207910317,
        "negative": 0.04714045207910317,
        "cases": 0.09428090415820634,
        "nohallucinationvalidator": 0.04714045207910317,
        "including": 0.04714045207910317,
        "edge": 0.04714045207910317,
        "such": 0.04714045207910317,
        "as": 0.04714045207910317,
        "citations": 0.04714045207910317,
        "using": 0.04714045207910317,
        "synonyms": 0.04714045207910317,
        "or": 0.04714045207910317,
        "pluralization": 0.04714045207910317,
        "bullet": 0.04714045207910317,
        "lists": 0.04714045207910317,
        "code": 0.04714045207910317,
        "blocks": 0.04714045207910317,
        "integration": 0.04714045207910317,
        "full": 0.04714045207910317,
        "on": 0.04714045207910317,
        "synthetic": 0.04714045207910317,
        "repos": 0.04714045207910317,
        "stored": 0.04714045207910317,
        "data": 0.04714045207910317,
        "confirm": 0.04714045207910317,
        "grounded": 0.04714045207910317,
        "readmes": 0.04714045207910317,
        "pass": 0.04714045207910317,
        "tampered": 0.04714045207910317,
        "outputs": 0.09428090415820634,
        "fail": 0.04714045207910317,
        "fast": 0.04714045207910317,
        "stub": 0.04714045207910317,
        "replacements": 0.04714045207910317,
        "regression": 0.04714045207910317,
        "fixtures": 0.04714045207910317,
        "asserting": 0.04714045207910317,
        "disabling": 0.04714045207910317,
        "via": 0.04714045207910317,
        "config": 0.04714045207910317,
        "leaves": 0.04714045207910317,
        "runs": 0.09428090415820634,
        "untouched": 0.04714045207910317,
        "enumerates": 0.04714045207910317,
        "flagged": 0.04714045207910317,
        "sentences": 0.04714045207910317,
        "story": 0.09428090415820634,
        "s": 0.1414213562373095,
        "033": 0.04714045207910317,
        "artifact": 0.04714045207910317,
        "persistence": 0.04714045207910317,
        "done": 0.04714045207910317,
        "text": 0.04714045207910317,
        "alongside": 0.04714045207910317,
        "embeddings": 0.04714045207910317,
        "so": 0.04714045207910317,
        "repeated": 0.04714045207910317,
        "can": 0.04714045207910317,
        "reuse": 0.04714045207910317,
        "structured": 0.04714045207910317,
        "signals": 0.04714045207910317,
        "reprocessing": 0.04714045207910317,
        "unchanged": 0.04714045207910317,
        "files": 0.04714045207910317,
        "dependencies": 0.04714045207910317,
        "already": 0.04714045207910317,
        "completed": 0.04714045207910317,
        "003": 0.04714045207910317,
        "scanner": 0.04714045207910317,
        "020": 0.04714045207910317,
        "embedding": 0.04714045207910317,
        "cache": 0.04714045207910317
      },
      "text": "& CLI Updates:** - Introduce a `validation` map with a `no_hallucination` boolean (default `true`). Respect repo-level overrides while allowing `DOCGEN_VALIDATION_NO_HALLUCINATION=false` to disable the check in CI emergencies. - Add a `--skip-validation` flag for `docgen init|update|regenerate` that flips the toggle for the current execution only and is surfaced in the run summary to encourage re-enabling. - **Logging & UX:** - CLI errors show one-line summaries per section (`quickstart: references docker compose without supporting analyzer signal`). `--verbose` prints the offending sentence, the missing tokens, and a short list of nearby evidence. - Persist a `validation.json` report under `.docgen/` capturing the validator status, issues, and selected evidence for forensic review. - **Testing Strategy:** - Unit tests cover positive/negative cases for the `NoHallucinationValidator`, including edge cases such as citations using synonyms or pluralization, bullet lists, and code blocks. - Integration tests run the full CLI on synthetic repos stored in `tests/data/validation/` to confirm grounded READMEs pass and tampered outputs fail fast with stub replacements. - Add regression fixtures asserting that disabling validation via config/CLI leaves runs untouched and that verbose logging enumerates flagged sentences. ## Story S-033 \u2014 Analyzer Artifact Persistence - **Status:** \u2714 Done - **Story Text:** Persist analyzer outputs alongside embeddings so repeated runs can reuse structured signals without reprocessing unchanged files. - **Dependencies already completed:** S-003 (Repo scanner), S-020 (embedding cache",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#3",
      "vector": {
        "story": 0.19975046777556893,
        "s": 0.2996257016633534,
        "033": 0.04993761694389223,
        "analyzer": 0.19975046777556893,
        "artifact": 0.09987523388778446,
        "persistence": 0.04993761694389223,
        "status": 0.09987523388778446,
        "done": 0.09987523388778446,
        "text": 0.09987523388778446,
        "persist": 0.04993761694389223,
        "outputs": 0.09987523388778446,
        "alongside": 0.04993761694389223,
        "embeddings": 0.04993761694389223,
        "so": 0.04993761694389223,
        "repeated": 0.04993761694389223,
        "runs": 0.09987523388778446,
        "can": 0.04993761694389223,
        "reuse": 0.04993761694389223,
        "structured": 0.04993761694389223,
        "signals": 0.09987523388778446,
        "without": 0.04993761694389223,
        "reprocessing": 0.04993761694389223,
        "unchanged": 0.09987523388778446,
        "files": 0.09987523388778446,
        "dependencies": 0.09987523388778446,
        "already": 0.09987523388778446,
        "completed": 0.09987523388778446,
        "003": 0.04993761694389223,
        "repo": 0.09987523388778446,
        "scanner": 0.04993761694389223,
        "020": 0.04993761694389223,
        "embedding": 0.04993761694389223,
        "cache": 0.09987523388778446,
        "groundwork": 0.09987523388778446,
        "constraints": 0.09987523388778446,
        "store": 0.04993761694389223,
        "artifacts": 0.04993761694389223,
        "under": 0.04993761694389223,
        "docgen": 0.04993761694389223,
        "with": 0.1498128508316767,
        "versioning": 0.04993761694389223,
        "to": 0.19975046777556893,
        "handle": 0.04993761694389223,
        "schema": 0.04993761694389223,
        "changes": 0.04993761694389223,
        "refresh": 0.04993761694389223,
        "results": 0.04993761694389223,
        "incrementally": 0.04993761694389223,
        "based": 0.09987523388778446,
        "on": 0.04993761694389223,
        "file": 0.04993761694389223,
        "hashes": 0.04993761694389223,
        "and": 0.2996257016633534,
        "invalidate": 0.04993761694389223,
        "when": 0.19975046777556893,
        "analyzers": 0.04993761694389223,
        "change": 0.04993761694389223,
        "keep": 0.04993761694389223,
        "storage": 0.04993761694389223,
        "format": 0.04993761694389223,
        "json": 0.04993761694389223,
        "serializable": 0.04993761694389223,
        "human": 0.04993761694389223,
        "auditable": 0.04993761694389223,
        "non": 0.09987523388778446,
        "goals": 0.1498128508316767,
        "remote": 0.04993761694389223,
        "backends": 0.04993761694389223,
        "or": 0.04993761694389223,
        "cross": 0.04993761694389223,
        "sharing": 0.04993761694389223,
        "acceptance": 0.04993761694389223,
        "criteria": 0.04993761694389223,
        "saved": 0.04993761694389223,
        "reloaded": 0.04993761694389223,
        "during": 0.04993761694389223,
        "orchestrator": 0.04993761694389223,
        "skipping": 0.04993761694389223,
        "recomputation": 0.04993761694389223,
        "inputs": 0.04993761694389223,
        "integration": 0.09987523388778446,
        "tests": 0.04993761694389223,
        "demonstrate": 0.04993761694389223,
        "speed": 0.04993761694389223,
        "up": 0.04993761694389223,
        "by": 0.09987523388778446,
        "reusing": 0.04993761694389223,
        "cached": 0.04993761694389223,
        "correct": 0.04993761694389223,
        "invalidation": 0.04993761694389223,
        "mutate": 0.04993761694389223,
        "documentation": 0.04993761694389223,
        "in": 0.04993761694389223,
        "spec": 0.09987523388778446,
        "md": 0.04993761694389223,
        "updated": 0.04993761694389223,
        "reflect": 0.04993761694389223,
        "caching": 0.04993761694389223,
        "behavior": 0.04993761694389223,
        "034": 0.04993761694389223,
        "service": 0.1498128508316767,
        "mode": 0.09987523388778446,
        "extended": 0.04993761694389223,
        "runtimes": 0.04993761694389223,
        "deliver": 0.04993761694389223,
        "fastapi": 0.09987523388778446,
        "llama": 0.09987523388778446,
        "cpp": 0.09987523388778446,
        "runtime": 0.04993761694389223,
        "adapter": 0.09987523388778446,
        "tree": 0.09987523388778446,
        "sitter": 0.09987523388778446,
        "powered": 0.04993761694389223,
        "symbol": 0.04993761694389223,
        "extraction": 0.04993761694389223,
        "round": 0.04993761694389223,
        "out": 0.04993761694389223,
        "stretch": 0.04993761694389223,
        "010": 0.04993761694389223,
        "git": 0.04993761694389223,
        "publishing": 0.04993761694389223,
        "infrastructure": 0.04993761694389223,
        "017": 0.04993761694389223,
        "entrypoint": 0.04993761694389223,
        "detection": 0.04993761694389223,
        "must": 0.04993761694389223,
        "expose": 0.04993761694389223,
        "endpoints": 0.04993761694389223,
        "for": 0.09987523388778446,
        "init": 0.04993761694389223,
        "update": 0.04993761694389223,
        "dry": 0.04993761694389223,
        "run": 0.04993761694389223,
        "authentication": 0.04993761694389223,
        "disabled": 0.04993761694389223,
        "default": 0.04993761694389223,
        "but": 0.04993761694389223,
        "ready": 0.04993761694389223,
        "future": 0.04993761694389223,
        "hardening": 0.04993761694389223,
        "hooks": 0.04993761694389223,
        "should": 0.04993761694389223,
        "mirror": 0.04993761694389223,
        "llmrunner": 0.04993761694389223,
        "interface": 0.04993761694389223,
        "enforce": 0.04993761694389223,
        "local": 0.04993761694389223,
        "execution": 0.04993761694389223,
        "paths": 0.04993761694389223,
        "limited": 0.04993761694389223,
        "supported": 0.04993761694389223,
        "languages": 0.04993761694389223,
        "python": 0.04993761694389223,
        "java": 0.04993761694389223,
        "typescript": 0.04993761694389223,
        "graceful": 0.04993761694389223,
        "degradation": 0.04993761694389223,
        "parsers": 0.04993761694389223,
        "unavailable": 0.04993761694389223,
        "production": 0.04993761694389223
      },
      "text": "## Story S-033 \u2014 Analyzer Artifact Persistence - **Status:** \u2714 Done - **Story Text:** Persist analyzer outputs alongside embeddings so repeated runs can reuse structured signals without reprocessing unchanged files. - **Dependencies already completed:** S-003 (Repo scanner), S-020 (embedding cache groundwork) - **Constraints:** - Store artifacts under `.docgen/` with versioning to handle schema changes. - Refresh analyzer results incrementally based on file hashes and invalidate when analyzers change. - Keep storage format JSON-serializable and human-auditable. - **Non-Goals:** Remote cache backends or cross-repo sharing. - **Acceptance Criteria:** - Analyzer outputs saved and reloaded during orchestrator runs, skipping recomputation when inputs unchanged. - Integration tests demonstrate speed-up by reusing cached signals and correct invalidation when files mutate. - Documentation in `spec/spec.md` updated to reflect artifact caching behavior. ## Story S-034 \u2014 Service Mode & Extended Runtimes - **Status:** \u2714 Done - **Story Text:** Deliver FastAPI-based service mode, llama.cpp runtime adapter, and tree-sitter powered symbol extraction to round out stretch goals. - **Dependencies already completed:** S-010 (Git publishing infrastructure), S-017 (entrypoint detection groundwork) - **Constraints:** - FastAPI service must expose endpoints for init/update/dry-run with authentication disabled by default but ready for future hardening hooks. - llama.cpp adapter should mirror `LLMRunner` interface and enforce local execution paths. - Tree-sitter integration limited to supported languages (Python/Java/TypeScript) with graceful degradation when parsers unavailable. - **Non-Goals:** Production",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#4",
      "vector": {
        "with": 0.21594472522460836,
        "authentication": 0.07198157507486945,
        "disabled": 0.07198157507486945,
        "by": 0.1439631501497389,
        "default": 0.07198157507486945,
        "but": 0.07198157507486945,
        "ready": 0.07198157507486945,
        "for": 0.1439631501497389,
        "future": 0.07198157507486945,
        "hardening": 0.07198157507486945,
        "hooks": 0.07198157507486945,
        "llama": 0.1439631501497389,
        "cpp": 0.1439631501497389,
        "adapter": 0.1439631501497389,
        "should": 0.07198157507486945,
        "mirror": 0.07198157507486945,
        "llmrunner": 0.07198157507486945,
        "interface": 0.07198157507486945,
        "and": 0.4318894504492167,
        "enforce": 0.07198157507486945,
        "local": 0.07198157507486945,
        "execution": 0.07198157507486945,
        "paths": 0.07198157507486945,
        "tree": 0.1439631501497389,
        "sitter": 0.1439631501497389,
        "integration": 0.07198157507486945,
        "limited": 0.07198157507486945,
        "to": 0.1439631501497389,
        "supported": 0.07198157507486945,
        "languages": 0.07198157507486945,
        "python": 0.07198157507486945,
        "java": 0.07198157507486945,
        "typescript": 0.07198157507486945,
        "graceful": 0.07198157507486945,
        "degradation": 0.07198157507486945,
        "when": 0.07198157507486945,
        "parsers": 0.07198157507486945,
        "unavailable": 0.07198157507486945,
        "non": 0.07198157507486945,
        "goals": 0.1439631501497389,
        "production": 0.07198157507486945,
        "deployment": 0.07198157507486945,
        "tooling": 0.07198157507486945,
        "or": 0.07198157507486945,
        "advanced": 0.07198157507486945,
        "queueing": 0.07198157507486945,
        "acceptance": 0.07198157507486945,
        "criteria": 0.07198157507486945,
        "service": 0.1439631501497389,
        "mode": 0.07198157507486945,
        "passes": 0.07198157507486945,
        "end": 0.1439631501497389,
        "tests": 0.21594472522460836,
        "invoking": 0.07198157507486945,
        "fastapi": 0.07198157507486945,
        "routes": 0.07198157507486945,
        "reusing": 0.07198157507486945,
        "orchestrator": 0.07198157507486945,
        "logic": 0.07198157507486945,
        "covered": 0.07198157507486945,
        "unit": 0.07198157507486945,
        "simulating": 0.07198157507486945,
        "cli": 0.07198157507486945,
        "shared": 0.07198157507486945,
        "configuration": 0.07198157507486945,
        "analyzer": 0.07198157507486945,
        "enriches": 0.07198157507486945,
        "signals": 0.07198157507486945,
        "symbol": 0.07198157507486945,
        "metadata": 0.07198157507486945,
        "associated": 0.07198157507486945,
        "validate": 0.07198157507486945,
        "extraction": 0.07198157507486945,
        "on": 0.07198157507486945,
        "fixtures": 0.07198157507486945,
        "updated": 0.07198157507486945,
        "documentation": 0.07198157507486945,
        "usage": 0.07198157507486945,
        "extended": 0.07198157507486945,
        "runtimes": 0.07198157507486945,
        "in": 0.1439631501497389,
        "docs": 0.07198157507486945,
        "spec": 0.1439631501497389,
        "md": 0.07198157507486945,
        "next": 0.07198157507486945,
        "actions": 0.07198157507486945,
        "execute": 0.07198157507486945,
        "the": 0.07198157507486945,
        "stories": 0.07198157507486945,
        "above": 0.07198157507486945,
        "sequentially": 0.07198157507486945,
        "upon": 0.07198157507486945,
        "completion": 0.07198157507486945,
        "reassess": 0.07198157507486945,
        "remaining": 0.07198157507486945,
        "stretch": 0.07198157507486945,
        "knowledge": 0.07198157507486945,
        "graph": 0.07198157507486945,
        "secret": 0.07198157507486945,
        "scanning": 0.07198157507486945,
        "if": 0.07198157507486945,
        "still": 0.07198157507486945,
        "scope": 0.07198157507486945
      },
      "text": "with authentication disabled by default but ready for future hardening hooks. - llama.cpp adapter should mirror `LLMRunner` interface and enforce local execution paths. - Tree-sitter integration limited to supported languages (Python/Java/TypeScript) with graceful degradation when parsers unavailable. - **Non-Goals:** Production deployment tooling or advanced queueing. - **Acceptance Criteria:** - Service mode passes end-to-end tests invoking FastAPI routes and reusing orchestrator logic. - llama.cpp adapter covered by unit tests simulating CLI and shared configuration. - Tree-sitter analyzer enriches signals with symbol metadata and associated tests validate extraction on fixtures. - Updated documentation for service usage and extended runtimes in `docs/` and `spec/spec.md`. --- **Next Actions:** Execute the stories above sequentially; upon completion reassess remaining stretch goals (knowledge graph, secret scanning) if still in scope.",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/prompt_template.md#0",
      "vector": {
        "below": 0.09417632186960222,
        "is": 0.09417632186960222,
        "a": 0.18835264373920443,
        "drop": 0.04708816093480111,
        "in": 0.18835264373920443,
        "prompt": 0.09417632186960222,
        "template": 0.09417632186960222,
        "you": 0.14126448280440332,
        "can": 0.04708816093480111,
        "reuse": 0.04708816093480111,
        "for": 0.18835264373920443,
        "each": 0.04708816093480111,
        "single": 0.09417632186960222,
        "story": 0.5179697702828122,
        "s": 0.18835264373920443,
        "001": 0.09417632186960222,
        "044": 0.04708816093480111,
        "followed": 0.04708816093480111,
        "by": 0.04708816093480111,
        "two": 0.04708816093480111,
        "filled": 0.04708816093480111,
        "examples": 0.04708816093480111,
        "and": 0.18835264373920443,
        "016": 0.04708816093480111,
        "one": 0.04708816093480111,
        "at": 0.09417632186960222,
        "time": 0.04708816093480111,
        "implementation": 0.04708816093480111,
        "use": 0.09417632186960222,
        "this": 0.09417632186960222,
        "exact": 0.04708816093480111,
        "structure": 0.04708816093480111,
        "every": 0.04708816093480111,
        "replace": 0.04708816093480111,
        "placeholders": 0.04708816093480111,
        "with": 0.04708816093480111,
        "your": 0.04708816093480111,
        "specifics": 0.04708816093480111,
        "before": 0.04708816093480111,
        "sending": 0.04708816093480111,
        "system": 0.04708816093480111,
        "role": 0.04708816093480111,
        "are": 0.04708816093480111,
        "principal": 0.04708816093480111,
        "python": 0.14126448280440332,
        "engineer": 0.04708816093480111,
        "implementing": 0.04708816093480111,
        "tightly": 0.04708816093480111,
        "scoped": 0.04708816093480111,
        "an": 0.04708816093480111,
        "existing": 0.04708816093480111,
        "repository": 0.04708816093480111,
        "must": 0.04708816093480111,
        "implement": 0.04708816093480111,
        "only": 0.04708816093480111,
        "the": 0.14126448280440332,
        "no": 0.14126448280440332,
        "scope": 0.04708816093480111,
        "drift": 0.04708816093480111,
        "future": 0.04708816093480111,
        "stories": 0.04708816093480111,
        "produce": 0.04708816093480111,
        "production": 0.04708816093480111,
        "grade": 0.04708816093480111,
        "cross": 0.04708816093480111,
        "platform": 0.04708816093480111,
        "code": 0.09417632186960222,
        "windows": 0.04708816093480111,
        "macos": 0.04708816093480111,
        "3": 0.09417632186960222,
        "11": 0.09417632186960222,
        "follow": 0.04708816093480111,
        "repo": 0.04708816093480111,
        "conventions": 0.04708816093480111,
        "poetry": 0.09417632186960222,
        "ruff": 0.09417632186960222,
        "black": 0.09417632186960222,
        "mypy": 0.09417632186960222,
        "strict": 0.09417632186960222,
        "pytest": 0.14126448280440332,
        "logging": 0.04708816093480111,
        "prints": 0.04708816093480111,
        "library": 0.04708816093480111,
        "type": 0.04708816093480111,
        "hints": 0.04708816093480111,
        "everywhere": 0.04708816093480111,
        "keep": 0.04708816093480111,
        "audio": 0.09417632186960222,
        "callbacks": 0.04708816093480111,
        "non": 0.09417632186960222,
        "blocking": 0.04708816093480111,
        "prefer": 0.04708816093480111,
        "ring": 0.04708816093480111,
        "buffers": 0.04708816093480111,
        "preallocated": 0.04708816093480111,
        "arrays": 0.04708816093480111,
        "avoid": 0.04708816093480111,
        "os": 0.04708816093480111,
        "specific": 0.04708816093480111,
        "imports": 0.04708816093480111,
        "module": 0.04708816093480111,
        "top": 0.04708816093480111,
        "level": 0.04708816093480111,
        "when": 0.04708816093480111,
        "something": 0.04708816093480111,
        "ambiguous": 0.04708816093480111,
        "make": 0.04708816093480111,
        "smallest": 0.04708816093480111,
        "reasonable": 0.04708816093480111,
        "assumption": 0.04708816093480111,
        "state": 0.04708816093480111,
        "it": 0.04708816093480111,
        "assumptions": 0.04708816093480111,
        "section": 0.04708816093480111,
        "proceed": 0.04708816093480111,
        "context": 0.04708816093480111,
        "id": 0.04708816093480111,
        "story_id": 0.04708816093480111,
        "title": 0.04708816093480111,
        "story_title": 0.04708816093480111,
        "text": 0.04708816093480111,
        "story_text": 0.04708816093480111,
        "dependencies": 0.04708816093480111,
        "already": 0.04708816093480111,
        "completed": 0.04708816093480111,
        "dependencies_list_or_none": 0.04708816093480111,
        "constraints": 0.04708816093480111,
        "from": 0.04708816093480111,
        "prd": 0.04708816093480111,
        "backlog": 0.04708816093480111,
        "key_constraints": 0.04708816093480111,
        "goals": 0.04708816093480111,
        "non_goals": 0.04708816093480111,
        "environment": 0.04708816093480111,
        "tooling": 0.04708816093480111,
        "fixed": 0.04708816093480111,
        "package": 0.04708816093480111,
        "manager": 0.04708816093480111,
        "linters": 0.04708816093480111,
        "formatters": 0.04708816093480111,
        "static": 0.04708816093480111,
        "typing": 0.04708816093480111,
        "tests": 0.04708816093480111,
        "cov": 0.04708816093480111,
        "ui": 0.04708816093480111,
        "pyside6": 0.04708816093480111,
        "if": 0.09417632186960222,
        "relevant": 0.09417632186960222,
        "to": 0.04708816093480111,
        "i": 0.04708816093480111,
        "o": 0.04708816093480111,
        "sounddevice": 0.04708816093480111,
        "portaudio": 0.04708816093480111
      },
      "text": "Below is a **drop\u2011in prompt template** you can reuse for **each single story (S\u2011001 \u2192 S\u2011044)**, followed by **two filled examples** (for S\u2011001 and S\u2011016). --- ## \ud83d\udd27 One\u2011Story\u2011At\u2011A\u2011Time Implementation Prompt (Template) > **Use this exact structure for every story.** Replace `{{\u2026}}` placeholders with your specifics before sending. --- **SYSTEM / ROLE** You are a **Principal Python engineer** implementing a single, tightly scoped story in an existing repository. You must: * Implement **only the story below** (no scope drift, no future stories). * Produce production\u2011grade, cross\u2011platform code (Windows/macOS), Python 3.11. * Follow repo conventions: Poetry, ruff, black, mypy (strict), pytest. * Use logging (no prints) in library code, and type hints everywhere. * Keep audio callbacks non\u2011blocking; prefer ring buffers and preallocated arrays. * Avoid OS\u2011specific imports at module top level. * When something is ambiguous, **make the smallest reasonable assumption**, state it in the *Assumptions* section, and proceed. --- ### Story Context * **Story ID:** {{STORY_ID}} * **Story Title:** {{STORY_TITLE}} * **Story Text:** {{STORY_TEXT}} * **Dependencies already completed:** {{DEPENDENCIES_LIST_OR_NONE}} * **Constraints from PRD/backlog:** {{KEY_CONSTRAINTS}} * **Non\u2011Goals for this story:** {{NON_GOALS}} ### Environment & Tooling (fixed) * **Python:** 3.11 * **Package manager:** Poetry * **Linters/formatters:** ruff, black * **Static typing:** mypy (strict) * **Tests:** pytest + pytest\u2011cov * **UI:** PySide6 (if relevant to story) * **Audio I/O:** sounddevice/PortAudio (if relevant)",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#1",
      "vector": {
        "non_goals": 0.05581455721859476,
        "environment": 0.05581455721859476,
        "tooling": 0.05581455721859476,
        "fixed": 0.05581455721859476,
        "python": 0.16744367165578428,
        "3": 0.11162911443718952,
        "11": 0.05581455721859476,
        "package": 0.05581455721859476,
        "manager": 0.05581455721859476,
        "poetry": 0.05581455721859476,
        "linters": 0.05581455721859476,
        "formatters": 0.05581455721859476,
        "ruff": 0.11162911443718952,
        "black": 0.11162911443718952,
        "static": 0.05581455721859476,
        "typing": 0.05581455721859476,
        "mypy": 0.11162911443718952,
        "strict": 0.05581455721859476,
        "tests": 0.11162911443718952,
        "pytest": 0.16744367165578428,
        "cov": 0.05581455721859476,
        "ui": 0.05581455721859476,
        "pyside6": 0.05581455721859476,
        "if": 0.2790727860929738,
        "relevant": 0.2790727860929738,
        "to": 0.16744367165578428,
        "story": 0.05581455721859476,
        "audio": 0.05581455721859476,
        "i": 0.11162911443718952,
        "o": 0.05581455721859476,
        "sounddevice": 0.05581455721859476,
        "portaudio": 0.05581455721859476,
        "ml": 0.05581455721859476,
        "runtime": 0.05581455721859476,
        "onnxruntime": 0.05581455721859476,
        "current": 0.05581455721859476,
        "repository": 0.05581455721859476,
        "snapshot": 0.05581455721859476,
        "paste": 0.11162911443718952,
        "fresh": 0.05581455721859476,
        "snapshots": 0.05581455721859476,
        "so": 0.05581455721859476,
        "the": 0.11162911443718952,
        "model": 0.05581455721859476,
        "does": 0.05581455721859476,
        "not": 0.05581455721859476,
        "hallucinate": 0.05581455721859476,
        "keep": 0.05581455721859476,
        "these": 0.05581455721859476,
        "short": 0.11162911443718952,
        "but": 0.05581455721859476,
        "sufficient": 0.05581455721859476,
        "root": 0.05581455721859476,
        "tree": 0.11162911443718952,
        "a": 0.05581455721859476,
        "git": 0.11162911443718952,
        "or": 0.11162911443718952,
        "ls": 0.05581455721859476,
        "files": 0.22325822887437904,
        "repo_tree": 0.05581455721859476,
        "key": 0.05581455721859476,
        "only": 0.05581455721859476,
        "sections": 0.11162911443718952,
        "path": 0.11162911443718952,
        "file1": 0.05581455721859476,
        "file1_relevant_snippet": 0.05581455721859476,
        "file2": 0.05581455721859476,
        "file2_relevant_snippet": 0.05581455721859476,
        "pinned": 0.05581455721859476,
        "pyproject": 0.05581455721859476,
        "toml": 0.11162911443718952,
        "parts": 0.05581455721859476,
        "pyproject_snippet": 0.05581455721859476,
        "acceptance": 0.05581455721859476,
        "criteria": 0.05581455721859476,
        "definition": 0.05581455721859476,
        "of": 0.16744367165578428,
        "done": 0.05581455721859476,
        "functional": 0.05581455721859476,
        "functional_doc": 0.05581455721859476,
        "quality": 0.05581455721859476,
        "pass": 0.05581455721859476,
        "passes": 0.05581455721859476,
        "with": 0.11162911443718952,
        "90": 0.05581455721859476,
        "coverage": 0.05581455721859476,
        "for": 0.05581455721859476,
        "new": 0.05581455721859476,
        "code": 0.05581455721859476,
        "cross": 0.05581455721859476,
        "platform": 0.05581455721859476,
        "no": 0.11162911443718952,
        "os": 0.05581455721859476,
        "specific": 0.05581455721859476,
        "breakage": 0.05581455721859476,
        "guarded": 0.05581455721859476,
        "imports": 0.05581455721859476,
        "where": 0.05581455721859476,
        "needed": 0.05581455721859476,
        "performance": 0.05581455721859476,
        "applicable": 0.05581455721859476,
        "perf_requirements": 0.05581455721859476,
        "docs": 0.11162911443718952,
        "inline": 0.05581455721859476,
        "docstrings": 0.05581455721859476,
        "readme": 0.05581455721859476,
        "module": 0.05581455721859476,
        "level": 0.05581455721859476,
        "updated": 0.05581455721859476,
        "user": 0.05581455721859476,
        "facing": 0.05581455721859476,
        "unrelated": 0.05581455721859476,
        "refactors": 0.05581455721859476,
        "minimal": 0.05581455721859476,
        "diff": 0.05581455721859476,
        "outside": 0.05581455721859476,
        "touched": 0.05581455721859476,
        "scope": 0.05581455721859476,
        "deliverables": 0.05581455721859476,
        "output": 0.05581455721859476,
        "contract": 0.05581455721859476,
        "return": 0.05581455721859476,
        "following": 0.05581455721859476,
        "in": 0.05581455721859476,
        "order": 0.05581455721859476,
        "exact": 0.11162911443718952,
        "headings": 0.05581455721859476,
        "1": 0.05581455721859476,
        "assumptions": 0.11162911443718952,
        "decisions": 0.05581455721859476,
        "bullet": 0.05581455721859476,
        "list": 0.05581455721859476,
        "any": 0.05581455721859476,
        "reasonable": 0.05581455721859476,
        "you": 0.11162911443718952,
        "made": 0.05581455721859476,
        "2": 0.05581455721859476,
        "planned": 0.05581455721859476,
        "changes": 0.05581455721859476,
        "tl": 0.05581455721859476,
        "dr": 0.05581455721859476,
        "summary": 0.05581455721859476,
        "what": 0.05581455721859476,
        "will": 0.05581455721859476,
        "add": 0.05581455721859476,
        "modify": 0.05581455721859476,
        "and": 0.11162911443718952,
        "why": 0.05581455721859476,
        "full": 0.05581455721859476,
        "test": 0.05581455721859476,
        "covering": 0.05581455721859476,
        "success": 0.05581455721859476,
        "edge": 0.05581455721859476,
        "cases": 0.05581455721859476,
        "error": 0.05581455721859476,
        "paths": 0.05581455721859476,
        "4": 0.05581455721859476,
        "validation": 0.05581455721859476,
        "steps": 0.05581455721859476,
        "local": 0.05581455721859476
      },
      "text": "{{NON_GOALS}} ### Environment & Tooling (fixed) * **Python:** 3.11 * **Package manager:** Poetry * **Linters/formatters:** ruff, black * **Static typing:** mypy (strict) * **Tests:** pytest + pytest\u2011cov * **UI:** PySide6 (if relevant to story) * **Audio I/O:** sounddevice/PortAudio (if relevant) * **ML runtime:** onnxruntime (if relevant) ### Current Repository Snapshot > Paste fresh snapshots so the model does not hallucinate. Keep these short but sufficient. * **Root tree (`tree -a -I .git` or `git ls-files`):** ``` {{REPO_TREE}} ``` * **Key files (paste only relevant sections):** * `{{PATH/TO/FILE1}}` ```python {{FILE1_RELEVANT_SNIPPET}} ``` * `{{PATH/TO/FILE2}}` ```python {{FILE2_RELEVANT_SNIPPET}} ``` * **Pinned pyproject.toml (relevant parts):** ```toml {{PYPROJECT_SNIPPET}} ``` ### Acceptance Criteria (Definition of Done) * Functional: {{FUNCTIONAL_DOC}} * Quality: **ruff/black/mypy** pass; **pytest** passes with **\u2265 90%** coverage for new code. * Cross\u2011platform: No OS\u2011specific breakage; guarded imports where needed. * Performance (if applicable): {{PERF_REQUIREMENTS}} * Docs: Inline docstrings; README or module\u2011level docs updated if user\u2011facing. * No unrelated refactors; minimal diff outside touched scope. ### Deliverables \u2014 **Output Contract** Return the following sections **in order**, with exact headings: 1. **Assumptions & Decisions** \u2013 bullet list of any reasonable assumptions you made. 2. **Planned Changes (TL;DR)** \u2013 short summary of what files you will add/modify and why. 3. **Tests** \u2013 full test files covering success, edge cases, and error paths. 4. **Validation Steps (Local)** \u2013 exact",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#2",
      "vector": {
        "of": 0.1487044791289829,
        "any": 0.04956815970966096,
        "reasonable": 0.04956815970966096,
        "assumptions": 0.04956815970966096,
        "you": 0.09913631941932192,
        "made": 0.04956815970966096,
        "2": 0.04956815970966096,
        "planned": 0.04956815970966096,
        "changes": 0.04956815970966096,
        "tl": 0.04956815970966096,
        "dr": 0.04956815970966096,
        "short": 0.04956815970966096,
        "summary": 0.04956815970966096,
        "what": 0.04956815970966096,
        "files": 0.1487044791289829,
        "will": 0.04956815970966096,
        "add": 0.04956815970966096,
        "modify": 0.04956815970966096,
        "and": 0.3965452776772877,
        "why": 0.04956815970966096,
        "3": 0.04956815970966096,
        "tests": 0.04956815970966096,
        "full": 0.04956815970966096,
        "test": 0.09913631941932192,
        "covering": 0.04956815970966096,
        "success": 0.04956815970966096,
        "edge": 0.04956815970966096,
        "cases": 0.04956815970966096,
        "error": 0.04956815970966096,
        "paths": 0.04956815970966096,
        "4": 0.04956815970966096,
        "validation": 0.04956815970966096,
        "steps": 0.04956815970966096,
        "local": 0.04956815970966096,
        "exact": 0.04956815970966096,
        "commands": 0.04956815970966096,
        "to": 0.09913631941932192,
        "run": 0.04956815970966096,
        "poetry": 0.04956815970966096,
        "install": 0.04956815970966096,
        "lint": 0.04956815970966096,
        "type": 0.04956815970966096,
        "expected": 0.04956815970966096,
        "outputs": 0.04956815970966096,
        "5": 0.04956815970966096,
        "conventional": 0.04956815970966096,
        "commit": 0.09913631941932192,
        "message": 0.09913631941932192,
        "a": 0.24784079854830482,
        "single": 0.04956815970966096,
        "with": 0.09913631941932192,
        "the": 0.24784079854830482,
        "story": 0.24784079854830482,
        "description": 0.04956815970966096,
        "ex": 0.04956815970966096,
        "s": 0.1487044791289829,
        "001": 0.1487044791289829,
        "implemented": 0.04956815970966096,
        "get": 0.04956815970966096,
        "customers": 0.04956815970966096,
        "endpoint": 0.04956815970966096,
        "implementation": 0.04956815970966096,
        "hints": 0.04956815970966096,
        "if": 0.1487044791289829,
        "helpful": 0.04956815970966096,
        "keep": 0.04956815970966096,
        "per": 0.04956815970966096,
        "frame": 0.04956815970966096,
        "allocations": 0.04956815970966096,
        "near": 0.04956815970966096,
        "zero": 0.04956815970966096,
        "in": 0.19827263883864385,
        "audio": 0.04956815970966096,
        "callbacks": 0.04956815970966096,
        "use": 0.04956815970966096,
        "dependency": 0.04956815970966096,
        "inversion": 0.04956815970966096,
        "define": 0.04956815970966096,
        "clear": 0.04956815970966096,
        "interfaces": 0.04956815970966096,
        "core": 0.1487044791289829,
        "or": 0.1487044791289829,
        "ml": 0.04956815970966096,
        "where": 0.04956815970966096,
        "specified": 0.04956815970966096,
        "backlog": 0.04956815970966096,
        "an": 0.04956815970966096,
        "external": 0.04956815970966096,
        "binary": 0.04956815970966096,
        "model": 0.04956815970966096,
        "is": 0.04956815970966096,
        "out": 0.04956815970966096,
        "scope": 0.04956815970966096,
        "for": 0.04956815970966096,
        "this": 0.09913631941932192,
        "provide": 0.04956815970966096,
        "deterministic": 0.04956815970966096,
        "stub": 0.04956815970966096,
        "todo": 0.04956815970966096,
        "feature": 0.04956815970966096,
        "flag": 0.04956815970966096,
        "important": 0.04956815970966096,
        "guardrails": 0.04956815970966096,
        "do": 0.1487044791289829,
        "not": 0.1487044791289829,
        "implement": 0.04956815970966096,
        "future": 0.04956815970966096,
        "stories": 0.04956815970966096,
        "introduce": 0.04956815970966096,
        "new": 0.04956815970966096,
        "dependencies": 0.04956815970966096,
        "without": 0.04956815970966096,
        "updating": 0.04956815970966096,
        "pyproject": 0.04956815970966096,
        "toml": 0.04956815970966096,
        "justifying": 0.04956815970966096,
        "them": 0.04956815970966096,
        "change": 0.04956815970966096,
        "licensing": 0.04956815970966096,
        "repo": 0.04956815970966096,
        "name": 0.04956815970966096,
        "ci": 0.04956815970966096,
        "workflows": 0.04956815970966096,
        "unless": 0.04956815970966096,
        "explicitly": 0.04956815970966096,
        "requested": 0.04956815970966096,
        "output": 0.04956815970966096,
        "would": 0.04956815970966096,
        "exceed": 0.04956815970966096,
        "limits": 0.04956815970966096,
        "split": 0.04956815970966096,
        "patch": 0.04956815970966096,
        "file": 0.04956815970966096,
        "contents": 0.04956815970966096,
        "by": 0.04956815970966096,
        "directory": 0.04956815970966096,
        "but": 0.04956815970966096,
        "still": 0.04956815970966096,
        "include": 0.04956815970966096,
        "all": 0.04956815970966096,
        "required": 0.04956815970966096,
        "example": 0.04956815970966096,
        "instantiation": 0.04956815970966096,
        "1": 0.04956815970966096,
        "initialize": 0.09913631941932192,
        "repository": 0.09913631941932192,
        "metadata": 0.04956815970966096,
        "copy": 0.04956815970966096,
        "adjust": 0.04956815970966096,
        "paste": 0.04956815970966096,
        "following": 0.04956815970966096,
        "as": 0.04956815970966096,
        "real": 0.04956815970966096,
        "prompt": 0.04956815970966096,
        "your": 0.04956815970966096,
        "llm": 0.04956815970966096,
        "id": 0.04956815970966096,
        "title": 0.04956815970966096
      },
      "text": "of any reasonable assumptions you made. 2. **Planned Changes (TL;DR)** \u2013 short summary of what files you will add/modify and why. 3. **Tests** \u2013 full test files covering success, edge cases, and error paths. 4. **Validation Steps (Local)** \u2013 exact commands to run (Poetry install, lint, type, test) and expected outputs. 5. **Conventional Commit Message** \u2013 a single commit with the story and a description, ex: \"S-001: Implemented the GET customers endpoint\" ### Implementation Hints (if helpful) * Keep per\u2011frame allocations near zero in audio callbacks. * Use dependency inversion: define clear interfaces in `core/` or `ml/` where specified in the backlog. * If an external binary or model is out of scope for this story, provide a deterministic stub with TODO and a feature flag. ### Important Guardrails * **Do not** implement future stories. * **Do not** introduce new dependencies without updating `pyproject.toml` and justifying them. * **Do not** change licensing, repo name, or CI workflows unless explicitly requested in this story. * If output would exceed message limits, **split the Patch and File Contents by directory** but still include all required files. --- ## \u2705 Example Instantiation #1 \u2014 S\u2011001 (Initialize repository & core metadata) > Copy, adjust, and paste the following as a real prompt to your LLM. **Story ID:** S\u2011001 **Story Title:** Initialize repository & core",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#3",
      "vector": {
        "include": 0.09611386626644254,
        "all": 0.04805693313322127,
        "required": 0.04805693313322127,
        "files": 0.04805693313322127,
        "example": 0.09611386626644254,
        "instantiation": 0.09611386626644254,
        "1": 0.09611386626644254,
        "s": 0.19222773253288508,
        "001": 0.09611386626644254,
        "initialize": 0.09611386626644254,
        "repository": 0.14417079939966382,
        "core": 0.09611386626644254,
        "metadata": 0.14417079939966382,
        "copy": 0.04805693313322127,
        "adjust": 0.04805693313322127,
        "and": 0.09611386626644254,
        "paste": 0.09611386626644254,
        "the": 0.19222773253288508,
        "following": 0.04805693313322127,
        "as": 0.09611386626644254,
        "a": 0.04805693313322127,
        "real": 0.04805693313322127,
        "prompt": 0.04805693313322127,
        "to": 0.04805693313322127,
        "your": 0.04805693313322127,
        "llm": 0.04805693313322127,
        "story": 0.28834159879932764,
        "id": 0.09611386626644254,
        "title": 0.09611386626644254,
        "text": 0.09611386626644254,
        "create": 0.04805693313322127,
        "poetry": 0.19222773253288508,
        "project": 0.09611386626644254,
        "voice": 0.09611386626644254,
        "xform": 0.09611386626644254,
        "add": 0.14417079939966382,
        "license": 0.04805693313322127,
        "apache": 0.04805693313322127,
        "2": 0.09611386626644254,
        "0": 0.14417079939966382,
        "readme": 0.14417079939966382,
        "with": 0.04805693313322127,
        "purpose": 0.09611386626644254,
        "install": 0.14417079939966382,
        "quickstart": 0.09611386626644254,
        "contributing": 0.04805693313322127,
        "editorconfig": 0.04805693313322127,
        "gitattributes": 0.04805693313322127,
        "gitignore": 0.09611386626644254,
        "pyproject": 0.09611386626644254,
        "toml": 0.09611386626644254,
        "python": 0.24028466566610635,
        "3": 0.14417079939966382,
        "11": 0.14417079939966382,
        "dependencies": 0.04805693313322127,
        "already": 0.04805693313322127,
        "completed": 0.04805693313322127,
        "none": 0.04805693313322127,
        "constraints": 0.04805693313322127,
        "use": 0.09611386626644254,
        "repo": 0.04805693313322127,
        "name": 0.09611386626644254,
        "keep": 0.09611386626644254,
        "docs": 0.04805693313322127,
        "concise": 0.04805693313322127,
        "but": 0.04805693313322127,
        "actionable": 0.04805693313322127,
        "non": 0.04805693313322127,
        "goals": 0.04805693313322127,
        "no": 0.14417079939966382,
        "code": 0.04805693313322127,
        "beyond": 0.04805693313322127,
        "scaffolding": 0.04805693313322127,
        "ci": 0.09611386626644254,
        "package": 0.04805693313322127,
        "layout": 0.04805693313322127,
        "yet": 0.09611386626644254,
        "current": 0.04805693313322127,
        "snapshot": 0.04805693313322127,
        "empty": 0.09611386626644254,
        "directory": 0.04805693313322127,
        "acceptance": 0.04805693313322127,
        "criteria": 0.04805693313322127,
        "definition": 0.04805693313322127,
        "of": 0.04805693313322127,
        "done": 0.04805693313322127,
        "succeeds": 0.04805693313322127,
        "on": 0.04805693313322127,
        "macos": 0.09611386626644254,
        "windows": 0.09611386626644254,
        "md": 0.04805693313322127,
        "includes": 0.04805693313322127,
        "instructions": 0.04805693313322127,
        "placeholder": 0.04805693313322127,
        "running": 0.04805693313322127,
        "run": 0.04805693313322127,
        "v": 0.04805693313322127,
        "prints": 0.04805693313322127,
        "x": 0.04805693313322127,
        "deliverables": 0.09611386626644254,
        "output": 0.04805693313322127,
        "contract": 0.04805693313322127,
        "then": 0.04805693313322127,
        "list": 0.04805693313322127,
        "from": 0.04805693313322127,
        "template": 0.04805693313322127,
        "implementation": 0.04805693313322127,
        "hints": 0.04805693313322127,
        "standard": 0.04805693313322127,
        "for": 0.04805693313322127,
        "version": 0.04805693313322127,
        "authors": 0.04805693313322127,
        "in": 0.04805693313322127,
        "important": 0.04805693313322127,
        "guardrails": 0.04805693313322127,
        "do": 0.04805693313322127,
        "not": 0.04805693313322127,
        "or": 0.04805693313322127,
        "tests": 0.04805693313322127,
        "succinct": 0.04805693313322127,
        "section": 0.04805693313322127,
        "headers": 0.04805693313322127,
        "placeholders": 0.04805693313322127,
        "016": 0.09611386626644254,
        "model": 0.09611386626644254,
        "registry": 0.09611386626644254,
        "provider": 0.09611386626644254,
        "detection": 0.09611386626644254,
        "implement": 0.04805693313322127,
        "ml": 0.04805693313322127,
        "runtime": 0.14417079939966382,
        "onnx_loader": 0.04805693313322127,
        "py": 0.04805693313322127,
        "that": 0.04805693313322127,
        "chooses": 0.04805693313322127,
        "best": 0.04805693313322127,
        "onnx": 0.04805693313322127,
        "ep": 0.04805693313322127,
        "at": 0.04805693313322127,
        "tensorrt": 0.04805693313322127,
        "directml": 0.04805693313322127
      },
      "text": "include all required files. --- ## \u2705 Example Instantiation #1 \u2014 S\u2011001 (Initialize repository & core metadata) > Copy, adjust, and paste the following as a real prompt to your LLM. **Story ID:** S\u2011001 **Story Title:** Initialize repository & core metadata **Story Text:** Create Poetry project `voice-xform`; add LICENSE (Apache\u20112.0), README with purpose/install/quickstart, CONTRIBUTING, .editorconfig, .gitattributes, .gitignore, pyproject.toml (Python 3.11). **Dependencies already completed:** none **Constraints:** Use Poetry; repo name `voice-xform`; Python 3.11; keep docs concise but actionable. **Non\u2011Goals:** No code beyond scaffolding; no CI; no package layout yet. **Current Repository Snapshot** *(empty directory)* ``` (Empty) ``` **Acceptance Criteria (Definition of Done)** * `poetry install` succeeds on macOS & Windows. * `README.md` includes purpose, install instructions, and placeholder quickstart. * Running `poetry run python -V` prints Python 3.11.x. **Deliverables \u2014 Output Contract** (then paste the **Deliverables** list from the template) **Implementation Hints** * Use standard `.gitignore` for Python + macOS + Windows. * Include project metadata (name, version `0.1.0`, authors) in `pyproject.toml`. **Important Guardrails** * Do not add CI or tests yet. * Keep README succinct; add section headers as placeholders. --- ## \u2705 Example Instantiation #2 \u2014 S\u2011016 (Model registry & provider detection) **Story ID:** S\u2011016 **Story Title:** Model registry & provider detection **Story Text:** Implement `ml/runtime/onnx_loader.py` that chooses the best ONNX Runtime EP at runtime (TensorRT > DirectML >",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#4",
      "vector": {
        "example": 0.045267873021259265,
        "instantiation": 0.045267873021259265,
        "2": 0.045267873021259265,
        "s": 0.22633936510629632,
        "016": 0.09053574604251853,
        "model": 0.18107149208503706,
        "registry": 0.18107149208503706,
        "provider": 0.18107149208503706,
        "detection": 0.09053574604251853,
        "story": 0.1358036190637778,
        "id": 0.045267873021259265,
        "title": 0.045267873021259265,
        "text": 0.045267873021259265,
        "implement": 0.09053574604251853,
        "ml": 0.1358036190637778,
        "runtime": 0.18107149208503706,
        "onnx_loader": 0.09053574604251853,
        "py": 0.2716072381275556,
        "that": 0.09053574604251853,
        "chooses": 0.045267873021259265,
        "the": 0.18107149208503706,
        "best": 0.045267873021259265,
        "onnx": 0.045267873021259265,
        "ep": 0.1358036190637778,
        "at": 0.09053574604251853,
        "tensorrt": 0.045267873021259265,
        "directml": 0.045267873021259265,
        "cpu": 0.09053574604251853,
        "mps": 0.045267873021259265,
        "coreml": 0.045267873021259265,
        "on": 0.22633936510629632,
        "macos": 0.1358036190637778,
        "for": 0.09053574604251853,
        "paths": 0.045267873021259265,
        "versioning": 0.045267873021259265,
        "provide": 0.045267873021259265,
        "tests": 0.1358036190637778,
        "monkeypatch": 0.09053574604251853,
        "availability": 0.1358036190637778,
        "dependencies": 0.09053574604251853,
        "already": 0.045267873021259265,
        "completed": 0.045267873021259265,
        "004": 0.045267873021259265,
        "package": 0.045267873021259265,
        "layout": 0.045267873021259265,
        "002": 0.045267873021259265,
        "tooling": 0.045267873021259265,
        "003": 0.045267873021259265,
        "ci": 0.045267873021259265,
        "constraints": 0.045267873021259265,
        "no": 0.18107149208503706,
        "gpu": 0.045267873021259265,
        "specific": 0.045267873021259265,
        "imports": 0.045267873021259265,
        "module": 0.045267873021259265,
        "top": 0.045267873021259265,
        "level": 0.045267873021259265,
        "log": 0.045267873021259265,
        "chosen": 0.045267873021259265,
        "and": 0.18107149208503706,
        "fallbacks": 0.045267873021259265,
        "non": 0.045267873021259265,
        "goals": 0.045267873021259265,
        "real": 0.045267873021259265,
        "files": 0.09053574604251853,
        "yet": 0.045267873021259265,
        "inference": 0.045267873021259265,
        "calls": 0.045267873021259265,
        "current": 0.045267873021259265,
        "repository": 0.045267873021259265,
        "snapshot": 0.045267873021259265,
        "voice": 0.09053574604251853,
        "xform": 0.09053574604251853,
        "app": 0.045267873021259265,
        "core": 0.045267873021259265,
        "version": 0.09053574604251853,
        "__init__": 0.09053574604251853,
        "empty": 0.045267873021259265,
        "placeholder": 0.045267873021259265,
        "pyproject": 0.09053574604251853,
        "toml": 0.1358036190637778,
        "key": 0.045267873021259265,
        "relevant": 0.045267873021259265,
        "parts": 0.045267873021259265,
        "tool": 0.09053574604251853,
        "poetry": 0.09053574604251853,
        "name": 0.045267873021259265,
        "0": 0.1358036190637778,
        "1": 0.09053574604251853,
        "python": 0.045267873021259265,
        "3": 0.045267873021259265,
        "11": 0.045267873021259265,
        "onnxruntime": 0.09053574604251853,
        "18": 0.045267873021259265,
        "acceptance": 0.045267873021259265,
        "criteria": 0.045267873021259265,
        "definition": 0.045267873021259265,
        "of": 0.045267873021259265,
        "done": 0.045267873021259265,
        "select_providers": 0.045267873021259265,
        "returns": 0.045267873021259265,
        "an": 0.045267873021259265,
        "ordered": 0.045267873021259265,
        "list": 0.1358036190637778,
        "based": 0.045267873021259265,
        "platform": 0.09053574604251853,
        "logs": 0.045267873021259265,
        "contain": 0.045267873021259265,
        "selected": 0.045267873021259265,
        "reason": 0.045267873021259265,
        "fallback": 0.045267873021259265,
        "simulate": 0.045267873021259265,
        "get_available_providers": 0.045267873021259265,
        "assert": 0.045267873021259265,
        "selection": 0.045267873021259265,
        "order": 0.045267873021259265,
        "across": 0.045267873021259265,
        "windows": 0.09053574604251853,
        "linux": 0.045267873021259265,
        "mypy": 0.045267873021259265,
        "ruff": 0.045267873021259265,
        "pytest": 0.045267873021259265,
        "pass": 0.045267873021259265,
        "deliverables": 0.09053574604251853,
        "output": 0.045267873021259265,
        "contract": 0.045267873021259265,
        "then": 0.045267873021259265,
        "paste": 0.045267873021259265,
        "from": 0.045267873021259265,
        "template": 0.045267873021259265,
        "implementation": 0.045267873021259265,
        "hints": 0.045267873021259265,
        "detect": 0.045267873021259265,
        "os": 0.045267873021259265,
        "with": 0.045267873021259265,
        "system": 0.045267873021259265,
        "prefer": 0.045267873021259265,
        "tensorrtexecutionprovider": 0.045267873021259265,
        "nvidia": 0.045267873021259265,
        "dmlexecutionprovider": 0.045267873021259265,
        "coremlexecutionprovider": 0.045267873021259265,
        "or": 0.045267873021259265,
        "mpsexecutionprovider": 0.045267873021259265,
        "else": 0.045267873021259265,
        "expose": 0.045267873021259265,
        "a": 0.045267873021259265,
        "helper": 0.045267873021259265,
        "create_session": 0.045267873021259265,
        "path": 0.045267873021259265,
        "str": 0.09053574604251853,
        "preferred": 0.045267873021259265,
        "none": 0.045267873021259265,
        "inferencesession": 0.045267873021259265,
        "important": 0.045267873021259265,
        "guardrails": 0.045267873021259265,
        "actual": 0.045267873021259265
      },
      "text": "--- ## \u2705 Example Instantiation #2 \u2014 S\u2011016 (Model registry & provider detection) **Story ID:** S\u2011016 **Story Title:** Model registry & provider detection **Story Text:** Implement `ml/runtime/onnx_loader.py` that chooses the best ONNX Runtime EP at runtime (TensorRT > DirectML > CPU; MPS/CoreML on macOS). Implement `ml/registry.py` for model paths/versioning. Provide tests that monkeypatch provider availability. **Dependencies already completed:** S\u2011004 (package layout), S\u2011002 (tooling), S\u2011003 (CI) **Constraints:** No GPU\u2011specific imports at module top level. Log chosen EP and fallbacks. **Non\u2011Goals:** No real model files yet; no inference calls. **Current Repository Snapshot** ``` voice-xform/ app/ core/ version.py ml/ __init__.py runtime/ __init__.py registry.py # (empty placeholder) tests/ pyproject.toml ``` **Key files:** `pyproject.toml` (relevant parts) ```toml [tool.poetry] name = \"voice-xform\" version = \"0.1.0\" [tool.poetry.dependencies] python = \"^3.11\" onnxruntime = \"^1.18.0\" ``` **Acceptance Criteria (Definition of Done)** * `onnx_loader.select_providers()` returns an ordered provider list based on platform and availability. * Logs contain the selected EP and reason for fallback. * Tests simulate availability (monkeypatch `onnxruntime.get_available_providers`) and assert selection order across Windows/macOS/Linux. * mypy/ruff/pytest pass. **Deliverables \u2014 Output Contract** (then paste the **Deliverables** list from the template) **Implementation Hints** * Detect OS with `platform.system()`. * Prefer `\"TensorrtExecutionProvider\"` on NVIDIA, `\"DmlExecutionProvider\"` on Windows, `\"CoreMLExecutionProvider\"` or `\"MPSExecutionProvider\"` on macOS, else CPU. * Expose a helper `create_session(path: str, preferred: list[str] | None) -> InferenceSession`. **Important Guardrails** * No actual",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#5",
      "vector": {
        "template": 0.08971226080325131,
        "implementation": 0.04485613040162566,
        "hints": 0.04485613040162566,
        "detect": 0.04485613040162566,
        "os": 0.04485613040162566,
        "with": 0.08971226080325131,
        "platform": 0.08971226080325131,
        "system": 0.08971226080325131,
        "prefer": 0.04485613040162566,
        "tensorrtexecutionprovider": 0.04485613040162566,
        "on": 0.17942452160650263,
        "nvidia": 0.04485613040162566,
        "dmlexecutionprovider": 0.04485613040162566,
        "windows": 0.08971226080325131,
        "coremlexecutionprovider": 0.04485613040162566,
        "or": 0.08971226080325131,
        "mpsexecutionprovider": 0.04485613040162566,
        "macos": 0.08971226080325131,
        "else": 0.04485613040162566,
        "cpu": 0.04485613040162566,
        "expose": 0.04485613040162566,
        "a": 0.26913678240975397,
        "helper": 0.04485613040162566,
        "create_session": 0.04485613040162566,
        "path": 0.04485613040162566,
        "str": 0.08971226080325131,
        "preferred": 0.04485613040162566,
        "list": 0.04485613040162566,
        "none": 0.04485613040162566,
        "inferencesession": 0.04485613040162566,
        "important": 0.04485613040162566,
        "guardrails": 0.04485613040162566,
        "no": 0.08971226080325131,
        "actual": 0.04485613040162566,
        "model": 0.04485613040162566,
        "downloads": 0.04485613040162566,
        "global": 0.04485613040162566,
        "provider": 0.04485613040162566,
        "checks": 0.08971226080325131,
        "at": 0.04485613040162566,
        "import": 0.04485613040162566,
        "time": 0.08971226080325131,
        "run": 0.17942452160650263,
        "inside": 0.04485613040162566,
        "functions": 0.04485613040162566,
        "verification": 0.04485613040162566,
        "checklist": 0.04485613040162566,
        "you": 0.13456839120487699,
        "this": 0.04485613040162566,
        "after": 0.04485613040162566,
        "each": 0.08971226080325131,
        "story": 0.26913678240975397,
        "locally": 0.04485613040162566,
        "and": 0.3139929128113796,
        "produce": 0.04485613040162566,
        "these": 0.04485613040162566,
        "commands": 0.04485613040162566,
        "in": 0.13456839120487699,
        "the": 0.4485613040162566,
        "validation": 0.04485613040162566,
        "steps": 0.04485613040162566,
        "section": 0.08971226080325131,
        "bash": 0.04485613040162566,
        "make": 0.04485613040162566,
        "all": 0.04485613040162566,
        "confirm": 0.04485613040162566,
        "tests": 0.08971226080325131,
        "pass": 0.04485613040162566,
        "coverage": 0.04485613040162566,
        "for": 0.13456839120487699,
        "new": 0.04485613040162566,
        "code": 0.04485613040162566,
        "95": 0.04485613040162566,
        "spot": 0.04485613040162566,
        "check": 0.04485613040162566,
        "specific": 0.04485613040162566,
        "issues": 0.08971226080325131,
        "if": 0.13456839120487699,
        "touches": 0.04485613040162566,
        "features": 0.04485613040162566,
        "command": 0.04485613040162566,
        "review": 0.08971226080325131,
        "do": 0.04485613040162566,
        "pr": 0.04485613040162566,
        "of": 0.04485613040162566,
        "diff": 0.04485613040162566,
        "fix": 0.04485613040162566,
        "any": 0.04485613040162566,
        "find": 0.04485613040162566,
        "tips": 0.04485613040162566,
        "working": 0.04485613040162566,
        "always": 0.04485613040162566,
        "update": 0.04485613040162566,
        "current": 0.04485613040162566,
        "repository": 0.04485613040162566,
        "snapshot": 0.04485613040162566,
        "before": 0.04485613040162566,
        "so": 0.04485613040162566,
        "llm": 0.08971226080325131,
        "is": 0.13456839120487699,
        "grounded": 0.04485613040162566,
        "reality": 0.04485613040162566,
        "keep": 0.04485613040162566,
        "acceptance": 0.08971226080325131,
        "criteria": 0.08971226080325131,
        "crisp": 0.04485613040162566,
        "testable": 0.04485613040162566,
        "output": 0.04485613040162566,
        "contract": 0.04485613040162566,
        "ensures": 0.04485613040162566,
        "get": 0.04485613040162566,
        "git": 0.04485613040162566,
        "apply": 0.04485613040162566,
        "able": 0.04485613040162566,
        "patch": 0.04485613040162566,
        "full": 0.04485613040162566,
        "file": 0.04485613040162566,
        "contents": 0.04485613040162566,
        "commit": 0.04485613040162566,
        "message": 0.04485613040162566,
        "every": 0.04485613040162566,
        "ui": 0.08971226080325131,
        "heavy": 0.04485613040162566,
        "add": 0.04485613040162566,
        "screenshots": 0.04485613040162566,
        "state": 0.04485613040162566,
        "diagrams": 0.04485613040162566,
        "to": 0.13456839120487699,
        "context": 0.04485613040162566,
        "steer": 0.04485613040162566,
        "layout": 0.04485613040162566,
        "naming": 0.04485613040162566,
        "performance": 0.04485613040162566,
        "sensitive": 0.04485613040162566,
        "put": 0.04485613040162566,
        "explicit": 0.04485613040162566,
        "budgets": 0.04485613040162566,
        "into": 0.04485613040162566,
        "ask": 0.04485613040162566,
        "print": 0.04485613040162566,
        "measured": 0.04485613040162566,
        "timings": 0.04485613040162566
      },
      "text": "template) **Implementation Hints** * Detect OS with `platform.system()`. * Prefer `\"TensorrtExecutionProvider\"` on NVIDIA, `\"DmlExecutionProvider\"` on Windows, `\"CoreMLExecutionProvider\"` or `\"MPSExecutionProvider\"` on macOS, else CPU. * Expose a helper `create_session(path: str, preferred: list[str] | None) -> InferenceSession`. **Important Guardrails** * No actual model downloads. * No global provider checks at import time; run checks inside functions. --- ## \ud83e\uddea Verification Checklist (You run this after each story) Run locally and produce these commands in the **Validation Steps** section: ```bash make all ``` * Confirm tests pass and coverage for new code \u2265 95%. * On Windows/macOS, spot\u2011check for platform\u2011specific issues if the story touches system features. * Run the command /review and do a PR review of the diff. Fix any issues you find. --- ## \ud83d\udcdd Tips for Working With the Template * Always **update the \u201cCurrent Repository Snapshot\u201d** before each story so the LLM is grounded in reality. * Keep **Acceptance Criteria** crisp and testable. * The **Output Contract** ensures you get a `git apply`\u2011able patch, full file contents, tests, and a commit message \u2014 every time. * If a story is UI\u2011heavy, add screenshots or UI state diagrams to the **Story Context** section to steer layout and naming. * If a story is performance\u2011sensitive, put explicit budgets into **Acceptance Criteria** and ask the LLM to print measured timings in",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#6",
      "vector": {
        "story": 0.3849001794597505,
        "is": 0.19245008972987526,
        "ui": 0.19245008972987526,
        "heavy": 0.09622504486493763,
        "add": 0.09622504486493763,
        "screenshots": 0.09622504486493763,
        "or": 0.09622504486493763,
        "state": 0.09622504486493763,
        "diagrams": 0.09622504486493763,
        "to": 0.28867513459481287,
        "the": 0.28867513459481287,
        "context": 0.19245008972987526,
        "section": 0.09622504486493763,
        "steer": 0.09622504486493763,
        "layout": 0.09622504486493763,
        "and": 0.28867513459481287,
        "naming": 0.09622504486493763,
        "if": 0.09622504486493763,
        "a": 0.09622504486493763,
        "performance": 0.09622504486493763,
        "sensitive": 0.09622504486493763,
        "put": 0.09622504486493763,
        "explicit": 0.09622504486493763,
        "budgets": 0.09622504486493763,
        "into": 0.09622504486493763,
        "acceptance": 0.19245008972987526,
        "criteria": 0.19245008972987526,
        "ask": 0.09622504486493763,
        "llm": 0.09622504486493763,
        "print": 0.09622504486493763,
        "measured": 0.09622504486493763,
        "timings": 0.09622504486493763,
        "in": 0.19245008972987526,
        "test": 0.09622504486493763,
        "logs": 0.09622504486493763,
        "use": 0.09622504486493763,
        "this": 0.09622504486493763,
        "template": 0.09622504486493763,
        "verbatim": 0.09622504486493763,
        "for": 0.09622504486493763,
        "s": 0.19245008972987526,
        "001": 0.09622504486493763,
        "through": 0.09622504486493763,
        "044": 0.09622504486493763,
        "by": 0.09622504486493763,
        "swapping": 0.09622504486493763,
        "relevant": 0.09622504486493763,
        "snapshot": 0.09622504486493763
      },
      "text": "story is UI\u2011heavy, add screenshots or UI state diagrams to the **Story Context** section to steer layout and naming. * If a story is performance\u2011sensitive, put explicit budgets into **Acceptance Criteria** and ask the LLM to print measured timings in test logs. --- Use this template verbatim for S\u2011001 through S\u2011044 by swapping in the relevant **Story Context**, **Snapshot**, and **Acceptance Criteria**.",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/spec.md#0",
      "vector": {
        "intelligent": 0.06696495301824251,
        "readme": 0.2008948590547275,
        "generator": 0.06696495301824251,
        "architecture": 0.13392990603648502,
        "spec": 0.06696495301824251,
        "python": 0.13392990603648502,
        "local": 0.2008948590547275,
        "llm": 0.2008948590547275,
        "1": 0.06696495301824251,
        "purpose": 0.06696495301824251,
        "scope": 0.06696495301824251,
        "build": 0.13392990603648502,
        "a": 0.3348247650912125,
        "based": 0.06696495301824251,
        "system": 0.06696495301824251,
        "that": 0.06696495301824251,
        "analyzes": 0.06696495301824251,
        "git": 0.3348247650912125,
        "repository": 0.06696495301824251,
        "structure": 0.06696495301824251,
        "code": 0.06696495301824251,
        "dependencies": 0.06696495301824251,
        "then": 0.06696495301824251,
        "generates": 0.06696495301824251,
        "and": 0.13392990603648502,
        "maintains": 0.06696495301824251,
        "high": 0.13392990603648502,
        "quality": 0.06696495301824251,
        "md": 0.06696495301824251,
        "using": 0.06696495301824251,
        "it": 0.06696495301824251,
        "initializes": 0.06696495301824251,
        "repos": 0.06696495301824251,
        "with": 0.06696495301824251,
        "no": 0.06696495301824251,
        "docs": 0.2008948590547275,
        "keeps": 0.06696495301824251,
        "up": 0.06696495301824251,
        "to": 0.06696495301824251,
        "date": 0.06696495301824251,
        "on": 0.06696495301824251,
        "commits": 0.06696495301824251,
        "prs": 0.06696495301824251,
        "supports": 0.06696495301824251,
        "multiple": 0.06696495301824251,
        "languages": 0.06696495301824251,
        "project": 0.06696495301824251,
        "types": 0.06696495301824251,
        "via": 0.06696495301824251,
        "analyzers": 0.13392990603648502,
        "non": 0.06696495301824251,
        "goals": 0.06696495301824251,
        "for": 0.06696495301824251,
        "the": 0.06696495301824251,
        "poc": 0.06696495301824251,
        "multi": 0.06696495301824251,
        "repo": 0.13392990603648502,
        "orchestration": 0.06696495301824251,
        "full": 0.06696495301824251,
        "website": 0.06696495301824251,
        "api": 0.06696495301824251,
        "reference": 0.06696495301824251,
        "extraction": 0.06696495301824251,
        "beyond": 0.06696495301824251,
        "summaries": 0.06696495301824251,
        "cloud": 0.06696495301824251,
        "llms": 0.06696495301824251,
        "2": 0.06696495301824251,
        "level": 0.06696495301824251,
        "at": 0.06696495301824251,
        "glance": 0.06696495301824251,
        "events": 0.06696495301824251,
        "event": 0.06696495301824251,
        "sources": 0.06696495301824251,
        "cli": 0.06696495301824251,
        "commands": 0.06696495301824251,
        "hooks": 0.06696495301824251,
        "webhooks": 0.06696495301824251,
        "ci": 0.06696495301824251,
        "commit": 0.13392990603648502,
        "pr": 0.13392990603648502,
        "orchestr": 0.06696495301824251,
        "async": 0.06696495301824251,
        "task": 0.06696495301824251,
        "graph": 0.13392990603648502,
        "scanner": 0.06696495301824251,
        "doc": 0.06696495301824251,
        "store": 0.06696495301824251,
        "indexer": 0.06696495301824251,
        "language": 0.06696495301824251,
        "artifacts": 0.06696495301824251,
        "fs": 0.06696495301824251,
        "deps": 0.06696495301824251,
        "cache": 0.06696495301824251,
        "versions": 0.06696495301824251,
        "knowledge": 0.06696495301824251,
        "embeddings": 0.06696495301824251,
        "prompt": 0.06696495301824251,
        "builder": 0.06696495301824251,
        "templates": 0.06696495301824251,
        "rag": 0.06696495301824251,
        "runner": 0.06696495301824251,
        "llama": 0.06696495301824251,
        "cpp": 0.06696495301824251,
        "ollama": 0.06696495301824251,
        "post": 0.06696495301824251,
        "processor": 0.06696495301824251,
        "lint": 0.06696495301824251,
        "toc": 0.06696495301824251,
        "badges": 0.06696495301824251,
        "links": 0.06696495301824251,
        "publisher": 0.06696495301824251,
        "branch": 0.06696495301824251
      },
      "text": "# Intelligent README Generator \u2014 Architecture & Spec (Python, Local LLM) ## 1) Purpose & Scope Build a Python-based system that **analyzes a Git repository** (structure, code, dependencies), then **generates and maintains a high-quality README.md** using a **local LLM**. It initializes repos with no docs and **keeps docs up to date** on commits/PRs. Supports **multiple languages/project types** via analyzers. Non-goals (for the POC): multi-repo orchestration, full website docs, API reference extraction (beyond README summaries), cloud LLMs. --- ## 2) High-Level Architecture (at a glance) ``` \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 Git Events \u2502 Event Sources \u2502 CLI commands, Git hooks, Webhooks/CI (commit/PR) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Orchestr \u2502 (Async task graph) \u2514\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Repo Scanner\u2502 \u2502 Analyzers \u2502 \u2502 Doc Store \u2502 \u2502 + Indexer \u2502 \u2502 (Language, \u2502 \u2502 (Artifacts, \u2502 \u2502 (Git, FS) \u2502 \u2502 Build, Deps) \u2502 \u2502 Cache, \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 Versions) \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 Knowledge Graph \u2502 \u2502 \u2502 \u2502 & Embeddings \u2502<\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 Prompt Builder \u2502 (Templates + RAG) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 Local LLM Runner \u2502 (llama.cpp/Ollama) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25b6\u2502 Post-Processor \u2502 (lint, ToC, badges, links) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Git Publisher \u2502 (branch/PR/commit) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 ``` --- ##",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#1",
      "vector": {
        "rag": 0.053074489243427524,
        "local": 0.053074489243427524,
        "llm": 0.053074489243427524,
        "runner": 0.053074489243427524,
        "llama": 0.053074489243427524,
        "cpp": 0.053074489243427524,
        "ollama": 0.053074489243427524,
        "post": 0.053074489243427524,
        "processor": 0.053074489243427524,
        "lint": 0.053074489243427524,
        "toc": 0.053074489243427524,
        "badges": 0.053074489243427524,
        "links": 0.053074489243427524,
        "git": 0.10614897848685505,
        "publisher": 0.053074489243427524,
        "branch": 0.053074489243427524,
        "pr": 0.053074489243427524,
        "commit": 0.053074489243427524,
        "3": 0.2653724462171376,
        "components": 0.053074489243427524,
        "responsibilities": 0.053074489243427524,
        "1": 0.053074489243427524,
        "orchestrator": 0.053074489243427524,
        "coordinates": 0.053074489243427524,
        "end": 0.10614897848685505,
        "to": 0.2122979569737101,
        "pipelines": 0.053074489243427524,
        "init": 0.053074489243427524,
        "update": 0.10614897848685505,
        "regenerate": 0.10614897848685505,
        "computes": 0.053074489243427524,
        "change": 0.10614897848685505,
        "impact": 0.053074489243427524,
        "from": 0.10614897848685505,
        "diff": 0.053074489243427524,
        "decides": 0.053074489243427524,
        "whether": 0.053074489243427524,
        "full": 0.053074489243427524,
        "readme": 0.053074489243427524,
        "or": 0.10614897848685505,
        "patch": 0.053074489243427524,
        "sections": 0.053074489243427524,
        "schedules": 0.053074489243427524,
        "tasks": 0.053074489243427524,
        "and": 0.15922346773028256,
        "caches": 0.053074489243427524,
        "intermediate": 0.053074489243427524,
        "results": 0.053074489243427524,
        "reuses": 0.053074489243427524,
        "analyzer": 0.10614897848685505,
        "outputs": 0.053074489243427524,
        "docgen": 0.2122979569737101,
        "analyzers": 0.2653724462171376,
        "cache": 0.053074489243427524,
        "json": 0.2122979569737101,
        "invalidating": 0.053074489243427524,
        "entries": 0.053074489243427524,
        "when": 0.10614897848685505,
        "file": 0.053074489243427524,
        "hashes": 0.053074489243427524,
        "signatures": 0.053074489243427524,
        "emits": 0.053074489243427524,
        "structured": 0.053074489243427524,
        "logs": 0.053074489243427524,
        "info": 0.053074489243427524,
        "by": 0.053074489243427524,
        "default": 0.053074489243427524,
        "debug": 0.053074489243427524,
        "with": 0.053074489243427524,
        "verbose": 0.053074489243427524,
        "respects": 0.053074489243427524,
        "yml": 0.053074489243427524,
        "ci": 0.053074489243427524,
        "watched_globs": 0.053074489243427524,
        "skip": 0.053074489243427524,
        "unrelated": 0.053074489243427524,
        "diffs": 0.053074489243427524,
        "substitutes": 0.053074489243427524,
        "fail": 0.053074489243427524,
        "safe": 0.053074489243427524,
        "stubs": 0.053074489243427524,
        "generation": 0.053074489243427524,
        "fails": 0.053074489243427524,
        "supports": 0.053074489243427524,
        "dry": 0.10614897848685505,
        "run": 0.15922346773028256,
        "previews": 0.053074489243427524,
        "records": 0.053074489243427524,
        "scorecards": 0.053074489243427524,
        "for": 0.053074489243427524,
        "each": 0.053074489243427524,
        "under": 0.053074489243427524,
        "2": 0.053074489243427524,
        "repo": 0.15922346773028256,
        "scanner": 0.053074489243427524,
        "indexer": 0.053074489243427524,
        "walks": 0.053074489243427524,
        "builds": 0.053074489243427524,
        "normalized": 0.053074489243427524,
        "manifest": 0.053074489243427524,
        "files": 0.10614897848685505,
        "sizes": 0.053074489243427524,
        "language": 0.10614897848685505,
        "tags": 0.053074489243427524,
        "path": 0.053074489243427524,
        "roles": 0.053074489243427524,
        "src": 0.053074489243427524,
        "test": 0.10614897848685505,
        "docs": 0.053074489243427524,
        "examples": 0.053074489243427524,
        "build": 0.15922346773028256,
        "dependency": 0.10614897848685505,
        "manifests": 0.053074489243427524,
        "e": 0.053074489243427524,
        "g": 0.053074489243427524,
        "pom": 0.053074489243427524,
        "xml": 0.053074489243427524,
        "gradle": 0.10614897848685505,
        "package": 0.053074489243427524,
        "requirements": 0.053074489243427524,
        "txt": 0.053074489243427524,
        "pyproject": 0.053074489243427524,
        "toml": 0.10614897848685505,
        "go": 0.15922346773028256,
        "mod": 0.053074489243427524,
        "cargo": 0.10614897848685505,
        "gemfile": 0.053074489243427524,
        "composer": 0.053074489243427524,
        "entrypoints": 0.10614897848685505,
        "clis": 0.053074489243427524,
        "services": 0.053074489243427524,
        "coverage": 0.053074489243427524,
        "artifacts": 0.053074489243427524,
        "if": 0.053074489243427524,
        "available": 0.053074489243427524,
        "stores": 0.053074489243427524,
        "a": 0.053074489243427524,
        "per": 0.053074489243427524,
        "index": 0.053074489243427524,
        "speed": 0.053074489243427524,
        "future": 0.053074489243427524,
        "runs": 0.053074489243427524,
        "plugin": 0.053074489243427524,
        "based": 0.053074489243427524,
        "detect": 0.053074489243427524,
        "idioms": 0.053074489243427524,
        "frameworks": 0.053074489243427524,
        "spring": 0.053074489243427524,
        "boot": 0.053074489243427524,
        "fastapi": 0.053074489243427524,
        "node": 0.053074489243427524,
        "express": 0.053074489243427524,
        "react": 0.053074489243427524,
        "next": 0.053074489243427524,
        "js": 0.053074489243427524,
        "http": 0.053074489243427524,
        "rust": 0.053074489243427524,
        "bin": 0.053074489243427524,
        "lib": 0.053074489243427524,
        "maven": 0.053074489243427524,
        "setuptools": 0.053074489243427524,
        "poetry": 0.053074489243427524,
        "npm": 0.053074489243427524,
        "pnpm": 0.053074489243427524,
        "yarn": 0.053074489243427524,
        "extract": 0.053074489243427524,
        "top": 0.053074489243427524,
        "level": 0.053074489243427524
      },
      "text": "+ RAG) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 Local LLM Runner \u2502 (llama.cpp/Ollama) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25b6\u2502 Post-Processor \u2502 (lint, ToC, badges, links) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Git Publisher \u2502 (branch/PR/commit) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 ``` --- ## 3) Components & Responsibilities ### 3.1 Orchestrator * Coordinates end-to-end pipelines (init, update, regenerate). * Computes *change impact* from Git diff; decides whether to regenerate full README or patch sections. * Schedules tasks and caches intermediate results. * Reuses analyzer outputs from `.docgen/analyzers/cache.json`, invalidating entries when file hashes or analyzer signatures change. * Emits structured logs (info by default, debug with `--verbose`), respects `.docgen.yml` `ci.watched_globs` to skip unrelated diffs, and substitutes fail-safe stubs when generation fails. * Supports dry-run previews (`docgen update --dry-run`) and records scorecards for each run under `.docgen/`. ### 3.2 Repo Scanner & Indexer * Walks repo; builds normalized manifest: * Files, sizes, language tags, path roles (src/test/docs/examples). * Build files & dependency manifests (e.g., `pom.xml`, `build.gradle`, `package.json`, `requirements.txt`, `pyproject.toml`, `go.mod`, `Cargo.toml`, `Gemfile`, `composer.json`). * Entrypoints (CLIs, services), test coverage artifacts if available. * Stores a per-repo index (JSON) to speed future runs. ### 3.3 Analyzers (Plugin-based) * **Language analyzers** (detect idioms, entrypoints, frameworks: Spring Boot, FastAPI, Node/Express, React, Next.js, Go HTTP, Rust bin/lib). * **Build analyzers** (Maven/Gradle, setuptools/Poetry, npm/pnpm/yarn, Go, Cargo). * **Dependency analyzers** (extract top-level",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#2",
      "vector": {
        "index": 0.0536828127095019,
        "json": 0.0536828127095019,
        "to": 0.1073656254190038,
        "speed": 0.0536828127095019,
        "future": 0.0536828127095019,
        "runs": 0.0536828127095019,
        "3": 0.2147312508380076,
        "analyzers": 0.3220968762570114,
        "plugin": 0.0536828127095019,
        "based": 0.0536828127095019,
        "language": 0.0536828127095019,
        "detect": 0.0536828127095019,
        "idioms": 0.0536828127095019,
        "entrypoints": 0.0536828127095019,
        "frameworks": 0.0536828127095019,
        "spring": 0.1073656254190038,
        "boot": 0.1073656254190038,
        "fastapi": 0.1073656254190038,
        "node": 0.1073656254190038,
        "express": 0.0536828127095019,
        "react": 0.0536828127095019,
        "next": 0.0536828127095019,
        "js": 0.0536828127095019,
        "go": 0.1073656254190038,
        "http": 0.0536828127095019,
        "rust": 0.0536828127095019,
        "bin": 0.0536828127095019,
        "lib": 0.0536828127095019,
        "build": 0.1073656254190038,
        "maven": 0.0536828127095019,
        "gradle": 0.0536828127095019,
        "setuptools": 0.0536828127095019,
        "poetry": 0.0536828127095019,
        "npm": 0.0536828127095019,
        "pnpm": 0.0536828127095019,
        "yarn": 0.0536828127095019,
        "cargo": 0.0536828127095019,
        "dependency": 0.0536828127095019,
        "extract": 0.0536828127095019,
        "top": 0.1073656254190038,
        "level": 0.0536828127095019,
        "libs": 0.0536828127095019,
        "notable": 0.0536828127095019,
        "transitive": 0.0536828127095019,
        "categories": 0.0536828127095019,
        "entrypoint": 0.0536828127095019,
        "infer": 0.0536828127095019,
        "run": 0.0536828127095019,
        "commands": 0.0536828127095019,
        "for": 0.1073656254190038,
        "django": 0.0536828127095019,
        "scripts": 0.1073656254190038,
        "pattern": 0.0536828127095019,
        "monorepo": 0.0536828127095019,
        "layout": 0.0536828127095019,
        "ci": 0.0536828127095019,
        "cd": 0.0536828127095019,
        "containerization": 0.0536828127095019,
        "k8s": 0.0536828127095019,
        "heuristics": 0.0536828127095019,
        "structure": 0.0536828127095019,
        "analyzer": 0.1610484381285057,
        "module": 0.0536828127095019,
        "topology": 0.0536828127095019,
        "detected": 0.0536828127095019,
        "entities": 0.1073656254190038,
        "dtos": 0.0536828127095019,
        "api": 0.0536828127095019,
        "endpoint": 0.0536828127095019,
        "sequences": 0.0536828127095019,
        "service": 0.0536828127095019,
        "interactions": 0.0536828127095019,
        "tree": 0.0536828127095019,
        "sitter": 0.0536828127095019,
        "symbol": 0.0536828127095019,
        "python": 0.0536828127095019,
        "java": 0.0536828127095019,
        "typescript": 0.0536828127095019,
        "extracts": 0.0536828127095019,
        "functions": 0.0536828127095019,
        "classes": 0.0536828127095019,
        "when": 0.0536828127095019,
        "parsers": 0.0536828127095019,
        "available": 0.0536828127095019,
        "and": 0.2147312508380076,
        "degrades": 0.0536828127095019,
        "gracefully": 0.0536828127095019,
        "otherwise": 0.0536828127095019,
        "each": 0.0536828127095019,
        "returns": 0.0536828127095019,
        "signals": 0.1073656254190038,
        "key": 0.1073656254190038,
        "facts": 0.0536828127095019,
        "the": 0.1073656254190038,
        "knowledge": 0.1073656254190038,
        "graph": 0.1610484381285057,
        "4": 0.0536828127095019,
        "embeddings": 0.1073656254190038,
        "rag": 0.0536828127095019,
        "of": 0.1073656254190038,
        "repo": 0.1073656254190038,
        "modules": 0.0536828127095019,
        "packages": 0.0536828127095019,
        "services": 0.0536828127095019,
        "configs": 0.0536828127095019,
        "tests": 0.0536828127095019,
        "docs": 0.1073656254190038,
        "lightweight": 0.0536828127095019,
        "embedding": 0.0536828127095019,
        "store": 0.0536828127095019,
        "e": 0.0536828127095019,
        "g": 0.0536828127095019,
        "faiss": 0.0536828127095019,
        "in": 0.0536828127095019,
        "memory": 0.0536828127095019,
        "chunks": 0.0536828127095019,
        "code": 0.0536828127095019,
        "comments": 0.0536828127095019,
        "readme": 0.1073656254190038,
        "fragments": 0.0536828127095019,
        "changelog": 0.0536828127095019,
        "issues": 0.0536828127095019,
        "optional": 0.0536828127095019,
        "commit": 0.0536828127095019,
        "messages": 0.1073656254190038,
        "provides": 0.0536828127095019,
        "context": 0.1073656254190038,
        "retrieval": 0.0536828127095019,
        "prompt": 0.1073656254190038,
        "building": 0.0536828127095019,
        "k": 0.0536828127095019,
        "by": 0.0536828127095019,
        "section": 0.1610484381285057,
        "persists": 0.0536828127095019,
        "under": 0.0536828127095019,
        "docgen": 0.0536828127095019,
        "refreshing": 0.0536828127095019,
        "only": 0.0536828127095019,
        "files": 0.0536828127095019,
        "whose": 0.0536828127095019,
        "hashes": 0.0536828127095019,
        "changed": 0.0536828127095019,
        "5": 0.0536828127095019,
        "builder": 0.0536828127095019,
        "aware": 0.0536828127095019,
        "jinja2": 0.0536828127095019,
        "templates": 0.0536828127095019,
        "with": 0.1073656254190038,
        "guardrails": 0.0536828127095019,
        "project": 0.0536828127095019,
        "intro": 0.0536828127095019,
        "features": 0.0536828127095019,
        "architecture": 0.0536828127095019,
        "overview": 0.0536828127095019,
        "quick": 0.0536828127095019,
        "start": 0.0536828127095019,
        "configuration": 0.0536828127095019,
        "test": 0.0536828127095019,
        "deployment": 0.0536828127095019,
        "troubleshooting": 0.0536828127095019,
        "faq": 0.0536828127095019,
        "roadmap": 0.0536828127095019,
        "contribution": 0.0536828127095019,
        "license": 0.0536828127095019,
        "badges": 0.0536828127095019,
        "dynamically": 0.0536828127095019,
        "injects": 0.0536828127095019,
        "retrieved": 0.0536828127095019,
        "per": 0.0536828127095019,
        "produces": 0.0536828127095019,
        "llm": 0.0536828127095019,
        "ready": 0.0536828127095019,
        "structured": 0.0536828127095019,
        "prompts": 0.0536828127095019,
        "system": 0.0536828127095019,
        "user": 0.0536828127095019,
        "token": 0.0536828127095019,
        "budgets": 0.0536828127095019,
        "honours": 0.0536828127095019,
        "style": 0.0536828127095019,
        "presets": 0.0536828127095019,
        "concise": 0.0536828127095019,
        "trims": 0.0536828127095019,
        "list": 0.0536828127095019,
        "heavy": 0.0536828127095019,
        "sections": 0.0536828127095019
      },
      "text": "index (JSON) to speed future runs. ### 3.3 Analyzers (Plugin-based) * **Language analyzers** (detect idioms, entrypoints, frameworks: Spring Boot, FastAPI, Node/Express, React, Next.js, Go HTTP, Rust bin/lib). * **Build analyzers** (Maven/Gradle, setuptools/Poetry, npm/pnpm/yarn, Go, Cargo). * **Dependency analyzers** (extract top-level libs & notable transitive categories). * **Entrypoint analyzers** (infer run commands for FastAPI, Django, Spring Boot, Node scripts). * **Pattern analyzers** (monorepo layout, CI/CD, containerization/K8s heuristics). * **Structure analyzer** (module topology, detected entities/DTOs, API endpoint sequences, service interactions). * **Tree-sitter symbol analyzer** (Python/Java/TypeScript) extracts functions/classes when parsers available and degrades gracefully otherwise. * Each analyzer returns **Signals** (key facts) to the knowledge graph. ### 3.4 Knowledge Graph & Embeddings (RAG) * Graph of Repo entities: modules, packages, services, scripts, configs, tests, docs. * Lightweight embedding store (e.g., `faiss`/in-memory) of **chunks**: code comments, README fragments, `docs/`, `CHANGELOG`, issues (optional), commit messages. * Provides **context retrieval** for prompt building (top-k by section) and persists embeddings under `.docgen/`, refreshing only the files whose hashes changed. ### 3.5 Prompt Builder * **Section-aware** Jinja2 templates with **guardrails**: * Project intro, key features, architecture overview, quick start, configuration, build/test, deployment, troubleshooting, FAQ, roadmap, contribution, license, badges. * Dynamically injects repo signals and retrieved context per section. * Produces **LLM-ready structured prompts** (system + user messages) with token budgets and honours `readme.style` presets (`concise` trims list-heavy sections,",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#3",
      "vector": {
        "start": 0.09690031662230184,
        "configuration": 0.09690031662230184,
        "build": 0.04845015831115092,
        "test": 0.04845015831115092,
        "deployment": 0.04845015831115092,
        "troubleshooting": 0.04845015831115092,
        "faq": 0.04845015831115092,
        "roadmap": 0.04845015831115092,
        "contribution": 0.04845015831115092,
        "license": 0.04845015831115092,
        "badges": 0.09690031662230184,
        "dynamically": 0.04845015831115092,
        "injects": 0.09690031662230184,
        "repo": 0.04845015831115092,
        "signals": 0.04845015831115092,
        "and": 0.4360514248003583,
        "retrieved": 0.04845015831115092,
        "context": 0.09690031662230184,
        "per": 0.04845015831115092,
        "section": 0.14535047493345277,
        "produces": 0.04845015831115092,
        "llm": 0.09690031662230184,
        "ready": 0.04845015831115092,
        "structured": 0.09690031662230184,
        "prompts": 0.04845015831115092,
        "system": 0.04845015831115092,
        "user": 0.04845015831115092,
        "messages": 0.04845015831115092,
        "with": 0.14535047493345277,
        "token": 0.04845015831115092,
        "budgets": 0.04845015831115092,
        "honours": 0.04845015831115092,
        "readme": 0.14535047493345277,
        "style": 0.14535047493345277,
        "presets": 0.04845015831115092,
        "concise": 0.04845015831115092,
        "trims": 0.04845015831115092,
        "list": 0.04845015831115092,
        "heavy": 0.04845015831115092,
        "sections": 0.14535047493345277,
        "comprehensive": 0.04845015831115092,
        "keeps": 0.04845015831115092,
        "full": 0.04845015831115092,
        "detail": 0.04845015831115092,
        "detected": 0.09690031662230184,
        "entrypoints": 0.04845015831115092,
        "infrastructure": 0.04845015831115092,
        "patterns": 0.04845015831115092,
        "into": 0.04845015831115092,
        "quick": 0.04845015831115092,
        "guidance": 0.04845015831115092,
        "e": 0.04845015831115092,
        "g": 0.04845015831115092,
        "uvicorn": 0.04845015831115092,
        "docker": 0.14535047493345277,
        "compose": 0.04845015831115092,
        "up": 0.04845015831115092,
        "generates": 0.04845015831115092,
        "mermaid": 0.04845015831115092,
        "sequence": 0.04845015831115092,
        "diagrams": 0.04845015831115092,
        "highlighting": 0.04845015831115092,
        "request": 0.04845015831115092,
        "flow": 0.04845015831115092,
        "across": 0.04845015831115092,
        "services": 0.04845015831115092,
        "when": 0.09690031662230184,
        "api": 0.09690031662230184,
        "endpoints": 0.04845015831115092,
        "are": 0.04845015831115092,
        "3": 0.09690031662230184,
        "6": 0.04845015831115092,
        "local": 0.14535047493345277,
        "runner": 0.14535047493345277,
        "pluggable": 0.04845015831115092,
        "runtime": 0.04845015831115092,
        "that": 0.04845015831115092,
        "prefers": 0.04845015831115092,
        "the": 0.04845015831115092,
        "model": 0.14535047493345277,
        "http": 0.14535047493345277,
        "endpoint": 0.04845015831115092,
        "host": 0.04845015831115092,
        "localhost": 0.04845015831115092,
        "12434": 0.04845015831115092,
        "engines": 0.09690031662230184,
        "v1": 0.09690031662230184,
        "container": 0.04845015831115092,
        "internal": 0.14535047493345277,
        "environment": 0.04845015831115092,
        "overrides": 0.04845015831115092,
        "an": 0.04845015831115092,
        "ollama": 0.04845015831115092,
        "cli": 0.09690031662230184,
        "fallback": 0.04845015831115092,
        "defaults": 0.04845015831115092,
        "to": 0.14535047493345277,
        "ai": 0.04845015831115092,
        "smollm2": 0.04845015831115092,
        "360m": 0.04845015831115092,
        "q4_k_m": 0.04845015831115092,
        "but": 0.04845015831115092,
        "respects": 0.04845015831115092,
        "docgen": 0.09690031662230184,
        "yml": 0.04845015831115092,
        "openai": 0.04845015831115092,
        "compatible": 0.04845015831115092,
        "env": 0.04845015831115092,
        "vars": 0.04845015831115092,
        "for": 0.14535047493345277,
        "alternate": 0.04845015831115092,
        "weights": 0.04845015831115092,
        "keys": 0.04845015831115092,
        "supports": 0.04845015831115092,
        "function": 0.04845015831115092,
        "calling": 0.04845015831115092,
        "outputs": 0.04845015831115092,
        "available": 0.04845015831115092,
        "streaming": 0.04845015831115092,
        "decode": 0.04845015831115092,
        "stop": 0.04845015831115092,
        "tokens": 0.04845015831115092,
        "by": 0.09690031662230184,
        "generation": 0.04845015831115092,
        "stay": 0.09690031662230184,
        "within": 0.04845015831115092,
        "limits": 0.04845015831115092,
        "validates": 0.09690031662230184,
        "ensure": 0.04845015831115092,
        "runners": 0.04845015831115092,
        "loopback": 0.04845015831115092,
        "hosts": 0.04845015831115092,
        "only": 0.09690031662230184,
        "includes": 0.04845015831115092,
        "a": 0.09690031662230184,
        "llamacpprunner": 0.04845015831115092,
        "adapter": 0.04845015831115092,
        "llama": 0.04845015831115092,
        "cpp": 0.04845015831115092,
        "binaries": 0.04845015831115092,
        "enforcing": 0.04845015831115092,
        "filesystem": 0.04845015831115092,
        "backed": 0.04845015831115092,
        "paths": 0.04845015831115092,
        "execution": 0.04845015831115092,
        "7": 0.04845015831115092,
        "post": 0.04845015831115092,
        "processor": 0.04845015831115092,
        "lints": 0.04845015831115092,
        "markdown": 0.04845015831115092,
        "builds": 0.04845015831115092,
        "toc": 0.04845015831115092,
        "adds": 0.04845015831115092,
        "shields": 0.04845015831115092,
        "normalizes": 0.04845015831115092,
        "heading": 0.04845015831115092,
        "hierarchy": 0.04845015831115092,
        "enforces": 0.04845015831115092,
        "guide": 0.04845015831115092,
        "contract": 0.04845015831115092,
        "required": 0.04845015831115092,
        "links": 0.04845015831115092,
        "relative": 0.04845015831115092,
        "absolute": 0.04845015831115092,
        "code": 0.04845015831115092,
        "block": 0.04845015831115092,
        "languages": 0.04845015831115092,
        "line": 0.04845015831115092,
        "length": 0.04845015831115092,
        "computes": 0.04845015831115092,
        "diff": 0.04845015831115092,
        "aware": 0.04845015831115092,
        "updates": 0.04845015831115092,
        "modifies": 0.04845015831115092,
        "impacted": 0.04845015831115092,
        "changes": 0.04845015831115092,
        "persists": 0.04845015831115092,
        "scorecard": 0.09690031662230184,
        "json": 0.04845015831115092
      },
      "text": "start, configuration, build/test, deployment, troubleshooting, FAQ, roadmap, contribution, license, badges. * Dynamically injects repo signals and retrieved context per section. * Produces **LLM-ready structured prompts** (system + user messages) with token budgets and honours `readme.style` presets (`concise` trims list-heavy sections, `comprehensive` keeps full detail). * Injects detected entrypoints and infrastructure patterns into Quick Start guidance (e.g., `uvicorn ...`, `docker compose up`). * Generates Mermaid sequence diagrams highlighting request flow across services when API endpoints are detected. ### 3.6 Local LLM Runner * Pluggable runtime that prefers the Docker Model Runner HTTP endpoint (host `http://localhost:12434/engines/v1`, container `http://model-runner.docker.internal/engines/v1`) with environment overrides and an `ollama` CLI fallback. * Defaults to `ai/smollm2:360M-Q4_K_M` but respects `.docgen.yml` and OpenAI-compatible env vars for alternate weights and API keys. * Supports **function calling style** for structured outputs when available. * Streaming decode with stop tokens; **section-by-section** generation to stay within context limits. * Validates configuration to ensure runners stay local (loopback/`*.internal` hosts only). * Includes a `LlamaCppRunner` adapter for local `llama.cpp` binaries, enforcing filesystem-backed model paths and CLI execution. ### 3.7 Post-Processor * Lints Markdown, builds ToC, adds shields/badges, normalizes heading hierarchy. * Enforces internal style guide and **README contract** (required sections). * Validates links (relative/absolute), code block languages, and line length. * Computes **diff-aware updates**: only modifies sections impacted by changes. * Persists a README scorecard (`.docgen/scorecard.json`)",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#4",
      "vector": {
        "shields": 0.04339630366027462,
        "badges": 0.08679260732054923,
        "normalizes": 0.08679260732054923,
        "heading": 0.04339630366027462,
        "hierarchy": 0.04339630366027462,
        "enforces": 0.04339630366027462,
        "internal": 0.04339630366027462,
        "style": 0.04339630366027462,
        "guide": 0.04339630366027462,
        "and": 0.6075482512438447,
        "readme": 0.13018891098082386,
        "contract": 0.04339630366027462,
        "required": 0.04339630366027462,
        "sections": 0.17358521464109847,
        "validates": 0.04339630366027462,
        "links": 0.04339630366027462,
        "relative": 0.04339630366027462,
        "absolute": 0.04339630366027462,
        "code": 0.04339630366027462,
        "block": 0.04339630366027462,
        "languages": 0.04339630366027462,
        "line": 0.04339630366027462,
        "length": 0.04339630366027462,
        "computes": 0.04339630366027462,
        "diff": 0.04339630366027462,
        "aware": 0.04339630366027462,
        "updates": 0.04339630366027462,
        "only": 0.04339630366027462,
        "modifies": 0.04339630366027462,
        "impacted": 0.04339630366027462,
        "by": 0.04339630366027462,
        "changes": 0.08679260732054923,
        "persists": 0.04339630366027462,
        "a": 0.13018891098082386,
        "scorecard": 0.08679260732054923,
        "docgen": 0.2169815183013731,
        "json": 0.17358521464109847,
        "capturing": 0.08679260732054923,
        "coverage": 0.08679260732054923,
        "quick": 0.04339630366027462,
        "start": 0.04339630366027462,
        "health": 0.04339630366027462,
        "link": 0.08679260732054923,
        "results": 0.04339630366027462,
        "adds": 0.04339630366027462,
        "build": 0.04339630366027462,
        "license": 0.04339630366027462,
        "with": 0.13018891098082386,
        "safe": 0.08679260732054923,
        "defaults": 0.04339630366027462,
        "reports": 0.04339630366027462,
        "warnings": 0.04339630366027462,
        "during": 0.04339630366027462,
        "post": 0.04339630366027462,
        "processing": 0.04339630366027462,
        "3": 0.13018891098082386,
        "8": 0.04339630366027462,
        "validation": 0.17358521464109847,
        "layer": 0.04339630366027462,
        "runs": 0.08679260732054923,
        "after": 0.04339630366027462,
        "section": 0.08679260732054923,
        "rendering": 0.04339630366027462,
        "before": 0.04339630366027462,
        "linting": 0.04339630366027462,
        "publishing": 0.04339630366027462,
        "to": 0.04339630366027462,
        "ensure": 0.04339630366027462,
        "generated": 0.08679260732054923,
        "claims": 0.04339630366027462,
        "are": 0.04339630366027462,
        "grounded": 0.04339630366027462,
        "analyzer": 0.08679260732054923,
        "signals": 0.04339630366027462,
        "metadata": 0.04339630366027462,
        "retrieved": 0.04339630366027462,
        "context": 0.04339630366027462,
        "into": 0.04339630366027462,
        "an": 0.04339630366027462,
        "evidence": 0.13018891098082386,
        "index": 0.04339630366027462,
        "used": 0.04339630366027462,
        "for": 0.13018891098082386,
        "token": 0.04339630366027462,
        "overlap": 0.04339630366027462,
        "checks": 0.04339630366027462,
        "default": 0.04339630366027462,
        "nohallucinationvalidator": 0.04339630366027462,
        "rejects": 0.04339630366027462,
        "sentences": 0.04339630366027462,
        "lacking": 0.04339630366027462,
        "supporting": 0.04339630366027462,
        "replaces": 0.04339630366027462,
        "offending": 0.04339630366027462,
        "fail": 0.04339630366027462,
        "stubs": 0.04339630366027462,
        "raises": 0.04339630366027462,
        "actionable": 0.04339630366027462,
        "errors": 0.04339630366027462,
        "writes": 0.04339630366027462,
        "validator": 0.04339630366027462,
        "status": 0.04339630366027462,
        "issues": 0.04339630366027462,
        "summaries": 0.04339630366027462,
        "auditability": 0.04339630366027462,
        "respects": 0.04339630366027462,
        "yml": 0.04339630366027462,
        "no_hallucination": 0.04339630366027462,
        "toggle": 0.04339630366027462,
        "docgen_validation_no_hallucination": 0.04339630366027462,
        "environment": 0.04339630366027462,
        "override": 0.04339630366027462,
        "cli": 0.04339630366027462,
        "skip": 0.04339630366027462,
        "flag": 0.04339630366027462,
        "one": 0.04339630366027462,
        "off": 0.04339630366027462,
        "bypasses": 0.04339630366027462,
        "9": 0.04339630366027462,
        "doc": 0.04339630366027462,
        "store": 0.04339630366027462,
        "artifacts": 0.08679260732054923,
        "versions": 0.04339630366027462,
        "keeps": 0.04339630366027462,
        "drafts": 0.04339630366027462,
        "logs": 0.04339630366027462,
        "prompts": 0.04339630366027462,
        "inputs": 0.04339630366027462,
        "outputs": 0.04339630366027462,
        "diffs": 0.04339630366027462,
        "under": 0.04339630366027462,
        "per": 0.04339630366027462,
        "repo": 0.04339630366027462,
        "supports": 0.04339630366027462,
        "rollback": 0.04339630366027462,
        "regression": 0.04339630366027462,
        "testing": 0.04339630366027462,
        "via": 0.04339630366027462,
        "golden": 0.04339630366027462,
        "readmes": 0.04339630366027462,
        "stores": 0.04339630366027462,
        "embedding": 0.04339630366027462,
        "cache": 0.08679260732054923,
        "embeddings": 0.04339630366027462,
        "analyzers": 0.04339630366027462,
        "schema": 0.04339630366027462,
        "versioning": 0.04339630366027462,
        "so": 0.04339630366027462,
        "subsequent": 0.04339630366027462,
        "reuse": 0.04339630366027462,
        "work": 0.04339630366027462,
        "when": 0.04339630366027462,
        "file": 0.04339630366027462,
        "hashes": 0.04339630366027462,
        "remain": 0.04339630366027462,
        "unchanged": 0.04339630366027462,
        "10": 0.04339630366027462,
        "git": 0.04339630366027462,
        "publisher": 0.04339630366027462,
        "creates": 0.04339630366027462,
        "branch": 0.04339630366027462,
        "e": 0.04339630366027462,
        "g": 0.04339630366027462,
        "update": 0.04339630366027462,
        "yyyymmdd": 0.04339630366027462,
        "pr": 0.08679260732054923,
        "body": 0.04339630366027462,
        "explains": 0.04339630366027462,
        "detected": 0.04339630366027462,
        "what": 0.04339630366027462,
        "were": 0.04339630366027462,
        "updated": 0.04339630366027462,
        "can": 0.04339630366027462,
        "commit": 0.04339630366027462
      },
      "text": "shields/badges, normalizes heading hierarchy. * Enforces internal style guide and **README contract** (required sections). * Validates links (relative/absolute), code block languages, and line length. * Computes **diff-aware updates**: only modifies sections impacted by changes. * Persists a README scorecard (`.docgen/scorecard.json`) capturing coverage, quick start health, and link results. * Adds build/coverage/license badges with safe defaults and reports link warnings during post-processing. ### 3.8 Validation Layer * Runs after section rendering and before linting/publishing to ensure generated claims are grounded. * Normalizes analyzer signals, section metadata, and retrieved context into an **Evidence Index** used for token overlap checks. * Default `NoHallucinationValidator` rejects sentences lacking supporting evidence, replaces offending sections with fail-safe stubs, and raises actionable errors. * Writes `.docgen/validation.json` capturing validator status, issues, and evidence summaries for auditability. * Respects `.docgen.yml` `validation.no_hallucination` toggle, `DOCGEN_VALIDATION_NO_HALLUCINATION` environment override, and CLI `--skip-validation` flag for one-off bypasses. ### 3.9 Doc Store (Artifacts & Versions) * Keeps generated drafts, logs, prompts, inputs/outputs, and diffs under `.docgen/` per repo. * Supports rollback and regression testing via \u201cgolden\u201d READMEs. * Stores embedding cache (`embeddings.json`) and analyzer artifacts (`analyzers/cache.json`) with schema versioning so subsequent runs reuse work when file hashes remain unchanged. ### 3.10 Git Publisher * Creates a branch (e.g., `docgen/readme-update-YYYYMMDD`) and a PR. * PR body explains detected changes and what sections were updated. * Can commit",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#5",
      "vector": {
        "with": 0.0746913686973271,
        "schema": 0.03734568434866355,
        "versioning": 0.03734568434866355,
        "so": 0.03734568434866355,
        "subsequent": 0.03734568434866355,
        "runs": 0.03734568434866355,
        "reuse": 0.03734568434866355,
        "work": 0.03734568434866355,
        "when": 0.0746913686973271,
        "file": 0.03734568434866355,
        "hashes": 0.03734568434866355,
        "remain": 0.03734568434866355,
        "unchanged": 0.03734568434866355,
        "3": 0.0746913686973271,
        "10": 0.03734568434866355,
        "git": 0.03734568434866355,
        "publisher": 0.03734568434866355,
        "creates": 0.03734568434866355,
        "a": 0.0746913686973271,
        "branch": 0.03734568434866355,
        "e": 0.0746913686973271,
        "g": 0.0746913686973271,
        "docgen": 0.0746913686973271,
        "readme": 0.03734568434866355,
        "update": 0.0746913686973271,
        "yyyymmdd": 0.03734568434866355,
        "and": 0.18672842174331777,
        "pr": 0.0746913686973271,
        "body": 0.03734568434866355,
        "explains": 0.03734568434866355,
        "detected": 0.03734568434866355,
        "changes": 0.03734568434866355,
        "what": 0.03734568434866355,
        "sections": 0.03734568434866355,
        "were": 0.03734568434866355,
        "updated": 0.03734568434866355,
        "can": 0.03734568434866355,
        "commit": 0.03734568434866355,
        "directly": 0.03734568434866355,
        "configurable": 0.03734568434866355,
        "on": 0.03734568434866355,
        "init": 0.0746913686973271,
        "for": 0.1493827373946542,
        "empty": 0.03734568434866355,
        "repos": 0.03734568434866355,
        "applies": 0.03734568434866355,
        "labels": 0.03734568434866355,
        "docs": 0.0746913686973271,
        "auto": 0.03734568434866355,
        "updates": 0.03734568434866355,
        "existing": 0.03734568434866355,
        "prs": 0.03734568434866355,
        "configured": 0.03734568434866355,
        "11": 0.03734568434866355,
        "service": 0.1493827373946542,
        "mode": 0.03734568434866355,
        "fastapi": 0.0746913686973271,
        "app": 0.03734568434866355,
        "exposes": 0.03734568434866355,
        "post": 0.03734568434866355,
        "endpoints": 0.03734568434866355,
        "plus": 0.03734568434866355,
        "health": 0.03734568434866355,
        "readiness": 0.03734568434866355,
        "reuses": 0.03734568434866355,
        "the": 0.11203705304599065,
        "orchestrator": 0.03734568434866355,
        "dependency": 0.03734568434866355,
        "executes": 0.03734568434866355,
        "operations": 0.03734568434866355,
        "in": 0.03734568434866355,
        "thread": 0.03734568434866355,
        "pools": 0.03734568434866355,
        "to": 0.03734568434866355,
        "keep": 0.03734568434866355,
        "event": 0.03734568434866355,
        "loop": 0.03734568434866355,
        "responsive": 0.03734568434866355,
        "cli": 0.0746913686973271,
        "host": 0.03734568434866355,
        "0": 0.1493827373946542,
        "port": 0.03734568434866355,
        "8000": 0.03734568434866355,
        "boots": 0.03734568434866355,
        "authentication": 0.03734568434866355,
        "hooks": 0.03734568434866355,
        "ready": 0.03734568434866355,
        "future": 0.03734568434866355,
        "hardening": 0.03734568434866355,
        "error": 0.03734568434866355,
        "handlers": 0.03734568434866355,
        "surface": 0.03734568434866355,
        "actionable": 0.03734568434866355,
        "json": 0.03734568434866355,
        "detail": 0.0746913686973271,
        "field": 0.03734568434866355,
        "common": 0.03734568434866355,
        "runtime": 0.03734568434866355,
        "issues": 0.03734568434866355,
        "4": 0.03734568434866355,
        "data": 0.03734568434866355,
        "model": 0.03734568434866355,
        "python": 0.0746913686973271,
        "pydantic": 0.03734568434866355,
        "dataclasses": 0.0746913686973271,
        "from": 0.0746913686973271,
        "import": 0.0746913686973271,
        "dataclass": 0.2614197904406449,
        "typing": 0.03734568434866355,
        "list": 0.1493827373946542,
        "dict": 0.1493827373946542,
        "optional": 0.0746913686973271,
        "class": 0.2240741060919813,
        "filemeta": 0.0746913686973271,
        "path": 0.03734568434866355,
        "str": 0.6348766339272804,
        "size": 0.03734568434866355,
        "int": 0.03734568434866355,
        "language": 0.03734568434866355,
        "role": 0.03734568434866355,
        "src": 0.03734568434866355,
        "test": 0.0746913686973271,
        "config": 0.03734568434866355,
        "build": 0.03734568434866355,
        "script": 0.03734568434866355,
        "infra": 0.03734568434866355,
        "other": 0.03734568434866355,
        "hash": 0.03734568434866355,
        "repomanifest": 0.0746913686973271,
        "root": 0.03734568434866355,
        "files": 0.03734568434866355,
        "detectors": 0.03734568434866355,
        "build_system": 0.03734568434866355,
        "maven": 0.03734568434866355,
        "framework": 0.0746913686973271,
        "spring": 0.03734568434866355,
        "boot": 0.03734568434866355,
        "dependency_files": 0.03734568434866355,
        "pom": 0.03734568434866355,
        "xml": 0.03734568434866355,
        "requirements": 0.03734568434866355,
        "txt": 0.03734568434866355,
        "signal": 0.0746913686973271,
        "kind": 0.03734568434866355,
        "db": 0.03734568434866355,
        "queue": 0.03734568434866355,
        "dep": 0.03734568434866355,
        "entrypoint": 0.03734568434866355,
        "name": 0.03734568434866355,
        "analysisresult": 0.03734568434866355,
        "manifest": 0.03734568434866355,
        "signals": 0.03734568434866355,
        "embedding_index_path": 0.03734568434866355,
        "sectionspec": 0.03734568434866355,
        "key": 0.03734568434866355,
        "intro": 0.03734568434866355,
        "features": 0.03734568434866355,
        "arch": 0.03734568434866355,
        "quickstart": 0.03734568434866355,
        "required": 0.03734568434866355,
        "bool": 0.03734568434866355,
        "sources": 0.03734568434866355,
        "preferred": 0.03734568434866355,
        "retrieval": 0.03734568434866355,
        "tags": 0.03734568434866355,
        "template_name": 0.03734568434866355,
        "readmedraft": 0.03734568434866355
      },
      "text": "with schema versioning so subsequent runs reuse work when file hashes remain unchanged. ### 3.10 Git Publisher * Creates a branch (e.g., `docgen/readme-update-YYYYMMDD`) and a PR. * PR body explains detected changes and what sections were updated. * Can commit directly (configurable) on init for empty repos. * Applies labels (e.g., `docs:auto`) and updates existing PRs when configured. ### 3.11 Service Mode (FastAPI) * FastAPI app exposes `/init` and `/update` POST endpoints plus `/health` for readiness. * Reuses the orchestrator dependency and executes operations in thread pools to keep the event loop responsive. * CLI `docgen service --host 0.0.0.0 --port 8000` boots the service with authentication hooks ready for future hardening. * Error handlers surface actionable JSON (`detail` field) for common runtime issues. --- ## 4) Data Model (Python `pydantic`/`dataclasses`) ```python from dataclasses import dataclass from typing import List, Dict, Optional @dataclass class FileMeta: path: str size: int language: Optional[str] role: str # src|test|docs|config|build|script|infra|other hash: str @dataclass class RepoManifest: root: str files: List[FileMeta] detectors: Dict[str, str] # {\"build_system\": \"maven\", \"framework\":\"spring-boot\", ...} dependency_files: Dict[str, str] # {\"pom.xml\": \"...\", \"requirements.txt\": \"...\"} @dataclass class Signal: kind: str # \"framework\",\"service\",\"cli\",\"db\",\"queue\",\"dep\",\"entrypoint\",\"test\" name: str detail: Dict[str, str] @dataclass class AnalysisResult: manifest: RepoManifest signals: List[Signal] embedding_index_path: str @dataclass class SectionSpec: key: str # \"intro\",\"features\",\"arch\",\"quickstart\",... required: bool sources: List[str] # preferred retrieval tags template_name: str @dataclass class ReadmeDraft:",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#6",
      "vector": {
        "class": 0.22011272658140596,
        "signal": 0.08804509063256238,
        "kind": 0.04402254531628119,
        "str": 0.6603381797442178,
        "framework": 0.04402254531628119,
        "service": 0.04402254531628119,
        "cli": 0.08804509063256238,
        "db": 0.04402254531628119,
        "queue": 0.04402254531628119,
        "dep": 0.04402254531628119,
        "entrypoint": 0.04402254531628119,
        "test": 0.04402254531628119,
        "name": 0.04402254531628119,
        "detail": 0.04402254531628119,
        "dict": 0.13206763594884358,
        "dataclass": 0.17609018126512477,
        "analysisresult": 0.04402254531628119,
        "manifest": 0.04402254531628119,
        "repomanifest": 0.04402254531628119,
        "signals": 0.04402254531628119,
        "list": 0.13206763594884358,
        "embedding_index_path": 0.04402254531628119,
        "sectionspec": 0.04402254531628119,
        "key": 0.04402254531628119,
        "intro": 0.08804509063256238,
        "features": 0.08804509063256238,
        "arch": 0.04402254531628119,
        "quickstart": 0.08804509063256238,
        "required": 0.04402254531628119,
        "bool": 0.04402254531628119,
        "sources": 0.04402254531628119,
        "preferred": 0.04402254531628119,
        "retrieval": 0.04402254531628119,
        "tags": 0.04402254531628119,
        "template_name": 0.04402254531628119,
        "readmedraft": 0.04402254531628119,
        "sections": 0.04402254531628119,
        "full_markdown": 0.04402254531628119,
        "updateplan": 0.04402254531628119,
        "strategy": 0.04402254531628119,
        "full": 0.04402254531628119,
        "patch": 0.04402254531628119,
        "changed_sections": 0.04402254531628119,
        "reasons": 0.04402254531628119,
        "section": 0.04402254531628119,
        "why": 0.04402254531628119,
        "5": 0.04402254531628119,
        "configuration": 0.08804509063256238,
        "docgen": 0.17609018126512477,
        "yml": 0.04402254531628119,
        "at": 0.04402254531628119,
        "repo": 0.04402254531628119,
        "root": 0.04402254531628119,
        "yaml": 0.04402254531628119,
        "llm": 0.04402254531628119,
        "runner": 0.04402254531628119,
        "ollama": 0.08804509063256238,
        "or": 0.13206763594884358,
        "llama": 0.04402254531628119,
        "cpp": 0.04402254531628119,
        "executable": 0.04402254531628119,
        "optional": 0.08804509063256238,
        "override": 0.04402254531628119,
        "for": 0.04402254531628119,
        "binaries": 0.04402254531628119,
        "model": 0.04402254531628119,
        "llama3": 0.04402254531628119,
        "8b": 0.04402254531628119,
        "instruct": 0.04402254531628119,
        "example": 0.04402254531628119,
        "local": 0.04402254531628119,
        "only": 0.08804509063256238,
        "max_tokens": 0.04402254531628119,
        "2048": 0.04402254531628119,
        "temperature": 0.04402254531628119,
        "0": 0.08804509063256238,
        "2": 0.04402254531628119,
        "readme": 0.13206763594884358,
        "style": 0.04402254531628119,
        "concise": 0.04402254531628119,
        "comprehensive": 0.04402254531628119,
        "template_pack": 0.04402254531628119,
        "enterprise": 0.04402254531628119,
        "bundle": 0.04402254531628119,
        "shipped": 0.04402254531628119,
        "with": 0.04402254531628119,
        "required_sections": 0.04402254531628119,
        "architecture": 0.04402254531628119,
        "build_and_test": 0.04402254531628119,
        "deployment": 0.04402254531628119,
        "troubleshooting": 0.04402254531628119,
        "faq": 0.04402254531628119,
        "license": 0.04402254531628119,
        "validation": 0.04402254531628119,
        "no_hallucination": 0.04402254531628119,
        "true": 0.08804509063256238,
        "set": 0.04402254531628119,
        "to": 0.08804509063256238,
        "false": 0.04402254531628119,
        "use": 0.04402254531628119,
        "docgen_validation_no_hallucination": 0.04402254531628119,
        "disable": 0.04402254531628119,
        "publish": 0.04402254531628119,
        "mode": 0.04402254531628119,
        "pr": 0.13206763594884358,
        "commit": 0.04402254531628119,
        "dry": 0.04402254531628119,
        "run": 0.04402254531628119,
        "branch_prefix": 0.04402254531628119,
        "labels": 0.04402254531628119,
        "docs": 0.04402254531628119,
        "auto": 0.04402254531628119,
        "update_existing": 0.04402254531628119,
        "refresh": 0.04402254531628119,
        "an": 0.04402254531628119,
        "existing": 0.04402254531628119,
        "instead": 0.04402254531628119,
        "of": 0.04402254531628119,
        "opening": 0.04402254531628119,
        "a": 0.04402254531628119,
        "new": 0.04402254531628119,
        "one": 0.04402254531628119,
        "analyzers": 0.04402254531628119,
        "enabled": 0.04402254531628119,
        "language": 0.04402254531628119,
        "build": 0.08804509063256238,
        "dependencies": 0.04402254531628119,
        "patterns": 0.04402254531628119,
        "exclude_paths": 0.04402254531628119,
        "git": 0.04402254531628119,
        "node_modules": 0.04402254531628119,
        "dist": 0.04402254531628119,
        "ci": 0.04402254531628119,
        "update": 0.04402254531628119,
        "if": 0.08804509063256238,
        "these": 0.04402254531628119,
        "paths": 0.04402254531628119,
        "change": 0.04402254531628119,
        "watched_globs": 0.04402254531628119,
        "src": 0.04402254531628119,
        "app": 0.04402254531628119,
        "cmd": 0.04402254531628119,
        "pom": 0.04402254531628119,
        "xml": 0.04402254531628119,
        "gradle": 0.04402254531628119,
        "package": 0.04402254531628119,
        "json": 0.04402254531628119,
        "requirements": 0.04402254531628119,
        "txt": 0.04402254531628119,
        "pyproject": 0.04402254531628119,
        "toml": 0.04402254531628119,
        "dockerfile": 0.04402254531628119,
        "no": 0.04402254531628119,
        "templates_dir": 0.04402254531628119,
        "is": 0.04402254531628119,
        "provided": 0.04402254531628119
      },
      "text": "class Signal: kind: str # \"framework\",\"service\",\"cli\",\"db\",\"queue\",\"dep\",\"entrypoint\",\"test\" name: str detail: Dict[str, str] @dataclass class AnalysisResult: manifest: RepoManifest signals: List[Signal] embedding_index_path: str @dataclass class SectionSpec: key: str # \"intro\",\"features\",\"arch\",\"quickstart\",... required: bool sources: List[str] # preferred retrieval tags template_name: str @dataclass class ReadmeDraft: sections: Dict[str, str] full_markdown: str @dataclass class UpdatePlan: strategy: str # \"full\"|\"patch\" changed_sections: List[str] reasons: Dict[str, str] # section->why ``` --- ## 5) Configuration (`.docgen.yml` at repo root) ```yaml llm: runner: \"ollama\" # or \"llama.cpp\" executable: \"ollama\" # optional override for CLI binaries model: \"llama3:8b-instruct\" # example; local only max_tokens: 2048 temperature: 0.2 readme: style: \"concise\" # or \"comprehensive\" template_pack: \"enterprise\" # optional bundle shipped with docgen required_sections: - intro - features - architecture - quickstart - configuration - build_and_test - deployment - troubleshooting - faq - license validation: no_hallucination: true # set to false or use DOCGEN_VALIDATION_NO_HALLUCINATION=0 to disable publish: mode: \"pr\" # \"commit\" | \"pr\" | \"dry-run\" branch_prefix: \"docgen/\" labels: - \"docs:auto\" update_existing: true # refresh an existing PR instead of opening a new one analyzers: enabled: - language - build - dependencies - patterns exclude_paths: - \".git/\" - \"node_modules/\" - \"dist/\" ci: # Only update README if these paths change watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" - \"requirements.txt\" - \"pyproject.toml\" - \"Dockerfile\" ``` > If no `readme.templates_dir` is provided, docgen",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#7",
      "vector": {
        "node_modules": 0.05006261743217589,
        "dist": 0.05006261743217589,
        "ci": 0.15018785229652767,
        "only": 0.10012523486435178,
        "update": 0.15018785229652767,
        "readme": 0.25031308716087947,
        "if": 0.15018785229652767,
        "these": 0.05006261743217589,
        "paths": 0.05006261743217589,
        "change": 0.05006261743217589,
        "watched_globs": 0.10012523486435178,
        "src": 0.10012523486435178,
        "app": 0.05006261743217589,
        "cmd": 0.05006261743217589,
        "pom": 0.10012523486435178,
        "xml": 0.10012523486435178,
        "build": 0.25031308716087947,
        "gradle": 0.10012523486435178,
        "package": 0.05006261743217589,
        "json": 0.05006261743217589,
        "requirements": 0.05006261743217589,
        "txt": 0.05006261743217589,
        "pyproject": 0.05006261743217589,
        "toml": 0.05006261743217589,
        "dockerfile": 0.10012523486435178,
        "no": 0.10012523486435178,
        "templates_dir": 0.05006261743217589,
        "is": 0.05006261743217589,
        "provided": 0.05006261743217589,
        "docgen": 0.25031308716087947,
        "automatically": 0.05006261743217589,
        "picks": 0.05006261743217589,
        "up": 0.05006261743217589,
        "docs": 0.05006261743217589,
        "templates": 0.10012523486435178,
        "bundles": 0.05006261743217589,
        "in": 0.10012523486435178,
        "the": 0.05006261743217589,
        "repository": 0.05006261743217589,
        "root": 0.05006261743217589,
        "and": 0.10012523486435178,
        "supports": 0.05006261743217589,
        "built": 0.05006261743217589,
        "template": 0.05006261743217589,
        "packs": 0.05006261743217589,
        "via": 0.10012523486435178,
        "template_pack": 0.05006261743217589,
        "6": 0.25031308716087947,
        "workflows": 0.05006261743217589,
        "1": 0.15018785229652767,
        "initialization": 0.05006261743217589,
        "repo": 0.05006261743217589,
        "without": 0.10012523486435178,
        "scan": 0.05006261743217589,
        "analyze": 0.05006261743217589,
        "manifest": 0.05006261743217589,
        "signals": 0.05006261743217589,
        "embeddings": 0.05006261743217589,
        "2": 0.15018785229652767,
        "prompt": 0.05006261743217589,
        "with": 0.10012523486435178,
        "default": 0.05006261743217589,
        "include": 0.05006261743217589,
        "getting": 0.05006261743217589,
        "started": 0.05006261743217589,
        "suggestions": 0.05006261743217589,
        "3": 0.15018785229652767,
        "generate": 0.10012523486435178,
        "sections": 0.20025046972870356,
        "sequentially": 0.05006261743217589,
        "streaming": 0.05006261743217589,
        "4": 0.10012523486435178,
        "post": 0.10012523486435178,
        "process": 0.10012523486435178,
        "toc": 0.05006261743217589,
        "badges": 0.05006261743217589,
        "status": 0.05006261743217589,
        "placeholder": 0.05006261743217589,
        "lint": 0.05006261743217589,
        "5": 0.10012523486435178,
        "publish": 0.05006261743217589,
        "direct": 0.05006261743217589,
        "commit": 0.10012523486435178,
        "md": 0.05006261743217589,
        "artifacts": 0.05006261743217589,
        "on": 0.05006261743217589,
        "pr": 0.10012523486435178,
        "detect": 0.05006261743217589,
        "changes": 0.05006261743217589,
        "git": 0.05006261743217589,
        "diff": 0.05006261743217589,
        "map": 0.05006261743217589,
        "files": 0.05006261743217589,
        "to": 0.15018785229652767,
        "using": 0.05006261743217589,
        "a": 0.05006261743217589,
        "rules": 0.05006261743217589,
        "matrix": 0.05006261743217589,
        "test": 0.05006261743217589,
        "quick": 0.05006261743217589,
        "start": 0.05006261743217589,
        "k8s": 0.05006261743217589,
        "deployment": 0.05006261743217589,
        "entrypoints": 0.05006261743217589,
        "architecture": 0.05006261743217589,
        "features": 0.05006261743217589,
        "decide": 0.05006261743217589,
        "updateplan": 0.05006261743217589,
        "patch": 0.05006261743217589,
        "impacted": 0.05006261743217589,
        "regenerate": 0.15018785229652767,
        "those": 0.05006261743217589,
        "skip": 0.05006261743217589,
        "changed": 0.05006261743217589,
        "file": 0.05006261743217589,
        "matches": 0.05006261743217589,
        "yml": 0.05006261743217589,
        "allows": 0.05006261743217589,
        "avoid": 0.05006261743217589,
        "unnecessary": 0.05006261743217589,
        "runs": 0.05006261743217589,
        "rag": 0.05006261743217589,
        "retrieval": 0.05006261743217589,
        "fetch": 0.05006261743217589,
        "top": 0.05006261743217589,
        "k": 0.05006261743217589,
        "chunks": 0.05006261743217589,
        "relevant": 0.05006261743217589,
        "each": 0.05006261743217589,
        "section": 0.10012523486435178,
        "open": 0.05006261743217589,
        "summary": 0.05006261743217589,
        "of": 0.05006261743217589,
        "deltas": 0.05006261743217589,
        "dry": 0.10012523486435178,
        "run": 0.10012523486435178,
        "support": 0.05006261743217589,
        "computes": 0.05006261743217589,
        "diffs": 0.05006261743217589,
        "scorecards": 0.05006261743217589,
        "writing": 0.05006261743217589,
        "or": 0.10012523486435178,
        "publishing": 0.05006261743217589,
        "manual": 0.05006261743217589,
        "full": 0.05006261743217589,
        "intro": 0.05006261743217589,
        "arch": 0.05006261743217589,
        "7": 0.05006261743217589,
        "contract": 0.05006261743217589
      },
      "text": "- \"node_modules/\" - \"dist/\" ci: # Only update README if these paths change watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" - \"requirements.txt\" - \"pyproject.toml\" - \"Dockerfile\" ``` > If no `readme.templates_dir` is provided, docgen automatically picks up `docs/templates/` bundles in the repository root and supports built-in template packs via `readme.template_pack`. --- ## 6) Workflows ### 6.1 Initialization (Repo without README) 1. **Scan & Analyze** \u2192 Manifest + Signals + Embeddings. 2. **Prompt Build** with default templates, include \u201cgetting started\u201d suggestions. 3. **Generate Sections** sequentially (streaming). 4. **Post-process** \u2192 ToC, badges (build status placeholder), lint. 5. **Publish**: direct commit `README.md` + `.docgen/` artifacts. ### 6.2 Update on Commit/PR 1. **Detect changes** via Git diff; map files to sections using a rules matrix: * `pom.xml`/`build.gradle` \u2192 *Build & Test*, *Quick Start*. * `Dockerfile`/`k8s` \u2192 *Deployment*. * `src/**` entrypoints \u2192 *Architecture*, *Features*. 2. **Decide UpdatePlan**: patch impacted sections; regenerate only those. 3. **Skip** if no changed file matches `.docgen.yml` `ci.watched_globs` (allows CI to avoid unnecessary runs). 4. **RAG retrieval**: fetch top-k chunks relevant to each section. 5. **Generate** \u2192 **Post-process** \u2192 **Open PR** with summary of deltas. 6. Dry-run support: `docgen update --dry-run` computes diffs and scorecards without writing or publishing. ### 6.3 Regenerate (Manual) * `docgen regenerate --full` or `--sections intro,arch`. --- ## 7) Section Contract",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#8",
      "vector": {
        "generate": 0.05923488777590923,
        "post": 0.11846977555181847,
        "process": 0.05923488777590923,
        "open": 0.05923488777590923,
        "pr": 0.05923488777590923,
        "with": 0.05923488777590923,
        "summary": 0.05923488777590923,
        "of": 0.05923488777590923,
        "deltas": 0.05923488777590923,
        "6": 0.11846977555181847,
        "dry": 0.11846977555181847,
        "run": 0.11846977555181847,
        "support": 0.11846977555181847,
        "docgen": 0.11846977555181847,
        "update": 0.05923488777590923,
        "computes": 0.05923488777590923,
        "diffs": 0.05923488777590923,
        "and": 0.11846977555181847,
        "scorecards": 0.05923488777590923,
        "without": 0.05923488777590923,
        "writing": 0.05923488777590923,
        "or": 0.1777046633277277,
        "publishing": 0.05923488777590923,
        "3": 0.05923488777590923,
        "regenerate": 0.11846977555181847,
        "manual": 0.05923488777590923,
        "full": 0.05923488777590923,
        "sections": 0.05923488777590923,
        "intro": 0.11846977555181847,
        "arch": 0.05923488777590923,
        "7": 0.05923488777590923,
        "section": 0.23693955110363693,
        "contract": 0.05923488777590923,
        "readme": 0.05923488777590923,
        "what": 0.05923488777590923,
        "why": 0.05923488777590923,
        "who": 0.05923488777590923,
        "it": 0.05923488777590923,
        "s": 0.05923488777590923,
        "for": 0.05923488777590923,
        "key": 0.05923488777590923,
        "features": 0.05923488777590923,
        "bullets": 0.05923488777590923,
        "grounded": 0.05923488777590923,
        "in": 0.05923488777590923,
        "real": 0.05923488777590923,
        "repo": 0.11846977555181847,
        "signals": 0.11846977555181847,
        "architecture": 0.05923488777590923,
        "overview": 0.05923488777590923,
        "diagram": 0.05923488777590923,
        "ascii": 0.05923488777590923,
        "components": 0.05923488777590923,
        "quick": 0.05923488777590923,
        "start": 0.05923488777590923,
        "minimal": 0.05923488777590923,
        "commands": 0.23693955110363693,
        "per": 0.11846977555181847,
        "build": 0.11846977555181847,
        "system": 0.11846977555181847,
        "configuration": 0.05923488777590923,
        "env": 0.05923488777590923,
        "vars": 0.05923488777590923,
        "files": 0.05923488777590923,
        "examples": 0.05923488777590923,
        "test": 0.05923488777590923,
        "coverage": 0.05923488777590923,
        "hint": 0.05923488777590923,
        "deployment": 0.05923488777590923,
        "container": 0.05923488777590923,
        "k8s": 0.05923488777590923,
        "instructions": 0.05923488777590923,
        "if": 0.1777046633277277,
        "detected": 0.1777046633277277,
        "troubleshooting": 0.05923488777590923,
        "common": 0.05923488777590923,
        "failures": 0.05923488777590923,
        "faq": 0.05923488777590923,
        "5": 0.05923488777590923,
        "10": 0.05923488777590923,
        "concise": 0.05923488777590923,
        "q": 0.05923488777590923,
        "a": 0.11846977555181847,
        "contributing": 0.11846977555181847,
        "md": 0.05923488777590923,
        "absent": 0.05923488777590923,
        "license": 0.05923488777590923,
        "templated": 0.05923488777590923,
        "each": 0.05923488777590923,
        "must": 0.05923488777590923,
        "be": 0.11846977555181847,
        "independently": 0.05923488777590923,
        "regenerable": 0.05923488777590923,
        "self": 0.05923488777590923,
        "contained": 0.05923488777590923,
        "8": 0.05923488777590923,
        "prompting": 0.05923488777590923,
        "strategy": 0.05923488777590923,
        "local": 0.05923488777590923,
        "llm": 0.05923488777590923,
        "message": 0.11846977555181847,
        "fixed": 0.05923488777590923,
        "guardrails": 0.05923488777590923,
        "you": 0.05923488777590923,
        "are": 0.05923488777590923,
        "senior": 0.05923488777590923,
        "dev": 0.05923488777590923,
        "doc": 0.05923488777590923,
        "writer": 0.05923488777590923,
        "precise": 0.05923488777590923,
        "cite": 0.05923488777590923,
        "facts": 0.05923488777590923,
        "only": 0.05923488777590923,
        "no": 0.05923488777590923,
        "speculation": 0.05923488777590923,
        "never": 0.05923488777590923,
        "invent": 0.05923488777590923,
        "prefer": 0.05923488777590923,
        "by": 0.05923488777590923,
        "analyzers": 0.05923488777590923,
        "user": 0.05923488777590923,
        "objective": 0.05923488777590923,
        "constraints": 0.05923488777590923,
        "tone": 0.05923488777590923,
        "length": 0.05923488777590923,
        "inject": 0.05923488777590923,
        "top": 0.05923488777590923,
        "k": 0.05923488777590923,
        "chunks": 0.05923488777590923,
        "rag": 0.05923488777590923,
        "provide": 0.05923488777590923,
        "style": 0.05923488777590923,
        "tokens": 0.05923488777590923,
        "headings": 0.05923488777590923,
        "code": 0.05923488777590923,
        "blocks": 0.05923488777590923,
        "tables": 0.05923488777590923,
        "filters": 0.05923488777590923,
        "refuse": 0.05923488777590923,
        "insufficient": 0.05923488777590923,
        "evidence": 0.05923488777590923,
        "fall": 0.05923488777590923,
        "back": 0.05923488777590923,
        "to": 0.05923488777590923,
        "template": 0.05923488777590923,
        "stubs": 0.05923488777590923,
        "9": 0.05923488777590923,
        "language": 0.05923488777590923,
        "project": 0.05923488777590923,
        "poc": 0.11846977555181847,
        "targets": 0.05923488777590923,
        "tier": 0.11846977555181847,
        "1": 0.05923488777590923,
        "python": 0.05923488777590923,
        "poetry": 0.05923488777590923,
        "setuptools": 0.05923488777590923,
        "java": 0.05923488777590923,
        "maven": 0.05923488777590923,
        "gradle": 0.05923488777590923,
        "spring": 0.05923488777590923,
        "boot": 0.05923488777590923,
        "node": 0.05923488777590923,
        "js": 0.05923488777590923,
        "npm": 0.05923488777590923,
        "pnpm": 0.05923488777590923,
        "express": 0.05923488777590923,
        "next": 0.05923488777590923,
        "2": 0.05923488777590923,
        "soon": 0.05923488777590923,
        "go": 0.05923488777590923,
        "modules": 0.05923488777590923
      },
      "text": "**Generate** \u2192 **Post-process** \u2192 **Open PR** with summary of deltas. 6. Dry-run support: `docgen update --dry-run` computes diffs and scorecards without writing or publishing. ### 6.3 Regenerate (Manual) * `docgen regenerate --full` or `--sections intro,arch`. --- ## 7) Section Contract (README) * **Intro**: what, why, who it\u2019s for * **Key Features**: bullets grounded in real repo signals * **Architecture**: overview diagram (ASCII) + components * **Quick Start**: minimal commands (per build system) * **Configuration**: env vars, files, examples * **Build & Test**: commands, coverage hint * **Deployment**: container/K8s instructions if detected * **Troubleshooting**: common failures * **FAQ**: 5\u201310 concise Q\\&A * **Contributing** (if `CONTRIBUTING.md` absent) * **License** (detected or templated) > Each section must be independently regenerable and self-contained. --- ## 8) Prompting Strategy (Local LLM) * **System message (fixed guardrails)**: * \u201cYou are a senior dev doc writer. Be precise. Cite repo facts only. No speculation.\u201d * \u201cNever invent commands. Prefer commands detected by analyzers.\u201d * **User message per section**: * Section objective + constraints (tone, length). * Inject **Signals** + **Top-k chunks** (RAG). * Provide **style tokens** (headings, code blocks, tables). * **Post-filters**: refuse if insufficient evidence; fall back to template stubs. --- ## 9) Language & Project Support (POC targets) * **Tier-1 (POC)**: Python (Poetry/Setuptools), Java (Maven/Gradle, Spring Boot), Node.js (npm/pnpm, Express/Next). * **Tier-2 (soon)**: Go (modules),",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#9",
      "vector": {
        "code": 0.0636929755298482,
        "blocks": 0.0318464877649241,
        "tables": 0.0318464877649241,
        "post": 0.0636929755298482,
        "filters": 0.0318464877649241,
        "refuse": 0.0318464877649241,
        "if": 0.0318464877649241,
        "insufficient": 0.0318464877649241,
        "evidence": 0.0318464877649241,
        "fall": 0.0318464877649241,
        "back": 0.0318464877649241,
        "to": 0.0318464877649241,
        "template": 0.0318464877649241,
        "stubs": 0.0636929755298482,
        "9": 0.0318464877649241,
        "language": 0.0636929755298482,
        "project": 0.0318464877649241,
        "support": 0.0318464877649241,
        "poc": 0.0636929755298482,
        "targets": 0.0318464877649241,
        "tier": 0.0636929755298482,
        "1": 0.0318464877649241,
        "python": 0.0955394632947723,
        "poetry": 0.0318464877649241,
        "setuptools": 0.0318464877649241,
        "java": 0.0318464877649241,
        "maven": 0.0318464877649241,
        "gradle": 0.0318464877649241,
        "spring": 0.0636929755298482,
        "boot": 0.0318464877649241,
        "node": 0.0318464877649241,
        "js": 0.0318464877649241,
        "npm": 0.0318464877649241,
        "pnpm": 0.0318464877649241,
        "express": 0.0318464877649241,
        "next": 0.0318464877649241,
        "2": 0.0318464877649241,
        "soon": 0.0318464877649241,
        "go": 0.0318464877649241,
        "modules": 0.0318464877649241,
        "rust": 0.0318464877649241,
        "cargo": 0.0318464877649241,
        "ruby": 0.0318464877649241,
        "bundler": 0.0318464877649241,
        "php": 0.0318464877649241,
        "composer": 0.0318464877649241,
        "detection": 0.0318464877649241,
        "via": 0.0318464877649241,
        "file": 0.0318464877649241,
        "heuristics": 0.0318464877649241,
        "optional": 0.0636929755298482,
        "tree": 0.0318464877649241,
        "sitter": 0.0318464877649241,
        "for": 0.0636929755298482,
        "function": 0.0318464877649241,
        "class": 0.0636929755298482,
        "extraction": 0.0318464877649241,
        "pluggable": 0.0318464877649241,
        "entry": 0.0318464877649241,
        "points": 0.0318464877649241,
        "main": 0.0636929755298482,
        "springbootapplication": 0.0318464877649241,
        "fastapi": 0.0636929755298482,
        "app": 0.1273859510596964,
        "bin": 0.0318464877649241,
        "cmd": 0.0318464877649241,
        "10": 0.0318464877649241,
        "interfaces": 0.0318464877649241,
        "skeleton": 0.0318464877649241,
        "docgen": 0.0318464877649241,
        "__init__": 0.0318464877649241,
        "py": 0.7961621941231025,
        "cli": 0.0955394632947723,
        "click": 0.0318464877649241,
        "typer": 0.0636929755298482,
        "failsafe": 0.0318464877649241,
        "fail": 0.0318464877649241,
        "safe": 0.0318464877649241,
        "readme": 0.0318464877649241,
        "logging": 0.0636929755298482,
        "configuration": 0.0318464877649241,
        "helpers": 0.0318464877649241,
        "orchestrator": 0.0318464877649241,
        "repo_scanner": 0.0318464877649241,
        "analyzers": 0.0318464877649241,
        "base": 0.0318464877649241,
        "analyzer": 0.0955394632947723,
        "abc": 0.1592324388246205,
        "build": 0.0318464877649241,
        "dependencies": 0.0318464877649241,
        "entrypoints": 0.0318464877649241,
        "patterns": 0.0318464877649241,
        "rag": 0.0318464877649241,
        "embedder": 0.0318464877649241,
        "local": 0.0318464877649241,
        "embedding": 0.0318464877649241,
        "model": 0.0318464877649241,
        "store": 0.0318464877649241,
        "prompting": 0.0318464877649241,
        "builder": 0.0318464877649241,
        "jinja2": 0.0318464877649241,
        "templates": 0.0636929755298482,
        "token": 0.0318464877649241,
        "mgmt": 0.0318464877649241,
        "constants": 0.0318464877649241,
        "j2": 0.0318464877649241,
        "per": 0.0318464877649241,
        "section": 0.0318464877649241,
        "llm": 0.0318464877649241,
        "runner": 0.0318464877649241,
        "adapter": 0.0318464877649241,
        "ollama": 0.0318464877649241,
        "llama": 0.0318464877649241,
        "cpp": 0.0318464877649241,
        "postproc": 0.0318464877649241,
        "lint": 0.0318464877649241,
        "links": 0.0318464877649241,
        "markers": 0.0318464877649241,
        "toc": 0.0318464877649241,
        "git": 0.0318464877649241,
        "diff": 0.0318464877649241,
        "publisher": 0.0318464877649241,
        "config": 0.0318464877649241,
        "models": 0.0636929755298482,
        "from": 0.0636929755298482,
        "import": 0.0636929755298482,
        "abstractmethod": 0.0955394632947723,
        "repomanifest": 0.0955394632947723,
        "signal": 0.0636929755298482,
        "def": 0.1592324388246205,
        "supports": 0.0318464877649241,
        "self": 0.0636929755298482,
        "manifest": 0.0636929755298482,
        "bool": 0.0955394632947723,
        "analyze": 0.0318464877649241,
        "list": 0.0318464877649241,
        "command": 0.0955394632947723,
        "init": 0.0318464877649241,
        "path": 0.0636929755298482,
        "str": 0.1592324388246205,
        "publish": 0.0318464877649241,
        "true": 0.0318464877649241,
        "update": 0.0318464877649241,
        "event": 0.0318464877649241,
        "commit": 0.0318464877649241,
        "diff_base": 0.0318464877649241,
        "origin": 0.0318464877649241,
        "regenerate": 0.0318464877649241,
        "sections": 0.0318464877649241,
        "full": 0.0318464877649241,
        "false": 0.0318464877649241,
        "service": 0.0318464877649241,
        "mode": 0.0318464877649241
      },
      "text": "code blocks, tables). * **Post-filters**: refuse if insufficient evidence; fall back to template stubs. --- ## 9) Language & Project Support (POC targets) * **Tier-1 (POC)**: Python (Poetry/Setuptools), Java (Maven/Gradle, Spring Boot), Node.js (npm/pnpm, Express/Next). * **Tier-2 (soon)**: Go (modules), Rust (Cargo), Ruby (Bundler), PHP (Composer). * Detection via: * File heuristics + optional tree-sitter for function/class extraction (pluggable). * Entry points: `main()`; Spring `@SpringBootApplication`; FastAPI app; `bin/`, `cmd/`. --- ## 10) Interfaces (Code Skeleton) ``` docgen/ __init__.py cli.py # click/typer CLI failsafe.py # fail-safe README stubs logging.py # logging configuration helpers orchestrator.py repo_scanner.py analyzers/ base.py # Analyzer ABC language.py build.py dependencies.py entrypoints.py patterns.py rag/ embedder.py # local embedding model store.py prompting/ builder.py # Jinja2 templates, token mgmt constants.py templates/ # *.j2 per section llm/ runner.py # adapter for ollama/llama.cpp postproc/ lint.py links.py markers.py toc.py git/ diff.py publisher.py config.py models.py ``` **Analyzer ABC** ```python from abc import ABC, abstractmethod from .models import RepoManifest, Signal class Analyzer(ABC): @abstractmethod def supports(self, manifest: RepoManifest) -> bool: ... @abstractmethod def analyze(self, manifest: RepoManifest) -> list[Signal]: ... ``` **CLI (Typer)** ```python @app.command() def init(path: str = \".\", publish: bool = True): ... @app.command() def update(path: str = \".\", event: str = \"commit\", diff_base: str = \"origin/main\"): ... @app.command() def regenerate(sections: str = \"\", full: bool = False): ... ``` **FastAPI (optional service mode)** * `POST",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#10",
      "vector": {
        "publish": 0.17586311452816478,
        "bool": 0.11724207635210984,
        "true": 0.05862103817605492,
        "app": 0.17586311452816478,
        "command": 0.11724207635210984,
        "def": 0.11724207635210984,
        "update": 0.17586311452816478,
        "path": 0.11724207635210984,
        "str": 0.23448415270421968,
        "event": 0.05862103817605492,
        "commit": 0.11724207635210984,
        "diff_base": 0.05862103817605492,
        "origin": 0.05862103817605492,
        "main": 0.05862103817605492,
        "regenerate": 0.05862103817605492,
        "sections": 0.23448415270421968,
        "full": 0.05862103817605492,
        "false": 0.05862103817605492,
        "fastapi": 0.05862103817605492,
        "optional": 0.11724207635210984,
        "service": 0.05862103817605492,
        "mode": 0.05862103817605492,
        "post": 0.35172622905632955,
        "analyze": 0.05862103817605492,
        "generate": 0.05862103817605492,
        "arch": 0.05862103817605492,
        "quickstart": 0.17586311452816478,
        "get": 0.05862103817605492,
        "status": 0.05862103817605492,
        "run_id": 0.05862103817605492,
        "11": 0.05862103817605492,
        "change": 0.05862103817605492,
        "impact": 0.05862103817605492,
        "matrix": 0.05862103817605492,
        "examples": 0.05862103817605492,
        "changed": 0.11724207635210984,
        "pattern": 0.05862103817605492,
        "to": 0.11724207635210984,
        "rebuild": 0.05862103817605492,
        "notes": 0.05862103817605492,
        "pom": 0.05862103817605492,
        "xml": 0.05862103817605492,
        "build": 0.23448415270421968,
        "gradle": 0.05862103817605492,
        "_and": 0.11724207635210984,
        "_test": 0.11724207635210984,
        "recompute": 0.05862103817605492,
        "commands": 0.05862103817605492,
        "requirements": 0.05862103817605492,
        "txt": 0.05862103817605492,
        "pyproject": 0.05862103817605492,
        "toml": 0.05862103817605492,
        "install": 0.05862103817605492,
        "steps": 0.05862103817605492,
        "dockerfile": 0.05862103817605492,
        "k8s": 0.05862103817605492,
        "deployment": 0.05862103817605492,
        "container": 0.05862103817605492,
        "changes": 0.05862103817605492,
        "src": 0.05862103817605492,
        "cmd": 0.05862103817605492,
        "features": 0.05862103817605492,
        "architecture": 0.17586311452816478,
        "if": 0.05862103817605492,
        "entrypoint": 0.05862103817605492,
        "intro": 0.05862103817605492,
        "too": 0.05862103817605492,
        "docs": 0.05862103817605492,
        "all": 0.05862103817605492,
        "patch": 0.05862103817605492,
        "prefer": 0.05862103817605492,
        "doc": 0.05862103817605492,
        "driven": 0.05862103817605492,
        "readme": 0.11724207635210984,
        "md": 0.05862103817605492,
        "none": 0.05862103817605492,
        "unless": 0.05862103817605492,
        "empty": 0.05862103817605492,
        "prevent": 0.05862103817605492,
        "loops": 0.05862103817605492,
        "12": 0.05862103817605492,
        "processing": 0.05862103817605492,
        "rules": 0.05862103817605492,
        "headings": 0.05862103817605492,
        "start": 0.05862103817605492,
        "at": 0.05862103817605492,
        "for": 0.11724207635210984,
        "title": 0.05862103817605492,
        "then": 0.05862103817605492,
        "add": 0.05862103817605492,
        "auto": 0.05862103817605492,
        "toc": 0.05862103817605492,
        "level": 0.05862103817605492,
        "3": 0.05862103817605492,
        "validate": 0.05862103817605492,
        "code": 0.05862103817605492,
        "blocks": 0.05862103817605492,
        "bash": 0.05862103817605492,
        "python": 0.05862103817605492,
        "convert": 0.05862103817605492,
        "absolute": 0.05862103817605492,
        "github": 0.05862103817605492,
        "links": 0.05862103817605492,
        "relative": 0.05862103817605492,
        "where": 0.05862103817605492,
        "possible": 0.05862103817605492,
        "ensure": 0.05862103817605492,
        "idempotency": 0.05862103817605492,
        "only": 0.05862103817605492,
        "edit": 0.05862103817605492,
        "between": 0.05862103817605492,
        "managed": 0.05862103817605492,
        "markers": 0.11724207635210984,
        "docgen": 0.11724207635210984,
        "begin": 0.05862103817605492,
        "end": 0.05862103817605492,
        "13": 0.05862103817605492,
        "git": 0.05862103817605492,
        "ci": 0.05862103817605492,
        "integration": 0.05862103817605492,
        "local": 0.05862103817605492,
        "pre": 0.05862103817605492,
        "forbid": 0.05862103817605492,
        "direct": 0.05862103817605492,
        "edits": 0.05862103817605492,
        "outside": 0.05862103817605492,
        "merge": 0.05862103817605492,
        "checkout": 0.05862103817605492,
        "remind": 0.05862103817605492
      },
      "text": "= \".\", publish: bool = True): ... @app.command() def update(path: str = \".\", event: str = \"commit\", diff_base: str = \"origin/main\"): ... @app.command() def regenerate(sections: str = \"\", full: bool = False): ... ``` **FastAPI (optional service mode)** * `POST /analyze` * `POST /generate?sections=arch,quickstart` * `POST /publish` * `GET /status/{run_id}` --- ## 11) Change Impact Matrix (examples) | Changed Path Pattern | Sections to Rebuild | Notes | | ------------------------------------ | ---------------------------- | --------------------------------------- | | `pom.xml`, `build.gradle*` | build\\_and\\_test, quickstart | Recompute build commands | | `requirements.txt`, `pyproject.toml` | build\\_and\\_test, quickstart | Update install steps | | `Dockerfile`, `k8s/**` | deployment | Publish container changes | | `src/**`, `app/**`, `cmd/**` | features, architecture | If entrypoint changed, update intro too | | `docs/**` | all (patch) | Prefer doc-driven | | `README.md` | none (unless empty) | Prevent loops | --- ## 12) Post-Processing Rules * Headings start at `#` for title then `##` for sections. * Add **auto ToC** (<= level 3). * Validate code blocks (` ```bash`, ` ```python`). * Convert absolute GitHub links to relative where possible. * Ensure **idempotency**: only edit between managed markers: * `<!-- docgen:begin:architecture -->` \u2026 `<!-- docgen:end:architecture -->` --- ## 13) Git & CI Integration ### Local * **pre-commit**: forbid direct README edits outside markers (optional). * **post-merge / post-checkout**: remind",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#11",
      "vector": {
        "possible": 0.11162911443718952,
        "ensure": 0.05581455721859476,
        "idempotency": 0.05581455721859476,
        "only": 0.16744367165578428,
        "edit": 0.05581455721859476,
        "between": 0.05581455721859476,
        "managed": 0.05581455721859476,
        "markers": 0.11162911443718952,
        "docgen": 0.22325822887437904,
        "begin": 0.05581455721859476,
        "architecture": 0.11162911443718952,
        "end": 0.05581455721859476,
        "13": 0.05581455721859476,
        "git": 0.11162911443718952,
        "ci": 0.11162911443718952,
        "integration": 0.05581455721859476,
        "local": 0.16744367165578428,
        "pre": 0.05581455721859476,
        "commit": 0.05581455721859476,
        "forbid": 0.05581455721859476,
        "direct": 0.05581455721859476,
        "readme": 0.05581455721859476,
        "edits": 0.05581455721859476,
        "outside": 0.05581455721859476,
        "optional": 0.16744367165578428,
        "post": 0.16744367165578428,
        "merge": 0.05581455721859476,
        "checkout": 0.11162911443718952,
        "remind": 0.05581455721859476,
        "to": 0.05581455721859476,
        "run": 0.05581455721859476,
        "update": 0.16744367165578428,
        "github": 0.11162911443718952,
        "gitlab": 0.05581455721859476,
        "bitbucket": 0.05581455721859476,
        "on": 0.05581455721859476,
        "push": 0.05581455721859476,
        "pr": 0.2790727860929738,
        "1": 0.11162911443718952,
        "repo": 0.11162911443718952,
        "2": 0.16744367165578428,
        "event": 0.05581455721859476,
        "diff": 0.11162911443718952,
        "base": 0.05581455721859476,
        "base_sha": 0.05581455721859476,
        "3": 0.05581455721859476,
        "if": 0.16744367165578428,
        "changes": 0.05581455721859476,
        "open": 0.05581455721859476,
        "with": 0.05581455721859476,
        "labeled": 0.05581455721859476,
        "docs": 0.11162911443718952,
        "auto": 0.05581455721859476,
        "tokenless": 0.05581455721859476,
        "mode": 0.05581455721859476,
        "created": 0.05581455721859476,
        "from": 0.05581455721859476,
        "a": 0.05581455721859476,
        "app": 0.05581455721859476,
        "bot": 0.05581455721859476,
        "account": 0.05581455721859476,
        "14": 0.05581455721859476,
        "quality": 0.05581455721859476,
        "gates": 0.05581455721859476,
        "evaluation": 0.05581455721859476,
        "consistency": 0.05581455721859476,
        "checks": 0.05581455721859476,
        "commands": 0.11162911443718952,
        "exist": 0.05581455721859476,
        "in": 0.11162911443718952,
        "ports": 0.05581455721859476,
        "env": 0.05581455721859476,
        "vars": 0.05581455721859476,
        "match": 0.05581455721859476,
        "configs": 0.05581455721859476,
        "no": 0.11162911443718952,
        "hallucinations": 0.05581455721859476,
        "reject": 0.05581455721859476,
        "new": 0.05581455721859476,
        "facts": 0.05581455721859476,
        "not": 0.05581455721859476,
        "found": 0.11162911443718952,
        "signals": 0.05581455721859476,
        "rag": 0.11162911443718952,
        "style": 0.05581455721859476,
        "concise": 0.05581455721859476,
        "paragraphs": 0.05581455721859476,
        "actionable": 0.05581455721859476,
        "filler": 0.05581455721859476,
        "marketing": 0.05581455721859476,
        "scorecard": 0.05581455721859476,
        "0": 0.05581455721859476,
        "100": 0.05581455721859476,
        "coverage": 0.05581455721859476,
        "of": 0.11162911443718952,
        "required": 0.05581455721859476,
        "sections": 0.05581455721859476,
        "30": 0.05581455721859476,
        "buildability": 0.05581455721859476,
        "quick": 0.05581455721859476,
        "start": 0.05581455721859476,
        "20": 0.11162911443718952,
        "link": 0.05581455721859476,
        "validity": 0.05581455721859476,
        "10": 0.16744367165578428,
        "alignment": 0.05581455721859476,
        "w": 0.05581455721859476,
        "change": 0.05581455721859476,
        "set": 0.05581455721859476,
        "lint": 0.05581455721859476,
        "reviewer": 0.05581455721859476,
        "feedback": 0.05581455721859476,
        "loop": 0.05581455721859476,
        "15": 0.05581455721859476,
        "security": 0.05581455721859476,
        "privacy": 0.05581455721859476,
        "llm": 0.11162911443718952,
        "and": 0.05581455721859476,
        "embedding": 0.05581455721859476,
        "models": 0.05581455721859476,
        "respect": 0.05581455721859476,
        "gitignore": 0.05581455721859476,
        "configurable": 0.05581455721859476,
        "exclude_paths": 0.05581455721859476,
        "never": 0.05581455721859476,
        "index": 0.05581455721859476,
        "large": 0.05581455721859476,
        "binaries": 0.05581455721859476,
        "secret": 0.11162911443718952,
        "files": 0.05581455721859476,
        "simple": 0.05581455721859476,
        "scan": 0.05581455721859476,
        "block": 0.05581455721859476,
        "16": 0.05581455721859476,
        "mvp": 0.05581455721859476,
        "plan": 0.05581455721859476,
        "weeks": 0.05581455721859476,
        "suggested": 0.05581455721859476,
        "breakdown": 0.05581455721859476,
        "core": 0.05581455721859476,
        "path": 0.05581455721859476,
        "cli": 0.05581455721859476,
        "scanner": 0.05581455721859476,
        "language": 0.05581455721859476,
        "build": 0.05581455721859476,
        "analyzers": 0.05581455721859476,
        "python": 0.05581455721859476,
        "java": 0.05581455721859476,
        "node": 0.05581455721859476,
        "prompt": 0.05581455721859476,
        "builder": 0.05581455721859476,
        "runner": 0.05581455721859476,
        "ollama": 0.05581455721859476,
        "adapter": 0.05581455721859476,
        "processor": 0.05581455721859476,
        "publisher": 0.05581455721859476,
        "lite": 0.05581455721859476,
        "embed": 0.05581455721859476
      },
      "text": "possible. * Ensure **idempotency**: only edit between managed markers: * `<!-- docgen:begin:architecture -->` \u2026 `<!-- docgen:end:architecture -->` --- ## 13) Git & CI Integration ### Local * **pre-commit**: forbid direct README edits outside markers (optional). * **post-merge / post-checkout**: remind to run `docgen update` (optional). ### CI (GitHub/GitLab/Bitbucket) * On push/PR: 1. Checkout repo. 2. `docgen update --event pr --diff-base $BASE_SHA` 3. If changes \u2192 open/update PR with labeled `docs:auto`. * Tokenless mode possible if PR created from a GitHub App/bot account. --- ## 14) Quality Gates & Evaluation * **Consistency checks**: commands exist in repo; ports/env vars match configs. * **No hallucinations**: reject new facts not found in signals/RAG. * **Style**: concise paragraphs, actionable commands, no filler marketing. * **Scorecard** (0\u2013100): * Coverage of required sections (30) * Buildability of quick start (20) * Link validity (10) * Diff alignment w/ change set (20) * Lint (10) * Reviewer feedback loop (10) --- ## 15) Security & Privacy * **Local only** LLM and embedding models. * Respect `.gitignore` + configurable `exclude_paths`. * Never index large binaries/secret files. * Optional simple **secret scan**; block if found. --- ## 16) MVP Plan (2 weeks suggested breakdown) 1. **Core path**: CLI, Scanner, Language+Build analyzers (Python/Java/Node), Prompt Builder, Local LLM runner (Ollama adapter), Post-processor, Git Publisher (PR). 2. **RAG Lite**: embed only `/docs`,",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#12",
      "vector": {
        "simple": 0.058823529411764705,
        "secret": 0.058823529411764705,
        "scan": 0.058823529411764705,
        "block": 0.058823529411764705,
        "if": 0.058823529411764705,
        "found": 0.058823529411764705,
        "16": 0.058823529411764705,
        "mvp": 0.058823529411764705,
        "plan": 0.058823529411764705,
        "2": 0.17647058823529413,
        "weeks": 0.058823529411764705,
        "suggested": 0.058823529411764705,
        "breakdown": 0.058823529411764705,
        "1": 0.11764705882352941,
        "core": 0.058823529411764705,
        "path": 0.058823529411764705,
        "cli": 0.058823529411764705,
        "scanner": 0.058823529411764705,
        "language": 0.058823529411764705,
        "build": 0.17647058823529413,
        "analyzers": 0.058823529411764705,
        "python": 0.17647058823529413,
        "java": 0.058823529411764705,
        "node": 0.058823529411764705,
        "prompt": 0.058823529411764705,
        "builder": 0.058823529411764705,
        "local": 0.058823529411764705,
        "llm": 0.058823529411764705,
        "runner": 0.058823529411764705,
        "ollama": 0.058823529411764705,
        "adapter": 0.058823529411764705,
        "post": 0.058823529411764705,
        "processor": 0.058823529411764705,
        "git": 0.058823529411764705,
        "publisher": 0.058823529411764705,
        "pr": 0.11764705882352941,
        "rag": 0.058823529411764705,
        "lite": 0.058823529411764705,
        "embed": 0.058823529411764705,
        "only": 0.058823529411764705,
        "docs": 0.058823529411764705,
        "existing": 0.058823529411764705,
        "readme": 0.11764705882352941,
        "top": 0.058823529411764705,
        "20": 0.058823529411764705,
        "largest": 0.058823529411764705,
        "source": 0.058823529411764705,
        "files": 0.058823529411764705,
        "heads": 0.058823529411764705,
        "3": 0.058823529411764705,
        "triggers": 0.058823529411764705,
        "single": 0.058823529411764705,
        "commit": 0.058823529411764705,
        "mode": 0.11764705882352941,
        "as": 0.11764705882352941,
        "stretch": 0.058823529411764705,
        "4": 0.058823529411764705,
        "templates": 0.11764705882352941,
        "8": 0.058823529411764705,
        "sections": 0.058823529411764705,
        "jinja2": 0.23529411764705882,
        "managed": 0.058823529411764705,
        "markers": 0.058823529411764705,
        "5": 0.058823529411764705,
        "config": 0.058823529411764705,
        "docgen": 0.058823529411764705,
        "yml": 0.058823529411764705,
        "minimal": 0.11764705882352941,
        "17": 0.17647058823529413,
        "example": 0.058823529411764705,
        "section": 0.11764705882352941,
        "template": 0.058823529411764705,
        "architecture": 0.23529411764705882,
        "j2": 0.11764705882352941,
        "project_name": 0.11764705882352941,
        "is": 0.058823529411764705,
        "structured": 0.058823529411764705,
        "ascii": 0.058823529411764705,
        "_architecture": 0.058823529411764705,
        "key": 0.058823529411764705,
        "components": 0.11764705882352941,
        "for": 0.11764705882352941,
        "comp": 0.17647058823529413,
        "in": 0.058823529411764705,
        "name": 0.058823529411764705,
        "summary": 0.058823529411764705,
        "endfor": 0.058823529411764705,
        "data": 0.058823529411764705,
        "flow": 0.058823529411764705,
        "data_flow": 0.058823529411764705,
        "generated": 0.058823529411764705,
        "from": 0.058823529411764705,
        "detected": 0.058823529411764705,
        "signals": 0.058823529411764705,
        "signals_summary": 0.058823529411764705,
        "frame": 0.058823529411764705,
        "composed": 0.058823529411764705,
        "intro": 0.058823529411764705,
        "features": 0.17647058823529413,
        "include": 0.058823529411764705,
        "quick": 0.058823529411764705,
        "start": 0.058823529411764705,
        "quickstart": 0.058823529411764705,
        "configuration": 0.11764705882352941,
        "test": 0.058823529411764705,
        "build_and_test": 0.11764705882352941,
        "deployment": 0.17647058823529413,
        "troubleshooting": 0.11764705882352941,
        "faq": 0.11764705882352941,
        "license": 0.11764705882352941,
        "18": 0.058823529411764705,
        "snippets": 0.058823529411764705,
        "change": 0.058823529411764705,
        "impact": 0.058823529411764705,
        "heuristic": 0.058823529411764705,
        "section_rules": 0.058823529411764705,
        "pom": 0.058823529411764705,
        "xml": 0.058823529411764705,
        "gradle": 0.058823529411764705,
        "requirements": 0.058823529411764705,
        "txt": 0.058823529411764705,
        "pyproject": 0.058823529411764705,
        "toml": 0.058823529411764705,
        "package": 0.058823529411764705,
        "json": 0.058823529411764705,
        "dockerfile": 0.058823529411764705,
        "k8s": 0.058823529411764705,
        "src": 0.11764705882352941,
        "app": 0.11764705882352941,
        "cmd": 0.11764705882352941,
        "def": 0.058823529411764705,
        "sections_from_diff": 0.058823529411764705,
        "paths": 0.058823529411764705,
        "list": 0.058823529411764705,
        "str": 0.11764705882352941,
        "set": 0.11764705882352941,
        "out": 0.058823529411764705
      },
      "text": "simple **secret scan**; block if found. --- ## 16) MVP Plan (2 weeks suggested breakdown) 1. **Core path**: CLI, Scanner, Language+Build analyzers (Python/Java/Node), Prompt Builder, Local LLM runner (Ollama adapter), Post-processor, Git Publisher (PR). 2. **RAG Lite**: embed only `/docs`, existing `README`, top 20 largest source files\u2019 heads. 3. **Triggers**: single \u201ccommit\u201d mode; PR mode as stretch. 4. **Templates**: 8 sections, Jinja2; managed markers. 5. **Config**: `.docgen.yml` minimal. --- ## 17) Example Templates ### 17.1 Section Template (Jinja2 \u2014 architecture.j2) ```jinja2 ## Architecture {{ project_name }} is structured as: ``` {{ ascii\\_architecture }} ``` **Key components** {% for comp in components %} - **{{ comp.name }}** \u2014 {{ comp.summary }} {% endfor %} **Data flow** {{ data_flow }} > Generated from detected signals: {{ signals_summary }} ``` ### 17.2 README Frame (composed) ```jinja2 # {{ project_name }} {{ intro }} ## Features {{ features }} {% include \"architecture.j2\" %} ## Quick Start {{ quickstart }} ## Configuration {{ configuration }} ## Build & Test {{ build_and_test }} ## Deployment {{ deployment }} ## Troubleshooting {{ troubleshooting }} ## FAQ {{ faq }} ## License {{ license }} ``` --- ## 18) Minimal Python Snippets **Change impact heuristic** ```python SECTION_RULES = [ (\"build_and_test\", [\"pom.xml\",\"build.gradle\",\"requirements.txt\",\"pyproject.toml\",\"package.json\"]), (\"deployment\", [\"Dockerfile\",\"k8s/\"]), (\"architecture\", [\"src/\",\"app/\",\"cmd/\"]), (\"features\", [\"src/\",\"app/\",\"cmd/\"]), ] def sections_from_diff(paths: list[str]) -> set[str]: out = set() for section,",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#13",
      "vector": {
        "faq": 0.04432422071779363,
        "license": 0.08864844143558726,
        "18": 0.04432422071779363,
        "minimal": 0.04432422071779363,
        "python": 0.13297266215338088,
        "snippets": 0.04432422071779363,
        "change": 0.04432422071779363,
        "impact": 0.04432422071779363,
        "heuristic": 0.04432422071779363,
        "section_rules": 0.08864844143558726,
        "build_and_test": 0.04432422071779363,
        "pom": 0.08864844143558726,
        "xml": 0.08864844143558726,
        "build": 0.13297266215338088,
        "gradle": 0.08864844143558726,
        "requirements": 0.04432422071779363,
        "txt": 0.04432422071779363,
        "pyproject": 0.04432422071779363,
        "toml": 0.04432422071779363,
        "package": 0.08864844143558726,
        "json": 0.08864844143558726,
        "deployment": 0.04432422071779363,
        "dockerfile": 0.04432422071779363,
        "k8s": 0.04432422071779363,
        "architecture": 0.04432422071779363,
        "src": 0.13297266215338088,
        "app": 0.13297266215338088,
        "cmd": 0.13297266215338088,
        "features": 0.04432422071779363,
        "def": 0.08864844143558726,
        "sections_from_diff": 0.04432422071779363,
        "paths": 0.08864844143558726,
        "list": 0.04432422071779363,
        "str": 0.26594532430676177,
        "set": 0.08864844143558726,
        "out": 0.13297266215338088,
        "for": 0.2216211035889681,
        "section": 0.08864844143558726,
        "patterns": 0.13297266215338088,
        "in": 0.2216211035889681,
        "if": 0.2216211035889681,
        "any": 0.04432422071779363,
        "p": 0.13297266215338088,
        "pat": 0.08864844143558726,
        "startswith": 0.04432422071779363,
        "add": 0.04432422071779363,
        "return": 0.13297266215338088,
        "or": 0.08864844143558726,
        "intro": 0.08864844143558726,
        "fall": 0.04432422071779363,
        "back": 0.04432422071779363,
        "to": 0.08864844143558726,
        "uncertain": 0.04432422071779363,
        "managed": 0.04432422071779363,
        "markers": 0.08864844143558726,
        "patch": 0.04432422071779363,
        "replace_block": 0.04432422071779363,
        "md": 0.2216211035889681,
        "key": 0.13297266215338088,
        "new": 0.08864844143558726,
        "start": 0.1772968828711745,
        "f": 0.13297266215338088,
        "docgen": 0.1772968828711745,
        "begin": 0.04432422071779363,
        "end": 0.2216211035889681,
        "and": 0.04432422071779363,
        "pre": 0.08864844143558726,
        "rest": 0.08864844143558726,
        "split": 0.08864844143558726,
        "1": 0.08864844143558726,
        "_": 0.04432422071779363,
        "post": 0.08864844143558726,
        "n": 0.08864844143558726,
        "insert": 0.04432422071779363,
        "missing": 0.04432422071779363,
        "19": 0.04432422071779363,
        "open": 0.04432422071779363,
        "questions": 0.04432422071779363,
        "trade": 0.04432422071779363,
        "offs": 0.04432422071779363,
        "embeddings": 0.04432422071779363,
        "use": 0.04432422071779363,
        "a": 0.13297266215338088,
        "tiny": 0.04432422071779363,
        "local": 0.04432422071779363,
        "model": 0.08864844143558726,
        "vs": 0.08864844143558726,
        "rule": 0.04432422071779363,
        "based": 0.04432422071779363,
        "retrieval": 0.04432422071779363,
        "mvp": 0.04432422071779363,
        "tree": 0.04432422071779363,
        "sitter": 0.04432422071779363,
        "adds": 0.04432422071779363,
        "power": 0.04432422071779363,
        "but": 0.04432422071779363,
        "increases": 0.04432422071779363,
        "footprint": 0.04432422071779363,
        "gate": 0.04432422071779363,
        "behind": 0.04432422071779363,
        "flag": 0.04432422071779363,
        "pr": 0.08864844143558726,
        "author": 0.04432422071779363,
        "bot": 0.04432422071779363,
        "account": 0.04432422071779363,
        "developer": 0.04432422071779363,
        "token": 0.04432422071779363,
        "decide": 0.04432422071779363,
        "per": 0.04432422071779363,
        "environment": 0.04432422071779363,
        "markdown": 0.04432422071779363,
        "diffs": 0.04432422071779363,
        "keep": 0.04432422071779363,
        "sections": 0.04432422071779363,
        "atomic": 0.04432422071779363,
        "minimize": 0.04432422071779363,
        "noisy": 0.04432422071779363,
        "prs": 0.04432422071779363,
        "20": 0.04432422071779363,
        "example": 0.04432422071779363,
        "yml": 0.04432422071779363,
        "mixed": 0.04432422071779363,
        "repo": 0.04432422071779363,
        "yaml": 0.04432422071779363,
        "llm": 0.04432422071779363,
        "runner": 0.04432422071779363,
        "ollama": 0.04432422071779363,
        "llama3": 0.04432422071779363,
        "8b": 0.04432422071779363,
        "instruct": 0.04432422071779363,
        "temperature": 0.04432422071779363,
        "0": 0.04432422071779363,
        "15": 0.04432422071779363,
        "readme": 0.04432422071779363,
        "style": 0.04432422071779363,
        "comprehensive": 0.04432422071779363,
        "publish": 0.04432422071779363,
        "mode": 0.04432422071779363,
        "branch_prefix": 0.04432422071779363,
        "analyzers": 0.04432422071779363,
        "enabled": 0.04432422071779363,
        "language": 0.04432422071779363,
        "dependencies": 0.04432422071779363,
        "exclude_paths": 0.04432422071779363,
        "git": 0.04432422071779363,
        "node_modules": 0.04432422071779363,
        "dist": 0.04432422071779363,
        "target": 0.04432422071779363,
        "ci": 0.04432422071779363,
        "watched_globs": 0.04432422071779363
      },
      "text": "faq }} ## License {{ license }} ``` --- ## 18) Minimal Python Snippets **Change impact heuristic** ```python SECTION_RULES = [ (\"build_and_test\", [\"pom.xml\",\"build.gradle\",\"requirements.txt\",\"pyproject.toml\",\"package.json\"]), (\"deployment\", [\"Dockerfile\",\"k8s/\"]), (\"architecture\", [\"src/\",\"app/\",\"cmd/\"]), (\"features\", [\"src/\",\"app/\",\"cmd/\"]), ] def sections_from_diff(paths: list[str]) -> set[str]: out = set() for section, patterns in SECTION_RULES: if any(p for p in paths for pat in patterns if p.startswith(pat)): out.add(section) return out or {\"intro\"} # fall back to intro if uncertain ``` **Managed markers (patch)** ```python def replace_block(md: str, key: str, new: str) -> str: start = f\"<!-- docgen:begin:{key} -->\" end = f\"<!-- docgen:end:{key} -->\" if start in md and end in md: pre, rest = md.split(start, 1) _, post = rest.split(end, 1) return f\"{pre}{start}\\n{new}\\n{end}{post}\" return md # or insert markers if missing ``` --- ## 19) Open Questions / Trade-offs * **Embeddings**: Use a tiny local model vs. rule-based retrieval for MVP? * **Tree-sitter**: Adds power but increases footprint\u2014gate behind a flag. * **PR author**: Bot account vs. developer token\u2014decide per environment. * **Markdown diffs**: Keep sections atomic to minimize noisy PRs. --- ## 20) Example `.docgen.yml` for a Mixed Repo ```yaml llm: runner: \"ollama\" model: \"llama3:8b-instruct\" temperature: 0.15 readme: style: \"comprehensive\" publish: mode: \"pr\" branch_prefix: \"docgen/\" analyzers: enabled: [language, build, dependencies, patterns] exclude_paths: [\".git/\", \"node_modules/\", \"dist/\", \"target/\"] ci: watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" -",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#14",
      "vector": {
        "runner": 0.07715167498104596,
        "ollama": 0.1543033499620919,
        "model": 0.07715167498104596,
        "llama3": 0.07715167498104596,
        "8b": 0.07715167498104596,
        "instruct": 0.07715167498104596,
        "temperature": 0.07715167498104596,
        "0": 0.07715167498104596,
        "15": 0.07715167498104596,
        "readme": 0.1543033499620919,
        "style": 0.1543033499620919,
        "comprehensive": 0.07715167498104596,
        "publish": 0.07715167498104596,
        "mode": 0.07715167498104596,
        "pr": 0.1543033499620919,
        "branch_prefix": 0.07715167498104596,
        "docgen": 0.23145502494313785,
        "analyzers": 0.1543033499620919,
        "enabled": 0.07715167498104596,
        "language": 0.07715167498104596,
        "build": 0.1543033499620919,
        "dependencies": 0.07715167498104596,
        "patterns": 0.07715167498104596,
        "exclude_paths": 0.07715167498104596,
        "git": 0.07715167498104596,
        "node_modules": 0.07715167498104596,
        "dist": 0.07715167498104596,
        "target": 0.07715167498104596,
        "ci": 0.07715167498104596,
        "watched_globs": 0.07715167498104596,
        "src": 0.07715167498104596,
        "app": 0.07715167498104596,
        "cmd": 0.07715167498104596,
        "pom": 0.1543033499620919,
        "xml": 0.1543033499620919,
        "gradle": 0.07715167498104596,
        "package": 0.07715167498104596,
        "json": 0.07715167498104596,
        "requirements": 0.1543033499620919,
        "txt": 0.1543033499620919,
        "dockerfile": 0.07715167498104596,
        "21": 0.07715167498104596,
        "success": 0.07715167498104596,
        "criteria": 0.07715167498104596,
        "poc": 0.07715167498104596,
        "for": 0.07715167498104596,
        "3": 0.07715167498104596,
        "diverse": 0.07715167498104596,
        "repos": 0.07715167498104596,
        "python": 0.07715167498104596,
        "cli": 0.1543033499620919,
        "spring": 0.07715167498104596,
        "boot": 0.07715167498104596,
        "api": 0.07715167498104596,
        "node": 0.07715167498104596,
        "webapp": 0.07715167498104596,
        "init": 0.1543033499620919,
        "produces": 0.07715167498104596,
        "a": 0.23145502494313785,
        "working": 0.07715167498104596,
        "linted": 0.07715167498104596,
        "with": 0.07715167498104596,
        "runnable": 0.07715167498104596,
        "quick": 0.07715167498104596,
        "start": 0.07715167498104596,
        "on": 0.07715167498104596,
        "changing": 0.07715167498104596,
        "or": 0.07715167498104596,
        "updates": 0.07715167498104596,
        "only": 0.07715167498104596,
        "relevant": 0.07715167498104596,
        "sections": 0.07715167498104596,
        "no": 0.07715167498104596,
        "hallucinated": 0.07715167498104596,
        "commands": 0.07715167498104596,
        "links": 0.07715167498104596,
        "and": 0.23145502494313785,
        "badges": 0.07715167498104596,
        "validate": 0.07715167498104596,
        "consistent": 0.07715167498104596,
        "if": 0.07715167498104596,
        "you": 0.1543033499620919,
        "want": 0.07715167498104596,
        "i": 0.07715167498104596,
        "can": 0.1543033499620919,
        "spin": 0.07715167498104596,
        "up": 0.07715167498104596,
        "starter": 0.07715167498104596,
        "repo": 0.07715167498104596,
        "layout": 0.07715167498104596,
        "templates": 0.07715167498104596,
        "simple": 0.07715167498104596,
        "adapter": 0.07715167498104596,
        "so": 0.07715167498104596,
        "drop": 0.07715167498104596,
        "it": 0.07715167498104596,
        "into": 0.07715167498104596,
        "your": 0.07715167498104596,
        "environment": 0.07715167498104596,
        "run": 0.07715167498104596,
        "right": 0.07715167498104596,
        "away": 0.07715167498104596
      },
      "text": "runner: \"ollama\" model: \"llama3:8b-instruct\" temperature: 0.15 readme: style: \"comprehensive\" publish: mode: \"pr\" branch_prefix: \"docgen/\" analyzers: enabled: [language, build, dependencies, patterns] exclude_paths: [\".git/\", \"node_modules/\", \"dist/\", \"target/\"] ci: watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" - \"requirements.txt\" - \"Dockerfile\" ``` --- ## 21) Success Criteria (POC) * For 3 diverse repos (Python CLI, Spring Boot API, Node webapp): * `docgen init` produces a working, linted README with runnable Quick Start. * On changing `pom.xml` or `requirements.txt`, PR updates only relevant sections. * No hallucinated commands; links and badges validate; style consistent. --- If you want, I can spin up a **starter repo layout** (CLI, analyzers, templates, and a simple Ollama adapter) so you can drop it into your environment and run `docgen init` right away.",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    }
  ],
  "faq": [
    {
      "id": "AGENTS.md#0",
      "vector": {
        "repository": 0.06757373783994859,
        "guidelines": 0.1013606067599229,
        "project": 0.033786868919974296,
        "structure": 0.033786868919974296,
        "module": 0.06757373783994859,
        "organization": 0.033786868919974296,
        "spec": 0.06757373783994859,
        "md": 0.033786868919974296,
        "captures": 0.033786868919974296,
        "the": 0.27029495135979437,
        "end": 0.06757373783994859,
        "to": 0.1013606067599229,
        "architecture": 0.033786868919974296,
        "component": 0.06757373783994859,
        "contracts": 0.033786868919974296,
        "and": 0.43922929595966587,
        "must": 0.033786868919974296,
        "be": 0.033786868919974296,
        "updated": 0.033786868919974296,
        "whenever": 0.033786868919974296,
        "responsibilities": 0.033786868919974296,
        "shift": 0.033786868919974296,
        "place": 0.033786868919974296,
        "python": 0.2027212135198458,
        "source": 0.033786868919974296,
        "in": 0.16893434459987147,
        "a": 0.23650808243982008,
        "docgen": 0.16893434459987147,
        "package": 0.033786868919974296,
        "create": 0.033786868919974296,
        "it": 0.033786868919974296,
        "when": 0.06757373783994859,
        "implementation": 0.033786868919974296,
        "starts": 0.033786868919974296,
        "with": 0.16893434459987147,
        "clear": 0.033786868919974296,
        "submodules": 0.033786868919974296,
        "for": 0.1013606067599229,
        "orchestrator": 0.1013606067599229,
        "analyzers": 0.033786868919974296,
        "runners": 0.033786868919974296,
        "stores": 0.033786868919974296,
        "avoid": 0.06757373783994859,
        "leaving": 0.033786868919974296,
        "logic": 0.033786868919974296,
        "repo": 0.06757373783994859,
        "root": 0.033786868919974296,
        "mirror": 0.033786868919974296,
        "runtime": 0.033786868919974296,
        "modules": 0.06757373783994859,
        "under": 0.1013606067599229,
        "tests": 0.2027212135198458,
        "using": 0.033786868919974296,
        "test_": 0.033786868919974296,
        "py": 0.1013606067599229,
        "co": 0.033786868919974296,
        "locate": 0.033786868919974296,
        "fixtures": 0.06757373783994859,
        "_fixtures": 0.033786868919974296,
        "so": 0.13514747567989718,
        "imports": 0.06757373783994859,
        "stay": 0.06757373783994859,
        "clean": 0.033786868919974296,
        "reusable": 0.033786868919974296,
        "keep": 0.13514747567989718,
        "throwaway": 0.033786868919974296,
        "experiments": 0.033786868919974296,
        "inside": 0.033786868919974296,
        "an": 0.06757373783994859,
        "ignored": 0.033786868919974296,
        "sandbox": 0.033786868919974296,
        "directory": 0.033786868919974296,
        "scans": 0.033786868919974296,
        "remain": 0.033786868919974296,
        "focused": 0.033786868919974296,
        "on": 0.06757373783994859,
        "production": 0.033786868919974296,
        "code": 0.033786868919974296,
        "paths": 0.033786868919974296,
        "build": 0.033786868919974296,
        "test": 0.06757373783994859,
        "development": 0.033786868919974296,
        "commands": 0.033786868919974296,
        "m": 0.16893434459987147,
        "venv": 0.1013606067599229,
        "followed": 0.033786868919974296,
        "by": 0.033786868919974296,
        "scripts": 0.06757373783994859,
        "activate": 0.033786868919974296,
        "aligns": 0.033786868919974296,
        "local": 0.033786868919974296,
        "shells": 0.033786868919974296,
        "pycharm": 0.033786868919974296,
        "interpreter": 0.033786868919974296,
        "settings": 0.033786868919974296,
        "pip": 0.033786868919974296,
        "install": 0.033786868919974296,
        "e": 0.033786868919974296,
        "dev": 0.033786868919974296,
        "after": 0.06757373783994859,
        "pyproject": 0.033786868919974296,
        "toml": 0.033786868919974296,
        "is": 0.1013606067599229,
        "committed": 0.033786868919974296,
        "exposes": 0.033786868919974296,
        "cli": 0.033786868919974296,
        "plugins": 0.033786868919974296,
        "editable": 0.033786868919974296,
        "form": 0.033786868919974296,
        "without": 0.033786868919974296,
        "repeated": 0.033786868919974296,
        "reinstalls": 0.033786868919974296,
        "pytest": 0.06757373783994859,
        "runs": 0.033786868919974296,
        "full": 0.033786868919974296,
        "suite": 0.033786868919974296,
        "append": 0.033786868919974296,
        "k": 0.033786868919974296,
        "pattern": 0.033786868919974296,
        "iterate": 0.033786868919974296,
        "single": 0.06757373783994859,
        "analyzer": 0.06757373783994859,
        "or": 0.06757373783994859,
        "pipeline": 0.1013606067599229,
        "stage": 0.033786868919974296,
        "mypy": 0.033786868919974296,
        "ruff": 0.033786868919974296,
        "check": 0.033786868919974296,
        "catch": 0.033786868919974296,
        "type": 0.033786868919974296,
        "drift": 0.033786868919974296,
        "lint": 0.033786868919974296,
        "violations": 0.033786868919974296,
        "before": 0.06757373783994859,
        "readme": 0.06757373783994859,
        "generation": 0.06757373783994859,
        "attempted": 0.033786868919974296,
        "coding": 0.033786868919974296,
        "style": 0.033786868919974296,
        "naming": 0.033786868919974296,
        "conventions": 0.033786868919974296,
        "follow": 0.06757373783994859,
        "pep": 0.033786868919974296,
        "8": 0.033786868919974296,
        "4": 0.033786868919974296,
        "space": 0.033786868919974296,
        "indents": 0.033786868919974296,
        "explicit": 0.033786868919974296,
        "example": 0.033786868919974296,
        "from": 0.033786868919974296,
        "import": 0.033786868919974296,
        "static": 0.033786868919974296,
        "tooling": 0.033786868919974296,
        "can": 0.033786868919974296,
        "trace": 0.033786868919974296,
        "dependencies": 0.033786868919974296,
        "name": 0.033786868919974296,
        "their": 0.033786868919974296,
        "roles": 0.033786868919974296,
        "prompt_builder": 0.033786868919974296,
        "functions": 0.033786868919974296,
        "snake_case": 0.033786868919974296,
        "descriptive": 0.06757373783994859,
        "nouns": 0.033786868919974296,
        "first": 0.033786868919974296,
        "build_prompt_section": 0.033786868919974296,
        "run": 0.033786868919974296,
        "black": 0.033786868919974296,
        "commits": 0.06757373783994859,
        "manual": 0.033786868919974296,
        "reformatting": 0.033786868919974296,
        "unless": 0.033786868919974296,
        "formatter": 0.033786868919974296,
        "cannot": 0.033786868919974296,
        "resolve": 0.033786868919974296,
        "construct": 0.033786868919974296,
        "testing": 0.06757373783994859,
        "default": 0.033786868919974296,
        "harness": 0.033786868919974296,
        "every": 0.033786868919974296,
        "needs": 0.033786868919974296,
        "unit": 0.033786868919974296,
        "coverage": 0.033786868919974296,
        "plus": 0.033786868919974296,
        "integration": 0.06757373783994859,
        "case": 0.033786868919974296,
        "that": 0.06757373783994859,
        "walks": 0.033786868919974296,
        "snapshot": 0.033786868919974296,
        "through": 0.033786868919974296,
        "use": 0.033786868919974296,
        "names": 0.033786868919974296,
        "such": 0.033786868919974296,
        "as": 0.033786868919974296,
        "test_prompt_builder_handles_missing_signals": 0.033786868919974296,
        "arrange": 0.033786868919974296,
        "act": 0.033786868919974296,
        "assert": 0.033786868919974296,
        "comments": 0.033786868919974296,
        "minimal": 0.033786868919974296,
        "but": 0.033786868919974296,
        "intentional": 0.033786868919974296,
        "store": 0.033786868919974296,
        "regression": 0.033786868919974296,
        "generated": 0.033786868919974296,
        "slices": 0.033786868919974296,
        "data": 0.033786868919974296,
        "update": 0.033786868919974296,
        "them": 0.033786868919974296,
        "helper": 0.033786868919974296,
        "diffs": 0.033786868919974296,
        "reviewable": 0.033786868919974296,
        "commit": 0.033786868919974296,
        "pull": 0.033786868919974296,
        "request": 0.033786868919974296,
        "conventional": 0.033786868919974296,
        "feat": 0.033786868919974296,
        "fix": 0.033786868919974296,
        "docs": 0.033786868919974296,
        "subject": 0.033786868919974296,
        "lines": 0.033786868919974296,
        "72": 0.033786868919974296,
        "characters": 0.033786868919974296,
        "explain": 0.033786868919974296,
        "broader": 0.033786868919974296,
        "scope": 0.033786868919974296,
        "body": 0.033786868919974296,
        "multiple": 0.033786868919974296,
        "subsystems": 0.033786868919974296,
        "change": 0.033786868919974296,
        "bundle": 0.033786868919974296,
        "related": 0.033786868919974296,
        "work": 0.033786868919974296,
        "into": 0.033786868919974296,
        "pr": 0.033786868919974296,
        "includes": 0.033786868919974296,
        "summary": 0.033786868919974296,
        "notes": 0.033786868919974296,
        "links": 0.033786868919974296
      },
      "text": "# Repository Guidelines ## Project Structure & Module Organization - `spec/spec.md` captures the end-to-end architecture, component contracts, and must be updated whenever responsibilities shift. - Place Python source in a `docgen/` package (create it when implementation starts) with clear submodules for orchestrator, analyzers, runners, and stores; avoid leaving logic in the repo root. - Mirror runtime modules under `tests/` using `test_<module>.py`; co-locate fixtures in `tests/_fixtures/` so imports stay clean and reusable. - Keep throwaway experiments inside an ignored `sandbox/` directory so repository scans remain focused on production code paths. ## Build, Test, and Development Commands - `python -m venv .venv` followed by `.\\\\.venv\\\\Scripts\\\\activate` aligns local shells with the PyCharm interpreter settings. - `python -m pip install -e .[dev]` (after a `pyproject.toml` is committed) exposes the CLI and plugins in editable form without repeated reinstalls. - `python -m pytest` runs the full suite; append `-k <pattern>` to iterate on a single analyzer or pipeline stage. - `python -m mypy docgen` and `python -m ruff check docgen tests` catch type drift and lint violations before README generation is attempted. ## Coding Style & Naming Conventions - Follow PEP 8 with 4-space indents and explicit imports (for example, `from docgen.orchestrator import Pipeline`) so static tooling can trace dependencies. - Name modules after their roles (`orchestrator.py`, `prompt_builder.py`) and keep functions snake_case with descriptive nouns first (`build_prompt_section`). - Run `black docgen tests` before commits; avoid manual reformatting unless the formatter cannot resolve a construct. ## Testing Guidelines - Pytest is the default harness; every analyzer or pipeline component needs unit coverage plus an integration case under `tests/integration/` that walks a repo snapshot through generation. - Use descriptive test names such as `test_prompt_builder_handles_missing_signals` and keep Arrange-Act-Assert comments minimal but intentional. - Store regression fixtures for generated README slices under `tests/data/` and update them with helper scripts so diffs stay reviewable. ## Commit & Pull Request Guidelines - Follow Conventional Commits (`feat:`, `fix:`, `docs:`); keep subject lines <=72 characters and explain broader scope in the body when multiple subsystems change. - Bundle related work into a single PR that includes a summary, testing notes, and links to",
      "metadata": {
        "path": "AGENTS.md",
        "tags": [
          "docs"
        ],
        "hash": "dfeeea63c97ae7cb3036fbb0312edaee5f377b31178db6fbde6c843da7ceb8d2"
      }
    },
    {
      "id": "AGENTS.md#1",
      "vector": {
        "readme": 0.1270001270001905,
        "slices": 0.06350006350009525,
        "under": 0.06350006350009525,
        "tests": 0.06350006350009525,
        "data": 0.06350006350009525,
        "and": 0.4445004445006667,
        "update": 0.06350006350009525,
        "them": 0.06350006350009525,
        "with": 0.06350006350009525,
        "helper": 0.06350006350009525,
        "scripts": 0.06350006350009525,
        "so": 0.06350006350009525,
        "diffs": 0.06350006350009525,
        "stay": 0.06350006350009525,
        "reviewable": 0.06350006350009525,
        "commit": 0.1270001270001905,
        "pull": 0.06350006350009525,
        "request": 0.06350006350009525,
        "guidelines": 0.06350006350009525,
        "follow": 0.06350006350009525,
        "conventional": 0.06350006350009525,
        "commits": 0.06350006350009525,
        "feat": 0.06350006350009525,
        "fix": 0.06350006350009525,
        "docs": 0.1270001270001905,
        "keep": 0.1270001270001905,
        "subject": 0.06350006350009525,
        "lines": 0.06350006350009525,
        "72": 0.06350006350009525,
        "characters": 0.06350006350009525,
        "explain": 0.06350006350009525,
        "broader": 0.06350006350009525,
        "scope": 0.06350006350009525,
        "in": 0.254000254000381,
        "the": 0.31750031750047625,
        "body": 0.06350006350009525,
        "when": 0.1270001270001905,
        "multiple": 0.06350006350009525,
        "subsystems": 0.06350006350009525,
        "change": 0.06350006350009525,
        "bundle": 0.06350006350009525,
        "related": 0.06350006350009525,
        "work": 0.1270001270001905,
        "into": 0.06350006350009525,
        "a": 0.254000254000381,
        "single": 0.06350006350009525,
        "pr": 0.1270001270001905,
        "that": 0.06350006350009525,
        "includes": 0.06350006350009525,
        "summary": 0.06350006350009525,
        "testing": 0.06350006350009525,
        "notes": 0.1270001270001905,
        "links": 0.06350006350009525,
        "to": 0.06350006350009525,
        "relevant": 0.06350006350009525,
        "issues": 0.06350006350009525,
        "or": 0.06350006350009525,
        "spec": 0.06350006350009525,
        "sections": 0.06350006350009525,
        "attach": 0.06350006350009525,
        "before": 0.1270001270001905,
        "after": 0.06350006350009525,
        "excerpts": 0.06350006350009525,
        "altering": 0.06350006350009525,
        "generation": 0.06350006350009525,
        "output": 0.06350006350009525,
        "run": 0.06350006350009525,
        "lint": 0.06350006350009525,
        "type": 0.06350006350009525,
        "check": 0.06350006350009525,
        "test": 0.06350006350009525,
        "commands": 0.06350006350009525,
        "opening": 0.06350006350009525,
        "paste": 0.06350006350009525,
        "condensed": 0.06350006350009525,
        "results": 0.06350006350009525,
        "description": 0.06350006350009525,
        "for": 0.06350006350009525,
        "quick": 0.06350006350009525,
        "verification": 0.06350006350009525,
        "environment": 0.1270001270001905,
        "tooling": 0.06350006350009525,
        "reuse": 0.06350006350009525,
        "local": 0.1270001270001905,
        "venv": 0.06350006350009525,
        "seeded": 0.06350006350009525,
        "by": 0.1270001270001905,
        "pycharm": 0.06350006350009525,
        "do": 0.06350006350009525,
        "not": 0.06350006350009525,
        "artifacts": 0.06350006350009525,
        "store": 0.06350006350009525,
        "secrets": 0.06350006350009525,
        "env": 0.06350006350009525,
        "consumed": 0.06350006350009525,
        "llm": 0.06350006350009525,
        "runner": 0.06350006350009525,
        "large": 0.06350006350009525,
        "model": 0.06350006350009525,
        "weights": 0.06350006350009525,
        "outside": 0.06350006350009525,
        "repository": 0.06350006350009525,
        "document": 0.06350006350009525,
        "their": 0.06350006350009525,
        "locations": 0.06350006350009525,
        "models": 0.06350006350009525,
        "md": 0.06350006350009525,
        "once": 0.06350006350009525,
        "integration": 0.06350006350009525,
        "begins": 0.06350006350009525
      },
      "text": "README slices under `tests/data/` and update them with helper scripts so diffs stay reviewable. ## Commit & Pull Request Guidelines - Follow Conventional Commits (`feat:`, `fix:`, `docs:`); keep subject lines <=72 characters and explain broader scope in the body when multiple subsystems change. - Bundle related work into a single PR that includes a summary, testing notes, and links to relevant issues or spec sections; attach before/after README excerpts when altering generation output. - Run lint, type-check, and test commands before opening a PR and paste condensed results in the description for quick verification. ## Environment & Tooling Notes - Reuse the local `.venv` seeded by PyCharm; do not commit environment artifacts and store secrets in a `.env` consumed by the local LLM runner. - Keep large model weights outside the repository and document their locations in `docs/models.md` once integration work begins.",
      "metadata": {
        "path": "AGENTS.md",
        "tags": [
          "docs"
        ],
        "hash": "dfeeea63c97ae7cb3036fbb0312edaee5f377b31178db6fbde6c843da7ceb8d2"
      }
    },
    {
      "id": "README_before.md#0",
      "vector": {
        "docgen": 0.6611099775215866,
        "begin": 0.12592571000411173,
        "badges": 0.06296285500205587,
        "build": 0.15740713750513965,
        "status": 0.031481427501027934,
        "https": 0.0944442825030838,
        "img": 0.0944442825030838,
        "shields": 0.0944442825030838,
        "io": 0.0944442825030838,
        "badge": 0.0944442825030838,
        "pending": 0.031481427501027934,
        "lightgrey": 0.0944442825030838,
        "svg": 0.0944442825030838,
        "coverage": 0.06296285500205587,
        "review": 0.031481427501027934,
        "needed": 0.031481427501027934,
        "license": 0.12592571000411173,
        "tbd": 0.031481427501027934,
        "end": 0.0944442825030838,
        "toc": 0.06296285500205587,
        "table": 0.031481427501027934,
        "of": 0.031481427501027934,
        "contents": 0.031481427501027934,
        "features": 0.12592571000411173,
        "architecture": 0.06296285500205587,
        "high": 0.06296285500205587,
        "level": 0.06296285500205587,
        "flow": 0.06296285500205587,
        "component": 0.06296285500205587,
        "responsibilities": 0.06296285500205587,
        "artifacts": 0.06296285500205587,
        "and": 0.2833328475092514,
        "data": 0.06296285500205587,
        "stores": 0.06296285500205587,
        "pipeline": 0.06296285500205587,
        "sequence": 0.12592571000411173,
        "init": 0.0944442825030838,
        "patch": 0.06296285500205587,
        "update": 0.0944442825030838,
        "api": 0.06296285500205587,
        "signal": 0.06296285500205587,
        "extraction": 0.06296285500205587,
        "quick": 0.06296285500205587,
        "start": 0.06296285500205587,
        "configuration": 0.06296285500205587,
        "test": 0.06296285500205587,
        "deployment": 0.06296285500205587,
        "troubleshooting": 0.06296285500205587,
        "faq": 0.06296285500205587,
        "intro": 0.06296285500205587,
        "is": 0.031481427501027934,
        "a": 0.0944442825030838,
        "local": 0.0944442825030838,
        "first": 0.031481427501027934,
        "readme": 0.06296285500205587,
        "generator": 0.031481427501027934,
        "for": 0.0944442825030838,
        "polyglot": 0.031481427501027934,
        "repositories": 0.031481427501027934,
        "it": 0.031481427501027934,
        "scans": 0.031481427501027934,
        "every": 0.06296285500205587,
        "tracked": 0.031481427501027934,
        "file": 0.031481427501027934,
        "publishes": 0.031481427501027934,
        "analyzer": 0.06296285500205587,
        "signals": 0.0944442825030838,
        "retrieves": 0.031481427501027934,
        "grounded": 0.031481427501027934,
        "context": 0.06296285500205587,
        "guides": 0.031481427501027934,
        "llm": 0.06296285500205587,
        "through": 0.031481427501027934,
        "templated": 0.031481427501027934,
        "sections": 0.031481427501027934,
        "to": 0.031481427501027934,
        "produce": 0.031481427501027934,
        "or": 0.031481427501027934,
        "documentation": 0.031481427501027934,
        "this": 0.031481427501027934,
        "overview": 0.031481427501027934,
        "reflects": 0.031481427501027934,
        "complete": 0.031481427501027934,
        "pass": 0.031481427501027934,
        "across": 0.031481427501027934,
        "tests": 0.031481427501027934,
        "spec": 0.031481427501027934,
        "docs": 0.06296285500205587,
        "so": 0.031481427501027934,
        "contributors": 0.031481427501027934,
        "understand": 0.031481427501027934,
        "abstraction": 0.031481427501027934,
        "before": 0.031481427501027934,
        "running": 0.031481427501027934,
        "repository": 0.06296285500205587,
        "manifest": 0.031481427501027934,
        "caching": 0.031481427501027934,
        "repo_scanner": 0.031481427501027934,
        "py": 0.15740713750513965,
        "walks": 0.031481427501027934,
        "the": 0.031481427501027934,
        "tree": 0.031481427501027934,
        "respects": 0.031481427501027934,
        "gitignore": 0.031481427501027934,
        "yml": 0.031481427501027934,
        "hashes": 0.031481427501027934,
        "files": 0.031481427501027934,
        "persists": 0.031481427501027934,
        "manifest_cache": 0.031481427501027934,
        "json": 0.06296285500205587,
        "incremental": 0.031481427501027934,
        "runs": 0.031481427501027934,
        "plugin": 0.031481427501027934,
        "system": 0.031481427501027934,
        "analyzers": 0.031481427501027934,
        "discover": 0.031481427501027934,
        "language": 0.031481427501027934,
        "dependency": 0.031481427501027934,
        "entrypoint": 0.031481427501027934,
        "pattern": 0.031481427501027934,
        "structure": 0.031481427501027934,
        "that": 0.031481427501027934,
        "describe": 0.031481427501027934,
        "frameworks": 0.031481427501027934,
        "commands": 0.06296285500205587,
        "apis": 0.031481427501027934,
        "entities": 0.031481427501027934,
        "topology": 0.031481427501027934,
        "template": 0.031481427501027934,
        "driven": 0.031481427501027934,
        "prompting": 0.06296285500205587,
        "builder": 0.031481427501027934,
        "merges": 0.031481427501027934,
        "with": 0.031481427501027934,
        "jinja": 0.031481427501027934,
        "templates": 0.031481427501027934,
        "validates": 0.031481427501027934,
        "applies": 0.031481427501027934,
        "style": 0.031481427501027934,
        "presets": 0.031481427501027934,
        "injects": 0.031481427501027934,
        "retrieved": 0.031481427501027934,
        "per": 0.031481427501027934,
        "section": 0.06296285500205587,
        "lightweight": 0.031481427501027934,
        "rag": 0.06296285500205587,
        "index": 0.031481427501027934,
        "indexer": 0.031481427501027934,
        "embedder": 0.031481427501027934,
        "store": 0.031481427501027934,
        "embed": 0.031481427501027934,
        "source": 0.031481427501027934,
        "excerpts": 0.031481427501027934,
        "into": 0.031481427501027934,
        "embeddings": 0.031481427501027934,
        "scoped": 0.031481427501027934,
        "retrieval": 0.031481427501027934,
        "enforcement": 0.031481427501027934
      },
      "text": "# docgen <!-- docgen:begin:badges --> [![Build Status](https://img.shields.io/badge/build-pending-lightgrey.svg)](#) [![Coverage](https://img.shields.io/badge/coverage-review--needed-lightgrey.svg)](#) [![License](https://img.shields.io/badge/license-tbd-lightgrey.svg)](#) <!-- docgen:end:badges --> <!-- docgen:begin:toc --> ## Table of Contents - [Features](#features) - [Architecture](#architecture) - [High-Level Flow](#high-level-flow) - [Component Responsibilities](#component-responsibilities) - [Artifacts and Data Stores](#artifacts-and-data-stores) - [Pipeline Sequence (`docgen init`)](#pipeline-sequence-docgen-init) - [Patch Sequence (`docgen update`)](#patch-sequence-docgen-update) - [API Signal Extraction](#api-signal-extraction) - [Quick Start](#quick-start) - [Configuration](#configuration) - [Build & Test](#build-test) - [Deployment](#deployment) - [Troubleshooting](#troubleshooting) - [FAQ](#faq) - [License](#license) <!-- docgen:end:toc --> <!-- docgen:begin:intro --> docgen is a local-first README generator for polyglot repositories. It scans every tracked file, publishes analyzer signals, retrieves grounded context, and guides a local LLM through templated sections to produce or update documentation. This overview reflects a complete pass across `docgen/`, `tests/`, `spec/`, and `docs/` so contributors understand every abstraction before running `docgen init`. <!-- docgen:end:intro --> ## Features <!-- docgen:begin:features --> - **Repository manifest & caching** - `docgen/repo_scanner.py` walks the tree, respects `.gitignore`/`.docgen.yml`, hashes files, and persists `manifest_cache.json` for incremental runs. - **Analyzer plugin system** - `docgen/analyzers/*` discover language, build, dependency, entrypoint, pattern, and structure signals that describe frameworks, commands, APIs, entities, and repository topology. - **Template-driven prompting** - `docgen/prompting/builder.py` merges signals with Jinja templates, validates commands, applies style presets, and injects retrieved context per section. - **Lightweight RAG index** - `docgen/rag/indexer.py`, `embedder.py`, and `store.py` embed README/docs/source excerpts into `.docgen/embeddings.json` for section-scoped retrieval. - **Local LLM enforcement** -",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#1",
      "vector": {
        "docgen": 0.48261708906584017,
        "prompting": 0.06434894520877868,
        "builder": 0.03217447260438934,
        "py": 0.3217447260438934,
        "merges": 0.03217447260438934,
        "signals": 0.03217447260438934,
        "with": 0.06434894520877868,
        "jinja": 0.06434894520877868,
        "templates": 0.06434894520877868,
        "validates": 0.03217447260438934,
        "commands": 0.03217447260438934,
        "applies": 0.03217447260438934,
        "style": 0.03217447260438934,
        "presets": 0.03217447260438934,
        "and": 0.2252213082307254,
        "injects": 0.03217447260438934,
        "retrieved": 0.03217447260438934,
        "context": 0.03217447260438934,
        "per": 0.03217447260438934,
        "section": 0.06434894520877868,
        "lightweight": 0.03217447260438934,
        "rag": 0.1608723630219467,
        "index": 0.03217447260438934,
        "indexer": 0.03217447260438934,
        "embedder": 0.03217447260438934,
        "store": 0.03217447260438934,
        "embed": 0.03217447260438934,
        "readme": 0.09652341781316803,
        "docs": 0.03217447260438934,
        "source": 0.03217447260438934,
        "excerpts": 0.03217447260438934,
        "into": 0.03217447260438934,
        "embeddings": 0.06434894520877868,
        "json": 0.06434894520877868,
        "for": 0.03217447260438934,
        "scoped": 0.03217447260438934,
        "retrieval": 0.03217447260438934,
        "local": 0.06434894520877868,
        "llm": 0.19304683562633607,
        "enforcement": 0.03217447260438934,
        "runner": 0.06434894520877868,
        "targets": 0.03217447260438934,
        "loopback": 0.03217447260438934,
        "model": 0.06434894520877868,
        "or": 0.06434894520877868,
        "ollama": 0.03217447260438934,
        "blocks": 0.03217447260438934,
        "remote": 0.03217447260438934,
        "hosts": 0.03217447260438934,
        "exposes": 0.03217447260438934,
        "configurable": 0.03217447260438934,
        "temperature": 0.03217447260438934,
        "token": 0.03217447260438934,
        "limits": 0.03217447260438934,
        "post": 0.2252213082307254,
        "processing": 0.09652341781316803,
        "contract": 0.03217447260438934,
        "postproc": 0.03217447260438934,
        "add": 0.03217447260438934,
        "badges": 0.06434894520877868,
        "rebuild": 0.03217447260438934,
        "the": 0.1608723630219467,
        "toc": 0.06434894520877868,
        "lint": 0.06434894520877868,
        "markdown": 0.03217447260438934,
        "validate": 0.03217447260438934,
        "links": 0.06434894520877868,
        "manage": 0.03217447260438934,
        "markers": 0.03217447260438934,
        "compute": 0.03217447260438934,
        "scorecards": 0.03217447260438934,
        "saved": 0.03217447260438934,
        "to": 0.09652341781316803,
        "scorecard": 0.06434894520877868,
        "git": 0.1608723630219467,
        "aware": 0.03217447260438934,
        "publishing": 0.06434894520877868,
        "diff": 0.03217447260438934,
        "maps": 0.03217447260438934,
        "changed": 0.03217447260438934,
        "files": 0.03217447260438934,
        "sections": 0.03217447260438934,
        "while": 0.03217447260438934,
        "publisher": 0.06434894520877868,
        "commits": 0.03217447260438934,
        "opens": 0.03217447260438934,
        "prs": 0.03217447260438934,
        "generated": 0.03217447260438934,
        "deltas": 0.03217447260438934,
        "via": 0.03217447260438934,
        "github": 0.03217447260438934,
        "cli": 0.19304683562633607,
        "resilient": 0.03217447260438934,
        "ux": 0.03217447260438934,
        "failsafe": 0.03217447260438934,
        "provide": 0.03217447260438934,
        "verbose": 0.03217447260438934,
        "logging": 0.03217447260438934,
        "hooks": 0.03217447260438934,
        "dry": 0.03217447260438934,
        "run": 0.03217447260438934,
        "preview": 0.03217447260438934,
        "support": 0.03217447260438934,
        "fallback": 0.03217447260438934,
        "stubs": 0.03217447260438934,
        "when": 0.03217447260438934,
        "pipeline": 0.06434894520877868,
        "cannot": 0.03217447260438934,
        "complete": 0.03217447260438934,
        "end": 0.09652341781316803,
        "features": 0.03217447260438934,
        "architecture": 0.06434894520877868,
        "begin": 0.03217447260438934,
        "high": 0.03217447260438934,
        "level": 0.03217447260438934,
        "flow": 0.03217447260438934,
        "orchestrator": 0.09652341781316803,
        "coordinates": 0.03217447260438934,
        "described": 0.03217447260438934,
        "in": 0.03217447260438934,
        "spec": 0.06434894520877868,
        "md": 0.06434894520877868,
        "composing": 0.03217447260438934,
        "scanners": 0.03217447260438934,
        "analyzers": 0.06434894520877868,
        "services": 0.03217447260438934,
        "mermaid": 0.03217447260438934,
        "flowchart": 0.03217447260438934,
        "lr": 0.03217447260438934,
        "init": 0.03217447260438934,
        "update": 0.03217447260438934,
        "orc": 0.2573957808351147,
        "scan": 0.06434894520877868,
        "reposcanner": 0.03217447260438934,
        "n": 0.2252213082307254,
        "manifest": 0.03217447260438934,
        "ana": 0.06434894520877868,
        "language": 0.03217447260438934,
        "build": 0.03217447260438934,
        "etc": 0.03217447260438934,
        "ragindexer": 0.03217447260438934,
        "prompt": 0.1608723630219467,
        "promptbuilder": 0.03217447260438934,
        "llmrunner": 0.03217447260438934,
        "commit": 0.03217447260438934,
        "pr": 0.03217447260438934,
        "output": 0.06434894520877868,
        "artifacts": 0.03217447260438934,
        "component": 0.03217447260438934,
        "responsibilities": 0.03217447260438934,
        "layer": 0.03217447260438934,
        "key": 0.03217447260438934
      },
      "text": "- `docgen/prompting/builder.py` merges signals with Jinja templates, validates commands, applies style presets, and injects retrieved context per section. - **Lightweight RAG index** - `docgen/rag/indexer.py`, `embedder.py`, and `store.py` embed README/docs/source excerpts into `.docgen/embeddings.json` for section-scoped retrieval. - **Local LLM enforcement** - `docgen/llm/runner.py` targets loopback Model Runner or Ollama, blocks remote hosts, and exposes configurable temperature/token limits. - **Post-processing contract** - `docgen/postproc/*` add badges, rebuild the ToC, lint markdown, validate links, manage markers, and compute scorecards saved to `.docgen/scorecard.json`. - **Git-aware publishing** - `docgen/git/diff.py` maps changed files to sections while `docgen/git/publisher.py` commits or opens PRs with generated README deltas via the GitHub CLI. - **Resilient CLI UX** - `docgen/cli.py` and `docgen/failsafe.py` provide verbose logging hooks, dry-run preview support, and fallback stubs when the LLM pipeline cannot complete. <!-- docgen:end:features --> ## Architecture <!-- docgen:begin:architecture --> ### High-Level Flow The orchestrator (`docgen/orchestrator.py`) coordinates the end-to-end pipeline described in `spec/spec.md`, composing scanners, analyzers, prompting, RAG, post-processing, and publishing services. ```mermaid flowchart LR CLI[\"CLI (docgen init/update)\"] Orc[\"Orchestrator\"] Scan[\"RepoScanner\\n(manifest)\"] Ana[\"Analyzers\\n(language/build/etc)\"] RAG[\"RAGIndexer\\n(embeddings)\"] Prompt[\"PromptBuilder\\n(Jinja templates)\"] LLM[\"LLMRunner\\n(local model)\"] Post[\"Post-Processing\\n(lint, ToC, badges, links, scorecard)\"] Git[\"Publisher\\n(commit/PR)\"] Output[\"README.md + .docgen artifacts\"] CLI --> Orc Orc --> Scan Orc --> Ana Orc --> RAG Orc --> Prompt Prompt --> LLM LLM --> Prompt Prompt --> Orc Orc --> Post Post --> Output Post --> Git ``` ### Component Responsibilities | Layer | Key",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#2",
      "vector": {
        "orc": 0.2960684541064695,
        "scan": 0.042295493443781355,
        "ana": 0.042295493443781355,
        "rag": 0.12688648033134406,
        "prompt": 0.16918197377512542,
        "llm": 0.16918197377512542,
        "post": 0.16918197377512542,
        "output": 0.042295493443781355,
        "git": 0.042295493443781355,
        "component": 0.042295493443781355,
        "responsibilities": 0.042295493443781355,
        "layer": 0.042295493443781355,
        "key": 0.042295493443781355,
        "modules": 0.08459098688756271,
        "purpose": 0.042295493443781355,
        "cli": 0.12688648033134406,
        "logging": 0.08459098688756271,
        "docgen": 0.46525042788159493,
        "py": 0.42295493443781357,
        "parses": 0.08459098688756271,
        "subcommands": 0.042295493443781355,
        "wires": 0.042295493443781355,
        "verbose": 0.042295493443781355,
        "and": 0.33836394755025084,
        "configures": 0.042295493443781355,
        "namespaced": 0.042295493443781355,
        "loggers": 0.042295493443781355,
        "configuration": 0.042295493443781355,
        "config": 0.042295493443781355,
        "yml": 0.042295493443781355,
        "into": 0.042295493443781355,
        "docgenconfig": 0.042295493443781355,
        "llmconfig": 0.042295493443781355,
        "publishconfig": 0.042295493443781355,
        "analyzerconfig": 0.042295493443781355,
        "ciconfig": 0.042295493443781355,
        "with": 0.042295493443781355,
        "a": 0.042295493443781355,
        "handwritten": 0.042295493443781355,
        "yaml": 0.042295493443781355,
        "fallback": 0.042295493443781355,
        "repository": 0.042295493443781355,
        "scanning": 0.042295493443781355,
        "repo_scanner": 0.042295493443781355,
        "builds": 0.08459098688756271,
        "repomanifest": 0.042295493443781355,
        "of": 0.08459098688756271,
        "filemeta": 0.042295493443781355,
        "entries": 0.042295493443781355,
        "enforces": 0.042295493443781355,
        "ignore": 0.042295493443781355,
        "rules": 0.042295493443781355,
        "infers": 0.042295493443781355,
        "file": 0.042295493443781355,
        "roles": 0.042295493443781355,
        "caches": 0.042295493443781355,
        "hashes": 0.042295493443781355,
        "in": 0.042295493443781355,
        "manifest_cache": 0.042295493443781355,
        "json": 0.042295493443781355,
        "analyzer": 0.042295493443781355,
        "plugins": 0.042295493443781355,
        "analyzers": 0.042295493443781355,
        "emit": 0.042295493443781355,
        "signal": 0.042295493443781355,
        "objects": 0.042295493443781355,
        "for": 0.042295493443781355,
        "languages": 0.042295493443781355,
        "frameworks": 0.042295493443781355,
        "build": 0.042295493443781355,
        "tools": 0.042295493443781355,
        "dependencies": 0.042295493443781355,
        "entrypoints": 0.042295493443781355,
        "structural": 0.042295493443781355,
        "api": 0.042295493443781355,
        "routes": 0.042295493443781355,
        "entities": 0.042295493443781355,
        "patterns": 0.042295493443781355,
        "monorepo": 0.042295493443781355,
        "hints": 0.042295493443781355,
        "prompting": 0.08459098688756271,
        "builder": 0.042295493443781355,
        "templates": 0.08459098688756271,
        "groups": 0.042295493443781355,
        "signals": 0.042295493443781355,
        "retrieves": 0.042295493443781355,
        "context": 0.08459098688756271,
        "renders": 0.042295493443781355,
        "section": 0.08459098688756271,
        "performs": 0.042295493443781355,
        "command": 0.042295493443781355,
        "validation": 0.042295493443781355,
        "estimates": 0.042295493443781355,
        "token": 0.042295493443781355,
        "budgets": 0.042295493443781355,
        "retrieval": 0.042295493443781355,
        "indexer": 0.042295493443781355,
        "embedder": 0.042295493443781355,
        "store": 0.042295493443781355,
        "constants": 0.042295493443781355,
        "chunks": 0.042295493443781355,
        "readme": 0.042295493443781355,
        "docs": 0.042295493443781355,
        "source": 0.042295493443781355,
        "files": 0.042295493443781355,
        "computes": 0.042295493443781355,
        "bag": 0.042295493443781355,
        "words": 0.042295493443781355,
        "embeddings": 0.042295493443781355,
        "persists": 0.042295493443781355,
        "per": 0.042295493443781355,
        "prunes": 0.042295493443781355,
        "stale": 0.042295493443781355,
        "vectors": 0.042295493443781355,
        "runtime": 0.042295493443781355,
        "runner": 0.042295493443781355,
        "chooses": 0.042295493443781355,
        "http": 0.042295493443781355,
        "or": 0.042295493443781355,
        "execution": 0.042295493443781355,
        "openai": 0.042295493443781355,
        "compatible": 0.042295493443781355,
        "payloads": 0.042295493443781355,
        "restricts": 0.042295493443781355,
        "to": 0.042295493443781355,
        "loopback": 0.042295493443781355,
        "hosts": 0.042295493443781355,
        "normalizes": 0.042295493443781355,
        "responses": 0.042295493443781355,
        "processing": 0.042295493443781355,
        "postproc": 0.042295493443781355,
        "manages": 0.042295493443781355,
        "markers": 0.042295493443781355,
        "regenerates": 0.042295493443781355,
        "toc": 0.042295493443781355,
        "applies": 0.042295493443781355,
        "badges": 0.042295493443781355,
        "lints": 0.042295493443781355,
        "markdown": 0.042295493443781355,
        "validates": 0.042295493443781355,
        "links": 0.042295493443781355
      },
      "text": "--> Orc Orc --> Scan Orc --> Ana Orc --> RAG Orc --> Prompt Prompt --> LLM LLM --> Prompt Prompt --> Orc Orc --> Post Post --> Output Post --> Git ``` ### Component Responsibilities | Layer | Key modules | Purpose | | --- | --- | --- | | CLI & Logging | `docgen/cli.py`, `docgen/logging.py` | Parses subcommands, wires `--verbose`, and configures namespaced loggers. | | Configuration | `docgen/config.py` | Parses `.docgen.yml` into `DocGenConfig`, `LLMConfig`, `PublishConfig`, `AnalyzerConfig`, and `CIConfig`, with a handwritten YAML fallback. | | Repository scanning | `docgen/repo_scanner.py` | Builds `RepoManifest` of `FileMeta` entries, enforces ignore rules, infers file roles, and caches hashes in `.docgen/manifest_cache.json`. | | Analyzer plugins | `docgen/analyzers/*` | Emit `Signal` objects for languages, frameworks, build tools, dependencies, entrypoints, structural modules, API routes, entities, patterns, and monorepo hints. | | Prompting | `docgen/prompting/builder.py`, `templates/` | Groups signals, retrieves context, renders section templates, performs command validation, and estimates token budgets. | | Retrieval (RAG) | `docgen/rag/indexer.py`, `embedder.py`, `store.py`, `constants.py` | Chunks README/docs/source files, computes bag-of-words embeddings, persists context per section, and prunes stale vectors. | | LLM runtime | `docgen/llm/runner.py` | Chooses HTTP or CLI execution, builds OpenAI-compatible payloads, restricts to loopback hosts, and normalizes responses. | | Post-processing | `docgen/postproc/*` | Manages markers, regenerates ToC, applies badges, lints markdown, validates links, and",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#3",
      "vector": {
        "vectors": 0.08497185773241747,
        "llm": 0.12745778659862622,
        "runtime": 0.08497185773241747,
        "docgen": 0.4248592886620874,
        "runner": 0.08497185773241747,
        "py": 0.16994371546483494,
        "chooses": 0.042485928866208736,
        "http": 0.042485928866208736,
        "or": 0.12745778659862622,
        "cli": 0.16994371546483494,
        "execution": 0.042485928866208736,
        "builds": 0.042485928866208736,
        "openai": 0.042485928866208736,
        "compatible": 0.042485928866208736,
        "payloads": 0.042485928866208736,
        "restricts": 0.042485928866208736,
        "to": 0.08497185773241747,
        "loopback": 0.042485928866208736,
        "hosts": 0.042485928866208736,
        "and": 0.3398874309296699,
        "normalizes": 0.042485928866208736,
        "responses": 0.042485928866208736,
        "post": 0.08497185773241747,
        "processing": 0.08497185773241747,
        "postproc": 0.042485928866208736,
        "manages": 0.042485928866208736,
        "markers": 0.042485928866208736,
        "regenerates": 0.042485928866208736,
        "toc": 0.042485928866208736,
        "applies": 0.042485928866208736,
        "badges": 0.042485928866208736,
        "lints": 0.042485928866208736,
        "markdown": 0.042485928866208736,
        "validates": 0.042485928866208736,
        "links": 0.042485928866208736,
        "records": 0.042485928866208736,
        "readme": 0.08497185773241747,
        "quality": 0.08497185773241747,
        "metrics": 0.042485928866208736,
        "git": 0.2124296443310437,
        "integration": 0.042485928866208736,
        "diff": 0.042485928866208736,
        "publisher": 0.08497185773241747,
        "maps": 0.042485928866208736,
        "file": 0.08497185773241747,
        "diffs": 0.042485928866208736,
        "affected": 0.042485928866208736,
        "sections": 0.08497185773241747,
        "handles": 0.042485928866208736,
        "staged": 0.042485928866208736,
        "changes": 0.042485928866208736,
        "pushes": 0.042485928866208736,
        "commits": 0.08497185773241747,
        "prs": 0.08497185773241747,
        "with": 0.08497185773241747,
        "optional": 0.042485928866208736,
        "labels": 0.042485928866208736,
        "safety": 0.042485928866208736,
        "nets": 0.042485928866208736,
        "failsafe": 0.042485928866208736,
        "generates": 0.042485928866208736,
        "placeholder": 0.042485928866208736,
        "full": 0.042485928866208736,
        "stubs": 0.08497185773241747,
        "when": 0.042485928866208736,
        "prompting": 0.08497185773241747,
        "fails": 0.042485928866208736,
        "reference": 0.042485928866208736,
        "material": 0.042485928866208736,
        "spec": 0.16994371546483494,
        "md": 0.16994371546483494,
        "feature_order": 0.042485928866208736,
        "feature_checklist": 0.042485928866208736,
        "docs": 0.042485928866208736,
        "ci": 0.08497185773241747,
        "agents": 0.042485928866208736,
        "capture": 0.042485928866208736,
        "architectural": 0.042485928866208736,
        "contracts": 0.042485928866208736,
        "delivery": 0.042485928866208736,
        "roadmap": 0.042485928866208736,
        "feature": 0.042485928866208736,
        "status": 0.042485928866208736,
        "playbooks": 0.042485928866208736,
        "agent": 0.042485928866208736,
        "guidance": 0.042485928866208736,
        "tests": 0.08497185773241747,
        "mirroring": 0.042485928866208736,
        "modules": 0.042485928866208736,
        "pytest": 0.042485928866208736,
        "suite": 0.042485928866208736,
        "covering": 0.042485928866208736,
        "orchestrator": 0.08497185773241747,
        "analyzers": 0.042485928866208736,
        "workflows": 0.042485928866208736,
        "helpers": 0.042485928866208736,
        "artifacts": 0.042485928866208736,
        "data": 0.042485928866208736,
        "stores": 0.042485928866208736,
        "manifest_cache": 0.042485928866208736,
        "json": 0.12745778659862622,
        "cache": 0.042485928866208736,
        "of": 0.08497185773241747,
        "sizes": 0.042485928866208736,
        "mtimes": 0.042485928866208736,
        "hashes": 0.042485928866208736,
        "for": 0.042485928866208736,
        "fast": 0.042485928866208736,
        "re": 0.042485928866208736,
        "scans": 0.042485928866208736,
        "embeddings": 0.042485928866208736,
        "persisted": 0.042485928866208736,
        "embedding": 0.042485928866208736,
        "keyed": 0.042485928866208736,
        "by": 0.08497185773241747,
        "section": 0.042485928866208736,
        "tag": 0.042485928866208736,
        "via": 0.042485928866208736,
        "embeddingstore": 0.042485928866208736,
        "scorecard": 0.042485928866208736,
        "output": 0.042485928866208736,
        "readmescorecard": 0.042485928866208736,
        "evaluate": 0.042485928866208736,
        "tracking": 0.042485928866208736,
        "coverage": 0.042485928866208736,
        "link": 0.042485928866208736,
        "health": 0.042485928866208736,
        "quick": 0.042485928866208736,
        "start": 0.042485928866208736,
        "metadata": 0.042485928866208736,
        "branches": 0.042485928866208736,
        "created": 0.042485928866208736,
        "summaries": 0.042485928866208736,
        "from": 0.042485928866208736,
        "diffanalyzer": 0.042485928866208736,
        "pipeline": 0.042485928866208736,
        "sequence": 0.042485928866208736,
        "init": 0.042485928866208736,
        "mermaid": 0.042485928866208736,
        "sequencediagram": 0.042485928866208736,
        "participant": 0.25491557319725244,
        "dev": 0.042485928866208736,
        "as": 0.25491557319725244,
        "developer": 0.042485928866208736,
        "orc": 0.042485928866208736,
        "scan": 0.042485928866208736,
        "reposcanner": 0.042485928866208736,
        "ana": 0.042485928866208736,
        "analyzer": 0.042485928866208736,
        "plugins": 0.042485928866208736,
        "rag": 0.042485928866208736
      },
      "text": "vectors. | | LLM runtime | `docgen/llm/runner.py` | Chooses HTTP or CLI execution, builds OpenAI-compatible payloads, restricts to loopback hosts, and normalizes responses. | | Post-processing | `docgen/postproc/*` | Manages markers, regenerates ToC, applies badges, lints markdown, validates links, and records README quality metrics. | | Git integration | `docgen/git/diff.py`, `docgen/git/publisher.py` | Maps file diffs to affected sections, handles staged changes, and pushes commits or PRs with optional labels. | | Safety nets | `docgen/failsafe.py` | Generates placeholder sections or full README stubs when prompting fails. | | Reference material | `spec/spec.md`, `spec/feature_order.md`, `spec/feature_checklist.md`, `docs/ci/*`, `AGENTS.md` | Capture architectural contracts, delivery roadmap, feature status, CI playbooks, and agent guidance. | | Tests | `tests/` mirroring runtime modules | Pytest suite covering CLI, orchestrator, analyzers, prompting, git workflows, LLM runner stubs, and post-processing helpers. | ### Artifacts and Data Stores - `.docgen/manifest_cache.json` - cache of file sizes, mtimes, and hashes for fast re-scans. - `.docgen/embeddings.json` - persisted embedding vectors keyed by section/tag via `EmbeddingStore`. - `.docgen/scorecard.json` - output of `ReadmeScorecard.evaluate`, tracking coverage, link health, and quick-start quality. - Git metadata - branches/commits/PRs created by `Publisher` with summaries from `DiffAnalyzer`. ### Pipeline Sequence (`docgen init`) ```mermaid sequenceDiagram participant Dev as Developer participant CLI as docgen CLI participant Orc as Orchestrator participant Scan as RepoScanner participant Ana as Analyzer plugins participant RAG as",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#4",
      "vector": {
        "branches": 0.01984580179179854,
        "commits": 0.01984580179179854,
        "prs": 0.01984580179179854,
        "created": 0.01984580179179854,
        "by": 0.01984580179179854,
        "publisher": 0.03969160358359708,
        "with": 0.01984580179179854,
        "summaries": 0.01984580179179854,
        "from": 0.01984580179179854,
        "diffanalyzer": 0.03969160358359708,
        "pipeline": 0.01984580179179854,
        "sequence": 0.03969160358359708,
        "docgen": 0.11907481075079124,
        "init": 0.03969160358359708,
        "mermaid": 0.03969160358359708,
        "sequencediagram": 0.03969160358359708,
        "participant": 0.4167618376277693,
        "dev": 0.07938320716719416,
        "as": 0.4167618376277693,
        "developer": 0.03969160358359708,
        "cli": 0.15876641433438832,
        "orc": 0.6152198555457548,
        "orchestrator": 0.03969160358359708,
        "scan": 0.15876641433438832,
        "reposcanner": 0.03969160358359708,
        "ana": 0.11907481075079124,
        "analyzer": 0.03969160358359708,
        "plugins": 0.03969160358359708,
        "rag": 0.11907481075079124,
        "ragindexer": 0.03969160358359708,
        "prompt": 0.17861221612618686,
        "promptbuilder": 0.03969160358359708,
        "llm": 0.05953740537539562,
        "llmrunner": 0.01984580179179854,
        "post": 0.15876641433438832,
        "processing": 0.03969160358359708,
        "fs": 0.03969160358359708,
        "filesystem": 0.01984580179179854,
        "run_init": 0.01984580179179854,
        "path": 0.03969160358359708,
        "repomanifest": 0.03969160358359708,
        "filemeta": 0.01984580179179854,
        "analyze": 0.03969160358359708,
        "manifest": 0.0992290089589927,
        "signal": 0.03969160358359708,
        "build": 0.05953740537539562,
        "contexts": 0.03969160358359708,
        "per": 0.01984580179179854,
        "section": 0.07938320716719416,
        "signals": 0.01984580179179854,
        "invoke": 0.01984580179179854,
        "system": 0.01984580179179854,
        "markdown": 0.05953740537539562,
        "full": 0.01984580179179854,
        "readme": 0.07938320716719416,
        "draft": 0.01984580179179854,
        "lint": 0.03969160358359708,
        "toc": 0.03969160358359708,
        "badges": 0.03969160358359708,
        "links": 0.01984580179179854,
        "scorecard": 0.03969160358359708,
        "final": 0.03969160358359708,
        "quality": 0.01984580179179854,
        "report": 0.01984580179179854,
        "write": 0.01984580179179854,
        "md": 0.01984580179179854,
        "git": 0.01984580179179854,
        "optional": 0.01984580179179854,
        "commit": 0.05953740537539562,
        "publish": 0.01984580179179854,
        "mode": 0.01984580179179854,
        "patch": 0.01984580179179854,
        "update": 0.03969160358359708,
        "ci": 0.01984580179179854,
        "diff": 0.0992290089589927,
        "mark": 0.05953740537539562,
        "markermanager": 0.01984580179179854,
        "pub": 0.03969160358359708,
        "base": 0.05953740537539562,
        "ref": 0.01984580179179854,
        "run_update": 0.01984580179179854,
        "compute": 0.01984580179179854,
        "repo": 0.01984580179179854,
        "diffresult": 0.01984580179179854,
        "changed_files": 0.01984580179179854,
        "sections": 0.05953740537539562,
        "context": 0.01984580179179854,
        "snippets": 0.01984580179179854,
        "render_sections": 0.01984580179179854,
        "new": 0.01984580179179854,
        "bodies": 0.01984580179179854,
        "replace": 0.01984580179179854,
        "patched": 0.01984580179179854,
        "link": 0.01984580179179854,
        "check": 0.01984580179179854
      },
      "text": "branches/commits/PRs created by `Publisher` with summaries from `DiffAnalyzer`. ### Pipeline Sequence (`docgen init`) ```mermaid sequenceDiagram participant Dev as Developer participant CLI as docgen CLI participant Orc as Orchestrator participant Scan as RepoScanner participant Ana as Analyzer plugins participant RAG as RAGIndexer participant Prompt as PromptBuilder participant LLM as LLMRunner participant Post as Post-processing participant FS as Filesystem Dev->>CLI: docgen init . CLI->>Orc: run_init(path) Orc->>Scan: scan() Scan-->>Orc: RepoManifest(FileMeta[]) Orc->>Ana: analyze(manifest) Ana-->>Orc: Signal[] Orc->>RAG: build(manifest) RAG-->>Orc: contexts per section Orc->>Prompt: build(manifest, signals, contexts) Prompt->>LLM: invoke(system, prompt) LLM-->>Prompt: section markdown Prompt-->>Orc: full README draft Orc->>Post: lint -> toc -> badges -> links -> scorecard Post-->>Orc: final markdown + quality report Orc->>FS: write README.md Orc->>Git: optional commit (publish mode \"commit\") ``` ### Patch Sequence (`docgen update`) ```mermaid sequenceDiagram participant Dev as Developer/CI participant CLI as docgen CLI participant Orc as Orchestrator participant Diff as DiffAnalyzer participant Scan as RepoScanner participant Ana as Analyzer plugins participant RAG as RAGIndexer participant Prompt as PromptBuilder participant Mark as MarkerManager participant Post as Post-processing participant Pub as Publisher Dev->>CLI: docgen update --diff-base <ref> CLI->>Orc: run_update(path, base) Orc->>Diff: compute(repo, base) Diff-->>Orc: DiffResult(changed_files, sections) Orc->>Scan: scan() Scan-->>Orc: RepoManifest Orc->>Ana: analyze(manifest) Ana-->>Orc: Signal[] Orc->>RAG: build(manifest, sections) RAG-->>Orc: context snippets Orc->>Prompt: render_sections(sections) Prompt-->>Orc: new section bodies Orc->>Mark: replace(markdown, section) Mark-->>Orc: patched README Orc->>Post: lint/toc/badges/link check/scorecard Post-->>Orc: final README + diff Orc->>Pub: commit",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#5",
      "vector": {
        "base": 0.03639372626234195,
        "diff": 0.0727874525246839,
        "orc": 0.5095121676727873,
        "diffresult": 0.03639372626234195,
        "changed_files": 0.03639372626234195,
        "sections": 0.1455749050493678,
        "scan": 0.10918117878702585,
        "repomanifest": 0.03639372626234195,
        "ana": 0.0727874525246839,
        "analyze": 0.03639372626234195,
        "manifest": 0.10918117878702585,
        "signal": 0.1455749050493678,
        "rag": 0.0727874525246839,
        "build": 0.0727874525246839,
        "context": 0.03639372626234195,
        "snippets": 0.03639372626234195,
        "prompt": 0.0727874525246839,
        "render_sections": 0.03639372626234195,
        "new": 0.03639372626234195,
        "section": 0.0727874525246839,
        "bodies": 0.03639372626234195,
        "mark": 0.0727874525246839,
        "replace": 0.03639372626234195,
        "markdown": 0.03639372626234195,
        "patched": 0.03639372626234195,
        "readme": 0.0727874525246839,
        "post": 0.1455749050493678,
        "lint": 0.03639372626234195,
        "toc": 0.03639372626234195,
        "badges": 0.03639372626234195,
        "link": 0.03639372626234195,
        "check": 0.03639372626234195,
        "scorecard": 0.03639372626234195,
        "final": 0.03639372626234195,
        "pub": 0.03639372626234195,
        "commit": 0.03639372626234195,
        "or": 0.03639372626234195,
        "pr": 0.03639372626234195,
        "branch": 0.03639372626234195,
        "title": 0.03639372626234195,
        "body": 0.03639372626234195,
        "api": 0.2911498100987356,
        "extraction": 0.03639372626234195,
        "structureanalyzer": 0.03639372626234195,
        "inspects": 0.03639372626234195,
        "source": 0.03639372626234195,
        "files": 0.0727874525246839,
        "for": 0.03639372626234195,
        "fastapi": 0.10918117878702585,
        "decorators": 0.03639372626234195,
        "express": 0.03639372626234195,
        "route": 0.03639372626234195,
        "calls": 0.0727874525246839,
        "and": 0.3275435363610775,
        "pydantic": 0.03639372626234195,
        "orm": 0.03639372626234195,
        "entities": 0.03639372626234195,
        "each": 0.03639372626234195,
        "match": 0.03639372626234195,
        "emits": 0.03639372626234195,
        "metadata": 0.03639372626234195,
        "such": 0.03639372626234195,
        "as": 0.18196863131170973,
        "handler": 0.03639372626234195,
        "names": 0.03639372626234195,
        "http": 0.03639372626234195,
        "verbs": 0.03639372626234195,
        "detected": 0.03639372626234195,
        "external": 0.0727874525246839,
        "requests": 0.0727874525246839,
        "session": 0.0727874525246839,
        "db": 0.1455749050493678,
        "assembled": 0.03639372626234195,
        "sequence": 0.03639372626234195,
        "steps": 0.03639372626234195,
        "that": 0.0727874525246839,
        "downstream": 0.03639372626234195,
        "templates": 0.03639372626234195,
        "render": 0.03639372626234195,
        "diagrams": 0.03639372626234195,
        "mermaid": 0.03639372626234195,
        "sequencediagram": 0.03639372626234195,
        "participant": 0.1455749050493678,
        "client": 0.10918117878702585,
        "endpoint": 0.03639372626234195,
        "auth": 0.10918117878702585,
        "service": 0.03639372626234195,
        "database": 0.03639372626234195,
        "login": 0.03639372626234195,
        "token": 0.03639372626234195,
        "response": 0.0727874525246839,
        "write": 0.03639372626234195,
        "ack": 0.03639372626234195,
        "authenticated": 0.03639372626234195,
        "other": 0.03639372626234195,
        "analyzers": 0.0727874525246839,
        "complement": 0.03639372626234195,
        "these": 0.03639372626234195,
        "signals": 0.03639372626234195,
        "entrypointanalyzer": 0.03639372626234195,
        "ranks": 0.03639372626234195,
        "executable": 0.03639372626234195,
        "commands": 0.0727874525246839,
        "uvicorn": 0.03639372626234195,
        "django": 0.03639372626234195,
        "runserver": 0.03639372626234195,
        "npm": 0.03639372626234195,
        "dev": 0.03639372626234195,
        "spring": 0.03639372626234195,
        "boot": 0.03639372626234195,
        "bootrun": 0.03639372626234195,
        "buildanalyzer": 0.03639372626234195,
        "pairs": 0.03639372626234195,
        "with": 0.03639372626234195,
        "reproducible": 0.03639372626234195,
        "test": 0.03639372626234195,
        "os": 0.03639372626234195,
        "aware": 0.03639372626234195,
        "scripts": 0.0727874525246839,
        "dependencyanalyzer": 0.03639372626234195,
        "patternanalyzer": 0.03639372626234195,
        "languageanalyzer": 0.03639372626234195,
        "describe": 0.03639372626234195,
        "frameworks": 0.03639372626234195,
        "docker": 0.03639372626234195,
        "k8s": 0.03639372626234195,
        "ci": 0.03639372626234195,
        "layouts": 0.03639372626234195,
        "monorepo": 0.03639372626234195,
        "hints": 0.03639372626234195,
        "feed": 0.03639372626234195,
        "the": 0.03639372626234195,
        "features": 0.03639372626234195,
        "architecture": 0.0727874525246839,
        "quick": 0.0727874525246839,
        "start": 0.0727874525246839,
        "tests": 0.1455749050493678,
        "under": 0.03639372626234195,
        "prompting": 0.03639372626234195,
        "git": 0.03639372626234195,
        "assert": 0.03639372626234195,
        "accuracy": 0.03639372626234195,
        "command": 0.03639372626234195,
        "selection": 0.03639372626234195,
        "publishing": 0.03639372626234195,
        "behavior": 0.03639372626234195,
        "docgen": 0.0727874525246839,
        "end": 0.03639372626234195,
        "begin": 0.03639372626234195,
        "quickstart": 0.03639372626234195,
        "1": 0.03639372626234195,
        "create": 0.03639372626234195,
        "a": 0.03639372626234195,
        "virtual": 0.03639372626234195,
        "environment": 0.03639372626234195,
        "activate": 0.0727874525246839,
        "it": 0.03639372626234195,
        "windows": 0.03639372626234195,
        "python": 0.0727874525246839,
        "m": 0.0727874525246839,
        "venv": 0.18196863131170973,
        "then": 0.03639372626234195,
        "macos": 0.03639372626234195,
        "linux": 0.03639372626234195
      },
      "text": "base) Diff-->>Orc: DiffResult(changed_files, sections) Orc->>Scan: scan() Scan-->>Orc: RepoManifest Orc->>Ana: analyze(manifest) Ana-->>Orc: Signal[] Orc->>RAG: build(manifest, sections) RAG-->>Orc: context snippets Orc->>Prompt: render_sections(sections) Prompt-->>Orc: new section bodies Orc->>Mark: replace(markdown, section) Mark-->>Orc: patched README Orc->>Post: lint/toc/badges/link check/scorecard Post-->>Orc: final README + diff Orc->>Pub: commit or PR (branch, title, body) ``` ### API Signal Extraction `StructureAnalyzer` inspects source files for FastAPI decorators, Express route calls, and Pydantic/ORM entities. Each match emits `Signal` metadata such as handler names, HTTP verbs, detected external calls (`requests`, `session`, `db`), and assembled `sequence` steps that downstream templates render as diagrams. ```mermaid sequenceDiagram participant Client participant API as FastAPI endpoint participant Auth as External service participant DB as Database Client->>API: POST /login API->>Auth: requests.post() Auth-->>API: token/response API->>DB: session.write() DB-->>API: ack API-->>Client: Authenticated response ``` Other analyzers complement these signals: - `EntryPointAnalyzer` ranks executable commands (FastAPI `uvicorn`, Django `runserver`, npm `dev`, Spring Boot `bootRun`). - `BuildAnalyzer` pairs manifest files with reproducible build/test commands and OS-aware scripts. - `DependencyAnalyzer`, `PatternAnalyzer`, and `LanguageAnalyzer` describe frameworks, Docker/K8s/CI layouts, and monorepo hints that feed the features, architecture, and quick-start sections. - Tests under `tests/analyzers/`, `tests/prompting/`, and `tests/git/` assert signal accuracy, command selection, and publishing behavior. <!-- docgen:end:architecture --> ## Quick Start <!-- docgen:begin:quickstart --> 1. Create a virtual environment and activate it: - Windows: `python -m venv .venv` then `.\\.venv\\Scripts\\activate` - macOS/Linux: `python -m venv .venv`",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#6",
      "vector": {
        "tests": 0.04214497519610896,
        "git": 0.04214497519610896,
        "assert": 0.04214497519610896,
        "signal": 0.04214497519610896,
        "accuracy": 0.04214497519610896,
        "command": 0.04214497519610896,
        "selection": 0.04214497519610896,
        "and": 0.16857990078443583,
        "publishing": 0.04214497519610896,
        "behavior": 0.04214497519610896,
        "docgen": 0.5057397023533075,
        "end": 0.08428995039221791,
        "architecture": 0.04214497519610896,
        "quick": 0.04214497519610896,
        "start": 0.04214497519610896,
        "begin": 0.08428995039221791,
        "quickstart": 0.08428995039221791,
        "1": 0.04214497519610896,
        "create": 0.04214497519610896,
        "a": 0.08428995039221791,
        "virtual": 0.04214497519610896,
        "environment": 0.04214497519610896,
        "activate": 0.12643492558832686,
        "it": 0.04214497519610896,
        "windows": 0.04214497519610896,
        "python": 0.2528698511766537,
        "m": 0.2528698511766537,
        "venv": 0.2528698511766537,
        "then": 0.08428995039221791,
        "scripts": 0.04214497519610896,
        "macos": 0.04214497519610896,
        "linux": 0.04214497519610896,
        "source": 0.04214497519610896,
        "bin": 0.04214497519610896,
        "2": 0.08428995039221791,
        "install": 0.12643492558832686,
        "dependencies": 0.04214497519610896,
        "in": 0.04214497519610896,
        "editable": 0.04214497519610896,
        "mode": 0.08428995039221791,
        "includes": 0.04214497519610896,
        "cli": 0.12643492558832686,
        "entry": 0.04214497519610896,
        "point": 0.04214497519610896,
        "test": 0.04214497519610896,
        "tooling": 0.04214497519610896,
        "bash": 0.12643492558832686,
        "pip": 0.12643492558832686,
        "upgrade": 0.04214497519610896,
        "e": 0.04214497519610896,
        "dev": 0.04214497519610896,
        "3": 0.04214497519610896,
        "configure": 0.04214497519610896,
        "yml": 0.08428995039221791,
        "with": 0.08428995039221791,
        "local": 0.04214497519610896,
        "llm": 0.08428995039221791,
        "runner": 0.12643492558832686,
        "details": 0.04214497519610896,
        "see": 0.04214497519610896,
        "configuration": 0.12643492558832686,
        "below": 0.04214497519610896,
        "4": 0.04214497519610896,
        "generate": 0.04214497519610896,
        "an": 0.04214497519610896,
        "initial": 0.04214497519610896,
        "readme": 0.12643492558832686,
        "from": 0.04214497519610896,
        "the": 0.04214497519610896,
        "repository": 0.04214497519610896,
        "root": 0.04214497519610896,
        "init": 0.04214497519610896,
        "5": 0.04214497519610896,
        "after": 0.04214497519610896,
        "subsequent": 0.04214497519610896,
        "changes": 0.04214497519610896,
        "refresh": 0.04214497519610896,
        "documentation": 0.04214497519610896,
        "update": 0.08428995039221791,
        "diff": 0.04214497519610896,
        "base": 0.04214497519610896,
        "origin": 0.04214497519610896,
        "main": 0.04214497519610896,
        "6": 0.04214497519610896,
        "use": 0.04214497519610896,
        "dry": 0.04214497519610896,
        "run": 0.04214497519610896,
        "to": 0.04214497519610896,
        "preview": 0.04214497519610896,
        "diffs": 0.04214497519610896,
        "or": 0.16857990078443583,
        "verbose": 0.04214497519610896,
        "for": 0.04214497519610896,
        "deeper": 0.04214497519610896,
        "logs": 0.04214497519610896,
        "while": 0.04214497519610896,
        "iterating": 0.04214497519610896,
        "on": 0.04214497519610896,
        "analyzers": 0.08428995039221791,
        "config": 0.04214497519610896,
        "py": 0.04214497519610896,
        "loads": 0.04214497519610896,
        "into": 0.04214497519610896,
        "strongly": 0.04214497519610896,
        "typed": 0.04214497519610896,
        "dataclasses": 0.04214497519610896,
        "provides": 0.04214497519610896,
        "minimal": 0.04214497519610896,
        "yaml": 0.08428995039221791,
        "parser": 0.04214497519610896,
        "when": 0.04214497519610896,
        "pyyaml": 0.04214497519610896,
        "is": 0.04214497519610896,
        "absent": 0.04214497519610896,
        "common": 0.04214497519610896,
        "fields": 0.04214497519610896,
        "ollama": 0.04214497519610896,
        "model": 0.08428995039221791,
        "llama3": 0.04214497519610896,
        "8b": 0.04214497519610896,
        "instruct": 0.04214497519610896,
        "base_url": 0.04214497519610896,
        "http": 0.04214497519610896,
        "localhost": 0.04214497519610896,
        "12434": 0.04214497519610896,
        "engines": 0.04214497519610896,
        "v1": 0.04214497519610896,
        "temperature": 0.04214497519610896,
        "0": 0.04214497519610896,
        "max_tokens": 0.04214497519610896,
        "2048": 0.04214497519610896,
        "style": 0.04214497519610896,
        "comprehensive": 0.04214497519610896,
        "concise": 0.04214497519610896,
        "template_pack": 0.04214497519610896,
        "null": 0.04214497519610896,
        "optional": 0.04214497519610896,
        "alt": 0.04214497519610896,
        "templates": 0.08428995039221791,
        "under": 0.04214497519610896,
        "prompting": 0.04214497519610896,
        "publish": 0.04214497519610896,
        "pr": 0.08428995039221791,
        "commit": 0.04214497519610896,
        "branch_prefix": 0.04214497519610896,
        "labels": 0.04214497519610896,
        "docs": 0.08428995039221791,
        "auto": 0.04214497519610896,
        "update_existing": 0.04214497519610896,
        "false": 0.04214497519610896,
        "enabled": 0.04214497519610896,
        "subset": 0.04214497519610896,
        "of": 0.04214497519610896,
        "plugin": 0.04214497519610896,
        "names": 0.04214497519610896,
        "empty": 0.04214497519610896,
        "uses": 0.04214497519610896,
        "all": 0.04214497519610896,
        "built": 0.04214497519610896,
        "ins": 0.04214497519610896,
        "exclude_paths": 0.08428995039221791,
        "sandbox": 0.08428995039221791,
        "ci": 0.04214497519610896,
        "watched_globs": 0.04214497519610896
      },
      "text": "`tests/git/` assert signal accuracy, command selection, and publishing behavior. <!-- docgen:end:architecture --> ## Quick Start <!-- docgen:begin:quickstart --> 1. Create a virtual environment and activate it: - Windows: `python -m venv .venv` then `.\\.venv\\Scripts\\activate` - macOS/Linux: `python -m venv .venv` then `source .venv/bin/activate` 2. Install dependencies in editable mode (includes CLI entry point and test tooling): ```bash python -m pip install --upgrade pip python -m pip install -e .[dev] ``` 3. Configure `.docgen.yml` with local LLM runner details (see Configuration below). 4. Generate an initial README from the repository root: ```bash python -m docgen.cli init . ``` 5. After subsequent changes, refresh documentation with: ```bash python -m docgen.cli update --diff-base origin/main ``` 6. Use `--dry-run` to preview diffs or `--verbose` for deeper logs while iterating on analyzers. <!-- docgen:end:quickstart --> ## Configuration <!-- docgen:begin:configuration --> `docgen/config.py` loads `.docgen.yml` into strongly typed dataclasses and provides a minimal YAML parser when PyYAML is absent. Common fields: ```yaml llm: runner: \"ollama\" # or \"model-runner\" model: \"llama3:8b-instruct\" base_url: \"http://localhost:12434/engines/v1\" temperature: 0.2 max_tokens: 2048 readme: style: \"comprehensive\" # or \"concise\" template_pack: null # optional alt templates under docgen/prompting/templates/ publish: mode: \"pr\" # \"pr\" or \"commit\" branch_prefix: \"docgen/readme-update\" labels: [\"docs:auto\"] update_existing: false analyzers: enabled: [] # subset of plugin names, empty uses all built-ins exclude_paths: - \"sandbox/\" ci: watched_globs: - \"docgen/**\" - \"docs/**\" exclude_paths: - \"sandbox/\"",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#7",
      "vector": {
        "templates": 0.12058018065872111,
        "under": 0.12058018065872111,
        "docgen": 0.5225141161877915,
        "prompting": 0.08038678710581408,
        "publish": 0.04019339355290704,
        "mode": 0.08038678710581408,
        "pr": 0.16077357421162816,
        "or": 0.12058018065872111,
        "commit": 0.04019339355290704,
        "branch_prefix": 0.04019339355290704,
        "readme": 0.08038678710581408,
        "update": 0.12058018065872111,
        "labels": 0.04019339355290704,
        "docs": 0.24116036131744223,
        "auto": 0.04019339355290704,
        "update_existing": 0.04019339355290704,
        "false": 0.04019339355290704,
        "analyzers": 0.12058018065872111,
        "enabled": 0.04019339355290704,
        "subset": 0.04019339355290704,
        "of": 0.04019339355290704,
        "plugin": 0.04019339355290704,
        "names": 0.04019339355290704,
        "empty": 0.04019339355290704,
        "uses": 0.04019339355290704,
        "all": 0.04019339355290704,
        "built": 0.04019339355290704,
        "ins": 0.04019339355290704,
        "exclude_paths": 0.12058018065872111,
        "sandbox": 0.08038678710581408,
        "ci": 0.24116036131744223,
        "watched_globs": 0.08038678710581408,
        "highlights": 0.04019339355290704,
        "llmconfig": 0.04019339355290704,
        "supports": 0.04019339355290704,
        "env": 0.04019339355290704,
        "overrides": 0.08038678710581408,
        "docgen_llm_model": 0.04019339355290704,
        "docgen_llm_base_url": 0.04019339355290704,
        "docgen_llm_api_key": 0.04019339355290704,
        "and": 0.12058018065872111,
        "enforces": 0.04019339355290704,
        "loopback": 0.04019339355290704,
        "urls": 0.04019339355290704,
        "publishconfig": 0.04019339355290704,
        "toggles": 0.04019339355290704,
        "automatic": 0.04019339355290704,
        "commits": 0.04019339355290704,
        "creation": 0.04019339355290704,
        "publisher": 0.04019339355290704,
        "relies": 0.04019339355290704,
        "on": 0.04019339355290704,
        "the": 0.16077357421162816,
        "github": 0.12058018065872111,
        "cli": 0.08038678710581408,
        "when": 0.12058018065872111,
        "analyzerconfig": 0.04019339355290704,
        "removes": 0.04019339355290704,
        "noisy": 0.04019339355290704,
        "directories": 0.04019339355290704,
        "from": 0.04019339355290704,
        "analysis": 0.04019339355290704,
        "without": 0.04019339355290704,
        "editing": 0.04019339355290704,
        "gitignore": 0.04019339355290704,
        "template": 0.04019339355290704,
        "can": 0.04019339355290704,
        "live": 0.04019339355290704,
        "are": 0.04019339355290704,
        "picked": 0.04019339355290704,
        "up": 0.04019339355290704,
        "automatically": 0.04019339355290704,
        "present": 0.04019339355290704,
        "watchers": 0.04019339355290704,
        "skip": 0.04019339355290704,
        "updates": 0.04019339355290704,
        "changed": 0.04019339355290704,
        "files": 0.04019339355290704,
        "do": 0.04019339355290704,
        "not": 0.04019339355290704,
        "match": 0.04019339355290704,
        "aligning": 0.04019339355290704,
        "with": 0.04019339355290704,
        "workflow": 0.04019339355290704,
        "in": 0.12058018065872111,
        "yml": 0.08038678710581408,
        "end": 0.08038678710581408,
        "configuration": 0.04019339355290704,
        "build": 0.04019339355290704,
        "test": 0.08038678710581408,
        "begin": 0.08038678710581408,
        "build_and_test": 0.08038678710581408,
        "format": 0.04019339355290704,
        "lint": 0.04019339355290704,
        "bash": 0.16077357421162816,
        "black": 0.04019339355290704,
        "tests": 0.12058018065872111,
        "python": 0.2009669677645352,
        "m": 0.2009669677645352,
        "ruff": 0.04019339355290704,
        "check": 0.08038678710581408,
        "type": 0.04019339355290704,
        "core": 0.04019339355290704,
        "modules": 0.08038678710581408,
        "mypy": 0.04019339355290704,
        "run": 0.04019339355290704,
        "full": 0.04019339355290704,
        "suite": 0.04019339355290704,
        "mirrors": 0.04019339355290704,
        "runtime": 0.04019339355290704,
        "orchestrator": 0.08038678710581408,
        "git": 0.04019339355290704,
        "rag": 0.04019339355290704,
        "post": 0.04019339355290704,
        "processing": 0.04019339355290704,
        "pytest": 0.12058018065872111,
        "target": 0.04019339355290704,
        "specific": 0.04019339355290704,
        "areas": 0.04019339355290704,
        "while": 0.04019339355290704,
        "iterating": 0.04019339355290704,
        "k": 0.04019339355290704,
        "test_structure": 0.04019339355290704,
        "py": 0.04019339355290704,
        "regenerate": 0.04019339355290704,
        "fixtures": 0.04019339355290704,
        "inspect": 0.04019339355290704,
        "scorecards": 0.04019339355290704,
        "stored": 0.04019339355290704,
        "to": 0.04019339355290704,
        "validate": 0.04019339355290704,
        "generated": 0.04019339355290704,
        "content": 0.04019339355290704,
        "deployment": 0.08038678710581408,
        "actions": 0.08038678710581408,
        "recipe": 0.04019339355290704,
        "documented": 0.04019339355290704,
        "md": 0.04019339355290704,
        "installs": 0.04019339355290704,
        "package": 0.04019339355290704,
        "editable": 0.04019339355290704
      },
      "text": "templates under docgen/prompting/templates/ publish: mode: \"pr\" # \"pr\" or \"commit\" branch_prefix: \"docgen/readme-update\" labels: [\"docs:auto\"] update_existing: false analyzers: enabled: [] # subset of plugin names, empty uses all built-ins exclude_paths: - \"sandbox/\" ci: watched_globs: - \"docgen/**\" - \"docs/**\" exclude_paths: - \"sandbox/\" ``` Highlights: - `LLMConfig` supports env overrides (`DOCGEN_LLM_MODEL`, `DOCGEN_LLM_BASE_URL`, `DOCGEN_LLM_API_KEY`) and enforces loopback URLs. - `PublishConfig` toggles automatic commits or PR creation; `Publisher` relies on the GitHub CLI when `mode=\"pr\"`. - `AnalyzerConfig.exclude_paths` removes noisy directories from analysis without editing `.gitignore`. - Template overrides can live under `docs/templates/` and are picked up automatically when present. - CI watchers skip updates when changed files do not match `ci.watched_globs`, aligning with the workflow in `docs/ci/docgen-update.yml`. <!-- docgen:end:configuration --> ## Build & Test <!-- docgen:begin:build_and_test --> - Format and lint: ```bash black docgen tests python -m ruff check docgen tests ``` - Type-check core modules: ```bash python -m mypy docgen ``` - Run the full test suite (mirrors runtime modules: CLI, orchestrator, analyzers, prompting, git, RAG, post-processing): ```bash python -m pytest ``` - Target specific areas while iterating: ```bash python -m pytest -k orchestrator python -m pytest tests/analyzers/test_structure.py ``` - Regenerate README fixtures or inspect scorecards stored under `.docgen/` to validate generated content. <!-- docgen:end:build_and_test --> ## Deployment <!-- docgen:begin:deployment --> - GitHub Actions recipe: `docs/ci/docgen-update.yml` (documented in `docs/ci/github-actions.md`) installs the package in editable",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#8",
      "vector": {
        "python": 0.040555355282690636,
        "m": 0.040555355282690636,
        "pytest": 0.040555355282690636,
        "tests": 0.040555355282690636,
        "analyzers": 0.040555355282690636,
        "test_structure": 0.040555355282690636,
        "py": 0.08111071056538127,
        "regenerate": 0.040555355282690636,
        "readme": 0.12166606584807191,
        "fixtures": 0.040555355282690636,
        "or": 0.24333213169614382,
        "inspect": 0.08111071056538127,
        "scorecards": 0.040555355282690636,
        "stored": 0.040555355282690636,
        "under": 0.040555355282690636,
        "docgen": 0.48666426339228763,
        "to": 0.20277677641345318,
        "validate": 0.040555355282690636,
        "generated": 0.08111071056538127,
        "content": 0.040555355282690636,
        "end": 0.08111071056538127,
        "build_and_test": 0.040555355282690636,
        "deployment": 0.12166606584807191,
        "begin": 0.08111071056538127,
        "github": 0.12166606584807191,
        "actions": 0.08111071056538127,
        "recipe": 0.040555355282690636,
        "docs": 0.12166606584807191,
        "ci": 0.12166606584807191,
        "update": 0.16222142113076254,
        "yml": 0.040555355282690636,
        "documented": 0.040555355282690636,
        "in": 0.12166606584807191,
        "md": 0.040555355282690636,
        "installs": 0.040555355282690636,
        "the": 0.40555355282690636,
        "package": 0.040555355282690636,
        "editable": 0.040555355282690636,
        "mode": 0.08111071056538127,
        "runs": 0.040555355282690636,
        "and": 0.16222142113076254,
        "optionally": 0.040555355282690636,
        "commits": 0.08111071056538127,
        "changes": 0.040555355282690636,
        "back": 0.040555355282690636,
        "branch": 0.040555355282690636,
        "self": 0.040555355282690636,
        "hosted": 0.040555355282690636,
        "runners": 0.040555355282690636,
        "are": 0.12166606584807191,
        "recommended": 0.040555355282690636,
        "so": 0.040555355282690636,
        "workflow": 0.040555355282690636,
        "can": 0.08111071056538127,
        "reach": 0.040555355282690636,
        "your": 0.040555355282690636,
        "local": 0.08111071056538127,
        "inference": 0.040555355282690636,
        "endpoint": 0.040555355282690636,
        "docgen_llm_base_url": 0.040555355282690636,
        "same": 0.040555355282690636,
        "settings": 0.040555355282690636,
        "apply": 0.040555355282690636,
        "when": 0.12166606584807191,
        "running": 0.040555355282690636,
        "cd": 0.040555355282690636,
        "pipelines": 0.040555355282690636,
        "outside": 0.040555355282690636,
        "publisher": 0.040555355282690636,
        "push": 0.040555355282690636,
        "directly": 0.040555355282690636,
        "publish": 0.040555355282690636,
        "commit": 0.040555355282690636,
        "for": 0.040555355282690636,
        "bootstrap": 0.040555355282690636,
        "scenarios": 0.040555355282690636,
        "open": 0.040555355282690636,
        "prs": 0.040555355282690636,
        "with": 0.040555355282690636,
        "labeled": 0.040555355282690636,
        "summaries": 0.040555355282690636,
        "gh": 0.040555355282690636,
        "cli": 0.040555355282690636,
        "credentials": 0.040555355282690636,
        "available": 0.040555355282690636,
        "troubleshooting": 0.08111071056538127,
        "use": 0.040555355282690636,
        "verbose": 0.040555355282690636,
        "surface": 0.040555355282690636,
        "analyzer": 0.08111071056538127,
        "selection": 0.040555355282690636,
        "prompt": 0.08111071056538127,
        "generation": 0.040555355282690636,
        "post": 0.040555355282690636,
        "processing": 0.040555355282690636,
        "diagnostics": 0.040555355282690636,
        "emitted": 0.040555355282690636,
        "by": 0.040555355282690636,
        "get_logger": 0.040555355282690636,
        "orchestrator": 0.040555355282690636,
        "if": 0.040555355282690636,
        "already": 0.040555355282690636,
        "exists": 0.040555355282690636,
        "init": 0.040555355282690636,
        "will": 0.040555355282690636,
        "abort": 0.040555355282690636,
        "switch": 0.040555355282690636,
        "remove": 0.040555355282690636,
        "file": 0.040555355282690636,
        "before": 0.08111071056538127,
        "re": 0.040555355282690636,
        "initialising": 0.040555355282690636,
        "empty": 0.040555355282690636,
        "failing": 0.040555355282690636,
        "sections": 0.040555355282690636,
        "trigger": 0.040555355282690636,
        "fallback": 0.040555355282690636,
        "stubs": 0.040555355282690636,
        "from": 0.040555355282690636,
        "failsafe": 0.040555355282690636,
        "raised": 0.040555355282690636,
        "reason": 0.040555355282690636,
        "rerun": 0.040555355282690636,
        "once": 0.040555355282690636,
        "underlying": 0.040555355282690636,
        "issue": 0.040555355282690636,
        "is": 0.08111071056538127,
        "fixed": 0.040555355282690636,
        "link": 0.040555355282690636,
        "validation": 0.040555355282690636,
        "issues": 0.040555355282690636,
        "logged": 0.040555355282690636,
        "as": 0.040555355282690636,
        "warnings": 0.040555355282690636,
        "relative": 0.040555355282690636,
        "paths": 0.040555355282690636,
        "add": 0.040555355282690636,
        "missing": 0.040555355282690636,
        "files": 0.040555355282690636,
        "committing": 0.040555355282690636,
        "clear": 0.040555355282690636,
        "manifest_cache": 0.040555355282690636,
        "json": 0.08111071056538127,
        "embeddings": 0.040555355282690636,
        "refactoring": 0.040555355282690636,
        "large": 0.040555355282690636,
        "parts": 0.040555355282690636,
        "of": 0.040555355282690636,
        "repo": 0.040555355282690636,
        "structure": 0.040555355282690636,
        "force": 0.040555355282690636,
        "a": 0.08111071056538127,
        "fresh": 0.040555355282690636,
        "scan": 0.040555355282690636,
        "ensure": 0.040555355282690636,
        "model": 0.040555355282690636,
        "runner": 0.040555355282690636,
        "reachable": 0.040555355282690636,
        "at": 0.040555355282690636,
        "loopback": 0.040555355282690636,
        "url": 0.040555355282690636,
        "remote": 0.040555355282690636
      },
      "text": "python -m pytest tests/analyzers/test_structure.py ``` - Regenerate README fixtures or inspect scorecards stored under `.docgen/` to validate generated content. <!-- docgen:end:build_and_test --> ## Deployment <!-- docgen:begin:deployment --> - GitHub Actions recipe: `docs/ci/docgen-update.yml` (documented in `docs/ci/github-actions.md`) installs the package in editable mode, runs `docgen update`, and optionally commits README changes back to the branch. - Self-hosted runners are recommended so the workflow can reach your local inference endpoint (`DOCGEN_LLM_BASE_URL`). The same settings apply when running in CI/CD pipelines outside GitHub. - `Publisher` can push commits directly (`publish.mode: commit`) for bootstrap scenarios or open PRs with labeled summaries when `gh` CLI credentials are available. <!-- docgen:end:deployment --> ## Troubleshooting <!-- docgen:begin:troubleshooting --> - Use `--verbose` to surface analyzer selection, prompt generation, and post-processing diagnostics emitted by `get_logger(\"orchestrator\")`. - If the README already exists, `docgen init` will abort; switch to `docgen update` or remove the file before re-initialising. - Empty or failing sections trigger fallback stubs from `docgen/failsafe.py`; inspect the raised reason and rerun once the underlying analyzer or prompt issue is fixed. - Link validation issues are logged as warnings. Update relative paths or add missing files before committing generated docs. - Clear `.docgen/manifest_cache.json` and `.docgen/embeddings.json` when refactoring large parts of the repo structure to force a fresh scan. - Ensure the local model runner is reachable at a loopback URL; remote",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#9",
      "vector": {
        "paths": 0.03782347372361169,
        "or": 0.26476431606528184,
        "add": 0.11347042117083507,
        "missing": 0.03782347372361169,
        "files": 0.03782347372361169,
        "before": 0.03782347372361169,
        "committing": 0.03782347372361169,
        "generated": 0.03782347372361169,
        "docs": 0.03782347372361169,
        "clear": 0.03782347372361169,
        "docgen": 0.4538816846833403,
        "manifest_cache": 0.03782347372361169,
        "json": 0.07564694744722338,
        "and": 0.11347042117083507,
        "embeddings": 0.03782347372361169,
        "when": 0.07564694744722338,
        "refactoring": 0.03782347372361169,
        "large": 0.03782347372361169,
        "parts": 0.03782347372361169,
        "of": 0.03782347372361169,
        "the": 0.3404112635125052,
        "repo": 0.03782347372361169,
        "structure": 0.03782347372361169,
        "to": 0.03782347372361169,
        "force": 0.03782347372361169,
        "a": 0.4538816846833403,
        "fresh": 0.03782347372361169,
        "scan": 0.03782347372361169,
        "ensure": 0.03782347372361169,
        "local": 0.07564694744722338,
        "model": 0.07564694744722338,
        "runner": 0.07564694744722338,
        "is": 0.07564694744722338,
        "reachable": 0.03782347372361169,
        "at": 0.03782347372361169,
        "loopback": 0.07564694744722338,
        "url": 0.03782347372361169,
        "remote": 0.07564694744722338,
        "hosts": 0.07564694744722338,
        "are": 0.07564694744722338,
        "intentionally": 0.03782347372361169,
        "rejected": 0.03782347372361169,
        "by": 0.03782347372361169,
        "llmrunner": 0.07564694744722338,
        "for": 0.03782347372361169,
        "security": 0.03782347372361169,
        "end": 0.11347042117083507,
        "troubleshooting": 0.03782347372361169,
        "faq": 0.11347042117083507,
        "begin": 0.07564694744722338,
        "q": 0.15129389489444675,
        "how": 0.03782347372361169,
        "this": 0.07564694744722338,
        "readme": 0.03782347372361169,
        "maintained": 0.03782347372361169,
        "generate": 0.03782347372361169,
        "with": 0.03782347372361169,
        "init": 0.03782347372361169,
        "keep": 0.03782347372361169,
        "it": 0.03782347372361169,
        "current": 0.03782347372361169,
        "via": 0.07564694744722338,
        "update": 0.03782347372361169,
        "optionally": 0.03782347372361169,
        "in": 0.15129389489444675,
        "ci": 0.03782347372361169,
        "using": 0.03782347372361169,
        "provided": 0.03782347372361169,
        "workflow": 0.03782347372361169,
        "what": 0.03782347372361169,
        "happens": 0.03782347372361169,
        "if": 0.03782347372361169,
        "analyzers": 0.11347042117083507,
        "miss": 0.03782347372361169,
        "framework": 0.03782347372361169,
        "command": 0.03782347372361169,
        "signals": 0.03782347372361169,
        "pluggable": 0.03782347372361169,
        "custom": 0.03782347372361169,
        "analyzer": 0.03782347372361169,
        "entry": 0.03782347372361169,
        "point": 0.03782347372361169,
        "group": 0.03782347372361169,
        "extend": 0.03782347372361169,
        "existing": 0.03782347372361169,
        "utilities": 0.03782347372361169,
        "under": 0.03782347372361169,
        "utils": 0.03782347372361169,
        "py": 0.03782347372361169,
        "can": 0.03782347372361169,
        "use": 0.03782347372361169,
        "llm": 0.03782347372361169,
        "endpoint": 0.03782347372361169,
        "no": 0.03782347372361169,
        "enforces": 0.03782347372361169,
        "internal": 0.03782347372361169,
        "supply": 0.03782347372361169,
        "ollama": 0.03782347372361169,
        "instance": 0.03782347372361169,
        "instead": 0.03782347372361169,
        "where": 0.03782347372361169,
        "do": 0.03782347372361169,
        "i": 0.03782347372361169,
        "report": 0.03782347372361169,
        "issues": 0.03782347372361169,
        "propose": 0.03782347372361169,
        "enhancements": 0.03782347372361169,
        "file": 0.03782347372361169,
        "an": 0.03782347372361169,
        "issue": 0.03782347372361169,
        "open": 0.03782347372361169,
        "discussion": 0.03782347372361169,
        "repository": 0.03782347372361169,
        "reference": 0.03782347372361169,
        "relevant": 0.03782347372361169,
        "sections": 0.03782347372361169,
        "spec": 0.15129389489444675,
        "md": 0.11347042117083507,
        "feature_order": 0.07564694744722338,
        "describing": 0.03782347372361169,
        "change": 0.03782347372361169,
        "license": 0.15129389489444675,
        "licensing": 0.03782347372361169,
        "information": 0.03782347372361169,
        "once": 0.03782347372361169,
        "project": 0.03782347372361169,
        "selects": 0.03782347372361169,
        "track": 0.03782347372361169,
        "candidate": 0.03782347372361169,
        "licenses": 0.03782347372361169,
        "alongside": 0.03782347372361169,
        "roadmap": 0.03782347372361169
      },
      "text": "paths or add missing files before committing generated docs. - Clear `.docgen/manifest_cache.json` and `.docgen/embeddings.json` when refactoring large parts of the repo structure to force a fresh scan. - Ensure the local model runner is reachable at a loopback URL; remote hosts are intentionally rejected by `LLMRunner` for security. <!-- docgen:end:troubleshooting --> ## FAQ <!-- docgen:begin:faq --> **Q: How is this README maintained?** A: Generate with `docgen init` and keep it current via `docgen update` (optionally in CI using the provided workflow). **Q: What happens if analyzers miss a framework or command?** A: Signals are pluggable\u2014add a custom analyzer via the `docgen.analyzers` entry-point group or extend the existing utilities under `docgen/analyzers/utils.py`. **Q: Can docgen use a remote LLM endpoint?** A: No. `LLMRunner` enforces loopback/`.internal` hosts; supply a local model runner or Ollama instance instead. **Q: Where do I report issues or propose enhancements?** A: File an issue or open a discussion in this repository and reference the relevant sections in `spec/spec.md` or `spec/feature_order.md` when describing the change. <!-- docgen:end:faq --> ## License <!-- docgen:begin:license --> Add licensing information once the project selects a license. Track candidate licenses alongside the roadmap in `spec/feature_order.md`. <!-- docgen:end:license -->",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "docs/ci/docgen-update.yml#0",
      "vector": {
        "name": 0.2773500981126145,
        "docgen": 0.1849000654084097,
        "update": 0.2311250817605121,
        "on": 0.09245003270420485,
        "push": 0.046225016352102424,
        "branches": 0.09245003270420485,
        "main": 0.13867504905630726,
        "pull_request": 0.13867504905630726,
        "jobs": 0.046225016352102424,
        "readme": 0.1849000654084097,
        "runs": 0.046225016352102424,
        "self": 0.046225016352102424,
        "hosted": 0.046225016352102424,
        "steps": 0.09245003270420485,
        "uses": 0.13867504905630726,
        "actions": 0.2311250817605121,
        "checkout": 0.046225016352102424,
        "v4": 0.09245003270420485,
        "with": 0.13867504905630726,
        "fetch": 0.046225016352102424,
        "depth": 0.046225016352102424,
        "0": 0.046225016352102424,
        "setup": 0.046225016352102424,
        "python": 0.2311250817605121,
        "v5": 0.046225016352102424,
        "version": 0.046225016352102424,
        "3": 0.046225016352102424,
        "11": 0.046225016352102424,
        "cache": 0.09245003270420485,
        "path": 0.046225016352102424,
        "pip": 0.2773500981126145,
        "key": 0.046225016352102424,
        "runner": 0.09245003270420485,
        "os": 0.09245003270420485,
        "hashfiles": 0.046225016352102424,
        "pyproject": 0.046225016352102424,
        "toml": 0.046225016352102424,
        "restore": 0.046225016352102424,
        "keys": 0.046225016352102424,
        "install": 0.13867504905630726,
        "dependencies": 0.046225016352102424,
        "run": 0.2311250817605121,
        "m": 0.13867504905630726,
        "upgrade": 0.046225016352102424,
        "e": 0.046225016352102424,
        "dev": 0.046225016352102424,
        "determine": 0.046225016352102424,
        "diff": 0.1849000654084097,
        "base": 0.2773500981126145,
        "id": 0.046225016352102424,
        "if": 0.09245003270420485,
        "github": 0.2311250817605121,
        "event_name": 0.046225016352102424,
        "then": 0.09245003270420485,
        "echo": 0.09245003270420485,
        "event": 0.046225016352102424,
        "sha": 0.046225016352102424,
        "github_output": 0.09245003270420485,
        "else": 0.046225016352102424,
        "origin": 0.046225016352102424,
        "fi": 0.09245003270420485,
        "env": 0.046225016352102424,
        "docgen_llm_base_url": 0.046225016352102424,
        "http": 0.046225016352102424,
        "localhost": 0.046225016352102424,
        "12434": 0.046225016352102424,
        "engines": 0.046225016352102424,
        "v1": 0.046225016352102424,
        "cli": 0.046225016352102424,
        "outputs": 0.046225016352102424,
        "commit": 0.09245003270420485,
        "md": 0.09245003270420485,
        "optional": 0.046225016352102424,
        "git": 0.1849000654084097,
        "status": 0.046225016352102424,
        "short": 0.046225016352102424,
        "grep": 0.046225016352102424,
        "q": 0.046225016352102424,
        "config": 0.09245003270420485,
        "user": 0.09245003270420485,
        "email": 0.046225016352102424,
        "users": 0.046225016352102424,
        "noreply": 0.046225016352102424,
        "com": 0.046225016352102424,
        "am": 0.046225016352102424,
        "docs": 0.046225016352102424,
        "via": 0.046225016352102424
      },
      "text": "name: docgen-update on: push: branches: [ main ] pull_request: branches: [ main ] jobs: update-readme: runs-on: self-hosted steps: - uses: actions/checkout@v4 with: fetch-depth: 0 - uses: actions/setup-python@v5 with: python-version: '3.11' - uses: actions/cache@v4 with: path: ~/.cache/pip key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }} restore-keys: ${{ runner.os }}-pip- - name: Install dependencies run: | python -m pip install --upgrade pip python -m pip install -e .[dev] - name: Determine diff base id: diff run: | if [ \"${{ github.event_name }}\" = \"pull_request\" ]; then echo \"base=${{ github.event.pull_request.base.sha }}\" >> \"$GITHUB_OUTPUT\" else echo \"base=origin/main\" >> \"$GITHUB_OUTPUT\" fi - name: Run docgen update env: DOCGEN_LLM_BASE_URL: http://localhost:12434/engines/v1 run: python -m docgen.cli update --diff-base ${{ steps.diff.outputs.base }} - name: Commit README.md (optional) run: | if git status --short | grep -q README.md; then git config user.name \"github-actions\" git config user.email \"github-actions@users.noreply.github.com\" git commit -am \"docs: update README via docgen\" fi",
      "metadata": {
        "path": "docs/ci/docgen-update.yml",
        "tags": [
          "docs"
        ],
        "hash": "f3bf5ea7b740892011a0aa14cb06b4bb27a4f3ea348599d85003a66032594538"
      }
    },
    {
      "id": "docs/ci/github-actions.md#0",
      "vector": {
        "github": 0.25925925925925924,
        "actions": 0.2222222222222222,
        "integration": 0.037037037037037035,
        "the": 0.1111111111111111,
        "workflow": 0.037037037037037035,
        "below": 0.037037037037037035,
        "runs": 0.07407407407407407,
        "docgen": 0.25925925925925924,
        "update": 0.2222222222222222,
        "on": 0.1111111111111111,
        "pushes": 0.037037037037037035,
        "and": 0.037037037037037035,
        "pull": 0.037037037037037035,
        "requests": 0.037037037037037035,
        "it": 0.037037037037037035,
        "assumes": 0.037037037037037035,
        "a": 0.037037037037037035,
        "self": 0.07407407407407407,
        "hosted": 0.1111111111111111,
        "runner": 0.14814814814814814,
        "or": 0.037037037037037035,
        "with": 0.14814814814814814,
        "network": 0.037037037037037035,
        "access": 0.07407407407407407,
        "to": 0.037037037037037035,
        "your": 0.037037037037037035,
        "local": 0.07407407407407407,
        "model": 0.037037037037037035,
        "runtime": 0.037037037037037035,
        "job": 0.037037037037037035,
        "skips": 0.037037037037037035,
        "early": 0.037037037037037035,
        "when": 0.037037037037037035,
        "no": 0.037037037037037035,
        "files": 0.037037037037037035,
        "match": 0.037037037037037035,
        "yml": 0.037037037037037035,
        "s": 0.037037037037037035,
        "ci": 0.037037037037037035,
        "watched_globs": 0.037037037037037035,
        "entries": 0.037037037037037035,
        "so": 0.037037037037037035,
        "that": 0.037037037037037035,
        "purely": 0.037037037037037035,
        "documentation": 0.037037037037037035,
        "only": 0.037037037037037035,
        "changes": 0.037037037037037035,
        "do": 0.037037037037037035,
        "not": 0.037037037037037035,
        "trigger": 0.037037037037037035,
        "generator": 0.037037037037037035,
        "yaml": 0.037037037037037035,
        "name": 0.3333333333333333,
        "push": 0.037037037037037035,
        "branches": 0.07407407407407407,
        "main": 0.1111111111111111,
        "pull_request": 0.1111111111111111,
        "jobs": 0.037037037037037035,
        "readme": 0.14814814814814814,
        "requires": 0.037037037037037035,
        "llm": 0.037037037037037035,
        "steps": 0.07407407407407407,
        "checkout": 0.07407407407407407,
        "repository": 0.037037037037037035,
        "uses": 0.1111111111111111,
        "v4": 0.07407407407407407,
        "fetch": 0.037037037037037035,
        "depth": 0.037037037037037035,
        "0": 0.037037037037037035,
        "set": 0.037037037037037035,
        "up": 0.037037037037037035,
        "python": 0.2222222222222222,
        "setup": 0.037037037037037035,
        "v5": 0.037037037037037035,
        "version": 0.037037037037037035,
        "3": 0.037037037037037035,
        "11": 0.037037037037037035,
        "cache": 0.1111111111111111,
        "pip": 0.25925925925925924,
        "dependencies": 0.037037037037037035,
        "path": 0.037037037037037035,
        "key": 0.037037037037037035,
        "os": 0.07407407407407407,
        "hashfiles": 0.037037037037037035,
        "pyproject": 0.037037037037037035,
        "toml": 0.037037037037037035,
        "restore": 0.037037037037037035,
        "keys": 0.037037037037037035,
        "install": 0.1111111111111111,
        "in": 0.037037037037037035,
        "editable": 0.037037037037037035,
        "mode": 0.037037037037037035,
        "run": 0.18518518518518517,
        "m": 0.1111111111111111,
        "upgrade": 0.037037037037037035,
        "e": 0.037037037037037035,
        "dev": 0.037037037037037035,
        "determine": 0.037037037037037035,
        "diff": 0.14814814814814814,
        "base": 0.2222222222222222,
        "id": 0.037037037037037035,
        "if": 0.1111111111111111,
        "event_name": 0.037037037037037035,
        "then": 0.07407407407407407,
        "echo": 0.07407407407407407,
        "event": 0.037037037037037035,
        "sha": 0.037037037037037035,
        "github_output": 0.07407407407407407,
        "else": 0.037037037037037035,
        "origin": 0.037037037037037035,
        "fi": 0.07407407407407407,
        "env": 0.037037037037037035,
        "docgen_llm_base_url": 0.037037037037037035,
        "http": 0.037037037037037035,
        "localhost": 0.037037037037037035,
        "12434": 0.037037037037037035,
        "engines": 0.037037037037037035,
        "v1": 0.037037037037037035,
        "cli": 0.037037037037037035,
        "outputs": 0.037037037037037035,
        "commit": 0.07407407407407407,
        "updates": 0.037037037037037035,
        "any": 0.037037037037037035,
        "git": 0.14814814814814814,
        "status": 0.037037037037037035,
        "short": 0.037037037037037035,
        "grep": 0.037037037037037035,
        "q": 0.037037037037037035,
        "md": 0.037037037037037035,
        "config": 0.07407407407407407,
        "user": 0.07407407407407407,
        "email": 0.037037037037037035,
        "users": 0.037037037037037035,
        "noreply": 0.037037037037037035,
        "com": 0.037037037037037035,
        "am": 0.037037037037037035,
        "docs": 0.037037037037037035,
        "via": 0.037037037037037035
      },
      "text": "# GitHub Actions Integration The workflow below runs `docgen update` on pushes and pull requests. It assumes a self-hosted runner (or GitHub-hosted runner with network access to your local model runtime). The job skips early when no files match `.docgen.yml`'s `ci.watched_globs` entries so that purely documentation-only changes do not trigger the generator. ```yaml name: docgen-update on: push: branches: [ main ] pull_request: branches: [ main ] jobs: update-readme: runs-on: self-hosted # requires local LLM access steps: - name: Checkout repository uses: actions/checkout@v4 with: fetch-depth: 0 - name: Set up Python uses: actions/setup-python@v5 with: python-version: '3.11' - name: Cache pip dependencies uses: actions/cache@v4 with: path: ~/.cache/pip key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }} restore-keys: ${{ runner.os }}-pip- - name: Install docgen in editable mode run: | python -m pip install --upgrade pip python -m pip install -e .[dev] - name: Determine diff base id: diff run: | if [ \"${{ github.event_name }}\" = \"pull_request\" ]; then echo \"base=${{ github.event.pull_request.base.sha }}\" >> \"$GITHUB_OUTPUT\" else echo \"base=origin/main\" >> \"$GITHUB_OUTPUT\" fi - name: Run docgen update env: DOCGEN_LLM_BASE_URL: http://localhost:12434/engines/v1 run: | python -m docgen.cli update --diff-base ${{ steps.diff.outputs.base }} - name: Commit README updates (if any) run: | if git status --short | grep -q README.md; then git config user.name \"github-actions\" git config user.email \"github-actions@users.noreply.github.com\" git commit -am \"docs: update README via docgen\" fi -",
      "metadata": {
        "path": "docs/ci/github-actions.md",
        "tags": [
          "docs"
        ],
        "hash": "518fe87441e7f08aadb0ed175d54a5ce3c227af17677678096af6df070190e59"
      }
    },
    {
      "id": "docs/ci/github-actions.md#1",
      "vector": {
        "diff": 0.1363988678940947,
        "base": 0.1363988678940947,
        "steps": 0.06819943394704735,
        "outputs": 0.06819943394704735,
        "name": 0.2727977357881894,
        "commit": 0.1363988678940947,
        "readme": 0.4091966036822841,
        "updates": 0.06819943394704735,
        "if": 0.20459830184114206,
        "any": 0.06819943394704735,
        "run": 0.06819943394704735,
        "git": 0.2727977357881894,
        "status": 0.06819943394704735,
        "short": 0.06819943394704735,
        "grep": 0.06819943394704735,
        "q": 0.06819943394704735,
        "md": 0.1363988678940947,
        "then": 0.06819943394704735,
        "config": 0.1363988678940947,
        "user": 0.1363988678940947,
        "github": 0.2727977357881894,
        "actions": 0.20459830184114206,
        "email": 0.06819943394704735,
        "users": 0.06819943394704735,
        "noreply": 0.06819943394704735,
        "com": 0.06819943394704735,
        "am": 0.06819943394704735,
        "docs": 0.06819943394704735,
        "update": 0.06819943394704735,
        "via": 0.06819943394704735,
        "docgen": 0.06819943394704735,
        "fi": 0.06819943394704735,
        "upload": 0.1363988678940947,
        "artifact": 0.1363988678940947,
        "success": 0.06819943394704735,
        "uses": 0.06819943394704735,
        "v4": 0.06819943394704735,
        "with": 0.1363988678940947,
        "generated": 0.06819943394704735,
        "path": 0.06819943394704735,
        "note": 0.06819943394704735,
        "the": 0.20459830184114206,
        "workflow": 0.06819943394704735,
        "relies": 0.06819943394704735,
        "on": 0.06819943394704735,
        "docgen_llm_base_url": 0.06819943394704735,
        "pointing": 0.06819943394704735,
        "to": 0.20459830184114206,
        "a": 0.06819943394704735,
        "local": 0.06819943394704735,
        "or": 0.1363988678940947,
        "private": 0.1363988678940947,
        "inference": 0.06819943394704735,
        "endpoint": 0.06819943394704735,
        "for": 0.06819943394704735,
        "hosted": 0.06819943394704735,
        "runners": 0.06819943394704735,
        "you": 0.06819943394704735,
        "will": 0.06819943394704735,
        "need": 0.06819943394704735,
        "expose": 0.06819943394704735,
        "runner": 0.06819943394704735,
        "within": 0.06819943394704735,
        "your": 0.06819943394704735,
        "network": 0.06819943394704735,
        "switch": 0.06819943394704735,
        "ollama": 0.06819943394704735,
        "cli": 0.06819943394704735,
        "appropriate": 0.06819943394704735,
        "caching": 0.06819943394704735
      },
      "text": "--diff-base ${{ steps.diff.outputs.base }} - name: Commit README updates (if any) run: | if git status --short | grep -q README.md; then git config user.name \"github-actions\" git config user.email \"github-actions@users.noreply.github.com\" git commit -am \"docs: update README via docgen\" fi - name: Upload README artifact if: success() uses: actions/upload-artifact@v4 with: name: generated-readme path: README.md ``` > **Note:** the workflow relies on `DOCGEN_LLM_BASE_URL` pointing to a local or > private inference endpoint. For GitHub-hosted runners you will need to expose > the runner within your private network or switch to the `ollama` CLI with > appropriate caching. ```",
      "metadata": {
        "path": "docs/ci/github-actions.md",
        "tags": [
          "docs"
        ],
        "hash": "518fe87441e7f08aadb0ed175d54a5ce3c227af17677678096af6df070190e59"
      }
    },
    {
      "id": "spec/feature_checklist.md#0",
      "vector": {
        "intelligent": 0.03809696588797296,
        "readme": 0.1142908976639189,
        "generator": 0.03809696588797296,
        "feature": 0.03809696588797296,
        "checklist": 0.03809696588797296,
        "status": 0.03809696588797296,
        "legend": 0.03809696588797296,
        "not": 0.03809696588797296,
        "started": 0.03809696588797296,
        "in": 0.03809696588797296,
        "progress": 0.03809696588797296,
        "done": 0.03809696588797296,
        "scope": 0.03809696588797296,
        "tags": 0.03809696588797296,
        "mvp": 0.4571635906556756,
        "required": 0.03809696588797296,
        "for": 0.1142908976639189,
        "proof": 0.03809696588797296,
        "of": 0.07619393177594593,
        "concept": 0.03809696588797296,
        "next": 0.19048482943986483,
        "nice": 0.03809696588797296,
        "to": 0.1142908976639189,
        "have": 0.03809696588797296,
        "soon": 0.03809696588797296,
        "stretch": 0.1142908976639189,
        "later": 0.03809696588797296,
        "1": 0.07619393177594593,
        "core": 0.03809696588797296,
        "workflows": 0.03809696588797296,
        "x": 0.6095514542075674,
        "docgen": 0.15238786355189185,
        "init": 0.03809696588797296,
        "initialize": 0.03809696588797296,
        "repos": 0.03809696588797296,
        "without": 0.07619393177594593,
        "docs": 0.1142908976639189,
        "update": 0.03809696588797296,
        "detect": 0.03809696588797296,
        "changes": 0.03809696588797296,
        "on": 0.03809696588797296,
        "commit": 0.03809696588797296,
        "pr": 0.03809696588797296,
        "and": 0.03809696588797296,
        "patch": 0.03809696588797296,
        "affected": 0.03809696588797296,
        "sections": 0.03809696588797296,
        "regenerate": 0.03809696588797296,
        "manual": 0.03809696588797296,
        "full": 0.03809696588797296,
        "partial": 0.03809696588797296,
        "regeneration": 0.03809696588797296,
        "dry": 0.07619393177594593,
        "run": 0.07619393177594593,
        "mode": 0.07619393177594593,
        "preview": 0.03809696588797296,
        "diffs": 0.03809696588797296,
        "writing": 0.03809696588797296,
        "service": 0.03809696588797296,
        "fastapi": 0.07619393177594593,
        "endpoints": 0.03809696588797296,
        "ci": 0.07619393177594593,
        "bots": 0.03809696588797296,
        "2": 0.03809696588797296,
        "repository": 0.03809696588797296,
        "scanning": 0.03809696588797296,
        "indexing": 0.03809696588797296,
        "walk": 0.03809696588797296,
        "filesystem": 0.03809696588797296,
        "with": 0.03809696588797296,
        "ignore": 0.03809696588797296,
        "rules": 0.03809696588797296,
        "gitignore": 0.03809696588797296,
        "yml": 0.03809696588797296,
        "build": 0.07619393177594593,
        "normalized": 0.03809696588797296,
        "manifest": 0.07619393177594593,
        "files": 0.07619393177594593,
        "roles": 0.03809696588797296,
        "src": 0.03809696588797296,
        "test": 0.03809696588797296,
        "config": 0.07619393177594593,
        "infra": 0.03809696588797296,
        "hash": 0.03809696588797296,
        "cache": 0.03809696588797296,
        "file": 0.03809696588797296,
        "metadata": 0.03809696588797296,
        "speed": 0.03809696588797296,
        "subsequent": 0.03809696588797296,
        "runs": 0.03809696588797296,
        "entrypoint": 0.07619393177594593,
        "detection": 0.07619393177594593,
        "e": 0.03809696588797296,
        "g": 0.03809696588797296,
        "main": 0.03809696588797296,
        "springbootapplication": 0.03809696588797296,
        "app": 0.03809696588797296,
        "monorepo": 0.07619393177594593,
        "module": 0.03809696588797296,
        "3": 0.03809696588797296,
        "analyzers": 0.19048482943986483,
        "plugin": 0.03809696588797296,
        "based": 0.03809696588797296,
        "language": 0.03809696588797296,
        "python": 0.03809696588797296,
        "java": 0.03809696588797296,
        "node": 0.03809696588797296,
        "js": 0.03809696588797296,
        "tier": 0.03809696588797296,
        "poetry": 0.03809696588797296,
        "setuptools": 0.03809696588797296,
        "maven": 0.03809696588797296,
        "gradle": 0.03809696588797296,
        "npm": 0.03809696588797296,
        "pnpm": 0.03809696588797296,
        "yarn": 0.03809696588797296,
        "dependency": 0.03809696588797296,
        "from": 0.03809696588797296,
        "pattern": 0.03809696588797296,
        "docker": 0.03809696588797296,
        "k8s": 0.03809696588797296,
        "layout": 0.03809696588797296,
        "tree": 0.03809696588797296,
        "sitter": 0.03809696588797296,
        "powered": 0.03809696588797296,
        "symbol": 0.03809696588797296,
        "extraction": 0.03809696588797296,
        "flagged": 0.03809696588797296,
        "4": 0.03809696588797296,
        "knowledge": 0.03809696588797296,
        "store": 0.03809696588797296,
        "rag": 0.03809696588797296,
        "local": 0.03809696588797296,
        "embedding": 0.03809696588797296,
        "model": 0.03809696588797296,
        "chunking": 0.03809696588797296,
        "strategy": 0.03809696588797296,
        "index": 0.03809696588797296,
        "top": 0.03809696588797296,
        "n": 0.03809696588797296,
        "source": 0.03809696588797296,
        "headers": 0.03809696588797296,
        "comments": 0.03809696588797296
      },
      "text": "# Intelligent README Generator \u2014 Feature Checklist > Status legend: \u2610 Not started \u00b7 \u25d0 In progress \u00b7 \u2714 Done > Scope tags: **[MVP]** required for proof\u2011of\u2011concept, **[NEXT]** nice\u2011to\u2011have soon, **[STRETCH]** later ## 1) Core Workflows - [x] **docgen init** \u2014 Initialize README for repos without docs **[MVP]** - [x] **docgen update** \u2014 Detect changes on commit/PR and patch affected sections **[MVP]** - [ ] **docgen regenerate** \u2014 Manual full/partial regeneration **[MVP]** - [x] Dry\u2011run mode (`--dry-run`) to preview diffs without writing **[NEXT]** - [x] Service mode (FastAPI) endpoints for CI/bots **[STRETCH]** ## 2) Repository Scanning & Indexing - [x] Walk filesystem with ignore rules (`.gitignore`, `.docgen.yml`) **[MVP]** - [x] Build normalized manifest of files, roles (src/test/docs/config/infra) **[MVP]** - [x] Hash & cache file metadata to speed subsequent runs **[MVP]** - [x] Entrypoint detection (e.g., `main()`, `@SpringBootApplication`, FastAPI app) **[NEXT]** - [x] Monorepo module detection **[NEXT]** ## 3) Analyzers (Plugin\u2011based) - [x] Language analyzers: Python, Java, Node.js (Tier\u20111) **[MVP]** - [x] Build analyzers: Poetry/Setuptools, Maven/Gradle, npm/pnpm/yarn **[MVP]** - [x] Dependency analyzers from manifest files **[MVP]** - [x] Pattern analyzers: Docker/K8s, CI config, monorepo layout **[NEXT]** - [x] Tree\u2011sitter powered symbol/entrypoint extraction (flagged) **[STRETCH]** ## 4) Knowledge Store (RAG) - [x] Local embedding model + chunking strategy **[MVP]** - [x] Index `README`, `/docs`, top N source headers & comments **[MVP]** -",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_checklist.md#1",
      "vector": {
        "ci": 0.03943615033625495,
        "config": 0.0788723006725099,
        "monorepo": 0.03943615033625495,
        "layout": 0.03943615033625495,
        "next": 0.3154892026900396,
        "x": 0.6309784053800792,
        "tree": 0.03943615033625495,
        "sitter": 0.03943615033625495,
        "powered": 0.03943615033625495,
        "symbol": 0.03943615033625495,
        "entrypoint": 0.03943615033625495,
        "extraction": 0.03943615033625495,
        "flagged": 0.03943615033625495,
        "stretch": 0.0788723006725099,
        "4": 0.03943615033625495,
        "knowledge": 0.0788723006725099,
        "store": 0.03943615033625495,
        "rag": 0.03943615033625495,
        "local": 0.0788723006725099,
        "embedding": 0.03943615033625495,
        "model": 0.0788723006725099,
        "chunking": 0.03943615033625495,
        "strategy": 0.03943615033625495,
        "mvp": 0.3943615033625495,
        "index": 0.03943615033625495,
        "readme": 0.03943615033625495,
        "docs": 0.0788723006725099,
        "top": 0.0788723006725099,
        "n": 0.03943615033625495,
        "source": 0.03943615033625495,
        "headers": 0.03943615033625495,
        "comments": 0.03943615033625495,
        "section": 0.19718075168127475,
        "scoped": 0.03943615033625495,
        "retrieval": 0.03943615033625495,
        "k": 0.03943615033625495,
        "per": 0.0788723006725099,
        "lightweight": 0.03943615033625495,
        "graph": 0.03943615033625495,
        "of": 0.03943615033625495,
        "modules": 0.03943615033625495,
        "services": 0.03943615033625495,
        "signals": 0.03943615033625495,
        "5": 0.03943615033625495,
        "prompting": 0.03943615033625495,
        "templates": 0.11830845100876484,
        "jinja2": 0.03943615033625495,
        "intro": 0.03943615033625495,
        "features": 0.03943615033625495,
        "architecture": 0.0788723006725099,
        "quickstart": 0.03943615033625495,
        "build": 0.0788723006725099,
        "test": 0.03943615033625495,
        "deployment": 0.03943615033625495,
        "troubleshooting": 0.03943615033625495,
        "faq": 0.03943615033625495,
        "license": 0.0788723006725099,
        "guardrailed": 0.03943615033625495,
        "system": 0.03943615033625495,
        "prompt": 0.03943615033625495,
        "no": 0.03943615033625495,
        "speculation": 0.03943615033625495,
        "cite": 0.03943615033625495,
        "repo": 0.03943615033625495,
        "facts": 0.03943615033625495,
        "only": 0.03943615033625495,
        "token": 0.03943615033625495,
        "budgeting": 0.03943615033625495,
        "streaming": 0.03943615033625495,
        "by": 0.03943615033625495,
        "generation": 0.03943615033625495,
        "template": 0.03943615033625495,
        "override": 0.03943615033625495,
        "mechanism": 0.03943615033625495,
        "j2": 0.03943615033625495,
        "style": 0.03943615033625495,
        "presets": 0.03943615033625495,
        "concise": 0.03943615033625495,
        "vs": 0.03943615033625495,
        "comprehensive": 0.03943615033625495,
        "mermaid": 0.03943615033625495,
        "js": 0.03943615033625495,
        "diagrams": 0.03943615033625495,
        "for": 0.0788723006725099,
        "flow": 0.03943615033625495,
        "sections": 0.0788723006725099,
        "where": 0.03943615033625495,
        "appropriate": 0.03943615033625495,
        "6": 0.03943615033625495,
        "llm": 0.03943615033625495,
        "runner": 0.0788723006725099,
        "http": 0.03943615033625495,
        "adapter": 0.0788723006725099,
        "host": 0.03943615033625495,
        "container": 0.03943615033625495,
        "defaults": 0.0788723006725099,
        "env": 0.03943615033625495,
        "api": 0.03943615033625495,
        "key": 0.03943615033625495,
        "overrides": 0.03943615033625495,
        "llama": 0.03943615033625495,
        "cpp": 0.03943615033625495,
        "structured": 0.03943615033625495,
        "outputs": 0.03943615033625495,
        "tool": 0.03943615033625495,
        "use": 0.03943615033625495,
        "compatibility": 0.03943615033625495,
        "7": 0.03943615033625495,
        "post": 0.03943615033625495,
        "processing": 0.03943615033625495,
        "markdown": 0.03943615033625495,
        "lint": 0.03943615033625495,
        "heading": 0.03943615033625495,
        "hierarchy": 0.03943615033625495,
        "code": 0.03943615033625495,
        "fences": 0.03943615033625495,
        "line": 0.03943615033625495,
        "length": 0.03943615033625495,
        "auto": 0.03943615033625495,
        "toc": 0.03943615033625495,
        "level": 0.03943615033625495,
        "3": 0.03943615033625495,
        "badges": 0.03943615033625495,
        "coverage": 0.03943615033625495,
        "with": 0.03943615033625495,
        "safe": 0.03943615033625495,
        "link": 0.03943615033625495,
        "validator": 0.03943615033625495,
        "relative": 0.03943615033625495,
        "absolute": 0.03943615033625495,
        "managed": 0.03943615033625495,
        "markers": 0.03943615033625495,
        "idempotent": 0.03943615033625495,
        "patching": 0.03943615033625495,
        "docgen": 0.03943615033625495,
        "begin": 0.03943615033625495,
        "end": 0.03943615033625495,
        "8": 0.03943615033625495,
        "git": 0.03943615033625495,
        "integration": 0.03943615033625495,
        "diff": 0.03943615033625495,
        "detection": 0.03943615033625495,
        "map": 0.03943615033625495,
        "changed": 0.03943615033625495,
        "files": 0.03943615033625495,
        "impacted": 0.03943615033625495
      },
      "text": "CI config, monorepo layout **[NEXT]** - [x] Tree\u2011sitter powered symbol/entrypoint extraction (flagged) **[STRETCH]** ## 4) Knowledge Store (RAG) - [x] Local embedding model + chunking strategy **[MVP]** - [x] Index `README`, `/docs`, top N source headers & comments **[MVP]** - [x] Section\u2011scoped retrieval (top\u2011k per section) **[MVP]** - [ ] Lightweight knowledge graph of modules/services/signals **[NEXT]** ## 5) Prompting & Templates - [x] Jinja2 templates per section (intro, features, architecture, quickstart, config, build/test, deployment, troubleshooting, FAQ, license) **[MVP]** - [ ] Guardrailed system prompt (\u201cno speculation; cite repo facts only\u201d) **[MVP]** - [ ] Token budgeting & streaming section-by-section generation **[MVP]** - [x] Template override mechanism (`docs/templates/*.j2`) **[NEXT]** - [x] Style presets: concise vs comprehensive **[NEXT]** - [x] Mermaid.js diagrams for architecture/flow sections where appropriate **[NEXT]** ## 6) Local LLM Runner - [x] Model Runner HTTP adapter (host/container defaults, env/API key overrides) **[MVP]** - [x] llama.cpp adapter **[NEXT]** - [ ] Structured outputs / tool\u2011use compatibility **[STRETCH]** ## 7) Post\u2011Processing - [x] Markdown lint: heading hierarchy, code fences, line length **[MVP]** - [x] Auto ToC (\u2264 level 3) **[MVP]** - [x] Badges (build, coverage, license) with safe defaults **[NEXT]** - [x] Link validator (relative/absolute) **[NEXT]** - [x] Managed markers for idempotent patching (`<!-- docgen:begin:end -->`) **[MVP]** ## 8) Git Integration - [x] Diff detection (map changed files \u2192 impacted sections)",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_checklist.md#2",
      "vector": {
        "x": 0.6172133998483676,
        "badges": 0.03857583749052298,
        "build": 0.07715167498104596,
        "coverage": 0.03857583749052298,
        "license": 0.03857583749052298,
        "with": 0.07715167498104596,
        "safe": 0.03857583749052298,
        "defaults": 0.03857583749052298,
        "next": 0.3086066999241838,
        "link": 0.03857583749052298,
        "validator": 0.03857583749052298,
        "relative": 0.03857583749052298,
        "absolute": 0.03857583749052298,
        "managed": 0.03857583749052298,
        "markers": 0.03857583749052298,
        "for": 0.11572751247156893,
        "idempotent": 0.03857583749052298,
        "patching": 0.03857583749052298,
        "docgen": 0.07715167498104596,
        "begin": 0.03857583749052298,
        "end": 0.03857583749052298,
        "mvp": 0.4629100498862757,
        "8": 0.03857583749052298,
        "git": 0.03857583749052298,
        "integration": 0.07715167498104596,
        "diff": 0.03857583749052298,
        "detection": 0.03857583749052298,
        "map": 0.03857583749052298,
        "changed": 0.03857583749052298,
        "files": 0.03857583749052298,
        "impacted": 0.03857583749052298,
        "sections": 0.03857583749052298,
        "branch": 0.03857583749052298,
        "pr": 0.07715167498104596,
        "creation": 0.03857583749052298,
        "summary": 0.03857583749052298,
        "of": 0.03857583749052298,
        "readme": 0.11572751247156893,
        "deltas": 0.03857583749052298,
        "commit": 0.03857583749052298,
        "mode": 0.03857583749052298,
        "init": 0.03857583749052298,
        "or": 0.03857583749052298,
        "small": 0.03857583749052298,
        "changes": 0.07715167498104596,
        "configurable": 0.03857583749052298,
        "prevent": 0.03857583749052298,
        "loops": 0.03857583749052298,
        "on": 0.07715167498104596,
        "only": 0.07715167498104596,
        "9": 0.03857583749052298,
        "configuration": 0.03857583749052298,
        "parse": 0.03857583749052298,
        "yml": 0.03857583749052298,
        "llm": 0.03857583749052298,
        "style": 0.03857583749052298,
        "analyzers": 0.03857583749052298,
        "publish": 0.03857583749052298,
        "path": 0.03857583749052298,
        "exclusions": 0.03857583749052298,
        "watched_globs": 0.03857583749052298,
        "ci": 0.11572751247156893,
        "triggers": 0.03857583749052298,
        "per": 0.07715167498104596,
        "section": 0.03857583749052298,
        "off": 0.03857583749052298,
        "toggles": 0.03857583749052298,
        "and": 0.11572751247156893,
        "titles": 0.03857583749052298,
        "10": 0.03857583749052298,
        "github": 0.03857583749052298,
        "actions": 0.03857583749052298,
        "example": 0.03857583749052298,
        "workflow": 0.03857583749052298,
        "gitlab": 0.03857583749052298,
        "bitbucket": 0.03857583749052298,
        "pipelines": 0.03857583749052298,
        "samples": 0.03857583749052298,
        "labeling": 0.03857583749052298,
        "docs": 0.03857583749052298,
        "auto": 0.03857583749052298,
        "update": 0.03857583749052298,
        "behavior": 0.03857583749052298,
        "11": 0.03857583749052298,
        "security": 0.03857583749052298,
        "privacy": 0.03857583749052298,
        "local": 0.03857583749052298,
        "models": 0.03857583749052298,
        "never": 0.03857583749052298,
        "exfiltrate": 0.03857583749052298,
        "code": 0.03857583749052298,
        "respect": 0.03857583749052298,
        "gitignore": 0.03857583749052298,
        "exclude": 0.03857583749052298,
        "large": 0.03857583749052298,
        "binaries": 0.03857583749052298,
        "secrets": 0.03857583749052298,
        "optional": 0.03857583749052298,
        "simple": 0.03857583749052298,
        "secret": 0.03857583749052298,
        "scanner": 0.03857583749052298,
        "gate": 0.03857583749052298,
        "12": 0.03857583749052298,
        "multi": 0.03857583749052298,
        "language": 0.03857583749052298,
        "project": 0.03857583749052298,
        "types": 0.03857583749052298,
        "tier": 0.07715167498104596,
        "1": 0.03857583749052298,
        "python": 0.03857583749052298,
        "poetry": 0.03857583749052298,
        "setuptools": 0.03857583749052298,
        "java": 0.03857583749052298,
        "maven": 0.03857583749052298,
        "gradle": 0.03857583749052298,
        "spring": 0.03857583749052298,
        "boot": 0.03857583749052298,
        "node": 0.03857583749052298,
        "js": 0.03857583749052298,
        "npm": 0.03857583749052298,
        "pnpm": 0.03857583749052298,
        "express": 0.03857583749052298,
        "2": 0.03857583749052298,
        "go": 0.03857583749052298,
        "rust": 0.03857583749052298,
        "ruby": 0.03857583749052298,
        "php": 0.03857583749052298,
        "stretch": 0.03857583749052298,
        "framework": 0.03857583749052298,
        "aware": 0.03857583749052298,
        "quickstart": 0.03857583749052298,
        "commands": 0.03857583749052298,
        "system": 0.03857583749052298,
        "13": 0.03857583749052298,
        "quality": 0.03857583749052298,
        "gates": 0.03857583749052298,
        "evaluation": 0.03857583749052298,
        "command": 0.03857583749052298,
        "validation": 0.03857583749052298,
        "existence": 0.03857583749052298,
        "checks": 0.07715167498104596,
        "no": 0.03857583749052298,
        "hallucination": 0.03857583749052298,
        "reject": 0.03857583749052298,
        "facts": 0.03857583749052298,
        "not": 0.03857583749052298
      },
      "text": "[x] Badges (build, coverage, license) with safe defaults **[NEXT]** - [x] Link validator (relative/absolute) **[NEXT]** - [x] Managed markers for idempotent patching (`<!-- docgen:begin:end -->`) **[MVP]** ## 8) Git Integration - [x] Diff detection (map changed files \u2192 impacted sections) **[MVP]** - [x] Branch + PR creation with summary of README deltas **[MVP]** - [x] Commit mode for init or small changes (configurable) **[NEXT]** - [x] Prevent loops on README\u2011only changes **[MVP]** ## 9) Configuration - [x] Parse `.docgen.yml` (LLM, readme style, analyzers, publish) **[MVP]** - [x] Path exclusions & `watched_globs` for CI triggers **[MVP]** - [ ] Per-section on/off toggles and titles **[NEXT]** ## 10) CI Integration - [x] GitHub Actions example workflow **[MVP]** - [ ] GitLab CI and Bitbucket Pipelines samples **[NEXT]** - [x] Labeling (`docs:auto`) and PR update behavior **[NEXT]** ## 11) Security & Privacy - [x] Local-only models; never exfiltrate code **[MVP]** - [ ] Respect `.gitignore`; exclude large binaries/secrets **[MVP]** - [ ] Optional simple secret scanner gate **[NEXT]** ## 12) Multi\u2011Language & Project Types - [x] Tier\u20111: Python (Poetry/Setuptools), Java (Maven/Gradle/Spring Boot), Node.js (npm/pnpm/Express/Next) **[MVP]** - [ ] Tier\u20112: Go, Rust, Ruby, PHP **[STRETCH]** - [x] Framework\u2011aware quickstart commands per build system **[MVP]** ## 13) Quality Gates & Evaluation - [x] Command validation (existence checks) **[MVP]** - [x] No-hallucination checks: reject facts not",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_checklist.md#3",
      "vector": {
        "npm": 0.052999894000318,
        "pnpm": 0.052999894000318,
        "express": 0.052999894000318,
        "next": 0.211999576001272,
        "mvp": 0.476999046002862,
        "tier": 0.052999894000318,
        "2": 0.052999894000318,
        "go": 0.052999894000318,
        "rust": 0.052999894000318,
        "ruby": 0.052999894000318,
        "php": 0.052999894000318,
        "stretch": 0.052999894000318,
        "x": 0.5829988340034981,
        "framework": 0.052999894000318,
        "aware": 0.052999894000318,
        "quickstart": 0.052999894000318,
        "commands": 0.052999894000318,
        "per": 0.105999788000636,
        "build": 0.052999894000318,
        "system": 0.052999894000318,
        "13": 0.052999894000318,
        "quality": 0.052999894000318,
        "gates": 0.052999894000318,
        "evaluation": 0.052999894000318,
        "command": 0.052999894000318,
        "validation": 0.052999894000318,
        "existence": 0.052999894000318,
        "checks": 0.105999788000636,
        "no": 0.052999894000318,
        "hallucination": 0.052999894000318,
        "reject": 0.052999894000318,
        "facts": 0.052999894000318,
        "not": 0.052999894000318,
        "in": 0.052999894000318,
        "signals": 0.052999894000318,
        "rag": 0.105999788000636,
        "readme": 0.105999788000636,
        "scorecard": 0.052999894000318,
        "coverage": 0.052999894000318,
        "buildability": 0.052999894000318,
        "link": 0.052999894000318,
        "validity": 0.052999894000318,
        "diff": 0.052999894000318,
        "alignment": 0.052999894000318,
        "lint": 0.105999788000636,
        "14": 0.052999894000318,
        "performance": 0.052999894000318,
        "caching": 0.052999894000318,
        "persist": 0.052999894000318,
        "analyzer": 0.105999788000636,
        "outputs": 0.052999894000318,
        "embeddings": 0.052999894000318,
        "under": 0.052999894000318,
        "docgen": 0.052999894000318,
        "incremental": 0.052999894000318,
        "refresh": 0.052999894000318,
        "changed": 0.052999894000318,
        "files": 0.052999894000318,
        "only": 0.052999894000318,
        "15": 0.052999894000318,
        "error": 0.052999894000318,
        "handling": 0.052999894000318,
        "ux": 0.052999894000318,
        "fail": 0.052999894000318,
        "safe": 0.052999894000318,
        "stub": 0.052999894000318,
        "generation": 0.052999894000318,
        "when": 0.052999894000318,
        "evidence": 0.052999894000318,
        "is": 0.052999894000318,
        "insufficient": 0.052999894000318,
        "clear": 0.052999894000318,
        "run": 0.052999894000318,
        "logs": 0.052999894000318,
        "pr": 0.052999894000318,
        "body": 0.052999894000318,
        "with": 0.052999894000318,
        "rationale": 0.052999894000318,
        "sections": 0.052999894000318,
        "updated": 0.052999894000318,
        "because": 0.052999894000318,
        "helpful": 0.052999894000318,
        "cli": 0.052999894000318,
        "errors": 0.052999894000318,
        "and": 0.105999788000636,
        "verbose": 0.052999894000318,
        "flag": 0.052999894000318,
        "works": 0.052999894000318,
        "pre": 0.052999894000318,
        "post": 0.052999894000318,
        "subcommand": 0.052999894000318,
        "16": 0.052999894000318,
        "extensibility": 0.052999894000318,
        "abc": 0.052999894000318,
        "plugin": 0.052999894000318,
        "discovery": 0.052999894000318,
        "template": 0.052999894000318,
        "packs": 0.052999894000318,
        "org": 0.052999894000318,
        "style": 0.105999788000636,
        "definition": 0.052999894000318,
        "of": 0.052999894000318,
        "done": 0.052999894000318,
        "section": 0.052999894000318,
        "passing": 0.052999894000318,
        "unit": 0.052999894000318,
        "integration": 0.052999894000318,
        "tests": 0.052999894000318,
        "for": 0.052999894000318,
        "core": 0.052999894000318,
        "logic": 0.052999894000318,
        "golden": 0.052999894000318,
        "regression": 0.052999894000318,
        "test": 0.052999894000318,
        "s": 0.052999894000318,
        "meets": 0.052999894000318,
        "requirements": 0.052999894000318
      },
      "text": "(npm/pnpm/Express/Next) **[MVP]** - [ ] Tier\u20112: Go, Rust, Ruby, PHP **[STRETCH]** - [x] Framework\u2011aware quickstart commands per build system **[MVP]** ## 13) Quality Gates & Evaluation - [x] Command validation (existence checks) **[MVP]** - [x] No-hallucination checks: reject facts not in signals/RAG **[MVP]** - [x] README scorecard (coverage, buildability, link validity, diff alignment, lint) **[NEXT]** ## 14) Performance & Caching - [x] Persist analyzer outputs & embeddings under `.docgen/` **[MVP]** - [x] Incremental RAG refresh (changed files only) **[NEXT]** ## 15) Error Handling & UX - [x] Fail-safe stub generation when evidence is insufficient **[MVP]** - [x] Clear run logs + PR body with rationale (\u201csections updated because\u2026\u201d) **[MVP]** - [x] Helpful CLI errors and `--verbose` flag (works pre/post subcommand) **[MVP]** ## 16) Extensibility - [x] Analyzer ABC and plugin discovery **[MVP]** - [x] Template packs (org\u2011style) **[NEXT]** --- ### Definition of Done (per section) - [ ] Passing unit & integration tests for core logic - [ ] Golden README regression test(s) - [ ] Meets lint/style requirements",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_order.md#0",
      "vector": {
        "docgen": 0.25491557319725244,
        "development": 0.042485928866208736,
        "roadmap": 0.042485928866208736,
        "phase": 0.12745778659862622,
        "0": 0.042485928866208736,
        "bootstrap": 0.042485928866208736,
        "the": 0.042485928866208736,
        "skeleton": 0.08497185773241747,
        "1": 0.3398874309296699,
        "project": 0.042485928866208736,
        "cli": 0.042485928866208736,
        "config": 0.08497185773241747,
        "loader": 0.042485928866208736,
        "yml": 0.042485928866208736,
        "models": 0.042485928866208736,
        "done": 0.3823733597958786,
        "covers": 0.3823733597958786,
        "commands": 0.042485928866208736,
        "scaffolding": 0.042485928866208736,
        "9": 0.042485928866208736,
        "parse": 0.042485928866208736,
        "16": 0.08497185773241747,
        "analyzer": 0.08497185773241747,
        "abc": 0.08497185773241747,
        "2": 0.2124296443310437,
        "plugin": 0.08497185773241747,
        "discovery": 0.08497185773241747,
        "init": 0.16994371546483494,
        "happy": 0.042485928866208736,
        "path": 0.042485928866208736,
        "single": 0.042485928866208736,
        "repo": 0.12745778659862622,
        "local": 0.08497185773241747,
        "scanner": 0.042485928866208736,
        "manifest": 0.08497185773241747,
        "roles": 0.042485928866208736,
        "hashing": 0.042485928866208736,
        "ignores": 0.08497185773241747,
        "walk": 0.042485928866208736,
        "fs": 0.042485928866208736,
        "cache": 0.042485928866208736,
        "tier": 0.042485928866208736,
        "analyzers": 0.12745778659862622,
        "python": 0.042485928866208736,
        "java": 0.042485928866208736,
        "node": 0.042485928866208736,
        "build": 0.08497185773241747,
        "dependency": 0.042485928866208736,
        "3": 0.08497185773241747,
        "language": 0.042485928866208736,
        "deps": 0.042485928866208736,
        "templates": 0.12745778659862622,
        "prompt": 0.12745778659862622,
        "builder": 0.08497185773241747,
        "section": 0.12745778659862622,
        "by": 0.042485928866208736,
        "guardrailed": 0.042485928866208736,
        "system": 0.042485928866208736,
        "partial": 0.042485928866208736,
        "guardrails": 0.08497185773241747,
        "unused": 0.042485928866208736,
        "5": 0.08497185773241747,
        "jinja2": 0.042485928866208736,
        "token": 0.042485928866208736,
        "budget": 0.042485928866208736,
        "4": 0.042485928866208736,
        "llm": 0.042485928866208736,
        "runner": 0.042485928866208736,
        "ollama": 0.08497185773241747,
        "adapter": 0.042485928866208736,
        "6": 0.08497185773241747,
        "post": 0.042485928866208736,
        "processor": 0.042485928866208736,
        "managed": 0.042485928866208736,
        "markers": 0.12745778659862622,
        "toc": 0.08497185773241747,
        "markdown": 0.042485928866208736,
        "lint": 0.08497185773241747,
        "7": 0.042485928866208736,
        "git": 0.08497185773241747,
        "publisher": 0.08497185773241747,
        "commit": 0.08497185773241747,
        "mode": 0.08497185773241747,
        "for": 0.08497185773241747,
        "only": 0.042485928866208736,
        "8": 0.08497185773241747,
        "end": 0.08497185773241747,
        "to": 0.042485928866208736,
        "milestone": 0.042485928866208736,
        "generates": 0.042485928866208736,
        "a": 0.08497185773241747,
        "clean": 0.042485928866208736,
        "readme": 0.042485928866208736,
        "with": 0.042485928866208736,
        "no": 0.042485928866208736,
        "docs": 0.042485928866208736,
        "update": 0.08497185773241747,
        "on": 0.042485928866208736,
        "change": 0.08497185773241747,
        "pr": 0.042485928866208736,
        "workflow": 0.042485928866208736,
        "diff": 0.08497185773241747,
        "detection": 0.042485928866208736,
        "mapping": 0.08497185773241747,
        "patching": 0.042485928866208736,
        "inside": 0.042485928866208736,
        "prevent": 0.042485928866208736,
        "loops": 0.042485928866208736
      },
      "text": "# DocGen Development Roadmap ## Phase 0 \u2014 Bootstrap the skeleton 1. **Project skeleton + CLI (`docgen`) + config loader (`.docgen.yml`) + models** \u2014 \u2714 Done * Covers: 1 (commands scaffolding), 9 (parse config), 16 (Analyzer ABC) 2. **Analyzer plugin ABC & discovery** \u2014 \u2714 Done * Covers: 16 (plugin discovery) ## Phase 1 \u2014 \"Init\" happy-path (single repo, local) 1. **Repo scanner & manifest (roles, hashing, ignores)** \u2014 \u2714 Done * Covers: 2 (walk FS, manifest, cache, ignores) 2. **Tier-1 analyzers (Python, Java, Node) + build analyzers + dependency analyzers** \u2014 \u2714 Done * Covers: 3 (language/build/deps) 3. **Templates + prompt builder (section-by-section) + guardrailed system prompt** \u2014 \u25d0 Partial (templates/prompt builder done; guardrails unused) * Covers: 5 (Jinja2 templates, guardrails, token budget) 4. **Local LLM runner (Ollama adapter)** \u2014 \u2714 Done * Covers: 6 (Ollama) 5. **Post-processor: managed markers, ToC, markdown lint** \u2014 \u2714 Done * Covers: 7 (markers, ToC, lint) 6. **Git publisher: commit mode (for init only)** \u2014 \u2714 Done * Covers: 8 (commit mode), 1 (`docgen init` end-to-end) \u2705 **Milestone**: `docgen init` generates a clean README for a repo with no docs. ## Phase 2 \u2014 Update-on-change (PR workflow) 1. **Diff detection + change\u2192section mapping + patching inside markers** \u2014 \u2714 Done * Covers: 8 (diff mapping, prevent loops), 1 (`docgen update`) 2. **Git publisher:",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/feature_order.md#1",
      "vector": {
        "readme": 0.09035079029052513,
        "for": 0.045175395145262566,
        "a": 0.09035079029052513,
        "repo": 0.09035079029052513,
        "with": 0.1355261854357877,
        "no": 0.18070158058105026,
        "docs": 0.09035079029052513,
        "phase": 0.22587697572631282,
        "2": 0.22587697572631282,
        "update": 0.18070158058105026,
        "on": 0.045175395145262566,
        "change": 0.09035079029052513,
        "pr": 0.22587697572631282,
        "workflow": 0.045175395145262566,
        "1": 0.22587697572631282,
        "diff": 0.09035079029052513,
        "detection": 0.045175395145262566,
        "section": 0.1355261854357877,
        "mapping": 0.09035079029052513,
        "patching": 0.045175395145262566,
        "inside": 0.045175395145262566,
        "markers": 0.045175395145262566,
        "done": 0.36140316116210053,
        "covers": 0.36140316116210053,
        "8": 0.09035079029052513,
        "prevent": 0.045175395145262566,
        "loops": 0.045175395145262566,
        "docgen": 0.1355261854357877,
        "git": 0.045175395145262566,
        "publisher": 0.045175395145262566,
        "branch": 0.09035079029052513,
        "delta": 0.045175395145262566,
        "summary": 0.045175395145262566,
        "10": 0.09035079029052513,
        "labeling": 0.045175395145262566,
        "later": 0.045175395145262566,
        "milestone": 0.09035079029052513,
        "opens": 0.045175395145262566,
        "updating": 0.045175395145262566,
        "only": 0.09035079029052513,
        "impacted": 0.045175395145262566,
        "sections": 0.045175395145262566,
        "3": 0.045175395145262566,
        "minimal": 0.045175395145262566,
        "rag": 0.09035079029052513,
        "accuracy": 0.045175395145262566,
        "lite": 0.045175395145262566,
        "embed": 0.045175395145262566,
        "top": 0.045175395145262566,
        "n": 0.045175395145262566,
        "source": 0.045175395145262566,
        "headers": 0.045175395145262566,
        "scoped": 0.045175395145262566,
        "retrieval": 0.09035079029052513,
        "4": 0.09035079029052513,
        "local": 0.09035079029052513,
        "embedding": 0.045175395145262566,
        "index": 0.045175395145262566,
        "sources": 0.045175395145262566,
        "per": 0.045175395145262566,
        "hallucination": 0.1355261854357877,
        "command": 0.1355261854357877,
        "existence": 0.045175395145262566,
        "checks": 0.045175395145262566,
        "partial": 0.045175395145262566,
        "validation": 0.09035079029052513,
        "guard": 0.045175395145262566,
        "not": 0.045175395145262566,
        "implemented": 0.045175395145262566,
        "13": 0.045175395145262566,
        "outputs": 0.045175395145262566,
        "grounded": 0.045175395145262566,
        "in": 0.045175395145262566,
        "facts": 0.045175395145262566,
        "targeted": 0.045175395145262566,
        "context": 0.045175395145262566,
        "hardening": 0.045175395145262566,
        "dx": 0.045175395145262566,
        "error": 0.045175395145262566,
        "handling": 0.045175395145262566,
        "clear": 0.045175395145262566,
        "logs": 0.09035079029052513,
        "verbose": 0.045175395145262566,
        "fail": 0.09035079029052513,
        "safe": 0.09035079029052513,
        "stubs": 0.045175395145262566,
        "15": 0.045175395145262566,
        "cli": 0.045175395145262566,
        "ux": 0.045175395145262566,
        "security": 0.045175395145262566,
        "gitignore": 0.045175395145262566,
        "respect": 0.045175395145262566,
        "path": 0.045175395145262566,
        "excludes": 0.09035079029052513,
        "enforcement": 0.045175395145262566,
        "11": 0.045175395145262566,
        "privacy": 0.045175395145262566,
        "5": 0.09035079029052513,
        "ci": 0.045175395145262566,
        "integration": 0.045175395145262566,
        "config": 0.09035079029052513,
        "polish": 0.045175395145262566,
        "github": 0.045175395145262566,
        "actions": 0.09035079029052513,
        "sample": 0.045175395145262566,
        "push": 0.045175395145262566,
        "trigger": 0.045175395145262566,
        "calling": 0.045175395145262566,
        "gh": 0.045175395145262566,
        "refinements": 0.045175395145262566,
        "watched": 0.045175395145262566,
        "globs": 0.045175395145262566,
        "style": 0.09035079029052513,
        "preset": 0.045175395145262566,
        "concise": 0.045175395145262566,
        "comprehensive": 0.045175395145262566,
        "9": 0.045175395145262566,
        "watched_globs": 0.045175395145262566,
        "presets": 0.045175395145262566,
        "6": 0.045175395145262566,
        "multi": 0.045175395145262566,
        "language": 0.045175395145262566,
        "breadth": 0.045175395145262566
      },
      "text": "README for a repo with no docs. ## Phase 2 \u2014 Update-on-change (PR workflow) 1. **Diff detection + change\u2192section mapping + patching inside markers** \u2014 \u2714 Done * Covers: 8 (diff mapping, prevent loops), 1 (`docgen update`) 2. **Git publisher: branch + PR with delta summary** \u2014 \u2714 Done * Covers: 8 (branch/PR), 10 (labeling later) \u2705 **Milestone**: `docgen update` opens a PR updating only impacted sections. ## Phase 3 \u2014 Minimal RAG & accuracy 1. **RAG Lite: embed README/docs/top N source headers; section-scoped retrieval** \u2014 \u2714 Done * Covers: 4 (local embedding, index sources, per-section retrieval) 2. **No-hallucination & command existence checks** \u2014 \u25d0 Partial (command validation done; no-hallucination guard not implemented) * Covers: 13 (command validation, no-hallucination) \u2705 **Milestone**: outputs grounded in repo facts with targeted context. ## Phase 4 \u2014 Hardening & DX 1. **Error handling, clear logs, `--verbose`, fail-safe stubs** \u2014 \u2714 Done * Covers: 15 (fail-safe, logs, CLI UX) 2. **Security: .gitignore respect, path excludes, local-only enforcement** \u2014 \u2714 Done * Covers: 11 (privacy, excludes) ## Phase 5 \u2014 CI integration & config polish 1. **GitHub Actions sample (push/PR trigger calling `docgen update`)** \u2014 \u2714 Done * Covers: 10 (GH Actions) 2. **Config refinements: watched globs, style preset (concise/comprehensive)** \u2014 \u2714 Done * Covers: 9 (watched_globs), 5 (style presets) ## Phase 6 \u2014 Multi-language breadth",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/feature_order.md#2",
      "vector": {
        "github": 0.046274481338274755,
        "actions": 0.09254896267654951,
        "sample": 0.046274481338274755,
        "push": 0.046274481338274755,
        "pr": 0.18509792535309902,
        "trigger": 0.046274481338274755,
        "calling": 0.046274481338274755,
        "docgen": 0.13882344401482424,
        "update": 0.046274481338274755,
        "done": 0.32392136936792326,
        "covers": 0.41647033204447276,
        "10": 0.09254896267654951,
        "gh": 0.046274481338274755,
        "2": 0.23137240669137377,
        "config": 0.09254896267654951,
        "refinements": 0.046274481338274755,
        "watched": 0.046274481338274755,
        "globs": 0.046274481338274755,
        "style": 0.09254896267654951,
        "preset": 0.046274481338274755,
        "concise": 0.046274481338274755,
        "comprehensive": 0.046274481338274755,
        "9": 0.046274481338274755,
        "watched_globs": 0.046274481338274755,
        "5": 0.09254896267654951,
        "presets": 0.046274481338274755,
        "phase": 0.13882344401482424,
        "6": 0.09254896267654951,
        "multi": 0.046274481338274755,
        "language": 0.046274481338274755,
        "breadth": 0.046274481338274755,
        "framework": 0.13882344401482424,
        "smarts": 0.046274481338274755,
        "1": 0.23137240669137377,
        "entrypoint": 0.046274481338274755,
        "detection": 0.046274481338274755,
        "main": 0.046274481338274755,
        "spring": 0.046274481338274755,
        "boot": 0.046274481338274755,
        "fastapi": 0.09254896267654951,
        "aware": 0.09254896267654951,
        "quick": 0.046274481338274755,
        "start": 0.046274481338274755,
        "entrypoints": 0.046274481338274755,
        "12": 0.046274481338274755,
        "commands": 0.046274481338274755,
        "pattern": 0.09254896267654951,
        "analyzers": 0.09254896267654951,
        "docker": 0.046274481338274755,
        "k8s": 0.046274481338274755,
        "ci": 0.046274481338274755,
        "monorepo": 0.046274481338274755,
        "layout": 0.046274481338274755,
        "3": 0.13882344401482424,
        "7": 0.13882344401482424,
        "quality": 0.046274481338274755,
        "gates": 0.046274481338274755,
        "performance": 0.046274481338274755,
        "readme": 0.09254896267654951,
        "scorecard": 0.13882344401482424,
        "link": 0.09254896267654951,
        "validator": 0.09254896267654951,
        "badges": 0.09254896267654951,
        "13": 0.046274481338274755,
        "artifact": 0.09254896267654951,
        "embedding": 0.046274481338274755,
        "caching": 0.046274481338274755,
        "in": 0.046274481338274755,
        "incremental": 0.09254896267654951,
        "rag": 0.09254896267654951,
        "refresh": 0.09254896267654951,
        "partial": 0.046274481338274755,
        "embeddings": 0.046274481338274755,
        "cached": 0.046274481338274755,
        "no": 0.046274481338274755,
        "analyzer": 0.046274481338274755,
        "store": 0.046274481338274755,
        "14": 0.046274481338274755,
        "persist": 0.046274481338274755,
        "outputs": 0.046274481338274755,
        "8": 0.046274481338274755,
        "nice": 0.046274481338274755,
        "to": 0.09254896267654951,
        "have": 0.046274481338274755,
        "stretch": 0.046274481338274755,
        "dry": 0.09254896267654951,
        "run": 0.09254896267654951,
        "mode": 0.13882344401482424,
        "labeling": 0.09254896267654951,
        "updates": 0.09254896267654951,
        "commit": 0.046274481338274755,
        "policy": 0.046274481338274755,
        "tuning": 0.046274481338274755,
        "template": 0.13882344401482424,
        "overrides": 0.046274481338274755,
        "docs": 0.046274481338274755,
        "templates": 0.046274481338274755,
        "j2": 0.046274481338274755,
        "org": 0.046274481338274755,
        "packs": 0.09254896267654951,
        "override": 0.046274481338274755,
        "16": 0.046274481338274755,
        "service": 0.09254896267654951,
        "llama": 0.09254896267654951,
        "cpp": 0.09254896267654951,
        "adapter": 0.046274481338274755,
        "tree": 0.09254896267654951,
        "sitter": 0.09254896267654951,
        "extraction": 0.046274481338274755,
        "not": 0.046274481338274755,
        "started": 0.046274481338274755,
        "why": 0.046274481338274755,
        "this": 0.046274481338274755,
        "order": 0.046274481338274755,
        "fastest": 0.046274481338274755,
        "path": 0.046274481338274755,
        "value": 0.046274481338274755,
        "get": 0.046274481338274755,
        "init": 0.046274481338274755,
        "producing": 0.046274481338274755,
        "a": 0.046274481338274755,
        "solid": 0.046274481338274755,
        "before": 0.046274481338274755,
        "adding": 0.046274481338274755,
        "diffing": 0.046274481338274755
      },
      "text": "**GitHub Actions sample (push/PR trigger calling `docgen update`)** \u2014 \u2714 Done * Covers: 10 (GH Actions) 2. **Config refinements: watched globs, style preset (concise/comprehensive)** \u2014 \u2714 Done * Covers: 9 (watched_globs), 5 (style presets) ## Phase 6 \u2014 Multi-language breadth & framework smarts 1. **Entrypoint detection (main, Spring Boot, FastAPI) + framework-aware Quick Start** \u2014 \u2714 Done * Covers: 2 (entrypoints), 12 (framework-aware commands) 2. **Pattern analyzers (Docker/K8s, CI config, monorepo layout)** \u2014 \u2714 Done * Covers: 3 (pattern analyzers) ## Phase 7 \u2014 Quality gates & performance 1. **README scorecard + link validator + badges** \u2014 \u2714 Done * Covers: 13 (scorecard), 7 (link validator), 7 (badges) 2. **Artifact & embedding caching in `.docgen/` + incremental RAG refresh** \u2014 \u25d0 Partial (embeddings/scorecard cached; no analyzer artifact store) * Covers: 14 (persist outputs, incremental refresh) ## Phase 8 \u2014 \"Nice to have\" & stretch 1. **Dry-run mode, PR labeling/updates, commit/PR policy tuning** \u2014 \u2714 Done * Covers: 1 (dry-run), 10 (labeling/PR updates) 2. **Template overrides (`docs/templates/*.j2`) & org template packs** \u2014 \u2714 Done * Covers: 5 (override), 16 (template packs) 3. **Service mode (FastAPI), llama.cpp adapter, tree-sitter extraction** \u2014 \u2610 Not started * Covers: 1 (service mode), 6 (llama.cpp), 3 (tree-sitter) ## Why this order * **Fastest path to value**: get `docgen init` producing a solid README before adding diffing/RAG.",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/feature_order.md#3",
      "vector": {
        "3": 0.18333969940564226,
        "service": 0.18333969940564226,
        "mode": 0.18333969940564226,
        "fastapi": 0.09166984970282113,
        "llama": 0.18333969940564226,
        "cpp": 0.18333969940564226,
        "adapter": 0.09166984970282113,
        "tree": 0.18333969940564226,
        "sitter": 0.18333969940564226,
        "extraction": 0.09166984970282113,
        "not": 0.09166984970282113,
        "started": 0.09166984970282113,
        "covers": 0.09166984970282113,
        "1": 0.09166984970282113,
        "6": 0.09166984970282113,
        "why": 0.09166984970282113,
        "this": 0.09166984970282113,
        "order": 0.09166984970282113,
        "fastest": 0.09166984970282113,
        "path": 0.09166984970282113,
        "to": 0.18333969940564226,
        "value": 0.09166984970282113,
        "get": 0.09166984970282113,
        "docgen": 0.09166984970282113,
        "init": 0.09166984970282113,
        "producing": 0.09166984970282113,
        "a": 0.09166984970282113,
        "solid": 0.09166984970282113,
        "readme": 0.09166984970282113,
        "before": 0.09166984970282113,
        "adding": 0.09166984970282113,
        "diffing": 0.09166984970282113,
        "rag": 0.18333969940564226,
        "contain": 0.09166984970282113,
        "risk": 0.09166984970282113,
        "early": 0.09166984970282113,
        "section": 0.09166984970282113,
        "markers": 0.09166984970282113,
        "lint": 0.09166984970282113,
        "and": 0.2750095491084634,
        "commit": 0.09166984970282113,
        "publishing": 0.09166984970282113,
        "ensure": 0.09166984970282113,
        "safe": 0.09166984970282113,
        "idempotent": 0.09166984970282113,
        "edits": 0.09166984970282113,
        "accuracy": 0.09166984970282113,
        "next": 0.09166984970282113,
        "add": 0.09166984970282113,
        "validation": 0.09166984970282113,
        "avoid": 0.09166984970282113,
        "hallucinations": 0.09166984970282113,
        "once": 0.09166984970282113,
        "the": 0.18333969940564226,
        "pipeline": 0.09166984970282113,
        "works": 0.09166984970282113,
        "scale": 0.09166984970282113,
        "breadth": 0.09166984970282113,
        "later": 0.09166984970282113,
        "only": 0.09166984970282113,
        "after": 0.09166984970282113,
        "core": 0.09166984970282113,
        "loop": 0.09166984970282113,
        "is": 0.09166984970282113,
        "robust": 0.09166984970282113,
        "do": 0.09166984970282113,
        "we": 0.09166984970282113,
        "widen": 0.09166984970282113,
        "language": 0.09166984970282113,
        "framework": 0.09166984970282113,
        "coverage": 0.09166984970282113,
        "polish": 0.09166984970282113,
        "last": 0.09166984970282113,
        "ci": 0.09166984970282113,
        "caching": 0.09166984970282113,
        "quality": 0.09166984970282113,
        "gates": 0.09166984970282113,
        "refine": 0.09166984970282113,
        "dev": 0.09166984970282113,
        "experience": 0.09166984970282113,
        "performance": 0.09166984970282113
      },
      "text": "3. **Service mode (FastAPI), llama.cpp adapter, tree-sitter extraction** \u2014 \u2610 Not started * Covers: 1 (service mode), 6 (llama.cpp), 3 (tree-sitter) ## Why this order * **Fastest path to value**: get `docgen init` producing a solid README before adding diffing/RAG. * **Contain risk early**: section markers, lint, and commit publishing ensure safe/idempotent edits. * **Accuracy next**: add RAG + validation to avoid hallucinations once the pipeline works. * **Scale breadth later**: only after the core loop is robust do we widen language/framework coverage. * **Polish last**: CI, caching, and quality gates refine dev experience and performance.",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/jira_stories.md#0",
      "vector": {
        "docgen": 0.15037641213512565,
        "jira": 0.05012547071170855,
        "stories": 0.1002509414234171,
        "remaining": 0.05012547071170855,
        "are": 0.1002509414234171,
        "ordered": 0.05012547071170855,
        "by": 0.1002509414234171,
        "the": 0.25062735355854276,
        "recommended": 0.05012547071170855,
        "completion": 0.05012547071170855,
        "sequence": 0.05012547071170855,
        "and": 0.3508782949819598,
        "formatted": 0.05012547071170855,
        "per": 0.05012547071170855,
        "prompt": 0.05012547071170855,
        "template": 0.05012547071170855,
        "guidance": 0.05012547071170855,
        "all": 0.05012547071170855,
        "prior": 0.05012547071170855,
        "milestones": 0.05012547071170855,
        "complete": 0.05012547071170855,
        "only": 0.05012547071170855,
        "work": 0.05012547071170855,
        "listed": 0.05012547071170855,
        "below": 0.05012547071170855,
        "remains": 0.05012547071170855,
        "story": 0.1002509414234171,
        "s": 0.15037641213512565,
        "032": 0.05012547071170855,
        "no": 0.05012547071170855,
        "hallucination": 0.05012547071170855,
        "validation": 0.15037641213512565,
        "status": 0.05012547071170855,
        "done": 0.05012547071170855,
        "text": 0.05012547071170855,
        "introduce": 0.05012547071170855,
        "a": 0.3508782949819598,
        "layer": 0.05012547071170855,
        "that": 0.1002509414234171,
        "rejects": 0.05012547071170855,
        "readme": 0.05012547071170855,
        "content": 0.15037641213512565,
        "containing": 0.05012547071170855,
        "facts": 0.05012547071170855,
        "not": 0.05012547071170855,
        "backed": 0.05012547071170855,
        "analyzer": 0.1002509414234171,
        "signals": 0.15037641213512565,
        "or": 0.2005018828468342,
        "rag": 0.1002509414234171,
        "context": 0.1002509414234171,
        "surfacing": 0.05012547071170855,
        "actionable": 0.05012547071170855,
        "errors": 0.05012547071170855,
        "to": 0.05012547071170855,
        "users": 0.05012547071170855,
        "dependencies": 0.05012547071170855,
        "already": 0.05012547071170855,
        "completed": 0.05012547071170855,
        "031": 0.05012547071170855,
        "guardrailed": 0.05012547071170855,
        "execution": 0.05012547071170855,
        "011": 0.05012547071170855,
        "contexts": 0.05012547071170855,
        "constraints": 0.05012547071170855,
        "must": 0.05012547071170855,
        "run": 0.05012547071170855,
        "after": 0.1002509414234171,
        "section": 0.1002509414234171,
        "rendering": 0.1002509414234171,
        "but": 0.05012547071170855,
        "before": 0.1002509414234171,
        "writing": 0.05012547071170855,
        "files": 0.05012547071170855,
        "publishing": 0.05012547071170855,
        "prs": 0.05012547071170855,
        "provide": 0.05012547071170855,
        "clear": 0.05012547071170855,
        "remediation": 0.05012547071170855,
        "logs": 0.1002509414234171,
        "referencing": 0.05012547071170855,
        "missing": 0.1002509414234171,
        "affected": 0.05012547071170855,
        "sections": 0.1002509414234171,
        "allow": 0.05012547071170855,
        "an": 0.05012547071170855,
        "opt": 0.05012547071170855,
        "out": 0.05012547071170855,
        "toggle": 0.05012547071170855,
        "in": 0.05012547071170855,
        "yml": 0.05012547071170855,
        "for": 0.05012547071170855,
        "edge": 0.05012547071170855,
        "cases": 0.05012547071170855,
        "non": 0.05012547071170855,
        "goals": 0.05012547071170855,
        "external": 0.05012547071170855,
        "api": 0.05012547071170855,
        "calls": 0.05012547071170855,
        "complex": 0.05012547071170855,
        "semantic": 0.05012547071170855,
        "similarity": 0.05012547071170855,
        "checks": 0.05012547071170855,
        "acceptance": 0.1002509414234171,
        "criteria": 0.05012547071170855,
        "validator": 0.1002509414234171,
        "cross": 0.05012547071170855,
        "references": 0.05012547071170855,
        "generated": 0.05012547071170855,
        "claims": 0.05012547071170855,
        "against": 0.05012547071170855,
        "available": 0.05012547071170855,
        "disallowed": 0.05012547071170855,
        "triggers": 0.05012547071170855,
        "failure": 0.05012547071170855,
        "path": 0.05012547071170855,
        "with": 0.1002509414234171,
        "stub": 0.05012547071170855,
        "fallback": 0.05012547071170855,
        "unit": 0.05012547071170855,
        "tests": 0.05012547071170855,
        "cover": 0.05012547071170855,
        "of": 0.1002509414234171,
        "grounded": 0.05012547071170855,
        "rejection": 0.05012547071170855,
        "injected": 0.05012547071170855,
        "hallucinations": 0.05012547071170855,
        "cli": 0.05012547071170855,
        "surfaces": 0.05012547071170855,
        "concise": 0.05012547071170855,
        "error": 0.05012547071170855,
        "messages": 0.05012547071170855,
        "verbose": 0.05012547071170855,
        "list": 0.05012547071170855,
        "offending": 0.05012547071170855,
        "evidence": 0.05012547071170855,
        "implementation": 0.1002509414234171,
        "plan": 0.05012547071170855,
        "create": 0.05012547071170855,
        "dedicated": 0.05012547071170855,
        "validators": 0.1002509414234171,
        "package": 0.05012547071170855,
        "lightweight": 0.05012547071170855,
        "validationissue": 0.05012547071170855,
        "dataclass": 0.05012547071170855,
        "protocol": 0.05012547071170855,
        "nohallucinationvalidator": 0.05012547071170855,
        "concrete": 0.05012547071170855,
        "orchestrator": 0.05012547071170855,
        "registers": 0.05012547071170855,
        "executes": 0.05012547071170855,
        "them": 0.05012547071170855,
        "post": 0.05012547071170855,
        "processing": 0.05012547071170855,
        "io": 0.05012547071170855,
        "add": 0.05012547071170855,
        "shared": 0.05012547071170855,
        "evidenceindex": 0.05012547071170855,
        "builder": 0.05012547071170855,
        "normalizes": 0.05012547071170855
      },
      "text": "# DocGen Jira Stories (Remaining) > Stories are ordered by the recommended completion sequence and formatted per the prompt template guidance. All prior milestones are complete; only the work listed below remains. --- ## Story S-032 \u2014 No-Hallucination Validation - **Status:** \u2714 Done - **Story Text:** Introduce a validation layer that rejects README content containing facts not backed by analyzer signals or RAG context, surfacing actionable errors to users. - **Dependencies already completed:** S-031 (guardrailed execution), S-011 (RAG contexts) - **Constraints:** - Validation must run after section rendering but before writing files or publishing PRs. - Provide clear remediation logs referencing the missing signals and affected sections. - Allow an opt-out toggle in `.docgen.yml` for edge cases. - **Non-Goals:** External API calls or complex semantic similarity checks. - **Acceptance Criteria:** - Validator cross-references generated claims against available signals/context; disallowed content triggers a failure path with stub fallback. - Unit tests cover acceptance of grounded content and rejection of injected hallucinations. - CLI surfaces concise error messages and `--verbose` logs list offending sections and missing evidence. - **Implementation Plan:** - Create a dedicated `docgen.validators` package with a lightweight `ValidationIssue` dataclass, a `Validator` protocol, and a `NoHallucinationValidator` concrete implementation. The orchestrator registers validators after section rendering and executes them before post-processing or IO. - Add a shared `EvidenceIndex` builder that normalizes analyzer",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#1",
      "vector": {
        "a": 0.37435064886346636,
        "dedicated": 0.04159451654038515,
        "docgen": 0.12478354962115545,
        "validators": 0.12478354962115545,
        "package": 0.04159451654038515,
        "with": 0.2495670992423109,
        "lightweight": 0.04159451654038515,
        "validationissue": 0.04159451654038515,
        "dataclass": 0.04159451654038515,
        "validator": 0.04159451654038515,
        "protocol": 0.04159451654038515,
        "and": 0.29116161578269606,
        "nohallucinationvalidator": 0.04159451654038515,
        "concrete": 0.04159451654038515,
        "implementation": 0.04159451654038515,
        "the": 0.4991341984846218,
        "orchestrator": 0.04159451654038515,
        "registers": 0.04159451654038515,
        "after": 0.04159451654038515,
        "section": 0.0831890330807703,
        "rendering": 0.04159451654038515,
        "executes": 0.04159451654038515,
        "them": 0.04159451654038515,
        "before": 0.04159451654038515,
        "post": 0.04159451654038515,
        "processing": 0.04159451654038515,
        "or": 0.04159451654038515,
        "io": 0.04159451654038515,
        "add": 0.0831890330807703,
        "shared": 0.04159451654038515,
        "evidenceindex": 0.04159451654038515,
        "builder": 0.0831890330807703,
        "that": 0.12478354962115545,
        "normalizes": 0.04159451654038515,
        "analyzer": 0.04159451654038515,
        "signals": 0.0831890330807703,
        "names": 0.04159451654038515,
        "kinds": 0.04159451654038515,
        "key": 0.04159451654038515,
        "attributes": 0.04159451654038515,
        "retrieved": 0.04159451654038515,
        "rag": 0.04159451654038515,
        "chunks": 0.04159451654038515,
        "path": 0.04159451654038515,
        "heading": 0.04159451654038515,
        "snippet": 0.04159451654038515,
        "persist": 0.04159451654038515,
        "normalized": 0.0831890330807703,
        "evidence": 0.0831890330807703,
        "in": 0.0831890330807703,
        "run": 0.04159451654038515,
        "context": 0.04159451654038515,
        "so": 0.04159451654038515,
        "verbose": 0.04159451654038515,
        "logging": 0.04159451654038515,
        "receive": 0.04159451654038515,
        "same": 0.04159451654038515,
        "data": 0.04159451654038515,
        "extend": 0.04159451654038515,
        "prompt": 0.04159451654038515,
        "to": 0.20797258270192576,
        "annotate": 0.04159451654038515,
        "each": 0.0831890330807703,
        "render": 0.04159451654038515,
        "sectionevidence": 0.04159451654038515,
        "metadata": 0.0831890330807703,
        "describing": 0.04159451654038515,
        "which": 0.04159451654038515,
        "chunk": 0.04159451654038515,
        "ids": 0.04159451654038515,
        "were": 0.04159451654038515,
        "injected": 0.04159451654038515,
        "this": 0.04159451654038515,
        "is": 0.04159451654038515,
        "stored": 0.04159451654038515,
        "alongside": 0.04159451654038515,
        "rendered": 0.0831890330807703,
        "markdown": 0.04159451654038515,
        "avoid": 0.04159451654038515,
        "re": 0.04159451654038515,
        "parsing": 0.04159451654038515,
        "prompts": 0.04159451654038515,
        "implement": 0.04159451654038515,
        "lexical": 0.04159451654038515,
        "matching": 0.04159451654038515,
        "heuristics": 0.04159451654038515,
        "split": 0.04159451654038515,
        "sections": 0.0831890330807703,
        "into": 0.04159451654038515,
        "sentences": 0.0831890330807703,
        "ignore": 0.04159451654038515,
        "boilerplate": 0.04159451654038515,
        "phrases": 0.04159451654038515,
        "require": 0.04159451654038515,
        "remaining": 0.04159451654038515,
        "sentence": 0.04159451654038515,
        "introduces": 0.04159451654038515,
        "facts": 0.04159451654038515,
        "numbers": 0.04159451654038515,
        "detected": 0.0831890330807703,
        "entities": 0.04159451654038515,
        "verbs": 0.04159451654038515,
        "direct": 0.04159451654038515,
        "objects": 0.04159451654038515,
        "have": 0.04159451654038515,
        "at": 0.04159451654038515,
        "least": 0.04159451654038515,
        "one": 0.04159451654038515,
        "overlapping": 0.04159451654038515,
        "n": 0.04159451654038515,
        "gram": 0.04159451654038515,
        "len": 0.04159451654038515,
        "3": 0.04159451654038515,
        "flag": 0.0831890330807703,
        "unmatched": 0.04159451654038515,
        "as": 0.04159451654038515,
        "hallucinations": 0.0831890330807703,
        "when": 0.04159451654038515,
        "are": 0.04159451654038515,
        "short": 0.04159451654038515,
        "circuit": 0.04159451654038515,
        "pipeline": 0.04159451654038515,
        "emit": 0.04159451654038515,
        "fail": 0.04159451654038515,
        "safe": 0.04159451654038515,
        "stubs": 0.04159451654038515,
        "for": 0.12478354962115545,
        "offending": 0.04159451654038515,
        "reuse": 0.04159451654038515,
        "existing": 0.04159451654038515,
        "stub": 0.04159451654038515,
        "generator": 0.04159451654038515,
        "bubble": 0.04159451654038515,
        "validationerror": 0.04159451654038515,
        "back": 0.04159451654038515,
        "cli": 0.0831890330807703,
        "actionable": 0.04159451654038515,
        "hints": 0.04159451654038515,
        "yml": 0.04159451654038515,
        "updates": 0.04159451654038515,
        "introduce": 0.04159451654038515,
        "validation": 0.0831890330807703,
        "map": 0.04159451654038515,
        "no_hallucination": 0.04159451654038515,
        "boolean": 0.04159451654038515,
        "default": 0.04159451654038515,
        "true": 0.04159451654038515,
        "respect": 0.04159451654038515,
        "repo": 0.04159451654038515,
        "level": 0.04159451654038515,
        "overrides": 0.04159451654038515,
        "while": 0.04159451654038515,
        "allowing": 0.04159451654038515,
        "docgen_validation_no_hallucination": 0.04159451654038515,
        "false": 0.04159451654038515,
        "disable": 0.04159451654038515,
        "check": 0.04159451654038515,
        "ci": 0.04159451654038515,
        "emergencies": 0.04159451654038515,
        "skip": 0.04159451654038515,
        "init": 0.04159451654038515,
        "update": 0.04159451654038515,
        "regenerate": 0.04159451654038515,
        "flips": 0.04159451654038515,
        "toggle": 0.04159451654038515
      },
      "text": "a dedicated `docgen.validators` package with a lightweight `ValidationIssue` dataclass, a `Validator` protocol, and a `NoHallucinationValidator` concrete implementation. The orchestrator registers validators after section rendering and executes them before post-processing or IO. - Add a shared `EvidenceIndex` builder that normalizes analyzer signals (names, kinds, key attributes) and retrieved RAG chunks (path, heading, snippet). Persist the normalized evidence in the run context so validators and verbose logging receive the same data. - Extend the prompt builder to annotate each section render with `SectionEvidence` metadata describing which signals and chunk IDs were injected. This metadata is stored alongside the rendered markdown to avoid re-parsing prompts. - Implement lexical matching heuristics: split rendered sections into sentences, ignore boilerplate phrases, and require each remaining sentence that introduces facts (numbers, detected entities, verbs with direct objects) to have at least one overlapping n-gram (len \u22653) with the normalized evidence. Flag unmatched sentences as hallucinations. - When hallucinations are detected, short-circuit the pipeline, emit fail-safe stubs for the offending sections (reuse existing stub generator), and bubble a `ValidationError` back to the CLI with actionable hints. - **`.docgen.yml` & CLI Updates:** - Introduce a `validation` map with a `no_hallucination` boolean (default `true`). Respect repo-level overrides while allowing `DOCGEN_VALIDATION_NO_HALLUCINATION=false` to disable the check in CI emergencies. - Add a `--skip-validation` flag for `docgen init|update|regenerate` that flips the toggle for",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#2",
      "vector": {
        "cli": 0.18856180831641267,
        "updates": 0.04714045207910317,
        "introduce": 0.04714045207910317,
        "a": 0.23570226039551584,
        "validation": 0.23570226039551584,
        "map": 0.04714045207910317,
        "with": 0.09428090415820634,
        "no_hallucination": 0.04714045207910317,
        "boolean": 0.04714045207910317,
        "default": 0.04714045207910317,
        "true": 0.04714045207910317,
        "respect": 0.04714045207910317,
        "repo": 0.09428090415820634,
        "level": 0.04714045207910317,
        "overrides": 0.04714045207910317,
        "while": 0.04714045207910317,
        "allowing": 0.04714045207910317,
        "docgen_validation_no_hallucination": 0.04714045207910317,
        "false": 0.04714045207910317,
        "to": 0.1414213562373095,
        "disable": 0.04714045207910317,
        "the": 0.4242640687119285,
        "check": 0.04714045207910317,
        "in": 0.1414213562373095,
        "ci": 0.04714045207910317,
        "emergencies": 0.04714045207910317,
        "add": 0.09428090415820634,
        "skip": 0.04714045207910317,
        "flag": 0.04714045207910317,
        "for": 0.18856180831641267,
        "docgen": 0.09428090415820634,
        "init": 0.04714045207910317,
        "update": 0.04714045207910317,
        "regenerate": 0.04714045207910317,
        "that": 0.1414213562373095,
        "flips": 0.04714045207910317,
        "toggle": 0.04714045207910317,
        "current": 0.04714045207910317,
        "execution": 0.04714045207910317,
        "only": 0.04714045207910317,
        "and": 0.282842712474619,
        "is": 0.04714045207910317,
        "surfaced": 0.04714045207910317,
        "run": 0.09428090415820634,
        "summary": 0.04714045207910317,
        "encourage": 0.04714045207910317,
        "re": 0.04714045207910317,
        "enabling": 0.04714045207910317,
        "logging": 0.09428090415820634,
        "ux": 0.04714045207910317,
        "errors": 0.04714045207910317,
        "show": 0.04714045207910317,
        "one": 0.04714045207910317,
        "line": 0.04714045207910317,
        "summaries": 0.04714045207910317,
        "per": 0.04714045207910317,
        "section": 0.04714045207910317,
        "quickstart": 0.04714045207910317,
        "references": 0.04714045207910317,
        "docker": 0.04714045207910317,
        "compose": 0.04714045207910317,
        "without": 0.09428090415820634,
        "supporting": 0.04714045207910317,
        "analyzer": 0.1414213562373095,
        "signal": 0.04714045207910317,
        "verbose": 0.09428090415820634,
        "prints": 0.04714045207910317,
        "offending": 0.04714045207910317,
        "sentence": 0.04714045207910317,
        "missing": 0.04714045207910317,
        "tokens": 0.04714045207910317,
        "short": 0.04714045207910317,
        "list": 0.04714045207910317,
        "of": 0.04714045207910317,
        "nearby": 0.04714045207910317,
        "evidence": 0.09428090415820634,
        "persist": 0.09428090415820634,
        "json": 0.04714045207910317,
        "report": 0.04714045207910317,
        "under": 0.04714045207910317,
        "capturing": 0.04714045207910317,
        "validator": 0.04714045207910317,
        "status": 0.09428090415820634,
        "issues": 0.04714045207910317,
        "selected": 0.04714045207910317,
        "forensic": 0.04714045207910317,
        "review": 0.04714045207910317,
        "testing": 0.04714045207910317,
        "strategy": 0.04714045207910317,
        "unit": 0.04714045207910317,
        "tests": 0.1414213562373095,
        "cover": 0.04714045207910317,
        "positive": 0.04714045207910317,
        "negative": 0.04714045207910317,
        "cases": 0.09428090415820634,
        "nohallucinationvalidator": 0.04714045207910317,
        "including": 0.04714045207910317,
        "edge": 0.04714045207910317,
        "such": 0.04714045207910317,
        "as": 0.04714045207910317,
        "citations": 0.04714045207910317,
        "using": 0.04714045207910317,
        "synonyms": 0.04714045207910317,
        "or": 0.04714045207910317,
        "pluralization": 0.04714045207910317,
        "bullet": 0.04714045207910317,
        "lists": 0.04714045207910317,
        "code": 0.04714045207910317,
        "blocks": 0.04714045207910317,
        "integration": 0.04714045207910317,
        "full": 0.04714045207910317,
        "on": 0.04714045207910317,
        "synthetic": 0.04714045207910317,
        "repos": 0.04714045207910317,
        "stored": 0.04714045207910317,
        "data": 0.04714045207910317,
        "confirm": 0.04714045207910317,
        "grounded": 0.04714045207910317,
        "readmes": 0.04714045207910317,
        "pass": 0.04714045207910317,
        "tampered": 0.04714045207910317,
        "outputs": 0.09428090415820634,
        "fail": 0.04714045207910317,
        "fast": 0.04714045207910317,
        "stub": 0.04714045207910317,
        "replacements": 0.04714045207910317,
        "regression": 0.04714045207910317,
        "fixtures": 0.04714045207910317,
        "asserting": 0.04714045207910317,
        "disabling": 0.04714045207910317,
        "via": 0.04714045207910317,
        "config": 0.04714045207910317,
        "leaves": 0.04714045207910317,
        "runs": 0.09428090415820634,
        "untouched": 0.04714045207910317,
        "enumerates": 0.04714045207910317,
        "flagged": 0.04714045207910317,
        "sentences": 0.04714045207910317,
        "story": 0.09428090415820634,
        "s": 0.1414213562373095,
        "033": 0.04714045207910317,
        "artifact": 0.04714045207910317,
        "persistence": 0.04714045207910317,
        "done": 0.04714045207910317,
        "text": 0.04714045207910317,
        "alongside": 0.04714045207910317,
        "embeddings": 0.04714045207910317,
        "so": 0.04714045207910317,
        "repeated": 0.04714045207910317,
        "can": 0.04714045207910317,
        "reuse": 0.04714045207910317,
        "structured": 0.04714045207910317,
        "signals": 0.04714045207910317,
        "reprocessing": 0.04714045207910317,
        "unchanged": 0.04714045207910317,
        "files": 0.04714045207910317,
        "dependencies": 0.04714045207910317,
        "already": 0.04714045207910317,
        "completed": 0.04714045207910317,
        "003": 0.04714045207910317,
        "scanner": 0.04714045207910317,
        "020": 0.04714045207910317,
        "embedding": 0.04714045207910317,
        "cache": 0.04714045207910317
      },
      "text": "& CLI Updates:** - Introduce a `validation` map with a `no_hallucination` boolean (default `true`). Respect repo-level overrides while allowing `DOCGEN_VALIDATION_NO_HALLUCINATION=false` to disable the check in CI emergencies. - Add a `--skip-validation` flag for `docgen init|update|regenerate` that flips the toggle for the current execution only and is surfaced in the run summary to encourage re-enabling. - **Logging & UX:** - CLI errors show one-line summaries per section (`quickstart: references docker compose without supporting analyzer signal`). `--verbose` prints the offending sentence, the missing tokens, and a short list of nearby evidence. - Persist a `validation.json` report under `.docgen/` capturing the validator status, issues, and selected evidence for forensic review. - **Testing Strategy:** - Unit tests cover positive/negative cases for the `NoHallucinationValidator`, including edge cases such as citations using synonyms or pluralization, bullet lists, and code blocks. - Integration tests run the full CLI on synthetic repos stored in `tests/data/validation/` to confirm grounded READMEs pass and tampered outputs fail fast with stub replacements. - Add regression fixtures asserting that disabling validation via config/CLI leaves runs untouched and that verbose logging enumerates flagged sentences. ## Story S-033 \u2014 Analyzer Artifact Persistence - **Status:** \u2714 Done - **Story Text:** Persist analyzer outputs alongside embeddings so repeated runs can reuse structured signals without reprocessing unchanged files. - **Dependencies already completed:** S-003 (Repo scanner), S-020 (embedding cache",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#3",
      "vector": {
        "story": 0.19975046777556893,
        "s": 0.2996257016633534,
        "033": 0.04993761694389223,
        "analyzer": 0.19975046777556893,
        "artifact": 0.09987523388778446,
        "persistence": 0.04993761694389223,
        "status": 0.09987523388778446,
        "done": 0.09987523388778446,
        "text": 0.09987523388778446,
        "persist": 0.04993761694389223,
        "outputs": 0.09987523388778446,
        "alongside": 0.04993761694389223,
        "embeddings": 0.04993761694389223,
        "so": 0.04993761694389223,
        "repeated": 0.04993761694389223,
        "runs": 0.09987523388778446,
        "can": 0.04993761694389223,
        "reuse": 0.04993761694389223,
        "structured": 0.04993761694389223,
        "signals": 0.09987523388778446,
        "without": 0.04993761694389223,
        "reprocessing": 0.04993761694389223,
        "unchanged": 0.09987523388778446,
        "files": 0.09987523388778446,
        "dependencies": 0.09987523388778446,
        "already": 0.09987523388778446,
        "completed": 0.09987523388778446,
        "003": 0.04993761694389223,
        "repo": 0.09987523388778446,
        "scanner": 0.04993761694389223,
        "020": 0.04993761694389223,
        "embedding": 0.04993761694389223,
        "cache": 0.09987523388778446,
        "groundwork": 0.09987523388778446,
        "constraints": 0.09987523388778446,
        "store": 0.04993761694389223,
        "artifacts": 0.04993761694389223,
        "under": 0.04993761694389223,
        "docgen": 0.04993761694389223,
        "with": 0.1498128508316767,
        "versioning": 0.04993761694389223,
        "to": 0.19975046777556893,
        "handle": 0.04993761694389223,
        "schema": 0.04993761694389223,
        "changes": 0.04993761694389223,
        "refresh": 0.04993761694389223,
        "results": 0.04993761694389223,
        "incrementally": 0.04993761694389223,
        "based": 0.09987523388778446,
        "on": 0.04993761694389223,
        "file": 0.04993761694389223,
        "hashes": 0.04993761694389223,
        "and": 0.2996257016633534,
        "invalidate": 0.04993761694389223,
        "when": 0.19975046777556893,
        "analyzers": 0.04993761694389223,
        "change": 0.04993761694389223,
        "keep": 0.04993761694389223,
        "storage": 0.04993761694389223,
        "format": 0.04993761694389223,
        "json": 0.04993761694389223,
        "serializable": 0.04993761694389223,
        "human": 0.04993761694389223,
        "auditable": 0.04993761694389223,
        "non": 0.09987523388778446,
        "goals": 0.1498128508316767,
        "remote": 0.04993761694389223,
        "backends": 0.04993761694389223,
        "or": 0.04993761694389223,
        "cross": 0.04993761694389223,
        "sharing": 0.04993761694389223,
        "acceptance": 0.04993761694389223,
        "criteria": 0.04993761694389223,
        "saved": 0.04993761694389223,
        "reloaded": 0.04993761694389223,
        "during": 0.04993761694389223,
        "orchestrator": 0.04993761694389223,
        "skipping": 0.04993761694389223,
        "recomputation": 0.04993761694389223,
        "inputs": 0.04993761694389223,
        "integration": 0.09987523388778446,
        "tests": 0.04993761694389223,
        "demonstrate": 0.04993761694389223,
        "speed": 0.04993761694389223,
        "up": 0.04993761694389223,
        "by": 0.09987523388778446,
        "reusing": 0.04993761694389223,
        "cached": 0.04993761694389223,
        "correct": 0.04993761694389223,
        "invalidation": 0.04993761694389223,
        "mutate": 0.04993761694389223,
        "documentation": 0.04993761694389223,
        "in": 0.04993761694389223,
        "spec": 0.09987523388778446,
        "md": 0.04993761694389223,
        "updated": 0.04993761694389223,
        "reflect": 0.04993761694389223,
        "caching": 0.04993761694389223,
        "behavior": 0.04993761694389223,
        "034": 0.04993761694389223,
        "service": 0.1498128508316767,
        "mode": 0.09987523388778446,
        "extended": 0.04993761694389223,
        "runtimes": 0.04993761694389223,
        "deliver": 0.04993761694389223,
        "fastapi": 0.09987523388778446,
        "llama": 0.09987523388778446,
        "cpp": 0.09987523388778446,
        "runtime": 0.04993761694389223,
        "adapter": 0.09987523388778446,
        "tree": 0.09987523388778446,
        "sitter": 0.09987523388778446,
        "powered": 0.04993761694389223,
        "symbol": 0.04993761694389223,
        "extraction": 0.04993761694389223,
        "round": 0.04993761694389223,
        "out": 0.04993761694389223,
        "stretch": 0.04993761694389223,
        "010": 0.04993761694389223,
        "git": 0.04993761694389223,
        "publishing": 0.04993761694389223,
        "infrastructure": 0.04993761694389223,
        "017": 0.04993761694389223,
        "entrypoint": 0.04993761694389223,
        "detection": 0.04993761694389223,
        "must": 0.04993761694389223,
        "expose": 0.04993761694389223,
        "endpoints": 0.04993761694389223,
        "for": 0.09987523388778446,
        "init": 0.04993761694389223,
        "update": 0.04993761694389223,
        "dry": 0.04993761694389223,
        "run": 0.04993761694389223,
        "authentication": 0.04993761694389223,
        "disabled": 0.04993761694389223,
        "default": 0.04993761694389223,
        "but": 0.04993761694389223,
        "ready": 0.04993761694389223,
        "future": 0.04993761694389223,
        "hardening": 0.04993761694389223,
        "hooks": 0.04993761694389223,
        "should": 0.04993761694389223,
        "mirror": 0.04993761694389223,
        "llmrunner": 0.04993761694389223,
        "interface": 0.04993761694389223,
        "enforce": 0.04993761694389223,
        "local": 0.04993761694389223,
        "execution": 0.04993761694389223,
        "paths": 0.04993761694389223,
        "limited": 0.04993761694389223,
        "supported": 0.04993761694389223,
        "languages": 0.04993761694389223,
        "python": 0.04993761694389223,
        "java": 0.04993761694389223,
        "typescript": 0.04993761694389223,
        "graceful": 0.04993761694389223,
        "degradation": 0.04993761694389223,
        "parsers": 0.04993761694389223,
        "unavailable": 0.04993761694389223,
        "production": 0.04993761694389223
      },
      "text": "## Story S-033 \u2014 Analyzer Artifact Persistence - **Status:** \u2714 Done - **Story Text:** Persist analyzer outputs alongside embeddings so repeated runs can reuse structured signals without reprocessing unchanged files. - **Dependencies already completed:** S-003 (Repo scanner), S-020 (embedding cache groundwork) - **Constraints:** - Store artifacts under `.docgen/` with versioning to handle schema changes. - Refresh analyzer results incrementally based on file hashes and invalidate when analyzers change. - Keep storage format JSON-serializable and human-auditable. - **Non-Goals:** Remote cache backends or cross-repo sharing. - **Acceptance Criteria:** - Analyzer outputs saved and reloaded during orchestrator runs, skipping recomputation when inputs unchanged. - Integration tests demonstrate speed-up by reusing cached signals and correct invalidation when files mutate. - Documentation in `spec/spec.md` updated to reflect artifact caching behavior. ## Story S-034 \u2014 Service Mode & Extended Runtimes - **Status:** \u2714 Done - **Story Text:** Deliver FastAPI-based service mode, llama.cpp runtime adapter, and tree-sitter powered symbol extraction to round out stretch goals. - **Dependencies already completed:** S-010 (Git publishing infrastructure), S-017 (entrypoint detection groundwork) - **Constraints:** - FastAPI service must expose endpoints for init/update/dry-run with authentication disabled by default but ready for future hardening hooks. - llama.cpp adapter should mirror `LLMRunner` interface and enforce local execution paths. - Tree-sitter integration limited to supported languages (Python/Java/TypeScript) with graceful degradation when parsers unavailable. - **Non-Goals:** Production",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#4",
      "vector": {
        "with": 0.21594472522460836,
        "authentication": 0.07198157507486945,
        "disabled": 0.07198157507486945,
        "by": 0.1439631501497389,
        "default": 0.07198157507486945,
        "but": 0.07198157507486945,
        "ready": 0.07198157507486945,
        "for": 0.1439631501497389,
        "future": 0.07198157507486945,
        "hardening": 0.07198157507486945,
        "hooks": 0.07198157507486945,
        "llama": 0.1439631501497389,
        "cpp": 0.1439631501497389,
        "adapter": 0.1439631501497389,
        "should": 0.07198157507486945,
        "mirror": 0.07198157507486945,
        "llmrunner": 0.07198157507486945,
        "interface": 0.07198157507486945,
        "and": 0.4318894504492167,
        "enforce": 0.07198157507486945,
        "local": 0.07198157507486945,
        "execution": 0.07198157507486945,
        "paths": 0.07198157507486945,
        "tree": 0.1439631501497389,
        "sitter": 0.1439631501497389,
        "integration": 0.07198157507486945,
        "limited": 0.07198157507486945,
        "to": 0.1439631501497389,
        "supported": 0.07198157507486945,
        "languages": 0.07198157507486945,
        "python": 0.07198157507486945,
        "java": 0.07198157507486945,
        "typescript": 0.07198157507486945,
        "graceful": 0.07198157507486945,
        "degradation": 0.07198157507486945,
        "when": 0.07198157507486945,
        "parsers": 0.07198157507486945,
        "unavailable": 0.07198157507486945,
        "non": 0.07198157507486945,
        "goals": 0.1439631501497389,
        "production": 0.07198157507486945,
        "deployment": 0.07198157507486945,
        "tooling": 0.07198157507486945,
        "or": 0.07198157507486945,
        "advanced": 0.07198157507486945,
        "queueing": 0.07198157507486945,
        "acceptance": 0.07198157507486945,
        "criteria": 0.07198157507486945,
        "service": 0.1439631501497389,
        "mode": 0.07198157507486945,
        "passes": 0.07198157507486945,
        "end": 0.1439631501497389,
        "tests": 0.21594472522460836,
        "invoking": 0.07198157507486945,
        "fastapi": 0.07198157507486945,
        "routes": 0.07198157507486945,
        "reusing": 0.07198157507486945,
        "orchestrator": 0.07198157507486945,
        "logic": 0.07198157507486945,
        "covered": 0.07198157507486945,
        "unit": 0.07198157507486945,
        "simulating": 0.07198157507486945,
        "cli": 0.07198157507486945,
        "shared": 0.07198157507486945,
        "configuration": 0.07198157507486945,
        "analyzer": 0.07198157507486945,
        "enriches": 0.07198157507486945,
        "signals": 0.07198157507486945,
        "symbol": 0.07198157507486945,
        "metadata": 0.07198157507486945,
        "associated": 0.07198157507486945,
        "validate": 0.07198157507486945,
        "extraction": 0.07198157507486945,
        "on": 0.07198157507486945,
        "fixtures": 0.07198157507486945,
        "updated": 0.07198157507486945,
        "documentation": 0.07198157507486945,
        "usage": 0.07198157507486945,
        "extended": 0.07198157507486945,
        "runtimes": 0.07198157507486945,
        "in": 0.1439631501497389,
        "docs": 0.07198157507486945,
        "spec": 0.1439631501497389,
        "md": 0.07198157507486945,
        "next": 0.07198157507486945,
        "actions": 0.07198157507486945,
        "execute": 0.07198157507486945,
        "the": 0.07198157507486945,
        "stories": 0.07198157507486945,
        "above": 0.07198157507486945,
        "sequentially": 0.07198157507486945,
        "upon": 0.07198157507486945,
        "completion": 0.07198157507486945,
        "reassess": 0.07198157507486945,
        "remaining": 0.07198157507486945,
        "stretch": 0.07198157507486945,
        "knowledge": 0.07198157507486945,
        "graph": 0.07198157507486945,
        "secret": 0.07198157507486945,
        "scanning": 0.07198157507486945,
        "if": 0.07198157507486945,
        "still": 0.07198157507486945,
        "scope": 0.07198157507486945
      },
      "text": "with authentication disabled by default but ready for future hardening hooks. - llama.cpp adapter should mirror `LLMRunner` interface and enforce local execution paths. - Tree-sitter integration limited to supported languages (Python/Java/TypeScript) with graceful degradation when parsers unavailable. - **Non-Goals:** Production deployment tooling or advanced queueing. - **Acceptance Criteria:** - Service mode passes end-to-end tests invoking FastAPI routes and reusing orchestrator logic. - llama.cpp adapter covered by unit tests simulating CLI and shared configuration. - Tree-sitter analyzer enriches signals with symbol metadata and associated tests validate extraction on fixtures. - Updated documentation for service usage and extended runtimes in `docs/` and `spec/spec.md`. --- **Next Actions:** Execute the stories above sequentially; upon completion reassess remaining stretch goals (knowledge graph, secret scanning) if still in scope.",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/prompt_template.md#0",
      "vector": {
        "below": 0.09417632186960222,
        "is": 0.09417632186960222,
        "a": 0.18835264373920443,
        "drop": 0.04708816093480111,
        "in": 0.18835264373920443,
        "prompt": 0.09417632186960222,
        "template": 0.09417632186960222,
        "you": 0.14126448280440332,
        "can": 0.04708816093480111,
        "reuse": 0.04708816093480111,
        "for": 0.18835264373920443,
        "each": 0.04708816093480111,
        "single": 0.09417632186960222,
        "story": 0.5179697702828122,
        "s": 0.18835264373920443,
        "001": 0.09417632186960222,
        "044": 0.04708816093480111,
        "followed": 0.04708816093480111,
        "by": 0.04708816093480111,
        "two": 0.04708816093480111,
        "filled": 0.04708816093480111,
        "examples": 0.04708816093480111,
        "and": 0.18835264373920443,
        "016": 0.04708816093480111,
        "one": 0.04708816093480111,
        "at": 0.09417632186960222,
        "time": 0.04708816093480111,
        "implementation": 0.04708816093480111,
        "use": 0.09417632186960222,
        "this": 0.09417632186960222,
        "exact": 0.04708816093480111,
        "structure": 0.04708816093480111,
        "every": 0.04708816093480111,
        "replace": 0.04708816093480111,
        "placeholders": 0.04708816093480111,
        "with": 0.04708816093480111,
        "your": 0.04708816093480111,
        "specifics": 0.04708816093480111,
        "before": 0.04708816093480111,
        "sending": 0.04708816093480111,
        "system": 0.04708816093480111,
        "role": 0.04708816093480111,
        "are": 0.04708816093480111,
        "principal": 0.04708816093480111,
        "python": 0.14126448280440332,
        "engineer": 0.04708816093480111,
        "implementing": 0.04708816093480111,
        "tightly": 0.04708816093480111,
        "scoped": 0.04708816093480111,
        "an": 0.04708816093480111,
        "existing": 0.04708816093480111,
        "repository": 0.04708816093480111,
        "must": 0.04708816093480111,
        "implement": 0.04708816093480111,
        "only": 0.04708816093480111,
        "the": 0.14126448280440332,
        "no": 0.14126448280440332,
        "scope": 0.04708816093480111,
        "drift": 0.04708816093480111,
        "future": 0.04708816093480111,
        "stories": 0.04708816093480111,
        "produce": 0.04708816093480111,
        "production": 0.04708816093480111,
        "grade": 0.04708816093480111,
        "cross": 0.04708816093480111,
        "platform": 0.04708816093480111,
        "code": 0.09417632186960222,
        "windows": 0.04708816093480111,
        "macos": 0.04708816093480111,
        "3": 0.09417632186960222,
        "11": 0.09417632186960222,
        "follow": 0.04708816093480111,
        "repo": 0.04708816093480111,
        "conventions": 0.04708816093480111,
        "poetry": 0.09417632186960222,
        "ruff": 0.09417632186960222,
        "black": 0.09417632186960222,
        "mypy": 0.09417632186960222,
        "strict": 0.09417632186960222,
        "pytest": 0.14126448280440332,
        "logging": 0.04708816093480111,
        "prints": 0.04708816093480111,
        "library": 0.04708816093480111,
        "type": 0.04708816093480111,
        "hints": 0.04708816093480111,
        "everywhere": 0.04708816093480111,
        "keep": 0.04708816093480111,
        "audio": 0.09417632186960222,
        "callbacks": 0.04708816093480111,
        "non": 0.09417632186960222,
        "blocking": 0.04708816093480111,
        "prefer": 0.04708816093480111,
        "ring": 0.04708816093480111,
        "buffers": 0.04708816093480111,
        "preallocated": 0.04708816093480111,
        "arrays": 0.04708816093480111,
        "avoid": 0.04708816093480111,
        "os": 0.04708816093480111,
        "specific": 0.04708816093480111,
        "imports": 0.04708816093480111,
        "module": 0.04708816093480111,
        "top": 0.04708816093480111,
        "level": 0.04708816093480111,
        "when": 0.04708816093480111,
        "something": 0.04708816093480111,
        "ambiguous": 0.04708816093480111,
        "make": 0.04708816093480111,
        "smallest": 0.04708816093480111,
        "reasonable": 0.04708816093480111,
        "assumption": 0.04708816093480111,
        "state": 0.04708816093480111,
        "it": 0.04708816093480111,
        "assumptions": 0.04708816093480111,
        "section": 0.04708816093480111,
        "proceed": 0.04708816093480111,
        "context": 0.04708816093480111,
        "id": 0.04708816093480111,
        "story_id": 0.04708816093480111,
        "title": 0.04708816093480111,
        "story_title": 0.04708816093480111,
        "text": 0.04708816093480111,
        "story_text": 0.04708816093480111,
        "dependencies": 0.04708816093480111,
        "already": 0.04708816093480111,
        "completed": 0.04708816093480111,
        "dependencies_list_or_none": 0.04708816093480111,
        "constraints": 0.04708816093480111,
        "from": 0.04708816093480111,
        "prd": 0.04708816093480111,
        "backlog": 0.04708816093480111,
        "key_constraints": 0.04708816093480111,
        "goals": 0.04708816093480111,
        "non_goals": 0.04708816093480111,
        "environment": 0.04708816093480111,
        "tooling": 0.04708816093480111,
        "fixed": 0.04708816093480111,
        "package": 0.04708816093480111,
        "manager": 0.04708816093480111,
        "linters": 0.04708816093480111,
        "formatters": 0.04708816093480111,
        "static": 0.04708816093480111,
        "typing": 0.04708816093480111,
        "tests": 0.04708816093480111,
        "cov": 0.04708816093480111,
        "ui": 0.04708816093480111,
        "pyside6": 0.04708816093480111,
        "if": 0.09417632186960222,
        "relevant": 0.09417632186960222,
        "to": 0.04708816093480111,
        "i": 0.04708816093480111,
        "o": 0.04708816093480111,
        "sounddevice": 0.04708816093480111,
        "portaudio": 0.04708816093480111
      },
      "text": "Below is a **drop\u2011in prompt template** you can reuse for **each single story (S\u2011001 \u2192 S\u2011044)**, followed by **two filled examples** (for S\u2011001 and S\u2011016). --- ## \ud83d\udd27 One\u2011Story\u2011At\u2011A\u2011Time Implementation Prompt (Template) > **Use this exact structure for every story.** Replace `{{\u2026}}` placeholders with your specifics before sending. --- **SYSTEM / ROLE** You are a **Principal Python engineer** implementing a single, tightly scoped story in an existing repository. You must: * Implement **only the story below** (no scope drift, no future stories). * Produce production\u2011grade, cross\u2011platform code (Windows/macOS), Python 3.11. * Follow repo conventions: Poetry, ruff, black, mypy (strict), pytest. * Use logging (no prints) in library code, and type hints everywhere. * Keep audio callbacks non\u2011blocking; prefer ring buffers and preallocated arrays. * Avoid OS\u2011specific imports at module top level. * When something is ambiguous, **make the smallest reasonable assumption**, state it in the *Assumptions* section, and proceed. --- ### Story Context * **Story ID:** {{STORY_ID}} * **Story Title:** {{STORY_TITLE}} * **Story Text:** {{STORY_TEXT}} * **Dependencies already completed:** {{DEPENDENCIES_LIST_OR_NONE}} * **Constraints from PRD/backlog:** {{KEY_CONSTRAINTS}} * **Non\u2011Goals for this story:** {{NON_GOALS}} ### Environment & Tooling (fixed) * **Python:** 3.11 * **Package manager:** Poetry * **Linters/formatters:** ruff, black * **Static typing:** mypy (strict) * **Tests:** pytest + pytest\u2011cov * **UI:** PySide6 (if relevant to story) * **Audio I/O:** sounddevice/PortAudio (if relevant)",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#1",
      "vector": {
        "non_goals": 0.05581455721859476,
        "environment": 0.05581455721859476,
        "tooling": 0.05581455721859476,
        "fixed": 0.05581455721859476,
        "python": 0.16744367165578428,
        "3": 0.11162911443718952,
        "11": 0.05581455721859476,
        "package": 0.05581455721859476,
        "manager": 0.05581455721859476,
        "poetry": 0.05581455721859476,
        "linters": 0.05581455721859476,
        "formatters": 0.05581455721859476,
        "ruff": 0.11162911443718952,
        "black": 0.11162911443718952,
        "static": 0.05581455721859476,
        "typing": 0.05581455721859476,
        "mypy": 0.11162911443718952,
        "strict": 0.05581455721859476,
        "tests": 0.11162911443718952,
        "pytest": 0.16744367165578428,
        "cov": 0.05581455721859476,
        "ui": 0.05581455721859476,
        "pyside6": 0.05581455721859476,
        "if": 0.2790727860929738,
        "relevant": 0.2790727860929738,
        "to": 0.16744367165578428,
        "story": 0.05581455721859476,
        "audio": 0.05581455721859476,
        "i": 0.11162911443718952,
        "o": 0.05581455721859476,
        "sounddevice": 0.05581455721859476,
        "portaudio": 0.05581455721859476,
        "ml": 0.05581455721859476,
        "runtime": 0.05581455721859476,
        "onnxruntime": 0.05581455721859476,
        "current": 0.05581455721859476,
        "repository": 0.05581455721859476,
        "snapshot": 0.05581455721859476,
        "paste": 0.11162911443718952,
        "fresh": 0.05581455721859476,
        "snapshots": 0.05581455721859476,
        "so": 0.05581455721859476,
        "the": 0.11162911443718952,
        "model": 0.05581455721859476,
        "does": 0.05581455721859476,
        "not": 0.05581455721859476,
        "hallucinate": 0.05581455721859476,
        "keep": 0.05581455721859476,
        "these": 0.05581455721859476,
        "short": 0.11162911443718952,
        "but": 0.05581455721859476,
        "sufficient": 0.05581455721859476,
        "root": 0.05581455721859476,
        "tree": 0.11162911443718952,
        "a": 0.05581455721859476,
        "git": 0.11162911443718952,
        "or": 0.11162911443718952,
        "ls": 0.05581455721859476,
        "files": 0.22325822887437904,
        "repo_tree": 0.05581455721859476,
        "key": 0.05581455721859476,
        "only": 0.05581455721859476,
        "sections": 0.11162911443718952,
        "path": 0.11162911443718952,
        "file1": 0.05581455721859476,
        "file1_relevant_snippet": 0.05581455721859476,
        "file2": 0.05581455721859476,
        "file2_relevant_snippet": 0.05581455721859476,
        "pinned": 0.05581455721859476,
        "pyproject": 0.05581455721859476,
        "toml": 0.11162911443718952,
        "parts": 0.05581455721859476,
        "pyproject_snippet": 0.05581455721859476,
        "acceptance": 0.05581455721859476,
        "criteria": 0.05581455721859476,
        "definition": 0.05581455721859476,
        "of": 0.16744367165578428,
        "done": 0.05581455721859476,
        "functional": 0.05581455721859476,
        "functional_doc": 0.05581455721859476,
        "quality": 0.05581455721859476,
        "pass": 0.05581455721859476,
        "passes": 0.05581455721859476,
        "with": 0.11162911443718952,
        "90": 0.05581455721859476,
        "coverage": 0.05581455721859476,
        "for": 0.05581455721859476,
        "new": 0.05581455721859476,
        "code": 0.05581455721859476,
        "cross": 0.05581455721859476,
        "platform": 0.05581455721859476,
        "no": 0.11162911443718952,
        "os": 0.05581455721859476,
        "specific": 0.05581455721859476,
        "breakage": 0.05581455721859476,
        "guarded": 0.05581455721859476,
        "imports": 0.05581455721859476,
        "where": 0.05581455721859476,
        "needed": 0.05581455721859476,
        "performance": 0.05581455721859476,
        "applicable": 0.05581455721859476,
        "perf_requirements": 0.05581455721859476,
        "docs": 0.11162911443718952,
        "inline": 0.05581455721859476,
        "docstrings": 0.05581455721859476,
        "readme": 0.05581455721859476,
        "module": 0.05581455721859476,
        "level": 0.05581455721859476,
        "updated": 0.05581455721859476,
        "user": 0.05581455721859476,
        "facing": 0.05581455721859476,
        "unrelated": 0.05581455721859476,
        "refactors": 0.05581455721859476,
        "minimal": 0.05581455721859476,
        "diff": 0.05581455721859476,
        "outside": 0.05581455721859476,
        "touched": 0.05581455721859476,
        "scope": 0.05581455721859476,
        "deliverables": 0.05581455721859476,
        "output": 0.05581455721859476,
        "contract": 0.05581455721859476,
        "return": 0.05581455721859476,
        "following": 0.05581455721859476,
        "in": 0.05581455721859476,
        "order": 0.05581455721859476,
        "exact": 0.11162911443718952,
        "headings": 0.05581455721859476,
        "1": 0.05581455721859476,
        "assumptions": 0.11162911443718952,
        "decisions": 0.05581455721859476,
        "bullet": 0.05581455721859476,
        "list": 0.05581455721859476,
        "any": 0.05581455721859476,
        "reasonable": 0.05581455721859476,
        "you": 0.11162911443718952,
        "made": 0.05581455721859476,
        "2": 0.05581455721859476,
        "planned": 0.05581455721859476,
        "changes": 0.05581455721859476,
        "tl": 0.05581455721859476,
        "dr": 0.05581455721859476,
        "summary": 0.05581455721859476,
        "what": 0.05581455721859476,
        "will": 0.05581455721859476,
        "add": 0.05581455721859476,
        "modify": 0.05581455721859476,
        "and": 0.11162911443718952,
        "why": 0.05581455721859476,
        "full": 0.05581455721859476,
        "test": 0.05581455721859476,
        "covering": 0.05581455721859476,
        "success": 0.05581455721859476,
        "edge": 0.05581455721859476,
        "cases": 0.05581455721859476,
        "error": 0.05581455721859476,
        "paths": 0.05581455721859476,
        "4": 0.05581455721859476,
        "validation": 0.05581455721859476,
        "steps": 0.05581455721859476,
        "local": 0.05581455721859476
      },
      "text": "{{NON_GOALS}} ### Environment & Tooling (fixed) * **Python:** 3.11 * **Package manager:** Poetry * **Linters/formatters:** ruff, black * **Static typing:** mypy (strict) * **Tests:** pytest + pytest\u2011cov * **UI:** PySide6 (if relevant to story) * **Audio I/O:** sounddevice/PortAudio (if relevant) * **ML runtime:** onnxruntime (if relevant) ### Current Repository Snapshot > Paste fresh snapshots so the model does not hallucinate. Keep these short but sufficient. * **Root tree (`tree -a -I .git` or `git ls-files`):** ``` {{REPO_TREE}} ``` * **Key files (paste only relevant sections):** * `{{PATH/TO/FILE1}}` ```python {{FILE1_RELEVANT_SNIPPET}} ``` * `{{PATH/TO/FILE2}}` ```python {{FILE2_RELEVANT_SNIPPET}} ``` * **Pinned pyproject.toml (relevant parts):** ```toml {{PYPROJECT_SNIPPET}} ``` ### Acceptance Criteria (Definition of Done) * Functional: {{FUNCTIONAL_DOC}} * Quality: **ruff/black/mypy** pass; **pytest** passes with **\u2265 90%** coverage for new code. * Cross\u2011platform: No OS\u2011specific breakage; guarded imports where needed. * Performance (if applicable): {{PERF_REQUIREMENTS}} * Docs: Inline docstrings; README or module\u2011level docs updated if user\u2011facing. * No unrelated refactors; minimal diff outside touched scope. ### Deliverables \u2014 **Output Contract** Return the following sections **in order**, with exact headings: 1. **Assumptions & Decisions** \u2013 bullet list of any reasonable assumptions you made. 2. **Planned Changes (TL;DR)** \u2013 short summary of what files you will add/modify and why. 3. **Tests** \u2013 full test files covering success, edge cases, and error paths. 4. **Validation Steps (Local)** \u2013 exact",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#2",
      "vector": {
        "of": 0.1487044791289829,
        "any": 0.04956815970966096,
        "reasonable": 0.04956815970966096,
        "assumptions": 0.04956815970966096,
        "you": 0.09913631941932192,
        "made": 0.04956815970966096,
        "2": 0.04956815970966096,
        "planned": 0.04956815970966096,
        "changes": 0.04956815970966096,
        "tl": 0.04956815970966096,
        "dr": 0.04956815970966096,
        "short": 0.04956815970966096,
        "summary": 0.04956815970966096,
        "what": 0.04956815970966096,
        "files": 0.1487044791289829,
        "will": 0.04956815970966096,
        "add": 0.04956815970966096,
        "modify": 0.04956815970966096,
        "and": 0.3965452776772877,
        "why": 0.04956815970966096,
        "3": 0.04956815970966096,
        "tests": 0.04956815970966096,
        "full": 0.04956815970966096,
        "test": 0.09913631941932192,
        "covering": 0.04956815970966096,
        "success": 0.04956815970966096,
        "edge": 0.04956815970966096,
        "cases": 0.04956815970966096,
        "error": 0.04956815970966096,
        "paths": 0.04956815970966096,
        "4": 0.04956815970966096,
        "validation": 0.04956815970966096,
        "steps": 0.04956815970966096,
        "local": 0.04956815970966096,
        "exact": 0.04956815970966096,
        "commands": 0.04956815970966096,
        "to": 0.09913631941932192,
        "run": 0.04956815970966096,
        "poetry": 0.04956815970966096,
        "install": 0.04956815970966096,
        "lint": 0.04956815970966096,
        "type": 0.04956815970966096,
        "expected": 0.04956815970966096,
        "outputs": 0.04956815970966096,
        "5": 0.04956815970966096,
        "conventional": 0.04956815970966096,
        "commit": 0.09913631941932192,
        "message": 0.09913631941932192,
        "a": 0.24784079854830482,
        "single": 0.04956815970966096,
        "with": 0.09913631941932192,
        "the": 0.24784079854830482,
        "story": 0.24784079854830482,
        "description": 0.04956815970966096,
        "ex": 0.04956815970966096,
        "s": 0.1487044791289829,
        "001": 0.1487044791289829,
        "implemented": 0.04956815970966096,
        "get": 0.04956815970966096,
        "customers": 0.04956815970966096,
        "endpoint": 0.04956815970966096,
        "implementation": 0.04956815970966096,
        "hints": 0.04956815970966096,
        "if": 0.1487044791289829,
        "helpful": 0.04956815970966096,
        "keep": 0.04956815970966096,
        "per": 0.04956815970966096,
        "frame": 0.04956815970966096,
        "allocations": 0.04956815970966096,
        "near": 0.04956815970966096,
        "zero": 0.04956815970966096,
        "in": 0.19827263883864385,
        "audio": 0.04956815970966096,
        "callbacks": 0.04956815970966096,
        "use": 0.04956815970966096,
        "dependency": 0.04956815970966096,
        "inversion": 0.04956815970966096,
        "define": 0.04956815970966096,
        "clear": 0.04956815970966096,
        "interfaces": 0.04956815970966096,
        "core": 0.1487044791289829,
        "or": 0.1487044791289829,
        "ml": 0.04956815970966096,
        "where": 0.04956815970966096,
        "specified": 0.04956815970966096,
        "backlog": 0.04956815970966096,
        "an": 0.04956815970966096,
        "external": 0.04956815970966096,
        "binary": 0.04956815970966096,
        "model": 0.04956815970966096,
        "is": 0.04956815970966096,
        "out": 0.04956815970966096,
        "scope": 0.04956815970966096,
        "for": 0.04956815970966096,
        "this": 0.09913631941932192,
        "provide": 0.04956815970966096,
        "deterministic": 0.04956815970966096,
        "stub": 0.04956815970966096,
        "todo": 0.04956815970966096,
        "feature": 0.04956815970966096,
        "flag": 0.04956815970966096,
        "important": 0.04956815970966096,
        "guardrails": 0.04956815970966096,
        "do": 0.1487044791289829,
        "not": 0.1487044791289829,
        "implement": 0.04956815970966096,
        "future": 0.04956815970966096,
        "stories": 0.04956815970966096,
        "introduce": 0.04956815970966096,
        "new": 0.04956815970966096,
        "dependencies": 0.04956815970966096,
        "without": 0.04956815970966096,
        "updating": 0.04956815970966096,
        "pyproject": 0.04956815970966096,
        "toml": 0.04956815970966096,
        "justifying": 0.04956815970966096,
        "them": 0.04956815970966096,
        "change": 0.04956815970966096,
        "licensing": 0.04956815970966096,
        "repo": 0.04956815970966096,
        "name": 0.04956815970966096,
        "ci": 0.04956815970966096,
        "workflows": 0.04956815970966096,
        "unless": 0.04956815970966096,
        "explicitly": 0.04956815970966096,
        "requested": 0.04956815970966096,
        "output": 0.04956815970966096,
        "would": 0.04956815970966096,
        "exceed": 0.04956815970966096,
        "limits": 0.04956815970966096,
        "split": 0.04956815970966096,
        "patch": 0.04956815970966096,
        "file": 0.04956815970966096,
        "contents": 0.04956815970966096,
        "by": 0.04956815970966096,
        "directory": 0.04956815970966096,
        "but": 0.04956815970966096,
        "still": 0.04956815970966096,
        "include": 0.04956815970966096,
        "all": 0.04956815970966096,
        "required": 0.04956815970966096,
        "example": 0.04956815970966096,
        "instantiation": 0.04956815970966096,
        "1": 0.04956815970966096,
        "initialize": 0.09913631941932192,
        "repository": 0.09913631941932192,
        "metadata": 0.04956815970966096,
        "copy": 0.04956815970966096,
        "adjust": 0.04956815970966096,
        "paste": 0.04956815970966096,
        "following": 0.04956815970966096,
        "as": 0.04956815970966096,
        "real": 0.04956815970966096,
        "prompt": 0.04956815970966096,
        "your": 0.04956815970966096,
        "llm": 0.04956815970966096,
        "id": 0.04956815970966096,
        "title": 0.04956815970966096
      },
      "text": "of any reasonable assumptions you made. 2. **Planned Changes (TL;DR)** \u2013 short summary of what files you will add/modify and why. 3. **Tests** \u2013 full test files covering success, edge cases, and error paths. 4. **Validation Steps (Local)** \u2013 exact commands to run (Poetry install, lint, type, test) and expected outputs. 5. **Conventional Commit Message** \u2013 a single commit with the story and a description, ex: \"S-001: Implemented the GET customers endpoint\" ### Implementation Hints (if helpful) * Keep per\u2011frame allocations near zero in audio callbacks. * Use dependency inversion: define clear interfaces in `core/` or `ml/` where specified in the backlog. * If an external binary or model is out of scope for this story, provide a deterministic stub with TODO and a feature flag. ### Important Guardrails * **Do not** implement future stories. * **Do not** introduce new dependencies without updating `pyproject.toml` and justifying them. * **Do not** change licensing, repo name, or CI workflows unless explicitly requested in this story. * If output would exceed message limits, **split the Patch and File Contents by directory** but still include all required files. --- ## \u2705 Example Instantiation #1 \u2014 S\u2011001 (Initialize repository & core metadata) > Copy, adjust, and paste the following as a real prompt to your LLM. **Story ID:** S\u2011001 **Story Title:** Initialize repository & core",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#3",
      "vector": {
        "include": 0.09611386626644254,
        "all": 0.04805693313322127,
        "required": 0.04805693313322127,
        "files": 0.04805693313322127,
        "example": 0.09611386626644254,
        "instantiation": 0.09611386626644254,
        "1": 0.09611386626644254,
        "s": 0.19222773253288508,
        "001": 0.09611386626644254,
        "initialize": 0.09611386626644254,
        "repository": 0.14417079939966382,
        "core": 0.09611386626644254,
        "metadata": 0.14417079939966382,
        "copy": 0.04805693313322127,
        "adjust": 0.04805693313322127,
        "and": 0.09611386626644254,
        "paste": 0.09611386626644254,
        "the": 0.19222773253288508,
        "following": 0.04805693313322127,
        "as": 0.09611386626644254,
        "a": 0.04805693313322127,
        "real": 0.04805693313322127,
        "prompt": 0.04805693313322127,
        "to": 0.04805693313322127,
        "your": 0.04805693313322127,
        "llm": 0.04805693313322127,
        "story": 0.28834159879932764,
        "id": 0.09611386626644254,
        "title": 0.09611386626644254,
        "text": 0.09611386626644254,
        "create": 0.04805693313322127,
        "poetry": 0.19222773253288508,
        "project": 0.09611386626644254,
        "voice": 0.09611386626644254,
        "xform": 0.09611386626644254,
        "add": 0.14417079939966382,
        "license": 0.04805693313322127,
        "apache": 0.04805693313322127,
        "2": 0.09611386626644254,
        "0": 0.14417079939966382,
        "readme": 0.14417079939966382,
        "with": 0.04805693313322127,
        "purpose": 0.09611386626644254,
        "install": 0.14417079939966382,
        "quickstart": 0.09611386626644254,
        "contributing": 0.04805693313322127,
        "editorconfig": 0.04805693313322127,
        "gitattributes": 0.04805693313322127,
        "gitignore": 0.09611386626644254,
        "pyproject": 0.09611386626644254,
        "toml": 0.09611386626644254,
        "python": 0.24028466566610635,
        "3": 0.14417079939966382,
        "11": 0.14417079939966382,
        "dependencies": 0.04805693313322127,
        "already": 0.04805693313322127,
        "completed": 0.04805693313322127,
        "none": 0.04805693313322127,
        "constraints": 0.04805693313322127,
        "use": 0.09611386626644254,
        "repo": 0.04805693313322127,
        "name": 0.09611386626644254,
        "keep": 0.09611386626644254,
        "docs": 0.04805693313322127,
        "concise": 0.04805693313322127,
        "but": 0.04805693313322127,
        "actionable": 0.04805693313322127,
        "non": 0.04805693313322127,
        "goals": 0.04805693313322127,
        "no": 0.14417079939966382,
        "code": 0.04805693313322127,
        "beyond": 0.04805693313322127,
        "scaffolding": 0.04805693313322127,
        "ci": 0.09611386626644254,
        "package": 0.04805693313322127,
        "layout": 0.04805693313322127,
        "yet": 0.09611386626644254,
        "current": 0.04805693313322127,
        "snapshot": 0.04805693313322127,
        "empty": 0.09611386626644254,
        "directory": 0.04805693313322127,
        "acceptance": 0.04805693313322127,
        "criteria": 0.04805693313322127,
        "definition": 0.04805693313322127,
        "of": 0.04805693313322127,
        "done": 0.04805693313322127,
        "succeeds": 0.04805693313322127,
        "on": 0.04805693313322127,
        "macos": 0.09611386626644254,
        "windows": 0.09611386626644254,
        "md": 0.04805693313322127,
        "includes": 0.04805693313322127,
        "instructions": 0.04805693313322127,
        "placeholder": 0.04805693313322127,
        "running": 0.04805693313322127,
        "run": 0.04805693313322127,
        "v": 0.04805693313322127,
        "prints": 0.04805693313322127,
        "x": 0.04805693313322127,
        "deliverables": 0.09611386626644254,
        "output": 0.04805693313322127,
        "contract": 0.04805693313322127,
        "then": 0.04805693313322127,
        "list": 0.04805693313322127,
        "from": 0.04805693313322127,
        "template": 0.04805693313322127,
        "implementation": 0.04805693313322127,
        "hints": 0.04805693313322127,
        "standard": 0.04805693313322127,
        "for": 0.04805693313322127,
        "version": 0.04805693313322127,
        "authors": 0.04805693313322127,
        "in": 0.04805693313322127,
        "important": 0.04805693313322127,
        "guardrails": 0.04805693313322127,
        "do": 0.04805693313322127,
        "not": 0.04805693313322127,
        "or": 0.04805693313322127,
        "tests": 0.04805693313322127,
        "succinct": 0.04805693313322127,
        "section": 0.04805693313322127,
        "headers": 0.04805693313322127,
        "placeholders": 0.04805693313322127,
        "016": 0.09611386626644254,
        "model": 0.09611386626644254,
        "registry": 0.09611386626644254,
        "provider": 0.09611386626644254,
        "detection": 0.09611386626644254,
        "implement": 0.04805693313322127,
        "ml": 0.04805693313322127,
        "runtime": 0.14417079939966382,
        "onnx_loader": 0.04805693313322127,
        "py": 0.04805693313322127,
        "that": 0.04805693313322127,
        "chooses": 0.04805693313322127,
        "best": 0.04805693313322127,
        "onnx": 0.04805693313322127,
        "ep": 0.04805693313322127,
        "at": 0.04805693313322127,
        "tensorrt": 0.04805693313322127,
        "directml": 0.04805693313322127
      },
      "text": "include all required files. --- ## \u2705 Example Instantiation #1 \u2014 S\u2011001 (Initialize repository & core metadata) > Copy, adjust, and paste the following as a real prompt to your LLM. **Story ID:** S\u2011001 **Story Title:** Initialize repository & core metadata **Story Text:** Create Poetry project `voice-xform`; add LICENSE (Apache\u20112.0), README with purpose/install/quickstart, CONTRIBUTING, .editorconfig, .gitattributes, .gitignore, pyproject.toml (Python 3.11). **Dependencies already completed:** none **Constraints:** Use Poetry; repo name `voice-xform`; Python 3.11; keep docs concise but actionable. **Non\u2011Goals:** No code beyond scaffolding; no CI; no package layout yet. **Current Repository Snapshot** *(empty directory)* ``` (Empty) ``` **Acceptance Criteria (Definition of Done)** * `poetry install` succeeds on macOS & Windows. * `README.md` includes purpose, install instructions, and placeholder quickstart. * Running `poetry run python -V` prints Python 3.11.x. **Deliverables \u2014 Output Contract** (then paste the **Deliverables** list from the template) **Implementation Hints** * Use standard `.gitignore` for Python + macOS + Windows. * Include project metadata (name, version `0.1.0`, authors) in `pyproject.toml`. **Important Guardrails** * Do not add CI or tests yet. * Keep README succinct; add section headers as placeholders. --- ## \u2705 Example Instantiation #2 \u2014 S\u2011016 (Model registry & provider detection) **Story ID:** S\u2011016 **Story Title:** Model registry & provider detection **Story Text:** Implement `ml/runtime/onnx_loader.py` that chooses the best ONNX Runtime EP at runtime (TensorRT > DirectML >",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#4",
      "vector": {
        "example": 0.045267873021259265,
        "instantiation": 0.045267873021259265,
        "2": 0.045267873021259265,
        "s": 0.22633936510629632,
        "016": 0.09053574604251853,
        "model": 0.18107149208503706,
        "registry": 0.18107149208503706,
        "provider": 0.18107149208503706,
        "detection": 0.09053574604251853,
        "story": 0.1358036190637778,
        "id": 0.045267873021259265,
        "title": 0.045267873021259265,
        "text": 0.045267873021259265,
        "implement": 0.09053574604251853,
        "ml": 0.1358036190637778,
        "runtime": 0.18107149208503706,
        "onnx_loader": 0.09053574604251853,
        "py": 0.2716072381275556,
        "that": 0.09053574604251853,
        "chooses": 0.045267873021259265,
        "the": 0.18107149208503706,
        "best": 0.045267873021259265,
        "onnx": 0.045267873021259265,
        "ep": 0.1358036190637778,
        "at": 0.09053574604251853,
        "tensorrt": 0.045267873021259265,
        "directml": 0.045267873021259265,
        "cpu": 0.09053574604251853,
        "mps": 0.045267873021259265,
        "coreml": 0.045267873021259265,
        "on": 0.22633936510629632,
        "macos": 0.1358036190637778,
        "for": 0.09053574604251853,
        "paths": 0.045267873021259265,
        "versioning": 0.045267873021259265,
        "provide": 0.045267873021259265,
        "tests": 0.1358036190637778,
        "monkeypatch": 0.09053574604251853,
        "availability": 0.1358036190637778,
        "dependencies": 0.09053574604251853,
        "already": 0.045267873021259265,
        "completed": 0.045267873021259265,
        "004": 0.045267873021259265,
        "package": 0.045267873021259265,
        "layout": 0.045267873021259265,
        "002": 0.045267873021259265,
        "tooling": 0.045267873021259265,
        "003": 0.045267873021259265,
        "ci": 0.045267873021259265,
        "constraints": 0.045267873021259265,
        "no": 0.18107149208503706,
        "gpu": 0.045267873021259265,
        "specific": 0.045267873021259265,
        "imports": 0.045267873021259265,
        "module": 0.045267873021259265,
        "top": 0.045267873021259265,
        "level": 0.045267873021259265,
        "log": 0.045267873021259265,
        "chosen": 0.045267873021259265,
        "and": 0.18107149208503706,
        "fallbacks": 0.045267873021259265,
        "non": 0.045267873021259265,
        "goals": 0.045267873021259265,
        "real": 0.045267873021259265,
        "files": 0.09053574604251853,
        "yet": 0.045267873021259265,
        "inference": 0.045267873021259265,
        "calls": 0.045267873021259265,
        "current": 0.045267873021259265,
        "repository": 0.045267873021259265,
        "snapshot": 0.045267873021259265,
        "voice": 0.09053574604251853,
        "xform": 0.09053574604251853,
        "app": 0.045267873021259265,
        "core": 0.045267873021259265,
        "version": 0.09053574604251853,
        "__init__": 0.09053574604251853,
        "empty": 0.045267873021259265,
        "placeholder": 0.045267873021259265,
        "pyproject": 0.09053574604251853,
        "toml": 0.1358036190637778,
        "key": 0.045267873021259265,
        "relevant": 0.045267873021259265,
        "parts": 0.045267873021259265,
        "tool": 0.09053574604251853,
        "poetry": 0.09053574604251853,
        "name": 0.045267873021259265,
        "0": 0.1358036190637778,
        "1": 0.09053574604251853,
        "python": 0.045267873021259265,
        "3": 0.045267873021259265,
        "11": 0.045267873021259265,
        "onnxruntime": 0.09053574604251853,
        "18": 0.045267873021259265,
        "acceptance": 0.045267873021259265,
        "criteria": 0.045267873021259265,
        "definition": 0.045267873021259265,
        "of": 0.045267873021259265,
        "done": 0.045267873021259265,
        "select_providers": 0.045267873021259265,
        "returns": 0.045267873021259265,
        "an": 0.045267873021259265,
        "ordered": 0.045267873021259265,
        "list": 0.1358036190637778,
        "based": 0.045267873021259265,
        "platform": 0.09053574604251853,
        "logs": 0.045267873021259265,
        "contain": 0.045267873021259265,
        "selected": 0.045267873021259265,
        "reason": 0.045267873021259265,
        "fallback": 0.045267873021259265,
        "simulate": 0.045267873021259265,
        "get_available_providers": 0.045267873021259265,
        "assert": 0.045267873021259265,
        "selection": 0.045267873021259265,
        "order": 0.045267873021259265,
        "across": 0.045267873021259265,
        "windows": 0.09053574604251853,
        "linux": 0.045267873021259265,
        "mypy": 0.045267873021259265,
        "ruff": 0.045267873021259265,
        "pytest": 0.045267873021259265,
        "pass": 0.045267873021259265,
        "deliverables": 0.09053574604251853,
        "output": 0.045267873021259265,
        "contract": 0.045267873021259265,
        "then": 0.045267873021259265,
        "paste": 0.045267873021259265,
        "from": 0.045267873021259265,
        "template": 0.045267873021259265,
        "implementation": 0.045267873021259265,
        "hints": 0.045267873021259265,
        "detect": 0.045267873021259265,
        "os": 0.045267873021259265,
        "with": 0.045267873021259265,
        "system": 0.045267873021259265,
        "prefer": 0.045267873021259265,
        "tensorrtexecutionprovider": 0.045267873021259265,
        "nvidia": 0.045267873021259265,
        "dmlexecutionprovider": 0.045267873021259265,
        "coremlexecutionprovider": 0.045267873021259265,
        "or": 0.045267873021259265,
        "mpsexecutionprovider": 0.045267873021259265,
        "else": 0.045267873021259265,
        "expose": 0.045267873021259265,
        "a": 0.045267873021259265,
        "helper": 0.045267873021259265,
        "create_session": 0.045267873021259265,
        "path": 0.045267873021259265,
        "str": 0.09053574604251853,
        "preferred": 0.045267873021259265,
        "none": 0.045267873021259265,
        "inferencesession": 0.045267873021259265,
        "important": 0.045267873021259265,
        "guardrails": 0.045267873021259265,
        "actual": 0.045267873021259265
      },
      "text": "--- ## \u2705 Example Instantiation #2 \u2014 S\u2011016 (Model registry & provider detection) **Story ID:** S\u2011016 **Story Title:** Model registry & provider detection **Story Text:** Implement `ml/runtime/onnx_loader.py` that chooses the best ONNX Runtime EP at runtime (TensorRT > DirectML > CPU; MPS/CoreML on macOS). Implement `ml/registry.py` for model paths/versioning. Provide tests that monkeypatch provider availability. **Dependencies already completed:** S\u2011004 (package layout), S\u2011002 (tooling), S\u2011003 (CI) **Constraints:** No GPU\u2011specific imports at module top level. Log chosen EP and fallbacks. **Non\u2011Goals:** No real model files yet; no inference calls. **Current Repository Snapshot** ``` voice-xform/ app/ core/ version.py ml/ __init__.py runtime/ __init__.py registry.py # (empty placeholder) tests/ pyproject.toml ``` **Key files:** `pyproject.toml` (relevant parts) ```toml [tool.poetry] name = \"voice-xform\" version = \"0.1.0\" [tool.poetry.dependencies] python = \"^3.11\" onnxruntime = \"^1.18.0\" ``` **Acceptance Criteria (Definition of Done)** * `onnx_loader.select_providers()` returns an ordered provider list based on platform and availability. * Logs contain the selected EP and reason for fallback. * Tests simulate availability (monkeypatch `onnxruntime.get_available_providers`) and assert selection order across Windows/macOS/Linux. * mypy/ruff/pytest pass. **Deliverables \u2014 Output Contract** (then paste the **Deliverables** list from the template) **Implementation Hints** * Detect OS with `platform.system()`. * Prefer `\"TensorrtExecutionProvider\"` on NVIDIA, `\"DmlExecutionProvider\"` on Windows, `\"CoreMLExecutionProvider\"` or `\"MPSExecutionProvider\"` on macOS, else CPU. * Expose a helper `create_session(path: str, preferred: list[str] | None) -> InferenceSession`. **Important Guardrails** * No actual",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#5",
      "vector": {
        "template": 0.08971226080325131,
        "implementation": 0.04485613040162566,
        "hints": 0.04485613040162566,
        "detect": 0.04485613040162566,
        "os": 0.04485613040162566,
        "with": 0.08971226080325131,
        "platform": 0.08971226080325131,
        "system": 0.08971226080325131,
        "prefer": 0.04485613040162566,
        "tensorrtexecutionprovider": 0.04485613040162566,
        "on": 0.17942452160650263,
        "nvidia": 0.04485613040162566,
        "dmlexecutionprovider": 0.04485613040162566,
        "windows": 0.08971226080325131,
        "coremlexecutionprovider": 0.04485613040162566,
        "or": 0.08971226080325131,
        "mpsexecutionprovider": 0.04485613040162566,
        "macos": 0.08971226080325131,
        "else": 0.04485613040162566,
        "cpu": 0.04485613040162566,
        "expose": 0.04485613040162566,
        "a": 0.26913678240975397,
        "helper": 0.04485613040162566,
        "create_session": 0.04485613040162566,
        "path": 0.04485613040162566,
        "str": 0.08971226080325131,
        "preferred": 0.04485613040162566,
        "list": 0.04485613040162566,
        "none": 0.04485613040162566,
        "inferencesession": 0.04485613040162566,
        "important": 0.04485613040162566,
        "guardrails": 0.04485613040162566,
        "no": 0.08971226080325131,
        "actual": 0.04485613040162566,
        "model": 0.04485613040162566,
        "downloads": 0.04485613040162566,
        "global": 0.04485613040162566,
        "provider": 0.04485613040162566,
        "checks": 0.08971226080325131,
        "at": 0.04485613040162566,
        "import": 0.04485613040162566,
        "time": 0.08971226080325131,
        "run": 0.17942452160650263,
        "inside": 0.04485613040162566,
        "functions": 0.04485613040162566,
        "verification": 0.04485613040162566,
        "checklist": 0.04485613040162566,
        "you": 0.13456839120487699,
        "this": 0.04485613040162566,
        "after": 0.04485613040162566,
        "each": 0.08971226080325131,
        "story": 0.26913678240975397,
        "locally": 0.04485613040162566,
        "and": 0.3139929128113796,
        "produce": 0.04485613040162566,
        "these": 0.04485613040162566,
        "commands": 0.04485613040162566,
        "in": 0.13456839120487699,
        "the": 0.4485613040162566,
        "validation": 0.04485613040162566,
        "steps": 0.04485613040162566,
        "section": 0.08971226080325131,
        "bash": 0.04485613040162566,
        "make": 0.04485613040162566,
        "all": 0.04485613040162566,
        "confirm": 0.04485613040162566,
        "tests": 0.08971226080325131,
        "pass": 0.04485613040162566,
        "coverage": 0.04485613040162566,
        "for": 0.13456839120487699,
        "new": 0.04485613040162566,
        "code": 0.04485613040162566,
        "95": 0.04485613040162566,
        "spot": 0.04485613040162566,
        "check": 0.04485613040162566,
        "specific": 0.04485613040162566,
        "issues": 0.08971226080325131,
        "if": 0.13456839120487699,
        "touches": 0.04485613040162566,
        "features": 0.04485613040162566,
        "command": 0.04485613040162566,
        "review": 0.08971226080325131,
        "do": 0.04485613040162566,
        "pr": 0.04485613040162566,
        "of": 0.04485613040162566,
        "diff": 0.04485613040162566,
        "fix": 0.04485613040162566,
        "any": 0.04485613040162566,
        "find": 0.04485613040162566,
        "tips": 0.04485613040162566,
        "working": 0.04485613040162566,
        "always": 0.04485613040162566,
        "update": 0.04485613040162566,
        "current": 0.04485613040162566,
        "repository": 0.04485613040162566,
        "snapshot": 0.04485613040162566,
        "before": 0.04485613040162566,
        "so": 0.04485613040162566,
        "llm": 0.08971226080325131,
        "is": 0.13456839120487699,
        "grounded": 0.04485613040162566,
        "reality": 0.04485613040162566,
        "keep": 0.04485613040162566,
        "acceptance": 0.08971226080325131,
        "criteria": 0.08971226080325131,
        "crisp": 0.04485613040162566,
        "testable": 0.04485613040162566,
        "output": 0.04485613040162566,
        "contract": 0.04485613040162566,
        "ensures": 0.04485613040162566,
        "get": 0.04485613040162566,
        "git": 0.04485613040162566,
        "apply": 0.04485613040162566,
        "able": 0.04485613040162566,
        "patch": 0.04485613040162566,
        "full": 0.04485613040162566,
        "file": 0.04485613040162566,
        "contents": 0.04485613040162566,
        "commit": 0.04485613040162566,
        "message": 0.04485613040162566,
        "every": 0.04485613040162566,
        "ui": 0.08971226080325131,
        "heavy": 0.04485613040162566,
        "add": 0.04485613040162566,
        "screenshots": 0.04485613040162566,
        "state": 0.04485613040162566,
        "diagrams": 0.04485613040162566,
        "to": 0.13456839120487699,
        "context": 0.04485613040162566,
        "steer": 0.04485613040162566,
        "layout": 0.04485613040162566,
        "naming": 0.04485613040162566,
        "performance": 0.04485613040162566,
        "sensitive": 0.04485613040162566,
        "put": 0.04485613040162566,
        "explicit": 0.04485613040162566,
        "budgets": 0.04485613040162566,
        "into": 0.04485613040162566,
        "ask": 0.04485613040162566,
        "print": 0.04485613040162566,
        "measured": 0.04485613040162566,
        "timings": 0.04485613040162566
      },
      "text": "template) **Implementation Hints** * Detect OS with `platform.system()`. * Prefer `\"TensorrtExecutionProvider\"` on NVIDIA, `\"DmlExecutionProvider\"` on Windows, `\"CoreMLExecutionProvider\"` or `\"MPSExecutionProvider\"` on macOS, else CPU. * Expose a helper `create_session(path: str, preferred: list[str] | None) -> InferenceSession`. **Important Guardrails** * No actual model downloads. * No global provider checks at import time; run checks inside functions. --- ## \ud83e\uddea Verification Checklist (You run this after each story) Run locally and produce these commands in the **Validation Steps** section: ```bash make all ``` * Confirm tests pass and coverage for new code \u2265 95%. * On Windows/macOS, spot\u2011check for platform\u2011specific issues if the story touches system features. * Run the command /review and do a PR review of the diff. Fix any issues you find. --- ## \ud83d\udcdd Tips for Working With the Template * Always **update the \u201cCurrent Repository Snapshot\u201d** before each story so the LLM is grounded in reality. * Keep **Acceptance Criteria** crisp and testable. * The **Output Contract** ensures you get a `git apply`\u2011able patch, full file contents, tests, and a commit message \u2014 every time. * If a story is UI\u2011heavy, add screenshots or UI state diagrams to the **Story Context** section to steer layout and naming. * If a story is performance\u2011sensitive, put explicit budgets into **Acceptance Criteria** and ask the LLM to print measured timings in",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#6",
      "vector": {
        "story": 0.3849001794597505,
        "is": 0.19245008972987526,
        "ui": 0.19245008972987526,
        "heavy": 0.09622504486493763,
        "add": 0.09622504486493763,
        "screenshots": 0.09622504486493763,
        "or": 0.09622504486493763,
        "state": 0.09622504486493763,
        "diagrams": 0.09622504486493763,
        "to": 0.28867513459481287,
        "the": 0.28867513459481287,
        "context": 0.19245008972987526,
        "section": 0.09622504486493763,
        "steer": 0.09622504486493763,
        "layout": 0.09622504486493763,
        "and": 0.28867513459481287,
        "naming": 0.09622504486493763,
        "if": 0.09622504486493763,
        "a": 0.09622504486493763,
        "performance": 0.09622504486493763,
        "sensitive": 0.09622504486493763,
        "put": 0.09622504486493763,
        "explicit": 0.09622504486493763,
        "budgets": 0.09622504486493763,
        "into": 0.09622504486493763,
        "acceptance": 0.19245008972987526,
        "criteria": 0.19245008972987526,
        "ask": 0.09622504486493763,
        "llm": 0.09622504486493763,
        "print": 0.09622504486493763,
        "measured": 0.09622504486493763,
        "timings": 0.09622504486493763,
        "in": 0.19245008972987526,
        "test": 0.09622504486493763,
        "logs": 0.09622504486493763,
        "use": 0.09622504486493763,
        "this": 0.09622504486493763,
        "template": 0.09622504486493763,
        "verbatim": 0.09622504486493763,
        "for": 0.09622504486493763,
        "s": 0.19245008972987526,
        "001": 0.09622504486493763,
        "through": 0.09622504486493763,
        "044": 0.09622504486493763,
        "by": 0.09622504486493763,
        "swapping": 0.09622504486493763,
        "relevant": 0.09622504486493763,
        "snapshot": 0.09622504486493763
      },
      "text": "story is UI\u2011heavy, add screenshots or UI state diagrams to the **Story Context** section to steer layout and naming. * If a story is performance\u2011sensitive, put explicit budgets into **Acceptance Criteria** and ask the LLM to print measured timings in test logs. --- Use this template verbatim for S\u2011001 through S\u2011044 by swapping in the relevant **Story Context**, **Snapshot**, and **Acceptance Criteria**.",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/spec.md#0",
      "vector": {
        "intelligent": 0.06696495301824251,
        "readme": 0.2008948590547275,
        "generator": 0.06696495301824251,
        "architecture": 0.13392990603648502,
        "spec": 0.06696495301824251,
        "python": 0.13392990603648502,
        "local": 0.2008948590547275,
        "llm": 0.2008948590547275,
        "1": 0.06696495301824251,
        "purpose": 0.06696495301824251,
        "scope": 0.06696495301824251,
        "build": 0.13392990603648502,
        "a": 0.3348247650912125,
        "based": 0.06696495301824251,
        "system": 0.06696495301824251,
        "that": 0.06696495301824251,
        "analyzes": 0.06696495301824251,
        "git": 0.3348247650912125,
        "repository": 0.06696495301824251,
        "structure": 0.06696495301824251,
        "code": 0.06696495301824251,
        "dependencies": 0.06696495301824251,
        "then": 0.06696495301824251,
        "generates": 0.06696495301824251,
        "and": 0.13392990603648502,
        "maintains": 0.06696495301824251,
        "high": 0.13392990603648502,
        "quality": 0.06696495301824251,
        "md": 0.06696495301824251,
        "using": 0.06696495301824251,
        "it": 0.06696495301824251,
        "initializes": 0.06696495301824251,
        "repos": 0.06696495301824251,
        "with": 0.06696495301824251,
        "no": 0.06696495301824251,
        "docs": 0.2008948590547275,
        "keeps": 0.06696495301824251,
        "up": 0.06696495301824251,
        "to": 0.06696495301824251,
        "date": 0.06696495301824251,
        "on": 0.06696495301824251,
        "commits": 0.06696495301824251,
        "prs": 0.06696495301824251,
        "supports": 0.06696495301824251,
        "multiple": 0.06696495301824251,
        "languages": 0.06696495301824251,
        "project": 0.06696495301824251,
        "types": 0.06696495301824251,
        "via": 0.06696495301824251,
        "analyzers": 0.13392990603648502,
        "non": 0.06696495301824251,
        "goals": 0.06696495301824251,
        "for": 0.06696495301824251,
        "the": 0.06696495301824251,
        "poc": 0.06696495301824251,
        "multi": 0.06696495301824251,
        "repo": 0.13392990603648502,
        "orchestration": 0.06696495301824251,
        "full": 0.06696495301824251,
        "website": 0.06696495301824251,
        "api": 0.06696495301824251,
        "reference": 0.06696495301824251,
        "extraction": 0.06696495301824251,
        "beyond": 0.06696495301824251,
        "summaries": 0.06696495301824251,
        "cloud": 0.06696495301824251,
        "llms": 0.06696495301824251,
        "2": 0.06696495301824251,
        "level": 0.06696495301824251,
        "at": 0.06696495301824251,
        "glance": 0.06696495301824251,
        "events": 0.06696495301824251,
        "event": 0.06696495301824251,
        "sources": 0.06696495301824251,
        "cli": 0.06696495301824251,
        "commands": 0.06696495301824251,
        "hooks": 0.06696495301824251,
        "webhooks": 0.06696495301824251,
        "ci": 0.06696495301824251,
        "commit": 0.13392990603648502,
        "pr": 0.13392990603648502,
        "orchestr": 0.06696495301824251,
        "async": 0.06696495301824251,
        "task": 0.06696495301824251,
        "graph": 0.13392990603648502,
        "scanner": 0.06696495301824251,
        "doc": 0.06696495301824251,
        "store": 0.06696495301824251,
        "indexer": 0.06696495301824251,
        "language": 0.06696495301824251,
        "artifacts": 0.06696495301824251,
        "fs": 0.06696495301824251,
        "deps": 0.06696495301824251,
        "cache": 0.06696495301824251,
        "versions": 0.06696495301824251,
        "knowledge": 0.06696495301824251,
        "embeddings": 0.06696495301824251,
        "prompt": 0.06696495301824251,
        "builder": 0.06696495301824251,
        "templates": 0.06696495301824251,
        "rag": 0.06696495301824251,
        "runner": 0.06696495301824251,
        "llama": 0.06696495301824251,
        "cpp": 0.06696495301824251,
        "ollama": 0.06696495301824251,
        "post": 0.06696495301824251,
        "processor": 0.06696495301824251,
        "lint": 0.06696495301824251,
        "toc": 0.06696495301824251,
        "badges": 0.06696495301824251,
        "links": 0.06696495301824251,
        "publisher": 0.06696495301824251,
        "branch": 0.06696495301824251
      },
      "text": "# Intelligent README Generator \u2014 Architecture & Spec (Python, Local LLM) ## 1) Purpose & Scope Build a Python-based system that **analyzes a Git repository** (structure, code, dependencies), then **generates and maintains a high-quality README.md** using a **local LLM**. It initializes repos with no docs and **keeps docs up to date** on commits/PRs. Supports **multiple languages/project types** via analyzers. Non-goals (for the POC): multi-repo orchestration, full website docs, API reference extraction (beyond README summaries), cloud LLMs. --- ## 2) High-Level Architecture (at a glance) ``` \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 Git Events \u2502 Event Sources \u2502 CLI commands, Git hooks, Webhooks/CI (commit/PR) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Orchestr \u2502 (Async task graph) \u2514\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Repo Scanner\u2502 \u2502 Analyzers \u2502 \u2502 Doc Store \u2502 \u2502 + Indexer \u2502 \u2502 (Language, \u2502 \u2502 (Artifacts, \u2502 \u2502 (Git, FS) \u2502 \u2502 Build, Deps) \u2502 \u2502 Cache, \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 Versions) \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 Knowledge Graph \u2502 \u2502 \u2502 \u2502 & Embeddings \u2502<\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 Prompt Builder \u2502 (Templates + RAG) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 Local LLM Runner \u2502 (llama.cpp/Ollama) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25b6\u2502 Post-Processor \u2502 (lint, ToC, badges, links) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Git Publisher \u2502 (branch/PR/commit) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 ``` --- ##",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#1",
      "vector": {
        "rag": 0.053074489243427524,
        "local": 0.053074489243427524,
        "llm": 0.053074489243427524,
        "runner": 0.053074489243427524,
        "llama": 0.053074489243427524,
        "cpp": 0.053074489243427524,
        "ollama": 0.053074489243427524,
        "post": 0.053074489243427524,
        "processor": 0.053074489243427524,
        "lint": 0.053074489243427524,
        "toc": 0.053074489243427524,
        "badges": 0.053074489243427524,
        "links": 0.053074489243427524,
        "git": 0.10614897848685505,
        "publisher": 0.053074489243427524,
        "branch": 0.053074489243427524,
        "pr": 0.053074489243427524,
        "commit": 0.053074489243427524,
        "3": 0.2653724462171376,
        "components": 0.053074489243427524,
        "responsibilities": 0.053074489243427524,
        "1": 0.053074489243427524,
        "orchestrator": 0.053074489243427524,
        "coordinates": 0.053074489243427524,
        "end": 0.10614897848685505,
        "to": 0.2122979569737101,
        "pipelines": 0.053074489243427524,
        "init": 0.053074489243427524,
        "update": 0.10614897848685505,
        "regenerate": 0.10614897848685505,
        "computes": 0.053074489243427524,
        "change": 0.10614897848685505,
        "impact": 0.053074489243427524,
        "from": 0.10614897848685505,
        "diff": 0.053074489243427524,
        "decides": 0.053074489243427524,
        "whether": 0.053074489243427524,
        "full": 0.053074489243427524,
        "readme": 0.053074489243427524,
        "or": 0.10614897848685505,
        "patch": 0.053074489243427524,
        "sections": 0.053074489243427524,
        "schedules": 0.053074489243427524,
        "tasks": 0.053074489243427524,
        "and": 0.15922346773028256,
        "caches": 0.053074489243427524,
        "intermediate": 0.053074489243427524,
        "results": 0.053074489243427524,
        "reuses": 0.053074489243427524,
        "analyzer": 0.10614897848685505,
        "outputs": 0.053074489243427524,
        "docgen": 0.2122979569737101,
        "analyzers": 0.2653724462171376,
        "cache": 0.053074489243427524,
        "json": 0.2122979569737101,
        "invalidating": 0.053074489243427524,
        "entries": 0.053074489243427524,
        "when": 0.10614897848685505,
        "file": 0.053074489243427524,
        "hashes": 0.053074489243427524,
        "signatures": 0.053074489243427524,
        "emits": 0.053074489243427524,
        "structured": 0.053074489243427524,
        "logs": 0.053074489243427524,
        "info": 0.053074489243427524,
        "by": 0.053074489243427524,
        "default": 0.053074489243427524,
        "debug": 0.053074489243427524,
        "with": 0.053074489243427524,
        "verbose": 0.053074489243427524,
        "respects": 0.053074489243427524,
        "yml": 0.053074489243427524,
        "ci": 0.053074489243427524,
        "watched_globs": 0.053074489243427524,
        "skip": 0.053074489243427524,
        "unrelated": 0.053074489243427524,
        "diffs": 0.053074489243427524,
        "substitutes": 0.053074489243427524,
        "fail": 0.053074489243427524,
        "safe": 0.053074489243427524,
        "stubs": 0.053074489243427524,
        "generation": 0.053074489243427524,
        "fails": 0.053074489243427524,
        "supports": 0.053074489243427524,
        "dry": 0.10614897848685505,
        "run": 0.15922346773028256,
        "previews": 0.053074489243427524,
        "records": 0.053074489243427524,
        "scorecards": 0.053074489243427524,
        "for": 0.053074489243427524,
        "each": 0.053074489243427524,
        "under": 0.053074489243427524,
        "2": 0.053074489243427524,
        "repo": 0.15922346773028256,
        "scanner": 0.053074489243427524,
        "indexer": 0.053074489243427524,
        "walks": 0.053074489243427524,
        "builds": 0.053074489243427524,
        "normalized": 0.053074489243427524,
        "manifest": 0.053074489243427524,
        "files": 0.10614897848685505,
        "sizes": 0.053074489243427524,
        "language": 0.10614897848685505,
        "tags": 0.053074489243427524,
        "path": 0.053074489243427524,
        "roles": 0.053074489243427524,
        "src": 0.053074489243427524,
        "test": 0.10614897848685505,
        "docs": 0.053074489243427524,
        "examples": 0.053074489243427524,
        "build": 0.15922346773028256,
        "dependency": 0.10614897848685505,
        "manifests": 0.053074489243427524,
        "e": 0.053074489243427524,
        "g": 0.053074489243427524,
        "pom": 0.053074489243427524,
        "xml": 0.053074489243427524,
        "gradle": 0.10614897848685505,
        "package": 0.053074489243427524,
        "requirements": 0.053074489243427524,
        "txt": 0.053074489243427524,
        "pyproject": 0.053074489243427524,
        "toml": 0.10614897848685505,
        "go": 0.15922346773028256,
        "mod": 0.053074489243427524,
        "cargo": 0.10614897848685505,
        "gemfile": 0.053074489243427524,
        "composer": 0.053074489243427524,
        "entrypoints": 0.10614897848685505,
        "clis": 0.053074489243427524,
        "services": 0.053074489243427524,
        "coverage": 0.053074489243427524,
        "artifacts": 0.053074489243427524,
        "if": 0.053074489243427524,
        "available": 0.053074489243427524,
        "stores": 0.053074489243427524,
        "a": 0.053074489243427524,
        "per": 0.053074489243427524,
        "index": 0.053074489243427524,
        "speed": 0.053074489243427524,
        "future": 0.053074489243427524,
        "runs": 0.053074489243427524,
        "plugin": 0.053074489243427524,
        "based": 0.053074489243427524,
        "detect": 0.053074489243427524,
        "idioms": 0.053074489243427524,
        "frameworks": 0.053074489243427524,
        "spring": 0.053074489243427524,
        "boot": 0.053074489243427524,
        "fastapi": 0.053074489243427524,
        "node": 0.053074489243427524,
        "express": 0.053074489243427524,
        "react": 0.053074489243427524,
        "next": 0.053074489243427524,
        "js": 0.053074489243427524,
        "http": 0.053074489243427524,
        "rust": 0.053074489243427524,
        "bin": 0.053074489243427524,
        "lib": 0.053074489243427524,
        "maven": 0.053074489243427524,
        "setuptools": 0.053074489243427524,
        "poetry": 0.053074489243427524,
        "npm": 0.053074489243427524,
        "pnpm": 0.053074489243427524,
        "yarn": 0.053074489243427524,
        "extract": 0.053074489243427524,
        "top": 0.053074489243427524,
        "level": 0.053074489243427524
      },
      "text": "+ RAG) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 Local LLM Runner \u2502 (llama.cpp/Ollama) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25b6\u2502 Post-Processor \u2502 (lint, ToC, badges, links) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Git Publisher \u2502 (branch/PR/commit) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 ``` --- ## 3) Components & Responsibilities ### 3.1 Orchestrator * Coordinates end-to-end pipelines (init, update, regenerate). * Computes *change impact* from Git diff; decides whether to regenerate full README or patch sections. * Schedules tasks and caches intermediate results. * Reuses analyzer outputs from `.docgen/analyzers/cache.json`, invalidating entries when file hashes or analyzer signatures change. * Emits structured logs (info by default, debug with `--verbose`), respects `.docgen.yml` `ci.watched_globs` to skip unrelated diffs, and substitutes fail-safe stubs when generation fails. * Supports dry-run previews (`docgen update --dry-run`) and records scorecards for each run under `.docgen/`. ### 3.2 Repo Scanner & Indexer * Walks repo; builds normalized manifest: * Files, sizes, language tags, path roles (src/test/docs/examples). * Build files & dependency manifests (e.g., `pom.xml`, `build.gradle`, `package.json`, `requirements.txt`, `pyproject.toml`, `go.mod`, `Cargo.toml`, `Gemfile`, `composer.json`). * Entrypoints (CLIs, services), test coverage artifacts if available. * Stores a per-repo index (JSON) to speed future runs. ### 3.3 Analyzers (Plugin-based) * **Language analyzers** (detect idioms, entrypoints, frameworks: Spring Boot, FastAPI, Node/Express, React, Next.js, Go HTTP, Rust bin/lib). * **Build analyzers** (Maven/Gradle, setuptools/Poetry, npm/pnpm/yarn, Go, Cargo). * **Dependency analyzers** (extract top-level",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#2",
      "vector": {
        "index": 0.0536828127095019,
        "json": 0.0536828127095019,
        "to": 0.1073656254190038,
        "speed": 0.0536828127095019,
        "future": 0.0536828127095019,
        "runs": 0.0536828127095019,
        "3": 0.2147312508380076,
        "analyzers": 0.3220968762570114,
        "plugin": 0.0536828127095019,
        "based": 0.0536828127095019,
        "language": 0.0536828127095019,
        "detect": 0.0536828127095019,
        "idioms": 0.0536828127095019,
        "entrypoints": 0.0536828127095019,
        "frameworks": 0.0536828127095019,
        "spring": 0.1073656254190038,
        "boot": 0.1073656254190038,
        "fastapi": 0.1073656254190038,
        "node": 0.1073656254190038,
        "express": 0.0536828127095019,
        "react": 0.0536828127095019,
        "next": 0.0536828127095019,
        "js": 0.0536828127095019,
        "go": 0.1073656254190038,
        "http": 0.0536828127095019,
        "rust": 0.0536828127095019,
        "bin": 0.0536828127095019,
        "lib": 0.0536828127095019,
        "build": 0.1073656254190038,
        "maven": 0.0536828127095019,
        "gradle": 0.0536828127095019,
        "setuptools": 0.0536828127095019,
        "poetry": 0.0536828127095019,
        "npm": 0.0536828127095019,
        "pnpm": 0.0536828127095019,
        "yarn": 0.0536828127095019,
        "cargo": 0.0536828127095019,
        "dependency": 0.0536828127095019,
        "extract": 0.0536828127095019,
        "top": 0.1073656254190038,
        "level": 0.0536828127095019,
        "libs": 0.0536828127095019,
        "notable": 0.0536828127095019,
        "transitive": 0.0536828127095019,
        "categories": 0.0536828127095019,
        "entrypoint": 0.0536828127095019,
        "infer": 0.0536828127095019,
        "run": 0.0536828127095019,
        "commands": 0.0536828127095019,
        "for": 0.1073656254190038,
        "django": 0.0536828127095019,
        "scripts": 0.1073656254190038,
        "pattern": 0.0536828127095019,
        "monorepo": 0.0536828127095019,
        "layout": 0.0536828127095019,
        "ci": 0.0536828127095019,
        "cd": 0.0536828127095019,
        "containerization": 0.0536828127095019,
        "k8s": 0.0536828127095019,
        "heuristics": 0.0536828127095019,
        "structure": 0.0536828127095019,
        "analyzer": 0.1610484381285057,
        "module": 0.0536828127095019,
        "topology": 0.0536828127095019,
        "detected": 0.0536828127095019,
        "entities": 0.1073656254190038,
        "dtos": 0.0536828127095019,
        "api": 0.0536828127095019,
        "endpoint": 0.0536828127095019,
        "sequences": 0.0536828127095019,
        "service": 0.0536828127095019,
        "interactions": 0.0536828127095019,
        "tree": 0.0536828127095019,
        "sitter": 0.0536828127095019,
        "symbol": 0.0536828127095019,
        "python": 0.0536828127095019,
        "java": 0.0536828127095019,
        "typescript": 0.0536828127095019,
        "extracts": 0.0536828127095019,
        "functions": 0.0536828127095019,
        "classes": 0.0536828127095019,
        "when": 0.0536828127095019,
        "parsers": 0.0536828127095019,
        "available": 0.0536828127095019,
        "and": 0.2147312508380076,
        "degrades": 0.0536828127095019,
        "gracefully": 0.0536828127095019,
        "otherwise": 0.0536828127095019,
        "each": 0.0536828127095019,
        "returns": 0.0536828127095019,
        "signals": 0.1073656254190038,
        "key": 0.1073656254190038,
        "facts": 0.0536828127095019,
        "the": 0.1073656254190038,
        "knowledge": 0.1073656254190038,
        "graph": 0.1610484381285057,
        "4": 0.0536828127095019,
        "embeddings": 0.1073656254190038,
        "rag": 0.0536828127095019,
        "of": 0.1073656254190038,
        "repo": 0.1073656254190038,
        "modules": 0.0536828127095019,
        "packages": 0.0536828127095019,
        "services": 0.0536828127095019,
        "configs": 0.0536828127095019,
        "tests": 0.0536828127095019,
        "docs": 0.1073656254190038,
        "lightweight": 0.0536828127095019,
        "embedding": 0.0536828127095019,
        "store": 0.0536828127095019,
        "e": 0.0536828127095019,
        "g": 0.0536828127095019,
        "faiss": 0.0536828127095019,
        "in": 0.0536828127095019,
        "memory": 0.0536828127095019,
        "chunks": 0.0536828127095019,
        "code": 0.0536828127095019,
        "comments": 0.0536828127095019,
        "readme": 0.1073656254190038,
        "fragments": 0.0536828127095019,
        "changelog": 0.0536828127095019,
        "issues": 0.0536828127095019,
        "optional": 0.0536828127095019,
        "commit": 0.0536828127095019,
        "messages": 0.1073656254190038,
        "provides": 0.0536828127095019,
        "context": 0.1073656254190038,
        "retrieval": 0.0536828127095019,
        "prompt": 0.1073656254190038,
        "building": 0.0536828127095019,
        "k": 0.0536828127095019,
        "by": 0.0536828127095019,
        "section": 0.1610484381285057,
        "persists": 0.0536828127095019,
        "under": 0.0536828127095019,
        "docgen": 0.0536828127095019,
        "refreshing": 0.0536828127095019,
        "only": 0.0536828127095019,
        "files": 0.0536828127095019,
        "whose": 0.0536828127095019,
        "hashes": 0.0536828127095019,
        "changed": 0.0536828127095019,
        "5": 0.0536828127095019,
        "builder": 0.0536828127095019,
        "aware": 0.0536828127095019,
        "jinja2": 0.0536828127095019,
        "templates": 0.0536828127095019,
        "with": 0.1073656254190038,
        "guardrails": 0.0536828127095019,
        "project": 0.0536828127095019,
        "intro": 0.0536828127095019,
        "features": 0.0536828127095019,
        "architecture": 0.0536828127095019,
        "overview": 0.0536828127095019,
        "quick": 0.0536828127095019,
        "start": 0.0536828127095019,
        "configuration": 0.0536828127095019,
        "test": 0.0536828127095019,
        "deployment": 0.0536828127095019,
        "troubleshooting": 0.0536828127095019,
        "faq": 0.0536828127095019,
        "roadmap": 0.0536828127095019,
        "contribution": 0.0536828127095019,
        "license": 0.0536828127095019,
        "badges": 0.0536828127095019,
        "dynamically": 0.0536828127095019,
        "injects": 0.0536828127095019,
        "retrieved": 0.0536828127095019,
        "per": 0.0536828127095019,
        "produces": 0.0536828127095019,
        "llm": 0.0536828127095019,
        "ready": 0.0536828127095019,
        "structured": 0.0536828127095019,
        "prompts": 0.0536828127095019,
        "system": 0.0536828127095019,
        "user": 0.0536828127095019,
        "token": 0.0536828127095019,
        "budgets": 0.0536828127095019,
        "honours": 0.0536828127095019,
        "style": 0.0536828127095019,
        "presets": 0.0536828127095019,
        "concise": 0.0536828127095019,
        "trims": 0.0536828127095019,
        "list": 0.0536828127095019,
        "heavy": 0.0536828127095019,
        "sections": 0.0536828127095019
      },
      "text": "index (JSON) to speed future runs. ### 3.3 Analyzers (Plugin-based) * **Language analyzers** (detect idioms, entrypoints, frameworks: Spring Boot, FastAPI, Node/Express, React, Next.js, Go HTTP, Rust bin/lib). * **Build analyzers** (Maven/Gradle, setuptools/Poetry, npm/pnpm/yarn, Go, Cargo). * **Dependency analyzers** (extract top-level libs & notable transitive categories). * **Entrypoint analyzers** (infer run commands for FastAPI, Django, Spring Boot, Node scripts). * **Pattern analyzers** (monorepo layout, CI/CD, containerization/K8s heuristics). * **Structure analyzer** (module topology, detected entities/DTOs, API endpoint sequences, service interactions). * **Tree-sitter symbol analyzer** (Python/Java/TypeScript) extracts functions/classes when parsers available and degrades gracefully otherwise. * Each analyzer returns **Signals** (key facts) to the knowledge graph. ### 3.4 Knowledge Graph & Embeddings (RAG) * Graph of Repo entities: modules, packages, services, scripts, configs, tests, docs. * Lightweight embedding store (e.g., `faiss`/in-memory) of **chunks**: code comments, README fragments, `docs/`, `CHANGELOG`, issues (optional), commit messages. * Provides **context retrieval** for prompt building (top-k by section) and persists embeddings under `.docgen/`, refreshing only the files whose hashes changed. ### 3.5 Prompt Builder * **Section-aware** Jinja2 templates with **guardrails**: * Project intro, key features, architecture overview, quick start, configuration, build/test, deployment, troubleshooting, FAQ, roadmap, contribution, license, badges. * Dynamically injects repo signals and retrieved context per section. * Produces **LLM-ready structured prompts** (system + user messages) with token budgets and honours `readme.style` presets (`concise` trims list-heavy sections,",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#3",
      "vector": {
        "start": 0.09690031662230184,
        "configuration": 0.09690031662230184,
        "build": 0.04845015831115092,
        "test": 0.04845015831115092,
        "deployment": 0.04845015831115092,
        "troubleshooting": 0.04845015831115092,
        "faq": 0.04845015831115092,
        "roadmap": 0.04845015831115092,
        "contribution": 0.04845015831115092,
        "license": 0.04845015831115092,
        "badges": 0.09690031662230184,
        "dynamically": 0.04845015831115092,
        "injects": 0.09690031662230184,
        "repo": 0.04845015831115092,
        "signals": 0.04845015831115092,
        "and": 0.4360514248003583,
        "retrieved": 0.04845015831115092,
        "context": 0.09690031662230184,
        "per": 0.04845015831115092,
        "section": 0.14535047493345277,
        "produces": 0.04845015831115092,
        "llm": 0.09690031662230184,
        "ready": 0.04845015831115092,
        "structured": 0.09690031662230184,
        "prompts": 0.04845015831115092,
        "system": 0.04845015831115092,
        "user": 0.04845015831115092,
        "messages": 0.04845015831115092,
        "with": 0.14535047493345277,
        "token": 0.04845015831115092,
        "budgets": 0.04845015831115092,
        "honours": 0.04845015831115092,
        "readme": 0.14535047493345277,
        "style": 0.14535047493345277,
        "presets": 0.04845015831115092,
        "concise": 0.04845015831115092,
        "trims": 0.04845015831115092,
        "list": 0.04845015831115092,
        "heavy": 0.04845015831115092,
        "sections": 0.14535047493345277,
        "comprehensive": 0.04845015831115092,
        "keeps": 0.04845015831115092,
        "full": 0.04845015831115092,
        "detail": 0.04845015831115092,
        "detected": 0.09690031662230184,
        "entrypoints": 0.04845015831115092,
        "infrastructure": 0.04845015831115092,
        "patterns": 0.04845015831115092,
        "into": 0.04845015831115092,
        "quick": 0.04845015831115092,
        "guidance": 0.04845015831115092,
        "e": 0.04845015831115092,
        "g": 0.04845015831115092,
        "uvicorn": 0.04845015831115092,
        "docker": 0.14535047493345277,
        "compose": 0.04845015831115092,
        "up": 0.04845015831115092,
        "generates": 0.04845015831115092,
        "mermaid": 0.04845015831115092,
        "sequence": 0.04845015831115092,
        "diagrams": 0.04845015831115092,
        "highlighting": 0.04845015831115092,
        "request": 0.04845015831115092,
        "flow": 0.04845015831115092,
        "across": 0.04845015831115092,
        "services": 0.04845015831115092,
        "when": 0.09690031662230184,
        "api": 0.09690031662230184,
        "endpoints": 0.04845015831115092,
        "are": 0.04845015831115092,
        "3": 0.09690031662230184,
        "6": 0.04845015831115092,
        "local": 0.14535047493345277,
        "runner": 0.14535047493345277,
        "pluggable": 0.04845015831115092,
        "runtime": 0.04845015831115092,
        "that": 0.04845015831115092,
        "prefers": 0.04845015831115092,
        "the": 0.04845015831115092,
        "model": 0.14535047493345277,
        "http": 0.14535047493345277,
        "endpoint": 0.04845015831115092,
        "host": 0.04845015831115092,
        "localhost": 0.04845015831115092,
        "12434": 0.04845015831115092,
        "engines": 0.09690031662230184,
        "v1": 0.09690031662230184,
        "container": 0.04845015831115092,
        "internal": 0.14535047493345277,
        "environment": 0.04845015831115092,
        "overrides": 0.04845015831115092,
        "an": 0.04845015831115092,
        "ollama": 0.04845015831115092,
        "cli": 0.09690031662230184,
        "fallback": 0.04845015831115092,
        "defaults": 0.04845015831115092,
        "to": 0.14535047493345277,
        "ai": 0.04845015831115092,
        "smollm2": 0.04845015831115092,
        "360m": 0.04845015831115092,
        "q4_k_m": 0.04845015831115092,
        "but": 0.04845015831115092,
        "respects": 0.04845015831115092,
        "docgen": 0.09690031662230184,
        "yml": 0.04845015831115092,
        "openai": 0.04845015831115092,
        "compatible": 0.04845015831115092,
        "env": 0.04845015831115092,
        "vars": 0.04845015831115092,
        "for": 0.14535047493345277,
        "alternate": 0.04845015831115092,
        "weights": 0.04845015831115092,
        "keys": 0.04845015831115092,
        "supports": 0.04845015831115092,
        "function": 0.04845015831115092,
        "calling": 0.04845015831115092,
        "outputs": 0.04845015831115092,
        "available": 0.04845015831115092,
        "streaming": 0.04845015831115092,
        "decode": 0.04845015831115092,
        "stop": 0.04845015831115092,
        "tokens": 0.04845015831115092,
        "by": 0.09690031662230184,
        "generation": 0.04845015831115092,
        "stay": 0.09690031662230184,
        "within": 0.04845015831115092,
        "limits": 0.04845015831115092,
        "validates": 0.09690031662230184,
        "ensure": 0.04845015831115092,
        "runners": 0.04845015831115092,
        "loopback": 0.04845015831115092,
        "hosts": 0.04845015831115092,
        "only": 0.09690031662230184,
        "includes": 0.04845015831115092,
        "a": 0.09690031662230184,
        "llamacpprunner": 0.04845015831115092,
        "adapter": 0.04845015831115092,
        "llama": 0.04845015831115092,
        "cpp": 0.04845015831115092,
        "binaries": 0.04845015831115092,
        "enforcing": 0.04845015831115092,
        "filesystem": 0.04845015831115092,
        "backed": 0.04845015831115092,
        "paths": 0.04845015831115092,
        "execution": 0.04845015831115092,
        "7": 0.04845015831115092,
        "post": 0.04845015831115092,
        "processor": 0.04845015831115092,
        "lints": 0.04845015831115092,
        "markdown": 0.04845015831115092,
        "builds": 0.04845015831115092,
        "toc": 0.04845015831115092,
        "adds": 0.04845015831115092,
        "shields": 0.04845015831115092,
        "normalizes": 0.04845015831115092,
        "heading": 0.04845015831115092,
        "hierarchy": 0.04845015831115092,
        "enforces": 0.04845015831115092,
        "guide": 0.04845015831115092,
        "contract": 0.04845015831115092,
        "required": 0.04845015831115092,
        "links": 0.04845015831115092,
        "relative": 0.04845015831115092,
        "absolute": 0.04845015831115092,
        "code": 0.04845015831115092,
        "block": 0.04845015831115092,
        "languages": 0.04845015831115092,
        "line": 0.04845015831115092,
        "length": 0.04845015831115092,
        "computes": 0.04845015831115092,
        "diff": 0.04845015831115092,
        "aware": 0.04845015831115092,
        "updates": 0.04845015831115092,
        "modifies": 0.04845015831115092,
        "impacted": 0.04845015831115092,
        "changes": 0.04845015831115092,
        "persists": 0.04845015831115092,
        "scorecard": 0.09690031662230184,
        "json": 0.04845015831115092
      },
      "text": "start, configuration, build/test, deployment, troubleshooting, FAQ, roadmap, contribution, license, badges. * Dynamically injects repo signals and retrieved context per section. * Produces **LLM-ready structured prompts** (system + user messages) with token budgets and honours `readme.style` presets (`concise` trims list-heavy sections, `comprehensive` keeps full detail). * Injects detected entrypoints and infrastructure patterns into Quick Start guidance (e.g., `uvicorn ...`, `docker compose up`). * Generates Mermaid sequence diagrams highlighting request flow across services when API endpoints are detected. ### 3.6 Local LLM Runner * Pluggable runtime that prefers the Docker Model Runner HTTP endpoint (host `http://localhost:12434/engines/v1`, container `http://model-runner.docker.internal/engines/v1`) with environment overrides and an `ollama` CLI fallback. * Defaults to `ai/smollm2:360M-Q4_K_M` but respects `.docgen.yml` and OpenAI-compatible env vars for alternate weights and API keys. * Supports **function calling style** for structured outputs when available. * Streaming decode with stop tokens; **section-by-section** generation to stay within context limits. * Validates configuration to ensure runners stay local (loopback/`*.internal` hosts only). * Includes a `LlamaCppRunner` adapter for local `llama.cpp` binaries, enforcing filesystem-backed model paths and CLI execution. ### 3.7 Post-Processor * Lints Markdown, builds ToC, adds shields/badges, normalizes heading hierarchy. * Enforces internal style guide and **README contract** (required sections). * Validates links (relative/absolute), code block languages, and line length. * Computes **diff-aware updates**: only modifies sections impacted by changes. * Persists a README scorecard (`.docgen/scorecard.json`)",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#4",
      "vector": {
        "shields": 0.04339630366027462,
        "badges": 0.08679260732054923,
        "normalizes": 0.08679260732054923,
        "heading": 0.04339630366027462,
        "hierarchy": 0.04339630366027462,
        "enforces": 0.04339630366027462,
        "internal": 0.04339630366027462,
        "style": 0.04339630366027462,
        "guide": 0.04339630366027462,
        "and": 0.6075482512438447,
        "readme": 0.13018891098082386,
        "contract": 0.04339630366027462,
        "required": 0.04339630366027462,
        "sections": 0.17358521464109847,
        "validates": 0.04339630366027462,
        "links": 0.04339630366027462,
        "relative": 0.04339630366027462,
        "absolute": 0.04339630366027462,
        "code": 0.04339630366027462,
        "block": 0.04339630366027462,
        "languages": 0.04339630366027462,
        "line": 0.04339630366027462,
        "length": 0.04339630366027462,
        "computes": 0.04339630366027462,
        "diff": 0.04339630366027462,
        "aware": 0.04339630366027462,
        "updates": 0.04339630366027462,
        "only": 0.04339630366027462,
        "modifies": 0.04339630366027462,
        "impacted": 0.04339630366027462,
        "by": 0.04339630366027462,
        "changes": 0.08679260732054923,
        "persists": 0.04339630366027462,
        "a": 0.13018891098082386,
        "scorecard": 0.08679260732054923,
        "docgen": 0.2169815183013731,
        "json": 0.17358521464109847,
        "capturing": 0.08679260732054923,
        "coverage": 0.08679260732054923,
        "quick": 0.04339630366027462,
        "start": 0.04339630366027462,
        "health": 0.04339630366027462,
        "link": 0.08679260732054923,
        "results": 0.04339630366027462,
        "adds": 0.04339630366027462,
        "build": 0.04339630366027462,
        "license": 0.04339630366027462,
        "with": 0.13018891098082386,
        "safe": 0.08679260732054923,
        "defaults": 0.04339630366027462,
        "reports": 0.04339630366027462,
        "warnings": 0.04339630366027462,
        "during": 0.04339630366027462,
        "post": 0.04339630366027462,
        "processing": 0.04339630366027462,
        "3": 0.13018891098082386,
        "8": 0.04339630366027462,
        "validation": 0.17358521464109847,
        "layer": 0.04339630366027462,
        "runs": 0.08679260732054923,
        "after": 0.04339630366027462,
        "section": 0.08679260732054923,
        "rendering": 0.04339630366027462,
        "before": 0.04339630366027462,
        "linting": 0.04339630366027462,
        "publishing": 0.04339630366027462,
        "to": 0.04339630366027462,
        "ensure": 0.04339630366027462,
        "generated": 0.08679260732054923,
        "claims": 0.04339630366027462,
        "are": 0.04339630366027462,
        "grounded": 0.04339630366027462,
        "analyzer": 0.08679260732054923,
        "signals": 0.04339630366027462,
        "metadata": 0.04339630366027462,
        "retrieved": 0.04339630366027462,
        "context": 0.04339630366027462,
        "into": 0.04339630366027462,
        "an": 0.04339630366027462,
        "evidence": 0.13018891098082386,
        "index": 0.04339630366027462,
        "used": 0.04339630366027462,
        "for": 0.13018891098082386,
        "token": 0.04339630366027462,
        "overlap": 0.04339630366027462,
        "checks": 0.04339630366027462,
        "default": 0.04339630366027462,
        "nohallucinationvalidator": 0.04339630366027462,
        "rejects": 0.04339630366027462,
        "sentences": 0.04339630366027462,
        "lacking": 0.04339630366027462,
        "supporting": 0.04339630366027462,
        "replaces": 0.04339630366027462,
        "offending": 0.04339630366027462,
        "fail": 0.04339630366027462,
        "stubs": 0.04339630366027462,
        "raises": 0.04339630366027462,
        "actionable": 0.04339630366027462,
        "errors": 0.04339630366027462,
        "writes": 0.04339630366027462,
        "validator": 0.04339630366027462,
        "status": 0.04339630366027462,
        "issues": 0.04339630366027462,
        "summaries": 0.04339630366027462,
        "auditability": 0.04339630366027462,
        "respects": 0.04339630366027462,
        "yml": 0.04339630366027462,
        "no_hallucination": 0.04339630366027462,
        "toggle": 0.04339630366027462,
        "docgen_validation_no_hallucination": 0.04339630366027462,
        "environment": 0.04339630366027462,
        "override": 0.04339630366027462,
        "cli": 0.04339630366027462,
        "skip": 0.04339630366027462,
        "flag": 0.04339630366027462,
        "one": 0.04339630366027462,
        "off": 0.04339630366027462,
        "bypasses": 0.04339630366027462,
        "9": 0.04339630366027462,
        "doc": 0.04339630366027462,
        "store": 0.04339630366027462,
        "artifacts": 0.08679260732054923,
        "versions": 0.04339630366027462,
        "keeps": 0.04339630366027462,
        "drafts": 0.04339630366027462,
        "logs": 0.04339630366027462,
        "prompts": 0.04339630366027462,
        "inputs": 0.04339630366027462,
        "outputs": 0.04339630366027462,
        "diffs": 0.04339630366027462,
        "under": 0.04339630366027462,
        "per": 0.04339630366027462,
        "repo": 0.04339630366027462,
        "supports": 0.04339630366027462,
        "rollback": 0.04339630366027462,
        "regression": 0.04339630366027462,
        "testing": 0.04339630366027462,
        "via": 0.04339630366027462,
        "golden": 0.04339630366027462,
        "readmes": 0.04339630366027462,
        "stores": 0.04339630366027462,
        "embedding": 0.04339630366027462,
        "cache": 0.08679260732054923,
        "embeddings": 0.04339630366027462,
        "analyzers": 0.04339630366027462,
        "schema": 0.04339630366027462,
        "versioning": 0.04339630366027462,
        "so": 0.04339630366027462,
        "subsequent": 0.04339630366027462,
        "reuse": 0.04339630366027462,
        "work": 0.04339630366027462,
        "when": 0.04339630366027462,
        "file": 0.04339630366027462,
        "hashes": 0.04339630366027462,
        "remain": 0.04339630366027462,
        "unchanged": 0.04339630366027462,
        "10": 0.04339630366027462,
        "git": 0.04339630366027462,
        "publisher": 0.04339630366027462,
        "creates": 0.04339630366027462,
        "branch": 0.04339630366027462,
        "e": 0.04339630366027462,
        "g": 0.04339630366027462,
        "update": 0.04339630366027462,
        "yyyymmdd": 0.04339630366027462,
        "pr": 0.08679260732054923,
        "body": 0.04339630366027462,
        "explains": 0.04339630366027462,
        "detected": 0.04339630366027462,
        "what": 0.04339630366027462,
        "were": 0.04339630366027462,
        "updated": 0.04339630366027462,
        "can": 0.04339630366027462,
        "commit": 0.04339630366027462
      },
      "text": "shields/badges, normalizes heading hierarchy. * Enforces internal style guide and **README contract** (required sections). * Validates links (relative/absolute), code block languages, and line length. * Computes **diff-aware updates**: only modifies sections impacted by changes. * Persists a README scorecard (`.docgen/scorecard.json`) capturing coverage, quick start health, and link results. * Adds build/coverage/license badges with safe defaults and reports link warnings during post-processing. ### 3.8 Validation Layer * Runs after section rendering and before linting/publishing to ensure generated claims are grounded. * Normalizes analyzer signals, section metadata, and retrieved context into an **Evidence Index** used for token overlap checks. * Default `NoHallucinationValidator` rejects sentences lacking supporting evidence, replaces offending sections with fail-safe stubs, and raises actionable errors. * Writes `.docgen/validation.json` capturing validator status, issues, and evidence summaries for auditability. * Respects `.docgen.yml` `validation.no_hallucination` toggle, `DOCGEN_VALIDATION_NO_HALLUCINATION` environment override, and CLI `--skip-validation` flag for one-off bypasses. ### 3.9 Doc Store (Artifacts & Versions) * Keeps generated drafts, logs, prompts, inputs/outputs, and diffs under `.docgen/` per repo. * Supports rollback and regression testing via \u201cgolden\u201d READMEs. * Stores embedding cache (`embeddings.json`) and analyzer artifacts (`analyzers/cache.json`) with schema versioning so subsequent runs reuse work when file hashes remain unchanged. ### 3.10 Git Publisher * Creates a branch (e.g., `docgen/readme-update-YYYYMMDD`) and a PR. * PR body explains detected changes and what sections were updated. * Can commit",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#5",
      "vector": {
        "with": 0.0746913686973271,
        "schema": 0.03734568434866355,
        "versioning": 0.03734568434866355,
        "so": 0.03734568434866355,
        "subsequent": 0.03734568434866355,
        "runs": 0.03734568434866355,
        "reuse": 0.03734568434866355,
        "work": 0.03734568434866355,
        "when": 0.0746913686973271,
        "file": 0.03734568434866355,
        "hashes": 0.03734568434866355,
        "remain": 0.03734568434866355,
        "unchanged": 0.03734568434866355,
        "3": 0.0746913686973271,
        "10": 0.03734568434866355,
        "git": 0.03734568434866355,
        "publisher": 0.03734568434866355,
        "creates": 0.03734568434866355,
        "a": 0.0746913686973271,
        "branch": 0.03734568434866355,
        "e": 0.0746913686973271,
        "g": 0.0746913686973271,
        "docgen": 0.0746913686973271,
        "readme": 0.03734568434866355,
        "update": 0.0746913686973271,
        "yyyymmdd": 0.03734568434866355,
        "and": 0.18672842174331777,
        "pr": 0.0746913686973271,
        "body": 0.03734568434866355,
        "explains": 0.03734568434866355,
        "detected": 0.03734568434866355,
        "changes": 0.03734568434866355,
        "what": 0.03734568434866355,
        "sections": 0.03734568434866355,
        "were": 0.03734568434866355,
        "updated": 0.03734568434866355,
        "can": 0.03734568434866355,
        "commit": 0.03734568434866355,
        "directly": 0.03734568434866355,
        "configurable": 0.03734568434866355,
        "on": 0.03734568434866355,
        "init": 0.0746913686973271,
        "for": 0.1493827373946542,
        "empty": 0.03734568434866355,
        "repos": 0.03734568434866355,
        "applies": 0.03734568434866355,
        "labels": 0.03734568434866355,
        "docs": 0.0746913686973271,
        "auto": 0.03734568434866355,
        "updates": 0.03734568434866355,
        "existing": 0.03734568434866355,
        "prs": 0.03734568434866355,
        "configured": 0.03734568434866355,
        "11": 0.03734568434866355,
        "service": 0.1493827373946542,
        "mode": 0.03734568434866355,
        "fastapi": 0.0746913686973271,
        "app": 0.03734568434866355,
        "exposes": 0.03734568434866355,
        "post": 0.03734568434866355,
        "endpoints": 0.03734568434866355,
        "plus": 0.03734568434866355,
        "health": 0.03734568434866355,
        "readiness": 0.03734568434866355,
        "reuses": 0.03734568434866355,
        "the": 0.11203705304599065,
        "orchestrator": 0.03734568434866355,
        "dependency": 0.03734568434866355,
        "executes": 0.03734568434866355,
        "operations": 0.03734568434866355,
        "in": 0.03734568434866355,
        "thread": 0.03734568434866355,
        "pools": 0.03734568434866355,
        "to": 0.03734568434866355,
        "keep": 0.03734568434866355,
        "event": 0.03734568434866355,
        "loop": 0.03734568434866355,
        "responsive": 0.03734568434866355,
        "cli": 0.0746913686973271,
        "host": 0.03734568434866355,
        "0": 0.1493827373946542,
        "port": 0.03734568434866355,
        "8000": 0.03734568434866355,
        "boots": 0.03734568434866355,
        "authentication": 0.03734568434866355,
        "hooks": 0.03734568434866355,
        "ready": 0.03734568434866355,
        "future": 0.03734568434866355,
        "hardening": 0.03734568434866355,
        "error": 0.03734568434866355,
        "handlers": 0.03734568434866355,
        "surface": 0.03734568434866355,
        "actionable": 0.03734568434866355,
        "json": 0.03734568434866355,
        "detail": 0.0746913686973271,
        "field": 0.03734568434866355,
        "common": 0.03734568434866355,
        "runtime": 0.03734568434866355,
        "issues": 0.03734568434866355,
        "4": 0.03734568434866355,
        "data": 0.03734568434866355,
        "model": 0.03734568434866355,
        "python": 0.0746913686973271,
        "pydantic": 0.03734568434866355,
        "dataclasses": 0.0746913686973271,
        "from": 0.0746913686973271,
        "import": 0.0746913686973271,
        "dataclass": 0.2614197904406449,
        "typing": 0.03734568434866355,
        "list": 0.1493827373946542,
        "dict": 0.1493827373946542,
        "optional": 0.0746913686973271,
        "class": 0.2240741060919813,
        "filemeta": 0.0746913686973271,
        "path": 0.03734568434866355,
        "str": 0.6348766339272804,
        "size": 0.03734568434866355,
        "int": 0.03734568434866355,
        "language": 0.03734568434866355,
        "role": 0.03734568434866355,
        "src": 0.03734568434866355,
        "test": 0.0746913686973271,
        "config": 0.03734568434866355,
        "build": 0.03734568434866355,
        "script": 0.03734568434866355,
        "infra": 0.03734568434866355,
        "other": 0.03734568434866355,
        "hash": 0.03734568434866355,
        "repomanifest": 0.0746913686973271,
        "root": 0.03734568434866355,
        "files": 0.03734568434866355,
        "detectors": 0.03734568434866355,
        "build_system": 0.03734568434866355,
        "maven": 0.03734568434866355,
        "framework": 0.0746913686973271,
        "spring": 0.03734568434866355,
        "boot": 0.03734568434866355,
        "dependency_files": 0.03734568434866355,
        "pom": 0.03734568434866355,
        "xml": 0.03734568434866355,
        "requirements": 0.03734568434866355,
        "txt": 0.03734568434866355,
        "signal": 0.0746913686973271,
        "kind": 0.03734568434866355,
        "db": 0.03734568434866355,
        "queue": 0.03734568434866355,
        "dep": 0.03734568434866355,
        "entrypoint": 0.03734568434866355,
        "name": 0.03734568434866355,
        "analysisresult": 0.03734568434866355,
        "manifest": 0.03734568434866355,
        "signals": 0.03734568434866355,
        "embedding_index_path": 0.03734568434866355,
        "sectionspec": 0.03734568434866355,
        "key": 0.03734568434866355,
        "intro": 0.03734568434866355,
        "features": 0.03734568434866355,
        "arch": 0.03734568434866355,
        "quickstart": 0.03734568434866355,
        "required": 0.03734568434866355,
        "bool": 0.03734568434866355,
        "sources": 0.03734568434866355,
        "preferred": 0.03734568434866355,
        "retrieval": 0.03734568434866355,
        "tags": 0.03734568434866355,
        "template_name": 0.03734568434866355,
        "readmedraft": 0.03734568434866355
      },
      "text": "with schema versioning so subsequent runs reuse work when file hashes remain unchanged. ### 3.10 Git Publisher * Creates a branch (e.g., `docgen/readme-update-YYYYMMDD`) and a PR. * PR body explains detected changes and what sections were updated. * Can commit directly (configurable) on init for empty repos. * Applies labels (e.g., `docs:auto`) and updates existing PRs when configured. ### 3.11 Service Mode (FastAPI) * FastAPI app exposes `/init` and `/update` POST endpoints plus `/health` for readiness. * Reuses the orchestrator dependency and executes operations in thread pools to keep the event loop responsive. * CLI `docgen service --host 0.0.0.0 --port 8000` boots the service with authentication hooks ready for future hardening. * Error handlers surface actionable JSON (`detail` field) for common runtime issues. --- ## 4) Data Model (Python `pydantic`/`dataclasses`) ```python from dataclasses import dataclass from typing import List, Dict, Optional @dataclass class FileMeta: path: str size: int language: Optional[str] role: str # src|test|docs|config|build|script|infra|other hash: str @dataclass class RepoManifest: root: str files: List[FileMeta] detectors: Dict[str, str] # {\"build_system\": \"maven\", \"framework\":\"spring-boot\", ...} dependency_files: Dict[str, str] # {\"pom.xml\": \"...\", \"requirements.txt\": \"...\"} @dataclass class Signal: kind: str # \"framework\",\"service\",\"cli\",\"db\",\"queue\",\"dep\",\"entrypoint\",\"test\" name: str detail: Dict[str, str] @dataclass class AnalysisResult: manifest: RepoManifest signals: List[Signal] embedding_index_path: str @dataclass class SectionSpec: key: str # \"intro\",\"features\",\"arch\",\"quickstart\",... required: bool sources: List[str] # preferred retrieval tags template_name: str @dataclass class ReadmeDraft:",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#6",
      "vector": {
        "class": 0.22011272658140596,
        "signal": 0.08804509063256238,
        "kind": 0.04402254531628119,
        "str": 0.6603381797442178,
        "framework": 0.04402254531628119,
        "service": 0.04402254531628119,
        "cli": 0.08804509063256238,
        "db": 0.04402254531628119,
        "queue": 0.04402254531628119,
        "dep": 0.04402254531628119,
        "entrypoint": 0.04402254531628119,
        "test": 0.04402254531628119,
        "name": 0.04402254531628119,
        "detail": 0.04402254531628119,
        "dict": 0.13206763594884358,
        "dataclass": 0.17609018126512477,
        "analysisresult": 0.04402254531628119,
        "manifest": 0.04402254531628119,
        "repomanifest": 0.04402254531628119,
        "signals": 0.04402254531628119,
        "list": 0.13206763594884358,
        "embedding_index_path": 0.04402254531628119,
        "sectionspec": 0.04402254531628119,
        "key": 0.04402254531628119,
        "intro": 0.08804509063256238,
        "features": 0.08804509063256238,
        "arch": 0.04402254531628119,
        "quickstart": 0.08804509063256238,
        "required": 0.04402254531628119,
        "bool": 0.04402254531628119,
        "sources": 0.04402254531628119,
        "preferred": 0.04402254531628119,
        "retrieval": 0.04402254531628119,
        "tags": 0.04402254531628119,
        "template_name": 0.04402254531628119,
        "readmedraft": 0.04402254531628119,
        "sections": 0.04402254531628119,
        "full_markdown": 0.04402254531628119,
        "updateplan": 0.04402254531628119,
        "strategy": 0.04402254531628119,
        "full": 0.04402254531628119,
        "patch": 0.04402254531628119,
        "changed_sections": 0.04402254531628119,
        "reasons": 0.04402254531628119,
        "section": 0.04402254531628119,
        "why": 0.04402254531628119,
        "5": 0.04402254531628119,
        "configuration": 0.08804509063256238,
        "docgen": 0.17609018126512477,
        "yml": 0.04402254531628119,
        "at": 0.04402254531628119,
        "repo": 0.04402254531628119,
        "root": 0.04402254531628119,
        "yaml": 0.04402254531628119,
        "llm": 0.04402254531628119,
        "runner": 0.04402254531628119,
        "ollama": 0.08804509063256238,
        "or": 0.13206763594884358,
        "llama": 0.04402254531628119,
        "cpp": 0.04402254531628119,
        "executable": 0.04402254531628119,
        "optional": 0.08804509063256238,
        "override": 0.04402254531628119,
        "for": 0.04402254531628119,
        "binaries": 0.04402254531628119,
        "model": 0.04402254531628119,
        "llama3": 0.04402254531628119,
        "8b": 0.04402254531628119,
        "instruct": 0.04402254531628119,
        "example": 0.04402254531628119,
        "local": 0.04402254531628119,
        "only": 0.08804509063256238,
        "max_tokens": 0.04402254531628119,
        "2048": 0.04402254531628119,
        "temperature": 0.04402254531628119,
        "0": 0.08804509063256238,
        "2": 0.04402254531628119,
        "readme": 0.13206763594884358,
        "style": 0.04402254531628119,
        "concise": 0.04402254531628119,
        "comprehensive": 0.04402254531628119,
        "template_pack": 0.04402254531628119,
        "enterprise": 0.04402254531628119,
        "bundle": 0.04402254531628119,
        "shipped": 0.04402254531628119,
        "with": 0.04402254531628119,
        "required_sections": 0.04402254531628119,
        "architecture": 0.04402254531628119,
        "build_and_test": 0.04402254531628119,
        "deployment": 0.04402254531628119,
        "troubleshooting": 0.04402254531628119,
        "faq": 0.04402254531628119,
        "license": 0.04402254531628119,
        "validation": 0.04402254531628119,
        "no_hallucination": 0.04402254531628119,
        "true": 0.08804509063256238,
        "set": 0.04402254531628119,
        "to": 0.08804509063256238,
        "false": 0.04402254531628119,
        "use": 0.04402254531628119,
        "docgen_validation_no_hallucination": 0.04402254531628119,
        "disable": 0.04402254531628119,
        "publish": 0.04402254531628119,
        "mode": 0.04402254531628119,
        "pr": 0.13206763594884358,
        "commit": 0.04402254531628119,
        "dry": 0.04402254531628119,
        "run": 0.04402254531628119,
        "branch_prefix": 0.04402254531628119,
        "labels": 0.04402254531628119,
        "docs": 0.04402254531628119,
        "auto": 0.04402254531628119,
        "update_existing": 0.04402254531628119,
        "refresh": 0.04402254531628119,
        "an": 0.04402254531628119,
        "existing": 0.04402254531628119,
        "instead": 0.04402254531628119,
        "of": 0.04402254531628119,
        "opening": 0.04402254531628119,
        "a": 0.04402254531628119,
        "new": 0.04402254531628119,
        "one": 0.04402254531628119,
        "analyzers": 0.04402254531628119,
        "enabled": 0.04402254531628119,
        "language": 0.04402254531628119,
        "build": 0.08804509063256238,
        "dependencies": 0.04402254531628119,
        "patterns": 0.04402254531628119,
        "exclude_paths": 0.04402254531628119,
        "git": 0.04402254531628119,
        "node_modules": 0.04402254531628119,
        "dist": 0.04402254531628119,
        "ci": 0.04402254531628119,
        "update": 0.04402254531628119,
        "if": 0.08804509063256238,
        "these": 0.04402254531628119,
        "paths": 0.04402254531628119,
        "change": 0.04402254531628119,
        "watched_globs": 0.04402254531628119,
        "src": 0.04402254531628119,
        "app": 0.04402254531628119,
        "cmd": 0.04402254531628119,
        "pom": 0.04402254531628119,
        "xml": 0.04402254531628119,
        "gradle": 0.04402254531628119,
        "package": 0.04402254531628119,
        "json": 0.04402254531628119,
        "requirements": 0.04402254531628119,
        "txt": 0.04402254531628119,
        "pyproject": 0.04402254531628119,
        "toml": 0.04402254531628119,
        "dockerfile": 0.04402254531628119,
        "no": 0.04402254531628119,
        "templates_dir": 0.04402254531628119,
        "is": 0.04402254531628119,
        "provided": 0.04402254531628119
      },
      "text": "class Signal: kind: str # \"framework\",\"service\",\"cli\",\"db\",\"queue\",\"dep\",\"entrypoint\",\"test\" name: str detail: Dict[str, str] @dataclass class AnalysisResult: manifest: RepoManifest signals: List[Signal] embedding_index_path: str @dataclass class SectionSpec: key: str # \"intro\",\"features\",\"arch\",\"quickstart\",... required: bool sources: List[str] # preferred retrieval tags template_name: str @dataclass class ReadmeDraft: sections: Dict[str, str] full_markdown: str @dataclass class UpdatePlan: strategy: str # \"full\"|\"patch\" changed_sections: List[str] reasons: Dict[str, str] # section->why ``` --- ## 5) Configuration (`.docgen.yml` at repo root) ```yaml llm: runner: \"ollama\" # or \"llama.cpp\" executable: \"ollama\" # optional override for CLI binaries model: \"llama3:8b-instruct\" # example; local only max_tokens: 2048 temperature: 0.2 readme: style: \"concise\" # or \"comprehensive\" template_pack: \"enterprise\" # optional bundle shipped with docgen required_sections: - intro - features - architecture - quickstart - configuration - build_and_test - deployment - troubleshooting - faq - license validation: no_hallucination: true # set to false or use DOCGEN_VALIDATION_NO_HALLUCINATION=0 to disable publish: mode: \"pr\" # \"commit\" | \"pr\" | \"dry-run\" branch_prefix: \"docgen/\" labels: - \"docs:auto\" update_existing: true # refresh an existing PR instead of opening a new one analyzers: enabled: - language - build - dependencies - patterns exclude_paths: - \".git/\" - \"node_modules/\" - \"dist/\" ci: # Only update README if these paths change watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" - \"requirements.txt\" - \"pyproject.toml\" - \"Dockerfile\" ``` > If no `readme.templates_dir` is provided, docgen",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#7",
      "vector": {
        "node_modules": 0.05006261743217589,
        "dist": 0.05006261743217589,
        "ci": 0.15018785229652767,
        "only": 0.10012523486435178,
        "update": 0.15018785229652767,
        "readme": 0.25031308716087947,
        "if": 0.15018785229652767,
        "these": 0.05006261743217589,
        "paths": 0.05006261743217589,
        "change": 0.05006261743217589,
        "watched_globs": 0.10012523486435178,
        "src": 0.10012523486435178,
        "app": 0.05006261743217589,
        "cmd": 0.05006261743217589,
        "pom": 0.10012523486435178,
        "xml": 0.10012523486435178,
        "build": 0.25031308716087947,
        "gradle": 0.10012523486435178,
        "package": 0.05006261743217589,
        "json": 0.05006261743217589,
        "requirements": 0.05006261743217589,
        "txt": 0.05006261743217589,
        "pyproject": 0.05006261743217589,
        "toml": 0.05006261743217589,
        "dockerfile": 0.10012523486435178,
        "no": 0.10012523486435178,
        "templates_dir": 0.05006261743217589,
        "is": 0.05006261743217589,
        "provided": 0.05006261743217589,
        "docgen": 0.25031308716087947,
        "automatically": 0.05006261743217589,
        "picks": 0.05006261743217589,
        "up": 0.05006261743217589,
        "docs": 0.05006261743217589,
        "templates": 0.10012523486435178,
        "bundles": 0.05006261743217589,
        "in": 0.10012523486435178,
        "the": 0.05006261743217589,
        "repository": 0.05006261743217589,
        "root": 0.05006261743217589,
        "and": 0.10012523486435178,
        "supports": 0.05006261743217589,
        "built": 0.05006261743217589,
        "template": 0.05006261743217589,
        "packs": 0.05006261743217589,
        "via": 0.10012523486435178,
        "template_pack": 0.05006261743217589,
        "6": 0.25031308716087947,
        "workflows": 0.05006261743217589,
        "1": 0.15018785229652767,
        "initialization": 0.05006261743217589,
        "repo": 0.05006261743217589,
        "without": 0.10012523486435178,
        "scan": 0.05006261743217589,
        "analyze": 0.05006261743217589,
        "manifest": 0.05006261743217589,
        "signals": 0.05006261743217589,
        "embeddings": 0.05006261743217589,
        "2": 0.15018785229652767,
        "prompt": 0.05006261743217589,
        "with": 0.10012523486435178,
        "default": 0.05006261743217589,
        "include": 0.05006261743217589,
        "getting": 0.05006261743217589,
        "started": 0.05006261743217589,
        "suggestions": 0.05006261743217589,
        "3": 0.15018785229652767,
        "generate": 0.10012523486435178,
        "sections": 0.20025046972870356,
        "sequentially": 0.05006261743217589,
        "streaming": 0.05006261743217589,
        "4": 0.10012523486435178,
        "post": 0.10012523486435178,
        "process": 0.10012523486435178,
        "toc": 0.05006261743217589,
        "badges": 0.05006261743217589,
        "status": 0.05006261743217589,
        "placeholder": 0.05006261743217589,
        "lint": 0.05006261743217589,
        "5": 0.10012523486435178,
        "publish": 0.05006261743217589,
        "direct": 0.05006261743217589,
        "commit": 0.10012523486435178,
        "md": 0.05006261743217589,
        "artifacts": 0.05006261743217589,
        "on": 0.05006261743217589,
        "pr": 0.10012523486435178,
        "detect": 0.05006261743217589,
        "changes": 0.05006261743217589,
        "git": 0.05006261743217589,
        "diff": 0.05006261743217589,
        "map": 0.05006261743217589,
        "files": 0.05006261743217589,
        "to": 0.15018785229652767,
        "using": 0.05006261743217589,
        "a": 0.05006261743217589,
        "rules": 0.05006261743217589,
        "matrix": 0.05006261743217589,
        "test": 0.05006261743217589,
        "quick": 0.05006261743217589,
        "start": 0.05006261743217589,
        "k8s": 0.05006261743217589,
        "deployment": 0.05006261743217589,
        "entrypoints": 0.05006261743217589,
        "architecture": 0.05006261743217589,
        "features": 0.05006261743217589,
        "decide": 0.05006261743217589,
        "updateplan": 0.05006261743217589,
        "patch": 0.05006261743217589,
        "impacted": 0.05006261743217589,
        "regenerate": 0.15018785229652767,
        "those": 0.05006261743217589,
        "skip": 0.05006261743217589,
        "changed": 0.05006261743217589,
        "file": 0.05006261743217589,
        "matches": 0.05006261743217589,
        "yml": 0.05006261743217589,
        "allows": 0.05006261743217589,
        "avoid": 0.05006261743217589,
        "unnecessary": 0.05006261743217589,
        "runs": 0.05006261743217589,
        "rag": 0.05006261743217589,
        "retrieval": 0.05006261743217589,
        "fetch": 0.05006261743217589,
        "top": 0.05006261743217589,
        "k": 0.05006261743217589,
        "chunks": 0.05006261743217589,
        "relevant": 0.05006261743217589,
        "each": 0.05006261743217589,
        "section": 0.10012523486435178,
        "open": 0.05006261743217589,
        "summary": 0.05006261743217589,
        "of": 0.05006261743217589,
        "deltas": 0.05006261743217589,
        "dry": 0.10012523486435178,
        "run": 0.10012523486435178,
        "support": 0.05006261743217589,
        "computes": 0.05006261743217589,
        "diffs": 0.05006261743217589,
        "scorecards": 0.05006261743217589,
        "writing": 0.05006261743217589,
        "or": 0.10012523486435178,
        "publishing": 0.05006261743217589,
        "manual": 0.05006261743217589,
        "full": 0.05006261743217589,
        "intro": 0.05006261743217589,
        "arch": 0.05006261743217589,
        "7": 0.05006261743217589,
        "contract": 0.05006261743217589
      },
      "text": "- \"node_modules/\" - \"dist/\" ci: # Only update README if these paths change watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" - \"requirements.txt\" - \"pyproject.toml\" - \"Dockerfile\" ``` > If no `readme.templates_dir` is provided, docgen automatically picks up `docs/templates/` bundles in the repository root and supports built-in template packs via `readme.template_pack`. --- ## 6) Workflows ### 6.1 Initialization (Repo without README) 1. **Scan & Analyze** \u2192 Manifest + Signals + Embeddings. 2. **Prompt Build** with default templates, include \u201cgetting started\u201d suggestions. 3. **Generate Sections** sequentially (streaming). 4. **Post-process** \u2192 ToC, badges (build status placeholder), lint. 5. **Publish**: direct commit `README.md` + `.docgen/` artifacts. ### 6.2 Update on Commit/PR 1. **Detect changes** via Git diff; map files to sections using a rules matrix: * `pom.xml`/`build.gradle` \u2192 *Build & Test*, *Quick Start*. * `Dockerfile`/`k8s` \u2192 *Deployment*. * `src/**` entrypoints \u2192 *Architecture*, *Features*. 2. **Decide UpdatePlan**: patch impacted sections; regenerate only those. 3. **Skip** if no changed file matches `.docgen.yml` `ci.watched_globs` (allows CI to avoid unnecessary runs). 4. **RAG retrieval**: fetch top-k chunks relevant to each section. 5. **Generate** \u2192 **Post-process** \u2192 **Open PR** with summary of deltas. 6. Dry-run support: `docgen update --dry-run` computes diffs and scorecards without writing or publishing. ### 6.3 Regenerate (Manual) * `docgen regenerate --full` or `--sections intro,arch`. --- ## 7) Section Contract",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#8",
      "vector": {
        "generate": 0.05923488777590923,
        "post": 0.11846977555181847,
        "process": 0.05923488777590923,
        "open": 0.05923488777590923,
        "pr": 0.05923488777590923,
        "with": 0.05923488777590923,
        "summary": 0.05923488777590923,
        "of": 0.05923488777590923,
        "deltas": 0.05923488777590923,
        "6": 0.11846977555181847,
        "dry": 0.11846977555181847,
        "run": 0.11846977555181847,
        "support": 0.11846977555181847,
        "docgen": 0.11846977555181847,
        "update": 0.05923488777590923,
        "computes": 0.05923488777590923,
        "diffs": 0.05923488777590923,
        "and": 0.11846977555181847,
        "scorecards": 0.05923488777590923,
        "without": 0.05923488777590923,
        "writing": 0.05923488777590923,
        "or": 0.1777046633277277,
        "publishing": 0.05923488777590923,
        "3": 0.05923488777590923,
        "regenerate": 0.11846977555181847,
        "manual": 0.05923488777590923,
        "full": 0.05923488777590923,
        "sections": 0.05923488777590923,
        "intro": 0.11846977555181847,
        "arch": 0.05923488777590923,
        "7": 0.05923488777590923,
        "section": 0.23693955110363693,
        "contract": 0.05923488777590923,
        "readme": 0.05923488777590923,
        "what": 0.05923488777590923,
        "why": 0.05923488777590923,
        "who": 0.05923488777590923,
        "it": 0.05923488777590923,
        "s": 0.05923488777590923,
        "for": 0.05923488777590923,
        "key": 0.05923488777590923,
        "features": 0.05923488777590923,
        "bullets": 0.05923488777590923,
        "grounded": 0.05923488777590923,
        "in": 0.05923488777590923,
        "real": 0.05923488777590923,
        "repo": 0.11846977555181847,
        "signals": 0.11846977555181847,
        "architecture": 0.05923488777590923,
        "overview": 0.05923488777590923,
        "diagram": 0.05923488777590923,
        "ascii": 0.05923488777590923,
        "components": 0.05923488777590923,
        "quick": 0.05923488777590923,
        "start": 0.05923488777590923,
        "minimal": 0.05923488777590923,
        "commands": 0.23693955110363693,
        "per": 0.11846977555181847,
        "build": 0.11846977555181847,
        "system": 0.11846977555181847,
        "configuration": 0.05923488777590923,
        "env": 0.05923488777590923,
        "vars": 0.05923488777590923,
        "files": 0.05923488777590923,
        "examples": 0.05923488777590923,
        "test": 0.05923488777590923,
        "coverage": 0.05923488777590923,
        "hint": 0.05923488777590923,
        "deployment": 0.05923488777590923,
        "container": 0.05923488777590923,
        "k8s": 0.05923488777590923,
        "instructions": 0.05923488777590923,
        "if": 0.1777046633277277,
        "detected": 0.1777046633277277,
        "troubleshooting": 0.05923488777590923,
        "common": 0.05923488777590923,
        "failures": 0.05923488777590923,
        "faq": 0.05923488777590923,
        "5": 0.05923488777590923,
        "10": 0.05923488777590923,
        "concise": 0.05923488777590923,
        "q": 0.05923488777590923,
        "a": 0.11846977555181847,
        "contributing": 0.11846977555181847,
        "md": 0.05923488777590923,
        "absent": 0.05923488777590923,
        "license": 0.05923488777590923,
        "templated": 0.05923488777590923,
        "each": 0.05923488777590923,
        "must": 0.05923488777590923,
        "be": 0.11846977555181847,
        "independently": 0.05923488777590923,
        "regenerable": 0.05923488777590923,
        "self": 0.05923488777590923,
        "contained": 0.05923488777590923,
        "8": 0.05923488777590923,
        "prompting": 0.05923488777590923,
        "strategy": 0.05923488777590923,
        "local": 0.05923488777590923,
        "llm": 0.05923488777590923,
        "message": 0.11846977555181847,
        "fixed": 0.05923488777590923,
        "guardrails": 0.05923488777590923,
        "you": 0.05923488777590923,
        "are": 0.05923488777590923,
        "senior": 0.05923488777590923,
        "dev": 0.05923488777590923,
        "doc": 0.05923488777590923,
        "writer": 0.05923488777590923,
        "precise": 0.05923488777590923,
        "cite": 0.05923488777590923,
        "facts": 0.05923488777590923,
        "only": 0.05923488777590923,
        "no": 0.05923488777590923,
        "speculation": 0.05923488777590923,
        "never": 0.05923488777590923,
        "invent": 0.05923488777590923,
        "prefer": 0.05923488777590923,
        "by": 0.05923488777590923,
        "analyzers": 0.05923488777590923,
        "user": 0.05923488777590923,
        "objective": 0.05923488777590923,
        "constraints": 0.05923488777590923,
        "tone": 0.05923488777590923,
        "length": 0.05923488777590923,
        "inject": 0.05923488777590923,
        "top": 0.05923488777590923,
        "k": 0.05923488777590923,
        "chunks": 0.05923488777590923,
        "rag": 0.05923488777590923,
        "provide": 0.05923488777590923,
        "style": 0.05923488777590923,
        "tokens": 0.05923488777590923,
        "headings": 0.05923488777590923,
        "code": 0.05923488777590923,
        "blocks": 0.05923488777590923,
        "tables": 0.05923488777590923,
        "filters": 0.05923488777590923,
        "refuse": 0.05923488777590923,
        "insufficient": 0.05923488777590923,
        "evidence": 0.05923488777590923,
        "fall": 0.05923488777590923,
        "back": 0.05923488777590923,
        "to": 0.05923488777590923,
        "template": 0.05923488777590923,
        "stubs": 0.05923488777590923,
        "9": 0.05923488777590923,
        "language": 0.05923488777590923,
        "project": 0.05923488777590923,
        "poc": 0.11846977555181847,
        "targets": 0.05923488777590923,
        "tier": 0.11846977555181847,
        "1": 0.05923488777590923,
        "python": 0.05923488777590923,
        "poetry": 0.05923488777590923,
        "setuptools": 0.05923488777590923,
        "java": 0.05923488777590923,
        "maven": 0.05923488777590923,
        "gradle": 0.05923488777590923,
        "spring": 0.05923488777590923,
        "boot": 0.05923488777590923,
        "node": 0.05923488777590923,
        "js": 0.05923488777590923,
        "npm": 0.05923488777590923,
        "pnpm": 0.05923488777590923,
        "express": 0.05923488777590923,
        "next": 0.05923488777590923,
        "2": 0.05923488777590923,
        "soon": 0.05923488777590923,
        "go": 0.05923488777590923,
        "modules": 0.05923488777590923
      },
      "text": "**Generate** \u2192 **Post-process** \u2192 **Open PR** with summary of deltas. 6. Dry-run support: `docgen update --dry-run` computes diffs and scorecards without writing or publishing. ### 6.3 Regenerate (Manual) * `docgen regenerate --full` or `--sections intro,arch`. --- ## 7) Section Contract (README) * **Intro**: what, why, who it\u2019s for * **Key Features**: bullets grounded in real repo signals * **Architecture**: overview diagram (ASCII) + components * **Quick Start**: minimal commands (per build system) * **Configuration**: env vars, files, examples * **Build & Test**: commands, coverage hint * **Deployment**: container/K8s instructions if detected * **Troubleshooting**: common failures * **FAQ**: 5\u201310 concise Q\\&A * **Contributing** (if `CONTRIBUTING.md` absent) * **License** (detected or templated) > Each section must be independently regenerable and self-contained. --- ## 8) Prompting Strategy (Local LLM) * **System message (fixed guardrails)**: * \u201cYou are a senior dev doc writer. Be precise. Cite repo facts only. No speculation.\u201d * \u201cNever invent commands. Prefer commands detected by analyzers.\u201d * **User message per section**: * Section objective + constraints (tone, length). * Inject **Signals** + **Top-k chunks** (RAG). * Provide **style tokens** (headings, code blocks, tables). * **Post-filters**: refuse if insufficient evidence; fall back to template stubs. --- ## 9) Language & Project Support (POC targets) * **Tier-1 (POC)**: Python (Poetry/Setuptools), Java (Maven/Gradle, Spring Boot), Node.js (npm/pnpm, Express/Next). * **Tier-2 (soon)**: Go (modules),",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#9",
      "vector": {
        "code": 0.0636929755298482,
        "blocks": 0.0318464877649241,
        "tables": 0.0318464877649241,
        "post": 0.0636929755298482,
        "filters": 0.0318464877649241,
        "refuse": 0.0318464877649241,
        "if": 0.0318464877649241,
        "insufficient": 0.0318464877649241,
        "evidence": 0.0318464877649241,
        "fall": 0.0318464877649241,
        "back": 0.0318464877649241,
        "to": 0.0318464877649241,
        "template": 0.0318464877649241,
        "stubs": 0.0636929755298482,
        "9": 0.0318464877649241,
        "language": 0.0636929755298482,
        "project": 0.0318464877649241,
        "support": 0.0318464877649241,
        "poc": 0.0636929755298482,
        "targets": 0.0318464877649241,
        "tier": 0.0636929755298482,
        "1": 0.0318464877649241,
        "python": 0.0955394632947723,
        "poetry": 0.0318464877649241,
        "setuptools": 0.0318464877649241,
        "java": 0.0318464877649241,
        "maven": 0.0318464877649241,
        "gradle": 0.0318464877649241,
        "spring": 0.0636929755298482,
        "boot": 0.0318464877649241,
        "node": 0.0318464877649241,
        "js": 0.0318464877649241,
        "npm": 0.0318464877649241,
        "pnpm": 0.0318464877649241,
        "express": 0.0318464877649241,
        "next": 0.0318464877649241,
        "2": 0.0318464877649241,
        "soon": 0.0318464877649241,
        "go": 0.0318464877649241,
        "modules": 0.0318464877649241,
        "rust": 0.0318464877649241,
        "cargo": 0.0318464877649241,
        "ruby": 0.0318464877649241,
        "bundler": 0.0318464877649241,
        "php": 0.0318464877649241,
        "composer": 0.0318464877649241,
        "detection": 0.0318464877649241,
        "via": 0.0318464877649241,
        "file": 0.0318464877649241,
        "heuristics": 0.0318464877649241,
        "optional": 0.0636929755298482,
        "tree": 0.0318464877649241,
        "sitter": 0.0318464877649241,
        "for": 0.0636929755298482,
        "function": 0.0318464877649241,
        "class": 0.0636929755298482,
        "extraction": 0.0318464877649241,
        "pluggable": 0.0318464877649241,
        "entry": 0.0318464877649241,
        "points": 0.0318464877649241,
        "main": 0.0636929755298482,
        "springbootapplication": 0.0318464877649241,
        "fastapi": 0.0636929755298482,
        "app": 0.1273859510596964,
        "bin": 0.0318464877649241,
        "cmd": 0.0318464877649241,
        "10": 0.0318464877649241,
        "interfaces": 0.0318464877649241,
        "skeleton": 0.0318464877649241,
        "docgen": 0.0318464877649241,
        "__init__": 0.0318464877649241,
        "py": 0.7961621941231025,
        "cli": 0.0955394632947723,
        "click": 0.0318464877649241,
        "typer": 0.0636929755298482,
        "failsafe": 0.0318464877649241,
        "fail": 0.0318464877649241,
        "safe": 0.0318464877649241,
        "readme": 0.0318464877649241,
        "logging": 0.0636929755298482,
        "configuration": 0.0318464877649241,
        "helpers": 0.0318464877649241,
        "orchestrator": 0.0318464877649241,
        "repo_scanner": 0.0318464877649241,
        "analyzers": 0.0318464877649241,
        "base": 0.0318464877649241,
        "analyzer": 0.0955394632947723,
        "abc": 0.1592324388246205,
        "build": 0.0318464877649241,
        "dependencies": 0.0318464877649241,
        "entrypoints": 0.0318464877649241,
        "patterns": 0.0318464877649241,
        "rag": 0.0318464877649241,
        "embedder": 0.0318464877649241,
        "local": 0.0318464877649241,
        "embedding": 0.0318464877649241,
        "model": 0.0318464877649241,
        "store": 0.0318464877649241,
        "prompting": 0.0318464877649241,
        "builder": 0.0318464877649241,
        "jinja2": 0.0318464877649241,
        "templates": 0.0636929755298482,
        "token": 0.0318464877649241,
        "mgmt": 0.0318464877649241,
        "constants": 0.0318464877649241,
        "j2": 0.0318464877649241,
        "per": 0.0318464877649241,
        "section": 0.0318464877649241,
        "llm": 0.0318464877649241,
        "runner": 0.0318464877649241,
        "adapter": 0.0318464877649241,
        "ollama": 0.0318464877649241,
        "llama": 0.0318464877649241,
        "cpp": 0.0318464877649241,
        "postproc": 0.0318464877649241,
        "lint": 0.0318464877649241,
        "links": 0.0318464877649241,
        "markers": 0.0318464877649241,
        "toc": 0.0318464877649241,
        "git": 0.0318464877649241,
        "diff": 0.0318464877649241,
        "publisher": 0.0318464877649241,
        "config": 0.0318464877649241,
        "models": 0.0636929755298482,
        "from": 0.0636929755298482,
        "import": 0.0636929755298482,
        "abstractmethod": 0.0955394632947723,
        "repomanifest": 0.0955394632947723,
        "signal": 0.0636929755298482,
        "def": 0.1592324388246205,
        "supports": 0.0318464877649241,
        "self": 0.0636929755298482,
        "manifest": 0.0636929755298482,
        "bool": 0.0955394632947723,
        "analyze": 0.0318464877649241,
        "list": 0.0318464877649241,
        "command": 0.0955394632947723,
        "init": 0.0318464877649241,
        "path": 0.0636929755298482,
        "str": 0.1592324388246205,
        "publish": 0.0318464877649241,
        "true": 0.0318464877649241,
        "update": 0.0318464877649241,
        "event": 0.0318464877649241,
        "commit": 0.0318464877649241,
        "diff_base": 0.0318464877649241,
        "origin": 0.0318464877649241,
        "regenerate": 0.0318464877649241,
        "sections": 0.0318464877649241,
        "full": 0.0318464877649241,
        "false": 0.0318464877649241,
        "service": 0.0318464877649241,
        "mode": 0.0318464877649241
      },
      "text": "code blocks, tables). * **Post-filters**: refuse if insufficient evidence; fall back to template stubs. --- ## 9) Language & Project Support (POC targets) * **Tier-1 (POC)**: Python (Poetry/Setuptools), Java (Maven/Gradle, Spring Boot), Node.js (npm/pnpm, Express/Next). * **Tier-2 (soon)**: Go (modules), Rust (Cargo), Ruby (Bundler), PHP (Composer). * Detection via: * File heuristics + optional tree-sitter for function/class extraction (pluggable). * Entry points: `main()`; Spring `@SpringBootApplication`; FastAPI app; `bin/`, `cmd/`. --- ## 10) Interfaces (Code Skeleton) ``` docgen/ __init__.py cli.py # click/typer CLI failsafe.py # fail-safe README stubs logging.py # logging configuration helpers orchestrator.py repo_scanner.py analyzers/ base.py # Analyzer ABC language.py build.py dependencies.py entrypoints.py patterns.py rag/ embedder.py # local embedding model store.py prompting/ builder.py # Jinja2 templates, token mgmt constants.py templates/ # *.j2 per section llm/ runner.py # adapter for ollama/llama.cpp postproc/ lint.py links.py markers.py toc.py git/ diff.py publisher.py config.py models.py ``` **Analyzer ABC** ```python from abc import ABC, abstractmethod from .models import RepoManifest, Signal class Analyzer(ABC): @abstractmethod def supports(self, manifest: RepoManifest) -> bool: ... @abstractmethod def analyze(self, manifest: RepoManifest) -> list[Signal]: ... ``` **CLI (Typer)** ```python @app.command() def init(path: str = \".\", publish: bool = True): ... @app.command() def update(path: str = \".\", event: str = \"commit\", diff_base: str = \"origin/main\"): ... @app.command() def regenerate(sections: str = \"\", full: bool = False): ... ``` **FastAPI (optional service mode)** * `POST",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#10",
      "vector": {
        "publish": 0.17586311452816478,
        "bool": 0.11724207635210984,
        "true": 0.05862103817605492,
        "app": 0.17586311452816478,
        "command": 0.11724207635210984,
        "def": 0.11724207635210984,
        "update": 0.17586311452816478,
        "path": 0.11724207635210984,
        "str": 0.23448415270421968,
        "event": 0.05862103817605492,
        "commit": 0.11724207635210984,
        "diff_base": 0.05862103817605492,
        "origin": 0.05862103817605492,
        "main": 0.05862103817605492,
        "regenerate": 0.05862103817605492,
        "sections": 0.23448415270421968,
        "full": 0.05862103817605492,
        "false": 0.05862103817605492,
        "fastapi": 0.05862103817605492,
        "optional": 0.11724207635210984,
        "service": 0.05862103817605492,
        "mode": 0.05862103817605492,
        "post": 0.35172622905632955,
        "analyze": 0.05862103817605492,
        "generate": 0.05862103817605492,
        "arch": 0.05862103817605492,
        "quickstart": 0.17586311452816478,
        "get": 0.05862103817605492,
        "status": 0.05862103817605492,
        "run_id": 0.05862103817605492,
        "11": 0.05862103817605492,
        "change": 0.05862103817605492,
        "impact": 0.05862103817605492,
        "matrix": 0.05862103817605492,
        "examples": 0.05862103817605492,
        "changed": 0.11724207635210984,
        "pattern": 0.05862103817605492,
        "to": 0.11724207635210984,
        "rebuild": 0.05862103817605492,
        "notes": 0.05862103817605492,
        "pom": 0.05862103817605492,
        "xml": 0.05862103817605492,
        "build": 0.23448415270421968,
        "gradle": 0.05862103817605492,
        "_and": 0.11724207635210984,
        "_test": 0.11724207635210984,
        "recompute": 0.05862103817605492,
        "commands": 0.05862103817605492,
        "requirements": 0.05862103817605492,
        "txt": 0.05862103817605492,
        "pyproject": 0.05862103817605492,
        "toml": 0.05862103817605492,
        "install": 0.05862103817605492,
        "steps": 0.05862103817605492,
        "dockerfile": 0.05862103817605492,
        "k8s": 0.05862103817605492,
        "deployment": 0.05862103817605492,
        "container": 0.05862103817605492,
        "changes": 0.05862103817605492,
        "src": 0.05862103817605492,
        "cmd": 0.05862103817605492,
        "features": 0.05862103817605492,
        "architecture": 0.17586311452816478,
        "if": 0.05862103817605492,
        "entrypoint": 0.05862103817605492,
        "intro": 0.05862103817605492,
        "too": 0.05862103817605492,
        "docs": 0.05862103817605492,
        "all": 0.05862103817605492,
        "patch": 0.05862103817605492,
        "prefer": 0.05862103817605492,
        "doc": 0.05862103817605492,
        "driven": 0.05862103817605492,
        "readme": 0.11724207635210984,
        "md": 0.05862103817605492,
        "none": 0.05862103817605492,
        "unless": 0.05862103817605492,
        "empty": 0.05862103817605492,
        "prevent": 0.05862103817605492,
        "loops": 0.05862103817605492,
        "12": 0.05862103817605492,
        "processing": 0.05862103817605492,
        "rules": 0.05862103817605492,
        "headings": 0.05862103817605492,
        "start": 0.05862103817605492,
        "at": 0.05862103817605492,
        "for": 0.11724207635210984,
        "title": 0.05862103817605492,
        "then": 0.05862103817605492,
        "add": 0.05862103817605492,
        "auto": 0.05862103817605492,
        "toc": 0.05862103817605492,
        "level": 0.05862103817605492,
        "3": 0.05862103817605492,
        "validate": 0.05862103817605492,
        "code": 0.05862103817605492,
        "blocks": 0.05862103817605492,
        "bash": 0.05862103817605492,
        "python": 0.05862103817605492,
        "convert": 0.05862103817605492,
        "absolute": 0.05862103817605492,
        "github": 0.05862103817605492,
        "links": 0.05862103817605492,
        "relative": 0.05862103817605492,
        "where": 0.05862103817605492,
        "possible": 0.05862103817605492,
        "ensure": 0.05862103817605492,
        "idempotency": 0.05862103817605492,
        "only": 0.05862103817605492,
        "edit": 0.05862103817605492,
        "between": 0.05862103817605492,
        "managed": 0.05862103817605492,
        "markers": 0.11724207635210984,
        "docgen": 0.11724207635210984,
        "begin": 0.05862103817605492,
        "end": 0.05862103817605492,
        "13": 0.05862103817605492,
        "git": 0.05862103817605492,
        "ci": 0.05862103817605492,
        "integration": 0.05862103817605492,
        "local": 0.05862103817605492,
        "pre": 0.05862103817605492,
        "forbid": 0.05862103817605492,
        "direct": 0.05862103817605492,
        "edits": 0.05862103817605492,
        "outside": 0.05862103817605492,
        "merge": 0.05862103817605492,
        "checkout": 0.05862103817605492,
        "remind": 0.05862103817605492
      },
      "text": "= \".\", publish: bool = True): ... @app.command() def update(path: str = \".\", event: str = \"commit\", diff_base: str = \"origin/main\"): ... @app.command() def regenerate(sections: str = \"\", full: bool = False): ... ``` **FastAPI (optional service mode)** * `POST /analyze` * `POST /generate?sections=arch,quickstart` * `POST /publish` * `GET /status/{run_id}` --- ## 11) Change Impact Matrix (examples) | Changed Path Pattern | Sections to Rebuild | Notes | | ------------------------------------ | ---------------------------- | --------------------------------------- | | `pom.xml`, `build.gradle*` | build\\_and\\_test, quickstart | Recompute build commands | | `requirements.txt`, `pyproject.toml` | build\\_and\\_test, quickstart | Update install steps | | `Dockerfile`, `k8s/**` | deployment | Publish container changes | | `src/**`, `app/**`, `cmd/**` | features, architecture | If entrypoint changed, update intro too | | `docs/**` | all (patch) | Prefer doc-driven | | `README.md` | none (unless empty) | Prevent loops | --- ## 12) Post-Processing Rules * Headings start at `#` for title then `##` for sections. * Add **auto ToC** (<= level 3). * Validate code blocks (` ```bash`, ` ```python`). * Convert absolute GitHub links to relative where possible. * Ensure **idempotency**: only edit between managed markers: * `<!-- docgen:begin:architecture -->` \u2026 `<!-- docgen:end:architecture -->` --- ## 13) Git & CI Integration ### Local * **pre-commit**: forbid direct README edits outside markers (optional). * **post-merge / post-checkout**: remind",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#11",
      "vector": {
        "possible": 0.11162911443718952,
        "ensure": 0.05581455721859476,
        "idempotency": 0.05581455721859476,
        "only": 0.16744367165578428,
        "edit": 0.05581455721859476,
        "between": 0.05581455721859476,
        "managed": 0.05581455721859476,
        "markers": 0.11162911443718952,
        "docgen": 0.22325822887437904,
        "begin": 0.05581455721859476,
        "architecture": 0.11162911443718952,
        "end": 0.05581455721859476,
        "13": 0.05581455721859476,
        "git": 0.11162911443718952,
        "ci": 0.11162911443718952,
        "integration": 0.05581455721859476,
        "local": 0.16744367165578428,
        "pre": 0.05581455721859476,
        "commit": 0.05581455721859476,
        "forbid": 0.05581455721859476,
        "direct": 0.05581455721859476,
        "readme": 0.05581455721859476,
        "edits": 0.05581455721859476,
        "outside": 0.05581455721859476,
        "optional": 0.16744367165578428,
        "post": 0.16744367165578428,
        "merge": 0.05581455721859476,
        "checkout": 0.11162911443718952,
        "remind": 0.05581455721859476,
        "to": 0.05581455721859476,
        "run": 0.05581455721859476,
        "update": 0.16744367165578428,
        "github": 0.11162911443718952,
        "gitlab": 0.05581455721859476,
        "bitbucket": 0.05581455721859476,
        "on": 0.05581455721859476,
        "push": 0.05581455721859476,
        "pr": 0.2790727860929738,
        "1": 0.11162911443718952,
        "repo": 0.11162911443718952,
        "2": 0.16744367165578428,
        "event": 0.05581455721859476,
        "diff": 0.11162911443718952,
        "base": 0.05581455721859476,
        "base_sha": 0.05581455721859476,
        "3": 0.05581455721859476,
        "if": 0.16744367165578428,
        "changes": 0.05581455721859476,
        "open": 0.05581455721859476,
        "with": 0.05581455721859476,
        "labeled": 0.05581455721859476,
        "docs": 0.11162911443718952,
        "auto": 0.05581455721859476,
        "tokenless": 0.05581455721859476,
        "mode": 0.05581455721859476,
        "created": 0.05581455721859476,
        "from": 0.05581455721859476,
        "a": 0.05581455721859476,
        "app": 0.05581455721859476,
        "bot": 0.05581455721859476,
        "account": 0.05581455721859476,
        "14": 0.05581455721859476,
        "quality": 0.05581455721859476,
        "gates": 0.05581455721859476,
        "evaluation": 0.05581455721859476,
        "consistency": 0.05581455721859476,
        "checks": 0.05581455721859476,
        "commands": 0.11162911443718952,
        "exist": 0.05581455721859476,
        "in": 0.11162911443718952,
        "ports": 0.05581455721859476,
        "env": 0.05581455721859476,
        "vars": 0.05581455721859476,
        "match": 0.05581455721859476,
        "configs": 0.05581455721859476,
        "no": 0.11162911443718952,
        "hallucinations": 0.05581455721859476,
        "reject": 0.05581455721859476,
        "new": 0.05581455721859476,
        "facts": 0.05581455721859476,
        "not": 0.05581455721859476,
        "found": 0.11162911443718952,
        "signals": 0.05581455721859476,
        "rag": 0.11162911443718952,
        "style": 0.05581455721859476,
        "concise": 0.05581455721859476,
        "paragraphs": 0.05581455721859476,
        "actionable": 0.05581455721859476,
        "filler": 0.05581455721859476,
        "marketing": 0.05581455721859476,
        "scorecard": 0.05581455721859476,
        "0": 0.05581455721859476,
        "100": 0.05581455721859476,
        "coverage": 0.05581455721859476,
        "of": 0.11162911443718952,
        "required": 0.05581455721859476,
        "sections": 0.05581455721859476,
        "30": 0.05581455721859476,
        "buildability": 0.05581455721859476,
        "quick": 0.05581455721859476,
        "start": 0.05581455721859476,
        "20": 0.11162911443718952,
        "link": 0.05581455721859476,
        "validity": 0.05581455721859476,
        "10": 0.16744367165578428,
        "alignment": 0.05581455721859476,
        "w": 0.05581455721859476,
        "change": 0.05581455721859476,
        "set": 0.05581455721859476,
        "lint": 0.05581455721859476,
        "reviewer": 0.05581455721859476,
        "feedback": 0.05581455721859476,
        "loop": 0.05581455721859476,
        "15": 0.05581455721859476,
        "security": 0.05581455721859476,
        "privacy": 0.05581455721859476,
        "llm": 0.11162911443718952,
        "and": 0.05581455721859476,
        "embedding": 0.05581455721859476,
        "models": 0.05581455721859476,
        "respect": 0.05581455721859476,
        "gitignore": 0.05581455721859476,
        "configurable": 0.05581455721859476,
        "exclude_paths": 0.05581455721859476,
        "never": 0.05581455721859476,
        "index": 0.05581455721859476,
        "large": 0.05581455721859476,
        "binaries": 0.05581455721859476,
        "secret": 0.11162911443718952,
        "files": 0.05581455721859476,
        "simple": 0.05581455721859476,
        "scan": 0.05581455721859476,
        "block": 0.05581455721859476,
        "16": 0.05581455721859476,
        "mvp": 0.05581455721859476,
        "plan": 0.05581455721859476,
        "weeks": 0.05581455721859476,
        "suggested": 0.05581455721859476,
        "breakdown": 0.05581455721859476,
        "core": 0.05581455721859476,
        "path": 0.05581455721859476,
        "cli": 0.05581455721859476,
        "scanner": 0.05581455721859476,
        "language": 0.05581455721859476,
        "build": 0.05581455721859476,
        "analyzers": 0.05581455721859476,
        "python": 0.05581455721859476,
        "java": 0.05581455721859476,
        "node": 0.05581455721859476,
        "prompt": 0.05581455721859476,
        "builder": 0.05581455721859476,
        "runner": 0.05581455721859476,
        "ollama": 0.05581455721859476,
        "adapter": 0.05581455721859476,
        "processor": 0.05581455721859476,
        "publisher": 0.05581455721859476,
        "lite": 0.05581455721859476,
        "embed": 0.05581455721859476
      },
      "text": "possible. * Ensure **idempotency**: only edit between managed markers: * `<!-- docgen:begin:architecture -->` \u2026 `<!-- docgen:end:architecture -->` --- ## 13) Git & CI Integration ### Local * **pre-commit**: forbid direct README edits outside markers (optional). * **post-merge / post-checkout**: remind to run `docgen update` (optional). ### CI (GitHub/GitLab/Bitbucket) * On push/PR: 1. Checkout repo. 2. `docgen update --event pr --diff-base $BASE_SHA` 3. If changes \u2192 open/update PR with labeled `docs:auto`. * Tokenless mode possible if PR created from a GitHub App/bot account. --- ## 14) Quality Gates & Evaluation * **Consistency checks**: commands exist in repo; ports/env vars match configs. * **No hallucinations**: reject new facts not found in signals/RAG. * **Style**: concise paragraphs, actionable commands, no filler marketing. * **Scorecard** (0\u2013100): * Coverage of required sections (30) * Buildability of quick start (20) * Link validity (10) * Diff alignment w/ change set (20) * Lint (10) * Reviewer feedback loop (10) --- ## 15) Security & Privacy * **Local only** LLM and embedding models. * Respect `.gitignore` + configurable `exclude_paths`. * Never index large binaries/secret files. * Optional simple **secret scan**; block if found. --- ## 16) MVP Plan (2 weeks suggested breakdown) 1. **Core path**: CLI, Scanner, Language+Build analyzers (Python/Java/Node), Prompt Builder, Local LLM runner (Ollama adapter), Post-processor, Git Publisher (PR). 2. **RAG Lite**: embed only `/docs`,",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#12",
      "vector": {
        "simple": 0.058823529411764705,
        "secret": 0.058823529411764705,
        "scan": 0.058823529411764705,
        "block": 0.058823529411764705,
        "if": 0.058823529411764705,
        "found": 0.058823529411764705,
        "16": 0.058823529411764705,
        "mvp": 0.058823529411764705,
        "plan": 0.058823529411764705,
        "2": 0.17647058823529413,
        "weeks": 0.058823529411764705,
        "suggested": 0.058823529411764705,
        "breakdown": 0.058823529411764705,
        "1": 0.11764705882352941,
        "core": 0.058823529411764705,
        "path": 0.058823529411764705,
        "cli": 0.058823529411764705,
        "scanner": 0.058823529411764705,
        "language": 0.058823529411764705,
        "build": 0.17647058823529413,
        "analyzers": 0.058823529411764705,
        "python": 0.17647058823529413,
        "java": 0.058823529411764705,
        "node": 0.058823529411764705,
        "prompt": 0.058823529411764705,
        "builder": 0.058823529411764705,
        "local": 0.058823529411764705,
        "llm": 0.058823529411764705,
        "runner": 0.058823529411764705,
        "ollama": 0.058823529411764705,
        "adapter": 0.058823529411764705,
        "post": 0.058823529411764705,
        "processor": 0.058823529411764705,
        "git": 0.058823529411764705,
        "publisher": 0.058823529411764705,
        "pr": 0.11764705882352941,
        "rag": 0.058823529411764705,
        "lite": 0.058823529411764705,
        "embed": 0.058823529411764705,
        "only": 0.058823529411764705,
        "docs": 0.058823529411764705,
        "existing": 0.058823529411764705,
        "readme": 0.11764705882352941,
        "top": 0.058823529411764705,
        "20": 0.058823529411764705,
        "largest": 0.058823529411764705,
        "source": 0.058823529411764705,
        "files": 0.058823529411764705,
        "heads": 0.058823529411764705,
        "3": 0.058823529411764705,
        "triggers": 0.058823529411764705,
        "single": 0.058823529411764705,
        "commit": 0.058823529411764705,
        "mode": 0.11764705882352941,
        "as": 0.11764705882352941,
        "stretch": 0.058823529411764705,
        "4": 0.058823529411764705,
        "templates": 0.11764705882352941,
        "8": 0.058823529411764705,
        "sections": 0.058823529411764705,
        "jinja2": 0.23529411764705882,
        "managed": 0.058823529411764705,
        "markers": 0.058823529411764705,
        "5": 0.058823529411764705,
        "config": 0.058823529411764705,
        "docgen": 0.058823529411764705,
        "yml": 0.058823529411764705,
        "minimal": 0.11764705882352941,
        "17": 0.17647058823529413,
        "example": 0.058823529411764705,
        "section": 0.11764705882352941,
        "template": 0.058823529411764705,
        "architecture": 0.23529411764705882,
        "j2": 0.11764705882352941,
        "project_name": 0.11764705882352941,
        "is": 0.058823529411764705,
        "structured": 0.058823529411764705,
        "ascii": 0.058823529411764705,
        "_architecture": 0.058823529411764705,
        "key": 0.058823529411764705,
        "components": 0.11764705882352941,
        "for": 0.11764705882352941,
        "comp": 0.17647058823529413,
        "in": 0.058823529411764705,
        "name": 0.058823529411764705,
        "summary": 0.058823529411764705,
        "endfor": 0.058823529411764705,
        "data": 0.058823529411764705,
        "flow": 0.058823529411764705,
        "data_flow": 0.058823529411764705,
        "generated": 0.058823529411764705,
        "from": 0.058823529411764705,
        "detected": 0.058823529411764705,
        "signals": 0.058823529411764705,
        "signals_summary": 0.058823529411764705,
        "frame": 0.058823529411764705,
        "composed": 0.058823529411764705,
        "intro": 0.058823529411764705,
        "features": 0.17647058823529413,
        "include": 0.058823529411764705,
        "quick": 0.058823529411764705,
        "start": 0.058823529411764705,
        "quickstart": 0.058823529411764705,
        "configuration": 0.11764705882352941,
        "test": 0.058823529411764705,
        "build_and_test": 0.11764705882352941,
        "deployment": 0.17647058823529413,
        "troubleshooting": 0.11764705882352941,
        "faq": 0.11764705882352941,
        "license": 0.11764705882352941,
        "18": 0.058823529411764705,
        "snippets": 0.058823529411764705,
        "change": 0.058823529411764705,
        "impact": 0.058823529411764705,
        "heuristic": 0.058823529411764705,
        "section_rules": 0.058823529411764705,
        "pom": 0.058823529411764705,
        "xml": 0.058823529411764705,
        "gradle": 0.058823529411764705,
        "requirements": 0.058823529411764705,
        "txt": 0.058823529411764705,
        "pyproject": 0.058823529411764705,
        "toml": 0.058823529411764705,
        "package": 0.058823529411764705,
        "json": 0.058823529411764705,
        "dockerfile": 0.058823529411764705,
        "k8s": 0.058823529411764705,
        "src": 0.11764705882352941,
        "app": 0.11764705882352941,
        "cmd": 0.11764705882352941,
        "def": 0.058823529411764705,
        "sections_from_diff": 0.058823529411764705,
        "paths": 0.058823529411764705,
        "list": 0.058823529411764705,
        "str": 0.11764705882352941,
        "set": 0.11764705882352941,
        "out": 0.058823529411764705
      },
      "text": "simple **secret scan**; block if found. --- ## 16) MVP Plan (2 weeks suggested breakdown) 1. **Core path**: CLI, Scanner, Language+Build analyzers (Python/Java/Node), Prompt Builder, Local LLM runner (Ollama adapter), Post-processor, Git Publisher (PR). 2. **RAG Lite**: embed only `/docs`, existing `README`, top 20 largest source files\u2019 heads. 3. **Triggers**: single \u201ccommit\u201d mode; PR mode as stretch. 4. **Templates**: 8 sections, Jinja2; managed markers. 5. **Config**: `.docgen.yml` minimal. --- ## 17) Example Templates ### 17.1 Section Template (Jinja2 \u2014 architecture.j2) ```jinja2 ## Architecture {{ project_name }} is structured as: ``` {{ ascii\\_architecture }} ``` **Key components** {% for comp in components %} - **{{ comp.name }}** \u2014 {{ comp.summary }} {% endfor %} **Data flow** {{ data_flow }} > Generated from detected signals: {{ signals_summary }} ``` ### 17.2 README Frame (composed) ```jinja2 # {{ project_name }} {{ intro }} ## Features {{ features }} {% include \"architecture.j2\" %} ## Quick Start {{ quickstart }} ## Configuration {{ configuration }} ## Build & Test {{ build_and_test }} ## Deployment {{ deployment }} ## Troubleshooting {{ troubleshooting }} ## FAQ {{ faq }} ## License {{ license }} ``` --- ## 18) Minimal Python Snippets **Change impact heuristic** ```python SECTION_RULES = [ (\"build_and_test\", [\"pom.xml\",\"build.gradle\",\"requirements.txt\",\"pyproject.toml\",\"package.json\"]), (\"deployment\", [\"Dockerfile\",\"k8s/\"]), (\"architecture\", [\"src/\",\"app/\",\"cmd/\"]), (\"features\", [\"src/\",\"app/\",\"cmd/\"]), ] def sections_from_diff(paths: list[str]) -> set[str]: out = set() for section,",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#13",
      "vector": {
        "faq": 0.04432422071779363,
        "license": 0.08864844143558726,
        "18": 0.04432422071779363,
        "minimal": 0.04432422071779363,
        "python": 0.13297266215338088,
        "snippets": 0.04432422071779363,
        "change": 0.04432422071779363,
        "impact": 0.04432422071779363,
        "heuristic": 0.04432422071779363,
        "section_rules": 0.08864844143558726,
        "build_and_test": 0.04432422071779363,
        "pom": 0.08864844143558726,
        "xml": 0.08864844143558726,
        "build": 0.13297266215338088,
        "gradle": 0.08864844143558726,
        "requirements": 0.04432422071779363,
        "txt": 0.04432422071779363,
        "pyproject": 0.04432422071779363,
        "toml": 0.04432422071779363,
        "package": 0.08864844143558726,
        "json": 0.08864844143558726,
        "deployment": 0.04432422071779363,
        "dockerfile": 0.04432422071779363,
        "k8s": 0.04432422071779363,
        "architecture": 0.04432422071779363,
        "src": 0.13297266215338088,
        "app": 0.13297266215338088,
        "cmd": 0.13297266215338088,
        "features": 0.04432422071779363,
        "def": 0.08864844143558726,
        "sections_from_diff": 0.04432422071779363,
        "paths": 0.08864844143558726,
        "list": 0.04432422071779363,
        "str": 0.26594532430676177,
        "set": 0.08864844143558726,
        "out": 0.13297266215338088,
        "for": 0.2216211035889681,
        "section": 0.08864844143558726,
        "patterns": 0.13297266215338088,
        "in": 0.2216211035889681,
        "if": 0.2216211035889681,
        "any": 0.04432422071779363,
        "p": 0.13297266215338088,
        "pat": 0.08864844143558726,
        "startswith": 0.04432422071779363,
        "add": 0.04432422071779363,
        "return": 0.13297266215338088,
        "or": 0.08864844143558726,
        "intro": 0.08864844143558726,
        "fall": 0.04432422071779363,
        "back": 0.04432422071779363,
        "to": 0.08864844143558726,
        "uncertain": 0.04432422071779363,
        "managed": 0.04432422071779363,
        "markers": 0.08864844143558726,
        "patch": 0.04432422071779363,
        "replace_block": 0.04432422071779363,
        "md": 0.2216211035889681,
        "key": 0.13297266215338088,
        "new": 0.08864844143558726,
        "start": 0.1772968828711745,
        "f": 0.13297266215338088,
        "docgen": 0.1772968828711745,
        "begin": 0.04432422071779363,
        "end": 0.2216211035889681,
        "and": 0.04432422071779363,
        "pre": 0.08864844143558726,
        "rest": 0.08864844143558726,
        "split": 0.08864844143558726,
        "1": 0.08864844143558726,
        "_": 0.04432422071779363,
        "post": 0.08864844143558726,
        "n": 0.08864844143558726,
        "insert": 0.04432422071779363,
        "missing": 0.04432422071779363,
        "19": 0.04432422071779363,
        "open": 0.04432422071779363,
        "questions": 0.04432422071779363,
        "trade": 0.04432422071779363,
        "offs": 0.04432422071779363,
        "embeddings": 0.04432422071779363,
        "use": 0.04432422071779363,
        "a": 0.13297266215338088,
        "tiny": 0.04432422071779363,
        "local": 0.04432422071779363,
        "model": 0.08864844143558726,
        "vs": 0.08864844143558726,
        "rule": 0.04432422071779363,
        "based": 0.04432422071779363,
        "retrieval": 0.04432422071779363,
        "mvp": 0.04432422071779363,
        "tree": 0.04432422071779363,
        "sitter": 0.04432422071779363,
        "adds": 0.04432422071779363,
        "power": 0.04432422071779363,
        "but": 0.04432422071779363,
        "increases": 0.04432422071779363,
        "footprint": 0.04432422071779363,
        "gate": 0.04432422071779363,
        "behind": 0.04432422071779363,
        "flag": 0.04432422071779363,
        "pr": 0.08864844143558726,
        "author": 0.04432422071779363,
        "bot": 0.04432422071779363,
        "account": 0.04432422071779363,
        "developer": 0.04432422071779363,
        "token": 0.04432422071779363,
        "decide": 0.04432422071779363,
        "per": 0.04432422071779363,
        "environment": 0.04432422071779363,
        "markdown": 0.04432422071779363,
        "diffs": 0.04432422071779363,
        "keep": 0.04432422071779363,
        "sections": 0.04432422071779363,
        "atomic": 0.04432422071779363,
        "minimize": 0.04432422071779363,
        "noisy": 0.04432422071779363,
        "prs": 0.04432422071779363,
        "20": 0.04432422071779363,
        "example": 0.04432422071779363,
        "yml": 0.04432422071779363,
        "mixed": 0.04432422071779363,
        "repo": 0.04432422071779363,
        "yaml": 0.04432422071779363,
        "llm": 0.04432422071779363,
        "runner": 0.04432422071779363,
        "ollama": 0.04432422071779363,
        "llama3": 0.04432422071779363,
        "8b": 0.04432422071779363,
        "instruct": 0.04432422071779363,
        "temperature": 0.04432422071779363,
        "0": 0.04432422071779363,
        "15": 0.04432422071779363,
        "readme": 0.04432422071779363,
        "style": 0.04432422071779363,
        "comprehensive": 0.04432422071779363,
        "publish": 0.04432422071779363,
        "mode": 0.04432422071779363,
        "branch_prefix": 0.04432422071779363,
        "analyzers": 0.04432422071779363,
        "enabled": 0.04432422071779363,
        "language": 0.04432422071779363,
        "dependencies": 0.04432422071779363,
        "exclude_paths": 0.04432422071779363,
        "git": 0.04432422071779363,
        "node_modules": 0.04432422071779363,
        "dist": 0.04432422071779363,
        "target": 0.04432422071779363,
        "ci": 0.04432422071779363,
        "watched_globs": 0.04432422071779363
      },
      "text": "faq }} ## License {{ license }} ``` --- ## 18) Minimal Python Snippets **Change impact heuristic** ```python SECTION_RULES = [ (\"build_and_test\", [\"pom.xml\",\"build.gradle\",\"requirements.txt\",\"pyproject.toml\",\"package.json\"]), (\"deployment\", [\"Dockerfile\",\"k8s/\"]), (\"architecture\", [\"src/\",\"app/\",\"cmd/\"]), (\"features\", [\"src/\",\"app/\",\"cmd/\"]), ] def sections_from_diff(paths: list[str]) -> set[str]: out = set() for section, patterns in SECTION_RULES: if any(p for p in paths for pat in patterns if p.startswith(pat)): out.add(section) return out or {\"intro\"} # fall back to intro if uncertain ``` **Managed markers (patch)** ```python def replace_block(md: str, key: str, new: str) -> str: start = f\"<!-- docgen:begin:{key} -->\" end = f\"<!-- docgen:end:{key} -->\" if start in md and end in md: pre, rest = md.split(start, 1) _, post = rest.split(end, 1) return f\"{pre}{start}\\n{new}\\n{end}{post}\" return md # or insert markers if missing ``` --- ## 19) Open Questions / Trade-offs * **Embeddings**: Use a tiny local model vs. rule-based retrieval for MVP? * **Tree-sitter**: Adds power but increases footprint\u2014gate behind a flag. * **PR author**: Bot account vs. developer token\u2014decide per environment. * **Markdown diffs**: Keep sections atomic to minimize noisy PRs. --- ## 20) Example `.docgen.yml` for a Mixed Repo ```yaml llm: runner: \"ollama\" model: \"llama3:8b-instruct\" temperature: 0.15 readme: style: \"comprehensive\" publish: mode: \"pr\" branch_prefix: \"docgen/\" analyzers: enabled: [language, build, dependencies, patterns] exclude_paths: [\".git/\", \"node_modules/\", \"dist/\", \"target/\"] ci: watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" -",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#14",
      "vector": {
        "runner": 0.07715167498104596,
        "ollama": 0.1543033499620919,
        "model": 0.07715167498104596,
        "llama3": 0.07715167498104596,
        "8b": 0.07715167498104596,
        "instruct": 0.07715167498104596,
        "temperature": 0.07715167498104596,
        "0": 0.07715167498104596,
        "15": 0.07715167498104596,
        "readme": 0.1543033499620919,
        "style": 0.1543033499620919,
        "comprehensive": 0.07715167498104596,
        "publish": 0.07715167498104596,
        "mode": 0.07715167498104596,
        "pr": 0.1543033499620919,
        "branch_prefix": 0.07715167498104596,
        "docgen": 0.23145502494313785,
        "analyzers": 0.1543033499620919,
        "enabled": 0.07715167498104596,
        "language": 0.07715167498104596,
        "build": 0.1543033499620919,
        "dependencies": 0.07715167498104596,
        "patterns": 0.07715167498104596,
        "exclude_paths": 0.07715167498104596,
        "git": 0.07715167498104596,
        "node_modules": 0.07715167498104596,
        "dist": 0.07715167498104596,
        "target": 0.07715167498104596,
        "ci": 0.07715167498104596,
        "watched_globs": 0.07715167498104596,
        "src": 0.07715167498104596,
        "app": 0.07715167498104596,
        "cmd": 0.07715167498104596,
        "pom": 0.1543033499620919,
        "xml": 0.1543033499620919,
        "gradle": 0.07715167498104596,
        "package": 0.07715167498104596,
        "json": 0.07715167498104596,
        "requirements": 0.1543033499620919,
        "txt": 0.1543033499620919,
        "dockerfile": 0.07715167498104596,
        "21": 0.07715167498104596,
        "success": 0.07715167498104596,
        "criteria": 0.07715167498104596,
        "poc": 0.07715167498104596,
        "for": 0.07715167498104596,
        "3": 0.07715167498104596,
        "diverse": 0.07715167498104596,
        "repos": 0.07715167498104596,
        "python": 0.07715167498104596,
        "cli": 0.1543033499620919,
        "spring": 0.07715167498104596,
        "boot": 0.07715167498104596,
        "api": 0.07715167498104596,
        "node": 0.07715167498104596,
        "webapp": 0.07715167498104596,
        "init": 0.1543033499620919,
        "produces": 0.07715167498104596,
        "a": 0.23145502494313785,
        "working": 0.07715167498104596,
        "linted": 0.07715167498104596,
        "with": 0.07715167498104596,
        "runnable": 0.07715167498104596,
        "quick": 0.07715167498104596,
        "start": 0.07715167498104596,
        "on": 0.07715167498104596,
        "changing": 0.07715167498104596,
        "or": 0.07715167498104596,
        "updates": 0.07715167498104596,
        "only": 0.07715167498104596,
        "relevant": 0.07715167498104596,
        "sections": 0.07715167498104596,
        "no": 0.07715167498104596,
        "hallucinated": 0.07715167498104596,
        "commands": 0.07715167498104596,
        "links": 0.07715167498104596,
        "and": 0.23145502494313785,
        "badges": 0.07715167498104596,
        "validate": 0.07715167498104596,
        "consistent": 0.07715167498104596,
        "if": 0.07715167498104596,
        "you": 0.1543033499620919,
        "want": 0.07715167498104596,
        "i": 0.07715167498104596,
        "can": 0.1543033499620919,
        "spin": 0.07715167498104596,
        "up": 0.07715167498104596,
        "starter": 0.07715167498104596,
        "repo": 0.07715167498104596,
        "layout": 0.07715167498104596,
        "templates": 0.07715167498104596,
        "simple": 0.07715167498104596,
        "adapter": 0.07715167498104596,
        "so": 0.07715167498104596,
        "drop": 0.07715167498104596,
        "it": 0.07715167498104596,
        "into": 0.07715167498104596,
        "your": 0.07715167498104596,
        "environment": 0.07715167498104596,
        "run": 0.07715167498104596,
        "right": 0.07715167498104596,
        "away": 0.07715167498104596
      },
      "text": "runner: \"ollama\" model: \"llama3:8b-instruct\" temperature: 0.15 readme: style: \"comprehensive\" publish: mode: \"pr\" branch_prefix: \"docgen/\" analyzers: enabled: [language, build, dependencies, patterns] exclude_paths: [\".git/\", \"node_modules/\", \"dist/\", \"target/\"] ci: watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" - \"requirements.txt\" - \"Dockerfile\" ``` --- ## 21) Success Criteria (POC) * For 3 diverse repos (Python CLI, Spring Boot API, Node webapp): * `docgen init` produces a working, linted README with runnable Quick Start. * On changing `pom.xml` or `requirements.txt`, PR updates only relevant sections. * No hallucinated commands; links and badges validate; style consistent. --- If you want, I can spin up a **starter repo layout** (CLI, analyzers, templates, and a simple Ollama adapter) so you can drop it into your environment and run `docgen init` right away.",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    }
  ],
  "license": [
    {
      "id": "AGENTS.md#0",
      "vector": {
        "repository": 0.06757373783994859,
        "guidelines": 0.1013606067599229,
        "project": 0.033786868919974296,
        "structure": 0.033786868919974296,
        "module": 0.06757373783994859,
        "organization": 0.033786868919974296,
        "spec": 0.06757373783994859,
        "md": 0.033786868919974296,
        "captures": 0.033786868919974296,
        "the": 0.27029495135979437,
        "end": 0.06757373783994859,
        "to": 0.1013606067599229,
        "architecture": 0.033786868919974296,
        "component": 0.06757373783994859,
        "contracts": 0.033786868919974296,
        "and": 0.43922929595966587,
        "must": 0.033786868919974296,
        "be": 0.033786868919974296,
        "updated": 0.033786868919974296,
        "whenever": 0.033786868919974296,
        "responsibilities": 0.033786868919974296,
        "shift": 0.033786868919974296,
        "place": 0.033786868919974296,
        "python": 0.2027212135198458,
        "source": 0.033786868919974296,
        "in": 0.16893434459987147,
        "a": 0.23650808243982008,
        "docgen": 0.16893434459987147,
        "package": 0.033786868919974296,
        "create": 0.033786868919974296,
        "it": 0.033786868919974296,
        "when": 0.06757373783994859,
        "implementation": 0.033786868919974296,
        "starts": 0.033786868919974296,
        "with": 0.16893434459987147,
        "clear": 0.033786868919974296,
        "submodules": 0.033786868919974296,
        "for": 0.1013606067599229,
        "orchestrator": 0.1013606067599229,
        "analyzers": 0.033786868919974296,
        "runners": 0.033786868919974296,
        "stores": 0.033786868919974296,
        "avoid": 0.06757373783994859,
        "leaving": 0.033786868919974296,
        "logic": 0.033786868919974296,
        "repo": 0.06757373783994859,
        "root": 0.033786868919974296,
        "mirror": 0.033786868919974296,
        "runtime": 0.033786868919974296,
        "modules": 0.06757373783994859,
        "under": 0.1013606067599229,
        "tests": 0.2027212135198458,
        "using": 0.033786868919974296,
        "test_": 0.033786868919974296,
        "py": 0.1013606067599229,
        "co": 0.033786868919974296,
        "locate": 0.033786868919974296,
        "fixtures": 0.06757373783994859,
        "_fixtures": 0.033786868919974296,
        "so": 0.13514747567989718,
        "imports": 0.06757373783994859,
        "stay": 0.06757373783994859,
        "clean": 0.033786868919974296,
        "reusable": 0.033786868919974296,
        "keep": 0.13514747567989718,
        "throwaway": 0.033786868919974296,
        "experiments": 0.033786868919974296,
        "inside": 0.033786868919974296,
        "an": 0.06757373783994859,
        "ignored": 0.033786868919974296,
        "sandbox": 0.033786868919974296,
        "directory": 0.033786868919974296,
        "scans": 0.033786868919974296,
        "remain": 0.033786868919974296,
        "focused": 0.033786868919974296,
        "on": 0.06757373783994859,
        "production": 0.033786868919974296,
        "code": 0.033786868919974296,
        "paths": 0.033786868919974296,
        "build": 0.033786868919974296,
        "test": 0.06757373783994859,
        "development": 0.033786868919974296,
        "commands": 0.033786868919974296,
        "m": 0.16893434459987147,
        "venv": 0.1013606067599229,
        "followed": 0.033786868919974296,
        "by": 0.033786868919974296,
        "scripts": 0.06757373783994859,
        "activate": 0.033786868919974296,
        "aligns": 0.033786868919974296,
        "local": 0.033786868919974296,
        "shells": 0.033786868919974296,
        "pycharm": 0.033786868919974296,
        "interpreter": 0.033786868919974296,
        "settings": 0.033786868919974296,
        "pip": 0.033786868919974296,
        "install": 0.033786868919974296,
        "e": 0.033786868919974296,
        "dev": 0.033786868919974296,
        "after": 0.06757373783994859,
        "pyproject": 0.033786868919974296,
        "toml": 0.033786868919974296,
        "is": 0.1013606067599229,
        "committed": 0.033786868919974296,
        "exposes": 0.033786868919974296,
        "cli": 0.033786868919974296,
        "plugins": 0.033786868919974296,
        "editable": 0.033786868919974296,
        "form": 0.033786868919974296,
        "without": 0.033786868919974296,
        "repeated": 0.033786868919974296,
        "reinstalls": 0.033786868919974296,
        "pytest": 0.06757373783994859,
        "runs": 0.033786868919974296,
        "full": 0.033786868919974296,
        "suite": 0.033786868919974296,
        "append": 0.033786868919974296,
        "k": 0.033786868919974296,
        "pattern": 0.033786868919974296,
        "iterate": 0.033786868919974296,
        "single": 0.06757373783994859,
        "analyzer": 0.06757373783994859,
        "or": 0.06757373783994859,
        "pipeline": 0.1013606067599229,
        "stage": 0.033786868919974296,
        "mypy": 0.033786868919974296,
        "ruff": 0.033786868919974296,
        "check": 0.033786868919974296,
        "catch": 0.033786868919974296,
        "type": 0.033786868919974296,
        "drift": 0.033786868919974296,
        "lint": 0.033786868919974296,
        "violations": 0.033786868919974296,
        "before": 0.06757373783994859,
        "readme": 0.06757373783994859,
        "generation": 0.06757373783994859,
        "attempted": 0.033786868919974296,
        "coding": 0.033786868919974296,
        "style": 0.033786868919974296,
        "naming": 0.033786868919974296,
        "conventions": 0.033786868919974296,
        "follow": 0.06757373783994859,
        "pep": 0.033786868919974296,
        "8": 0.033786868919974296,
        "4": 0.033786868919974296,
        "space": 0.033786868919974296,
        "indents": 0.033786868919974296,
        "explicit": 0.033786868919974296,
        "example": 0.033786868919974296,
        "from": 0.033786868919974296,
        "import": 0.033786868919974296,
        "static": 0.033786868919974296,
        "tooling": 0.033786868919974296,
        "can": 0.033786868919974296,
        "trace": 0.033786868919974296,
        "dependencies": 0.033786868919974296,
        "name": 0.033786868919974296,
        "their": 0.033786868919974296,
        "roles": 0.033786868919974296,
        "prompt_builder": 0.033786868919974296,
        "functions": 0.033786868919974296,
        "snake_case": 0.033786868919974296,
        "descriptive": 0.06757373783994859,
        "nouns": 0.033786868919974296,
        "first": 0.033786868919974296,
        "build_prompt_section": 0.033786868919974296,
        "run": 0.033786868919974296,
        "black": 0.033786868919974296,
        "commits": 0.06757373783994859,
        "manual": 0.033786868919974296,
        "reformatting": 0.033786868919974296,
        "unless": 0.033786868919974296,
        "formatter": 0.033786868919974296,
        "cannot": 0.033786868919974296,
        "resolve": 0.033786868919974296,
        "construct": 0.033786868919974296,
        "testing": 0.06757373783994859,
        "default": 0.033786868919974296,
        "harness": 0.033786868919974296,
        "every": 0.033786868919974296,
        "needs": 0.033786868919974296,
        "unit": 0.033786868919974296,
        "coverage": 0.033786868919974296,
        "plus": 0.033786868919974296,
        "integration": 0.06757373783994859,
        "case": 0.033786868919974296,
        "that": 0.06757373783994859,
        "walks": 0.033786868919974296,
        "snapshot": 0.033786868919974296,
        "through": 0.033786868919974296,
        "use": 0.033786868919974296,
        "names": 0.033786868919974296,
        "such": 0.033786868919974296,
        "as": 0.033786868919974296,
        "test_prompt_builder_handles_missing_signals": 0.033786868919974296,
        "arrange": 0.033786868919974296,
        "act": 0.033786868919974296,
        "assert": 0.033786868919974296,
        "comments": 0.033786868919974296,
        "minimal": 0.033786868919974296,
        "but": 0.033786868919974296,
        "intentional": 0.033786868919974296,
        "store": 0.033786868919974296,
        "regression": 0.033786868919974296,
        "generated": 0.033786868919974296,
        "slices": 0.033786868919974296,
        "data": 0.033786868919974296,
        "update": 0.033786868919974296,
        "them": 0.033786868919974296,
        "helper": 0.033786868919974296,
        "diffs": 0.033786868919974296,
        "reviewable": 0.033786868919974296,
        "commit": 0.033786868919974296,
        "pull": 0.033786868919974296,
        "request": 0.033786868919974296,
        "conventional": 0.033786868919974296,
        "feat": 0.033786868919974296,
        "fix": 0.033786868919974296,
        "docs": 0.033786868919974296,
        "subject": 0.033786868919974296,
        "lines": 0.033786868919974296,
        "72": 0.033786868919974296,
        "characters": 0.033786868919974296,
        "explain": 0.033786868919974296,
        "broader": 0.033786868919974296,
        "scope": 0.033786868919974296,
        "body": 0.033786868919974296,
        "multiple": 0.033786868919974296,
        "subsystems": 0.033786868919974296,
        "change": 0.033786868919974296,
        "bundle": 0.033786868919974296,
        "related": 0.033786868919974296,
        "work": 0.033786868919974296,
        "into": 0.033786868919974296,
        "pr": 0.033786868919974296,
        "includes": 0.033786868919974296,
        "summary": 0.033786868919974296,
        "notes": 0.033786868919974296,
        "links": 0.033786868919974296
      },
      "text": "# Repository Guidelines ## Project Structure & Module Organization - `spec/spec.md` captures the end-to-end architecture, component contracts, and must be updated whenever responsibilities shift. - Place Python source in a `docgen/` package (create it when implementation starts) with clear submodules for orchestrator, analyzers, runners, and stores; avoid leaving logic in the repo root. - Mirror runtime modules under `tests/` using `test_<module>.py`; co-locate fixtures in `tests/_fixtures/` so imports stay clean and reusable. - Keep throwaway experiments inside an ignored `sandbox/` directory so repository scans remain focused on production code paths. ## Build, Test, and Development Commands - `python -m venv .venv` followed by `.\\\\.venv\\\\Scripts\\\\activate` aligns local shells with the PyCharm interpreter settings. - `python -m pip install -e .[dev]` (after a `pyproject.toml` is committed) exposes the CLI and plugins in editable form without repeated reinstalls. - `python -m pytest` runs the full suite; append `-k <pattern>` to iterate on a single analyzer or pipeline stage. - `python -m mypy docgen` and `python -m ruff check docgen tests` catch type drift and lint violations before README generation is attempted. ## Coding Style & Naming Conventions - Follow PEP 8 with 4-space indents and explicit imports (for example, `from docgen.orchestrator import Pipeline`) so static tooling can trace dependencies. - Name modules after their roles (`orchestrator.py`, `prompt_builder.py`) and keep functions snake_case with descriptive nouns first (`build_prompt_section`). - Run `black docgen tests` before commits; avoid manual reformatting unless the formatter cannot resolve a construct. ## Testing Guidelines - Pytest is the default harness; every analyzer or pipeline component needs unit coverage plus an integration case under `tests/integration/` that walks a repo snapshot through generation. - Use descriptive test names such as `test_prompt_builder_handles_missing_signals` and keep Arrange-Act-Assert comments minimal but intentional. - Store regression fixtures for generated README slices under `tests/data/` and update them with helper scripts so diffs stay reviewable. ## Commit & Pull Request Guidelines - Follow Conventional Commits (`feat:`, `fix:`, `docs:`); keep subject lines <=72 characters and explain broader scope in the body when multiple subsystems change. - Bundle related work into a single PR that includes a summary, testing notes, and links to",
      "metadata": {
        "path": "AGENTS.md",
        "tags": [
          "docs"
        ],
        "hash": "dfeeea63c97ae7cb3036fbb0312edaee5f377b31178db6fbde6c843da7ceb8d2"
      }
    },
    {
      "id": "AGENTS.md#1",
      "vector": {
        "readme": 0.1270001270001905,
        "slices": 0.06350006350009525,
        "under": 0.06350006350009525,
        "tests": 0.06350006350009525,
        "data": 0.06350006350009525,
        "and": 0.4445004445006667,
        "update": 0.06350006350009525,
        "them": 0.06350006350009525,
        "with": 0.06350006350009525,
        "helper": 0.06350006350009525,
        "scripts": 0.06350006350009525,
        "so": 0.06350006350009525,
        "diffs": 0.06350006350009525,
        "stay": 0.06350006350009525,
        "reviewable": 0.06350006350009525,
        "commit": 0.1270001270001905,
        "pull": 0.06350006350009525,
        "request": 0.06350006350009525,
        "guidelines": 0.06350006350009525,
        "follow": 0.06350006350009525,
        "conventional": 0.06350006350009525,
        "commits": 0.06350006350009525,
        "feat": 0.06350006350009525,
        "fix": 0.06350006350009525,
        "docs": 0.1270001270001905,
        "keep": 0.1270001270001905,
        "subject": 0.06350006350009525,
        "lines": 0.06350006350009525,
        "72": 0.06350006350009525,
        "characters": 0.06350006350009525,
        "explain": 0.06350006350009525,
        "broader": 0.06350006350009525,
        "scope": 0.06350006350009525,
        "in": 0.254000254000381,
        "the": 0.31750031750047625,
        "body": 0.06350006350009525,
        "when": 0.1270001270001905,
        "multiple": 0.06350006350009525,
        "subsystems": 0.06350006350009525,
        "change": 0.06350006350009525,
        "bundle": 0.06350006350009525,
        "related": 0.06350006350009525,
        "work": 0.1270001270001905,
        "into": 0.06350006350009525,
        "a": 0.254000254000381,
        "single": 0.06350006350009525,
        "pr": 0.1270001270001905,
        "that": 0.06350006350009525,
        "includes": 0.06350006350009525,
        "summary": 0.06350006350009525,
        "testing": 0.06350006350009525,
        "notes": 0.1270001270001905,
        "links": 0.06350006350009525,
        "to": 0.06350006350009525,
        "relevant": 0.06350006350009525,
        "issues": 0.06350006350009525,
        "or": 0.06350006350009525,
        "spec": 0.06350006350009525,
        "sections": 0.06350006350009525,
        "attach": 0.06350006350009525,
        "before": 0.1270001270001905,
        "after": 0.06350006350009525,
        "excerpts": 0.06350006350009525,
        "altering": 0.06350006350009525,
        "generation": 0.06350006350009525,
        "output": 0.06350006350009525,
        "run": 0.06350006350009525,
        "lint": 0.06350006350009525,
        "type": 0.06350006350009525,
        "check": 0.06350006350009525,
        "test": 0.06350006350009525,
        "commands": 0.06350006350009525,
        "opening": 0.06350006350009525,
        "paste": 0.06350006350009525,
        "condensed": 0.06350006350009525,
        "results": 0.06350006350009525,
        "description": 0.06350006350009525,
        "for": 0.06350006350009525,
        "quick": 0.06350006350009525,
        "verification": 0.06350006350009525,
        "environment": 0.1270001270001905,
        "tooling": 0.06350006350009525,
        "reuse": 0.06350006350009525,
        "local": 0.1270001270001905,
        "venv": 0.06350006350009525,
        "seeded": 0.06350006350009525,
        "by": 0.1270001270001905,
        "pycharm": 0.06350006350009525,
        "do": 0.06350006350009525,
        "not": 0.06350006350009525,
        "artifacts": 0.06350006350009525,
        "store": 0.06350006350009525,
        "secrets": 0.06350006350009525,
        "env": 0.06350006350009525,
        "consumed": 0.06350006350009525,
        "llm": 0.06350006350009525,
        "runner": 0.06350006350009525,
        "large": 0.06350006350009525,
        "model": 0.06350006350009525,
        "weights": 0.06350006350009525,
        "outside": 0.06350006350009525,
        "repository": 0.06350006350009525,
        "document": 0.06350006350009525,
        "their": 0.06350006350009525,
        "locations": 0.06350006350009525,
        "models": 0.06350006350009525,
        "md": 0.06350006350009525,
        "once": 0.06350006350009525,
        "integration": 0.06350006350009525,
        "begins": 0.06350006350009525
      },
      "text": "README slices under `tests/data/` and update them with helper scripts so diffs stay reviewable. ## Commit & Pull Request Guidelines - Follow Conventional Commits (`feat:`, `fix:`, `docs:`); keep subject lines <=72 characters and explain broader scope in the body when multiple subsystems change. - Bundle related work into a single PR that includes a summary, testing notes, and links to relevant issues or spec sections; attach before/after README excerpts when altering generation output. - Run lint, type-check, and test commands before opening a PR and paste condensed results in the description for quick verification. ## Environment & Tooling Notes - Reuse the local `.venv` seeded by PyCharm; do not commit environment artifacts and store secrets in a `.env` consumed by the local LLM runner. - Keep large model weights outside the repository and document their locations in `docs/models.md` once integration work begins.",
      "metadata": {
        "path": "AGENTS.md",
        "tags": [
          "docs"
        ],
        "hash": "dfeeea63c97ae7cb3036fbb0312edaee5f377b31178db6fbde6c843da7ceb8d2"
      }
    },
    {
      "id": "README_before.md#0",
      "vector": {
        "docgen": 0.6611099775215866,
        "begin": 0.12592571000411173,
        "badges": 0.06296285500205587,
        "build": 0.15740713750513965,
        "status": 0.031481427501027934,
        "https": 0.0944442825030838,
        "img": 0.0944442825030838,
        "shields": 0.0944442825030838,
        "io": 0.0944442825030838,
        "badge": 0.0944442825030838,
        "pending": 0.031481427501027934,
        "lightgrey": 0.0944442825030838,
        "svg": 0.0944442825030838,
        "coverage": 0.06296285500205587,
        "review": 0.031481427501027934,
        "needed": 0.031481427501027934,
        "license": 0.12592571000411173,
        "tbd": 0.031481427501027934,
        "end": 0.0944442825030838,
        "toc": 0.06296285500205587,
        "table": 0.031481427501027934,
        "of": 0.031481427501027934,
        "contents": 0.031481427501027934,
        "features": 0.12592571000411173,
        "architecture": 0.06296285500205587,
        "high": 0.06296285500205587,
        "level": 0.06296285500205587,
        "flow": 0.06296285500205587,
        "component": 0.06296285500205587,
        "responsibilities": 0.06296285500205587,
        "artifacts": 0.06296285500205587,
        "and": 0.2833328475092514,
        "data": 0.06296285500205587,
        "stores": 0.06296285500205587,
        "pipeline": 0.06296285500205587,
        "sequence": 0.12592571000411173,
        "init": 0.0944442825030838,
        "patch": 0.06296285500205587,
        "update": 0.0944442825030838,
        "api": 0.06296285500205587,
        "signal": 0.06296285500205587,
        "extraction": 0.06296285500205587,
        "quick": 0.06296285500205587,
        "start": 0.06296285500205587,
        "configuration": 0.06296285500205587,
        "test": 0.06296285500205587,
        "deployment": 0.06296285500205587,
        "troubleshooting": 0.06296285500205587,
        "faq": 0.06296285500205587,
        "intro": 0.06296285500205587,
        "is": 0.031481427501027934,
        "a": 0.0944442825030838,
        "local": 0.0944442825030838,
        "first": 0.031481427501027934,
        "readme": 0.06296285500205587,
        "generator": 0.031481427501027934,
        "for": 0.0944442825030838,
        "polyglot": 0.031481427501027934,
        "repositories": 0.031481427501027934,
        "it": 0.031481427501027934,
        "scans": 0.031481427501027934,
        "every": 0.06296285500205587,
        "tracked": 0.031481427501027934,
        "file": 0.031481427501027934,
        "publishes": 0.031481427501027934,
        "analyzer": 0.06296285500205587,
        "signals": 0.0944442825030838,
        "retrieves": 0.031481427501027934,
        "grounded": 0.031481427501027934,
        "context": 0.06296285500205587,
        "guides": 0.031481427501027934,
        "llm": 0.06296285500205587,
        "through": 0.031481427501027934,
        "templated": 0.031481427501027934,
        "sections": 0.031481427501027934,
        "to": 0.031481427501027934,
        "produce": 0.031481427501027934,
        "or": 0.031481427501027934,
        "documentation": 0.031481427501027934,
        "this": 0.031481427501027934,
        "overview": 0.031481427501027934,
        "reflects": 0.031481427501027934,
        "complete": 0.031481427501027934,
        "pass": 0.031481427501027934,
        "across": 0.031481427501027934,
        "tests": 0.031481427501027934,
        "spec": 0.031481427501027934,
        "docs": 0.06296285500205587,
        "so": 0.031481427501027934,
        "contributors": 0.031481427501027934,
        "understand": 0.031481427501027934,
        "abstraction": 0.031481427501027934,
        "before": 0.031481427501027934,
        "running": 0.031481427501027934,
        "repository": 0.06296285500205587,
        "manifest": 0.031481427501027934,
        "caching": 0.031481427501027934,
        "repo_scanner": 0.031481427501027934,
        "py": 0.15740713750513965,
        "walks": 0.031481427501027934,
        "the": 0.031481427501027934,
        "tree": 0.031481427501027934,
        "respects": 0.031481427501027934,
        "gitignore": 0.031481427501027934,
        "yml": 0.031481427501027934,
        "hashes": 0.031481427501027934,
        "files": 0.031481427501027934,
        "persists": 0.031481427501027934,
        "manifest_cache": 0.031481427501027934,
        "json": 0.06296285500205587,
        "incremental": 0.031481427501027934,
        "runs": 0.031481427501027934,
        "plugin": 0.031481427501027934,
        "system": 0.031481427501027934,
        "analyzers": 0.031481427501027934,
        "discover": 0.031481427501027934,
        "language": 0.031481427501027934,
        "dependency": 0.031481427501027934,
        "entrypoint": 0.031481427501027934,
        "pattern": 0.031481427501027934,
        "structure": 0.031481427501027934,
        "that": 0.031481427501027934,
        "describe": 0.031481427501027934,
        "frameworks": 0.031481427501027934,
        "commands": 0.06296285500205587,
        "apis": 0.031481427501027934,
        "entities": 0.031481427501027934,
        "topology": 0.031481427501027934,
        "template": 0.031481427501027934,
        "driven": 0.031481427501027934,
        "prompting": 0.06296285500205587,
        "builder": 0.031481427501027934,
        "merges": 0.031481427501027934,
        "with": 0.031481427501027934,
        "jinja": 0.031481427501027934,
        "templates": 0.031481427501027934,
        "validates": 0.031481427501027934,
        "applies": 0.031481427501027934,
        "style": 0.031481427501027934,
        "presets": 0.031481427501027934,
        "injects": 0.031481427501027934,
        "retrieved": 0.031481427501027934,
        "per": 0.031481427501027934,
        "section": 0.06296285500205587,
        "lightweight": 0.031481427501027934,
        "rag": 0.06296285500205587,
        "index": 0.031481427501027934,
        "indexer": 0.031481427501027934,
        "embedder": 0.031481427501027934,
        "store": 0.031481427501027934,
        "embed": 0.031481427501027934,
        "source": 0.031481427501027934,
        "excerpts": 0.031481427501027934,
        "into": 0.031481427501027934,
        "embeddings": 0.031481427501027934,
        "scoped": 0.031481427501027934,
        "retrieval": 0.031481427501027934,
        "enforcement": 0.031481427501027934
      },
      "text": "# docgen <!-- docgen:begin:badges --> [![Build Status](https://img.shields.io/badge/build-pending-lightgrey.svg)](#) [![Coverage](https://img.shields.io/badge/coverage-review--needed-lightgrey.svg)](#) [![License](https://img.shields.io/badge/license-tbd-lightgrey.svg)](#) <!-- docgen:end:badges --> <!-- docgen:begin:toc --> ## Table of Contents - [Features](#features) - [Architecture](#architecture) - [High-Level Flow](#high-level-flow) - [Component Responsibilities](#component-responsibilities) - [Artifacts and Data Stores](#artifacts-and-data-stores) - [Pipeline Sequence (`docgen init`)](#pipeline-sequence-docgen-init) - [Patch Sequence (`docgen update`)](#patch-sequence-docgen-update) - [API Signal Extraction](#api-signal-extraction) - [Quick Start](#quick-start) - [Configuration](#configuration) - [Build & Test](#build-test) - [Deployment](#deployment) - [Troubleshooting](#troubleshooting) - [FAQ](#faq) - [License](#license) <!-- docgen:end:toc --> <!-- docgen:begin:intro --> docgen is a local-first README generator for polyglot repositories. It scans every tracked file, publishes analyzer signals, retrieves grounded context, and guides a local LLM through templated sections to produce or update documentation. This overview reflects a complete pass across `docgen/`, `tests/`, `spec/`, and `docs/` so contributors understand every abstraction before running `docgen init`. <!-- docgen:end:intro --> ## Features <!-- docgen:begin:features --> - **Repository manifest & caching** - `docgen/repo_scanner.py` walks the tree, respects `.gitignore`/`.docgen.yml`, hashes files, and persists `manifest_cache.json` for incremental runs. - **Analyzer plugin system** - `docgen/analyzers/*` discover language, build, dependency, entrypoint, pattern, and structure signals that describe frameworks, commands, APIs, entities, and repository topology. - **Template-driven prompting** - `docgen/prompting/builder.py` merges signals with Jinja templates, validates commands, applies style presets, and injects retrieved context per section. - **Lightweight RAG index** - `docgen/rag/indexer.py`, `embedder.py`, and `store.py` embed README/docs/source excerpts into `.docgen/embeddings.json` for section-scoped retrieval. - **Local LLM enforcement** -",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#1",
      "vector": {
        "docgen": 0.48261708906584017,
        "prompting": 0.06434894520877868,
        "builder": 0.03217447260438934,
        "py": 0.3217447260438934,
        "merges": 0.03217447260438934,
        "signals": 0.03217447260438934,
        "with": 0.06434894520877868,
        "jinja": 0.06434894520877868,
        "templates": 0.06434894520877868,
        "validates": 0.03217447260438934,
        "commands": 0.03217447260438934,
        "applies": 0.03217447260438934,
        "style": 0.03217447260438934,
        "presets": 0.03217447260438934,
        "and": 0.2252213082307254,
        "injects": 0.03217447260438934,
        "retrieved": 0.03217447260438934,
        "context": 0.03217447260438934,
        "per": 0.03217447260438934,
        "section": 0.06434894520877868,
        "lightweight": 0.03217447260438934,
        "rag": 0.1608723630219467,
        "index": 0.03217447260438934,
        "indexer": 0.03217447260438934,
        "embedder": 0.03217447260438934,
        "store": 0.03217447260438934,
        "embed": 0.03217447260438934,
        "readme": 0.09652341781316803,
        "docs": 0.03217447260438934,
        "source": 0.03217447260438934,
        "excerpts": 0.03217447260438934,
        "into": 0.03217447260438934,
        "embeddings": 0.06434894520877868,
        "json": 0.06434894520877868,
        "for": 0.03217447260438934,
        "scoped": 0.03217447260438934,
        "retrieval": 0.03217447260438934,
        "local": 0.06434894520877868,
        "llm": 0.19304683562633607,
        "enforcement": 0.03217447260438934,
        "runner": 0.06434894520877868,
        "targets": 0.03217447260438934,
        "loopback": 0.03217447260438934,
        "model": 0.06434894520877868,
        "or": 0.06434894520877868,
        "ollama": 0.03217447260438934,
        "blocks": 0.03217447260438934,
        "remote": 0.03217447260438934,
        "hosts": 0.03217447260438934,
        "exposes": 0.03217447260438934,
        "configurable": 0.03217447260438934,
        "temperature": 0.03217447260438934,
        "token": 0.03217447260438934,
        "limits": 0.03217447260438934,
        "post": 0.2252213082307254,
        "processing": 0.09652341781316803,
        "contract": 0.03217447260438934,
        "postproc": 0.03217447260438934,
        "add": 0.03217447260438934,
        "badges": 0.06434894520877868,
        "rebuild": 0.03217447260438934,
        "the": 0.1608723630219467,
        "toc": 0.06434894520877868,
        "lint": 0.06434894520877868,
        "markdown": 0.03217447260438934,
        "validate": 0.03217447260438934,
        "links": 0.06434894520877868,
        "manage": 0.03217447260438934,
        "markers": 0.03217447260438934,
        "compute": 0.03217447260438934,
        "scorecards": 0.03217447260438934,
        "saved": 0.03217447260438934,
        "to": 0.09652341781316803,
        "scorecard": 0.06434894520877868,
        "git": 0.1608723630219467,
        "aware": 0.03217447260438934,
        "publishing": 0.06434894520877868,
        "diff": 0.03217447260438934,
        "maps": 0.03217447260438934,
        "changed": 0.03217447260438934,
        "files": 0.03217447260438934,
        "sections": 0.03217447260438934,
        "while": 0.03217447260438934,
        "publisher": 0.06434894520877868,
        "commits": 0.03217447260438934,
        "opens": 0.03217447260438934,
        "prs": 0.03217447260438934,
        "generated": 0.03217447260438934,
        "deltas": 0.03217447260438934,
        "via": 0.03217447260438934,
        "github": 0.03217447260438934,
        "cli": 0.19304683562633607,
        "resilient": 0.03217447260438934,
        "ux": 0.03217447260438934,
        "failsafe": 0.03217447260438934,
        "provide": 0.03217447260438934,
        "verbose": 0.03217447260438934,
        "logging": 0.03217447260438934,
        "hooks": 0.03217447260438934,
        "dry": 0.03217447260438934,
        "run": 0.03217447260438934,
        "preview": 0.03217447260438934,
        "support": 0.03217447260438934,
        "fallback": 0.03217447260438934,
        "stubs": 0.03217447260438934,
        "when": 0.03217447260438934,
        "pipeline": 0.06434894520877868,
        "cannot": 0.03217447260438934,
        "complete": 0.03217447260438934,
        "end": 0.09652341781316803,
        "features": 0.03217447260438934,
        "architecture": 0.06434894520877868,
        "begin": 0.03217447260438934,
        "high": 0.03217447260438934,
        "level": 0.03217447260438934,
        "flow": 0.03217447260438934,
        "orchestrator": 0.09652341781316803,
        "coordinates": 0.03217447260438934,
        "described": 0.03217447260438934,
        "in": 0.03217447260438934,
        "spec": 0.06434894520877868,
        "md": 0.06434894520877868,
        "composing": 0.03217447260438934,
        "scanners": 0.03217447260438934,
        "analyzers": 0.06434894520877868,
        "services": 0.03217447260438934,
        "mermaid": 0.03217447260438934,
        "flowchart": 0.03217447260438934,
        "lr": 0.03217447260438934,
        "init": 0.03217447260438934,
        "update": 0.03217447260438934,
        "orc": 0.2573957808351147,
        "scan": 0.06434894520877868,
        "reposcanner": 0.03217447260438934,
        "n": 0.2252213082307254,
        "manifest": 0.03217447260438934,
        "ana": 0.06434894520877868,
        "language": 0.03217447260438934,
        "build": 0.03217447260438934,
        "etc": 0.03217447260438934,
        "ragindexer": 0.03217447260438934,
        "prompt": 0.1608723630219467,
        "promptbuilder": 0.03217447260438934,
        "llmrunner": 0.03217447260438934,
        "commit": 0.03217447260438934,
        "pr": 0.03217447260438934,
        "output": 0.06434894520877868,
        "artifacts": 0.03217447260438934,
        "component": 0.03217447260438934,
        "responsibilities": 0.03217447260438934,
        "layer": 0.03217447260438934,
        "key": 0.03217447260438934
      },
      "text": "- `docgen/prompting/builder.py` merges signals with Jinja templates, validates commands, applies style presets, and injects retrieved context per section. - **Lightweight RAG index** - `docgen/rag/indexer.py`, `embedder.py`, and `store.py` embed README/docs/source excerpts into `.docgen/embeddings.json` for section-scoped retrieval. - **Local LLM enforcement** - `docgen/llm/runner.py` targets loopback Model Runner or Ollama, blocks remote hosts, and exposes configurable temperature/token limits. - **Post-processing contract** - `docgen/postproc/*` add badges, rebuild the ToC, lint markdown, validate links, manage markers, and compute scorecards saved to `.docgen/scorecard.json`. - **Git-aware publishing** - `docgen/git/diff.py` maps changed files to sections while `docgen/git/publisher.py` commits or opens PRs with generated README deltas via the GitHub CLI. - **Resilient CLI UX** - `docgen/cli.py` and `docgen/failsafe.py` provide verbose logging hooks, dry-run preview support, and fallback stubs when the LLM pipeline cannot complete. <!-- docgen:end:features --> ## Architecture <!-- docgen:begin:architecture --> ### High-Level Flow The orchestrator (`docgen/orchestrator.py`) coordinates the end-to-end pipeline described in `spec/spec.md`, composing scanners, analyzers, prompting, RAG, post-processing, and publishing services. ```mermaid flowchart LR CLI[\"CLI (docgen init/update)\"] Orc[\"Orchestrator\"] Scan[\"RepoScanner\\n(manifest)\"] Ana[\"Analyzers\\n(language/build/etc)\"] RAG[\"RAGIndexer\\n(embeddings)\"] Prompt[\"PromptBuilder\\n(Jinja templates)\"] LLM[\"LLMRunner\\n(local model)\"] Post[\"Post-Processing\\n(lint, ToC, badges, links, scorecard)\"] Git[\"Publisher\\n(commit/PR)\"] Output[\"README.md + .docgen artifacts\"] CLI --> Orc Orc --> Scan Orc --> Ana Orc --> RAG Orc --> Prompt Prompt --> LLM LLM --> Prompt Prompt --> Orc Orc --> Post Post --> Output Post --> Git ``` ### Component Responsibilities | Layer | Key",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#2",
      "vector": {
        "orc": 0.2960684541064695,
        "scan": 0.042295493443781355,
        "ana": 0.042295493443781355,
        "rag": 0.12688648033134406,
        "prompt": 0.16918197377512542,
        "llm": 0.16918197377512542,
        "post": 0.16918197377512542,
        "output": 0.042295493443781355,
        "git": 0.042295493443781355,
        "component": 0.042295493443781355,
        "responsibilities": 0.042295493443781355,
        "layer": 0.042295493443781355,
        "key": 0.042295493443781355,
        "modules": 0.08459098688756271,
        "purpose": 0.042295493443781355,
        "cli": 0.12688648033134406,
        "logging": 0.08459098688756271,
        "docgen": 0.46525042788159493,
        "py": 0.42295493443781357,
        "parses": 0.08459098688756271,
        "subcommands": 0.042295493443781355,
        "wires": 0.042295493443781355,
        "verbose": 0.042295493443781355,
        "and": 0.33836394755025084,
        "configures": 0.042295493443781355,
        "namespaced": 0.042295493443781355,
        "loggers": 0.042295493443781355,
        "configuration": 0.042295493443781355,
        "config": 0.042295493443781355,
        "yml": 0.042295493443781355,
        "into": 0.042295493443781355,
        "docgenconfig": 0.042295493443781355,
        "llmconfig": 0.042295493443781355,
        "publishconfig": 0.042295493443781355,
        "analyzerconfig": 0.042295493443781355,
        "ciconfig": 0.042295493443781355,
        "with": 0.042295493443781355,
        "a": 0.042295493443781355,
        "handwritten": 0.042295493443781355,
        "yaml": 0.042295493443781355,
        "fallback": 0.042295493443781355,
        "repository": 0.042295493443781355,
        "scanning": 0.042295493443781355,
        "repo_scanner": 0.042295493443781355,
        "builds": 0.08459098688756271,
        "repomanifest": 0.042295493443781355,
        "of": 0.08459098688756271,
        "filemeta": 0.042295493443781355,
        "entries": 0.042295493443781355,
        "enforces": 0.042295493443781355,
        "ignore": 0.042295493443781355,
        "rules": 0.042295493443781355,
        "infers": 0.042295493443781355,
        "file": 0.042295493443781355,
        "roles": 0.042295493443781355,
        "caches": 0.042295493443781355,
        "hashes": 0.042295493443781355,
        "in": 0.042295493443781355,
        "manifest_cache": 0.042295493443781355,
        "json": 0.042295493443781355,
        "analyzer": 0.042295493443781355,
        "plugins": 0.042295493443781355,
        "analyzers": 0.042295493443781355,
        "emit": 0.042295493443781355,
        "signal": 0.042295493443781355,
        "objects": 0.042295493443781355,
        "for": 0.042295493443781355,
        "languages": 0.042295493443781355,
        "frameworks": 0.042295493443781355,
        "build": 0.042295493443781355,
        "tools": 0.042295493443781355,
        "dependencies": 0.042295493443781355,
        "entrypoints": 0.042295493443781355,
        "structural": 0.042295493443781355,
        "api": 0.042295493443781355,
        "routes": 0.042295493443781355,
        "entities": 0.042295493443781355,
        "patterns": 0.042295493443781355,
        "monorepo": 0.042295493443781355,
        "hints": 0.042295493443781355,
        "prompting": 0.08459098688756271,
        "builder": 0.042295493443781355,
        "templates": 0.08459098688756271,
        "groups": 0.042295493443781355,
        "signals": 0.042295493443781355,
        "retrieves": 0.042295493443781355,
        "context": 0.08459098688756271,
        "renders": 0.042295493443781355,
        "section": 0.08459098688756271,
        "performs": 0.042295493443781355,
        "command": 0.042295493443781355,
        "validation": 0.042295493443781355,
        "estimates": 0.042295493443781355,
        "token": 0.042295493443781355,
        "budgets": 0.042295493443781355,
        "retrieval": 0.042295493443781355,
        "indexer": 0.042295493443781355,
        "embedder": 0.042295493443781355,
        "store": 0.042295493443781355,
        "constants": 0.042295493443781355,
        "chunks": 0.042295493443781355,
        "readme": 0.042295493443781355,
        "docs": 0.042295493443781355,
        "source": 0.042295493443781355,
        "files": 0.042295493443781355,
        "computes": 0.042295493443781355,
        "bag": 0.042295493443781355,
        "words": 0.042295493443781355,
        "embeddings": 0.042295493443781355,
        "persists": 0.042295493443781355,
        "per": 0.042295493443781355,
        "prunes": 0.042295493443781355,
        "stale": 0.042295493443781355,
        "vectors": 0.042295493443781355,
        "runtime": 0.042295493443781355,
        "runner": 0.042295493443781355,
        "chooses": 0.042295493443781355,
        "http": 0.042295493443781355,
        "or": 0.042295493443781355,
        "execution": 0.042295493443781355,
        "openai": 0.042295493443781355,
        "compatible": 0.042295493443781355,
        "payloads": 0.042295493443781355,
        "restricts": 0.042295493443781355,
        "to": 0.042295493443781355,
        "loopback": 0.042295493443781355,
        "hosts": 0.042295493443781355,
        "normalizes": 0.042295493443781355,
        "responses": 0.042295493443781355,
        "processing": 0.042295493443781355,
        "postproc": 0.042295493443781355,
        "manages": 0.042295493443781355,
        "markers": 0.042295493443781355,
        "regenerates": 0.042295493443781355,
        "toc": 0.042295493443781355,
        "applies": 0.042295493443781355,
        "badges": 0.042295493443781355,
        "lints": 0.042295493443781355,
        "markdown": 0.042295493443781355,
        "validates": 0.042295493443781355,
        "links": 0.042295493443781355
      },
      "text": "--> Orc Orc --> Scan Orc --> Ana Orc --> RAG Orc --> Prompt Prompt --> LLM LLM --> Prompt Prompt --> Orc Orc --> Post Post --> Output Post --> Git ``` ### Component Responsibilities | Layer | Key modules | Purpose | | --- | --- | --- | | CLI & Logging | `docgen/cli.py`, `docgen/logging.py` | Parses subcommands, wires `--verbose`, and configures namespaced loggers. | | Configuration | `docgen/config.py` | Parses `.docgen.yml` into `DocGenConfig`, `LLMConfig`, `PublishConfig`, `AnalyzerConfig`, and `CIConfig`, with a handwritten YAML fallback. | | Repository scanning | `docgen/repo_scanner.py` | Builds `RepoManifest` of `FileMeta` entries, enforces ignore rules, infers file roles, and caches hashes in `.docgen/manifest_cache.json`. | | Analyzer plugins | `docgen/analyzers/*` | Emit `Signal` objects for languages, frameworks, build tools, dependencies, entrypoints, structural modules, API routes, entities, patterns, and monorepo hints. | | Prompting | `docgen/prompting/builder.py`, `templates/` | Groups signals, retrieves context, renders section templates, performs command validation, and estimates token budgets. | | Retrieval (RAG) | `docgen/rag/indexer.py`, `embedder.py`, `store.py`, `constants.py` | Chunks README/docs/source files, computes bag-of-words embeddings, persists context per section, and prunes stale vectors. | | LLM runtime | `docgen/llm/runner.py` | Chooses HTTP or CLI execution, builds OpenAI-compatible payloads, restricts to loopback hosts, and normalizes responses. | | Post-processing | `docgen/postproc/*` | Manages markers, regenerates ToC, applies badges, lints markdown, validates links, and",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#3",
      "vector": {
        "vectors": 0.08497185773241747,
        "llm": 0.12745778659862622,
        "runtime": 0.08497185773241747,
        "docgen": 0.4248592886620874,
        "runner": 0.08497185773241747,
        "py": 0.16994371546483494,
        "chooses": 0.042485928866208736,
        "http": 0.042485928866208736,
        "or": 0.12745778659862622,
        "cli": 0.16994371546483494,
        "execution": 0.042485928866208736,
        "builds": 0.042485928866208736,
        "openai": 0.042485928866208736,
        "compatible": 0.042485928866208736,
        "payloads": 0.042485928866208736,
        "restricts": 0.042485928866208736,
        "to": 0.08497185773241747,
        "loopback": 0.042485928866208736,
        "hosts": 0.042485928866208736,
        "and": 0.3398874309296699,
        "normalizes": 0.042485928866208736,
        "responses": 0.042485928866208736,
        "post": 0.08497185773241747,
        "processing": 0.08497185773241747,
        "postproc": 0.042485928866208736,
        "manages": 0.042485928866208736,
        "markers": 0.042485928866208736,
        "regenerates": 0.042485928866208736,
        "toc": 0.042485928866208736,
        "applies": 0.042485928866208736,
        "badges": 0.042485928866208736,
        "lints": 0.042485928866208736,
        "markdown": 0.042485928866208736,
        "validates": 0.042485928866208736,
        "links": 0.042485928866208736,
        "records": 0.042485928866208736,
        "readme": 0.08497185773241747,
        "quality": 0.08497185773241747,
        "metrics": 0.042485928866208736,
        "git": 0.2124296443310437,
        "integration": 0.042485928866208736,
        "diff": 0.042485928866208736,
        "publisher": 0.08497185773241747,
        "maps": 0.042485928866208736,
        "file": 0.08497185773241747,
        "diffs": 0.042485928866208736,
        "affected": 0.042485928866208736,
        "sections": 0.08497185773241747,
        "handles": 0.042485928866208736,
        "staged": 0.042485928866208736,
        "changes": 0.042485928866208736,
        "pushes": 0.042485928866208736,
        "commits": 0.08497185773241747,
        "prs": 0.08497185773241747,
        "with": 0.08497185773241747,
        "optional": 0.042485928866208736,
        "labels": 0.042485928866208736,
        "safety": 0.042485928866208736,
        "nets": 0.042485928866208736,
        "failsafe": 0.042485928866208736,
        "generates": 0.042485928866208736,
        "placeholder": 0.042485928866208736,
        "full": 0.042485928866208736,
        "stubs": 0.08497185773241747,
        "when": 0.042485928866208736,
        "prompting": 0.08497185773241747,
        "fails": 0.042485928866208736,
        "reference": 0.042485928866208736,
        "material": 0.042485928866208736,
        "spec": 0.16994371546483494,
        "md": 0.16994371546483494,
        "feature_order": 0.042485928866208736,
        "feature_checklist": 0.042485928866208736,
        "docs": 0.042485928866208736,
        "ci": 0.08497185773241747,
        "agents": 0.042485928866208736,
        "capture": 0.042485928866208736,
        "architectural": 0.042485928866208736,
        "contracts": 0.042485928866208736,
        "delivery": 0.042485928866208736,
        "roadmap": 0.042485928866208736,
        "feature": 0.042485928866208736,
        "status": 0.042485928866208736,
        "playbooks": 0.042485928866208736,
        "agent": 0.042485928866208736,
        "guidance": 0.042485928866208736,
        "tests": 0.08497185773241747,
        "mirroring": 0.042485928866208736,
        "modules": 0.042485928866208736,
        "pytest": 0.042485928866208736,
        "suite": 0.042485928866208736,
        "covering": 0.042485928866208736,
        "orchestrator": 0.08497185773241747,
        "analyzers": 0.042485928866208736,
        "workflows": 0.042485928866208736,
        "helpers": 0.042485928866208736,
        "artifacts": 0.042485928866208736,
        "data": 0.042485928866208736,
        "stores": 0.042485928866208736,
        "manifest_cache": 0.042485928866208736,
        "json": 0.12745778659862622,
        "cache": 0.042485928866208736,
        "of": 0.08497185773241747,
        "sizes": 0.042485928866208736,
        "mtimes": 0.042485928866208736,
        "hashes": 0.042485928866208736,
        "for": 0.042485928866208736,
        "fast": 0.042485928866208736,
        "re": 0.042485928866208736,
        "scans": 0.042485928866208736,
        "embeddings": 0.042485928866208736,
        "persisted": 0.042485928866208736,
        "embedding": 0.042485928866208736,
        "keyed": 0.042485928866208736,
        "by": 0.08497185773241747,
        "section": 0.042485928866208736,
        "tag": 0.042485928866208736,
        "via": 0.042485928866208736,
        "embeddingstore": 0.042485928866208736,
        "scorecard": 0.042485928866208736,
        "output": 0.042485928866208736,
        "readmescorecard": 0.042485928866208736,
        "evaluate": 0.042485928866208736,
        "tracking": 0.042485928866208736,
        "coverage": 0.042485928866208736,
        "link": 0.042485928866208736,
        "health": 0.042485928866208736,
        "quick": 0.042485928866208736,
        "start": 0.042485928866208736,
        "metadata": 0.042485928866208736,
        "branches": 0.042485928866208736,
        "created": 0.042485928866208736,
        "summaries": 0.042485928866208736,
        "from": 0.042485928866208736,
        "diffanalyzer": 0.042485928866208736,
        "pipeline": 0.042485928866208736,
        "sequence": 0.042485928866208736,
        "init": 0.042485928866208736,
        "mermaid": 0.042485928866208736,
        "sequencediagram": 0.042485928866208736,
        "participant": 0.25491557319725244,
        "dev": 0.042485928866208736,
        "as": 0.25491557319725244,
        "developer": 0.042485928866208736,
        "orc": 0.042485928866208736,
        "scan": 0.042485928866208736,
        "reposcanner": 0.042485928866208736,
        "ana": 0.042485928866208736,
        "analyzer": 0.042485928866208736,
        "plugins": 0.042485928866208736,
        "rag": 0.042485928866208736
      },
      "text": "vectors. | | LLM runtime | `docgen/llm/runner.py` | Chooses HTTP or CLI execution, builds OpenAI-compatible payloads, restricts to loopback hosts, and normalizes responses. | | Post-processing | `docgen/postproc/*` | Manages markers, regenerates ToC, applies badges, lints markdown, validates links, and records README quality metrics. | | Git integration | `docgen/git/diff.py`, `docgen/git/publisher.py` | Maps file diffs to affected sections, handles staged changes, and pushes commits or PRs with optional labels. | | Safety nets | `docgen/failsafe.py` | Generates placeholder sections or full README stubs when prompting fails. | | Reference material | `spec/spec.md`, `spec/feature_order.md`, `spec/feature_checklist.md`, `docs/ci/*`, `AGENTS.md` | Capture architectural contracts, delivery roadmap, feature status, CI playbooks, and agent guidance. | | Tests | `tests/` mirroring runtime modules | Pytest suite covering CLI, orchestrator, analyzers, prompting, git workflows, LLM runner stubs, and post-processing helpers. | ### Artifacts and Data Stores - `.docgen/manifest_cache.json` - cache of file sizes, mtimes, and hashes for fast re-scans. - `.docgen/embeddings.json` - persisted embedding vectors keyed by section/tag via `EmbeddingStore`. - `.docgen/scorecard.json` - output of `ReadmeScorecard.evaluate`, tracking coverage, link health, and quick-start quality. - Git metadata - branches/commits/PRs created by `Publisher` with summaries from `DiffAnalyzer`. ### Pipeline Sequence (`docgen init`) ```mermaid sequenceDiagram participant Dev as Developer participant CLI as docgen CLI participant Orc as Orchestrator participant Scan as RepoScanner participant Ana as Analyzer plugins participant RAG as",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#4",
      "vector": {
        "branches": 0.01984580179179854,
        "commits": 0.01984580179179854,
        "prs": 0.01984580179179854,
        "created": 0.01984580179179854,
        "by": 0.01984580179179854,
        "publisher": 0.03969160358359708,
        "with": 0.01984580179179854,
        "summaries": 0.01984580179179854,
        "from": 0.01984580179179854,
        "diffanalyzer": 0.03969160358359708,
        "pipeline": 0.01984580179179854,
        "sequence": 0.03969160358359708,
        "docgen": 0.11907481075079124,
        "init": 0.03969160358359708,
        "mermaid": 0.03969160358359708,
        "sequencediagram": 0.03969160358359708,
        "participant": 0.4167618376277693,
        "dev": 0.07938320716719416,
        "as": 0.4167618376277693,
        "developer": 0.03969160358359708,
        "cli": 0.15876641433438832,
        "orc": 0.6152198555457548,
        "orchestrator": 0.03969160358359708,
        "scan": 0.15876641433438832,
        "reposcanner": 0.03969160358359708,
        "ana": 0.11907481075079124,
        "analyzer": 0.03969160358359708,
        "plugins": 0.03969160358359708,
        "rag": 0.11907481075079124,
        "ragindexer": 0.03969160358359708,
        "prompt": 0.17861221612618686,
        "promptbuilder": 0.03969160358359708,
        "llm": 0.05953740537539562,
        "llmrunner": 0.01984580179179854,
        "post": 0.15876641433438832,
        "processing": 0.03969160358359708,
        "fs": 0.03969160358359708,
        "filesystem": 0.01984580179179854,
        "run_init": 0.01984580179179854,
        "path": 0.03969160358359708,
        "repomanifest": 0.03969160358359708,
        "filemeta": 0.01984580179179854,
        "analyze": 0.03969160358359708,
        "manifest": 0.0992290089589927,
        "signal": 0.03969160358359708,
        "build": 0.05953740537539562,
        "contexts": 0.03969160358359708,
        "per": 0.01984580179179854,
        "section": 0.07938320716719416,
        "signals": 0.01984580179179854,
        "invoke": 0.01984580179179854,
        "system": 0.01984580179179854,
        "markdown": 0.05953740537539562,
        "full": 0.01984580179179854,
        "readme": 0.07938320716719416,
        "draft": 0.01984580179179854,
        "lint": 0.03969160358359708,
        "toc": 0.03969160358359708,
        "badges": 0.03969160358359708,
        "links": 0.01984580179179854,
        "scorecard": 0.03969160358359708,
        "final": 0.03969160358359708,
        "quality": 0.01984580179179854,
        "report": 0.01984580179179854,
        "write": 0.01984580179179854,
        "md": 0.01984580179179854,
        "git": 0.01984580179179854,
        "optional": 0.01984580179179854,
        "commit": 0.05953740537539562,
        "publish": 0.01984580179179854,
        "mode": 0.01984580179179854,
        "patch": 0.01984580179179854,
        "update": 0.03969160358359708,
        "ci": 0.01984580179179854,
        "diff": 0.0992290089589927,
        "mark": 0.05953740537539562,
        "markermanager": 0.01984580179179854,
        "pub": 0.03969160358359708,
        "base": 0.05953740537539562,
        "ref": 0.01984580179179854,
        "run_update": 0.01984580179179854,
        "compute": 0.01984580179179854,
        "repo": 0.01984580179179854,
        "diffresult": 0.01984580179179854,
        "changed_files": 0.01984580179179854,
        "sections": 0.05953740537539562,
        "context": 0.01984580179179854,
        "snippets": 0.01984580179179854,
        "render_sections": 0.01984580179179854,
        "new": 0.01984580179179854,
        "bodies": 0.01984580179179854,
        "replace": 0.01984580179179854,
        "patched": 0.01984580179179854,
        "link": 0.01984580179179854,
        "check": 0.01984580179179854
      },
      "text": "branches/commits/PRs created by `Publisher` with summaries from `DiffAnalyzer`. ### Pipeline Sequence (`docgen init`) ```mermaid sequenceDiagram participant Dev as Developer participant CLI as docgen CLI participant Orc as Orchestrator participant Scan as RepoScanner participant Ana as Analyzer plugins participant RAG as RAGIndexer participant Prompt as PromptBuilder participant LLM as LLMRunner participant Post as Post-processing participant FS as Filesystem Dev->>CLI: docgen init . CLI->>Orc: run_init(path) Orc->>Scan: scan() Scan-->>Orc: RepoManifest(FileMeta[]) Orc->>Ana: analyze(manifest) Ana-->>Orc: Signal[] Orc->>RAG: build(manifest) RAG-->>Orc: contexts per section Orc->>Prompt: build(manifest, signals, contexts) Prompt->>LLM: invoke(system, prompt) LLM-->>Prompt: section markdown Prompt-->>Orc: full README draft Orc->>Post: lint -> toc -> badges -> links -> scorecard Post-->>Orc: final markdown + quality report Orc->>FS: write README.md Orc->>Git: optional commit (publish mode \"commit\") ``` ### Patch Sequence (`docgen update`) ```mermaid sequenceDiagram participant Dev as Developer/CI participant CLI as docgen CLI participant Orc as Orchestrator participant Diff as DiffAnalyzer participant Scan as RepoScanner participant Ana as Analyzer plugins participant RAG as RAGIndexer participant Prompt as PromptBuilder participant Mark as MarkerManager participant Post as Post-processing participant Pub as Publisher Dev->>CLI: docgen update --diff-base <ref> CLI->>Orc: run_update(path, base) Orc->>Diff: compute(repo, base) Diff-->>Orc: DiffResult(changed_files, sections) Orc->>Scan: scan() Scan-->>Orc: RepoManifest Orc->>Ana: analyze(manifest) Ana-->>Orc: Signal[] Orc->>RAG: build(manifest, sections) RAG-->>Orc: context snippets Orc->>Prompt: render_sections(sections) Prompt-->>Orc: new section bodies Orc->>Mark: replace(markdown, section) Mark-->>Orc: patched README Orc->>Post: lint/toc/badges/link check/scorecard Post-->>Orc: final README + diff Orc->>Pub: commit",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#5",
      "vector": {
        "base": 0.03639372626234195,
        "diff": 0.0727874525246839,
        "orc": 0.5095121676727873,
        "diffresult": 0.03639372626234195,
        "changed_files": 0.03639372626234195,
        "sections": 0.1455749050493678,
        "scan": 0.10918117878702585,
        "repomanifest": 0.03639372626234195,
        "ana": 0.0727874525246839,
        "analyze": 0.03639372626234195,
        "manifest": 0.10918117878702585,
        "signal": 0.1455749050493678,
        "rag": 0.0727874525246839,
        "build": 0.0727874525246839,
        "context": 0.03639372626234195,
        "snippets": 0.03639372626234195,
        "prompt": 0.0727874525246839,
        "render_sections": 0.03639372626234195,
        "new": 0.03639372626234195,
        "section": 0.0727874525246839,
        "bodies": 0.03639372626234195,
        "mark": 0.0727874525246839,
        "replace": 0.03639372626234195,
        "markdown": 0.03639372626234195,
        "patched": 0.03639372626234195,
        "readme": 0.0727874525246839,
        "post": 0.1455749050493678,
        "lint": 0.03639372626234195,
        "toc": 0.03639372626234195,
        "badges": 0.03639372626234195,
        "link": 0.03639372626234195,
        "check": 0.03639372626234195,
        "scorecard": 0.03639372626234195,
        "final": 0.03639372626234195,
        "pub": 0.03639372626234195,
        "commit": 0.03639372626234195,
        "or": 0.03639372626234195,
        "pr": 0.03639372626234195,
        "branch": 0.03639372626234195,
        "title": 0.03639372626234195,
        "body": 0.03639372626234195,
        "api": 0.2911498100987356,
        "extraction": 0.03639372626234195,
        "structureanalyzer": 0.03639372626234195,
        "inspects": 0.03639372626234195,
        "source": 0.03639372626234195,
        "files": 0.0727874525246839,
        "for": 0.03639372626234195,
        "fastapi": 0.10918117878702585,
        "decorators": 0.03639372626234195,
        "express": 0.03639372626234195,
        "route": 0.03639372626234195,
        "calls": 0.0727874525246839,
        "and": 0.3275435363610775,
        "pydantic": 0.03639372626234195,
        "orm": 0.03639372626234195,
        "entities": 0.03639372626234195,
        "each": 0.03639372626234195,
        "match": 0.03639372626234195,
        "emits": 0.03639372626234195,
        "metadata": 0.03639372626234195,
        "such": 0.03639372626234195,
        "as": 0.18196863131170973,
        "handler": 0.03639372626234195,
        "names": 0.03639372626234195,
        "http": 0.03639372626234195,
        "verbs": 0.03639372626234195,
        "detected": 0.03639372626234195,
        "external": 0.0727874525246839,
        "requests": 0.0727874525246839,
        "session": 0.0727874525246839,
        "db": 0.1455749050493678,
        "assembled": 0.03639372626234195,
        "sequence": 0.03639372626234195,
        "steps": 0.03639372626234195,
        "that": 0.0727874525246839,
        "downstream": 0.03639372626234195,
        "templates": 0.03639372626234195,
        "render": 0.03639372626234195,
        "diagrams": 0.03639372626234195,
        "mermaid": 0.03639372626234195,
        "sequencediagram": 0.03639372626234195,
        "participant": 0.1455749050493678,
        "client": 0.10918117878702585,
        "endpoint": 0.03639372626234195,
        "auth": 0.10918117878702585,
        "service": 0.03639372626234195,
        "database": 0.03639372626234195,
        "login": 0.03639372626234195,
        "token": 0.03639372626234195,
        "response": 0.0727874525246839,
        "write": 0.03639372626234195,
        "ack": 0.03639372626234195,
        "authenticated": 0.03639372626234195,
        "other": 0.03639372626234195,
        "analyzers": 0.0727874525246839,
        "complement": 0.03639372626234195,
        "these": 0.03639372626234195,
        "signals": 0.03639372626234195,
        "entrypointanalyzer": 0.03639372626234195,
        "ranks": 0.03639372626234195,
        "executable": 0.03639372626234195,
        "commands": 0.0727874525246839,
        "uvicorn": 0.03639372626234195,
        "django": 0.03639372626234195,
        "runserver": 0.03639372626234195,
        "npm": 0.03639372626234195,
        "dev": 0.03639372626234195,
        "spring": 0.03639372626234195,
        "boot": 0.03639372626234195,
        "bootrun": 0.03639372626234195,
        "buildanalyzer": 0.03639372626234195,
        "pairs": 0.03639372626234195,
        "with": 0.03639372626234195,
        "reproducible": 0.03639372626234195,
        "test": 0.03639372626234195,
        "os": 0.03639372626234195,
        "aware": 0.03639372626234195,
        "scripts": 0.0727874525246839,
        "dependencyanalyzer": 0.03639372626234195,
        "patternanalyzer": 0.03639372626234195,
        "languageanalyzer": 0.03639372626234195,
        "describe": 0.03639372626234195,
        "frameworks": 0.03639372626234195,
        "docker": 0.03639372626234195,
        "k8s": 0.03639372626234195,
        "ci": 0.03639372626234195,
        "layouts": 0.03639372626234195,
        "monorepo": 0.03639372626234195,
        "hints": 0.03639372626234195,
        "feed": 0.03639372626234195,
        "the": 0.03639372626234195,
        "features": 0.03639372626234195,
        "architecture": 0.0727874525246839,
        "quick": 0.0727874525246839,
        "start": 0.0727874525246839,
        "tests": 0.1455749050493678,
        "under": 0.03639372626234195,
        "prompting": 0.03639372626234195,
        "git": 0.03639372626234195,
        "assert": 0.03639372626234195,
        "accuracy": 0.03639372626234195,
        "command": 0.03639372626234195,
        "selection": 0.03639372626234195,
        "publishing": 0.03639372626234195,
        "behavior": 0.03639372626234195,
        "docgen": 0.0727874525246839,
        "end": 0.03639372626234195,
        "begin": 0.03639372626234195,
        "quickstart": 0.03639372626234195,
        "1": 0.03639372626234195,
        "create": 0.03639372626234195,
        "a": 0.03639372626234195,
        "virtual": 0.03639372626234195,
        "environment": 0.03639372626234195,
        "activate": 0.0727874525246839,
        "it": 0.03639372626234195,
        "windows": 0.03639372626234195,
        "python": 0.0727874525246839,
        "m": 0.0727874525246839,
        "venv": 0.18196863131170973,
        "then": 0.03639372626234195,
        "macos": 0.03639372626234195,
        "linux": 0.03639372626234195
      },
      "text": "base) Diff-->>Orc: DiffResult(changed_files, sections) Orc->>Scan: scan() Scan-->>Orc: RepoManifest Orc->>Ana: analyze(manifest) Ana-->>Orc: Signal[] Orc->>RAG: build(manifest, sections) RAG-->>Orc: context snippets Orc->>Prompt: render_sections(sections) Prompt-->>Orc: new section bodies Orc->>Mark: replace(markdown, section) Mark-->>Orc: patched README Orc->>Post: lint/toc/badges/link check/scorecard Post-->>Orc: final README + diff Orc->>Pub: commit or PR (branch, title, body) ``` ### API Signal Extraction `StructureAnalyzer` inspects source files for FastAPI decorators, Express route calls, and Pydantic/ORM entities. Each match emits `Signal` metadata such as handler names, HTTP verbs, detected external calls (`requests`, `session`, `db`), and assembled `sequence` steps that downstream templates render as diagrams. ```mermaid sequenceDiagram participant Client participant API as FastAPI endpoint participant Auth as External service participant DB as Database Client->>API: POST /login API->>Auth: requests.post() Auth-->>API: token/response API->>DB: session.write() DB-->>API: ack API-->>Client: Authenticated response ``` Other analyzers complement these signals: - `EntryPointAnalyzer` ranks executable commands (FastAPI `uvicorn`, Django `runserver`, npm `dev`, Spring Boot `bootRun`). - `BuildAnalyzer` pairs manifest files with reproducible build/test commands and OS-aware scripts. - `DependencyAnalyzer`, `PatternAnalyzer`, and `LanguageAnalyzer` describe frameworks, Docker/K8s/CI layouts, and monorepo hints that feed the features, architecture, and quick-start sections. - Tests under `tests/analyzers/`, `tests/prompting/`, and `tests/git/` assert signal accuracy, command selection, and publishing behavior. <!-- docgen:end:architecture --> ## Quick Start <!-- docgen:begin:quickstart --> 1. Create a virtual environment and activate it: - Windows: `python -m venv .venv` then `.\\.venv\\Scripts\\activate` - macOS/Linux: `python -m venv .venv`",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#6",
      "vector": {
        "tests": 0.04214497519610896,
        "git": 0.04214497519610896,
        "assert": 0.04214497519610896,
        "signal": 0.04214497519610896,
        "accuracy": 0.04214497519610896,
        "command": 0.04214497519610896,
        "selection": 0.04214497519610896,
        "and": 0.16857990078443583,
        "publishing": 0.04214497519610896,
        "behavior": 0.04214497519610896,
        "docgen": 0.5057397023533075,
        "end": 0.08428995039221791,
        "architecture": 0.04214497519610896,
        "quick": 0.04214497519610896,
        "start": 0.04214497519610896,
        "begin": 0.08428995039221791,
        "quickstart": 0.08428995039221791,
        "1": 0.04214497519610896,
        "create": 0.04214497519610896,
        "a": 0.08428995039221791,
        "virtual": 0.04214497519610896,
        "environment": 0.04214497519610896,
        "activate": 0.12643492558832686,
        "it": 0.04214497519610896,
        "windows": 0.04214497519610896,
        "python": 0.2528698511766537,
        "m": 0.2528698511766537,
        "venv": 0.2528698511766537,
        "then": 0.08428995039221791,
        "scripts": 0.04214497519610896,
        "macos": 0.04214497519610896,
        "linux": 0.04214497519610896,
        "source": 0.04214497519610896,
        "bin": 0.04214497519610896,
        "2": 0.08428995039221791,
        "install": 0.12643492558832686,
        "dependencies": 0.04214497519610896,
        "in": 0.04214497519610896,
        "editable": 0.04214497519610896,
        "mode": 0.08428995039221791,
        "includes": 0.04214497519610896,
        "cli": 0.12643492558832686,
        "entry": 0.04214497519610896,
        "point": 0.04214497519610896,
        "test": 0.04214497519610896,
        "tooling": 0.04214497519610896,
        "bash": 0.12643492558832686,
        "pip": 0.12643492558832686,
        "upgrade": 0.04214497519610896,
        "e": 0.04214497519610896,
        "dev": 0.04214497519610896,
        "3": 0.04214497519610896,
        "configure": 0.04214497519610896,
        "yml": 0.08428995039221791,
        "with": 0.08428995039221791,
        "local": 0.04214497519610896,
        "llm": 0.08428995039221791,
        "runner": 0.12643492558832686,
        "details": 0.04214497519610896,
        "see": 0.04214497519610896,
        "configuration": 0.12643492558832686,
        "below": 0.04214497519610896,
        "4": 0.04214497519610896,
        "generate": 0.04214497519610896,
        "an": 0.04214497519610896,
        "initial": 0.04214497519610896,
        "readme": 0.12643492558832686,
        "from": 0.04214497519610896,
        "the": 0.04214497519610896,
        "repository": 0.04214497519610896,
        "root": 0.04214497519610896,
        "init": 0.04214497519610896,
        "5": 0.04214497519610896,
        "after": 0.04214497519610896,
        "subsequent": 0.04214497519610896,
        "changes": 0.04214497519610896,
        "refresh": 0.04214497519610896,
        "documentation": 0.04214497519610896,
        "update": 0.08428995039221791,
        "diff": 0.04214497519610896,
        "base": 0.04214497519610896,
        "origin": 0.04214497519610896,
        "main": 0.04214497519610896,
        "6": 0.04214497519610896,
        "use": 0.04214497519610896,
        "dry": 0.04214497519610896,
        "run": 0.04214497519610896,
        "to": 0.04214497519610896,
        "preview": 0.04214497519610896,
        "diffs": 0.04214497519610896,
        "or": 0.16857990078443583,
        "verbose": 0.04214497519610896,
        "for": 0.04214497519610896,
        "deeper": 0.04214497519610896,
        "logs": 0.04214497519610896,
        "while": 0.04214497519610896,
        "iterating": 0.04214497519610896,
        "on": 0.04214497519610896,
        "analyzers": 0.08428995039221791,
        "config": 0.04214497519610896,
        "py": 0.04214497519610896,
        "loads": 0.04214497519610896,
        "into": 0.04214497519610896,
        "strongly": 0.04214497519610896,
        "typed": 0.04214497519610896,
        "dataclasses": 0.04214497519610896,
        "provides": 0.04214497519610896,
        "minimal": 0.04214497519610896,
        "yaml": 0.08428995039221791,
        "parser": 0.04214497519610896,
        "when": 0.04214497519610896,
        "pyyaml": 0.04214497519610896,
        "is": 0.04214497519610896,
        "absent": 0.04214497519610896,
        "common": 0.04214497519610896,
        "fields": 0.04214497519610896,
        "ollama": 0.04214497519610896,
        "model": 0.08428995039221791,
        "llama3": 0.04214497519610896,
        "8b": 0.04214497519610896,
        "instruct": 0.04214497519610896,
        "base_url": 0.04214497519610896,
        "http": 0.04214497519610896,
        "localhost": 0.04214497519610896,
        "12434": 0.04214497519610896,
        "engines": 0.04214497519610896,
        "v1": 0.04214497519610896,
        "temperature": 0.04214497519610896,
        "0": 0.04214497519610896,
        "max_tokens": 0.04214497519610896,
        "2048": 0.04214497519610896,
        "style": 0.04214497519610896,
        "comprehensive": 0.04214497519610896,
        "concise": 0.04214497519610896,
        "template_pack": 0.04214497519610896,
        "null": 0.04214497519610896,
        "optional": 0.04214497519610896,
        "alt": 0.04214497519610896,
        "templates": 0.08428995039221791,
        "under": 0.04214497519610896,
        "prompting": 0.04214497519610896,
        "publish": 0.04214497519610896,
        "pr": 0.08428995039221791,
        "commit": 0.04214497519610896,
        "branch_prefix": 0.04214497519610896,
        "labels": 0.04214497519610896,
        "docs": 0.08428995039221791,
        "auto": 0.04214497519610896,
        "update_existing": 0.04214497519610896,
        "false": 0.04214497519610896,
        "enabled": 0.04214497519610896,
        "subset": 0.04214497519610896,
        "of": 0.04214497519610896,
        "plugin": 0.04214497519610896,
        "names": 0.04214497519610896,
        "empty": 0.04214497519610896,
        "uses": 0.04214497519610896,
        "all": 0.04214497519610896,
        "built": 0.04214497519610896,
        "ins": 0.04214497519610896,
        "exclude_paths": 0.08428995039221791,
        "sandbox": 0.08428995039221791,
        "ci": 0.04214497519610896,
        "watched_globs": 0.04214497519610896
      },
      "text": "`tests/git/` assert signal accuracy, command selection, and publishing behavior. <!-- docgen:end:architecture --> ## Quick Start <!-- docgen:begin:quickstart --> 1. Create a virtual environment and activate it: - Windows: `python -m venv .venv` then `.\\.venv\\Scripts\\activate` - macOS/Linux: `python -m venv .venv` then `source .venv/bin/activate` 2. Install dependencies in editable mode (includes CLI entry point and test tooling): ```bash python -m pip install --upgrade pip python -m pip install -e .[dev] ``` 3. Configure `.docgen.yml` with local LLM runner details (see Configuration below). 4. Generate an initial README from the repository root: ```bash python -m docgen.cli init . ``` 5. After subsequent changes, refresh documentation with: ```bash python -m docgen.cli update --diff-base origin/main ``` 6. Use `--dry-run` to preview diffs or `--verbose` for deeper logs while iterating on analyzers. <!-- docgen:end:quickstart --> ## Configuration <!-- docgen:begin:configuration --> `docgen/config.py` loads `.docgen.yml` into strongly typed dataclasses and provides a minimal YAML parser when PyYAML is absent. Common fields: ```yaml llm: runner: \"ollama\" # or \"model-runner\" model: \"llama3:8b-instruct\" base_url: \"http://localhost:12434/engines/v1\" temperature: 0.2 max_tokens: 2048 readme: style: \"comprehensive\" # or \"concise\" template_pack: null # optional alt templates under docgen/prompting/templates/ publish: mode: \"pr\" # \"pr\" or \"commit\" branch_prefix: \"docgen/readme-update\" labels: [\"docs:auto\"] update_existing: false analyzers: enabled: [] # subset of plugin names, empty uses all built-ins exclude_paths: - \"sandbox/\" ci: watched_globs: - \"docgen/**\" - \"docs/**\" exclude_paths: - \"sandbox/\"",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#7",
      "vector": {
        "templates": 0.12058018065872111,
        "under": 0.12058018065872111,
        "docgen": 0.5225141161877915,
        "prompting": 0.08038678710581408,
        "publish": 0.04019339355290704,
        "mode": 0.08038678710581408,
        "pr": 0.16077357421162816,
        "or": 0.12058018065872111,
        "commit": 0.04019339355290704,
        "branch_prefix": 0.04019339355290704,
        "readme": 0.08038678710581408,
        "update": 0.12058018065872111,
        "labels": 0.04019339355290704,
        "docs": 0.24116036131744223,
        "auto": 0.04019339355290704,
        "update_existing": 0.04019339355290704,
        "false": 0.04019339355290704,
        "analyzers": 0.12058018065872111,
        "enabled": 0.04019339355290704,
        "subset": 0.04019339355290704,
        "of": 0.04019339355290704,
        "plugin": 0.04019339355290704,
        "names": 0.04019339355290704,
        "empty": 0.04019339355290704,
        "uses": 0.04019339355290704,
        "all": 0.04019339355290704,
        "built": 0.04019339355290704,
        "ins": 0.04019339355290704,
        "exclude_paths": 0.12058018065872111,
        "sandbox": 0.08038678710581408,
        "ci": 0.24116036131744223,
        "watched_globs": 0.08038678710581408,
        "highlights": 0.04019339355290704,
        "llmconfig": 0.04019339355290704,
        "supports": 0.04019339355290704,
        "env": 0.04019339355290704,
        "overrides": 0.08038678710581408,
        "docgen_llm_model": 0.04019339355290704,
        "docgen_llm_base_url": 0.04019339355290704,
        "docgen_llm_api_key": 0.04019339355290704,
        "and": 0.12058018065872111,
        "enforces": 0.04019339355290704,
        "loopback": 0.04019339355290704,
        "urls": 0.04019339355290704,
        "publishconfig": 0.04019339355290704,
        "toggles": 0.04019339355290704,
        "automatic": 0.04019339355290704,
        "commits": 0.04019339355290704,
        "creation": 0.04019339355290704,
        "publisher": 0.04019339355290704,
        "relies": 0.04019339355290704,
        "on": 0.04019339355290704,
        "the": 0.16077357421162816,
        "github": 0.12058018065872111,
        "cli": 0.08038678710581408,
        "when": 0.12058018065872111,
        "analyzerconfig": 0.04019339355290704,
        "removes": 0.04019339355290704,
        "noisy": 0.04019339355290704,
        "directories": 0.04019339355290704,
        "from": 0.04019339355290704,
        "analysis": 0.04019339355290704,
        "without": 0.04019339355290704,
        "editing": 0.04019339355290704,
        "gitignore": 0.04019339355290704,
        "template": 0.04019339355290704,
        "can": 0.04019339355290704,
        "live": 0.04019339355290704,
        "are": 0.04019339355290704,
        "picked": 0.04019339355290704,
        "up": 0.04019339355290704,
        "automatically": 0.04019339355290704,
        "present": 0.04019339355290704,
        "watchers": 0.04019339355290704,
        "skip": 0.04019339355290704,
        "updates": 0.04019339355290704,
        "changed": 0.04019339355290704,
        "files": 0.04019339355290704,
        "do": 0.04019339355290704,
        "not": 0.04019339355290704,
        "match": 0.04019339355290704,
        "aligning": 0.04019339355290704,
        "with": 0.04019339355290704,
        "workflow": 0.04019339355290704,
        "in": 0.12058018065872111,
        "yml": 0.08038678710581408,
        "end": 0.08038678710581408,
        "configuration": 0.04019339355290704,
        "build": 0.04019339355290704,
        "test": 0.08038678710581408,
        "begin": 0.08038678710581408,
        "build_and_test": 0.08038678710581408,
        "format": 0.04019339355290704,
        "lint": 0.04019339355290704,
        "bash": 0.16077357421162816,
        "black": 0.04019339355290704,
        "tests": 0.12058018065872111,
        "python": 0.2009669677645352,
        "m": 0.2009669677645352,
        "ruff": 0.04019339355290704,
        "check": 0.08038678710581408,
        "type": 0.04019339355290704,
        "core": 0.04019339355290704,
        "modules": 0.08038678710581408,
        "mypy": 0.04019339355290704,
        "run": 0.04019339355290704,
        "full": 0.04019339355290704,
        "suite": 0.04019339355290704,
        "mirrors": 0.04019339355290704,
        "runtime": 0.04019339355290704,
        "orchestrator": 0.08038678710581408,
        "git": 0.04019339355290704,
        "rag": 0.04019339355290704,
        "post": 0.04019339355290704,
        "processing": 0.04019339355290704,
        "pytest": 0.12058018065872111,
        "target": 0.04019339355290704,
        "specific": 0.04019339355290704,
        "areas": 0.04019339355290704,
        "while": 0.04019339355290704,
        "iterating": 0.04019339355290704,
        "k": 0.04019339355290704,
        "test_structure": 0.04019339355290704,
        "py": 0.04019339355290704,
        "regenerate": 0.04019339355290704,
        "fixtures": 0.04019339355290704,
        "inspect": 0.04019339355290704,
        "scorecards": 0.04019339355290704,
        "stored": 0.04019339355290704,
        "to": 0.04019339355290704,
        "validate": 0.04019339355290704,
        "generated": 0.04019339355290704,
        "content": 0.04019339355290704,
        "deployment": 0.08038678710581408,
        "actions": 0.08038678710581408,
        "recipe": 0.04019339355290704,
        "documented": 0.04019339355290704,
        "md": 0.04019339355290704,
        "installs": 0.04019339355290704,
        "package": 0.04019339355290704,
        "editable": 0.04019339355290704
      },
      "text": "templates under docgen/prompting/templates/ publish: mode: \"pr\" # \"pr\" or \"commit\" branch_prefix: \"docgen/readme-update\" labels: [\"docs:auto\"] update_existing: false analyzers: enabled: [] # subset of plugin names, empty uses all built-ins exclude_paths: - \"sandbox/\" ci: watched_globs: - \"docgen/**\" - \"docs/**\" exclude_paths: - \"sandbox/\" ``` Highlights: - `LLMConfig` supports env overrides (`DOCGEN_LLM_MODEL`, `DOCGEN_LLM_BASE_URL`, `DOCGEN_LLM_API_KEY`) and enforces loopback URLs. - `PublishConfig` toggles automatic commits or PR creation; `Publisher` relies on the GitHub CLI when `mode=\"pr\"`. - `AnalyzerConfig.exclude_paths` removes noisy directories from analysis without editing `.gitignore`. - Template overrides can live under `docs/templates/` and are picked up automatically when present. - CI watchers skip updates when changed files do not match `ci.watched_globs`, aligning with the workflow in `docs/ci/docgen-update.yml`. <!-- docgen:end:configuration --> ## Build & Test <!-- docgen:begin:build_and_test --> - Format and lint: ```bash black docgen tests python -m ruff check docgen tests ``` - Type-check core modules: ```bash python -m mypy docgen ``` - Run the full test suite (mirrors runtime modules: CLI, orchestrator, analyzers, prompting, git, RAG, post-processing): ```bash python -m pytest ``` - Target specific areas while iterating: ```bash python -m pytest -k orchestrator python -m pytest tests/analyzers/test_structure.py ``` - Regenerate README fixtures or inspect scorecards stored under `.docgen/` to validate generated content. <!-- docgen:end:build_and_test --> ## Deployment <!-- docgen:begin:deployment --> - GitHub Actions recipe: `docs/ci/docgen-update.yml` (documented in `docs/ci/github-actions.md`) installs the package in editable",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#8",
      "vector": {
        "python": 0.040555355282690636,
        "m": 0.040555355282690636,
        "pytest": 0.040555355282690636,
        "tests": 0.040555355282690636,
        "analyzers": 0.040555355282690636,
        "test_structure": 0.040555355282690636,
        "py": 0.08111071056538127,
        "regenerate": 0.040555355282690636,
        "readme": 0.12166606584807191,
        "fixtures": 0.040555355282690636,
        "or": 0.24333213169614382,
        "inspect": 0.08111071056538127,
        "scorecards": 0.040555355282690636,
        "stored": 0.040555355282690636,
        "under": 0.040555355282690636,
        "docgen": 0.48666426339228763,
        "to": 0.20277677641345318,
        "validate": 0.040555355282690636,
        "generated": 0.08111071056538127,
        "content": 0.040555355282690636,
        "end": 0.08111071056538127,
        "build_and_test": 0.040555355282690636,
        "deployment": 0.12166606584807191,
        "begin": 0.08111071056538127,
        "github": 0.12166606584807191,
        "actions": 0.08111071056538127,
        "recipe": 0.040555355282690636,
        "docs": 0.12166606584807191,
        "ci": 0.12166606584807191,
        "update": 0.16222142113076254,
        "yml": 0.040555355282690636,
        "documented": 0.040555355282690636,
        "in": 0.12166606584807191,
        "md": 0.040555355282690636,
        "installs": 0.040555355282690636,
        "the": 0.40555355282690636,
        "package": 0.040555355282690636,
        "editable": 0.040555355282690636,
        "mode": 0.08111071056538127,
        "runs": 0.040555355282690636,
        "and": 0.16222142113076254,
        "optionally": 0.040555355282690636,
        "commits": 0.08111071056538127,
        "changes": 0.040555355282690636,
        "back": 0.040555355282690636,
        "branch": 0.040555355282690636,
        "self": 0.040555355282690636,
        "hosted": 0.040555355282690636,
        "runners": 0.040555355282690636,
        "are": 0.12166606584807191,
        "recommended": 0.040555355282690636,
        "so": 0.040555355282690636,
        "workflow": 0.040555355282690636,
        "can": 0.08111071056538127,
        "reach": 0.040555355282690636,
        "your": 0.040555355282690636,
        "local": 0.08111071056538127,
        "inference": 0.040555355282690636,
        "endpoint": 0.040555355282690636,
        "docgen_llm_base_url": 0.040555355282690636,
        "same": 0.040555355282690636,
        "settings": 0.040555355282690636,
        "apply": 0.040555355282690636,
        "when": 0.12166606584807191,
        "running": 0.040555355282690636,
        "cd": 0.040555355282690636,
        "pipelines": 0.040555355282690636,
        "outside": 0.040555355282690636,
        "publisher": 0.040555355282690636,
        "push": 0.040555355282690636,
        "directly": 0.040555355282690636,
        "publish": 0.040555355282690636,
        "commit": 0.040555355282690636,
        "for": 0.040555355282690636,
        "bootstrap": 0.040555355282690636,
        "scenarios": 0.040555355282690636,
        "open": 0.040555355282690636,
        "prs": 0.040555355282690636,
        "with": 0.040555355282690636,
        "labeled": 0.040555355282690636,
        "summaries": 0.040555355282690636,
        "gh": 0.040555355282690636,
        "cli": 0.040555355282690636,
        "credentials": 0.040555355282690636,
        "available": 0.040555355282690636,
        "troubleshooting": 0.08111071056538127,
        "use": 0.040555355282690636,
        "verbose": 0.040555355282690636,
        "surface": 0.040555355282690636,
        "analyzer": 0.08111071056538127,
        "selection": 0.040555355282690636,
        "prompt": 0.08111071056538127,
        "generation": 0.040555355282690636,
        "post": 0.040555355282690636,
        "processing": 0.040555355282690636,
        "diagnostics": 0.040555355282690636,
        "emitted": 0.040555355282690636,
        "by": 0.040555355282690636,
        "get_logger": 0.040555355282690636,
        "orchestrator": 0.040555355282690636,
        "if": 0.040555355282690636,
        "already": 0.040555355282690636,
        "exists": 0.040555355282690636,
        "init": 0.040555355282690636,
        "will": 0.040555355282690636,
        "abort": 0.040555355282690636,
        "switch": 0.040555355282690636,
        "remove": 0.040555355282690636,
        "file": 0.040555355282690636,
        "before": 0.08111071056538127,
        "re": 0.040555355282690636,
        "initialising": 0.040555355282690636,
        "empty": 0.040555355282690636,
        "failing": 0.040555355282690636,
        "sections": 0.040555355282690636,
        "trigger": 0.040555355282690636,
        "fallback": 0.040555355282690636,
        "stubs": 0.040555355282690636,
        "from": 0.040555355282690636,
        "failsafe": 0.040555355282690636,
        "raised": 0.040555355282690636,
        "reason": 0.040555355282690636,
        "rerun": 0.040555355282690636,
        "once": 0.040555355282690636,
        "underlying": 0.040555355282690636,
        "issue": 0.040555355282690636,
        "is": 0.08111071056538127,
        "fixed": 0.040555355282690636,
        "link": 0.040555355282690636,
        "validation": 0.040555355282690636,
        "issues": 0.040555355282690636,
        "logged": 0.040555355282690636,
        "as": 0.040555355282690636,
        "warnings": 0.040555355282690636,
        "relative": 0.040555355282690636,
        "paths": 0.040555355282690636,
        "add": 0.040555355282690636,
        "missing": 0.040555355282690636,
        "files": 0.040555355282690636,
        "committing": 0.040555355282690636,
        "clear": 0.040555355282690636,
        "manifest_cache": 0.040555355282690636,
        "json": 0.08111071056538127,
        "embeddings": 0.040555355282690636,
        "refactoring": 0.040555355282690636,
        "large": 0.040555355282690636,
        "parts": 0.040555355282690636,
        "of": 0.040555355282690636,
        "repo": 0.040555355282690636,
        "structure": 0.040555355282690636,
        "force": 0.040555355282690636,
        "a": 0.08111071056538127,
        "fresh": 0.040555355282690636,
        "scan": 0.040555355282690636,
        "ensure": 0.040555355282690636,
        "model": 0.040555355282690636,
        "runner": 0.040555355282690636,
        "reachable": 0.040555355282690636,
        "at": 0.040555355282690636,
        "loopback": 0.040555355282690636,
        "url": 0.040555355282690636,
        "remote": 0.040555355282690636
      },
      "text": "python -m pytest tests/analyzers/test_structure.py ``` - Regenerate README fixtures or inspect scorecards stored under `.docgen/` to validate generated content. <!-- docgen:end:build_and_test --> ## Deployment <!-- docgen:begin:deployment --> - GitHub Actions recipe: `docs/ci/docgen-update.yml` (documented in `docs/ci/github-actions.md`) installs the package in editable mode, runs `docgen update`, and optionally commits README changes back to the branch. - Self-hosted runners are recommended so the workflow can reach your local inference endpoint (`DOCGEN_LLM_BASE_URL`). The same settings apply when running in CI/CD pipelines outside GitHub. - `Publisher` can push commits directly (`publish.mode: commit`) for bootstrap scenarios or open PRs with labeled summaries when `gh` CLI credentials are available. <!-- docgen:end:deployment --> ## Troubleshooting <!-- docgen:begin:troubleshooting --> - Use `--verbose` to surface analyzer selection, prompt generation, and post-processing diagnostics emitted by `get_logger(\"orchestrator\")`. - If the README already exists, `docgen init` will abort; switch to `docgen update` or remove the file before re-initialising. - Empty or failing sections trigger fallback stubs from `docgen/failsafe.py`; inspect the raised reason and rerun once the underlying analyzer or prompt issue is fixed. - Link validation issues are logged as warnings. Update relative paths or add missing files before committing generated docs. - Clear `.docgen/manifest_cache.json` and `.docgen/embeddings.json` when refactoring large parts of the repo structure to force a fresh scan. - Ensure the local model runner is reachable at a loopback URL; remote",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "README_before.md#9",
      "vector": {
        "paths": 0.03782347372361169,
        "or": 0.26476431606528184,
        "add": 0.11347042117083507,
        "missing": 0.03782347372361169,
        "files": 0.03782347372361169,
        "before": 0.03782347372361169,
        "committing": 0.03782347372361169,
        "generated": 0.03782347372361169,
        "docs": 0.03782347372361169,
        "clear": 0.03782347372361169,
        "docgen": 0.4538816846833403,
        "manifest_cache": 0.03782347372361169,
        "json": 0.07564694744722338,
        "and": 0.11347042117083507,
        "embeddings": 0.03782347372361169,
        "when": 0.07564694744722338,
        "refactoring": 0.03782347372361169,
        "large": 0.03782347372361169,
        "parts": 0.03782347372361169,
        "of": 0.03782347372361169,
        "the": 0.3404112635125052,
        "repo": 0.03782347372361169,
        "structure": 0.03782347372361169,
        "to": 0.03782347372361169,
        "force": 0.03782347372361169,
        "a": 0.4538816846833403,
        "fresh": 0.03782347372361169,
        "scan": 0.03782347372361169,
        "ensure": 0.03782347372361169,
        "local": 0.07564694744722338,
        "model": 0.07564694744722338,
        "runner": 0.07564694744722338,
        "is": 0.07564694744722338,
        "reachable": 0.03782347372361169,
        "at": 0.03782347372361169,
        "loopback": 0.07564694744722338,
        "url": 0.03782347372361169,
        "remote": 0.07564694744722338,
        "hosts": 0.07564694744722338,
        "are": 0.07564694744722338,
        "intentionally": 0.03782347372361169,
        "rejected": 0.03782347372361169,
        "by": 0.03782347372361169,
        "llmrunner": 0.07564694744722338,
        "for": 0.03782347372361169,
        "security": 0.03782347372361169,
        "end": 0.11347042117083507,
        "troubleshooting": 0.03782347372361169,
        "faq": 0.11347042117083507,
        "begin": 0.07564694744722338,
        "q": 0.15129389489444675,
        "how": 0.03782347372361169,
        "this": 0.07564694744722338,
        "readme": 0.03782347372361169,
        "maintained": 0.03782347372361169,
        "generate": 0.03782347372361169,
        "with": 0.03782347372361169,
        "init": 0.03782347372361169,
        "keep": 0.03782347372361169,
        "it": 0.03782347372361169,
        "current": 0.03782347372361169,
        "via": 0.07564694744722338,
        "update": 0.03782347372361169,
        "optionally": 0.03782347372361169,
        "in": 0.15129389489444675,
        "ci": 0.03782347372361169,
        "using": 0.03782347372361169,
        "provided": 0.03782347372361169,
        "workflow": 0.03782347372361169,
        "what": 0.03782347372361169,
        "happens": 0.03782347372361169,
        "if": 0.03782347372361169,
        "analyzers": 0.11347042117083507,
        "miss": 0.03782347372361169,
        "framework": 0.03782347372361169,
        "command": 0.03782347372361169,
        "signals": 0.03782347372361169,
        "pluggable": 0.03782347372361169,
        "custom": 0.03782347372361169,
        "analyzer": 0.03782347372361169,
        "entry": 0.03782347372361169,
        "point": 0.03782347372361169,
        "group": 0.03782347372361169,
        "extend": 0.03782347372361169,
        "existing": 0.03782347372361169,
        "utilities": 0.03782347372361169,
        "under": 0.03782347372361169,
        "utils": 0.03782347372361169,
        "py": 0.03782347372361169,
        "can": 0.03782347372361169,
        "use": 0.03782347372361169,
        "llm": 0.03782347372361169,
        "endpoint": 0.03782347372361169,
        "no": 0.03782347372361169,
        "enforces": 0.03782347372361169,
        "internal": 0.03782347372361169,
        "supply": 0.03782347372361169,
        "ollama": 0.03782347372361169,
        "instance": 0.03782347372361169,
        "instead": 0.03782347372361169,
        "where": 0.03782347372361169,
        "do": 0.03782347372361169,
        "i": 0.03782347372361169,
        "report": 0.03782347372361169,
        "issues": 0.03782347372361169,
        "propose": 0.03782347372361169,
        "enhancements": 0.03782347372361169,
        "file": 0.03782347372361169,
        "an": 0.03782347372361169,
        "issue": 0.03782347372361169,
        "open": 0.03782347372361169,
        "discussion": 0.03782347372361169,
        "repository": 0.03782347372361169,
        "reference": 0.03782347372361169,
        "relevant": 0.03782347372361169,
        "sections": 0.03782347372361169,
        "spec": 0.15129389489444675,
        "md": 0.11347042117083507,
        "feature_order": 0.07564694744722338,
        "describing": 0.03782347372361169,
        "change": 0.03782347372361169,
        "license": 0.15129389489444675,
        "licensing": 0.03782347372361169,
        "information": 0.03782347372361169,
        "once": 0.03782347372361169,
        "project": 0.03782347372361169,
        "selects": 0.03782347372361169,
        "track": 0.03782347372361169,
        "candidate": 0.03782347372361169,
        "licenses": 0.03782347372361169,
        "alongside": 0.03782347372361169,
        "roadmap": 0.03782347372361169
      },
      "text": "paths or add missing files before committing generated docs. - Clear `.docgen/manifest_cache.json` and `.docgen/embeddings.json` when refactoring large parts of the repo structure to force a fresh scan. - Ensure the local model runner is reachable at a loopback URL; remote hosts are intentionally rejected by `LLMRunner` for security. <!-- docgen:end:troubleshooting --> ## FAQ <!-- docgen:begin:faq --> **Q: How is this README maintained?** A: Generate with `docgen init` and keep it current via `docgen update` (optionally in CI using the provided workflow). **Q: What happens if analyzers miss a framework or command?** A: Signals are pluggable\u2014add a custom analyzer via the `docgen.analyzers` entry-point group or extend the existing utilities under `docgen/analyzers/utils.py`. **Q: Can docgen use a remote LLM endpoint?** A: No. `LLMRunner` enforces loopback/`.internal` hosts; supply a local model runner or Ollama instance instead. **Q: Where do I report issues or propose enhancements?** A: File an issue or open a discussion in this repository and reference the relevant sections in `spec/spec.md` or `spec/feature_order.md` when describing the change. <!-- docgen:end:faq --> ## License <!-- docgen:begin:license --> Add licensing information once the project selects a license. Track candidate licenses alongside the roadmap in `spec/feature_order.md`. <!-- docgen:end:license -->",
      "metadata": {
        "path": "README_before.md",
        "tags": [
          "docs"
        ],
        "hash": "07dc268b5502c1ca88dbc3acab0a15feead554b7b722f9ec3bd0dfdc0027f564"
      }
    },
    {
      "id": "docs/ci/docgen-update.yml#0",
      "vector": {
        "name": 0.2773500981126145,
        "docgen": 0.1849000654084097,
        "update": 0.2311250817605121,
        "on": 0.09245003270420485,
        "push": 0.046225016352102424,
        "branches": 0.09245003270420485,
        "main": 0.13867504905630726,
        "pull_request": 0.13867504905630726,
        "jobs": 0.046225016352102424,
        "readme": 0.1849000654084097,
        "runs": 0.046225016352102424,
        "self": 0.046225016352102424,
        "hosted": 0.046225016352102424,
        "steps": 0.09245003270420485,
        "uses": 0.13867504905630726,
        "actions": 0.2311250817605121,
        "checkout": 0.046225016352102424,
        "v4": 0.09245003270420485,
        "with": 0.13867504905630726,
        "fetch": 0.046225016352102424,
        "depth": 0.046225016352102424,
        "0": 0.046225016352102424,
        "setup": 0.046225016352102424,
        "python": 0.2311250817605121,
        "v5": 0.046225016352102424,
        "version": 0.046225016352102424,
        "3": 0.046225016352102424,
        "11": 0.046225016352102424,
        "cache": 0.09245003270420485,
        "path": 0.046225016352102424,
        "pip": 0.2773500981126145,
        "key": 0.046225016352102424,
        "runner": 0.09245003270420485,
        "os": 0.09245003270420485,
        "hashfiles": 0.046225016352102424,
        "pyproject": 0.046225016352102424,
        "toml": 0.046225016352102424,
        "restore": 0.046225016352102424,
        "keys": 0.046225016352102424,
        "install": 0.13867504905630726,
        "dependencies": 0.046225016352102424,
        "run": 0.2311250817605121,
        "m": 0.13867504905630726,
        "upgrade": 0.046225016352102424,
        "e": 0.046225016352102424,
        "dev": 0.046225016352102424,
        "determine": 0.046225016352102424,
        "diff": 0.1849000654084097,
        "base": 0.2773500981126145,
        "id": 0.046225016352102424,
        "if": 0.09245003270420485,
        "github": 0.2311250817605121,
        "event_name": 0.046225016352102424,
        "then": 0.09245003270420485,
        "echo": 0.09245003270420485,
        "event": 0.046225016352102424,
        "sha": 0.046225016352102424,
        "github_output": 0.09245003270420485,
        "else": 0.046225016352102424,
        "origin": 0.046225016352102424,
        "fi": 0.09245003270420485,
        "env": 0.046225016352102424,
        "docgen_llm_base_url": 0.046225016352102424,
        "http": 0.046225016352102424,
        "localhost": 0.046225016352102424,
        "12434": 0.046225016352102424,
        "engines": 0.046225016352102424,
        "v1": 0.046225016352102424,
        "cli": 0.046225016352102424,
        "outputs": 0.046225016352102424,
        "commit": 0.09245003270420485,
        "md": 0.09245003270420485,
        "optional": 0.046225016352102424,
        "git": 0.1849000654084097,
        "status": 0.046225016352102424,
        "short": 0.046225016352102424,
        "grep": 0.046225016352102424,
        "q": 0.046225016352102424,
        "config": 0.09245003270420485,
        "user": 0.09245003270420485,
        "email": 0.046225016352102424,
        "users": 0.046225016352102424,
        "noreply": 0.046225016352102424,
        "com": 0.046225016352102424,
        "am": 0.046225016352102424,
        "docs": 0.046225016352102424,
        "via": 0.046225016352102424
      },
      "text": "name: docgen-update on: push: branches: [ main ] pull_request: branches: [ main ] jobs: update-readme: runs-on: self-hosted steps: - uses: actions/checkout@v4 with: fetch-depth: 0 - uses: actions/setup-python@v5 with: python-version: '3.11' - uses: actions/cache@v4 with: path: ~/.cache/pip key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }} restore-keys: ${{ runner.os }}-pip- - name: Install dependencies run: | python -m pip install --upgrade pip python -m pip install -e .[dev] - name: Determine diff base id: diff run: | if [ \"${{ github.event_name }}\" = \"pull_request\" ]; then echo \"base=${{ github.event.pull_request.base.sha }}\" >> \"$GITHUB_OUTPUT\" else echo \"base=origin/main\" >> \"$GITHUB_OUTPUT\" fi - name: Run docgen update env: DOCGEN_LLM_BASE_URL: http://localhost:12434/engines/v1 run: python -m docgen.cli update --diff-base ${{ steps.diff.outputs.base }} - name: Commit README.md (optional) run: | if git status --short | grep -q README.md; then git config user.name \"github-actions\" git config user.email \"github-actions@users.noreply.github.com\" git commit -am \"docs: update README via docgen\" fi",
      "metadata": {
        "path": "docs/ci/docgen-update.yml",
        "tags": [
          "docs"
        ],
        "hash": "f3bf5ea7b740892011a0aa14cb06b4bb27a4f3ea348599d85003a66032594538"
      }
    },
    {
      "id": "docs/ci/github-actions.md#0",
      "vector": {
        "github": 0.25925925925925924,
        "actions": 0.2222222222222222,
        "integration": 0.037037037037037035,
        "the": 0.1111111111111111,
        "workflow": 0.037037037037037035,
        "below": 0.037037037037037035,
        "runs": 0.07407407407407407,
        "docgen": 0.25925925925925924,
        "update": 0.2222222222222222,
        "on": 0.1111111111111111,
        "pushes": 0.037037037037037035,
        "and": 0.037037037037037035,
        "pull": 0.037037037037037035,
        "requests": 0.037037037037037035,
        "it": 0.037037037037037035,
        "assumes": 0.037037037037037035,
        "a": 0.037037037037037035,
        "self": 0.07407407407407407,
        "hosted": 0.1111111111111111,
        "runner": 0.14814814814814814,
        "or": 0.037037037037037035,
        "with": 0.14814814814814814,
        "network": 0.037037037037037035,
        "access": 0.07407407407407407,
        "to": 0.037037037037037035,
        "your": 0.037037037037037035,
        "local": 0.07407407407407407,
        "model": 0.037037037037037035,
        "runtime": 0.037037037037037035,
        "job": 0.037037037037037035,
        "skips": 0.037037037037037035,
        "early": 0.037037037037037035,
        "when": 0.037037037037037035,
        "no": 0.037037037037037035,
        "files": 0.037037037037037035,
        "match": 0.037037037037037035,
        "yml": 0.037037037037037035,
        "s": 0.037037037037037035,
        "ci": 0.037037037037037035,
        "watched_globs": 0.037037037037037035,
        "entries": 0.037037037037037035,
        "so": 0.037037037037037035,
        "that": 0.037037037037037035,
        "purely": 0.037037037037037035,
        "documentation": 0.037037037037037035,
        "only": 0.037037037037037035,
        "changes": 0.037037037037037035,
        "do": 0.037037037037037035,
        "not": 0.037037037037037035,
        "trigger": 0.037037037037037035,
        "generator": 0.037037037037037035,
        "yaml": 0.037037037037037035,
        "name": 0.3333333333333333,
        "push": 0.037037037037037035,
        "branches": 0.07407407407407407,
        "main": 0.1111111111111111,
        "pull_request": 0.1111111111111111,
        "jobs": 0.037037037037037035,
        "readme": 0.14814814814814814,
        "requires": 0.037037037037037035,
        "llm": 0.037037037037037035,
        "steps": 0.07407407407407407,
        "checkout": 0.07407407407407407,
        "repository": 0.037037037037037035,
        "uses": 0.1111111111111111,
        "v4": 0.07407407407407407,
        "fetch": 0.037037037037037035,
        "depth": 0.037037037037037035,
        "0": 0.037037037037037035,
        "set": 0.037037037037037035,
        "up": 0.037037037037037035,
        "python": 0.2222222222222222,
        "setup": 0.037037037037037035,
        "v5": 0.037037037037037035,
        "version": 0.037037037037037035,
        "3": 0.037037037037037035,
        "11": 0.037037037037037035,
        "cache": 0.1111111111111111,
        "pip": 0.25925925925925924,
        "dependencies": 0.037037037037037035,
        "path": 0.037037037037037035,
        "key": 0.037037037037037035,
        "os": 0.07407407407407407,
        "hashfiles": 0.037037037037037035,
        "pyproject": 0.037037037037037035,
        "toml": 0.037037037037037035,
        "restore": 0.037037037037037035,
        "keys": 0.037037037037037035,
        "install": 0.1111111111111111,
        "in": 0.037037037037037035,
        "editable": 0.037037037037037035,
        "mode": 0.037037037037037035,
        "run": 0.18518518518518517,
        "m": 0.1111111111111111,
        "upgrade": 0.037037037037037035,
        "e": 0.037037037037037035,
        "dev": 0.037037037037037035,
        "determine": 0.037037037037037035,
        "diff": 0.14814814814814814,
        "base": 0.2222222222222222,
        "id": 0.037037037037037035,
        "if": 0.1111111111111111,
        "event_name": 0.037037037037037035,
        "then": 0.07407407407407407,
        "echo": 0.07407407407407407,
        "event": 0.037037037037037035,
        "sha": 0.037037037037037035,
        "github_output": 0.07407407407407407,
        "else": 0.037037037037037035,
        "origin": 0.037037037037037035,
        "fi": 0.07407407407407407,
        "env": 0.037037037037037035,
        "docgen_llm_base_url": 0.037037037037037035,
        "http": 0.037037037037037035,
        "localhost": 0.037037037037037035,
        "12434": 0.037037037037037035,
        "engines": 0.037037037037037035,
        "v1": 0.037037037037037035,
        "cli": 0.037037037037037035,
        "outputs": 0.037037037037037035,
        "commit": 0.07407407407407407,
        "updates": 0.037037037037037035,
        "any": 0.037037037037037035,
        "git": 0.14814814814814814,
        "status": 0.037037037037037035,
        "short": 0.037037037037037035,
        "grep": 0.037037037037037035,
        "q": 0.037037037037037035,
        "md": 0.037037037037037035,
        "config": 0.07407407407407407,
        "user": 0.07407407407407407,
        "email": 0.037037037037037035,
        "users": 0.037037037037037035,
        "noreply": 0.037037037037037035,
        "com": 0.037037037037037035,
        "am": 0.037037037037037035,
        "docs": 0.037037037037037035,
        "via": 0.037037037037037035
      },
      "text": "# GitHub Actions Integration The workflow below runs `docgen update` on pushes and pull requests. It assumes a self-hosted runner (or GitHub-hosted runner with network access to your local model runtime). The job skips early when no files match `.docgen.yml`'s `ci.watched_globs` entries so that purely documentation-only changes do not trigger the generator. ```yaml name: docgen-update on: push: branches: [ main ] pull_request: branches: [ main ] jobs: update-readme: runs-on: self-hosted # requires local LLM access steps: - name: Checkout repository uses: actions/checkout@v4 with: fetch-depth: 0 - name: Set up Python uses: actions/setup-python@v5 with: python-version: '3.11' - name: Cache pip dependencies uses: actions/cache@v4 with: path: ~/.cache/pip key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }} restore-keys: ${{ runner.os }}-pip- - name: Install docgen in editable mode run: | python -m pip install --upgrade pip python -m pip install -e .[dev] - name: Determine diff base id: diff run: | if [ \"${{ github.event_name }}\" = \"pull_request\" ]; then echo \"base=${{ github.event.pull_request.base.sha }}\" >> \"$GITHUB_OUTPUT\" else echo \"base=origin/main\" >> \"$GITHUB_OUTPUT\" fi - name: Run docgen update env: DOCGEN_LLM_BASE_URL: http://localhost:12434/engines/v1 run: | python -m docgen.cli update --diff-base ${{ steps.diff.outputs.base }} - name: Commit README updates (if any) run: | if git status --short | grep -q README.md; then git config user.name \"github-actions\" git config user.email \"github-actions@users.noreply.github.com\" git commit -am \"docs: update README via docgen\" fi -",
      "metadata": {
        "path": "docs/ci/github-actions.md",
        "tags": [
          "docs"
        ],
        "hash": "518fe87441e7f08aadb0ed175d54a5ce3c227af17677678096af6df070190e59"
      }
    },
    {
      "id": "docs/ci/github-actions.md#1",
      "vector": {
        "diff": 0.1363988678940947,
        "base": 0.1363988678940947,
        "steps": 0.06819943394704735,
        "outputs": 0.06819943394704735,
        "name": 0.2727977357881894,
        "commit": 0.1363988678940947,
        "readme": 0.4091966036822841,
        "updates": 0.06819943394704735,
        "if": 0.20459830184114206,
        "any": 0.06819943394704735,
        "run": 0.06819943394704735,
        "git": 0.2727977357881894,
        "status": 0.06819943394704735,
        "short": 0.06819943394704735,
        "grep": 0.06819943394704735,
        "q": 0.06819943394704735,
        "md": 0.1363988678940947,
        "then": 0.06819943394704735,
        "config": 0.1363988678940947,
        "user": 0.1363988678940947,
        "github": 0.2727977357881894,
        "actions": 0.20459830184114206,
        "email": 0.06819943394704735,
        "users": 0.06819943394704735,
        "noreply": 0.06819943394704735,
        "com": 0.06819943394704735,
        "am": 0.06819943394704735,
        "docs": 0.06819943394704735,
        "update": 0.06819943394704735,
        "via": 0.06819943394704735,
        "docgen": 0.06819943394704735,
        "fi": 0.06819943394704735,
        "upload": 0.1363988678940947,
        "artifact": 0.1363988678940947,
        "success": 0.06819943394704735,
        "uses": 0.06819943394704735,
        "v4": 0.06819943394704735,
        "with": 0.1363988678940947,
        "generated": 0.06819943394704735,
        "path": 0.06819943394704735,
        "note": 0.06819943394704735,
        "the": 0.20459830184114206,
        "workflow": 0.06819943394704735,
        "relies": 0.06819943394704735,
        "on": 0.06819943394704735,
        "docgen_llm_base_url": 0.06819943394704735,
        "pointing": 0.06819943394704735,
        "to": 0.20459830184114206,
        "a": 0.06819943394704735,
        "local": 0.06819943394704735,
        "or": 0.1363988678940947,
        "private": 0.1363988678940947,
        "inference": 0.06819943394704735,
        "endpoint": 0.06819943394704735,
        "for": 0.06819943394704735,
        "hosted": 0.06819943394704735,
        "runners": 0.06819943394704735,
        "you": 0.06819943394704735,
        "will": 0.06819943394704735,
        "need": 0.06819943394704735,
        "expose": 0.06819943394704735,
        "runner": 0.06819943394704735,
        "within": 0.06819943394704735,
        "your": 0.06819943394704735,
        "network": 0.06819943394704735,
        "switch": 0.06819943394704735,
        "ollama": 0.06819943394704735,
        "cli": 0.06819943394704735,
        "appropriate": 0.06819943394704735,
        "caching": 0.06819943394704735
      },
      "text": "--diff-base ${{ steps.diff.outputs.base }} - name: Commit README updates (if any) run: | if git status --short | grep -q README.md; then git config user.name \"github-actions\" git config user.email \"github-actions@users.noreply.github.com\" git commit -am \"docs: update README via docgen\" fi - name: Upload README artifact if: success() uses: actions/upload-artifact@v4 with: name: generated-readme path: README.md ``` > **Note:** the workflow relies on `DOCGEN_LLM_BASE_URL` pointing to a local or > private inference endpoint. For GitHub-hosted runners you will need to expose > the runner within your private network or switch to the `ollama` CLI with > appropriate caching. ```",
      "metadata": {
        "path": "docs/ci/github-actions.md",
        "tags": [
          "docs"
        ],
        "hash": "518fe87441e7f08aadb0ed175d54a5ce3c227af17677678096af6df070190e59"
      }
    },
    {
      "id": "spec/feature_checklist.md#0",
      "vector": {
        "intelligent": 0.03809696588797296,
        "readme": 0.1142908976639189,
        "generator": 0.03809696588797296,
        "feature": 0.03809696588797296,
        "checklist": 0.03809696588797296,
        "status": 0.03809696588797296,
        "legend": 0.03809696588797296,
        "not": 0.03809696588797296,
        "started": 0.03809696588797296,
        "in": 0.03809696588797296,
        "progress": 0.03809696588797296,
        "done": 0.03809696588797296,
        "scope": 0.03809696588797296,
        "tags": 0.03809696588797296,
        "mvp": 0.4571635906556756,
        "required": 0.03809696588797296,
        "for": 0.1142908976639189,
        "proof": 0.03809696588797296,
        "of": 0.07619393177594593,
        "concept": 0.03809696588797296,
        "next": 0.19048482943986483,
        "nice": 0.03809696588797296,
        "to": 0.1142908976639189,
        "have": 0.03809696588797296,
        "soon": 0.03809696588797296,
        "stretch": 0.1142908976639189,
        "later": 0.03809696588797296,
        "1": 0.07619393177594593,
        "core": 0.03809696588797296,
        "workflows": 0.03809696588797296,
        "x": 0.6095514542075674,
        "docgen": 0.15238786355189185,
        "init": 0.03809696588797296,
        "initialize": 0.03809696588797296,
        "repos": 0.03809696588797296,
        "without": 0.07619393177594593,
        "docs": 0.1142908976639189,
        "update": 0.03809696588797296,
        "detect": 0.03809696588797296,
        "changes": 0.03809696588797296,
        "on": 0.03809696588797296,
        "commit": 0.03809696588797296,
        "pr": 0.03809696588797296,
        "and": 0.03809696588797296,
        "patch": 0.03809696588797296,
        "affected": 0.03809696588797296,
        "sections": 0.03809696588797296,
        "regenerate": 0.03809696588797296,
        "manual": 0.03809696588797296,
        "full": 0.03809696588797296,
        "partial": 0.03809696588797296,
        "regeneration": 0.03809696588797296,
        "dry": 0.07619393177594593,
        "run": 0.07619393177594593,
        "mode": 0.07619393177594593,
        "preview": 0.03809696588797296,
        "diffs": 0.03809696588797296,
        "writing": 0.03809696588797296,
        "service": 0.03809696588797296,
        "fastapi": 0.07619393177594593,
        "endpoints": 0.03809696588797296,
        "ci": 0.07619393177594593,
        "bots": 0.03809696588797296,
        "2": 0.03809696588797296,
        "repository": 0.03809696588797296,
        "scanning": 0.03809696588797296,
        "indexing": 0.03809696588797296,
        "walk": 0.03809696588797296,
        "filesystem": 0.03809696588797296,
        "with": 0.03809696588797296,
        "ignore": 0.03809696588797296,
        "rules": 0.03809696588797296,
        "gitignore": 0.03809696588797296,
        "yml": 0.03809696588797296,
        "build": 0.07619393177594593,
        "normalized": 0.03809696588797296,
        "manifest": 0.07619393177594593,
        "files": 0.07619393177594593,
        "roles": 0.03809696588797296,
        "src": 0.03809696588797296,
        "test": 0.03809696588797296,
        "config": 0.07619393177594593,
        "infra": 0.03809696588797296,
        "hash": 0.03809696588797296,
        "cache": 0.03809696588797296,
        "file": 0.03809696588797296,
        "metadata": 0.03809696588797296,
        "speed": 0.03809696588797296,
        "subsequent": 0.03809696588797296,
        "runs": 0.03809696588797296,
        "entrypoint": 0.07619393177594593,
        "detection": 0.07619393177594593,
        "e": 0.03809696588797296,
        "g": 0.03809696588797296,
        "main": 0.03809696588797296,
        "springbootapplication": 0.03809696588797296,
        "app": 0.03809696588797296,
        "monorepo": 0.07619393177594593,
        "module": 0.03809696588797296,
        "3": 0.03809696588797296,
        "analyzers": 0.19048482943986483,
        "plugin": 0.03809696588797296,
        "based": 0.03809696588797296,
        "language": 0.03809696588797296,
        "python": 0.03809696588797296,
        "java": 0.03809696588797296,
        "node": 0.03809696588797296,
        "js": 0.03809696588797296,
        "tier": 0.03809696588797296,
        "poetry": 0.03809696588797296,
        "setuptools": 0.03809696588797296,
        "maven": 0.03809696588797296,
        "gradle": 0.03809696588797296,
        "npm": 0.03809696588797296,
        "pnpm": 0.03809696588797296,
        "yarn": 0.03809696588797296,
        "dependency": 0.03809696588797296,
        "from": 0.03809696588797296,
        "pattern": 0.03809696588797296,
        "docker": 0.03809696588797296,
        "k8s": 0.03809696588797296,
        "layout": 0.03809696588797296,
        "tree": 0.03809696588797296,
        "sitter": 0.03809696588797296,
        "powered": 0.03809696588797296,
        "symbol": 0.03809696588797296,
        "extraction": 0.03809696588797296,
        "flagged": 0.03809696588797296,
        "4": 0.03809696588797296,
        "knowledge": 0.03809696588797296,
        "store": 0.03809696588797296,
        "rag": 0.03809696588797296,
        "local": 0.03809696588797296,
        "embedding": 0.03809696588797296,
        "model": 0.03809696588797296,
        "chunking": 0.03809696588797296,
        "strategy": 0.03809696588797296,
        "index": 0.03809696588797296,
        "top": 0.03809696588797296,
        "n": 0.03809696588797296,
        "source": 0.03809696588797296,
        "headers": 0.03809696588797296,
        "comments": 0.03809696588797296
      },
      "text": "# Intelligent README Generator \u2014 Feature Checklist > Status legend: \u2610 Not started \u00b7 \u25d0 In progress \u00b7 \u2714 Done > Scope tags: **[MVP]** required for proof\u2011of\u2011concept, **[NEXT]** nice\u2011to\u2011have soon, **[STRETCH]** later ## 1) Core Workflows - [x] **docgen init** \u2014 Initialize README for repos without docs **[MVP]** - [x] **docgen update** \u2014 Detect changes on commit/PR and patch affected sections **[MVP]** - [ ] **docgen regenerate** \u2014 Manual full/partial regeneration **[MVP]** - [x] Dry\u2011run mode (`--dry-run`) to preview diffs without writing **[NEXT]** - [x] Service mode (FastAPI) endpoints for CI/bots **[STRETCH]** ## 2) Repository Scanning & Indexing - [x] Walk filesystem with ignore rules (`.gitignore`, `.docgen.yml`) **[MVP]** - [x] Build normalized manifest of files, roles (src/test/docs/config/infra) **[MVP]** - [x] Hash & cache file metadata to speed subsequent runs **[MVP]** - [x] Entrypoint detection (e.g., `main()`, `@SpringBootApplication`, FastAPI app) **[NEXT]** - [x] Monorepo module detection **[NEXT]** ## 3) Analyzers (Plugin\u2011based) - [x] Language analyzers: Python, Java, Node.js (Tier\u20111) **[MVP]** - [x] Build analyzers: Poetry/Setuptools, Maven/Gradle, npm/pnpm/yarn **[MVP]** - [x] Dependency analyzers from manifest files **[MVP]** - [x] Pattern analyzers: Docker/K8s, CI config, monorepo layout **[NEXT]** - [x] Tree\u2011sitter powered symbol/entrypoint extraction (flagged) **[STRETCH]** ## 4) Knowledge Store (RAG) - [x] Local embedding model + chunking strategy **[MVP]** - [x] Index `README`, `/docs`, top N source headers & comments **[MVP]** -",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_checklist.md#1",
      "vector": {
        "ci": 0.03943615033625495,
        "config": 0.0788723006725099,
        "monorepo": 0.03943615033625495,
        "layout": 0.03943615033625495,
        "next": 0.3154892026900396,
        "x": 0.6309784053800792,
        "tree": 0.03943615033625495,
        "sitter": 0.03943615033625495,
        "powered": 0.03943615033625495,
        "symbol": 0.03943615033625495,
        "entrypoint": 0.03943615033625495,
        "extraction": 0.03943615033625495,
        "flagged": 0.03943615033625495,
        "stretch": 0.0788723006725099,
        "4": 0.03943615033625495,
        "knowledge": 0.0788723006725099,
        "store": 0.03943615033625495,
        "rag": 0.03943615033625495,
        "local": 0.0788723006725099,
        "embedding": 0.03943615033625495,
        "model": 0.0788723006725099,
        "chunking": 0.03943615033625495,
        "strategy": 0.03943615033625495,
        "mvp": 0.3943615033625495,
        "index": 0.03943615033625495,
        "readme": 0.03943615033625495,
        "docs": 0.0788723006725099,
        "top": 0.0788723006725099,
        "n": 0.03943615033625495,
        "source": 0.03943615033625495,
        "headers": 0.03943615033625495,
        "comments": 0.03943615033625495,
        "section": 0.19718075168127475,
        "scoped": 0.03943615033625495,
        "retrieval": 0.03943615033625495,
        "k": 0.03943615033625495,
        "per": 0.0788723006725099,
        "lightweight": 0.03943615033625495,
        "graph": 0.03943615033625495,
        "of": 0.03943615033625495,
        "modules": 0.03943615033625495,
        "services": 0.03943615033625495,
        "signals": 0.03943615033625495,
        "5": 0.03943615033625495,
        "prompting": 0.03943615033625495,
        "templates": 0.11830845100876484,
        "jinja2": 0.03943615033625495,
        "intro": 0.03943615033625495,
        "features": 0.03943615033625495,
        "architecture": 0.0788723006725099,
        "quickstart": 0.03943615033625495,
        "build": 0.0788723006725099,
        "test": 0.03943615033625495,
        "deployment": 0.03943615033625495,
        "troubleshooting": 0.03943615033625495,
        "faq": 0.03943615033625495,
        "license": 0.0788723006725099,
        "guardrailed": 0.03943615033625495,
        "system": 0.03943615033625495,
        "prompt": 0.03943615033625495,
        "no": 0.03943615033625495,
        "speculation": 0.03943615033625495,
        "cite": 0.03943615033625495,
        "repo": 0.03943615033625495,
        "facts": 0.03943615033625495,
        "only": 0.03943615033625495,
        "token": 0.03943615033625495,
        "budgeting": 0.03943615033625495,
        "streaming": 0.03943615033625495,
        "by": 0.03943615033625495,
        "generation": 0.03943615033625495,
        "template": 0.03943615033625495,
        "override": 0.03943615033625495,
        "mechanism": 0.03943615033625495,
        "j2": 0.03943615033625495,
        "style": 0.03943615033625495,
        "presets": 0.03943615033625495,
        "concise": 0.03943615033625495,
        "vs": 0.03943615033625495,
        "comprehensive": 0.03943615033625495,
        "mermaid": 0.03943615033625495,
        "js": 0.03943615033625495,
        "diagrams": 0.03943615033625495,
        "for": 0.0788723006725099,
        "flow": 0.03943615033625495,
        "sections": 0.0788723006725099,
        "where": 0.03943615033625495,
        "appropriate": 0.03943615033625495,
        "6": 0.03943615033625495,
        "llm": 0.03943615033625495,
        "runner": 0.0788723006725099,
        "http": 0.03943615033625495,
        "adapter": 0.0788723006725099,
        "host": 0.03943615033625495,
        "container": 0.03943615033625495,
        "defaults": 0.0788723006725099,
        "env": 0.03943615033625495,
        "api": 0.03943615033625495,
        "key": 0.03943615033625495,
        "overrides": 0.03943615033625495,
        "llama": 0.03943615033625495,
        "cpp": 0.03943615033625495,
        "structured": 0.03943615033625495,
        "outputs": 0.03943615033625495,
        "tool": 0.03943615033625495,
        "use": 0.03943615033625495,
        "compatibility": 0.03943615033625495,
        "7": 0.03943615033625495,
        "post": 0.03943615033625495,
        "processing": 0.03943615033625495,
        "markdown": 0.03943615033625495,
        "lint": 0.03943615033625495,
        "heading": 0.03943615033625495,
        "hierarchy": 0.03943615033625495,
        "code": 0.03943615033625495,
        "fences": 0.03943615033625495,
        "line": 0.03943615033625495,
        "length": 0.03943615033625495,
        "auto": 0.03943615033625495,
        "toc": 0.03943615033625495,
        "level": 0.03943615033625495,
        "3": 0.03943615033625495,
        "badges": 0.03943615033625495,
        "coverage": 0.03943615033625495,
        "with": 0.03943615033625495,
        "safe": 0.03943615033625495,
        "link": 0.03943615033625495,
        "validator": 0.03943615033625495,
        "relative": 0.03943615033625495,
        "absolute": 0.03943615033625495,
        "managed": 0.03943615033625495,
        "markers": 0.03943615033625495,
        "idempotent": 0.03943615033625495,
        "patching": 0.03943615033625495,
        "docgen": 0.03943615033625495,
        "begin": 0.03943615033625495,
        "end": 0.03943615033625495,
        "8": 0.03943615033625495,
        "git": 0.03943615033625495,
        "integration": 0.03943615033625495,
        "diff": 0.03943615033625495,
        "detection": 0.03943615033625495,
        "map": 0.03943615033625495,
        "changed": 0.03943615033625495,
        "files": 0.03943615033625495,
        "impacted": 0.03943615033625495
      },
      "text": "CI config, monorepo layout **[NEXT]** - [x] Tree\u2011sitter powered symbol/entrypoint extraction (flagged) **[STRETCH]** ## 4) Knowledge Store (RAG) - [x] Local embedding model + chunking strategy **[MVP]** - [x] Index `README`, `/docs`, top N source headers & comments **[MVP]** - [x] Section\u2011scoped retrieval (top\u2011k per section) **[MVP]** - [ ] Lightweight knowledge graph of modules/services/signals **[NEXT]** ## 5) Prompting & Templates - [x] Jinja2 templates per section (intro, features, architecture, quickstart, config, build/test, deployment, troubleshooting, FAQ, license) **[MVP]** - [ ] Guardrailed system prompt (\u201cno speculation; cite repo facts only\u201d) **[MVP]** - [ ] Token budgeting & streaming section-by-section generation **[MVP]** - [x] Template override mechanism (`docs/templates/*.j2`) **[NEXT]** - [x] Style presets: concise vs comprehensive **[NEXT]** - [x] Mermaid.js diagrams for architecture/flow sections where appropriate **[NEXT]** ## 6) Local LLM Runner - [x] Model Runner HTTP adapter (host/container defaults, env/API key overrides) **[MVP]** - [x] llama.cpp adapter **[NEXT]** - [ ] Structured outputs / tool\u2011use compatibility **[STRETCH]** ## 7) Post\u2011Processing - [x] Markdown lint: heading hierarchy, code fences, line length **[MVP]** - [x] Auto ToC (\u2264 level 3) **[MVP]** - [x] Badges (build, coverage, license) with safe defaults **[NEXT]** - [x] Link validator (relative/absolute) **[NEXT]** - [x] Managed markers for idempotent patching (`<!-- docgen:begin:end -->`) **[MVP]** ## 8) Git Integration - [x] Diff detection (map changed files \u2192 impacted sections)",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_checklist.md#2",
      "vector": {
        "x": 0.6172133998483676,
        "badges": 0.03857583749052298,
        "build": 0.07715167498104596,
        "coverage": 0.03857583749052298,
        "license": 0.03857583749052298,
        "with": 0.07715167498104596,
        "safe": 0.03857583749052298,
        "defaults": 0.03857583749052298,
        "next": 0.3086066999241838,
        "link": 0.03857583749052298,
        "validator": 0.03857583749052298,
        "relative": 0.03857583749052298,
        "absolute": 0.03857583749052298,
        "managed": 0.03857583749052298,
        "markers": 0.03857583749052298,
        "for": 0.11572751247156893,
        "idempotent": 0.03857583749052298,
        "patching": 0.03857583749052298,
        "docgen": 0.07715167498104596,
        "begin": 0.03857583749052298,
        "end": 0.03857583749052298,
        "mvp": 0.4629100498862757,
        "8": 0.03857583749052298,
        "git": 0.03857583749052298,
        "integration": 0.07715167498104596,
        "diff": 0.03857583749052298,
        "detection": 0.03857583749052298,
        "map": 0.03857583749052298,
        "changed": 0.03857583749052298,
        "files": 0.03857583749052298,
        "impacted": 0.03857583749052298,
        "sections": 0.03857583749052298,
        "branch": 0.03857583749052298,
        "pr": 0.07715167498104596,
        "creation": 0.03857583749052298,
        "summary": 0.03857583749052298,
        "of": 0.03857583749052298,
        "readme": 0.11572751247156893,
        "deltas": 0.03857583749052298,
        "commit": 0.03857583749052298,
        "mode": 0.03857583749052298,
        "init": 0.03857583749052298,
        "or": 0.03857583749052298,
        "small": 0.03857583749052298,
        "changes": 0.07715167498104596,
        "configurable": 0.03857583749052298,
        "prevent": 0.03857583749052298,
        "loops": 0.03857583749052298,
        "on": 0.07715167498104596,
        "only": 0.07715167498104596,
        "9": 0.03857583749052298,
        "configuration": 0.03857583749052298,
        "parse": 0.03857583749052298,
        "yml": 0.03857583749052298,
        "llm": 0.03857583749052298,
        "style": 0.03857583749052298,
        "analyzers": 0.03857583749052298,
        "publish": 0.03857583749052298,
        "path": 0.03857583749052298,
        "exclusions": 0.03857583749052298,
        "watched_globs": 0.03857583749052298,
        "ci": 0.11572751247156893,
        "triggers": 0.03857583749052298,
        "per": 0.07715167498104596,
        "section": 0.03857583749052298,
        "off": 0.03857583749052298,
        "toggles": 0.03857583749052298,
        "and": 0.11572751247156893,
        "titles": 0.03857583749052298,
        "10": 0.03857583749052298,
        "github": 0.03857583749052298,
        "actions": 0.03857583749052298,
        "example": 0.03857583749052298,
        "workflow": 0.03857583749052298,
        "gitlab": 0.03857583749052298,
        "bitbucket": 0.03857583749052298,
        "pipelines": 0.03857583749052298,
        "samples": 0.03857583749052298,
        "labeling": 0.03857583749052298,
        "docs": 0.03857583749052298,
        "auto": 0.03857583749052298,
        "update": 0.03857583749052298,
        "behavior": 0.03857583749052298,
        "11": 0.03857583749052298,
        "security": 0.03857583749052298,
        "privacy": 0.03857583749052298,
        "local": 0.03857583749052298,
        "models": 0.03857583749052298,
        "never": 0.03857583749052298,
        "exfiltrate": 0.03857583749052298,
        "code": 0.03857583749052298,
        "respect": 0.03857583749052298,
        "gitignore": 0.03857583749052298,
        "exclude": 0.03857583749052298,
        "large": 0.03857583749052298,
        "binaries": 0.03857583749052298,
        "secrets": 0.03857583749052298,
        "optional": 0.03857583749052298,
        "simple": 0.03857583749052298,
        "secret": 0.03857583749052298,
        "scanner": 0.03857583749052298,
        "gate": 0.03857583749052298,
        "12": 0.03857583749052298,
        "multi": 0.03857583749052298,
        "language": 0.03857583749052298,
        "project": 0.03857583749052298,
        "types": 0.03857583749052298,
        "tier": 0.07715167498104596,
        "1": 0.03857583749052298,
        "python": 0.03857583749052298,
        "poetry": 0.03857583749052298,
        "setuptools": 0.03857583749052298,
        "java": 0.03857583749052298,
        "maven": 0.03857583749052298,
        "gradle": 0.03857583749052298,
        "spring": 0.03857583749052298,
        "boot": 0.03857583749052298,
        "node": 0.03857583749052298,
        "js": 0.03857583749052298,
        "npm": 0.03857583749052298,
        "pnpm": 0.03857583749052298,
        "express": 0.03857583749052298,
        "2": 0.03857583749052298,
        "go": 0.03857583749052298,
        "rust": 0.03857583749052298,
        "ruby": 0.03857583749052298,
        "php": 0.03857583749052298,
        "stretch": 0.03857583749052298,
        "framework": 0.03857583749052298,
        "aware": 0.03857583749052298,
        "quickstart": 0.03857583749052298,
        "commands": 0.03857583749052298,
        "system": 0.03857583749052298,
        "13": 0.03857583749052298,
        "quality": 0.03857583749052298,
        "gates": 0.03857583749052298,
        "evaluation": 0.03857583749052298,
        "command": 0.03857583749052298,
        "validation": 0.03857583749052298,
        "existence": 0.03857583749052298,
        "checks": 0.07715167498104596,
        "no": 0.03857583749052298,
        "hallucination": 0.03857583749052298,
        "reject": 0.03857583749052298,
        "facts": 0.03857583749052298,
        "not": 0.03857583749052298
      },
      "text": "[x] Badges (build, coverage, license) with safe defaults **[NEXT]** - [x] Link validator (relative/absolute) **[NEXT]** - [x] Managed markers for idempotent patching (`<!-- docgen:begin:end -->`) **[MVP]** ## 8) Git Integration - [x] Diff detection (map changed files \u2192 impacted sections) **[MVP]** - [x] Branch + PR creation with summary of README deltas **[MVP]** - [x] Commit mode for init or small changes (configurable) **[NEXT]** - [x] Prevent loops on README\u2011only changes **[MVP]** ## 9) Configuration - [x] Parse `.docgen.yml` (LLM, readme style, analyzers, publish) **[MVP]** - [x] Path exclusions & `watched_globs` for CI triggers **[MVP]** - [ ] Per-section on/off toggles and titles **[NEXT]** ## 10) CI Integration - [x] GitHub Actions example workflow **[MVP]** - [ ] GitLab CI and Bitbucket Pipelines samples **[NEXT]** - [x] Labeling (`docs:auto`) and PR update behavior **[NEXT]** ## 11) Security & Privacy - [x] Local-only models; never exfiltrate code **[MVP]** - [ ] Respect `.gitignore`; exclude large binaries/secrets **[MVP]** - [ ] Optional simple secret scanner gate **[NEXT]** ## 12) Multi\u2011Language & Project Types - [x] Tier\u20111: Python (Poetry/Setuptools), Java (Maven/Gradle/Spring Boot), Node.js (npm/pnpm/Express/Next) **[MVP]** - [ ] Tier\u20112: Go, Rust, Ruby, PHP **[STRETCH]** - [x] Framework\u2011aware quickstart commands per build system **[MVP]** ## 13) Quality Gates & Evaluation - [x] Command validation (existence checks) **[MVP]** - [x] No-hallucination checks: reject facts not",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_checklist.md#3",
      "vector": {
        "npm": 0.052999894000318,
        "pnpm": 0.052999894000318,
        "express": 0.052999894000318,
        "next": 0.211999576001272,
        "mvp": 0.476999046002862,
        "tier": 0.052999894000318,
        "2": 0.052999894000318,
        "go": 0.052999894000318,
        "rust": 0.052999894000318,
        "ruby": 0.052999894000318,
        "php": 0.052999894000318,
        "stretch": 0.052999894000318,
        "x": 0.5829988340034981,
        "framework": 0.052999894000318,
        "aware": 0.052999894000318,
        "quickstart": 0.052999894000318,
        "commands": 0.052999894000318,
        "per": 0.105999788000636,
        "build": 0.052999894000318,
        "system": 0.052999894000318,
        "13": 0.052999894000318,
        "quality": 0.052999894000318,
        "gates": 0.052999894000318,
        "evaluation": 0.052999894000318,
        "command": 0.052999894000318,
        "validation": 0.052999894000318,
        "existence": 0.052999894000318,
        "checks": 0.105999788000636,
        "no": 0.052999894000318,
        "hallucination": 0.052999894000318,
        "reject": 0.052999894000318,
        "facts": 0.052999894000318,
        "not": 0.052999894000318,
        "in": 0.052999894000318,
        "signals": 0.052999894000318,
        "rag": 0.105999788000636,
        "readme": 0.105999788000636,
        "scorecard": 0.052999894000318,
        "coverage": 0.052999894000318,
        "buildability": 0.052999894000318,
        "link": 0.052999894000318,
        "validity": 0.052999894000318,
        "diff": 0.052999894000318,
        "alignment": 0.052999894000318,
        "lint": 0.105999788000636,
        "14": 0.052999894000318,
        "performance": 0.052999894000318,
        "caching": 0.052999894000318,
        "persist": 0.052999894000318,
        "analyzer": 0.105999788000636,
        "outputs": 0.052999894000318,
        "embeddings": 0.052999894000318,
        "under": 0.052999894000318,
        "docgen": 0.052999894000318,
        "incremental": 0.052999894000318,
        "refresh": 0.052999894000318,
        "changed": 0.052999894000318,
        "files": 0.052999894000318,
        "only": 0.052999894000318,
        "15": 0.052999894000318,
        "error": 0.052999894000318,
        "handling": 0.052999894000318,
        "ux": 0.052999894000318,
        "fail": 0.052999894000318,
        "safe": 0.052999894000318,
        "stub": 0.052999894000318,
        "generation": 0.052999894000318,
        "when": 0.052999894000318,
        "evidence": 0.052999894000318,
        "is": 0.052999894000318,
        "insufficient": 0.052999894000318,
        "clear": 0.052999894000318,
        "run": 0.052999894000318,
        "logs": 0.052999894000318,
        "pr": 0.052999894000318,
        "body": 0.052999894000318,
        "with": 0.052999894000318,
        "rationale": 0.052999894000318,
        "sections": 0.052999894000318,
        "updated": 0.052999894000318,
        "because": 0.052999894000318,
        "helpful": 0.052999894000318,
        "cli": 0.052999894000318,
        "errors": 0.052999894000318,
        "and": 0.105999788000636,
        "verbose": 0.052999894000318,
        "flag": 0.052999894000318,
        "works": 0.052999894000318,
        "pre": 0.052999894000318,
        "post": 0.052999894000318,
        "subcommand": 0.052999894000318,
        "16": 0.052999894000318,
        "extensibility": 0.052999894000318,
        "abc": 0.052999894000318,
        "plugin": 0.052999894000318,
        "discovery": 0.052999894000318,
        "template": 0.052999894000318,
        "packs": 0.052999894000318,
        "org": 0.052999894000318,
        "style": 0.105999788000636,
        "definition": 0.052999894000318,
        "of": 0.052999894000318,
        "done": 0.052999894000318,
        "section": 0.052999894000318,
        "passing": 0.052999894000318,
        "unit": 0.052999894000318,
        "integration": 0.052999894000318,
        "tests": 0.052999894000318,
        "for": 0.052999894000318,
        "core": 0.052999894000318,
        "logic": 0.052999894000318,
        "golden": 0.052999894000318,
        "regression": 0.052999894000318,
        "test": 0.052999894000318,
        "s": 0.052999894000318,
        "meets": 0.052999894000318,
        "requirements": 0.052999894000318
      },
      "text": "(npm/pnpm/Express/Next) **[MVP]** - [ ] Tier\u20112: Go, Rust, Ruby, PHP **[STRETCH]** - [x] Framework\u2011aware quickstart commands per build system **[MVP]** ## 13) Quality Gates & Evaluation - [x] Command validation (existence checks) **[MVP]** - [x] No-hallucination checks: reject facts not in signals/RAG **[MVP]** - [x] README scorecard (coverage, buildability, link validity, diff alignment, lint) **[NEXT]** ## 14) Performance & Caching - [x] Persist analyzer outputs & embeddings under `.docgen/` **[MVP]** - [x] Incremental RAG refresh (changed files only) **[NEXT]** ## 15) Error Handling & UX - [x] Fail-safe stub generation when evidence is insufficient **[MVP]** - [x] Clear run logs + PR body with rationale (\u201csections updated because\u2026\u201d) **[MVP]** - [x] Helpful CLI errors and `--verbose` flag (works pre/post subcommand) **[MVP]** ## 16) Extensibility - [x] Analyzer ABC and plugin discovery **[MVP]** - [x] Template packs (org\u2011style) **[NEXT]** --- ### Definition of Done (per section) - [ ] Passing unit & integration tests for core logic - [ ] Golden README regression test(s) - [ ] Meets lint/style requirements",
      "metadata": {
        "path": "spec/feature_checklist.md",
        "tags": [
          "docs"
        ],
        "hash": "45fe67aee945de2e7028f0e474a96b89a1665a1e3c8c16146e0ba8de3b9baa31"
      }
    },
    {
      "id": "spec/feature_order.md#0",
      "vector": {
        "docgen": 0.25491557319725244,
        "development": 0.042485928866208736,
        "roadmap": 0.042485928866208736,
        "phase": 0.12745778659862622,
        "0": 0.042485928866208736,
        "bootstrap": 0.042485928866208736,
        "the": 0.042485928866208736,
        "skeleton": 0.08497185773241747,
        "1": 0.3398874309296699,
        "project": 0.042485928866208736,
        "cli": 0.042485928866208736,
        "config": 0.08497185773241747,
        "loader": 0.042485928866208736,
        "yml": 0.042485928866208736,
        "models": 0.042485928866208736,
        "done": 0.3823733597958786,
        "covers": 0.3823733597958786,
        "commands": 0.042485928866208736,
        "scaffolding": 0.042485928866208736,
        "9": 0.042485928866208736,
        "parse": 0.042485928866208736,
        "16": 0.08497185773241747,
        "analyzer": 0.08497185773241747,
        "abc": 0.08497185773241747,
        "2": 0.2124296443310437,
        "plugin": 0.08497185773241747,
        "discovery": 0.08497185773241747,
        "init": 0.16994371546483494,
        "happy": 0.042485928866208736,
        "path": 0.042485928866208736,
        "single": 0.042485928866208736,
        "repo": 0.12745778659862622,
        "local": 0.08497185773241747,
        "scanner": 0.042485928866208736,
        "manifest": 0.08497185773241747,
        "roles": 0.042485928866208736,
        "hashing": 0.042485928866208736,
        "ignores": 0.08497185773241747,
        "walk": 0.042485928866208736,
        "fs": 0.042485928866208736,
        "cache": 0.042485928866208736,
        "tier": 0.042485928866208736,
        "analyzers": 0.12745778659862622,
        "python": 0.042485928866208736,
        "java": 0.042485928866208736,
        "node": 0.042485928866208736,
        "build": 0.08497185773241747,
        "dependency": 0.042485928866208736,
        "3": 0.08497185773241747,
        "language": 0.042485928866208736,
        "deps": 0.042485928866208736,
        "templates": 0.12745778659862622,
        "prompt": 0.12745778659862622,
        "builder": 0.08497185773241747,
        "section": 0.12745778659862622,
        "by": 0.042485928866208736,
        "guardrailed": 0.042485928866208736,
        "system": 0.042485928866208736,
        "partial": 0.042485928866208736,
        "guardrails": 0.08497185773241747,
        "unused": 0.042485928866208736,
        "5": 0.08497185773241747,
        "jinja2": 0.042485928866208736,
        "token": 0.042485928866208736,
        "budget": 0.042485928866208736,
        "4": 0.042485928866208736,
        "llm": 0.042485928866208736,
        "runner": 0.042485928866208736,
        "ollama": 0.08497185773241747,
        "adapter": 0.042485928866208736,
        "6": 0.08497185773241747,
        "post": 0.042485928866208736,
        "processor": 0.042485928866208736,
        "managed": 0.042485928866208736,
        "markers": 0.12745778659862622,
        "toc": 0.08497185773241747,
        "markdown": 0.042485928866208736,
        "lint": 0.08497185773241747,
        "7": 0.042485928866208736,
        "git": 0.08497185773241747,
        "publisher": 0.08497185773241747,
        "commit": 0.08497185773241747,
        "mode": 0.08497185773241747,
        "for": 0.08497185773241747,
        "only": 0.042485928866208736,
        "8": 0.08497185773241747,
        "end": 0.08497185773241747,
        "to": 0.042485928866208736,
        "milestone": 0.042485928866208736,
        "generates": 0.042485928866208736,
        "a": 0.08497185773241747,
        "clean": 0.042485928866208736,
        "readme": 0.042485928866208736,
        "with": 0.042485928866208736,
        "no": 0.042485928866208736,
        "docs": 0.042485928866208736,
        "update": 0.08497185773241747,
        "on": 0.042485928866208736,
        "change": 0.08497185773241747,
        "pr": 0.042485928866208736,
        "workflow": 0.042485928866208736,
        "diff": 0.08497185773241747,
        "detection": 0.042485928866208736,
        "mapping": 0.08497185773241747,
        "patching": 0.042485928866208736,
        "inside": 0.042485928866208736,
        "prevent": 0.042485928866208736,
        "loops": 0.042485928866208736
      },
      "text": "# DocGen Development Roadmap ## Phase 0 \u2014 Bootstrap the skeleton 1. **Project skeleton + CLI (`docgen`) + config loader (`.docgen.yml`) + models** \u2014 \u2714 Done * Covers: 1 (commands scaffolding), 9 (parse config), 16 (Analyzer ABC) 2. **Analyzer plugin ABC & discovery** \u2014 \u2714 Done * Covers: 16 (plugin discovery) ## Phase 1 \u2014 \"Init\" happy-path (single repo, local) 1. **Repo scanner & manifest (roles, hashing, ignores)** \u2014 \u2714 Done * Covers: 2 (walk FS, manifest, cache, ignores) 2. **Tier-1 analyzers (Python, Java, Node) + build analyzers + dependency analyzers** \u2014 \u2714 Done * Covers: 3 (language/build/deps) 3. **Templates + prompt builder (section-by-section) + guardrailed system prompt** \u2014 \u25d0 Partial (templates/prompt builder done; guardrails unused) * Covers: 5 (Jinja2 templates, guardrails, token budget) 4. **Local LLM runner (Ollama adapter)** \u2014 \u2714 Done * Covers: 6 (Ollama) 5. **Post-processor: managed markers, ToC, markdown lint** \u2014 \u2714 Done * Covers: 7 (markers, ToC, lint) 6. **Git publisher: commit mode (for init only)** \u2014 \u2714 Done * Covers: 8 (commit mode), 1 (`docgen init` end-to-end) \u2705 **Milestone**: `docgen init` generates a clean README for a repo with no docs. ## Phase 2 \u2014 Update-on-change (PR workflow) 1. **Diff detection + change\u2192section mapping + patching inside markers** \u2014 \u2714 Done * Covers: 8 (diff mapping, prevent loops), 1 (`docgen update`) 2. **Git publisher:",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/feature_order.md#1",
      "vector": {
        "readme": 0.09035079029052513,
        "for": 0.045175395145262566,
        "a": 0.09035079029052513,
        "repo": 0.09035079029052513,
        "with": 0.1355261854357877,
        "no": 0.18070158058105026,
        "docs": 0.09035079029052513,
        "phase": 0.22587697572631282,
        "2": 0.22587697572631282,
        "update": 0.18070158058105026,
        "on": 0.045175395145262566,
        "change": 0.09035079029052513,
        "pr": 0.22587697572631282,
        "workflow": 0.045175395145262566,
        "1": 0.22587697572631282,
        "diff": 0.09035079029052513,
        "detection": 0.045175395145262566,
        "section": 0.1355261854357877,
        "mapping": 0.09035079029052513,
        "patching": 0.045175395145262566,
        "inside": 0.045175395145262566,
        "markers": 0.045175395145262566,
        "done": 0.36140316116210053,
        "covers": 0.36140316116210053,
        "8": 0.09035079029052513,
        "prevent": 0.045175395145262566,
        "loops": 0.045175395145262566,
        "docgen": 0.1355261854357877,
        "git": 0.045175395145262566,
        "publisher": 0.045175395145262566,
        "branch": 0.09035079029052513,
        "delta": 0.045175395145262566,
        "summary": 0.045175395145262566,
        "10": 0.09035079029052513,
        "labeling": 0.045175395145262566,
        "later": 0.045175395145262566,
        "milestone": 0.09035079029052513,
        "opens": 0.045175395145262566,
        "updating": 0.045175395145262566,
        "only": 0.09035079029052513,
        "impacted": 0.045175395145262566,
        "sections": 0.045175395145262566,
        "3": 0.045175395145262566,
        "minimal": 0.045175395145262566,
        "rag": 0.09035079029052513,
        "accuracy": 0.045175395145262566,
        "lite": 0.045175395145262566,
        "embed": 0.045175395145262566,
        "top": 0.045175395145262566,
        "n": 0.045175395145262566,
        "source": 0.045175395145262566,
        "headers": 0.045175395145262566,
        "scoped": 0.045175395145262566,
        "retrieval": 0.09035079029052513,
        "4": 0.09035079029052513,
        "local": 0.09035079029052513,
        "embedding": 0.045175395145262566,
        "index": 0.045175395145262566,
        "sources": 0.045175395145262566,
        "per": 0.045175395145262566,
        "hallucination": 0.1355261854357877,
        "command": 0.1355261854357877,
        "existence": 0.045175395145262566,
        "checks": 0.045175395145262566,
        "partial": 0.045175395145262566,
        "validation": 0.09035079029052513,
        "guard": 0.045175395145262566,
        "not": 0.045175395145262566,
        "implemented": 0.045175395145262566,
        "13": 0.045175395145262566,
        "outputs": 0.045175395145262566,
        "grounded": 0.045175395145262566,
        "in": 0.045175395145262566,
        "facts": 0.045175395145262566,
        "targeted": 0.045175395145262566,
        "context": 0.045175395145262566,
        "hardening": 0.045175395145262566,
        "dx": 0.045175395145262566,
        "error": 0.045175395145262566,
        "handling": 0.045175395145262566,
        "clear": 0.045175395145262566,
        "logs": 0.09035079029052513,
        "verbose": 0.045175395145262566,
        "fail": 0.09035079029052513,
        "safe": 0.09035079029052513,
        "stubs": 0.045175395145262566,
        "15": 0.045175395145262566,
        "cli": 0.045175395145262566,
        "ux": 0.045175395145262566,
        "security": 0.045175395145262566,
        "gitignore": 0.045175395145262566,
        "respect": 0.045175395145262566,
        "path": 0.045175395145262566,
        "excludes": 0.09035079029052513,
        "enforcement": 0.045175395145262566,
        "11": 0.045175395145262566,
        "privacy": 0.045175395145262566,
        "5": 0.09035079029052513,
        "ci": 0.045175395145262566,
        "integration": 0.045175395145262566,
        "config": 0.09035079029052513,
        "polish": 0.045175395145262566,
        "github": 0.045175395145262566,
        "actions": 0.09035079029052513,
        "sample": 0.045175395145262566,
        "push": 0.045175395145262566,
        "trigger": 0.045175395145262566,
        "calling": 0.045175395145262566,
        "gh": 0.045175395145262566,
        "refinements": 0.045175395145262566,
        "watched": 0.045175395145262566,
        "globs": 0.045175395145262566,
        "style": 0.09035079029052513,
        "preset": 0.045175395145262566,
        "concise": 0.045175395145262566,
        "comprehensive": 0.045175395145262566,
        "9": 0.045175395145262566,
        "watched_globs": 0.045175395145262566,
        "presets": 0.045175395145262566,
        "6": 0.045175395145262566,
        "multi": 0.045175395145262566,
        "language": 0.045175395145262566,
        "breadth": 0.045175395145262566
      },
      "text": "README for a repo with no docs. ## Phase 2 \u2014 Update-on-change (PR workflow) 1. **Diff detection + change\u2192section mapping + patching inside markers** \u2014 \u2714 Done * Covers: 8 (diff mapping, prevent loops), 1 (`docgen update`) 2. **Git publisher: branch + PR with delta summary** \u2014 \u2714 Done * Covers: 8 (branch/PR), 10 (labeling later) \u2705 **Milestone**: `docgen update` opens a PR updating only impacted sections. ## Phase 3 \u2014 Minimal RAG & accuracy 1. **RAG Lite: embed README/docs/top N source headers; section-scoped retrieval** \u2014 \u2714 Done * Covers: 4 (local embedding, index sources, per-section retrieval) 2. **No-hallucination & command existence checks** \u2014 \u25d0 Partial (command validation done; no-hallucination guard not implemented) * Covers: 13 (command validation, no-hallucination) \u2705 **Milestone**: outputs grounded in repo facts with targeted context. ## Phase 4 \u2014 Hardening & DX 1. **Error handling, clear logs, `--verbose`, fail-safe stubs** \u2014 \u2714 Done * Covers: 15 (fail-safe, logs, CLI UX) 2. **Security: .gitignore respect, path excludes, local-only enforcement** \u2014 \u2714 Done * Covers: 11 (privacy, excludes) ## Phase 5 \u2014 CI integration & config polish 1. **GitHub Actions sample (push/PR trigger calling `docgen update`)** \u2014 \u2714 Done * Covers: 10 (GH Actions) 2. **Config refinements: watched globs, style preset (concise/comprehensive)** \u2014 \u2714 Done * Covers: 9 (watched_globs), 5 (style presets) ## Phase 6 \u2014 Multi-language breadth",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/feature_order.md#2",
      "vector": {
        "github": 0.046274481338274755,
        "actions": 0.09254896267654951,
        "sample": 0.046274481338274755,
        "push": 0.046274481338274755,
        "pr": 0.18509792535309902,
        "trigger": 0.046274481338274755,
        "calling": 0.046274481338274755,
        "docgen": 0.13882344401482424,
        "update": 0.046274481338274755,
        "done": 0.32392136936792326,
        "covers": 0.41647033204447276,
        "10": 0.09254896267654951,
        "gh": 0.046274481338274755,
        "2": 0.23137240669137377,
        "config": 0.09254896267654951,
        "refinements": 0.046274481338274755,
        "watched": 0.046274481338274755,
        "globs": 0.046274481338274755,
        "style": 0.09254896267654951,
        "preset": 0.046274481338274755,
        "concise": 0.046274481338274755,
        "comprehensive": 0.046274481338274755,
        "9": 0.046274481338274755,
        "watched_globs": 0.046274481338274755,
        "5": 0.09254896267654951,
        "presets": 0.046274481338274755,
        "phase": 0.13882344401482424,
        "6": 0.09254896267654951,
        "multi": 0.046274481338274755,
        "language": 0.046274481338274755,
        "breadth": 0.046274481338274755,
        "framework": 0.13882344401482424,
        "smarts": 0.046274481338274755,
        "1": 0.23137240669137377,
        "entrypoint": 0.046274481338274755,
        "detection": 0.046274481338274755,
        "main": 0.046274481338274755,
        "spring": 0.046274481338274755,
        "boot": 0.046274481338274755,
        "fastapi": 0.09254896267654951,
        "aware": 0.09254896267654951,
        "quick": 0.046274481338274755,
        "start": 0.046274481338274755,
        "entrypoints": 0.046274481338274755,
        "12": 0.046274481338274755,
        "commands": 0.046274481338274755,
        "pattern": 0.09254896267654951,
        "analyzers": 0.09254896267654951,
        "docker": 0.046274481338274755,
        "k8s": 0.046274481338274755,
        "ci": 0.046274481338274755,
        "monorepo": 0.046274481338274755,
        "layout": 0.046274481338274755,
        "3": 0.13882344401482424,
        "7": 0.13882344401482424,
        "quality": 0.046274481338274755,
        "gates": 0.046274481338274755,
        "performance": 0.046274481338274755,
        "readme": 0.09254896267654951,
        "scorecard": 0.13882344401482424,
        "link": 0.09254896267654951,
        "validator": 0.09254896267654951,
        "badges": 0.09254896267654951,
        "13": 0.046274481338274755,
        "artifact": 0.09254896267654951,
        "embedding": 0.046274481338274755,
        "caching": 0.046274481338274755,
        "in": 0.046274481338274755,
        "incremental": 0.09254896267654951,
        "rag": 0.09254896267654951,
        "refresh": 0.09254896267654951,
        "partial": 0.046274481338274755,
        "embeddings": 0.046274481338274755,
        "cached": 0.046274481338274755,
        "no": 0.046274481338274755,
        "analyzer": 0.046274481338274755,
        "store": 0.046274481338274755,
        "14": 0.046274481338274755,
        "persist": 0.046274481338274755,
        "outputs": 0.046274481338274755,
        "8": 0.046274481338274755,
        "nice": 0.046274481338274755,
        "to": 0.09254896267654951,
        "have": 0.046274481338274755,
        "stretch": 0.046274481338274755,
        "dry": 0.09254896267654951,
        "run": 0.09254896267654951,
        "mode": 0.13882344401482424,
        "labeling": 0.09254896267654951,
        "updates": 0.09254896267654951,
        "commit": 0.046274481338274755,
        "policy": 0.046274481338274755,
        "tuning": 0.046274481338274755,
        "template": 0.13882344401482424,
        "overrides": 0.046274481338274755,
        "docs": 0.046274481338274755,
        "templates": 0.046274481338274755,
        "j2": 0.046274481338274755,
        "org": 0.046274481338274755,
        "packs": 0.09254896267654951,
        "override": 0.046274481338274755,
        "16": 0.046274481338274755,
        "service": 0.09254896267654951,
        "llama": 0.09254896267654951,
        "cpp": 0.09254896267654951,
        "adapter": 0.046274481338274755,
        "tree": 0.09254896267654951,
        "sitter": 0.09254896267654951,
        "extraction": 0.046274481338274755,
        "not": 0.046274481338274755,
        "started": 0.046274481338274755,
        "why": 0.046274481338274755,
        "this": 0.046274481338274755,
        "order": 0.046274481338274755,
        "fastest": 0.046274481338274755,
        "path": 0.046274481338274755,
        "value": 0.046274481338274755,
        "get": 0.046274481338274755,
        "init": 0.046274481338274755,
        "producing": 0.046274481338274755,
        "a": 0.046274481338274755,
        "solid": 0.046274481338274755,
        "before": 0.046274481338274755,
        "adding": 0.046274481338274755,
        "diffing": 0.046274481338274755
      },
      "text": "**GitHub Actions sample (push/PR trigger calling `docgen update`)** \u2014 \u2714 Done * Covers: 10 (GH Actions) 2. **Config refinements: watched globs, style preset (concise/comprehensive)** \u2014 \u2714 Done * Covers: 9 (watched_globs), 5 (style presets) ## Phase 6 \u2014 Multi-language breadth & framework smarts 1. **Entrypoint detection (main, Spring Boot, FastAPI) + framework-aware Quick Start** \u2014 \u2714 Done * Covers: 2 (entrypoints), 12 (framework-aware commands) 2. **Pattern analyzers (Docker/K8s, CI config, monorepo layout)** \u2014 \u2714 Done * Covers: 3 (pattern analyzers) ## Phase 7 \u2014 Quality gates & performance 1. **README scorecard + link validator + badges** \u2014 \u2714 Done * Covers: 13 (scorecard), 7 (link validator), 7 (badges) 2. **Artifact & embedding caching in `.docgen/` + incremental RAG refresh** \u2014 \u25d0 Partial (embeddings/scorecard cached; no analyzer artifact store) * Covers: 14 (persist outputs, incremental refresh) ## Phase 8 \u2014 \"Nice to have\" & stretch 1. **Dry-run mode, PR labeling/updates, commit/PR policy tuning** \u2014 \u2714 Done * Covers: 1 (dry-run), 10 (labeling/PR updates) 2. **Template overrides (`docs/templates/*.j2`) & org template packs** \u2014 \u2714 Done * Covers: 5 (override), 16 (template packs) 3. **Service mode (FastAPI), llama.cpp adapter, tree-sitter extraction** \u2014 \u2610 Not started * Covers: 1 (service mode), 6 (llama.cpp), 3 (tree-sitter) ## Why this order * **Fastest path to value**: get `docgen init` producing a solid README before adding diffing/RAG.",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/feature_order.md#3",
      "vector": {
        "3": 0.18333969940564226,
        "service": 0.18333969940564226,
        "mode": 0.18333969940564226,
        "fastapi": 0.09166984970282113,
        "llama": 0.18333969940564226,
        "cpp": 0.18333969940564226,
        "adapter": 0.09166984970282113,
        "tree": 0.18333969940564226,
        "sitter": 0.18333969940564226,
        "extraction": 0.09166984970282113,
        "not": 0.09166984970282113,
        "started": 0.09166984970282113,
        "covers": 0.09166984970282113,
        "1": 0.09166984970282113,
        "6": 0.09166984970282113,
        "why": 0.09166984970282113,
        "this": 0.09166984970282113,
        "order": 0.09166984970282113,
        "fastest": 0.09166984970282113,
        "path": 0.09166984970282113,
        "to": 0.18333969940564226,
        "value": 0.09166984970282113,
        "get": 0.09166984970282113,
        "docgen": 0.09166984970282113,
        "init": 0.09166984970282113,
        "producing": 0.09166984970282113,
        "a": 0.09166984970282113,
        "solid": 0.09166984970282113,
        "readme": 0.09166984970282113,
        "before": 0.09166984970282113,
        "adding": 0.09166984970282113,
        "diffing": 0.09166984970282113,
        "rag": 0.18333969940564226,
        "contain": 0.09166984970282113,
        "risk": 0.09166984970282113,
        "early": 0.09166984970282113,
        "section": 0.09166984970282113,
        "markers": 0.09166984970282113,
        "lint": 0.09166984970282113,
        "and": 0.2750095491084634,
        "commit": 0.09166984970282113,
        "publishing": 0.09166984970282113,
        "ensure": 0.09166984970282113,
        "safe": 0.09166984970282113,
        "idempotent": 0.09166984970282113,
        "edits": 0.09166984970282113,
        "accuracy": 0.09166984970282113,
        "next": 0.09166984970282113,
        "add": 0.09166984970282113,
        "validation": 0.09166984970282113,
        "avoid": 0.09166984970282113,
        "hallucinations": 0.09166984970282113,
        "once": 0.09166984970282113,
        "the": 0.18333969940564226,
        "pipeline": 0.09166984970282113,
        "works": 0.09166984970282113,
        "scale": 0.09166984970282113,
        "breadth": 0.09166984970282113,
        "later": 0.09166984970282113,
        "only": 0.09166984970282113,
        "after": 0.09166984970282113,
        "core": 0.09166984970282113,
        "loop": 0.09166984970282113,
        "is": 0.09166984970282113,
        "robust": 0.09166984970282113,
        "do": 0.09166984970282113,
        "we": 0.09166984970282113,
        "widen": 0.09166984970282113,
        "language": 0.09166984970282113,
        "framework": 0.09166984970282113,
        "coverage": 0.09166984970282113,
        "polish": 0.09166984970282113,
        "last": 0.09166984970282113,
        "ci": 0.09166984970282113,
        "caching": 0.09166984970282113,
        "quality": 0.09166984970282113,
        "gates": 0.09166984970282113,
        "refine": 0.09166984970282113,
        "dev": 0.09166984970282113,
        "experience": 0.09166984970282113,
        "performance": 0.09166984970282113
      },
      "text": "3. **Service mode (FastAPI), llama.cpp adapter, tree-sitter extraction** \u2014 \u2610 Not started * Covers: 1 (service mode), 6 (llama.cpp), 3 (tree-sitter) ## Why this order * **Fastest path to value**: get `docgen init` producing a solid README before adding diffing/RAG. * **Contain risk early**: section markers, lint, and commit publishing ensure safe/idempotent edits. * **Accuracy next**: add RAG + validation to avoid hallucinations once the pipeline works. * **Scale breadth later**: only after the core loop is robust do we widen language/framework coverage. * **Polish last**: CI, caching, and quality gates refine dev experience and performance.",
      "metadata": {
        "path": "spec/feature_order.md",
        "tags": [
          "docs"
        ],
        "hash": "52f230fa34fcc3cecd70fb99b2315e3a223639a14398186aac743fdf67a16194"
      }
    },
    {
      "id": "spec/jira_stories.md#0",
      "vector": {
        "docgen": 0.15037641213512565,
        "jira": 0.05012547071170855,
        "stories": 0.1002509414234171,
        "remaining": 0.05012547071170855,
        "are": 0.1002509414234171,
        "ordered": 0.05012547071170855,
        "by": 0.1002509414234171,
        "the": 0.25062735355854276,
        "recommended": 0.05012547071170855,
        "completion": 0.05012547071170855,
        "sequence": 0.05012547071170855,
        "and": 0.3508782949819598,
        "formatted": 0.05012547071170855,
        "per": 0.05012547071170855,
        "prompt": 0.05012547071170855,
        "template": 0.05012547071170855,
        "guidance": 0.05012547071170855,
        "all": 0.05012547071170855,
        "prior": 0.05012547071170855,
        "milestones": 0.05012547071170855,
        "complete": 0.05012547071170855,
        "only": 0.05012547071170855,
        "work": 0.05012547071170855,
        "listed": 0.05012547071170855,
        "below": 0.05012547071170855,
        "remains": 0.05012547071170855,
        "story": 0.1002509414234171,
        "s": 0.15037641213512565,
        "032": 0.05012547071170855,
        "no": 0.05012547071170855,
        "hallucination": 0.05012547071170855,
        "validation": 0.15037641213512565,
        "status": 0.05012547071170855,
        "done": 0.05012547071170855,
        "text": 0.05012547071170855,
        "introduce": 0.05012547071170855,
        "a": 0.3508782949819598,
        "layer": 0.05012547071170855,
        "that": 0.1002509414234171,
        "rejects": 0.05012547071170855,
        "readme": 0.05012547071170855,
        "content": 0.15037641213512565,
        "containing": 0.05012547071170855,
        "facts": 0.05012547071170855,
        "not": 0.05012547071170855,
        "backed": 0.05012547071170855,
        "analyzer": 0.1002509414234171,
        "signals": 0.15037641213512565,
        "or": 0.2005018828468342,
        "rag": 0.1002509414234171,
        "context": 0.1002509414234171,
        "surfacing": 0.05012547071170855,
        "actionable": 0.05012547071170855,
        "errors": 0.05012547071170855,
        "to": 0.05012547071170855,
        "users": 0.05012547071170855,
        "dependencies": 0.05012547071170855,
        "already": 0.05012547071170855,
        "completed": 0.05012547071170855,
        "031": 0.05012547071170855,
        "guardrailed": 0.05012547071170855,
        "execution": 0.05012547071170855,
        "011": 0.05012547071170855,
        "contexts": 0.05012547071170855,
        "constraints": 0.05012547071170855,
        "must": 0.05012547071170855,
        "run": 0.05012547071170855,
        "after": 0.1002509414234171,
        "section": 0.1002509414234171,
        "rendering": 0.1002509414234171,
        "but": 0.05012547071170855,
        "before": 0.1002509414234171,
        "writing": 0.05012547071170855,
        "files": 0.05012547071170855,
        "publishing": 0.05012547071170855,
        "prs": 0.05012547071170855,
        "provide": 0.05012547071170855,
        "clear": 0.05012547071170855,
        "remediation": 0.05012547071170855,
        "logs": 0.1002509414234171,
        "referencing": 0.05012547071170855,
        "missing": 0.1002509414234171,
        "affected": 0.05012547071170855,
        "sections": 0.1002509414234171,
        "allow": 0.05012547071170855,
        "an": 0.05012547071170855,
        "opt": 0.05012547071170855,
        "out": 0.05012547071170855,
        "toggle": 0.05012547071170855,
        "in": 0.05012547071170855,
        "yml": 0.05012547071170855,
        "for": 0.05012547071170855,
        "edge": 0.05012547071170855,
        "cases": 0.05012547071170855,
        "non": 0.05012547071170855,
        "goals": 0.05012547071170855,
        "external": 0.05012547071170855,
        "api": 0.05012547071170855,
        "calls": 0.05012547071170855,
        "complex": 0.05012547071170855,
        "semantic": 0.05012547071170855,
        "similarity": 0.05012547071170855,
        "checks": 0.05012547071170855,
        "acceptance": 0.1002509414234171,
        "criteria": 0.05012547071170855,
        "validator": 0.1002509414234171,
        "cross": 0.05012547071170855,
        "references": 0.05012547071170855,
        "generated": 0.05012547071170855,
        "claims": 0.05012547071170855,
        "against": 0.05012547071170855,
        "available": 0.05012547071170855,
        "disallowed": 0.05012547071170855,
        "triggers": 0.05012547071170855,
        "failure": 0.05012547071170855,
        "path": 0.05012547071170855,
        "with": 0.1002509414234171,
        "stub": 0.05012547071170855,
        "fallback": 0.05012547071170855,
        "unit": 0.05012547071170855,
        "tests": 0.05012547071170855,
        "cover": 0.05012547071170855,
        "of": 0.1002509414234171,
        "grounded": 0.05012547071170855,
        "rejection": 0.05012547071170855,
        "injected": 0.05012547071170855,
        "hallucinations": 0.05012547071170855,
        "cli": 0.05012547071170855,
        "surfaces": 0.05012547071170855,
        "concise": 0.05012547071170855,
        "error": 0.05012547071170855,
        "messages": 0.05012547071170855,
        "verbose": 0.05012547071170855,
        "list": 0.05012547071170855,
        "offending": 0.05012547071170855,
        "evidence": 0.05012547071170855,
        "implementation": 0.1002509414234171,
        "plan": 0.05012547071170855,
        "create": 0.05012547071170855,
        "dedicated": 0.05012547071170855,
        "validators": 0.1002509414234171,
        "package": 0.05012547071170855,
        "lightweight": 0.05012547071170855,
        "validationissue": 0.05012547071170855,
        "dataclass": 0.05012547071170855,
        "protocol": 0.05012547071170855,
        "nohallucinationvalidator": 0.05012547071170855,
        "concrete": 0.05012547071170855,
        "orchestrator": 0.05012547071170855,
        "registers": 0.05012547071170855,
        "executes": 0.05012547071170855,
        "them": 0.05012547071170855,
        "post": 0.05012547071170855,
        "processing": 0.05012547071170855,
        "io": 0.05012547071170855,
        "add": 0.05012547071170855,
        "shared": 0.05012547071170855,
        "evidenceindex": 0.05012547071170855,
        "builder": 0.05012547071170855,
        "normalizes": 0.05012547071170855
      },
      "text": "# DocGen Jira Stories (Remaining) > Stories are ordered by the recommended completion sequence and formatted per the prompt template guidance. All prior milestones are complete; only the work listed below remains. --- ## Story S-032 \u2014 No-Hallucination Validation - **Status:** \u2714 Done - **Story Text:** Introduce a validation layer that rejects README content containing facts not backed by analyzer signals or RAG context, surfacing actionable errors to users. - **Dependencies already completed:** S-031 (guardrailed execution), S-011 (RAG contexts) - **Constraints:** - Validation must run after section rendering but before writing files or publishing PRs. - Provide clear remediation logs referencing the missing signals and affected sections. - Allow an opt-out toggle in `.docgen.yml` for edge cases. - **Non-Goals:** External API calls or complex semantic similarity checks. - **Acceptance Criteria:** - Validator cross-references generated claims against available signals/context; disallowed content triggers a failure path with stub fallback. - Unit tests cover acceptance of grounded content and rejection of injected hallucinations. - CLI surfaces concise error messages and `--verbose` logs list offending sections and missing evidence. - **Implementation Plan:** - Create a dedicated `docgen.validators` package with a lightweight `ValidationIssue` dataclass, a `Validator` protocol, and a `NoHallucinationValidator` concrete implementation. The orchestrator registers validators after section rendering and executes them before post-processing or IO. - Add a shared `EvidenceIndex` builder that normalizes analyzer",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#1",
      "vector": {
        "a": 0.37435064886346636,
        "dedicated": 0.04159451654038515,
        "docgen": 0.12478354962115545,
        "validators": 0.12478354962115545,
        "package": 0.04159451654038515,
        "with": 0.2495670992423109,
        "lightweight": 0.04159451654038515,
        "validationissue": 0.04159451654038515,
        "dataclass": 0.04159451654038515,
        "validator": 0.04159451654038515,
        "protocol": 0.04159451654038515,
        "and": 0.29116161578269606,
        "nohallucinationvalidator": 0.04159451654038515,
        "concrete": 0.04159451654038515,
        "implementation": 0.04159451654038515,
        "the": 0.4991341984846218,
        "orchestrator": 0.04159451654038515,
        "registers": 0.04159451654038515,
        "after": 0.04159451654038515,
        "section": 0.0831890330807703,
        "rendering": 0.04159451654038515,
        "executes": 0.04159451654038515,
        "them": 0.04159451654038515,
        "before": 0.04159451654038515,
        "post": 0.04159451654038515,
        "processing": 0.04159451654038515,
        "or": 0.04159451654038515,
        "io": 0.04159451654038515,
        "add": 0.0831890330807703,
        "shared": 0.04159451654038515,
        "evidenceindex": 0.04159451654038515,
        "builder": 0.0831890330807703,
        "that": 0.12478354962115545,
        "normalizes": 0.04159451654038515,
        "analyzer": 0.04159451654038515,
        "signals": 0.0831890330807703,
        "names": 0.04159451654038515,
        "kinds": 0.04159451654038515,
        "key": 0.04159451654038515,
        "attributes": 0.04159451654038515,
        "retrieved": 0.04159451654038515,
        "rag": 0.04159451654038515,
        "chunks": 0.04159451654038515,
        "path": 0.04159451654038515,
        "heading": 0.04159451654038515,
        "snippet": 0.04159451654038515,
        "persist": 0.04159451654038515,
        "normalized": 0.0831890330807703,
        "evidence": 0.0831890330807703,
        "in": 0.0831890330807703,
        "run": 0.04159451654038515,
        "context": 0.04159451654038515,
        "so": 0.04159451654038515,
        "verbose": 0.04159451654038515,
        "logging": 0.04159451654038515,
        "receive": 0.04159451654038515,
        "same": 0.04159451654038515,
        "data": 0.04159451654038515,
        "extend": 0.04159451654038515,
        "prompt": 0.04159451654038515,
        "to": 0.20797258270192576,
        "annotate": 0.04159451654038515,
        "each": 0.0831890330807703,
        "render": 0.04159451654038515,
        "sectionevidence": 0.04159451654038515,
        "metadata": 0.0831890330807703,
        "describing": 0.04159451654038515,
        "which": 0.04159451654038515,
        "chunk": 0.04159451654038515,
        "ids": 0.04159451654038515,
        "were": 0.04159451654038515,
        "injected": 0.04159451654038515,
        "this": 0.04159451654038515,
        "is": 0.04159451654038515,
        "stored": 0.04159451654038515,
        "alongside": 0.04159451654038515,
        "rendered": 0.0831890330807703,
        "markdown": 0.04159451654038515,
        "avoid": 0.04159451654038515,
        "re": 0.04159451654038515,
        "parsing": 0.04159451654038515,
        "prompts": 0.04159451654038515,
        "implement": 0.04159451654038515,
        "lexical": 0.04159451654038515,
        "matching": 0.04159451654038515,
        "heuristics": 0.04159451654038515,
        "split": 0.04159451654038515,
        "sections": 0.0831890330807703,
        "into": 0.04159451654038515,
        "sentences": 0.0831890330807703,
        "ignore": 0.04159451654038515,
        "boilerplate": 0.04159451654038515,
        "phrases": 0.04159451654038515,
        "require": 0.04159451654038515,
        "remaining": 0.04159451654038515,
        "sentence": 0.04159451654038515,
        "introduces": 0.04159451654038515,
        "facts": 0.04159451654038515,
        "numbers": 0.04159451654038515,
        "detected": 0.0831890330807703,
        "entities": 0.04159451654038515,
        "verbs": 0.04159451654038515,
        "direct": 0.04159451654038515,
        "objects": 0.04159451654038515,
        "have": 0.04159451654038515,
        "at": 0.04159451654038515,
        "least": 0.04159451654038515,
        "one": 0.04159451654038515,
        "overlapping": 0.04159451654038515,
        "n": 0.04159451654038515,
        "gram": 0.04159451654038515,
        "len": 0.04159451654038515,
        "3": 0.04159451654038515,
        "flag": 0.0831890330807703,
        "unmatched": 0.04159451654038515,
        "as": 0.04159451654038515,
        "hallucinations": 0.0831890330807703,
        "when": 0.04159451654038515,
        "are": 0.04159451654038515,
        "short": 0.04159451654038515,
        "circuit": 0.04159451654038515,
        "pipeline": 0.04159451654038515,
        "emit": 0.04159451654038515,
        "fail": 0.04159451654038515,
        "safe": 0.04159451654038515,
        "stubs": 0.04159451654038515,
        "for": 0.12478354962115545,
        "offending": 0.04159451654038515,
        "reuse": 0.04159451654038515,
        "existing": 0.04159451654038515,
        "stub": 0.04159451654038515,
        "generator": 0.04159451654038515,
        "bubble": 0.04159451654038515,
        "validationerror": 0.04159451654038515,
        "back": 0.04159451654038515,
        "cli": 0.0831890330807703,
        "actionable": 0.04159451654038515,
        "hints": 0.04159451654038515,
        "yml": 0.04159451654038515,
        "updates": 0.04159451654038515,
        "introduce": 0.04159451654038515,
        "validation": 0.0831890330807703,
        "map": 0.04159451654038515,
        "no_hallucination": 0.04159451654038515,
        "boolean": 0.04159451654038515,
        "default": 0.04159451654038515,
        "true": 0.04159451654038515,
        "respect": 0.04159451654038515,
        "repo": 0.04159451654038515,
        "level": 0.04159451654038515,
        "overrides": 0.04159451654038515,
        "while": 0.04159451654038515,
        "allowing": 0.04159451654038515,
        "docgen_validation_no_hallucination": 0.04159451654038515,
        "false": 0.04159451654038515,
        "disable": 0.04159451654038515,
        "check": 0.04159451654038515,
        "ci": 0.04159451654038515,
        "emergencies": 0.04159451654038515,
        "skip": 0.04159451654038515,
        "init": 0.04159451654038515,
        "update": 0.04159451654038515,
        "regenerate": 0.04159451654038515,
        "flips": 0.04159451654038515,
        "toggle": 0.04159451654038515
      },
      "text": "a dedicated `docgen.validators` package with a lightweight `ValidationIssue` dataclass, a `Validator` protocol, and a `NoHallucinationValidator` concrete implementation. The orchestrator registers validators after section rendering and executes them before post-processing or IO. - Add a shared `EvidenceIndex` builder that normalizes analyzer signals (names, kinds, key attributes) and retrieved RAG chunks (path, heading, snippet). Persist the normalized evidence in the run context so validators and verbose logging receive the same data. - Extend the prompt builder to annotate each section render with `SectionEvidence` metadata describing which signals and chunk IDs were injected. This metadata is stored alongside the rendered markdown to avoid re-parsing prompts. - Implement lexical matching heuristics: split rendered sections into sentences, ignore boilerplate phrases, and require each remaining sentence that introduces facts (numbers, detected entities, verbs with direct objects) to have at least one overlapping n-gram (len \u22653) with the normalized evidence. Flag unmatched sentences as hallucinations. - When hallucinations are detected, short-circuit the pipeline, emit fail-safe stubs for the offending sections (reuse existing stub generator), and bubble a `ValidationError` back to the CLI with actionable hints. - **`.docgen.yml` & CLI Updates:** - Introduce a `validation` map with a `no_hallucination` boolean (default `true`). Respect repo-level overrides while allowing `DOCGEN_VALIDATION_NO_HALLUCINATION=false` to disable the check in CI emergencies. - Add a `--skip-validation` flag for `docgen init|update|regenerate` that flips the toggle for",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#2",
      "vector": {
        "cli": 0.18856180831641267,
        "updates": 0.04714045207910317,
        "introduce": 0.04714045207910317,
        "a": 0.23570226039551584,
        "validation": 0.23570226039551584,
        "map": 0.04714045207910317,
        "with": 0.09428090415820634,
        "no_hallucination": 0.04714045207910317,
        "boolean": 0.04714045207910317,
        "default": 0.04714045207910317,
        "true": 0.04714045207910317,
        "respect": 0.04714045207910317,
        "repo": 0.09428090415820634,
        "level": 0.04714045207910317,
        "overrides": 0.04714045207910317,
        "while": 0.04714045207910317,
        "allowing": 0.04714045207910317,
        "docgen_validation_no_hallucination": 0.04714045207910317,
        "false": 0.04714045207910317,
        "to": 0.1414213562373095,
        "disable": 0.04714045207910317,
        "the": 0.4242640687119285,
        "check": 0.04714045207910317,
        "in": 0.1414213562373095,
        "ci": 0.04714045207910317,
        "emergencies": 0.04714045207910317,
        "add": 0.09428090415820634,
        "skip": 0.04714045207910317,
        "flag": 0.04714045207910317,
        "for": 0.18856180831641267,
        "docgen": 0.09428090415820634,
        "init": 0.04714045207910317,
        "update": 0.04714045207910317,
        "regenerate": 0.04714045207910317,
        "that": 0.1414213562373095,
        "flips": 0.04714045207910317,
        "toggle": 0.04714045207910317,
        "current": 0.04714045207910317,
        "execution": 0.04714045207910317,
        "only": 0.04714045207910317,
        "and": 0.282842712474619,
        "is": 0.04714045207910317,
        "surfaced": 0.04714045207910317,
        "run": 0.09428090415820634,
        "summary": 0.04714045207910317,
        "encourage": 0.04714045207910317,
        "re": 0.04714045207910317,
        "enabling": 0.04714045207910317,
        "logging": 0.09428090415820634,
        "ux": 0.04714045207910317,
        "errors": 0.04714045207910317,
        "show": 0.04714045207910317,
        "one": 0.04714045207910317,
        "line": 0.04714045207910317,
        "summaries": 0.04714045207910317,
        "per": 0.04714045207910317,
        "section": 0.04714045207910317,
        "quickstart": 0.04714045207910317,
        "references": 0.04714045207910317,
        "docker": 0.04714045207910317,
        "compose": 0.04714045207910317,
        "without": 0.09428090415820634,
        "supporting": 0.04714045207910317,
        "analyzer": 0.1414213562373095,
        "signal": 0.04714045207910317,
        "verbose": 0.09428090415820634,
        "prints": 0.04714045207910317,
        "offending": 0.04714045207910317,
        "sentence": 0.04714045207910317,
        "missing": 0.04714045207910317,
        "tokens": 0.04714045207910317,
        "short": 0.04714045207910317,
        "list": 0.04714045207910317,
        "of": 0.04714045207910317,
        "nearby": 0.04714045207910317,
        "evidence": 0.09428090415820634,
        "persist": 0.09428090415820634,
        "json": 0.04714045207910317,
        "report": 0.04714045207910317,
        "under": 0.04714045207910317,
        "capturing": 0.04714045207910317,
        "validator": 0.04714045207910317,
        "status": 0.09428090415820634,
        "issues": 0.04714045207910317,
        "selected": 0.04714045207910317,
        "forensic": 0.04714045207910317,
        "review": 0.04714045207910317,
        "testing": 0.04714045207910317,
        "strategy": 0.04714045207910317,
        "unit": 0.04714045207910317,
        "tests": 0.1414213562373095,
        "cover": 0.04714045207910317,
        "positive": 0.04714045207910317,
        "negative": 0.04714045207910317,
        "cases": 0.09428090415820634,
        "nohallucinationvalidator": 0.04714045207910317,
        "including": 0.04714045207910317,
        "edge": 0.04714045207910317,
        "such": 0.04714045207910317,
        "as": 0.04714045207910317,
        "citations": 0.04714045207910317,
        "using": 0.04714045207910317,
        "synonyms": 0.04714045207910317,
        "or": 0.04714045207910317,
        "pluralization": 0.04714045207910317,
        "bullet": 0.04714045207910317,
        "lists": 0.04714045207910317,
        "code": 0.04714045207910317,
        "blocks": 0.04714045207910317,
        "integration": 0.04714045207910317,
        "full": 0.04714045207910317,
        "on": 0.04714045207910317,
        "synthetic": 0.04714045207910317,
        "repos": 0.04714045207910317,
        "stored": 0.04714045207910317,
        "data": 0.04714045207910317,
        "confirm": 0.04714045207910317,
        "grounded": 0.04714045207910317,
        "readmes": 0.04714045207910317,
        "pass": 0.04714045207910317,
        "tampered": 0.04714045207910317,
        "outputs": 0.09428090415820634,
        "fail": 0.04714045207910317,
        "fast": 0.04714045207910317,
        "stub": 0.04714045207910317,
        "replacements": 0.04714045207910317,
        "regression": 0.04714045207910317,
        "fixtures": 0.04714045207910317,
        "asserting": 0.04714045207910317,
        "disabling": 0.04714045207910317,
        "via": 0.04714045207910317,
        "config": 0.04714045207910317,
        "leaves": 0.04714045207910317,
        "runs": 0.09428090415820634,
        "untouched": 0.04714045207910317,
        "enumerates": 0.04714045207910317,
        "flagged": 0.04714045207910317,
        "sentences": 0.04714045207910317,
        "story": 0.09428090415820634,
        "s": 0.1414213562373095,
        "033": 0.04714045207910317,
        "artifact": 0.04714045207910317,
        "persistence": 0.04714045207910317,
        "done": 0.04714045207910317,
        "text": 0.04714045207910317,
        "alongside": 0.04714045207910317,
        "embeddings": 0.04714045207910317,
        "so": 0.04714045207910317,
        "repeated": 0.04714045207910317,
        "can": 0.04714045207910317,
        "reuse": 0.04714045207910317,
        "structured": 0.04714045207910317,
        "signals": 0.04714045207910317,
        "reprocessing": 0.04714045207910317,
        "unchanged": 0.04714045207910317,
        "files": 0.04714045207910317,
        "dependencies": 0.04714045207910317,
        "already": 0.04714045207910317,
        "completed": 0.04714045207910317,
        "003": 0.04714045207910317,
        "scanner": 0.04714045207910317,
        "020": 0.04714045207910317,
        "embedding": 0.04714045207910317,
        "cache": 0.04714045207910317
      },
      "text": "& CLI Updates:** - Introduce a `validation` map with a `no_hallucination` boolean (default `true`). Respect repo-level overrides while allowing `DOCGEN_VALIDATION_NO_HALLUCINATION=false` to disable the check in CI emergencies. - Add a `--skip-validation` flag for `docgen init|update|regenerate` that flips the toggle for the current execution only and is surfaced in the run summary to encourage re-enabling. - **Logging & UX:** - CLI errors show one-line summaries per section (`quickstart: references docker compose without supporting analyzer signal`). `--verbose` prints the offending sentence, the missing tokens, and a short list of nearby evidence. - Persist a `validation.json` report under `.docgen/` capturing the validator status, issues, and selected evidence for forensic review. - **Testing Strategy:** - Unit tests cover positive/negative cases for the `NoHallucinationValidator`, including edge cases such as citations using synonyms or pluralization, bullet lists, and code blocks. - Integration tests run the full CLI on synthetic repos stored in `tests/data/validation/` to confirm grounded READMEs pass and tampered outputs fail fast with stub replacements. - Add regression fixtures asserting that disabling validation via config/CLI leaves runs untouched and that verbose logging enumerates flagged sentences. ## Story S-033 \u2014 Analyzer Artifact Persistence - **Status:** \u2714 Done - **Story Text:** Persist analyzer outputs alongside embeddings so repeated runs can reuse structured signals without reprocessing unchanged files. - **Dependencies already completed:** S-003 (Repo scanner), S-020 (embedding cache",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#3",
      "vector": {
        "story": 0.19975046777556893,
        "s": 0.2996257016633534,
        "033": 0.04993761694389223,
        "analyzer": 0.19975046777556893,
        "artifact": 0.09987523388778446,
        "persistence": 0.04993761694389223,
        "status": 0.09987523388778446,
        "done": 0.09987523388778446,
        "text": 0.09987523388778446,
        "persist": 0.04993761694389223,
        "outputs": 0.09987523388778446,
        "alongside": 0.04993761694389223,
        "embeddings": 0.04993761694389223,
        "so": 0.04993761694389223,
        "repeated": 0.04993761694389223,
        "runs": 0.09987523388778446,
        "can": 0.04993761694389223,
        "reuse": 0.04993761694389223,
        "structured": 0.04993761694389223,
        "signals": 0.09987523388778446,
        "without": 0.04993761694389223,
        "reprocessing": 0.04993761694389223,
        "unchanged": 0.09987523388778446,
        "files": 0.09987523388778446,
        "dependencies": 0.09987523388778446,
        "already": 0.09987523388778446,
        "completed": 0.09987523388778446,
        "003": 0.04993761694389223,
        "repo": 0.09987523388778446,
        "scanner": 0.04993761694389223,
        "020": 0.04993761694389223,
        "embedding": 0.04993761694389223,
        "cache": 0.09987523388778446,
        "groundwork": 0.09987523388778446,
        "constraints": 0.09987523388778446,
        "store": 0.04993761694389223,
        "artifacts": 0.04993761694389223,
        "under": 0.04993761694389223,
        "docgen": 0.04993761694389223,
        "with": 0.1498128508316767,
        "versioning": 0.04993761694389223,
        "to": 0.19975046777556893,
        "handle": 0.04993761694389223,
        "schema": 0.04993761694389223,
        "changes": 0.04993761694389223,
        "refresh": 0.04993761694389223,
        "results": 0.04993761694389223,
        "incrementally": 0.04993761694389223,
        "based": 0.09987523388778446,
        "on": 0.04993761694389223,
        "file": 0.04993761694389223,
        "hashes": 0.04993761694389223,
        "and": 0.2996257016633534,
        "invalidate": 0.04993761694389223,
        "when": 0.19975046777556893,
        "analyzers": 0.04993761694389223,
        "change": 0.04993761694389223,
        "keep": 0.04993761694389223,
        "storage": 0.04993761694389223,
        "format": 0.04993761694389223,
        "json": 0.04993761694389223,
        "serializable": 0.04993761694389223,
        "human": 0.04993761694389223,
        "auditable": 0.04993761694389223,
        "non": 0.09987523388778446,
        "goals": 0.1498128508316767,
        "remote": 0.04993761694389223,
        "backends": 0.04993761694389223,
        "or": 0.04993761694389223,
        "cross": 0.04993761694389223,
        "sharing": 0.04993761694389223,
        "acceptance": 0.04993761694389223,
        "criteria": 0.04993761694389223,
        "saved": 0.04993761694389223,
        "reloaded": 0.04993761694389223,
        "during": 0.04993761694389223,
        "orchestrator": 0.04993761694389223,
        "skipping": 0.04993761694389223,
        "recomputation": 0.04993761694389223,
        "inputs": 0.04993761694389223,
        "integration": 0.09987523388778446,
        "tests": 0.04993761694389223,
        "demonstrate": 0.04993761694389223,
        "speed": 0.04993761694389223,
        "up": 0.04993761694389223,
        "by": 0.09987523388778446,
        "reusing": 0.04993761694389223,
        "cached": 0.04993761694389223,
        "correct": 0.04993761694389223,
        "invalidation": 0.04993761694389223,
        "mutate": 0.04993761694389223,
        "documentation": 0.04993761694389223,
        "in": 0.04993761694389223,
        "spec": 0.09987523388778446,
        "md": 0.04993761694389223,
        "updated": 0.04993761694389223,
        "reflect": 0.04993761694389223,
        "caching": 0.04993761694389223,
        "behavior": 0.04993761694389223,
        "034": 0.04993761694389223,
        "service": 0.1498128508316767,
        "mode": 0.09987523388778446,
        "extended": 0.04993761694389223,
        "runtimes": 0.04993761694389223,
        "deliver": 0.04993761694389223,
        "fastapi": 0.09987523388778446,
        "llama": 0.09987523388778446,
        "cpp": 0.09987523388778446,
        "runtime": 0.04993761694389223,
        "adapter": 0.09987523388778446,
        "tree": 0.09987523388778446,
        "sitter": 0.09987523388778446,
        "powered": 0.04993761694389223,
        "symbol": 0.04993761694389223,
        "extraction": 0.04993761694389223,
        "round": 0.04993761694389223,
        "out": 0.04993761694389223,
        "stretch": 0.04993761694389223,
        "010": 0.04993761694389223,
        "git": 0.04993761694389223,
        "publishing": 0.04993761694389223,
        "infrastructure": 0.04993761694389223,
        "017": 0.04993761694389223,
        "entrypoint": 0.04993761694389223,
        "detection": 0.04993761694389223,
        "must": 0.04993761694389223,
        "expose": 0.04993761694389223,
        "endpoints": 0.04993761694389223,
        "for": 0.09987523388778446,
        "init": 0.04993761694389223,
        "update": 0.04993761694389223,
        "dry": 0.04993761694389223,
        "run": 0.04993761694389223,
        "authentication": 0.04993761694389223,
        "disabled": 0.04993761694389223,
        "default": 0.04993761694389223,
        "but": 0.04993761694389223,
        "ready": 0.04993761694389223,
        "future": 0.04993761694389223,
        "hardening": 0.04993761694389223,
        "hooks": 0.04993761694389223,
        "should": 0.04993761694389223,
        "mirror": 0.04993761694389223,
        "llmrunner": 0.04993761694389223,
        "interface": 0.04993761694389223,
        "enforce": 0.04993761694389223,
        "local": 0.04993761694389223,
        "execution": 0.04993761694389223,
        "paths": 0.04993761694389223,
        "limited": 0.04993761694389223,
        "supported": 0.04993761694389223,
        "languages": 0.04993761694389223,
        "python": 0.04993761694389223,
        "java": 0.04993761694389223,
        "typescript": 0.04993761694389223,
        "graceful": 0.04993761694389223,
        "degradation": 0.04993761694389223,
        "parsers": 0.04993761694389223,
        "unavailable": 0.04993761694389223,
        "production": 0.04993761694389223
      },
      "text": "## Story S-033 \u2014 Analyzer Artifact Persistence - **Status:** \u2714 Done - **Story Text:** Persist analyzer outputs alongside embeddings so repeated runs can reuse structured signals without reprocessing unchanged files. - **Dependencies already completed:** S-003 (Repo scanner), S-020 (embedding cache groundwork) - **Constraints:** - Store artifacts under `.docgen/` with versioning to handle schema changes. - Refresh analyzer results incrementally based on file hashes and invalidate when analyzers change. - Keep storage format JSON-serializable and human-auditable. - **Non-Goals:** Remote cache backends or cross-repo sharing. - **Acceptance Criteria:** - Analyzer outputs saved and reloaded during orchestrator runs, skipping recomputation when inputs unchanged. - Integration tests demonstrate speed-up by reusing cached signals and correct invalidation when files mutate. - Documentation in `spec/spec.md` updated to reflect artifact caching behavior. ## Story S-034 \u2014 Service Mode & Extended Runtimes - **Status:** \u2714 Done - **Story Text:** Deliver FastAPI-based service mode, llama.cpp runtime adapter, and tree-sitter powered symbol extraction to round out stretch goals. - **Dependencies already completed:** S-010 (Git publishing infrastructure), S-017 (entrypoint detection groundwork) - **Constraints:** - FastAPI service must expose endpoints for init/update/dry-run with authentication disabled by default but ready for future hardening hooks. - llama.cpp adapter should mirror `LLMRunner` interface and enforce local execution paths. - Tree-sitter integration limited to supported languages (Python/Java/TypeScript) with graceful degradation when parsers unavailable. - **Non-Goals:** Production",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/jira_stories.md#4",
      "vector": {
        "with": 0.21594472522460836,
        "authentication": 0.07198157507486945,
        "disabled": 0.07198157507486945,
        "by": 0.1439631501497389,
        "default": 0.07198157507486945,
        "but": 0.07198157507486945,
        "ready": 0.07198157507486945,
        "for": 0.1439631501497389,
        "future": 0.07198157507486945,
        "hardening": 0.07198157507486945,
        "hooks": 0.07198157507486945,
        "llama": 0.1439631501497389,
        "cpp": 0.1439631501497389,
        "adapter": 0.1439631501497389,
        "should": 0.07198157507486945,
        "mirror": 0.07198157507486945,
        "llmrunner": 0.07198157507486945,
        "interface": 0.07198157507486945,
        "and": 0.4318894504492167,
        "enforce": 0.07198157507486945,
        "local": 0.07198157507486945,
        "execution": 0.07198157507486945,
        "paths": 0.07198157507486945,
        "tree": 0.1439631501497389,
        "sitter": 0.1439631501497389,
        "integration": 0.07198157507486945,
        "limited": 0.07198157507486945,
        "to": 0.1439631501497389,
        "supported": 0.07198157507486945,
        "languages": 0.07198157507486945,
        "python": 0.07198157507486945,
        "java": 0.07198157507486945,
        "typescript": 0.07198157507486945,
        "graceful": 0.07198157507486945,
        "degradation": 0.07198157507486945,
        "when": 0.07198157507486945,
        "parsers": 0.07198157507486945,
        "unavailable": 0.07198157507486945,
        "non": 0.07198157507486945,
        "goals": 0.1439631501497389,
        "production": 0.07198157507486945,
        "deployment": 0.07198157507486945,
        "tooling": 0.07198157507486945,
        "or": 0.07198157507486945,
        "advanced": 0.07198157507486945,
        "queueing": 0.07198157507486945,
        "acceptance": 0.07198157507486945,
        "criteria": 0.07198157507486945,
        "service": 0.1439631501497389,
        "mode": 0.07198157507486945,
        "passes": 0.07198157507486945,
        "end": 0.1439631501497389,
        "tests": 0.21594472522460836,
        "invoking": 0.07198157507486945,
        "fastapi": 0.07198157507486945,
        "routes": 0.07198157507486945,
        "reusing": 0.07198157507486945,
        "orchestrator": 0.07198157507486945,
        "logic": 0.07198157507486945,
        "covered": 0.07198157507486945,
        "unit": 0.07198157507486945,
        "simulating": 0.07198157507486945,
        "cli": 0.07198157507486945,
        "shared": 0.07198157507486945,
        "configuration": 0.07198157507486945,
        "analyzer": 0.07198157507486945,
        "enriches": 0.07198157507486945,
        "signals": 0.07198157507486945,
        "symbol": 0.07198157507486945,
        "metadata": 0.07198157507486945,
        "associated": 0.07198157507486945,
        "validate": 0.07198157507486945,
        "extraction": 0.07198157507486945,
        "on": 0.07198157507486945,
        "fixtures": 0.07198157507486945,
        "updated": 0.07198157507486945,
        "documentation": 0.07198157507486945,
        "usage": 0.07198157507486945,
        "extended": 0.07198157507486945,
        "runtimes": 0.07198157507486945,
        "in": 0.1439631501497389,
        "docs": 0.07198157507486945,
        "spec": 0.1439631501497389,
        "md": 0.07198157507486945,
        "next": 0.07198157507486945,
        "actions": 0.07198157507486945,
        "execute": 0.07198157507486945,
        "the": 0.07198157507486945,
        "stories": 0.07198157507486945,
        "above": 0.07198157507486945,
        "sequentially": 0.07198157507486945,
        "upon": 0.07198157507486945,
        "completion": 0.07198157507486945,
        "reassess": 0.07198157507486945,
        "remaining": 0.07198157507486945,
        "stretch": 0.07198157507486945,
        "knowledge": 0.07198157507486945,
        "graph": 0.07198157507486945,
        "secret": 0.07198157507486945,
        "scanning": 0.07198157507486945,
        "if": 0.07198157507486945,
        "still": 0.07198157507486945,
        "scope": 0.07198157507486945
      },
      "text": "with authentication disabled by default but ready for future hardening hooks. - llama.cpp adapter should mirror `LLMRunner` interface and enforce local execution paths. - Tree-sitter integration limited to supported languages (Python/Java/TypeScript) with graceful degradation when parsers unavailable. - **Non-Goals:** Production deployment tooling or advanced queueing. - **Acceptance Criteria:** - Service mode passes end-to-end tests invoking FastAPI routes and reusing orchestrator logic. - llama.cpp adapter covered by unit tests simulating CLI and shared configuration. - Tree-sitter analyzer enriches signals with symbol metadata and associated tests validate extraction on fixtures. - Updated documentation for service usage and extended runtimes in `docs/` and `spec/spec.md`. --- **Next Actions:** Execute the stories above sequentially; upon completion reassess remaining stretch goals (knowledge graph, secret scanning) if still in scope.",
      "metadata": {
        "path": "spec/jira_stories.md",
        "tags": [
          "docs"
        ],
        "hash": "33f87efba4bfcb39ff09ce02c9bfc578bddbc4277bd63741022608e2859202bd"
      }
    },
    {
      "id": "spec/prompt_template.md#0",
      "vector": {
        "below": 0.09417632186960222,
        "is": 0.09417632186960222,
        "a": 0.18835264373920443,
        "drop": 0.04708816093480111,
        "in": 0.18835264373920443,
        "prompt": 0.09417632186960222,
        "template": 0.09417632186960222,
        "you": 0.14126448280440332,
        "can": 0.04708816093480111,
        "reuse": 0.04708816093480111,
        "for": 0.18835264373920443,
        "each": 0.04708816093480111,
        "single": 0.09417632186960222,
        "story": 0.5179697702828122,
        "s": 0.18835264373920443,
        "001": 0.09417632186960222,
        "044": 0.04708816093480111,
        "followed": 0.04708816093480111,
        "by": 0.04708816093480111,
        "two": 0.04708816093480111,
        "filled": 0.04708816093480111,
        "examples": 0.04708816093480111,
        "and": 0.18835264373920443,
        "016": 0.04708816093480111,
        "one": 0.04708816093480111,
        "at": 0.09417632186960222,
        "time": 0.04708816093480111,
        "implementation": 0.04708816093480111,
        "use": 0.09417632186960222,
        "this": 0.09417632186960222,
        "exact": 0.04708816093480111,
        "structure": 0.04708816093480111,
        "every": 0.04708816093480111,
        "replace": 0.04708816093480111,
        "placeholders": 0.04708816093480111,
        "with": 0.04708816093480111,
        "your": 0.04708816093480111,
        "specifics": 0.04708816093480111,
        "before": 0.04708816093480111,
        "sending": 0.04708816093480111,
        "system": 0.04708816093480111,
        "role": 0.04708816093480111,
        "are": 0.04708816093480111,
        "principal": 0.04708816093480111,
        "python": 0.14126448280440332,
        "engineer": 0.04708816093480111,
        "implementing": 0.04708816093480111,
        "tightly": 0.04708816093480111,
        "scoped": 0.04708816093480111,
        "an": 0.04708816093480111,
        "existing": 0.04708816093480111,
        "repository": 0.04708816093480111,
        "must": 0.04708816093480111,
        "implement": 0.04708816093480111,
        "only": 0.04708816093480111,
        "the": 0.14126448280440332,
        "no": 0.14126448280440332,
        "scope": 0.04708816093480111,
        "drift": 0.04708816093480111,
        "future": 0.04708816093480111,
        "stories": 0.04708816093480111,
        "produce": 0.04708816093480111,
        "production": 0.04708816093480111,
        "grade": 0.04708816093480111,
        "cross": 0.04708816093480111,
        "platform": 0.04708816093480111,
        "code": 0.09417632186960222,
        "windows": 0.04708816093480111,
        "macos": 0.04708816093480111,
        "3": 0.09417632186960222,
        "11": 0.09417632186960222,
        "follow": 0.04708816093480111,
        "repo": 0.04708816093480111,
        "conventions": 0.04708816093480111,
        "poetry": 0.09417632186960222,
        "ruff": 0.09417632186960222,
        "black": 0.09417632186960222,
        "mypy": 0.09417632186960222,
        "strict": 0.09417632186960222,
        "pytest": 0.14126448280440332,
        "logging": 0.04708816093480111,
        "prints": 0.04708816093480111,
        "library": 0.04708816093480111,
        "type": 0.04708816093480111,
        "hints": 0.04708816093480111,
        "everywhere": 0.04708816093480111,
        "keep": 0.04708816093480111,
        "audio": 0.09417632186960222,
        "callbacks": 0.04708816093480111,
        "non": 0.09417632186960222,
        "blocking": 0.04708816093480111,
        "prefer": 0.04708816093480111,
        "ring": 0.04708816093480111,
        "buffers": 0.04708816093480111,
        "preallocated": 0.04708816093480111,
        "arrays": 0.04708816093480111,
        "avoid": 0.04708816093480111,
        "os": 0.04708816093480111,
        "specific": 0.04708816093480111,
        "imports": 0.04708816093480111,
        "module": 0.04708816093480111,
        "top": 0.04708816093480111,
        "level": 0.04708816093480111,
        "when": 0.04708816093480111,
        "something": 0.04708816093480111,
        "ambiguous": 0.04708816093480111,
        "make": 0.04708816093480111,
        "smallest": 0.04708816093480111,
        "reasonable": 0.04708816093480111,
        "assumption": 0.04708816093480111,
        "state": 0.04708816093480111,
        "it": 0.04708816093480111,
        "assumptions": 0.04708816093480111,
        "section": 0.04708816093480111,
        "proceed": 0.04708816093480111,
        "context": 0.04708816093480111,
        "id": 0.04708816093480111,
        "story_id": 0.04708816093480111,
        "title": 0.04708816093480111,
        "story_title": 0.04708816093480111,
        "text": 0.04708816093480111,
        "story_text": 0.04708816093480111,
        "dependencies": 0.04708816093480111,
        "already": 0.04708816093480111,
        "completed": 0.04708816093480111,
        "dependencies_list_or_none": 0.04708816093480111,
        "constraints": 0.04708816093480111,
        "from": 0.04708816093480111,
        "prd": 0.04708816093480111,
        "backlog": 0.04708816093480111,
        "key_constraints": 0.04708816093480111,
        "goals": 0.04708816093480111,
        "non_goals": 0.04708816093480111,
        "environment": 0.04708816093480111,
        "tooling": 0.04708816093480111,
        "fixed": 0.04708816093480111,
        "package": 0.04708816093480111,
        "manager": 0.04708816093480111,
        "linters": 0.04708816093480111,
        "formatters": 0.04708816093480111,
        "static": 0.04708816093480111,
        "typing": 0.04708816093480111,
        "tests": 0.04708816093480111,
        "cov": 0.04708816093480111,
        "ui": 0.04708816093480111,
        "pyside6": 0.04708816093480111,
        "if": 0.09417632186960222,
        "relevant": 0.09417632186960222,
        "to": 0.04708816093480111,
        "i": 0.04708816093480111,
        "o": 0.04708816093480111,
        "sounddevice": 0.04708816093480111,
        "portaudio": 0.04708816093480111
      },
      "text": "Below is a **drop\u2011in prompt template** you can reuse for **each single story (S\u2011001 \u2192 S\u2011044)**, followed by **two filled examples** (for S\u2011001 and S\u2011016). --- ## \ud83d\udd27 One\u2011Story\u2011At\u2011A\u2011Time Implementation Prompt (Template) > **Use this exact structure for every story.** Replace `{{\u2026}}` placeholders with your specifics before sending. --- **SYSTEM / ROLE** You are a **Principal Python engineer** implementing a single, tightly scoped story in an existing repository. You must: * Implement **only the story below** (no scope drift, no future stories). * Produce production\u2011grade, cross\u2011platform code (Windows/macOS), Python 3.11. * Follow repo conventions: Poetry, ruff, black, mypy (strict), pytest. * Use logging (no prints) in library code, and type hints everywhere. * Keep audio callbacks non\u2011blocking; prefer ring buffers and preallocated arrays. * Avoid OS\u2011specific imports at module top level. * When something is ambiguous, **make the smallest reasonable assumption**, state it in the *Assumptions* section, and proceed. --- ### Story Context * **Story ID:** {{STORY_ID}} * **Story Title:** {{STORY_TITLE}} * **Story Text:** {{STORY_TEXT}} * **Dependencies already completed:** {{DEPENDENCIES_LIST_OR_NONE}} * **Constraints from PRD/backlog:** {{KEY_CONSTRAINTS}} * **Non\u2011Goals for this story:** {{NON_GOALS}} ### Environment & Tooling (fixed) * **Python:** 3.11 * **Package manager:** Poetry * **Linters/formatters:** ruff, black * **Static typing:** mypy (strict) * **Tests:** pytest + pytest\u2011cov * **UI:** PySide6 (if relevant to story) * **Audio I/O:** sounddevice/PortAudio (if relevant)",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#1",
      "vector": {
        "non_goals": 0.05581455721859476,
        "environment": 0.05581455721859476,
        "tooling": 0.05581455721859476,
        "fixed": 0.05581455721859476,
        "python": 0.16744367165578428,
        "3": 0.11162911443718952,
        "11": 0.05581455721859476,
        "package": 0.05581455721859476,
        "manager": 0.05581455721859476,
        "poetry": 0.05581455721859476,
        "linters": 0.05581455721859476,
        "formatters": 0.05581455721859476,
        "ruff": 0.11162911443718952,
        "black": 0.11162911443718952,
        "static": 0.05581455721859476,
        "typing": 0.05581455721859476,
        "mypy": 0.11162911443718952,
        "strict": 0.05581455721859476,
        "tests": 0.11162911443718952,
        "pytest": 0.16744367165578428,
        "cov": 0.05581455721859476,
        "ui": 0.05581455721859476,
        "pyside6": 0.05581455721859476,
        "if": 0.2790727860929738,
        "relevant": 0.2790727860929738,
        "to": 0.16744367165578428,
        "story": 0.05581455721859476,
        "audio": 0.05581455721859476,
        "i": 0.11162911443718952,
        "o": 0.05581455721859476,
        "sounddevice": 0.05581455721859476,
        "portaudio": 0.05581455721859476,
        "ml": 0.05581455721859476,
        "runtime": 0.05581455721859476,
        "onnxruntime": 0.05581455721859476,
        "current": 0.05581455721859476,
        "repository": 0.05581455721859476,
        "snapshot": 0.05581455721859476,
        "paste": 0.11162911443718952,
        "fresh": 0.05581455721859476,
        "snapshots": 0.05581455721859476,
        "so": 0.05581455721859476,
        "the": 0.11162911443718952,
        "model": 0.05581455721859476,
        "does": 0.05581455721859476,
        "not": 0.05581455721859476,
        "hallucinate": 0.05581455721859476,
        "keep": 0.05581455721859476,
        "these": 0.05581455721859476,
        "short": 0.11162911443718952,
        "but": 0.05581455721859476,
        "sufficient": 0.05581455721859476,
        "root": 0.05581455721859476,
        "tree": 0.11162911443718952,
        "a": 0.05581455721859476,
        "git": 0.11162911443718952,
        "or": 0.11162911443718952,
        "ls": 0.05581455721859476,
        "files": 0.22325822887437904,
        "repo_tree": 0.05581455721859476,
        "key": 0.05581455721859476,
        "only": 0.05581455721859476,
        "sections": 0.11162911443718952,
        "path": 0.11162911443718952,
        "file1": 0.05581455721859476,
        "file1_relevant_snippet": 0.05581455721859476,
        "file2": 0.05581455721859476,
        "file2_relevant_snippet": 0.05581455721859476,
        "pinned": 0.05581455721859476,
        "pyproject": 0.05581455721859476,
        "toml": 0.11162911443718952,
        "parts": 0.05581455721859476,
        "pyproject_snippet": 0.05581455721859476,
        "acceptance": 0.05581455721859476,
        "criteria": 0.05581455721859476,
        "definition": 0.05581455721859476,
        "of": 0.16744367165578428,
        "done": 0.05581455721859476,
        "functional": 0.05581455721859476,
        "functional_doc": 0.05581455721859476,
        "quality": 0.05581455721859476,
        "pass": 0.05581455721859476,
        "passes": 0.05581455721859476,
        "with": 0.11162911443718952,
        "90": 0.05581455721859476,
        "coverage": 0.05581455721859476,
        "for": 0.05581455721859476,
        "new": 0.05581455721859476,
        "code": 0.05581455721859476,
        "cross": 0.05581455721859476,
        "platform": 0.05581455721859476,
        "no": 0.11162911443718952,
        "os": 0.05581455721859476,
        "specific": 0.05581455721859476,
        "breakage": 0.05581455721859476,
        "guarded": 0.05581455721859476,
        "imports": 0.05581455721859476,
        "where": 0.05581455721859476,
        "needed": 0.05581455721859476,
        "performance": 0.05581455721859476,
        "applicable": 0.05581455721859476,
        "perf_requirements": 0.05581455721859476,
        "docs": 0.11162911443718952,
        "inline": 0.05581455721859476,
        "docstrings": 0.05581455721859476,
        "readme": 0.05581455721859476,
        "module": 0.05581455721859476,
        "level": 0.05581455721859476,
        "updated": 0.05581455721859476,
        "user": 0.05581455721859476,
        "facing": 0.05581455721859476,
        "unrelated": 0.05581455721859476,
        "refactors": 0.05581455721859476,
        "minimal": 0.05581455721859476,
        "diff": 0.05581455721859476,
        "outside": 0.05581455721859476,
        "touched": 0.05581455721859476,
        "scope": 0.05581455721859476,
        "deliverables": 0.05581455721859476,
        "output": 0.05581455721859476,
        "contract": 0.05581455721859476,
        "return": 0.05581455721859476,
        "following": 0.05581455721859476,
        "in": 0.05581455721859476,
        "order": 0.05581455721859476,
        "exact": 0.11162911443718952,
        "headings": 0.05581455721859476,
        "1": 0.05581455721859476,
        "assumptions": 0.11162911443718952,
        "decisions": 0.05581455721859476,
        "bullet": 0.05581455721859476,
        "list": 0.05581455721859476,
        "any": 0.05581455721859476,
        "reasonable": 0.05581455721859476,
        "you": 0.11162911443718952,
        "made": 0.05581455721859476,
        "2": 0.05581455721859476,
        "planned": 0.05581455721859476,
        "changes": 0.05581455721859476,
        "tl": 0.05581455721859476,
        "dr": 0.05581455721859476,
        "summary": 0.05581455721859476,
        "what": 0.05581455721859476,
        "will": 0.05581455721859476,
        "add": 0.05581455721859476,
        "modify": 0.05581455721859476,
        "and": 0.11162911443718952,
        "why": 0.05581455721859476,
        "full": 0.05581455721859476,
        "test": 0.05581455721859476,
        "covering": 0.05581455721859476,
        "success": 0.05581455721859476,
        "edge": 0.05581455721859476,
        "cases": 0.05581455721859476,
        "error": 0.05581455721859476,
        "paths": 0.05581455721859476,
        "4": 0.05581455721859476,
        "validation": 0.05581455721859476,
        "steps": 0.05581455721859476,
        "local": 0.05581455721859476
      },
      "text": "{{NON_GOALS}} ### Environment & Tooling (fixed) * **Python:** 3.11 * **Package manager:** Poetry * **Linters/formatters:** ruff, black * **Static typing:** mypy (strict) * **Tests:** pytest + pytest\u2011cov * **UI:** PySide6 (if relevant to story) * **Audio I/O:** sounddevice/PortAudio (if relevant) * **ML runtime:** onnxruntime (if relevant) ### Current Repository Snapshot > Paste fresh snapshots so the model does not hallucinate. Keep these short but sufficient. * **Root tree (`tree -a -I .git` or `git ls-files`):** ``` {{REPO_TREE}} ``` * **Key files (paste only relevant sections):** * `{{PATH/TO/FILE1}}` ```python {{FILE1_RELEVANT_SNIPPET}} ``` * `{{PATH/TO/FILE2}}` ```python {{FILE2_RELEVANT_SNIPPET}} ``` * **Pinned pyproject.toml (relevant parts):** ```toml {{PYPROJECT_SNIPPET}} ``` ### Acceptance Criteria (Definition of Done) * Functional: {{FUNCTIONAL_DOC}} * Quality: **ruff/black/mypy** pass; **pytest** passes with **\u2265 90%** coverage for new code. * Cross\u2011platform: No OS\u2011specific breakage; guarded imports where needed. * Performance (if applicable): {{PERF_REQUIREMENTS}} * Docs: Inline docstrings; README or module\u2011level docs updated if user\u2011facing. * No unrelated refactors; minimal diff outside touched scope. ### Deliverables \u2014 **Output Contract** Return the following sections **in order**, with exact headings: 1. **Assumptions & Decisions** \u2013 bullet list of any reasonable assumptions you made. 2. **Planned Changes (TL;DR)** \u2013 short summary of what files you will add/modify and why. 3. **Tests** \u2013 full test files covering success, edge cases, and error paths. 4. **Validation Steps (Local)** \u2013 exact",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#2",
      "vector": {
        "of": 0.1487044791289829,
        "any": 0.04956815970966096,
        "reasonable": 0.04956815970966096,
        "assumptions": 0.04956815970966096,
        "you": 0.09913631941932192,
        "made": 0.04956815970966096,
        "2": 0.04956815970966096,
        "planned": 0.04956815970966096,
        "changes": 0.04956815970966096,
        "tl": 0.04956815970966096,
        "dr": 0.04956815970966096,
        "short": 0.04956815970966096,
        "summary": 0.04956815970966096,
        "what": 0.04956815970966096,
        "files": 0.1487044791289829,
        "will": 0.04956815970966096,
        "add": 0.04956815970966096,
        "modify": 0.04956815970966096,
        "and": 0.3965452776772877,
        "why": 0.04956815970966096,
        "3": 0.04956815970966096,
        "tests": 0.04956815970966096,
        "full": 0.04956815970966096,
        "test": 0.09913631941932192,
        "covering": 0.04956815970966096,
        "success": 0.04956815970966096,
        "edge": 0.04956815970966096,
        "cases": 0.04956815970966096,
        "error": 0.04956815970966096,
        "paths": 0.04956815970966096,
        "4": 0.04956815970966096,
        "validation": 0.04956815970966096,
        "steps": 0.04956815970966096,
        "local": 0.04956815970966096,
        "exact": 0.04956815970966096,
        "commands": 0.04956815970966096,
        "to": 0.09913631941932192,
        "run": 0.04956815970966096,
        "poetry": 0.04956815970966096,
        "install": 0.04956815970966096,
        "lint": 0.04956815970966096,
        "type": 0.04956815970966096,
        "expected": 0.04956815970966096,
        "outputs": 0.04956815970966096,
        "5": 0.04956815970966096,
        "conventional": 0.04956815970966096,
        "commit": 0.09913631941932192,
        "message": 0.09913631941932192,
        "a": 0.24784079854830482,
        "single": 0.04956815970966096,
        "with": 0.09913631941932192,
        "the": 0.24784079854830482,
        "story": 0.24784079854830482,
        "description": 0.04956815970966096,
        "ex": 0.04956815970966096,
        "s": 0.1487044791289829,
        "001": 0.1487044791289829,
        "implemented": 0.04956815970966096,
        "get": 0.04956815970966096,
        "customers": 0.04956815970966096,
        "endpoint": 0.04956815970966096,
        "implementation": 0.04956815970966096,
        "hints": 0.04956815970966096,
        "if": 0.1487044791289829,
        "helpful": 0.04956815970966096,
        "keep": 0.04956815970966096,
        "per": 0.04956815970966096,
        "frame": 0.04956815970966096,
        "allocations": 0.04956815970966096,
        "near": 0.04956815970966096,
        "zero": 0.04956815970966096,
        "in": 0.19827263883864385,
        "audio": 0.04956815970966096,
        "callbacks": 0.04956815970966096,
        "use": 0.04956815970966096,
        "dependency": 0.04956815970966096,
        "inversion": 0.04956815970966096,
        "define": 0.04956815970966096,
        "clear": 0.04956815970966096,
        "interfaces": 0.04956815970966096,
        "core": 0.1487044791289829,
        "or": 0.1487044791289829,
        "ml": 0.04956815970966096,
        "where": 0.04956815970966096,
        "specified": 0.04956815970966096,
        "backlog": 0.04956815970966096,
        "an": 0.04956815970966096,
        "external": 0.04956815970966096,
        "binary": 0.04956815970966096,
        "model": 0.04956815970966096,
        "is": 0.04956815970966096,
        "out": 0.04956815970966096,
        "scope": 0.04956815970966096,
        "for": 0.04956815970966096,
        "this": 0.09913631941932192,
        "provide": 0.04956815970966096,
        "deterministic": 0.04956815970966096,
        "stub": 0.04956815970966096,
        "todo": 0.04956815970966096,
        "feature": 0.04956815970966096,
        "flag": 0.04956815970966096,
        "important": 0.04956815970966096,
        "guardrails": 0.04956815970966096,
        "do": 0.1487044791289829,
        "not": 0.1487044791289829,
        "implement": 0.04956815970966096,
        "future": 0.04956815970966096,
        "stories": 0.04956815970966096,
        "introduce": 0.04956815970966096,
        "new": 0.04956815970966096,
        "dependencies": 0.04956815970966096,
        "without": 0.04956815970966096,
        "updating": 0.04956815970966096,
        "pyproject": 0.04956815970966096,
        "toml": 0.04956815970966096,
        "justifying": 0.04956815970966096,
        "them": 0.04956815970966096,
        "change": 0.04956815970966096,
        "licensing": 0.04956815970966096,
        "repo": 0.04956815970966096,
        "name": 0.04956815970966096,
        "ci": 0.04956815970966096,
        "workflows": 0.04956815970966096,
        "unless": 0.04956815970966096,
        "explicitly": 0.04956815970966096,
        "requested": 0.04956815970966096,
        "output": 0.04956815970966096,
        "would": 0.04956815970966096,
        "exceed": 0.04956815970966096,
        "limits": 0.04956815970966096,
        "split": 0.04956815970966096,
        "patch": 0.04956815970966096,
        "file": 0.04956815970966096,
        "contents": 0.04956815970966096,
        "by": 0.04956815970966096,
        "directory": 0.04956815970966096,
        "but": 0.04956815970966096,
        "still": 0.04956815970966096,
        "include": 0.04956815970966096,
        "all": 0.04956815970966096,
        "required": 0.04956815970966096,
        "example": 0.04956815970966096,
        "instantiation": 0.04956815970966096,
        "1": 0.04956815970966096,
        "initialize": 0.09913631941932192,
        "repository": 0.09913631941932192,
        "metadata": 0.04956815970966096,
        "copy": 0.04956815970966096,
        "adjust": 0.04956815970966096,
        "paste": 0.04956815970966096,
        "following": 0.04956815970966096,
        "as": 0.04956815970966096,
        "real": 0.04956815970966096,
        "prompt": 0.04956815970966096,
        "your": 0.04956815970966096,
        "llm": 0.04956815970966096,
        "id": 0.04956815970966096,
        "title": 0.04956815970966096
      },
      "text": "of any reasonable assumptions you made. 2. **Planned Changes (TL;DR)** \u2013 short summary of what files you will add/modify and why. 3. **Tests** \u2013 full test files covering success, edge cases, and error paths. 4. **Validation Steps (Local)** \u2013 exact commands to run (Poetry install, lint, type, test) and expected outputs. 5. **Conventional Commit Message** \u2013 a single commit with the story and a description, ex: \"S-001: Implemented the GET customers endpoint\" ### Implementation Hints (if helpful) * Keep per\u2011frame allocations near zero in audio callbacks. * Use dependency inversion: define clear interfaces in `core/` or `ml/` where specified in the backlog. * If an external binary or model is out of scope for this story, provide a deterministic stub with TODO and a feature flag. ### Important Guardrails * **Do not** implement future stories. * **Do not** introduce new dependencies without updating `pyproject.toml` and justifying them. * **Do not** change licensing, repo name, or CI workflows unless explicitly requested in this story. * If output would exceed message limits, **split the Patch and File Contents by directory** but still include all required files. --- ## \u2705 Example Instantiation #1 \u2014 S\u2011001 (Initialize repository & core metadata) > Copy, adjust, and paste the following as a real prompt to your LLM. **Story ID:** S\u2011001 **Story Title:** Initialize repository & core",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#3",
      "vector": {
        "include": 0.09611386626644254,
        "all": 0.04805693313322127,
        "required": 0.04805693313322127,
        "files": 0.04805693313322127,
        "example": 0.09611386626644254,
        "instantiation": 0.09611386626644254,
        "1": 0.09611386626644254,
        "s": 0.19222773253288508,
        "001": 0.09611386626644254,
        "initialize": 0.09611386626644254,
        "repository": 0.14417079939966382,
        "core": 0.09611386626644254,
        "metadata": 0.14417079939966382,
        "copy": 0.04805693313322127,
        "adjust": 0.04805693313322127,
        "and": 0.09611386626644254,
        "paste": 0.09611386626644254,
        "the": 0.19222773253288508,
        "following": 0.04805693313322127,
        "as": 0.09611386626644254,
        "a": 0.04805693313322127,
        "real": 0.04805693313322127,
        "prompt": 0.04805693313322127,
        "to": 0.04805693313322127,
        "your": 0.04805693313322127,
        "llm": 0.04805693313322127,
        "story": 0.28834159879932764,
        "id": 0.09611386626644254,
        "title": 0.09611386626644254,
        "text": 0.09611386626644254,
        "create": 0.04805693313322127,
        "poetry": 0.19222773253288508,
        "project": 0.09611386626644254,
        "voice": 0.09611386626644254,
        "xform": 0.09611386626644254,
        "add": 0.14417079939966382,
        "license": 0.04805693313322127,
        "apache": 0.04805693313322127,
        "2": 0.09611386626644254,
        "0": 0.14417079939966382,
        "readme": 0.14417079939966382,
        "with": 0.04805693313322127,
        "purpose": 0.09611386626644254,
        "install": 0.14417079939966382,
        "quickstart": 0.09611386626644254,
        "contributing": 0.04805693313322127,
        "editorconfig": 0.04805693313322127,
        "gitattributes": 0.04805693313322127,
        "gitignore": 0.09611386626644254,
        "pyproject": 0.09611386626644254,
        "toml": 0.09611386626644254,
        "python": 0.24028466566610635,
        "3": 0.14417079939966382,
        "11": 0.14417079939966382,
        "dependencies": 0.04805693313322127,
        "already": 0.04805693313322127,
        "completed": 0.04805693313322127,
        "none": 0.04805693313322127,
        "constraints": 0.04805693313322127,
        "use": 0.09611386626644254,
        "repo": 0.04805693313322127,
        "name": 0.09611386626644254,
        "keep": 0.09611386626644254,
        "docs": 0.04805693313322127,
        "concise": 0.04805693313322127,
        "but": 0.04805693313322127,
        "actionable": 0.04805693313322127,
        "non": 0.04805693313322127,
        "goals": 0.04805693313322127,
        "no": 0.14417079939966382,
        "code": 0.04805693313322127,
        "beyond": 0.04805693313322127,
        "scaffolding": 0.04805693313322127,
        "ci": 0.09611386626644254,
        "package": 0.04805693313322127,
        "layout": 0.04805693313322127,
        "yet": 0.09611386626644254,
        "current": 0.04805693313322127,
        "snapshot": 0.04805693313322127,
        "empty": 0.09611386626644254,
        "directory": 0.04805693313322127,
        "acceptance": 0.04805693313322127,
        "criteria": 0.04805693313322127,
        "definition": 0.04805693313322127,
        "of": 0.04805693313322127,
        "done": 0.04805693313322127,
        "succeeds": 0.04805693313322127,
        "on": 0.04805693313322127,
        "macos": 0.09611386626644254,
        "windows": 0.09611386626644254,
        "md": 0.04805693313322127,
        "includes": 0.04805693313322127,
        "instructions": 0.04805693313322127,
        "placeholder": 0.04805693313322127,
        "running": 0.04805693313322127,
        "run": 0.04805693313322127,
        "v": 0.04805693313322127,
        "prints": 0.04805693313322127,
        "x": 0.04805693313322127,
        "deliverables": 0.09611386626644254,
        "output": 0.04805693313322127,
        "contract": 0.04805693313322127,
        "then": 0.04805693313322127,
        "list": 0.04805693313322127,
        "from": 0.04805693313322127,
        "template": 0.04805693313322127,
        "implementation": 0.04805693313322127,
        "hints": 0.04805693313322127,
        "standard": 0.04805693313322127,
        "for": 0.04805693313322127,
        "version": 0.04805693313322127,
        "authors": 0.04805693313322127,
        "in": 0.04805693313322127,
        "important": 0.04805693313322127,
        "guardrails": 0.04805693313322127,
        "do": 0.04805693313322127,
        "not": 0.04805693313322127,
        "or": 0.04805693313322127,
        "tests": 0.04805693313322127,
        "succinct": 0.04805693313322127,
        "section": 0.04805693313322127,
        "headers": 0.04805693313322127,
        "placeholders": 0.04805693313322127,
        "016": 0.09611386626644254,
        "model": 0.09611386626644254,
        "registry": 0.09611386626644254,
        "provider": 0.09611386626644254,
        "detection": 0.09611386626644254,
        "implement": 0.04805693313322127,
        "ml": 0.04805693313322127,
        "runtime": 0.14417079939966382,
        "onnx_loader": 0.04805693313322127,
        "py": 0.04805693313322127,
        "that": 0.04805693313322127,
        "chooses": 0.04805693313322127,
        "best": 0.04805693313322127,
        "onnx": 0.04805693313322127,
        "ep": 0.04805693313322127,
        "at": 0.04805693313322127,
        "tensorrt": 0.04805693313322127,
        "directml": 0.04805693313322127
      },
      "text": "include all required files. --- ## \u2705 Example Instantiation #1 \u2014 S\u2011001 (Initialize repository & core metadata) > Copy, adjust, and paste the following as a real prompt to your LLM. **Story ID:** S\u2011001 **Story Title:** Initialize repository & core metadata **Story Text:** Create Poetry project `voice-xform`; add LICENSE (Apache\u20112.0), README with purpose/install/quickstart, CONTRIBUTING, .editorconfig, .gitattributes, .gitignore, pyproject.toml (Python 3.11). **Dependencies already completed:** none **Constraints:** Use Poetry; repo name `voice-xform`; Python 3.11; keep docs concise but actionable. **Non\u2011Goals:** No code beyond scaffolding; no CI; no package layout yet. **Current Repository Snapshot** *(empty directory)* ``` (Empty) ``` **Acceptance Criteria (Definition of Done)** * `poetry install` succeeds on macOS & Windows. * `README.md` includes purpose, install instructions, and placeholder quickstart. * Running `poetry run python -V` prints Python 3.11.x. **Deliverables \u2014 Output Contract** (then paste the **Deliverables** list from the template) **Implementation Hints** * Use standard `.gitignore` for Python + macOS + Windows. * Include project metadata (name, version `0.1.0`, authors) in `pyproject.toml`. **Important Guardrails** * Do not add CI or tests yet. * Keep README succinct; add section headers as placeholders. --- ## \u2705 Example Instantiation #2 \u2014 S\u2011016 (Model registry & provider detection) **Story ID:** S\u2011016 **Story Title:** Model registry & provider detection **Story Text:** Implement `ml/runtime/onnx_loader.py` that chooses the best ONNX Runtime EP at runtime (TensorRT > DirectML >",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#4",
      "vector": {
        "example": 0.045267873021259265,
        "instantiation": 0.045267873021259265,
        "2": 0.045267873021259265,
        "s": 0.22633936510629632,
        "016": 0.09053574604251853,
        "model": 0.18107149208503706,
        "registry": 0.18107149208503706,
        "provider": 0.18107149208503706,
        "detection": 0.09053574604251853,
        "story": 0.1358036190637778,
        "id": 0.045267873021259265,
        "title": 0.045267873021259265,
        "text": 0.045267873021259265,
        "implement": 0.09053574604251853,
        "ml": 0.1358036190637778,
        "runtime": 0.18107149208503706,
        "onnx_loader": 0.09053574604251853,
        "py": 0.2716072381275556,
        "that": 0.09053574604251853,
        "chooses": 0.045267873021259265,
        "the": 0.18107149208503706,
        "best": 0.045267873021259265,
        "onnx": 0.045267873021259265,
        "ep": 0.1358036190637778,
        "at": 0.09053574604251853,
        "tensorrt": 0.045267873021259265,
        "directml": 0.045267873021259265,
        "cpu": 0.09053574604251853,
        "mps": 0.045267873021259265,
        "coreml": 0.045267873021259265,
        "on": 0.22633936510629632,
        "macos": 0.1358036190637778,
        "for": 0.09053574604251853,
        "paths": 0.045267873021259265,
        "versioning": 0.045267873021259265,
        "provide": 0.045267873021259265,
        "tests": 0.1358036190637778,
        "monkeypatch": 0.09053574604251853,
        "availability": 0.1358036190637778,
        "dependencies": 0.09053574604251853,
        "already": 0.045267873021259265,
        "completed": 0.045267873021259265,
        "004": 0.045267873021259265,
        "package": 0.045267873021259265,
        "layout": 0.045267873021259265,
        "002": 0.045267873021259265,
        "tooling": 0.045267873021259265,
        "003": 0.045267873021259265,
        "ci": 0.045267873021259265,
        "constraints": 0.045267873021259265,
        "no": 0.18107149208503706,
        "gpu": 0.045267873021259265,
        "specific": 0.045267873021259265,
        "imports": 0.045267873021259265,
        "module": 0.045267873021259265,
        "top": 0.045267873021259265,
        "level": 0.045267873021259265,
        "log": 0.045267873021259265,
        "chosen": 0.045267873021259265,
        "and": 0.18107149208503706,
        "fallbacks": 0.045267873021259265,
        "non": 0.045267873021259265,
        "goals": 0.045267873021259265,
        "real": 0.045267873021259265,
        "files": 0.09053574604251853,
        "yet": 0.045267873021259265,
        "inference": 0.045267873021259265,
        "calls": 0.045267873021259265,
        "current": 0.045267873021259265,
        "repository": 0.045267873021259265,
        "snapshot": 0.045267873021259265,
        "voice": 0.09053574604251853,
        "xform": 0.09053574604251853,
        "app": 0.045267873021259265,
        "core": 0.045267873021259265,
        "version": 0.09053574604251853,
        "__init__": 0.09053574604251853,
        "empty": 0.045267873021259265,
        "placeholder": 0.045267873021259265,
        "pyproject": 0.09053574604251853,
        "toml": 0.1358036190637778,
        "key": 0.045267873021259265,
        "relevant": 0.045267873021259265,
        "parts": 0.045267873021259265,
        "tool": 0.09053574604251853,
        "poetry": 0.09053574604251853,
        "name": 0.045267873021259265,
        "0": 0.1358036190637778,
        "1": 0.09053574604251853,
        "python": 0.045267873021259265,
        "3": 0.045267873021259265,
        "11": 0.045267873021259265,
        "onnxruntime": 0.09053574604251853,
        "18": 0.045267873021259265,
        "acceptance": 0.045267873021259265,
        "criteria": 0.045267873021259265,
        "definition": 0.045267873021259265,
        "of": 0.045267873021259265,
        "done": 0.045267873021259265,
        "select_providers": 0.045267873021259265,
        "returns": 0.045267873021259265,
        "an": 0.045267873021259265,
        "ordered": 0.045267873021259265,
        "list": 0.1358036190637778,
        "based": 0.045267873021259265,
        "platform": 0.09053574604251853,
        "logs": 0.045267873021259265,
        "contain": 0.045267873021259265,
        "selected": 0.045267873021259265,
        "reason": 0.045267873021259265,
        "fallback": 0.045267873021259265,
        "simulate": 0.045267873021259265,
        "get_available_providers": 0.045267873021259265,
        "assert": 0.045267873021259265,
        "selection": 0.045267873021259265,
        "order": 0.045267873021259265,
        "across": 0.045267873021259265,
        "windows": 0.09053574604251853,
        "linux": 0.045267873021259265,
        "mypy": 0.045267873021259265,
        "ruff": 0.045267873021259265,
        "pytest": 0.045267873021259265,
        "pass": 0.045267873021259265,
        "deliverables": 0.09053574604251853,
        "output": 0.045267873021259265,
        "contract": 0.045267873021259265,
        "then": 0.045267873021259265,
        "paste": 0.045267873021259265,
        "from": 0.045267873021259265,
        "template": 0.045267873021259265,
        "implementation": 0.045267873021259265,
        "hints": 0.045267873021259265,
        "detect": 0.045267873021259265,
        "os": 0.045267873021259265,
        "with": 0.045267873021259265,
        "system": 0.045267873021259265,
        "prefer": 0.045267873021259265,
        "tensorrtexecutionprovider": 0.045267873021259265,
        "nvidia": 0.045267873021259265,
        "dmlexecutionprovider": 0.045267873021259265,
        "coremlexecutionprovider": 0.045267873021259265,
        "or": 0.045267873021259265,
        "mpsexecutionprovider": 0.045267873021259265,
        "else": 0.045267873021259265,
        "expose": 0.045267873021259265,
        "a": 0.045267873021259265,
        "helper": 0.045267873021259265,
        "create_session": 0.045267873021259265,
        "path": 0.045267873021259265,
        "str": 0.09053574604251853,
        "preferred": 0.045267873021259265,
        "none": 0.045267873021259265,
        "inferencesession": 0.045267873021259265,
        "important": 0.045267873021259265,
        "guardrails": 0.045267873021259265,
        "actual": 0.045267873021259265
      },
      "text": "--- ## \u2705 Example Instantiation #2 \u2014 S\u2011016 (Model registry & provider detection) **Story ID:** S\u2011016 **Story Title:** Model registry & provider detection **Story Text:** Implement `ml/runtime/onnx_loader.py` that chooses the best ONNX Runtime EP at runtime (TensorRT > DirectML > CPU; MPS/CoreML on macOS). Implement `ml/registry.py` for model paths/versioning. Provide tests that monkeypatch provider availability. **Dependencies already completed:** S\u2011004 (package layout), S\u2011002 (tooling), S\u2011003 (CI) **Constraints:** No GPU\u2011specific imports at module top level. Log chosen EP and fallbacks. **Non\u2011Goals:** No real model files yet; no inference calls. **Current Repository Snapshot** ``` voice-xform/ app/ core/ version.py ml/ __init__.py runtime/ __init__.py registry.py # (empty placeholder) tests/ pyproject.toml ``` **Key files:** `pyproject.toml` (relevant parts) ```toml [tool.poetry] name = \"voice-xform\" version = \"0.1.0\" [tool.poetry.dependencies] python = \"^3.11\" onnxruntime = \"^1.18.0\" ``` **Acceptance Criteria (Definition of Done)** * `onnx_loader.select_providers()` returns an ordered provider list based on platform and availability. * Logs contain the selected EP and reason for fallback. * Tests simulate availability (monkeypatch `onnxruntime.get_available_providers`) and assert selection order across Windows/macOS/Linux. * mypy/ruff/pytest pass. **Deliverables \u2014 Output Contract** (then paste the **Deliverables** list from the template) **Implementation Hints** * Detect OS with `platform.system()`. * Prefer `\"TensorrtExecutionProvider\"` on NVIDIA, `\"DmlExecutionProvider\"` on Windows, `\"CoreMLExecutionProvider\"` or `\"MPSExecutionProvider\"` on macOS, else CPU. * Expose a helper `create_session(path: str, preferred: list[str] | None) -> InferenceSession`. **Important Guardrails** * No actual",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#5",
      "vector": {
        "template": 0.08971226080325131,
        "implementation": 0.04485613040162566,
        "hints": 0.04485613040162566,
        "detect": 0.04485613040162566,
        "os": 0.04485613040162566,
        "with": 0.08971226080325131,
        "platform": 0.08971226080325131,
        "system": 0.08971226080325131,
        "prefer": 0.04485613040162566,
        "tensorrtexecutionprovider": 0.04485613040162566,
        "on": 0.17942452160650263,
        "nvidia": 0.04485613040162566,
        "dmlexecutionprovider": 0.04485613040162566,
        "windows": 0.08971226080325131,
        "coremlexecutionprovider": 0.04485613040162566,
        "or": 0.08971226080325131,
        "mpsexecutionprovider": 0.04485613040162566,
        "macos": 0.08971226080325131,
        "else": 0.04485613040162566,
        "cpu": 0.04485613040162566,
        "expose": 0.04485613040162566,
        "a": 0.26913678240975397,
        "helper": 0.04485613040162566,
        "create_session": 0.04485613040162566,
        "path": 0.04485613040162566,
        "str": 0.08971226080325131,
        "preferred": 0.04485613040162566,
        "list": 0.04485613040162566,
        "none": 0.04485613040162566,
        "inferencesession": 0.04485613040162566,
        "important": 0.04485613040162566,
        "guardrails": 0.04485613040162566,
        "no": 0.08971226080325131,
        "actual": 0.04485613040162566,
        "model": 0.04485613040162566,
        "downloads": 0.04485613040162566,
        "global": 0.04485613040162566,
        "provider": 0.04485613040162566,
        "checks": 0.08971226080325131,
        "at": 0.04485613040162566,
        "import": 0.04485613040162566,
        "time": 0.08971226080325131,
        "run": 0.17942452160650263,
        "inside": 0.04485613040162566,
        "functions": 0.04485613040162566,
        "verification": 0.04485613040162566,
        "checklist": 0.04485613040162566,
        "you": 0.13456839120487699,
        "this": 0.04485613040162566,
        "after": 0.04485613040162566,
        "each": 0.08971226080325131,
        "story": 0.26913678240975397,
        "locally": 0.04485613040162566,
        "and": 0.3139929128113796,
        "produce": 0.04485613040162566,
        "these": 0.04485613040162566,
        "commands": 0.04485613040162566,
        "in": 0.13456839120487699,
        "the": 0.4485613040162566,
        "validation": 0.04485613040162566,
        "steps": 0.04485613040162566,
        "section": 0.08971226080325131,
        "bash": 0.04485613040162566,
        "make": 0.04485613040162566,
        "all": 0.04485613040162566,
        "confirm": 0.04485613040162566,
        "tests": 0.08971226080325131,
        "pass": 0.04485613040162566,
        "coverage": 0.04485613040162566,
        "for": 0.13456839120487699,
        "new": 0.04485613040162566,
        "code": 0.04485613040162566,
        "95": 0.04485613040162566,
        "spot": 0.04485613040162566,
        "check": 0.04485613040162566,
        "specific": 0.04485613040162566,
        "issues": 0.08971226080325131,
        "if": 0.13456839120487699,
        "touches": 0.04485613040162566,
        "features": 0.04485613040162566,
        "command": 0.04485613040162566,
        "review": 0.08971226080325131,
        "do": 0.04485613040162566,
        "pr": 0.04485613040162566,
        "of": 0.04485613040162566,
        "diff": 0.04485613040162566,
        "fix": 0.04485613040162566,
        "any": 0.04485613040162566,
        "find": 0.04485613040162566,
        "tips": 0.04485613040162566,
        "working": 0.04485613040162566,
        "always": 0.04485613040162566,
        "update": 0.04485613040162566,
        "current": 0.04485613040162566,
        "repository": 0.04485613040162566,
        "snapshot": 0.04485613040162566,
        "before": 0.04485613040162566,
        "so": 0.04485613040162566,
        "llm": 0.08971226080325131,
        "is": 0.13456839120487699,
        "grounded": 0.04485613040162566,
        "reality": 0.04485613040162566,
        "keep": 0.04485613040162566,
        "acceptance": 0.08971226080325131,
        "criteria": 0.08971226080325131,
        "crisp": 0.04485613040162566,
        "testable": 0.04485613040162566,
        "output": 0.04485613040162566,
        "contract": 0.04485613040162566,
        "ensures": 0.04485613040162566,
        "get": 0.04485613040162566,
        "git": 0.04485613040162566,
        "apply": 0.04485613040162566,
        "able": 0.04485613040162566,
        "patch": 0.04485613040162566,
        "full": 0.04485613040162566,
        "file": 0.04485613040162566,
        "contents": 0.04485613040162566,
        "commit": 0.04485613040162566,
        "message": 0.04485613040162566,
        "every": 0.04485613040162566,
        "ui": 0.08971226080325131,
        "heavy": 0.04485613040162566,
        "add": 0.04485613040162566,
        "screenshots": 0.04485613040162566,
        "state": 0.04485613040162566,
        "diagrams": 0.04485613040162566,
        "to": 0.13456839120487699,
        "context": 0.04485613040162566,
        "steer": 0.04485613040162566,
        "layout": 0.04485613040162566,
        "naming": 0.04485613040162566,
        "performance": 0.04485613040162566,
        "sensitive": 0.04485613040162566,
        "put": 0.04485613040162566,
        "explicit": 0.04485613040162566,
        "budgets": 0.04485613040162566,
        "into": 0.04485613040162566,
        "ask": 0.04485613040162566,
        "print": 0.04485613040162566,
        "measured": 0.04485613040162566,
        "timings": 0.04485613040162566
      },
      "text": "template) **Implementation Hints** * Detect OS with `platform.system()`. * Prefer `\"TensorrtExecutionProvider\"` on NVIDIA, `\"DmlExecutionProvider\"` on Windows, `\"CoreMLExecutionProvider\"` or `\"MPSExecutionProvider\"` on macOS, else CPU. * Expose a helper `create_session(path: str, preferred: list[str] | None) -> InferenceSession`. **Important Guardrails** * No actual model downloads. * No global provider checks at import time; run checks inside functions. --- ## \ud83e\uddea Verification Checklist (You run this after each story) Run locally and produce these commands in the **Validation Steps** section: ```bash make all ``` * Confirm tests pass and coverage for new code \u2265 95%. * On Windows/macOS, spot\u2011check for platform\u2011specific issues if the story touches system features. * Run the command /review and do a PR review of the diff. Fix any issues you find. --- ## \ud83d\udcdd Tips for Working With the Template * Always **update the \u201cCurrent Repository Snapshot\u201d** before each story so the LLM is grounded in reality. * Keep **Acceptance Criteria** crisp and testable. * The **Output Contract** ensures you get a `git apply`\u2011able patch, full file contents, tests, and a commit message \u2014 every time. * If a story is UI\u2011heavy, add screenshots or UI state diagrams to the **Story Context** section to steer layout and naming. * If a story is performance\u2011sensitive, put explicit budgets into **Acceptance Criteria** and ask the LLM to print measured timings in",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/prompt_template.md#6",
      "vector": {
        "story": 0.3849001794597505,
        "is": 0.19245008972987526,
        "ui": 0.19245008972987526,
        "heavy": 0.09622504486493763,
        "add": 0.09622504486493763,
        "screenshots": 0.09622504486493763,
        "or": 0.09622504486493763,
        "state": 0.09622504486493763,
        "diagrams": 0.09622504486493763,
        "to": 0.28867513459481287,
        "the": 0.28867513459481287,
        "context": 0.19245008972987526,
        "section": 0.09622504486493763,
        "steer": 0.09622504486493763,
        "layout": 0.09622504486493763,
        "and": 0.28867513459481287,
        "naming": 0.09622504486493763,
        "if": 0.09622504486493763,
        "a": 0.09622504486493763,
        "performance": 0.09622504486493763,
        "sensitive": 0.09622504486493763,
        "put": 0.09622504486493763,
        "explicit": 0.09622504486493763,
        "budgets": 0.09622504486493763,
        "into": 0.09622504486493763,
        "acceptance": 0.19245008972987526,
        "criteria": 0.19245008972987526,
        "ask": 0.09622504486493763,
        "llm": 0.09622504486493763,
        "print": 0.09622504486493763,
        "measured": 0.09622504486493763,
        "timings": 0.09622504486493763,
        "in": 0.19245008972987526,
        "test": 0.09622504486493763,
        "logs": 0.09622504486493763,
        "use": 0.09622504486493763,
        "this": 0.09622504486493763,
        "template": 0.09622504486493763,
        "verbatim": 0.09622504486493763,
        "for": 0.09622504486493763,
        "s": 0.19245008972987526,
        "001": 0.09622504486493763,
        "through": 0.09622504486493763,
        "044": 0.09622504486493763,
        "by": 0.09622504486493763,
        "swapping": 0.09622504486493763,
        "relevant": 0.09622504486493763,
        "snapshot": 0.09622504486493763
      },
      "text": "story is UI\u2011heavy, add screenshots or UI state diagrams to the **Story Context** section to steer layout and naming. * If a story is performance\u2011sensitive, put explicit budgets into **Acceptance Criteria** and ask the LLM to print measured timings in test logs. --- Use this template verbatim for S\u2011001 through S\u2011044 by swapping in the relevant **Story Context**, **Snapshot**, and **Acceptance Criteria**.",
      "metadata": {
        "path": "spec/prompt_template.md",
        "tags": [
          "docs"
        ],
        "hash": "0549d871b8fc9cfc96398b7f924c9ae464f4245f39d7361c3e87be8b6a344bb5"
      }
    },
    {
      "id": "spec/spec.md#0",
      "vector": {
        "intelligent": 0.06696495301824251,
        "readme": 0.2008948590547275,
        "generator": 0.06696495301824251,
        "architecture": 0.13392990603648502,
        "spec": 0.06696495301824251,
        "python": 0.13392990603648502,
        "local": 0.2008948590547275,
        "llm": 0.2008948590547275,
        "1": 0.06696495301824251,
        "purpose": 0.06696495301824251,
        "scope": 0.06696495301824251,
        "build": 0.13392990603648502,
        "a": 0.3348247650912125,
        "based": 0.06696495301824251,
        "system": 0.06696495301824251,
        "that": 0.06696495301824251,
        "analyzes": 0.06696495301824251,
        "git": 0.3348247650912125,
        "repository": 0.06696495301824251,
        "structure": 0.06696495301824251,
        "code": 0.06696495301824251,
        "dependencies": 0.06696495301824251,
        "then": 0.06696495301824251,
        "generates": 0.06696495301824251,
        "and": 0.13392990603648502,
        "maintains": 0.06696495301824251,
        "high": 0.13392990603648502,
        "quality": 0.06696495301824251,
        "md": 0.06696495301824251,
        "using": 0.06696495301824251,
        "it": 0.06696495301824251,
        "initializes": 0.06696495301824251,
        "repos": 0.06696495301824251,
        "with": 0.06696495301824251,
        "no": 0.06696495301824251,
        "docs": 0.2008948590547275,
        "keeps": 0.06696495301824251,
        "up": 0.06696495301824251,
        "to": 0.06696495301824251,
        "date": 0.06696495301824251,
        "on": 0.06696495301824251,
        "commits": 0.06696495301824251,
        "prs": 0.06696495301824251,
        "supports": 0.06696495301824251,
        "multiple": 0.06696495301824251,
        "languages": 0.06696495301824251,
        "project": 0.06696495301824251,
        "types": 0.06696495301824251,
        "via": 0.06696495301824251,
        "analyzers": 0.13392990603648502,
        "non": 0.06696495301824251,
        "goals": 0.06696495301824251,
        "for": 0.06696495301824251,
        "the": 0.06696495301824251,
        "poc": 0.06696495301824251,
        "multi": 0.06696495301824251,
        "repo": 0.13392990603648502,
        "orchestration": 0.06696495301824251,
        "full": 0.06696495301824251,
        "website": 0.06696495301824251,
        "api": 0.06696495301824251,
        "reference": 0.06696495301824251,
        "extraction": 0.06696495301824251,
        "beyond": 0.06696495301824251,
        "summaries": 0.06696495301824251,
        "cloud": 0.06696495301824251,
        "llms": 0.06696495301824251,
        "2": 0.06696495301824251,
        "level": 0.06696495301824251,
        "at": 0.06696495301824251,
        "glance": 0.06696495301824251,
        "events": 0.06696495301824251,
        "event": 0.06696495301824251,
        "sources": 0.06696495301824251,
        "cli": 0.06696495301824251,
        "commands": 0.06696495301824251,
        "hooks": 0.06696495301824251,
        "webhooks": 0.06696495301824251,
        "ci": 0.06696495301824251,
        "commit": 0.13392990603648502,
        "pr": 0.13392990603648502,
        "orchestr": 0.06696495301824251,
        "async": 0.06696495301824251,
        "task": 0.06696495301824251,
        "graph": 0.13392990603648502,
        "scanner": 0.06696495301824251,
        "doc": 0.06696495301824251,
        "store": 0.06696495301824251,
        "indexer": 0.06696495301824251,
        "language": 0.06696495301824251,
        "artifacts": 0.06696495301824251,
        "fs": 0.06696495301824251,
        "deps": 0.06696495301824251,
        "cache": 0.06696495301824251,
        "versions": 0.06696495301824251,
        "knowledge": 0.06696495301824251,
        "embeddings": 0.06696495301824251,
        "prompt": 0.06696495301824251,
        "builder": 0.06696495301824251,
        "templates": 0.06696495301824251,
        "rag": 0.06696495301824251,
        "runner": 0.06696495301824251,
        "llama": 0.06696495301824251,
        "cpp": 0.06696495301824251,
        "ollama": 0.06696495301824251,
        "post": 0.06696495301824251,
        "processor": 0.06696495301824251,
        "lint": 0.06696495301824251,
        "toc": 0.06696495301824251,
        "badges": 0.06696495301824251,
        "links": 0.06696495301824251,
        "publisher": 0.06696495301824251,
        "branch": 0.06696495301824251
      },
      "text": "# Intelligent README Generator \u2014 Architecture & Spec (Python, Local LLM) ## 1) Purpose & Scope Build a Python-based system that **analyzes a Git repository** (structure, code, dependencies), then **generates and maintains a high-quality README.md** using a **local LLM**. It initializes repos with no docs and **keeps docs up to date** on commits/PRs. Supports **multiple languages/project types** via analyzers. Non-goals (for the POC): multi-repo orchestration, full website docs, API reference extraction (beyond README summaries), cloud LLMs. --- ## 2) High-Level Architecture (at a glance) ``` \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 Git Events \u2502 Event Sources \u2502 CLI commands, Git hooks, Webhooks/CI (commit/PR) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Orchestr \u2502 (Async task graph) \u2514\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2518 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Repo Scanner\u2502 \u2502 Analyzers \u2502 \u2502 Doc Store \u2502 \u2502 + Indexer \u2502 \u2502 (Language, \u2502 \u2502 (Artifacts, \u2502 \u2502 (Git, FS) \u2502 \u2502 Build, Deps) \u2502 \u2502 Cache, \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 Versions) \u2502 \u2502 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 \u2502 Knowledge Graph \u2502 \u2502 \u2502 \u2502 & Embeddings \u2502<\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 Prompt Builder \u2502 (Templates + RAG) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 Local LLM Runner \u2502 (llama.cpp/Ollama) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25b6\u2502 Post-Processor \u2502 (lint, ToC, badges, links) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Git Publisher \u2502 (branch/PR/commit) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 ``` --- ##",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#1",
      "vector": {
        "rag": 0.053074489243427524,
        "local": 0.053074489243427524,
        "llm": 0.053074489243427524,
        "runner": 0.053074489243427524,
        "llama": 0.053074489243427524,
        "cpp": 0.053074489243427524,
        "ollama": 0.053074489243427524,
        "post": 0.053074489243427524,
        "processor": 0.053074489243427524,
        "lint": 0.053074489243427524,
        "toc": 0.053074489243427524,
        "badges": 0.053074489243427524,
        "links": 0.053074489243427524,
        "git": 0.10614897848685505,
        "publisher": 0.053074489243427524,
        "branch": 0.053074489243427524,
        "pr": 0.053074489243427524,
        "commit": 0.053074489243427524,
        "3": 0.2653724462171376,
        "components": 0.053074489243427524,
        "responsibilities": 0.053074489243427524,
        "1": 0.053074489243427524,
        "orchestrator": 0.053074489243427524,
        "coordinates": 0.053074489243427524,
        "end": 0.10614897848685505,
        "to": 0.2122979569737101,
        "pipelines": 0.053074489243427524,
        "init": 0.053074489243427524,
        "update": 0.10614897848685505,
        "regenerate": 0.10614897848685505,
        "computes": 0.053074489243427524,
        "change": 0.10614897848685505,
        "impact": 0.053074489243427524,
        "from": 0.10614897848685505,
        "diff": 0.053074489243427524,
        "decides": 0.053074489243427524,
        "whether": 0.053074489243427524,
        "full": 0.053074489243427524,
        "readme": 0.053074489243427524,
        "or": 0.10614897848685505,
        "patch": 0.053074489243427524,
        "sections": 0.053074489243427524,
        "schedules": 0.053074489243427524,
        "tasks": 0.053074489243427524,
        "and": 0.15922346773028256,
        "caches": 0.053074489243427524,
        "intermediate": 0.053074489243427524,
        "results": 0.053074489243427524,
        "reuses": 0.053074489243427524,
        "analyzer": 0.10614897848685505,
        "outputs": 0.053074489243427524,
        "docgen": 0.2122979569737101,
        "analyzers": 0.2653724462171376,
        "cache": 0.053074489243427524,
        "json": 0.2122979569737101,
        "invalidating": 0.053074489243427524,
        "entries": 0.053074489243427524,
        "when": 0.10614897848685505,
        "file": 0.053074489243427524,
        "hashes": 0.053074489243427524,
        "signatures": 0.053074489243427524,
        "emits": 0.053074489243427524,
        "structured": 0.053074489243427524,
        "logs": 0.053074489243427524,
        "info": 0.053074489243427524,
        "by": 0.053074489243427524,
        "default": 0.053074489243427524,
        "debug": 0.053074489243427524,
        "with": 0.053074489243427524,
        "verbose": 0.053074489243427524,
        "respects": 0.053074489243427524,
        "yml": 0.053074489243427524,
        "ci": 0.053074489243427524,
        "watched_globs": 0.053074489243427524,
        "skip": 0.053074489243427524,
        "unrelated": 0.053074489243427524,
        "diffs": 0.053074489243427524,
        "substitutes": 0.053074489243427524,
        "fail": 0.053074489243427524,
        "safe": 0.053074489243427524,
        "stubs": 0.053074489243427524,
        "generation": 0.053074489243427524,
        "fails": 0.053074489243427524,
        "supports": 0.053074489243427524,
        "dry": 0.10614897848685505,
        "run": 0.15922346773028256,
        "previews": 0.053074489243427524,
        "records": 0.053074489243427524,
        "scorecards": 0.053074489243427524,
        "for": 0.053074489243427524,
        "each": 0.053074489243427524,
        "under": 0.053074489243427524,
        "2": 0.053074489243427524,
        "repo": 0.15922346773028256,
        "scanner": 0.053074489243427524,
        "indexer": 0.053074489243427524,
        "walks": 0.053074489243427524,
        "builds": 0.053074489243427524,
        "normalized": 0.053074489243427524,
        "manifest": 0.053074489243427524,
        "files": 0.10614897848685505,
        "sizes": 0.053074489243427524,
        "language": 0.10614897848685505,
        "tags": 0.053074489243427524,
        "path": 0.053074489243427524,
        "roles": 0.053074489243427524,
        "src": 0.053074489243427524,
        "test": 0.10614897848685505,
        "docs": 0.053074489243427524,
        "examples": 0.053074489243427524,
        "build": 0.15922346773028256,
        "dependency": 0.10614897848685505,
        "manifests": 0.053074489243427524,
        "e": 0.053074489243427524,
        "g": 0.053074489243427524,
        "pom": 0.053074489243427524,
        "xml": 0.053074489243427524,
        "gradle": 0.10614897848685505,
        "package": 0.053074489243427524,
        "requirements": 0.053074489243427524,
        "txt": 0.053074489243427524,
        "pyproject": 0.053074489243427524,
        "toml": 0.10614897848685505,
        "go": 0.15922346773028256,
        "mod": 0.053074489243427524,
        "cargo": 0.10614897848685505,
        "gemfile": 0.053074489243427524,
        "composer": 0.053074489243427524,
        "entrypoints": 0.10614897848685505,
        "clis": 0.053074489243427524,
        "services": 0.053074489243427524,
        "coverage": 0.053074489243427524,
        "artifacts": 0.053074489243427524,
        "if": 0.053074489243427524,
        "available": 0.053074489243427524,
        "stores": 0.053074489243427524,
        "a": 0.053074489243427524,
        "per": 0.053074489243427524,
        "index": 0.053074489243427524,
        "speed": 0.053074489243427524,
        "future": 0.053074489243427524,
        "runs": 0.053074489243427524,
        "plugin": 0.053074489243427524,
        "based": 0.053074489243427524,
        "detect": 0.053074489243427524,
        "idioms": 0.053074489243427524,
        "frameworks": 0.053074489243427524,
        "spring": 0.053074489243427524,
        "boot": 0.053074489243427524,
        "fastapi": 0.053074489243427524,
        "node": 0.053074489243427524,
        "express": 0.053074489243427524,
        "react": 0.053074489243427524,
        "next": 0.053074489243427524,
        "js": 0.053074489243427524,
        "http": 0.053074489243427524,
        "rust": 0.053074489243427524,
        "bin": 0.053074489243427524,
        "lib": 0.053074489243427524,
        "maven": 0.053074489243427524,
        "setuptools": 0.053074489243427524,
        "poetry": 0.053074489243427524,
        "npm": 0.053074489243427524,
        "pnpm": 0.053074489243427524,
        "yarn": 0.053074489243427524,
        "extract": 0.053074489243427524,
        "top": 0.053074489243427524,
        "level": 0.053074489243427524
      },
      "text": "+ RAG) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 \u2502 Local LLM Runner \u2502 (llama.cpp/Ollama) \u2502 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u2502 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25b6\u2502 Post-Processor \u2502 (lint, ToC, badges, links) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 \u2502 \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u25bc\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510 \u2502 Git Publisher \u2502 (branch/PR/commit) \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518 ``` --- ## 3) Components & Responsibilities ### 3.1 Orchestrator * Coordinates end-to-end pipelines (init, update, regenerate). * Computes *change impact* from Git diff; decides whether to regenerate full README or patch sections. * Schedules tasks and caches intermediate results. * Reuses analyzer outputs from `.docgen/analyzers/cache.json`, invalidating entries when file hashes or analyzer signatures change. * Emits structured logs (info by default, debug with `--verbose`), respects `.docgen.yml` `ci.watched_globs` to skip unrelated diffs, and substitutes fail-safe stubs when generation fails. * Supports dry-run previews (`docgen update --dry-run`) and records scorecards for each run under `.docgen/`. ### 3.2 Repo Scanner & Indexer * Walks repo; builds normalized manifest: * Files, sizes, language tags, path roles (src/test/docs/examples). * Build files & dependency manifests (e.g., `pom.xml`, `build.gradle`, `package.json`, `requirements.txt`, `pyproject.toml`, `go.mod`, `Cargo.toml`, `Gemfile`, `composer.json`). * Entrypoints (CLIs, services), test coverage artifacts if available. * Stores a per-repo index (JSON) to speed future runs. ### 3.3 Analyzers (Plugin-based) * **Language analyzers** (detect idioms, entrypoints, frameworks: Spring Boot, FastAPI, Node/Express, React, Next.js, Go HTTP, Rust bin/lib). * **Build analyzers** (Maven/Gradle, setuptools/Poetry, npm/pnpm/yarn, Go, Cargo). * **Dependency analyzers** (extract top-level",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#2",
      "vector": {
        "index": 0.0536828127095019,
        "json": 0.0536828127095019,
        "to": 0.1073656254190038,
        "speed": 0.0536828127095019,
        "future": 0.0536828127095019,
        "runs": 0.0536828127095019,
        "3": 0.2147312508380076,
        "analyzers": 0.3220968762570114,
        "plugin": 0.0536828127095019,
        "based": 0.0536828127095019,
        "language": 0.0536828127095019,
        "detect": 0.0536828127095019,
        "idioms": 0.0536828127095019,
        "entrypoints": 0.0536828127095019,
        "frameworks": 0.0536828127095019,
        "spring": 0.1073656254190038,
        "boot": 0.1073656254190038,
        "fastapi": 0.1073656254190038,
        "node": 0.1073656254190038,
        "express": 0.0536828127095019,
        "react": 0.0536828127095019,
        "next": 0.0536828127095019,
        "js": 0.0536828127095019,
        "go": 0.1073656254190038,
        "http": 0.0536828127095019,
        "rust": 0.0536828127095019,
        "bin": 0.0536828127095019,
        "lib": 0.0536828127095019,
        "build": 0.1073656254190038,
        "maven": 0.0536828127095019,
        "gradle": 0.0536828127095019,
        "setuptools": 0.0536828127095019,
        "poetry": 0.0536828127095019,
        "npm": 0.0536828127095019,
        "pnpm": 0.0536828127095019,
        "yarn": 0.0536828127095019,
        "cargo": 0.0536828127095019,
        "dependency": 0.0536828127095019,
        "extract": 0.0536828127095019,
        "top": 0.1073656254190038,
        "level": 0.0536828127095019,
        "libs": 0.0536828127095019,
        "notable": 0.0536828127095019,
        "transitive": 0.0536828127095019,
        "categories": 0.0536828127095019,
        "entrypoint": 0.0536828127095019,
        "infer": 0.0536828127095019,
        "run": 0.0536828127095019,
        "commands": 0.0536828127095019,
        "for": 0.1073656254190038,
        "django": 0.0536828127095019,
        "scripts": 0.1073656254190038,
        "pattern": 0.0536828127095019,
        "monorepo": 0.0536828127095019,
        "layout": 0.0536828127095019,
        "ci": 0.0536828127095019,
        "cd": 0.0536828127095019,
        "containerization": 0.0536828127095019,
        "k8s": 0.0536828127095019,
        "heuristics": 0.0536828127095019,
        "structure": 0.0536828127095019,
        "analyzer": 0.1610484381285057,
        "module": 0.0536828127095019,
        "topology": 0.0536828127095019,
        "detected": 0.0536828127095019,
        "entities": 0.1073656254190038,
        "dtos": 0.0536828127095019,
        "api": 0.0536828127095019,
        "endpoint": 0.0536828127095019,
        "sequences": 0.0536828127095019,
        "service": 0.0536828127095019,
        "interactions": 0.0536828127095019,
        "tree": 0.0536828127095019,
        "sitter": 0.0536828127095019,
        "symbol": 0.0536828127095019,
        "python": 0.0536828127095019,
        "java": 0.0536828127095019,
        "typescript": 0.0536828127095019,
        "extracts": 0.0536828127095019,
        "functions": 0.0536828127095019,
        "classes": 0.0536828127095019,
        "when": 0.0536828127095019,
        "parsers": 0.0536828127095019,
        "available": 0.0536828127095019,
        "and": 0.2147312508380076,
        "degrades": 0.0536828127095019,
        "gracefully": 0.0536828127095019,
        "otherwise": 0.0536828127095019,
        "each": 0.0536828127095019,
        "returns": 0.0536828127095019,
        "signals": 0.1073656254190038,
        "key": 0.1073656254190038,
        "facts": 0.0536828127095019,
        "the": 0.1073656254190038,
        "knowledge": 0.1073656254190038,
        "graph": 0.1610484381285057,
        "4": 0.0536828127095019,
        "embeddings": 0.1073656254190038,
        "rag": 0.0536828127095019,
        "of": 0.1073656254190038,
        "repo": 0.1073656254190038,
        "modules": 0.0536828127095019,
        "packages": 0.0536828127095019,
        "services": 0.0536828127095019,
        "configs": 0.0536828127095019,
        "tests": 0.0536828127095019,
        "docs": 0.1073656254190038,
        "lightweight": 0.0536828127095019,
        "embedding": 0.0536828127095019,
        "store": 0.0536828127095019,
        "e": 0.0536828127095019,
        "g": 0.0536828127095019,
        "faiss": 0.0536828127095019,
        "in": 0.0536828127095019,
        "memory": 0.0536828127095019,
        "chunks": 0.0536828127095019,
        "code": 0.0536828127095019,
        "comments": 0.0536828127095019,
        "readme": 0.1073656254190038,
        "fragments": 0.0536828127095019,
        "changelog": 0.0536828127095019,
        "issues": 0.0536828127095019,
        "optional": 0.0536828127095019,
        "commit": 0.0536828127095019,
        "messages": 0.1073656254190038,
        "provides": 0.0536828127095019,
        "context": 0.1073656254190038,
        "retrieval": 0.0536828127095019,
        "prompt": 0.1073656254190038,
        "building": 0.0536828127095019,
        "k": 0.0536828127095019,
        "by": 0.0536828127095019,
        "section": 0.1610484381285057,
        "persists": 0.0536828127095019,
        "under": 0.0536828127095019,
        "docgen": 0.0536828127095019,
        "refreshing": 0.0536828127095019,
        "only": 0.0536828127095019,
        "files": 0.0536828127095019,
        "whose": 0.0536828127095019,
        "hashes": 0.0536828127095019,
        "changed": 0.0536828127095019,
        "5": 0.0536828127095019,
        "builder": 0.0536828127095019,
        "aware": 0.0536828127095019,
        "jinja2": 0.0536828127095019,
        "templates": 0.0536828127095019,
        "with": 0.1073656254190038,
        "guardrails": 0.0536828127095019,
        "project": 0.0536828127095019,
        "intro": 0.0536828127095019,
        "features": 0.0536828127095019,
        "architecture": 0.0536828127095019,
        "overview": 0.0536828127095019,
        "quick": 0.0536828127095019,
        "start": 0.0536828127095019,
        "configuration": 0.0536828127095019,
        "test": 0.0536828127095019,
        "deployment": 0.0536828127095019,
        "troubleshooting": 0.0536828127095019,
        "faq": 0.0536828127095019,
        "roadmap": 0.0536828127095019,
        "contribution": 0.0536828127095019,
        "license": 0.0536828127095019,
        "badges": 0.0536828127095019,
        "dynamically": 0.0536828127095019,
        "injects": 0.0536828127095019,
        "retrieved": 0.0536828127095019,
        "per": 0.0536828127095019,
        "produces": 0.0536828127095019,
        "llm": 0.0536828127095019,
        "ready": 0.0536828127095019,
        "structured": 0.0536828127095019,
        "prompts": 0.0536828127095019,
        "system": 0.0536828127095019,
        "user": 0.0536828127095019,
        "token": 0.0536828127095019,
        "budgets": 0.0536828127095019,
        "honours": 0.0536828127095019,
        "style": 0.0536828127095019,
        "presets": 0.0536828127095019,
        "concise": 0.0536828127095019,
        "trims": 0.0536828127095019,
        "list": 0.0536828127095019,
        "heavy": 0.0536828127095019,
        "sections": 0.0536828127095019
      },
      "text": "index (JSON) to speed future runs. ### 3.3 Analyzers (Plugin-based) * **Language analyzers** (detect idioms, entrypoints, frameworks: Spring Boot, FastAPI, Node/Express, React, Next.js, Go HTTP, Rust bin/lib). * **Build analyzers** (Maven/Gradle, setuptools/Poetry, npm/pnpm/yarn, Go, Cargo). * **Dependency analyzers** (extract top-level libs & notable transitive categories). * **Entrypoint analyzers** (infer run commands for FastAPI, Django, Spring Boot, Node scripts). * **Pattern analyzers** (monorepo layout, CI/CD, containerization/K8s heuristics). * **Structure analyzer** (module topology, detected entities/DTOs, API endpoint sequences, service interactions). * **Tree-sitter symbol analyzer** (Python/Java/TypeScript) extracts functions/classes when parsers available and degrades gracefully otherwise. * Each analyzer returns **Signals** (key facts) to the knowledge graph. ### 3.4 Knowledge Graph & Embeddings (RAG) * Graph of Repo entities: modules, packages, services, scripts, configs, tests, docs. * Lightweight embedding store (e.g., `faiss`/in-memory) of **chunks**: code comments, README fragments, `docs/`, `CHANGELOG`, issues (optional), commit messages. * Provides **context retrieval** for prompt building (top-k by section) and persists embeddings under `.docgen/`, refreshing only the files whose hashes changed. ### 3.5 Prompt Builder * **Section-aware** Jinja2 templates with **guardrails**: * Project intro, key features, architecture overview, quick start, configuration, build/test, deployment, troubleshooting, FAQ, roadmap, contribution, license, badges. * Dynamically injects repo signals and retrieved context per section. * Produces **LLM-ready structured prompts** (system + user messages) with token budgets and honours `readme.style` presets (`concise` trims list-heavy sections,",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#3",
      "vector": {
        "start": 0.09690031662230184,
        "configuration": 0.09690031662230184,
        "build": 0.04845015831115092,
        "test": 0.04845015831115092,
        "deployment": 0.04845015831115092,
        "troubleshooting": 0.04845015831115092,
        "faq": 0.04845015831115092,
        "roadmap": 0.04845015831115092,
        "contribution": 0.04845015831115092,
        "license": 0.04845015831115092,
        "badges": 0.09690031662230184,
        "dynamically": 0.04845015831115092,
        "injects": 0.09690031662230184,
        "repo": 0.04845015831115092,
        "signals": 0.04845015831115092,
        "and": 0.4360514248003583,
        "retrieved": 0.04845015831115092,
        "context": 0.09690031662230184,
        "per": 0.04845015831115092,
        "section": 0.14535047493345277,
        "produces": 0.04845015831115092,
        "llm": 0.09690031662230184,
        "ready": 0.04845015831115092,
        "structured": 0.09690031662230184,
        "prompts": 0.04845015831115092,
        "system": 0.04845015831115092,
        "user": 0.04845015831115092,
        "messages": 0.04845015831115092,
        "with": 0.14535047493345277,
        "token": 0.04845015831115092,
        "budgets": 0.04845015831115092,
        "honours": 0.04845015831115092,
        "readme": 0.14535047493345277,
        "style": 0.14535047493345277,
        "presets": 0.04845015831115092,
        "concise": 0.04845015831115092,
        "trims": 0.04845015831115092,
        "list": 0.04845015831115092,
        "heavy": 0.04845015831115092,
        "sections": 0.14535047493345277,
        "comprehensive": 0.04845015831115092,
        "keeps": 0.04845015831115092,
        "full": 0.04845015831115092,
        "detail": 0.04845015831115092,
        "detected": 0.09690031662230184,
        "entrypoints": 0.04845015831115092,
        "infrastructure": 0.04845015831115092,
        "patterns": 0.04845015831115092,
        "into": 0.04845015831115092,
        "quick": 0.04845015831115092,
        "guidance": 0.04845015831115092,
        "e": 0.04845015831115092,
        "g": 0.04845015831115092,
        "uvicorn": 0.04845015831115092,
        "docker": 0.14535047493345277,
        "compose": 0.04845015831115092,
        "up": 0.04845015831115092,
        "generates": 0.04845015831115092,
        "mermaid": 0.04845015831115092,
        "sequence": 0.04845015831115092,
        "diagrams": 0.04845015831115092,
        "highlighting": 0.04845015831115092,
        "request": 0.04845015831115092,
        "flow": 0.04845015831115092,
        "across": 0.04845015831115092,
        "services": 0.04845015831115092,
        "when": 0.09690031662230184,
        "api": 0.09690031662230184,
        "endpoints": 0.04845015831115092,
        "are": 0.04845015831115092,
        "3": 0.09690031662230184,
        "6": 0.04845015831115092,
        "local": 0.14535047493345277,
        "runner": 0.14535047493345277,
        "pluggable": 0.04845015831115092,
        "runtime": 0.04845015831115092,
        "that": 0.04845015831115092,
        "prefers": 0.04845015831115092,
        "the": 0.04845015831115092,
        "model": 0.14535047493345277,
        "http": 0.14535047493345277,
        "endpoint": 0.04845015831115092,
        "host": 0.04845015831115092,
        "localhost": 0.04845015831115092,
        "12434": 0.04845015831115092,
        "engines": 0.09690031662230184,
        "v1": 0.09690031662230184,
        "container": 0.04845015831115092,
        "internal": 0.14535047493345277,
        "environment": 0.04845015831115092,
        "overrides": 0.04845015831115092,
        "an": 0.04845015831115092,
        "ollama": 0.04845015831115092,
        "cli": 0.09690031662230184,
        "fallback": 0.04845015831115092,
        "defaults": 0.04845015831115092,
        "to": 0.14535047493345277,
        "ai": 0.04845015831115092,
        "smollm2": 0.04845015831115092,
        "360m": 0.04845015831115092,
        "q4_k_m": 0.04845015831115092,
        "but": 0.04845015831115092,
        "respects": 0.04845015831115092,
        "docgen": 0.09690031662230184,
        "yml": 0.04845015831115092,
        "openai": 0.04845015831115092,
        "compatible": 0.04845015831115092,
        "env": 0.04845015831115092,
        "vars": 0.04845015831115092,
        "for": 0.14535047493345277,
        "alternate": 0.04845015831115092,
        "weights": 0.04845015831115092,
        "keys": 0.04845015831115092,
        "supports": 0.04845015831115092,
        "function": 0.04845015831115092,
        "calling": 0.04845015831115092,
        "outputs": 0.04845015831115092,
        "available": 0.04845015831115092,
        "streaming": 0.04845015831115092,
        "decode": 0.04845015831115092,
        "stop": 0.04845015831115092,
        "tokens": 0.04845015831115092,
        "by": 0.09690031662230184,
        "generation": 0.04845015831115092,
        "stay": 0.09690031662230184,
        "within": 0.04845015831115092,
        "limits": 0.04845015831115092,
        "validates": 0.09690031662230184,
        "ensure": 0.04845015831115092,
        "runners": 0.04845015831115092,
        "loopback": 0.04845015831115092,
        "hosts": 0.04845015831115092,
        "only": 0.09690031662230184,
        "includes": 0.04845015831115092,
        "a": 0.09690031662230184,
        "llamacpprunner": 0.04845015831115092,
        "adapter": 0.04845015831115092,
        "llama": 0.04845015831115092,
        "cpp": 0.04845015831115092,
        "binaries": 0.04845015831115092,
        "enforcing": 0.04845015831115092,
        "filesystem": 0.04845015831115092,
        "backed": 0.04845015831115092,
        "paths": 0.04845015831115092,
        "execution": 0.04845015831115092,
        "7": 0.04845015831115092,
        "post": 0.04845015831115092,
        "processor": 0.04845015831115092,
        "lints": 0.04845015831115092,
        "markdown": 0.04845015831115092,
        "builds": 0.04845015831115092,
        "toc": 0.04845015831115092,
        "adds": 0.04845015831115092,
        "shields": 0.04845015831115092,
        "normalizes": 0.04845015831115092,
        "heading": 0.04845015831115092,
        "hierarchy": 0.04845015831115092,
        "enforces": 0.04845015831115092,
        "guide": 0.04845015831115092,
        "contract": 0.04845015831115092,
        "required": 0.04845015831115092,
        "links": 0.04845015831115092,
        "relative": 0.04845015831115092,
        "absolute": 0.04845015831115092,
        "code": 0.04845015831115092,
        "block": 0.04845015831115092,
        "languages": 0.04845015831115092,
        "line": 0.04845015831115092,
        "length": 0.04845015831115092,
        "computes": 0.04845015831115092,
        "diff": 0.04845015831115092,
        "aware": 0.04845015831115092,
        "updates": 0.04845015831115092,
        "modifies": 0.04845015831115092,
        "impacted": 0.04845015831115092,
        "changes": 0.04845015831115092,
        "persists": 0.04845015831115092,
        "scorecard": 0.09690031662230184,
        "json": 0.04845015831115092
      },
      "text": "start, configuration, build/test, deployment, troubleshooting, FAQ, roadmap, contribution, license, badges. * Dynamically injects repo signals and retrieved context per section. * Produces **LLM-ready structured prompts** (system + user messages) with token budgets and honours `readme.style` presets (`concise` trims list-heavy sections, `comprehensive` keeps full detail). * Injects detected entrypoints and infrastructure patterns into Quick Start guidance (e.g., `uvicorn ...`, `docker compose up`). * Generates Mermaid sequence diagrams highlighting request flow across services when API endpoints are detected. ### 3.6 Local LLM Runner * Pluggable runtime that prefers the Docker Model Runner HTTP endpoint (host `http://localhost:12434/engines/v1`, container `http://model-runner.docker.internal/engines/v1`) with environment overrides and an `ollama` CLI fallback. * Defaults to `ai/smollm2:360M-Q4_K_M` but respects `.docgen.yml` and OpenAI-compatible env vars for alternate weights and API keys. * Supports **function calling style** for structured outputs when available. * Streaming decode with stop tokens; **section-by-section** generation to stay within context limits. * Validates configuration to ensure runners stay local (loopback/`*.internal` hosts only). * Includes a `LlamaCppRunner` adapter for local `llama.cpp` binaries, enforcing filesystem-backed model paths and CLI execution. ### 3.7 Post-Processor * Lints Markdown, builds ToC, adds shields/badges, normalizes heading hierarchy. * Enforces internal style guide and **README contract** (required sections). * Validates links (relative/absolute), code block languages, and line length. * Computes **diff-aware updates**: only modifies sections impacted by changes. * Persists a README scorecard (`.docgen/scorecard.json`)",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#4",
      "vector": {
        "shields": 0.04339630366027462,
        "badges": 0.08679260732054923,
        "normalizes": 0.08679260732054923,
        "heading": 0.04339630366027462,
        "hierarchy": 0.04339630366027462,
        "enforces": 0.04339630366027462,
        "internal": 0.04339630366027462,
        "style": 0.04339630366027462,
        "guide": 0.04339630366027462,
        "and": 0.6075482512438447,
        "readme": 0.13018891098082386,
        "contract": 0.04339630366027462,
        "required": 0.04339630366027462,
        "sections": 0.17358521464109847,
        "validates": 0.04339630366027462,
        "links": 0.04339630366027462,
        "relative": 0.04339630366027462,
        "absolute": 0.04339630366027462,
        "code": 0.04339630366027462,
        "block": 0.04339630366027462,
        "languages": 0.04339630366027462,
        "line": 0.04339630366027462,
        "length": 0.04339630366027462,
        "computes": 0.04339630366027462,
        "diff": 0.04339630366027462,
        "aware": 0.04339630366027462,
        "updates": 0.04339630366027462,
        "only": 0.04339630366027462,
        "modifies": 0.04339630366027462,
        "impacted": 0.04339630366027462,
        "by": 0.04339630366027462,
        "changes": 0.08679260732054923,
        "persists": 0.04339630366027462,
        "a": 0.13018891098082386,
        "scorecard": 0.08679260732054923,
        "docgen": 0.2169815183013731,
        "json": 0.17358521464109847,
        "capturing": 0.08679260732054923,
        "coverage": 0.08679260732054923,
        "quick": 0.04339630366027462,
        "start": 0.04339630366027462,
        "health": 0.04339630366027462,
        "link": 0.08679260732054923,
        "results": 0.04339630366027462,
        "adds": 0.04339630366027462,
        "build": 0.04339630366027462,
        "license": 0.04339630366027462,
        "with": 0.13018891098082386,
        "safe": 0.08679260732054923,
        "defaults": 0.04339630366027462,
        "reports": 0.04339630366027462,
        "warnings": 0.04339630366027462,
        "during": 0.04339630366027462,
        "post": 0.04339630366027462,
        "processing": 0.04339630366027462,
        "3": 0.13018891098082386,
        "8": 0.04339630366027462,
        "validation": 0.17358521464109847,
        "layer": 0.04339630366027462,
        "runs": 0.08679260732054923,
        "after": 0.04339630366027462,
        "section": 0.08679260732054923,
        "rendering": 0.04339630366027462,
        "before": 0.04339630366027462,
        "linting": 0.04339630366027462,
        "publishing": 0.04339630366027462,
        "to": 0.04339630366027462,
        "ensure": 0.04339630366027462,
        "generated": 0.08679260732054923,
        "claims": 0.04339630366027462,
        "are": 0.04339630366027462,
        "grounded": 0.04339630366027462,
        "analyzer": 0.08679260732054923,
        "signals": 0.04339630366027462,
        "metadata": 0.04339630366027462,
        "retrieved": 0.04339630366027462,
        "context": 0.04339630366027462,
        "into": 0.04339630366027462,
        "an": 0.04339630366027462,
        "evidence": 0.13018891098082386,
        "index": 0.04339630366027462,
        "used": 0.04339630366027462,
        "for": 0.13018891098082386,
        "token": 0.04339630366027462,
        "overlap": 0.04339630366027462,
        "checks": 0.04339630366027462,
        "default": 0.04339630366027462,
        "nohallucinationvalidator": 0.04339630366027462,
        "rejects": 0.04339630366027462,
        "sentences": 0.04339630366027462,
        "lacking": 0.04339630366027462,
        "supporting": 0.04339630366027462,
        "replaces": 0.04339630366027462,
        "offending": 0.04339630366027462,
        "fail": 0.04339630366027462,
        "stubs": 0.04339630366027462,
        "raises": 0.04339630366027462,
        "actionable": 0.04339630366027462,
        "errors": 0.04339630366027462,
        "writes": 0.04339630366027462,
        "validator": 0.04339630366027462,
        "status": 0.04339630366027462,
        "issues": 0.04339630366027462,
        "summaries": 0.04339630366027462,
        "auditability": 0.04339630366027462,
        "respects": 0.04339630366027462,
        "yml": 0.04339630366027462,
        "no_hallucination": 0.04339630366027462,
        "toggle": 0.04339630366027462,
        "docgen_validation_no_hallucination": 0.04339630366027462,
        "environment": 0.04339630366027462,
        "override": 0.04339630366027462,
        "cli": 0.04339630366027462,
        "skip": 0.04339630366027462,
        "flag": 0.04339630366027462,
        "one": 0.04339630366027462,
        "off": 0.04339630366027462,
        "bypasses": 0.04339630366027462,
        "9": 0.04339630366027462,
        "doc": 0.04339630366027462,
        "store": 0.04339630366027462,
        "artifacts": 0.08679260732054923,
        "versions": 0.04339630366027462,
        "keeps": 0.04339630366027462,
        "drafts": 0.04339630366027462,
        "logs": 0.04339630366027462,
        "prompts": 0.04339630366027462,
        "inputs": 0.04339630366027462,
        "outputs": 0.04339630366027462,
        "diffs": 0.04339630366027462,
        "under": 0.04339630366027462,
        "per": 0.04339630366027462,
        "repo": 0.04339630366027462,
        "supports": 0.04339630366027462,
        "rollback": 0.04339630366027462,
        "regression": 0.04339630366027462,
        "testing": 0.04339630366027462,
        "via": 0.04339630366027462,
        "golden": 0.04339630366027462,
        "readmes": 0.04339630366027462,
        "stores": 0.04339630366027462,
        "embedding": 0.04339630366027462,
        "cache": 0.08679260732054923,
        "embeddings": 0.04339630366027462,
        "analyzers": 0.04339630366027462,
        "schema": 0.04339630366027462,
        "versioning": 0.04339630366027462,
        "so": 0.04339630366027462,
        "subsequent": 0.04339630366027462,
        "reuse": 0.04339630366027462,
        "work": 0.04339630366027462,
        "when": 0.04339630366027462,
        "file": 0.04339630366027462,
        "hashes": 0.04339630366027462,
        "remain": 0.04339630366027462,
        "unchanged": 0.04339630366027462,
        "10": 0.04339630366027462,
        "git": 0.04339630366027462,
        "publisher": 0.04339630366027462,
        "creates": 0.04339630366027462,
        "branch": 0.04339630366027462,
        "e": 0.04339630366027462,
        "g": 0.04339630366027462,
        "update": 0.04339630366027462,
        "yyyymmdd": 0.04339630366027462,
        "pr": 0.08679260732054923,
        "body": 0.04339630366027462,
        "explains": 0.04339630366027462,
        "detected": 0.04339630366027462,
        "what": 0.04339630366027462,
        "were": 0.04339630366027462,
        "updated": 0.04339630366027462,
        "can": 0.04339630366027462,
        "commit": 0.04339630366027462
      },
      "text": "shields/badges, normalizes heading hierarchy. * Enforces internal style guide and **README contract** (required sections). * Validates links (relative/absolute), code block languages, and line length. * Computes **diff-aware updates**: only modifies sections impacted by changes. * Persists a README scorecard (`.docgen/scorecard.json`) capturing coverage, quick start health, and link results. * Adds build/coverage/license badges with safe defaults and reports link warnings during post-processing. ### 3.8 Validation Layer * Runs after section rendering and before linting/publishing to ensure generated claims are grounded. * Normalizes analyzer signals, section metadata, and retrieved context into an **Evidence Index** used for token overlap checks. * Default `NoHallucinationValidator` rejects sentences lacking supporting evidence, replaces offending sections with fail-safe stubs, and raises actionable errors. * Writes `.docgen/validation.json` capturing validator status, issues, and evidence summaries for auditability. * Respects `.docgen.yml` `validation.no_hallucination` toggle, `DOCGEN_VALIDATION_NO_HALLUCINATION` environment override, and CLI `--skip-validation` flag for one-off bypasses. ### 3.9 Doc Store (Artifacts & Versions) * Keeps generated drafts, logs, prompts, inputs/outputs, and diffs under `.docgen/` per repo. * Supports rollback and regression testing via \u201cgolden\u201d READMEs. * Stores embedding cache (`embeddings.json`) and analyzer artifacts (`analyzers/cache.json`) with schema versioning so subsequent runs reuse work when file hashes remain unchanged. ### 3.10 Git Publisher * Creates a branch (e.g., `docgen/readme-update-YYYYMMDD`) and a PR. * PR body explains detected changes and what sections were updated. * Can commit",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#5",
      "vector": {
        "with": 0.0746913686973271,
        "schema": 0.03734568434866355,
        "versioning": 0.03734568434866355,
        "so": 0.03734568434866355,
        "subsequent": 0.03734568434866355,
        "runs": 0.03734568434866355,
        "reuse": 0.03734568434866355,
        "work": 0.03734568434866355,
        "when": 0.0746913686973271,
        "file": 0.03734568434866355,
        "hashes": 0.03734568434866355,
        "remain": 0.03734568434866355,
        "unchanged": 0.03734568434866355,
        "3": 0.0746913686973271,
        "10": 0.03734568434866355,
        "git": 0.03734568434866355,
        "publisher": 0.03734568434866355,
        "creates": 0.03734568434866355,
        "a": 0.0746913686973271,
        "branch": 0.03734568434866355,
        "e": 0.0746913686973271,
        "g": 0.0746913686973271,
        "docgen": 0.0746913686973271,
        "readme": 0.03734568434866355,
        "update": 0.0746913686973271,
        "yyyymmdd": 0.03734568434866355,
        "and": 0.18672842174331777,
        "pr": 0.0746913686973271,
        "body": 0.03734568434866355,
        "explains": 0.03734568434866355,
        "detected": 0.03734568434866355,
        "changes": 0.03734568434866355,
        "what": 0.03734568434866355,
        "sections": 0.03734568434866355,
        "were": 0.03734568434866355,
        "updated": 0.03734568434866355,
        "can": 0.03734568434866355,
        "commit": 0.03734568434866355,
        "directly": 0.03734568434866355,
        "configurable": 0.03734568434866355,
        "on": 0.03734568434866355,
        "init": 0.0746913686973271,
        "for": 0.1493827373946542,
        "empty": 0.03734568434866355,
        "repos": 0.03734568434866355,
        "applies": 0.03734568434866355,
        "labels": 0.03734568434866355,
        "docs": 0.0746913686973271,
        "auto": 0.03734568434866355,
        "updates": 0.03734568434866355,
        "existing": 0.03734568434866355,
        "prs": 0.03734568434866355,
        "configured": 0.03734568434866355,
        "11": 0.03734568434866355,
        "service": 0.1493827373946542,
        "mode": 0.03734568434866355,
        "fastapi": 0.0746913686973271,
        "app": 0.03734568434866355,
        "exposes": 0.03734568434866355,
        "post": 0.03734568434866355,
        "endpoints": 0.03734568434866355,
        "plus": 0.03734568434866355,
        "health": 0.03734568434866355,
        "readiness": 0.03734568434866355,
        "reuses": 0.03734568434866355,
        "the": 0.11203705304599065,
        "orchestrator": 0.03734568434866355,
        "dependency": 0.03734568434866355,
        "executes": 0.03734568434866355,
        "operations": 0.03734568434866355,
        "in": 0.03734568434866355,
        "thread": 0.03734568434866355,
        "pools": 0.03734568434866355,
        "to": 0.03734568434866355,
        "keep": 0.03734568434866355,
        "event": 0.03734568434866355,
        "loop": 0.03734568434866355,
        "responsive": 0.03734568434866355,
        "cli": 0.0746913686973271,
        "host": 0.03734568434866355,
        "0": 0.1493827373946542,
        "port": 0.03734568434866355,
        "8000": 0.03734568434866355,
        "boots": 0.03734568434866355,
        "authentication": 0.03734568434866355,
        "hooks": 0.03734568434866355,
        "ready": 0.03734568434866355,
        "future": 0.03734568434866355,
        "hardening": 0.03734568434866355,
        "error": 0.03734568434866355,
        "handlers": 0.03734568434866355,
        "surface": 0.03734568434866355,
        "actionable": 0.03734568434866355,
        "json": 0.03734568434866355,
        "detail": 0.0746913686973271,
        "field": 0.03734568434866355,
        "common": 0.03734568434866355,
        "runtime": 0.03734568434866355,
        "issues": 0.03734568434866355,
        "4": 0.03734568434866355,
        "data": 0.03734568434866355,
        "model": 0.03734568434866355,
        "python": 0.0746913686973271,
        "pydantic": 0.03734568434866355,
        "dataclasses": 0.0746913686973271,
        "from": 0.0746913686973271,
        "import": 0.0746913686973271,
        "dataclass": 0.2614197904406449,
        "typing": 0.03734568434866355,
        "list": 0.1493827373946542,
        "dict": 0.1493827373946542,
        "optional": 0.0746913686973271,
        "class": 0.2240741060919813,
        "filemeta": 0.0746913686973271,
        "path": 0.03734568434866355,
        "str": 0.6348766339272804,
        "size": 0.03734568434866355,
        "int": 0.03734568434866355,
        "language": 0.03734568434866355,
        "role": 0.03734568434866355,
        "src": 0.03734568434866355,
        "test": 0.0746913686973271,
        "config": 0.03734568434866355,
        "build": 0.03734568434866355,
        "script": 0.03734568434866355,
        "infra": 0.03734568434866355,
        "other": 0.03734568434866355,
        "hash": 0.03734568434866355,
        "repomanifest": 0.0746913686973271,
        "root": 0.03734568434866355,
        "files": 0.03734568434866355,
        "detectors": 0.03734568434866355,
        "build_system": 0.03734568434866355,
        "maven": 0.03734568434866355,
        "framework": 0.0746913686973271,
        "spring": 0.03734568434866355,
        "boot": 0.03734568434866355,
        "dependency_files": 0.03734568434866355,
        "pom": 0.03734568434866355,
        "xml": 0.03734568434866355,
        "requirements": 0.03734568434866355,
        "txt": 0.03734568434866355,
        "signal": 0.0746913686973271,
        "kind": 0.03734568434866355,
        "db": 0.03734568434866355,
        "queue": 0.03734568434866355,
        "dep": 0.03734568434866355,
        "entrypoint": 0.03734568434866355,
        "name": 0.03734568434866355,
        "analysisresult": 0.03734568434866355,
        "manifest": 0.03734568434866355,
        "signals": 0.03734568434866355,
        "embedding_index_path": 0.03734568434866355,
        "sectionspec": 0.03734568434866355,
        "key": 0.03734568434866355,
        "intro": 0.03734568434866355,
        "features": 0.03734568434866355,
        "arch": 0.03734568434866355,
        "quickstart": 0.03734568434866355,
        "required": 0.03734568434866355,
        "bool": 0.03734568434866355,
        "sources": 0.03734568434866355,
        "preferred": 0.03734568434866355,
        "retrieval": 0.03734568434866355,
        "tags": 0.03734568434866355,
        "template_name": 0.03734568434866355,
        "readmedraft": 0.03734568434866355
      },
      "text": "with schema versioning so subsequent runs reuse work when file hashes remain unchanged. ### 3.10 Git Publisher * Creates a branch (e.g., `docgen/readme-update-YYYYMMDD`) and a PR. * PR body explains detected changes and what sections were updated. * Can commit directly (configurable) on init for empty repos. * Applies labels (e.g., `docs:auto`) and updates existing PRs when configured. ### 3.11 Service Mode (FastAPI) * FastAPI app exposes `/init` and `/update` POST endpoints plus `/health` for readiness. * Reuses the orchestrator dependency and executes operations in thread pools to keep the event loop responsive. * CLI `docgen service --host 0.0.0.0 --port 8000` boots the service with authentication hooks ready for future hardening. * Error handlers surface actionable JSON (`detail` field) for common runtime issues. --- ## 4) Data Model (Python `pydantic`/`dataclasses`) ```python from dataclasses import dataclass from typing import List, Dict, Optional @dataclass class FileMeta: path: str size: int language: Optional[str] role: str # src|test|docs|config|build|script|infra|other hash: str @dataclass class RepoManifest: root: str files: List[FileMeta] detectors: Dict[str, str] # {\"build_system\": \"maven\", \"framework\":\"spring-boot\", ...} dependency_files: Dict[str, str] # {\"pom.xml\": \"...\", \"requirements.txt\": \"...\"} @dataclass class Signal: kind: str # \"framework\",\"service\",\"cli\",\"db\",\"queue\",\"dep\",\"entrypoint\",\"test\" name: str detail: Dict[str, str] @dataclass class AnalysisResult: manifest: RepoManifest signals: List[Signal] embedding_index_path: str @dataclass class SectionSpec: key: str # \"intro\",\"features\",\"arch\",\"quickstart\",... required: bool sources: List[str] # preferred retrieval tags template_name: str @dataclass class ReadmeDraft:",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#6",
      "vector": {
        "class": 0.22011272658140596,
        "signal": 0.08804509063256238,
        "kind": 0.04402254531628119,
        "str": 0.6603381797442178,
        "framework": 0.04402254531628119,
        "service": 0.04402254531628119,
        "cli": 0.08804509063256238,
        "db": 0.04402254531628119,
        "queue": 0.04402254531628119,
        "dep": 0.04402254531628119,
        "entrypoint": 0.04402254531628119,
        "test": 0.04402254531628119,
        "name": 0.04402254531628119,
        "detail": 0.04402254531628119,
        "dict": 0.13206763594884358,
        "dataclass": 0.17609018126512477,
        "analysisresult": 0.04402254531628119,
        "manifest": 0.04402254531628119,
        "repomanifest": 0.04402254531628119,
        "signals": 0.04402254531628119,
        "list": 0.13206763594884358,
        "embedding_index_path": 0.04402254531628119,
        "sectionspec": 0.04402254531628119,
        "key": 0.04402254531628119,
        "intro": 0.08804509063256238,
        "features": 0.08804509063256238,
        "arch": 0.04402254531628119,
        "quickstart": 0.08804509063256238,
        "required": 0.04402254531628119,
        "bool": 0.04402254531628119,
        "sources": 0.04402254531628119,
        "preferred": 0.04402254531628119,
        "retrieval": 0.04402254531628119,
        "tags": 0.04402254531628119,
        "template_name": 0.04402254531628119,
        "readmedraft": 0.04402254531628119,
        "sections": 0.04402254531628119,
        "full_markdown": 0.04402254531628119,
        "updateplan": 0.04402254531628119,
        "strategy": 0.04402254531628119,
        "full": 0.04402254531628119,
        "patch": 0.04402254531628119,
        "changed_sections": 0.04402254531628119,
        "reasons": 0.04402254531628119,
        "section": 0.04402254531628119,
        "why": 0.04402254531628119,
        "5": 0.04402254531628119,
        "configuration": 0.08804509063256238,
        "docgen": 0.17609018126512477,
        "yml": 0.04402254531628119,
        "at": 0.04402254531628119,
        "repo": 0.04402254531628119,
        "root": 0.04402254531628119,
        "yaml": 0.04402254531628119,
        "llm": 0.04402254531628119,
        "runner": 0.04402254531628119,
        "ollama": 0.08804509063256238,
        "or": 0.13206763594884358,
        "llama": 0.04402254531628119,
        "cpp": 0.04402254531628119,
        "executable": 0.04402254531628119,
        "optional": 0.08804509063256238,
        "override": 0.04402254531628119,
        "for": 0.04402254531628119,
        "binaries": 0.04402254531628119,
        "model": 0.04402254531628119,
        "llama3": 0.04402254531628119,
        "8b": 0.04402254531628119,
        "instruct": 0.04402254531628119,
        "example": 0.04402254531628119,
        "local": 0.04402254531628119,
        "only": 0.08804509063256238,
        "max_tokens": 0.04402254531628119,
        "2048": 0.04402254531628119,
        "temperature": 0.04402254531628119,
        "0": 0.08804509063256238,
        "2": 0.04402254531628119,
        "readme": 0.13206763594884358,
        "style": 0.04402254531628119,
        "concise": 0.04402254531628119,
        "comprehensive": 0.04402254531628119,
        "template_pack": 0.04402254531628119,
        "enterprise": 0.04402254531628119,
        "bundle": 0.04402254531628119,
        "shipped": 0.04402254531628119,
        "with": 0.04402254531628119,
        "required_sections": 0.04402254531628119,
        "architecture": 0.04402254531628119,
        "build_and_test": 0.04402254531628119,
        "deployment": 0.04402254531628119,
        "troubleshooting": 0.04402254531628119,
        "faq": 0.04402254531628119,
        "license": 0.04402254531628119,
        "validation": 0.04402254531628119,
        "no_hallucination": 0.04402254531628119,
        "true": 0.08804509063256238,
        "set": 0.04402254531628119,
        "to": 0.08804509063256238,
        "false": 0.04402254531628119,
        "use": 0.04402254531628119,
        "docgen_validation_no_hallucination": 0.04402254531628119,
        "disable": 0.04402254531628119,
        "publish": 0.04402254531628119,
        "mode": 0.04402254531628119,
        "pr": 0.13206763594884358,
        "commit": 0.04402254531628119,
        "dry": 0.04402254531628119,
        "run": 0.04402254531628119,
        "branch_prefix": 0.04402254531628119,
        "labels": 0.04402254531628119,
        "docs": 0.04402254531628119,
        "auto": 0.04402254531628119,
        "update_existing": 0.04402254531628119,
        "refresh": 0.04402254531628119,
        "an": 0.04402254531628119,
        "existing": 0.04402254531628119,
        "instead": 0.04402254531628119,
        "of": 0.04402254531628119,
        "opening": 0.04402254531628119,
        "a": 0.04402254531628119,
        "new": 0.04402254531628119,
        "one": 0.04402254531628119,
        "analyzers": 0.04402254531628119,
        "enabled": 0.04402254531628119,
        "language": 0.04402254531628119,
        "build": 0.08804509063256238,
        "dependencies": 0.04402254531628119,
        "patterns": 0.04402254531628119,
        "exclude_paths": 0.04402254531628119,
        "git": 0.04402254531628119,
        "node_modules": 0.04402254531628119,
        "dist": 0.04402254531628119,
        "ci": 0.04402254531628119,
        "update": 0.04402254531628119,
        "if": 0.08804509063256238,
        "these": 0.04402254531628119,
        "paths": 0.04402254531628119,
        "change": 0.04402254531628119,
        "watched_globs": 0.04402254531628119,
        "src": 0.04402254531628119,
        "app": 0.04402254531628119,
        "cmd": 0.04402254531628119,
        "pom": 0.04402254531628119,
        "xml": 0.04402254531628119,
        "gradle": 0.04402254531628119,
        "package": 0.04402254531628119,
        "json": 0.04402254531628119,
        "requirements": 0.04402254531628119,
        "txt": 0.04402254531628119,
        "pyproject": 0.04402254531628119,
        "toml": 0.04402254531628119,
        "dockerfile": 0.04402254531628119,
        "no": 0.04402254531628119,
        "templates_dir": 0.04402254531628119,
        "is": 0.04402254531628119,
        "provided": 0.04402254531628119
      },
      "text": "class Signal: kind: str # \"framework\",\"service\",\"cli\",\"db\",\"queue\",\"dep\",\"entrypoint\",\"test\" name: str detail: Dict[str, str] @dataclass class AnalysisResult: manifest: RepoManifest signals: List[Signal] embedding_index_path: str @dataclass class SectionSpec: key: str # \"intro\",\"features\",\"arch\",\"quickstart\",... required: bool sources: List[str] # preferred retrieval tags template_name: str @dataclass class ReadmeDraft: sections: Dict[str, str] full_markdown: str @dataclass class UpdatePlan: strategy: str # \"full\"|\"patch\" changed_sections: List[str] reasons: Dict[str, str] # section->why ``` --- ## 5) Configuration (`.docgen.yml` at repo root) ```yaml llm: runner: \"ollama\" # or \"llama.cpp\" executable: \"ollama\" # optional override for CLI binaries model: \"llama3:8b-instruct\" # example; local only max_tokens: 2048 temperature: 0.2 readme: style: \"concise\" # or \"comprehensive\" template_pack: \"enterprise\" # optional bundle shipped with docgen required_sections: - intro - features - architecture - quickstart - configuration - build_and_test - deployment - troubleshooting - faq - license validation: no_hallucination: true # set to false or use DOCGEN_VALIDATION_NO_HALLUCINATION=0 to disable publish: mode: \"pr\" # \"commit\" | \"pr\" | \"dry-run\" branch_prefix: \"docgen/\" labels: - \"docs:auto\" update_existing: true # refresh an existing PR instead of opening a new one analyzers: enabled: - language - build - dependencies - patterns exclude_paths: - \".git/\" - \"node_modules/\" - \"dist/\" ci: # Only update README if these paths change watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" - \"requirements.txt\" - \"pyproject.toml\" - \"Dockerfile\" ``` > If no `readme.templates_dir` is provided, docgen",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#7",
      "vector": {
        "node_modules": 0.05006261743217589,
        "dist": 0.05006261743217589,
        "ci": 0.15018785229652767,
        "only": 0.10012523486435178,
        "update": 0.15018785229652767,
        "readme": 0.25031308716087947,
        "if": 0.15018785229652767,
        "these": 0.05006261743217589,
        "paths": 0.05006261743217589,
        "change": 0.05006261743217589,
        "watched_globs": 0.10012523486435178,
        "src": 0.10012523486435178,
        "app": 0.05006261743217589,
        "cmd": 0.05006261743217589,
        "pom": 0.10012523486435178,
        "xml": 0.10012523486435178,
        "build": 0.25031308716087947,
        "gradle": 0.10012523486435178,
        "package": 0.05006261743217589,
        "json": 0.05006261743217589,
        "requirements": 0.05006261743217589,
        "txt": 0.05006261743217589,
        "pyproject": 0.05006261743217589,
        "toml": 0.05006261743217589,
        "dockerfile": 0.10012523486435178,
        "no": 0.10012523486435178,
        "templates_dir": 0.05006261743217589,
        "is": 0.05006261743217589,
        "provided": 0.05006261743217589,
        "docgen": 0.25031308716087947,
        "automatically": 0.05006261743217589,
        "picks": 0.05006261743217589,
        "up": 0.05006261743217589,
        "docs": 0.05006261743217589,
        "templates": 0.10012523486435178,
        "bundles": 0.05006261743217589,
        "in": 0.10012523486435178,
        "the": 0.05006261743217589,
        "repository": 0.05006261743217589,
        "root": 0.05006261743217589,
        "and": 0.10012523486435178,
        "supports": 0.05006261743217589,
        "built": 0.05006261743217589,
        "template": 0.05006261743217589,
        "packs": 0.05006261743217589,
        "via": 0.10012523486435178,
        "template_pack": 0.05006261743217589,
        "6": 0.25031308716087947,
        "workflows": 0.05006261743217589,
        "1": 0.15018785229652767,
        "initialization": 0.05006261743217589,
        "repo": 0.05006261743217589,
        "without": 0.10012523486435178,
        "scan": 0.05006261743217589,
        "analyze": 0.05006261743217589,
        "manifest": 0.05006261743217589,
        "signals": 0.05006261743217589,
        "embeddings": 0.05006261743217589,
        "2": 0.15018785229652767,
        "prompt": 0.05006261743217589,
        "with": 0.10012523486435178,
        "default": 0.05006261743217589,
        "include": 0.05006261743217589,
        "getting": 0.05006261743217589,
        "started": 0.05006261743217589,
        "suggestions": 0.05006261743217589,
        "3": 0.15018785229652767,
        "generate": 0.10012523486435178,
        "sections": 0.20025046972870356,
        "sequentially": 0.05006261743217589,
        "streaming": 0.05006261743217589,
        "4": 0.10012523486435178,
        "post": 0.10012523486435178,
        "process": 0.10012523486435178,
        "toc": 0.05006261743217589,
        "badges": 0.05006261743217589,
        "status": 0.05006261743217589,
        "placeholder": 0.05006261743217589,
        "lint": 0.05006261743217589,
        "5": 0.10012523486435178,
        "publish": 0.05006261743217589,
        "direct": 0.05006261743217589,
        "commit": 0.10012523486435178,
        "md": 0.05006261743217589,
        "artifacts": 0.05006261743217589,
        "on": 0.05006261743217589,
        "pr": 0.10012523486435178,
        "detect": 0.05006261743217589,
        "changes": 0.05006261743217589,
        "git": 0.05006261743217589,
        "diff": 0.05006261743217589,
        "map": 0.05006261743217589,
        "files": 0.05006261743217589,
        "to": 0.15018785229652767,
        "using": 0.05006261743217589,
        "a": 0.05006261743217589,
        "rules": 0.05006261743217589,
        "matrix": 0.05006261743217589,
        "test": 0.05006261743217589,
        "quick": 0.05006261743217589,
        "start": 0.05006261743217589,
        "k8s": 0.05006261743217589,
        "deployment": 0.05006261743217589,
        "entrypoints": 0.05006261743217589,
        "architecture": 0.05006261743217589,
        "features": 0.05006261743217589,
        "decide": 0.05006261743217589,
        "updateplan": 0.05006261743217589,
        "patch": 0.05006261743217589,
        "impacted": 0.05006261743217589,
        "regenerate": 0.15018785229652767,
        "those": 0.05006261743217589,
        "skip": 0.05006261743217589,
        "changed": 0.05006261743217589,
        "file": 0.05006261743217589,
        "matches": 0.05006261743217589,
        "yml": 0.05006261743217589,
        "allows": 0.05006261743217589,
        "avoid": 0.05006261743217589,
        "unnecessary": 0.05006261743217589,
        "runs": 0.05006261743217589,
        "rag": 0.05006261743217589,
        "retrieval": 0.05006261743217589,
        "fetch": 0.05006261743217589,
        "top": 0.05006261743217589,
        "k": 0.05006261743217589,
        "chunks": 0.05006261743217589,
        "relevant": 0.05006261743217589,
        "each": 0.05006261743217589,
        "section": 0.10012523486435178,
        "open": 0.05006261743217589,
        "summary": 0.05006261743217589,
        "of": 0.05006261743217589,
        "deltas": 0.05006261743217589,
        "dry": 0.10012523486435178,
        "run": 0.10012523486435178,
        "support": 0.05006261743217589,
        "computes": 0.05006261743217589,
        "diffs": 0.05006261743217589,
        "scorecards": 0.05006261743217589,
        "writing": 0.05006261743217589,
        "or": 0.10012523486435178,
        "publishing": 0.05006261743217589,
        "manual": 0.05006261743217589,
        "full": 0.05006261743217589,
        "intro": 0.05006261743217589,
        "arch": 0.05006261743217589,
        "7": 0.05006261743217589,
        "contract": 0.05006261743217589
      },
      "text": "- \"node_modules/\" - \"dist/\" ci: # Only update README if these paths change watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" - \"requirements.txt\" - \"pyproject.toml\" - \"Dockerfile\" ``` > If no `readme.templates_dir` is provided, docgen automatically picks up `docs/templates/` bundles in the repository root and supports built-in template packs via `readme.template_pack`. --- ## 6) Workflows ### 6.1 Initialization (Repo without README) 1. **Scan & Analyze** \u2192 Manifest + Signals + Embeddings. 2. **Prompt Build** with default templates, include \u201cgetting started\u201d suggestions. 3. **Generate Sections** sequentially (streaming). 4. **Post-process** \u2192 ToC, badges (build status placeholder), lint. 5. **Publish**: direct commit `README.md` + `.docgen/` artifacts. ### 6.2 Update on Commit/PR 1. **Detect changes** via Git diff; map files to sections using a rules matrix: * `pom.xml`/`build.gradle` \u2192 *Build & Test*, *Quick Start*. * `Dockerfile`/`k8s` \u2192 *Deployment*. * `src/**` entrypoints \u2192 *Architecture*, *Features*. 2. **Decide UpdatePlan**: patch impacted sections; regenerate only those. 3. **Skip** if no changed file matches `.docgen.yml` `ci.watched_globs` (allows CI to avoid unnecessary runs). 4. **RAG retrieval**: fetch top-k chunks relevant to each section. 5. **Generate** \u2192 **Post-process** \u2192 **Open PR** with summary of deltas. 6. Dry-run support: `docgen update --dry-run` computes diffs and scorecards without writing or publishing. ### 6.3 Regenerate (Manual) * `docgen regenerate --full` or `--sections intro,arch`. --- ## 7) Section Contract",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#8",
      "vector": {
        "generate": 0.05923488777590923,
        "post": 0.11846977555181847,
        "process": 0.05923488777590923,
        "open": 0.05923488777590923,
        "pr": 0.05923488777590923,
        "with": 0.05923488777590923,
        "summary": 0.05923488777590923,
        "of": 0.05923488777590923,
        "deltas": 0.05923488777590923,
        "6": 0.11846977555181847,
        "dry": 0.11846977555181847,
        "run": 0.11846977555181847,
        "support": 0.11846977555181847,
        "docgen": 0.11846977555181847,
        "update": 0.05923488777590923,
        "computes": 0.05923488777590923,
        "diffs": 0.05923488777590923,
        "and": 0.11846977555181847,
        "scorecards": 0.05923488777590923,
        "without": 0.05923488777590923,
        "writing": 0.05923488777590923,
        "or": 0.1777046633277277,
        "publishing": 0.05923488777590923,
        "3": 0.05923488777590923,
        "regenerate": 0.11846977555181847,
        "manual": 0.05923488777590923,
        "full": 0.05923488777590923,
        "sections": 0.05923488777590923,
        "intro": 0.11846977555181847,
        "arch": 0.05923488777590923,
        "7": 0.05923488777590923,
        "section": 0.23693955110363693,
        "contract": 0.05923488777590923,
        "readme": 0.05923488777590923,
        "what": 0.05923488777590923,
        "why": 0.05923488777590923,
        "who": 0.05923488777590923,
        "it": 0.05923488777590923,
        "s": 0.05923488777590923,
        "for": 0.05923488777590923,
        "key": 0.05923488777590923,
        "features": 0.05923488777590923,
        "bullets": 0.05923488777590923,
        "grounded": 0.05923488777590923,
        "in": 0.05923488777590923,
        "real": 0.05923488777590923,
        "repo": 0.11846977555181847,
        "signals": 0.11846977555181847,
        "architecture": 0.05923488777590923,
        "overview": 0.05923488777590923,
        "diagram": 0.05923488777590923,
        "ascii": 0.05923488777590923,
        "components": 0.05923488777590923,
        "quick": 0.05923488777590923,
        "start": 0.05923488777590923,
        "minimal": 0.05923488777590923,
        "commands": 0.23693955110363693,
        "per": 0.11846977555181847,
        "build": 0.11846977555181847,
        "system": 0.11846977555181847,
        "configuration": 0.05923488777590923,
        "env": 0.05923488777590923,
        "vars": 0.05923488777590923,
        "files": 0.05923488777590923,
        "examples": 0.05923488777590923,
        "test": 0.05923488777590923,
        "coverage": 0.05923488777590923,
        "hint": 0.05923488777590923,
        "deployment": 0.05923488777590923,
        "container": 0.05923488777590923,
        "k8s": 0.05923488777590923,
        "instructions": 0.05923488777590923,
        "if": 0.1777046633277277,
        "detected": 0.1777046633277277,
        "troubleshooting": 0.05923488777590923,
        "common": 0.05923488777590923,
        "failures": 0.05923488777590923,
        "faq": 0.05923488777590923,
        "5": 0.05923488777590923,
        "10": 0.05923488777590923,
        "concise": 0.05923488777590923,
        "q": 0.05923488777590923,
        "a": 0.11846977555181847,
        "contributing": 0.11846977555181847,
        "md": 0.05923488777590923,
        "absent": 0.05923488777590923,
        "license": 0.05923488777590923,
        "templated": 0.05923488777590923,
        "each": 0.05923488777590923,
        "must": 0.05923488777590923,
        "be": 0.11846977555181847,
        "independently": 0.05923488777590923,
        "regenerable": 0.05923488777590923,
        "self": 0.05923488777590923,
        "contained": 0.05923488777590923,
        "8": 0.05923488777590923,
        "prompting": 0.05923488777590923,
        "strategy": 0.05923488777590923,
        "local": 0.05923488777590923,
        "llm": 0.05923488777590923,
        "message": 0.11846977555181847,
        "fixed": 0.05923488777590923,
        "guardrails": 0.05923488777590923,
        "you": 0.05923488777590923,
        "are": 0.05923488777590923,
        "senior": 0.05923488777590923,
        "dev": 0.05923488777590923,
        "doc": 0.05923488777590923,
        "writer": 0.05923488777590923,
        "precise": 0.05923488777590923,
        "cite": 0.05923488777590923,
        "facts": 0.05923488777590923,
        "only": 0.05923488777590923,
        "no": 0.05923488777590923,
        "speculation": 0.05923488777590923,
        "never": 0.05923488777590923,
        "invent": 0.05923488777590923,
        "prefer": 0.05923488777590923,
        "by": 0.05923488777590923,
        "analyzers": 0.05923488777590923,
        "user": 0.05923488777590923,
        "objective": 0.05923488777590923,
        "constraints": 0.05923488777590923,
        "tone": 0.05923488777590923,
        "length": 0.05923488777590923,
        "inject": 0.05923488777590923,
        "top": 0.05923488777590923,
        "k": 0.05923488777590923,
        "chunks": 0.05923488777590923,
        "rag": 0.05923488777590923,
        "provide": 0.05923488777590923,
        "style": 0.05923488777590923,
        "tokens": 0.05923488777590923,
        "headings": 0.05923488777590923,
        "code": 0.05923488777590923,
        "blocks": 0.05923488777590923,
        "tables": 0.05923488777590923,
        "filters": 0.05923488777590923,
        "refuse": 0.05923488777590923,
        "insufficient": 0.05923488777590923,
        "evidence": 0.05923488777590923,
        "fall": 0.05923488777590923,
        "back": 0.05923488777590923,
        "to": 0.05923488777590923,
        "template": 0.05923488777590923,
        "stubs": 0.05923488777590923,
        "9": 0.05923488777590923,
        "language": 0.05923488777590923,
        "project": 0.05923488777590923,
        "poc": 0.11846977555181847,
        "targets": 0.05923488777590923,
        "tier": 0.11846977555181847,
        "1": 0.05923488777590923,
        "python": 0.05923488777590923,
        "poetry": 0.05923488777590923,
        "setuptools": 0.05923488777590923,
        "java": 0.05923488777590923,
        "maven": 0.05923488777590923,
        "gradle": 0.05923488777590923,
        "spring": 0.05923488777590923,
        "boot": 0.05923488777590923,
        "node": 0.05923488777590923,
        "js": 0.05923488777590923,
        "npm": 0.05923488777590923,
        "pnpm": 0.05923488777590923,
        "express": 0.05923488777590923,
        "next": 0.05923488777590923,
        "2": 0.05923488777590923,
        "soon": 0.05923488777590923,
        "go": 0.05923488777590923,
        "modules": 0.05923488777590923
      },
      "text": "**Generate** \u2192 **Post-process** \u2192 **Open PR** with summary of deltas. 6. Dry-run support: `docgen update --dry-run` computes diffs and scorecards without writing or publishing. ### 6.3 Regenerate (Manual) * `docgen regenerate --full` or `--sections intro,arch`. --- ## 7) Section Contract (README) * **Intro**: what, why, who it\u2019s for * **Key Features**: bullets grounded in real repo signals * **Architecture**: overview diagram (ASCII) + components * **Quick Start**: minimal commands (per build system) * **Configuration**: env vars, files, examples * **Build & Test**: commands, coverage hint * **Deployment**: container/K8s instructions if detected * **Troubleshooting**: common failures * **FAQ**: 5\u201310 concise Q\\&A * **Contributing** (if `CONTRIBUTING.md` absent) * **License** (detected or templated) > Each section must be independently regenerable and self-contained. --- ## 8) Prompting Strategy (Local LLM) * **System message (fixed guardrails)**: * \u201cYou are a senior dev doc writer. Be precise. Cite repo facts only. No speculation.\u201d * \u201cNever invent commands. Prefer commands detected by analyzers.\u201d * **User message per section**: * Section objective + constraints (tone, length). * Inject **Signals** + **Top-k chunks** (RAG). * Provide **style tokens** (headings, code blocks, tables). * **Post-filters**: refuse if insufficient evidence; fall back to template stubs. --- ## 9) Language & Project Support (POC targets) * **Tier-1 (POC)**: Python (Poetry/Setuptools), Java (Maven/Gradle, Spring Boot), Node.js (npm/pnpm, Express/Next). * **Tier-2 (soon)**: Go (modules),",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#9",
      "vector": {
        "code": 0.0636929755298482,
        "blocks": 0.0318464877649241,
        "tables": 0.0318464877649241,
        "post": 0.0636929755298482,
        "filters": 0.0318464877649241,
        "refuse": 0.0318464877649241,
        "if": 0.0318464877649241,
        "insufficient": 0.0318464877649241,
        "evidence": 0.0318464877649241,
        "fall": 0.0318464877649241,
        "back": 0.0318464877649241,
        "to": 0.0318464877649241,
        "template": 0.0318464877649241,
        "stubs": 0.0636929755298482,
        "9": 0.0318464877649241,
        "language": 0.0636929755298482,
        "project": 0.0318464877649241,
        "support": 0.0318464877649241,
        "poc": 0.0636929755298482,
        "targets": 0.0318464877649241,
        "tier": 0.0636929755298482,
        "1": 0.0318464877649241,
        "python": 0.0955394632947723,
        "poetry": 0.0318464877649241,
        "setuptools": 0.0318464877649241,
        "java": 0.0318464877649241,
        "maven": 0.0318464877649241,
        "gradle": 0.0318464877649241,
        "spring": 0.0636929755298482,
        "boot": 0.0318464877649241,
        "node": 0.0318464877649241,
        "js": 0.0318464877649241,
        "npm": 0.0318464877649241,
        "pnpm": 0.0318464877649241,
        "express": 0.0318464877649241,
        "next": 0.0318464877649241,
        "2": 0.0318464877649241,
        "soon": 0.0318464877649241,
        "go": 0.0318464877649241,
        "modules": 0.0318464877649241,
        "rust": 0.0318464877649241,
        "cargo": 0.0318464877649241,
        "ruby": 0.0318464877649241,
        "bundler": 0.0318464877649241,
        "php": 0.0318464877649241,
        "composer": 0.0318464877649241,
        "detection": 0.0318464877649241,
        "via": 0.0318464877649241,
        "file": 0.0318464877649241,
        "heuristics": 0.0318464877649241,
        "optional": 0.0636929755298482,
        "tree": 0.0318464877649241,
        "sitter": 0.0318464877649241,
        "for": 0.0636929755298482,
        "function": 0.0318464877649241,
        "class": 0.0636929755298482,
        "extraction": 0.0318464877649241,
        "pluggable": 0.0318464877649241,
        "entry": 0.0318464877649241,
        "points": 0.0318464877649241,
        "main": 0.0636929755298482,
        "springbootapplication": 0.0318464877649241,
        "fastapi": 0.0636929755298482,
        "app": 0.1273859510596964,
        "bin": 0.0318464877649241,
        "cmd": 0.0318464877649241,
        "10": 0.0318464877649241,
        "interfaces": 0.0318464877649241,
        "skeleton": 0.0318464877649241,
        "docgen": 0.0318464877649241,
        "__init__": 0.0318464877649241,
        "py": 0.7961621941231025,
        "cli": 0.0955394632947723,
        "click": 0.0318464877649241,
        "typer": 0.0636929755298482,
        "failsafe": 0.0318464877649241,
        "fail": 0.0318464877649241,
        "safe": 0.0318464877649241,
        "readme": 0.0318464877649241,
        "logging": 0.0636929755298482,
        "configuration": 0.0318464877649241,
        "helpers": 0.0318464877649241,
        "orchestrator": 0.0318464877649241,
        "repo_scanner": 0.0318464877649241,
        "analyzers": 0.0318464877649241,
        "base": 0.0318464877649241,
        "analyzer": 0.0955394632947723,
        "abc": 0.1592324388246205,
        "build": 0.0318464877649241,
        "dependencies": 0.0318464877649241,
        "entrypoints": 0.0318464877649241,
        "patterns": 0.0318464877649241,
        "rag": 0.0318464877649241,
        "embedder": 0.0318464877649241,
        "local": 0.0318464877649241,
        "embedding": 0.0318464877649241,
        "model": 0.0318464877649241,
        "store": 0.0318464877649241,
        "prompting": 0.0318464877649241,
        "builder": 0.0318464877649241,
        "jinja2": 0.0318464877649241,
        "templates": 0.0636929755298482,
        "token": 0.0318464877649241,
        "mgmt": 0.0318464877649241,
        "constants": 0.0318464877649241,
        "j2": 0.0318464877649241,
        "per": 0.0318464877649241,
        "section": 0.0318464877649241,
        "llm": 0.0318464877649241,
        "runner": 0.0318464877649241,
        "adapter": 0.0318464877649241,
        "ollama": 0.0318464877649241,
        "llama": 0.0318464877649241,
        "cpp": 0.0318464877649241,
        "postproc": 0.0318464877649241,
        "lint": 0.0318464877649241,
        "links": 0.0318464877649241,
        "markers": 0.0318464877649241,
        "toc": 0.0318464877649241,
        "git": 0.0318464877649241,
        "diff": 0.0318464877649241,
        "publisher": 0.0318464877649241,
        "config": 0.0318464877649241,
        "models": 0.0636929755298482,
        "from": 0.0636929755298482,
        "import": 0.0636929755298482,
        "abstractmethod": 0.0955394632947723,
        "repomanifest": 0.0955394632947723,
        "signal": 0.0636929755298482,
        "def": 0.1592324388246205,
        "supports": 0.0318464877649241,
        "self": 0.0636929755298482,
        "manifest": 0.0636929755298482,
        "bool": 0.0955394632947723,
        "analyze": 0.0318464877649241,
        "list": 0.0318464877649241,
        "command": 0.0955394632947723,
        "init": 0.0318464877649241,
        "path": 0.0636929755298482,
        "str": 0.1592324388246205,
        "publish": 0.0318464877649241,
        "true": 0.0318464877649241,
        "update": 0.0318464877649241,
        "event": 0.0318464877649241,
        "commit": 0.0318464877649241,
        "diff_base": 0.0318464877649241,
        "origin": 0.0318464877649241,
        "regenerate": 0.0318464877649241,
        "sections": 0.0318464877649241,
        "full": 0.0318464877649241,
        "false": 0.0318464877649241,
        "service": 0.0318464877649241,
        "mode": 0.0318464877649241
      },
      "text": "code blocks, tables). * **Post-filters**: refuse if insufficient evidence; fall back to template stubs. --- ## 9) Language & Project Support (POC targets) * **Tier-1 (POC)**: Python (Poetry/Setuptools), Java (Maven/Gradle, Spring Boot), Node.js (npm/pnpm, Express/Next). * **Tier-2 (soon)**: Go (modules), Rust (Cargo), Ruby (Bundler), PHP (Composer). * Detection via: * File heuristics + optional tree-sitter for function/class extraction (pluggable). * Entry points: `main()`; Spring `@SpringBootApplication`; FastAPI app; `bin/`, `cmd/`. --- ## 10) Interfaces (Code Skeleton) ``` docgen/ __init__.py cli.py # click/typer CLI failsafe.py # fail-safe README stubs logging.py # logging configuration helpers orchestrator.py repo_scanner.py analyzers/ base.py # Analyzer ABC language.py build.py dependencies.py entrypoints.py patterns.py rag/ embedder.py # local embedding model store.py prompting/ builder.py # Jinja2 templates, token mgmt constants.py templates/ # *.j2 per section llm/ runner.py # adapter for ollama/llama.cpp postproc/ lint.py links.py markers.py toc.py git/ diff.py publisher.py config.py models.py ``` **Analyzer ABC** ```python from abc import ABC, abstractmethod from .models import RepoManifest, Signal class Analyzer(ABC): @abstractmethod def supports(self, manifest: RepoManifest) -> bool: ... @abstractmethod def analyze(self, manifest: RepoManifest) -> list[Signal]: ... ``` **CLI (Typer)** ```python @app.command() def init(path: str = \".\", publish: bool = True): ... @app.command() def update(path: str = \".\", event: str = \"commit\", diff_base: str = \"origin/main\"): ... @app.command() def regenerate(sections: str = \"\", full: bool = False): ... ``` **FastAPI (optional service mode)** * `POST",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#10",
      "vector": {
        "publish": 0.17586311452816478,
        "bool": 0.11724207635210984,
        "true": 0.05862103817605492,
        "app": 0.17586311452816478,
        "command": 0.11724207635210984,
        "def": 0.11724207635210984,
        "update": 0.17586311452816478,
        "path": 0.11724207635210984,
        "str": 0.23448415270421968,
        "event": 0.05862103817605492,
        "commit": 0.11724207635210984,
        "diff_base": 0.05862103817605492,
        "origin": 0.05862103817605492,
        "main": 0.05862103817605492,
        "regenerate": 0.05862103817605492,
        "sections": 0.23448415270421968,
        "full": 0.05862103817605492,
        "false": 0.05862103817605492,
        "fastapi": 0.05862103817605492,
        "optional": 0.11724207635210984,
        "service": 0.05862103817605492,
        "mode": 0.05862103817605492,
        "post": 0.35172622905632955,
        "analyze": 0.05862103817605492,
        "generate": 0.05862103817605492,
        "arch": 0.05862103817605492,
        "quickstart": 0.17586311452816478,
        "get": 0.05862103817605492,
        "status": 0.05862103817605492,
        "run_id": 0.05862103817605492,
        "11": 0.05862103817605492,
        "change": 0.05862103817605492,
        "impact": 0.05862103817605492,
        "matrix": 0.05862103817605492,
        "examples": 0.05862103817605492,
        "changed": 0.11724207635210984,
        "pattern": 0.05862103817605492,
        "to": 0.11724207635210984,
        "rebuild": 0.05862103817605492,
        "notes": 0.05862103817605492,
        "pom": 0.05862103817605492,
        "xml": 0.05862103817605492,
        "build": 0.23448415270421968,
        "gradle": 0.05862103817605492,
        "_and": 0.11724207635210984,
        "_test": 0.11724207635210984,
        "recompute": 0.05862103817605492,
        "commands": 0.05862103817605492,
        "requirements": 0.05862103817605492,
        "txt": 0.05862103817605492,
        "pyproject": 0.05862103817605492,
        "toml": 0.05862103817605492,
        "install": 0.05862103817605492,
        "steps": 0.05862103817605492,
        "dockerfile": 0.05862103817605492,
        "k8s": 0.05862103817605492,
        "deployment": 0.05862103817605492,
        "container": 0.05862103817605492,
        "changes": 0.05862103817605492,
        "src": 0.05862103817605492,
        "cmd": 0.05862103817605492,
        "features": 0.05862103817605492,
        "architecture": 0.17586311452816478,
        "if": 0.05862103817605492,
        "entrypoint": 0.05862103817605492,
        "intro": 0.05862103817605492,
        "too": 0.05862103817605492,
        "docs": 0.05862103817605492,
        "all": 0.05862103817605492,
        "patch": 0.05862103817605492,
        "prefer": 0.05862103817605492,
        "doc": 0.05862103817605492,
        "driven": 0.05862103817605492,
        "readme": 0.11724207635210984,
        "md": 0.05862103817605492,
        "none": 0.05862103817605492,
        "unless": 0.05862103817605492,
        "empty": 0.05862103817605492,
        "prevent": 0.05862103817605492,
        "loops": 0.05862103817605492,
        "12": 0.05862103817605492,
        "processing": 0.05862103817605492,
        "rules": 0.05862103817605492,
        "headings": 0.05862103817605492,
        "start": 0.05862103817605492,
        "at": 0.05862103817605492,
        "for": 0.11724207635210984,
        "title": 0.05862103817605492,
        "then": 0.05862103817605492,
        "add": 0.05862103817605492,
        "auto": 0.05862103817605492,
        "toc": 0.05862103817605492,
        "level": 0.05862103817605492,
        "3": 0.05862103817605492,
        "validate": 0.05862103817605492,
        "code": 0.05862103817605492,
        "blocks": 0.05862103817605492,
        "bash": 0.05862103817605492,
        "python": 0.05862103817605492,
        "convert": 0.05862103817605492,
        "absolute": 0.05862103817605492,
        "github": 0.05862103817605492,
        "links": 0.05862103817605492,
        "relative": 0.05862103817605492,
        "where": 0.05862103817605492,
        "possible": 0.05862103817605492,
        "ensure": 0.05862103817605492,
        "idempotency": 0.05862103817605492,
        "only": 0.05862103817605492,
        "edit": 0.05862103817605492,
        "between": 0.05862103817605492,
        "managed": 0.05862103817605492,
        "markers": 0.11724207635210984,
        "docgen": 0.11724207635210984,
        "begin": 0.05862103817605492,
        "end": 0.05862103817605492,
        "13": 0.05862103817605492,
        "git": 0.05862103817605492,
        "ci": 0.05862103817605492,
        "integration": 0.05862103817605492,
        "local": 0.05862103817605492,
        "pre": 0.05862103817605492,
        "forbid": 0.05862103817605492,
        "direct": 0.05862103817605492,
        "edits": 0.05862103817605492,
        "outside": 0.05862103817605492,
        "merge": 0.05862103817605492,
        "checkout": 0.05862103817605492,
        "remind": 0.05862103817605492
      },
      "text": "= \".\", publish: bool = True): ... @app.command() def update(path: str = \".\", event: str = \"commit\", diff_base: str = \"origin/main\"): ... @app.command() def regenerate(sections: str = \"\", full: bool = False): ... ``` **FastAPI (optional service mode)** * `POST /analyze` * `POST /generate?sections=arch,quickstart` * `POST /publish` * `GET /status/{run_id}` --- ## 11) Change Impact Matrix (examples) | Changed Path Pattern | Sections to Rebuild | Notes | | ------------------------------------ | ---------------------------- | --------------------------------------- | | `pom.xml`, `build.gradle*` | build\\_and\\_test, quickstart | Recompute build commands | | `requirements.txt`, `pyproject.toml` | build\\_and\\_test, quickstart | Update install steps | | `Dockerfile`, `k8s/**` | deployment | Publish container changes | | `src/**`, `app/**`, `cmd/**` | features, architecture | If entrypoint changed, update intro too | | `docs/**` | all (patch) | Prefer doc-driven | | `README.md` | none (unless empty) | Prevent loops | --- ## 12) Post-Processing Rules * Headings start at `#` for title then `##` for sections. * Add **auto ToC** (<= level 3). * Validate code blocks (` ```bash`, ` ```python`). * Convert absolute GitHub links to relative where possible. * Ensure **idempotency**: only edit between managed markers: * `<!-- docgen:begin:architecture -->` \u2026 `<!-- docgen:end:architecture -->` --- ## 13) Git & CI Integration ### Local * **pre-commit**: forbid direct README edits outside markers (optional). * **post-merge / post-checkout**: remind",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#11",
      "vector": {
        "possible": 0.11162911443718952,
        "ensure": 0.05581455721859476,
        "idempotency": 0.05581455721859476,
        "only": 0.16744367165578428,
        "edit": 0.05581455721859476,
        "between": 0.05581455721859476,
        "managed": 0.05581455721859476,
        "markers": 0.11162911443718952,
        "docgen": 0.22325822887437904,
        "begin": 0.05581455721859476,
        "architecture": 0.11162911443718952,
        "end": 0.05581455721859476,
        "13": 0.05581455721859476,
        "git": 0.11162911443718952,
        "ci": 0.11162911443718952,
        "integration": 0.05581455721859476,
        "local": 0.16744367165578428,
        "pre": 0.05581455721859476,
        "commit": 0.05581455721859476,
        "forbid": 0.05581455721859476,
        "direct": 0.05581455721859476,
        "readme": 0.05581455721859476,
        "edits": 0.05581455721859476,
        "outside": 0.05581455721859476,
        "optional": 0.16744367165578428,
        "post": 0.16744367165578428,
        "merge": 0.05581455721859476,
        "checkout": 0.11162911443718952,
        "remind": 0.05581455721859476,
        "to": 0.05581455721859476,
        "run": 0.05581455721859476,
        "update": 0.16744367165578428,
        "github": 0.11162911443718952,
        "gitlab": 0.05581455721859476,
        "bitbucket": 0.05581455721859476,
        "on": 0.05581455721859476,
        "push": 0.05581455721859476,
        "pr": 0.2790727860929738,
        "1": 0.11162911443718952,
        "repo": 0.11162911443718952,
        "2": 0.16744367165578428,
        "event": 0.05581455721859476,
        "diff": 0.11162911443718952,
        "base": 0.05581455721859476,
        "base_sha": 0.05581455721859476,
        "3": 0.05581455721859476,
        "if": 0.16744367165578428,
        "changes": 0.05581455721859476,
        "open": 0.05581455721859476,
        "with": 0.05581455721859476,
        "labeled": 0.05581455721859476,
        "docs": 0.11162911443718952,
        "auto": 0.05581455721859476,
        "tokenless": 0.05581455721859476,
        "mode": 0.05581455721859476,
        "created": 0.05581455721859476,
        "from": 0.05581455721859476,
        "a": 0.05581455721859476,
        "app": 0.05581455721859476,
        "bot": 0.05581455721859476,
        "account": 0.05581455721859476,
        "14": 0.05581455721859476,
        "quality": 0.05581455721859476,
        "gates": 0.05581455721859476,
        "evaluation": 0.05581455721859476,
        "consistency": 0.05581455721859476,
        "checks": 0.05581455721859476,
        "commands": 0.11162911443718952,
        "exist": 0.05581455721859476,
        "in": 0.11162911443718952,
        "ports": 0.05581455721859476,
        "env": 0.05581455721859476,
        "vars": 0.05581455721859476,
        "match": 0.05581455721859476,
        "configs": 0.05581455721859476,
        "no": 0.11162911443718952,
        "hallucinations": 0.05581455721859476,
        "reject": 0.05581455721859476,
        "new": 0.05581455721859476,
        "facts": 0.05581455721859476,
        "not": 0.05581455721859476,
        "found": 0.11162911443718952,
        "signals": 0.05581455721859476,
        "rag": 0.11162911443718952,
        "style": 0.05581455721859476,
        "concise": 0.05581455721859476,
        "paragraphs": 0.05581455721859476,
        "actionable": 0.05581455721859476,
        "filler": 0.05581455721859476,
        "marketing": 0.05581455721859476,
        "scorecard": 0.05581455721859476,
        "0": 0.05581455721859476,
        "100": 0.05581455721859476,
        "coverage": 0.05581455721859476,
        "of": 0.11162911443718952,
        "required": 0.05581455721859476,
        "sections": 0.05581455721859476,
        "30": 0.05581455721859476,
        "buildability": 0.05581455721859476,
        "quick": 0.05581455721859476,
        "start": 0.05581455721859476,
        "20": 0.11162911443718952,
        "link": 0.05581455721859476,
        "validity": 0.05581455721859476,
        "10": 0.16744367165578428,
        "alignment": 0.05581455721859476,
        "w": 0.05581455721859476,
        "change": 0.05581455721859476,
        "set": 0.05581455721859476,
        "lint": 0.05581455721859476,
        "reviewer": 0.05581455721859476,
        "feedback": 0.05581455721859476,
        "loop": 0.05581455721859476,
        "15": 0.05581455721859476,
        "security": 0.05581455721859476,
        "privacy": 0.05581455721859476,
        "llm": 0.11162911443718952,
        "and": 0.05581455721859476,
        "embedding": 0.05581455721859476,
        "models": 0.05581455721859476,
        "respect": 0.05581455721859476,
        "gitignore": 0.05581455721859476,
        "configurable": 0.05581455721859476,
        "exclude_paths": 0.05581455721859476,
        "never": 0.05581455721859476,
        "index": 0.05581455721859476,
        "large": 0.05581455721859476,
        "binaries": 0.05581455721859476,
        "secret": 0.11162911443718952,
        "files": 0.05581455721859476,
        "simple": 0.05581455721859476,
        "scan": 0.05581455721859476,
        "block": 0.05581455721859476,
        "16": 0.05581455721859476,
        "mvp": 0.05581455721859476,
        "plan": 0.05581455721859476,
        "weeks": 0.05581455721859476,
        "suggested": 0.05581455721859476,
        "breakdown": 0.05581455721859476,
        "core": 0.05581455721859476,
        "path": 0.05581455721859476,
        "cli": 0.05581455721859476,
        "scanner": 0.05581455721859476,
        "language": 0.05581455721859476,
        "build": 0.05581455721859476,
        "analyzers": 0.05581455721859476,
        "python": 0.05581455721859476,
        "java": 0.05581455721859476,
        "node": 0.05581455721859476,
        "prompt": 0.05581455721859476,
        "builder": 0.05581455721859476,
        "runner": 0.05581455721859476,
        "ollama": 0.05581455721859476,
        "adapter": 0.05581455721859476,
        "processor": 0.05581455721859476,
        "publisher": 0.05581455721859476,
        "lite": 0.05581455721859476,
        "embed": 0.05581455721859476
      },
      "text": "possible. * Ensure **idempotency**: only edit between managed markers: * `<!-- docgen:begin:architecture -->` \u2026 `<!-- docgen:end:architecture -->` --- ## 13) Git & CI Integration ### Local * **pre-commit**: forbid direct README edits outside markers (optional). * **post-merge / post-checkout**: remind to run `docgen update` (optional). ### CI (GitHub/GitLab/Bitbucket) * On push/PR: 1. Checkout repo. 2. `docgen update --event pr --diff-base $BASE_SHA` 3. If changes \u2192 open/update PR with labeled `docs:auto`. * Tokenless mode possible if PR created from a GitHub App/bot account. --- ## 14) Quality Gates & Evaluation * **Consistency checks**: commands exist in repo; ports/env vars match configs. * **No hallucinations**: reject new facts not found in signals/RAG. * **Style**: concise paragraphs, actionable commands, no filler marketing. * **Scorecard** (0\u2013100): * Coverage of required sections (30) * Buildability of quick start (20) * Link validity (10) * Diff alignment w/ change set (20) * Lint (10) * Reviewer feedback loop (10) --- ## 15) Security & Privacy * **Local only** LLM and embedding models. * Respect `.gitignore` + configurable `exclude_paths`. * Never index large binaries/secret files. * Optional simple **secret scan**; block if found. --- ## 16) MVP Plan (2 weeks suggested breakdown) 1. **Core path**: CLI, Scanner, Language+Build analyzers (Python/Java/Node), Prompt Builder, Local LLM runner (Ollama adapter), Post-processor, Git Publisher (PR). 2. **RAG Lite**: embed only `/docs`,",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#12",
      "vector": {
        "simple": 0.058823529411764705,
        "secret": 0.058823529411764705,
        "scan": 0.058823529411764705,
        "block": 0.058823529411764705,
        "if": 0.058823529411764705,
        "found": 0.058823529411764705,
        "16": 0.058823529411764705,
        "mvp": 0.058823529411764705,
        "plan": 0.058823529411764705,
        "2": 0.17647058823529413,
        "weeks": 0.058823529411764705,
        "suggested": 0.058823529411764705,
        "breakdown": 0.058823529411764705,
        "1": 0.11764705882352941,
        "core": 0.058823529411764705,
        "path": 0.058823529411764705,
        "cli": 0.058823529411764705,
        "scanner": 0.058823529411764705,
        "language": 0.058823529411764705,
        "build": 0.17647058823529413,
        "analyzers": 0.058823529411764705,
        "python": 0.17647058823529413,
        "java": 0.058823529411764705,
        "node": 0.058823529411764705,
        "prompt": 0.058823529411764705,
        "builder": 0.058823529411764705,
        "local": 0.058823529411764705,
        "llm": 0.058823529411764705,
        "runner": 0.058823529411764705,
        "ollama": 0.058823529411764705,
        "adapter": 0.058823529411764705,
        "post": 0.058823529411764705,
        "processor": 0.058823529411764705,
        "git": 0.058823529411764705,
        "publisher": 0.058823529411764705,
        "pr": 0.11764705882352941,
        "rag": 0.058823529411764705,
        "lite": 0.058823529411764705,
        "embed": 0.058823529411764705,
        "only": 0.058823529411764705,
        "docs": 0.058823529411764705,
        "existing": 0.058823529411764705,
        "readme": 0.11764705882352941,
        "top": 0.058823529411764705,
        "20": 0.058823529411764705,
        "largest": 0.058823529411764705,
        "source": 0.058823529411764705,
        "files": 0.058823529411764705,
        "heads": 0.058823529411764705,
        "3": 0.058823529411764705,
        "triggers": 0.058823529411764705,
        "single": 0.058823529411764705,
        "commit": 0.058823529411764705,
        "mode": 0.11764705882352941,
        "as": 0.11764705882352941,
        "stretch": 0.058823529411764705,
        "4": 0.058823529411764705,
        "templates": 0.11764705882352941,
        "8": 0.058823529411764705,
        "sections": 0.058823529411764705,
        "jinja2": 0.23529411764705882,
        "managed": 0.058823529411764705,
        "markers": 0.058823529411764705,
        "5": 0.058823529411764705,
        "config": 0.058823529411764705,
        "docgen": 0.058823529411764705,
        "yml": 0.058823529411764705,
        "minimal": 0.11764705882352941,
        "17": 0.17647058823529413,
        "example": 0.058823529411764705,
        "section": 0.11764705882352941,
        "template": 0.058823529411764705,
        "architecture": 0.23529411764705882,
        "j2": 0.11764705882352941,
        "project_name": 0.11764705882352941,
        "is": 0.058823529411764705,
        "structured": 0.058823529411764705,
        "ascii": 0.058823529411764705,
        "_architecture": 0.058823529411764705,
        "key": 0.058823529411764705,
        "components": 0.11764705882352941,
        "for": 0.11764705882352941,
        "comp": 0.17647058823529413,
        "in": 0.058823529411764705,
        "name": 0.058823529411764705,
        "summary": 0.058823529411764705,
        "endfor": 0.058823529411764705,
        "data": 0.058823529411764705,
        "flow": 0.058823529411764705,
        "data_flow": 0.058823529411764705,
        "generated": 0.058823529411764705,
        "from": 0.058823529411764705,
        "detected": 0.058823529411764705,
        "signals": 0.058823529411764705,
        "signals_summary": 0.058823529411764705,
        "frame": 0.058823529411764705,
        "composed": 0.058823529411764705,
        "intro": 0.058823529411764705,
        "features": 0.17647058823529413,
        "include": 0.058823529411764705,
        "quick": 0.058823529411764705,
        "start": 0.058823529411764705,
        "quickstart": 0.058823529411764705,
        "configuration": 0.11764705882352941,
        "test": 0.058823529411764705,
        "build_and_test": 0.11764705882352941,
        "deployment": 0.17647058823529413,
        "troubleshooting": 0.11764705882352941,
        "faq": 0.11764705882352941,
        "license": 0.11764705882352941,
        "18": 0.058823529411764705,
        "snippets": 0.058823529411764705,
        "change": 0.058823529411764705,
        "impact": 0.058823529411764705,
        "heuristic": 0.058823529411764705,
        "section_rules": 0.058823529411764705,
        "pom": 0.058823529411764705,
        "xml": 0.058823529411764705,
        "gradle": 0.058823529411764705,
        "requirements": 0.058823529411764705,
        "txt": 0.058823529411764705,
        "pyproject": 0.058823529411764705,
        "toml": 0.058823529411764705,
        "package": 0.058823529411764705,
        "json": 0.058823529411764705,
        "dockerfile": 0.058823529411764705,
        "k8s": 0.058823529411764705,
        "src": 0.11764705882352941,
        "app": 0.11764705882352941,
        "cmd": 0.11764705882352941,
        "def": 0.058823529411764705,
        "sections_from_diff": 0.058823529411764705,
        "paths": 0.058823529411764705,
        "list": 0.058823529411764705,
        "str": 0.11764705882352941,
        "set": 0.11764705882352941,
        "out": 0.058823529411764705
      },
      "text": "simple **secret scan**; block if found. --- ## 16) MVP Plan (2 weeks suggested breakdown) 1. **Core path**: CLI, Scanner, Language+Build analyzers (Python/Java/Node), Prompt Builder, Local LLM runner (Ollama adapter), Post-processor, Git Publisher (PR). 2. **RAG Lite**: embed only `/docs`, existing `README`, top 20 largest source files\u2019 heads. 3. **Triggers**: single \u201ccommit\u201d mode; PR mode as stretch. 4. **Templates**: 8 sections, Jinja2; managed markers. 5. **Config**: `.docgen.yml` minimal. --- ## 17) Example Templates ### 17.1 Section Template (Jinja2 \u2014 architecture.j2) ```jinja2 ## Architecture {{ project_name }} is structured as: ``` {{ ascii\\_architecture }} ``` **Key components** {% for comp in components %} - **{{ comp.name }}** \u2014 {{ comp.summary }} {% endfor %} **Data flow** {{ data_flow }} > Generated from detected signals: {{ signals_summary }} ``` ### 17.2 README Frame (composed) ```jinja2 # {{ project_name }} {{ intro }} ## Features {{ features }} {% include \"architecture.j2\" %} ## Quick Start {{ quickstart }} ## Configuration {{ configuration }} ## Build & Test {{ build_and_test }} ## Deployment {{ deployment }} ## Troubleshooting {{ troubleshooting }} ## FAQ {{ faq }} ## License {{ license }} ``` --- ## 18) Minimal Python Snippets **Change impact heuristic** ```python SECTION_RULES = [ (\"build_and_test\", [\"pom.xml\",\"build.gradle\",\"requirements.txt\",\"pyproject.toml\",\"package.json\"]), (\"deployment\", [\"Dockerfile\",\"k8s/\"]), (\"architecture\", [\"src/\",\"app/\",\"cmd/\"]), (\"features\", [\"src/\",\"app/\",\"cmd/\"]), ] def sections_from_diff(paths: list[str]) -> set[str]: out = set() for section,",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#13",
      "vector": {
        "faq": 0.04432422071779363,
        "license": 0.08864844143558726,
        "18": 0.04432422071779363,
        "minimal": 0.04432422071779363,
        "python": 0.13297266215338088,
        "snippets": 0.04432422071779363,
        "change": 0.04432422071779363,
        "impact": 0.04432422071779363,
        "heuristic": 0.04432422071779363,
        "section_rules": 0.08864844143558726,
        "build_and_test": 0.04432422071779363,
        "pom": 0.08864844143558726,
        "xml": 0.08864844143558726,
        "build": 0.13297266215338088,
        "gradle": 0.08864844143558726,
        "requirements": 0.04432422071779363,
        "txt": 0.04432422071779363,
        "pyproject": 0.04432422071779363,
        "toml": 0.04432422071779363,
        "package": 0.08864844143558726,
        "json": 0.08864844143558726,
        "deployment": 0.04432422071779363,
        "dockerfile": 0.04432422071779363,
        "k8s": 0.04432422071779363,
        "architecture": 0.04432422071779363,
        "src": 0.13297266215338088,
        "app": 0.13297266215338088,
        "cmd": 0.13297266215338088,
        "features": 0.04432422071779363,
        "def": 0.08864844143558726,
        "sections_from_diff": 0.04432422071779363,
        "paths": 0.08864844143558726,
        "list": 0.04432422071779363,
        "str": 0.26594532430676177,
        "set": 0.08864844143558726,
        "out": 0.13297266215338088,
        "for": 0.2216211035889681,
        "section": 0.08864844143558726,
        "patterns": 0.13297266215338088,
        "in": 0.2216211035889681,
        "if": 0.2216211035889681,
        "any": 0.04432422071779363,
        "p": 0.13297266215338088,
        "pat": 0.08864844143558726,
        "startswith": 0.04432422071779363,
        "add": 0.04432422071779363,
        "return": 0.13297266215338088,
        "or": 0.08864844143558726,
        "intro": 0.08864844143558726,
        "fall": 0.04432422071779363,
        "back": 0.04432422071779363,
        "to": 0.08864844143558726,
        "uncertain": 0.04432422071779363,
        "managed": 0.04432422071779363,
        "markers": 0.08864844143558726,
        "patch": 0.04432422071779363,
        "replace_block": 0.04432422071779363,
        "md": 0.2216211035889681,
        "key": 0.13297266215338088,
        "new": 0.08864844143558726,
        "start": 0.1772968828711745,
        "f": 0.13297266215338088,
        "docgen": 0.1772968828711745,
        "begin": 0.04432422071779363,
        "end": 0.2216211035889681,
        "and": 0.04432422071779363,
        "pre": 0.08864844143558726,
        "rest": 0.08864844143558726,
        "split": 0.08864844143558726,
        "1": 0.08864844143558726,
        "_": 0.04432422071779363,
        "post": 0.08864844143558726,
        "n": 0.08864844143558726,
        "insert": 0.04432422071779363,
        "missing": 0.04432422071779363,
        "19": 0.04432422071779363,
        "open": 0.04432422071779363,
        "questions": 0.04432422071779363,
        "trade": 0.04432422071779363,
        "offs": 0.04432422071779363,
        "embeddings": 0.04432422071779363,
        "use": 0.04432422071779363,
        "a": 0.13297266215338088,
        "tiny": 0.04432422071779363,
        "local": 0.04432422071779363,
        "model": 0.08864844143558726,
        "vs": 0.08864844143558726,
        "rule": 0.04432422071779363,
        "based": 0.04432422071779363,
        "retrieval": 0.04432422071779363,
        "mvp": 0.04432422071779363,
        "tree": 0.04432422071779363,
        "sitter": 0.04432422071779363,
        "adds": 0.04432422071779363,
        "power": 0.04432422071779363,
        "but": 0.04432422071779363,
        "increases": 0.04432422071779363,
        "footprint": 0.04432422071779363,
        "gate": 0.04432422071779363,
        "behind": 0.04432422071779363,
        "flag": 0.04432422071779363,
        "pr": 0.08864844143558726,
        "author": 0.04432422071779363,
        "bot": 0.04432422071779363,
        "account": 0.04432422071779363,
        "developer": 0.04432422071779363,
        "token": 0.04432422071779363,
        "decide": 0.04432422071779363,
        "per": 0.04432422071779363,
        "environment": 0.04432422071779363,
        "markdown": 0.04432422071779363,
        "diffs": 0.04432422071779363,
        "keep": 0.04432422071779363,
        "sections": 0.04432422071779363,
        "atomic": 0.04432422071779363,
        "minimize": 0.04432422071779363,
        "noisy": 0.04432422071779363,
        "prs": 0.04432422071779363,
        "20": 0.04432422071779363,
        "example": 0.04432422071779363,
        "yml": 0.04432422071779363,
        "mixed": 0.04432422071779363,
        "repo": 0.04432422071779363,
        "yaml": 0.04432422071779363,
        "llm": 0.04432422071779363,
        "runner": 0.04432422071779363,
        "ollama": 0.04432422071779363,
        "llama3": 0.04432422071779363,
        "8b": 0.04432422071779363,
        "instruct": 0.04432422071779363,
        "temperature": 0.04432422071779363,
        "0": 0.04432422071779363,
        "15": 0.04432422071779363,
        "readme": 0.04432422071779363,
        "style": 0.04432422071779363,
        "comprehensive": 0.04432422071779363,
        "publish": 0.04432422071779363,
        "mode": 0.04432422071779363,
        "branch_prefix": 0.04432422071779363,
        "analyzers": 0.04432422071779363,
        "enabled": 0.04432422071779363,
        "language": 0.04432422071779363,
        "dependencies": 0.04432422071779363,
        "exclude_paths": 0.04432422071779363,
        "git": 0.04432422071779363,
        "node_modules": 0.04432422071779363,
        "dist": 0.04432422071779363,
        "target": 0.04432422071779363,
        "ci": 0.04432422071779363,
        "watched_globs": 0.04432422071779363
      },
      "text": "faq }} ## License {{ license }} ``` --- ## 18) Minimal Python Snippets **Change impact heuristic** ```python SECTION_RULES = [ (\"build_and_test\", [\"pom.xml\",\"build.gradle\",\"requirements.txt\",\"pyproject.toml\",\"package.json\"]), (\"deployment\", [\"Dockerfile\",\"k8s/\"]), (\"architecture\", [\"src/\",\"app/\",\"cmd/\"]), (\"features\", [\"src/\",\"app/\",\"cmd/\"]), ] def sections_from_diff(paths: list[str]) -> set[str]: out = set() for section, patterns in SECTION_RULES: if any(p for p in paths for pat in patterns if p.startswith(pat)): out.add(section) return out or {\"intro\"} # fall back to intro if uncertain ``` **Managed markers (patch)** ```python def replace_block(md: str, key: str, new: str) -> str: start = f\"<!-- docgen:begin:{key} -->\" end = f\"<!-- docgen:end:{key} -->\" if start in md and end in md: pre, rest = md.split(start, 1) _, post = rest.split(end, 1) return f\"{pre}{start}\\n{new}\\n{end}{post}\" return md # or insert markers if missing ``` --- ## 19) Open Questions / Trade-offs * **Embeddings**: Use a tiny local model vs. rule-based retrieval for MVP? * **Tree-sitter**: Adds power but increases footprint\u2014gate behind a flag. * **PR author**: Bot account vs. developer token\u2014decide per environment. * **Markdown diffs**: Keep sections atomic to minimize noisy PRs. --- ## 20) Example `.docgen.yml` for a Mixed Repo ```yaml llm: runner: \"ollama\" model: \"llama3:8b-instruct\" temperature: 0.15 readme: style: \"comprehensive\" publish: mode: \"pr\" branch_prefix: \"docgen/\" analyzers: enabled: [language, build, dependencies, patterns] exclude_paths: [\".git/\", \"node_modules/\", \"dist/\", \"target/\"] ci: watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" -",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    },
    {
      "id": "spec/spec.md#14",
      "vector": {
        "runner": 0.07715167498104596,
        "ollama": 0.1543033499620919,
        "model": 0.07715167498104596,
        "llama3": 0.07715167498104596,
        "8b": 0.07715167498104596,
        "instruct": 0.07715167498104596,
        "temperature": 0.07715167498104596,
        "0": 0.07715167498104596,
        "15": 0.07715167498104596,
        "readme": 0.1543033499620919,
        "style": 0.1543033499620919,
        "comprehensive": 0.07715167498104596,
        "publish": 0.07715167498104596,
        "mode": 0.07715167498104596,
        "pr": 0.1543033499620919,
        "branch_prefix": 0.07715167498104596,
        "docgen": 0.23145502494313785,
        "analyzers": 0.1543033499620919,
        "enabled": 0.07715167498104596,
        "language": 0.07715167498104596,
        "build": 0.1543033499620919,
        "dependencies": 0.07715167498104596,
        "patterns": 0.07715167498104596,
        "exclude_paths": 0.07715167498104596,
        "git": 0.07715167498104596,
        "node_modules": 0.07715167498104596,
        "dist": 0.07715167498104596,
        "target": 0.07715167498104596,
        "ci": 0.07715167498104596,
        "watched_globs": 0.07715167498104596,
        "src": 0.07715167498104596,
        "app": 0.07715167498104596,
        "cmd": 0.07715167498104596,
        "pom": 0.1543033499620919,
        "xml": 0.1543033499620919,
        "gradle": 0.07715167498104596,
        "package": 0.07715167498104596,
        "json": 0.07715167498104596,
        "requirements": 0.1543033499620919,
        "txt": 0.1543033499620919,
        "dockerfile": 0.07715167498104596,
        "21": 0.07715167498104596,
        "success": 0.07715167498104596,
        "criteria": 0.07715167498104596,
        "poc": 0.07715167498104596,
        "for": 0.07715167498104596,
        "3": 0.07715167498104596,
        "diverse": 0.07715167498104596,
        "repos": 0.07715167498104596,
        "python": 0.07715167498104596,
        "cli": 0.1543033499620919,
        "spring": 0.07715167498104596,
        "boot": 0.07715167498104596,
        "api": 0.07715167498104596,
        "node": 0.07715167498104596,
        "webapp": 0.07715167498104596,
        "init": 0.1543033499620919,
        "produces": 0.07715167498104596,
        "a": 0.23145502494313785,
        "working": 0.07715167498104596,
        "linted": 0.07715167498104596,
        "with": 0.07715167498104596,
        "runnable": 0.07715167498104596,
        "quick": 0.07715167498104596,
        "start": 0.07715167498104596,
        "on": 0.07715167498104596,
        "changing": 0.07715167498104596,
        "or": 0.07715167498104596,
        "updates": 0.07715167498104596,
        "only": 0.07715167498104596,
        "relevant": 0.07715167498104596,
        "sections": 0.07715167498104596,
        "no": 0.07715167498104596,
        "hallucinated": 0.07715167498104596,
        "commands": 0.07715167498104596,
        "links": 0.07715167498104596,
        "and": 0.23145502494313785,
        "badges": 0.07715167498104596,
        "validate": 0.07715167498104596,
        "consistent": 0.07715167498104596,
        "if": 0.07715167498104596,
        "you": 0.1543033499620919,
        "want": 0.07715167498104596,
        "i": 0.07715167498104596,
        "can": 0.1543033499620919,
        "spin": 0.07715167498104596,
        "up": 0.07715167498104596,
        "starter": 0.07715167498104596,
        "repo": 0.07715167498104596,
        "layout": 0.07715167498104596,
        "templates": 0.07715167498104596,
        "simple": 0.07715167498104596,
        "adapter": 0.07715167498104596,
        "so": 0.07715167498104596,
        "drop": 0.07715167498104596,
        "it": 0.07715167498104596,
        "into": 0.07715167498104596,
        "your": 0.07715167498104596,
        "environment": 0.07715167498104596,
        "run": 0.07715167498104596,
        "right": 0.07715167498104596,
        "away": 0.07715167498104596
      },
      "text": "runner: \"ollama\" model: \"llama3:8b-instruct\" temperature: 0.15 readme: style: \"comprehensive\" publish: mode: \"pr\" branch_prefix: \"docgen/\" analyzers: enabled: [language, build, dependencies, patterns] exclude_paths: [\".git/\", \"node_modules/\", \"dist/\", \"target/\"] ci: watched_globs: - \"src/**\" - \"app/**\" - \"cmd/**\" - \"pom.xml\" - \"build.gradle*\" - \"package.json\" - \"requirements.txt\" - \"Dockerfile\" ``` --- ## 21) Success Criteria (POC) * For 3 diverse repos (Python CLI, Spring Boot API, Node webapp): * `docgen init` produces a working, linted README with runnable Quick Start. * On changing `pom.xml` or `requirements.txt`, PR updates only relevant sections. * No hallucinated commands; links and badges validate; style consistent. --- If you want, I can spin up a **starter repo layout** (CLI, analyzers, templates, and a simple Ollama adapter) so you can drop it into your environment and run `docgen init` right away.",
      "metadata": {
        "path": "spec/spec.md",
        "tags": [
          "docs"
        ],
        "hash": "545ae5312ffb25e0ceb94ed03d032eebe8e6a154448ee08a24c9884dadb1d9cb"
      }
    }
  ]
}